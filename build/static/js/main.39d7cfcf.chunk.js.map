{"version":3,"sources":["components/Field/Input.tsx","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","layout/sider/Sider.tsx","layout/sider/index.ts","layout/header/style.ts","layout/header/index.ts","layout/header/Header.tsx","pages/overview/Overview.tsx","components/Placeholders/DataTableSkeleton.tsx","components/Empty/Empty.tsx","components/Empty/index.ts","pages/category/CategoryList.tsx","pages/category/CategoryDetail.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/brand/AddNewBrand.tsx","pages/brand/QuickEdit.tsx","pages/brand/BrandList.tsx","components/Notification/Notification.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","components/Field/InputSmall.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/QuickEdit.tsx","pages/product/ProductList.tsx","pages/tag/QuickEdit.tsx","pages/tag/TagList.tsx","pages/tag/AddNewTag.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/pages/PagesList.tsx","pages/pages/AddNewPage.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/QuickEdit.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderProductItem.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteInfo.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","layout/content/Content.tsx","layout/content/index.ts","App.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","className","Item","validateStatus","help","style","borderRadius","isObjectEmpty","Object","keys","length","manupulateURL","url","urlOptions","params","placeHolders","split","map","currentValue","includes","actualPlaceholderValue","replace","param","slice","indexOf","join","converter","resData","data","formatedData","category","id","_id","key","description","cover","config","thumbnail","subCount","subCategory","children","subCat","title","isNext","page","next","convertedData","product","regularPrice","price","offerPrice","parseInt","unit","cartItems","items","cartItem","medium","quantity","cartKey","updated","status","pricing","tag","brand","customer","firstName","lastName","country","city","email","phone","created","theme","added","components","component","item","image","img","region","pickUpLocation","countryCode","countryName","time","charge","labels","alt","caption","original","availableStock","minimumStock","cat","b","tags","baseURL","success","inserted","productCount","count","billingAddress","total","totalPrice","products","date_created","date","paymentMethod","generalFormat","dataMap","line_items","paymentItems","number","text","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","options","format","api","apiMap","server","method","credentials","headers","Headers","body","JSON","stringify","fetch","res","formattedData","error","connector","dataFetchReducer","state","action","isLoading","done","payload","Error","useFetch","dependencies","initialData","initialState","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","validationSchema","Yup","shape","username","min","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","Sider","Layout","Header","Content","Footer","SubMenu","Menu","withRouter","props","useState","collapsed","setcollapsed","width","boxShadow","border","collapsible","onCollapse","selectable","mode","icon","PieChartOutlined","to","GoldOutlined","RadarChartOutlined","TagsOutlined","TagOutlined","BranchesOutlined","CarOutlined","ShoppingCartOutlined","TeamOutlined","MailOutlined","FileOutlined","DesktopOutlined","SlidersOutlined","SettingOutlined","HeaderStyle","styled","Title","h2","marginRight","href","marginLeft","fontWeight","color","padding","cursor","LogoutOutlined","Overview","textAlign","marginTop","DataTable","speed","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","metadata","github","filename","EmptyComponent","display","justifyContent","alignItems","Empty","PRESENTED_IMAGE_SIMPLE","Column","Table","Search","ColumnGroup","MyTable","setcategoryList","history","visible","setvisible","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","handleDeleteCategory","deleteCategoryRes","message","notification","CheckCircleOutlined","newCategoryList","filter","size","dataSource","dataIndex","render","record","objectFit","align","placement","EditOutlined","onConfirm","okText","cancelText","DeleteOutlined","categoryList","categoryState","handleCategoryListFetch","isSubCategory","categories","setCategories","addNewCategoryVisible","setAddNewCategoryVisible","enterButton","placeholder","onSearch","toLowerCase","handleSearch","PlusOutlined","DataTableSkeleton","CategoryDetail","autoplay","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","MediaLibrary","setmyImages","isModalOpenForImages","setmyThumbnailImage","isModalOpenForThumbnail","myImages","myThumbnailImage","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","getImageList","imageListRes","handleUpload","formData","FormData","forEach","file","append","reqwest","processData","withCredentials","uploadProps","multiple","onRemove","filelist","index","newFileList","splice","beforeUpload","handleAddToSelectedList","find","newselectedImages","handleUpdateSubmit","captoin","updateImageLibraryItemRes","positionInImageList","updatedItem","assign","updateImageList","openErrorNotification","getisUpdateSubmitButtonDisabled","top","onOk","onCancel","bodyStyle","defaultActiveKey","tab","listType","background","FileImageOutlined","ArrowUpOutlined","marginBottom","CheckOutlined","overlay","ImageItemMenu","EllipsisOutlined","fontSize","Option","Select","AddNewCategory","addCategoryState","handleAddCategoryFetch","isparentCategoryChecked","setisparentcategoryChecked","setisModalOpenForThumbnail","setisModalOpenForImages","selectedParentId","setselectedParentId","coverImageId","setCoverImageId","imagesIds","parent","addCategoryRes","resetForm","onSwitchChange","checked","handleCancel","onChangeSelect","okButtonProps","htmlType","defaultChecked","showSearch","optionFilterProp","filterOption","input","option","InfoCircleOutlined","newImages","handleImagesDelete","CloseOutlined","FileImageFilled","QuickEdit","updateCategoryState","handleUpdateCategoryFetch","updateCategoryRes","positionInTag","updateCategoryList","AddNewBrand","brandList","setBrandList","addBrandState","handleAddBrandFetch","visibleMedia","setvisibleMedia","addBrandRes","updatebrandState","handleUpdateBrandFetch","updateBrandRes","positionInBrand","updateBrandList","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","brandState","handlebrandListFetch","brands","setBrands","ExclamationCircleOutlined","CheckableTag","Tag","Tags","setTagIds","setoptions","tagState","handleTagListFetch","selectedTags","setSelectedTags","searchValue","setsearchValue","tagListRes","tagOptions","setTags","borderColor","console","log","categoryNames","newOptions","nextSelectedTags","t","selectedCategoryIds","selectedcategory","Brands","setBrandId","setSelectedBrandId","brandListRes","brandOptions","onFocus","onBlur","val","Categories","setcategoryIds","categoryListRes","checkable","onSelect","selectedKeys","info","onCheck","checkedKeys","treeData","defaultExpandAll","checkStrictly","allowClear","Complete","setAttributeList","attributeList","attribute","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","updateAttributeList","manupulatedOptions","inputValue","suggestedOption","toUpperCase","InputSmall","Pricing","handleAddPricing","regular","offer","setprice","available","minimum","stock","setStock","handlePriceChange","handleStockChange","Attributes","minHeight","preventDefault","priceItem","model","AddNewProduct","productList","setProductList","addProductState","handleAddProductFetch","categoryids","tagIds","brandId","setPricing","addProductRes","err","i","animated","tabPosition","newPricing","handleDeletePricing","textDecoration","overflowCount","updateProductState","handleUpdateProductFetch","updateProductRes","positionInAttribute","updateProductList","handleDeleteProductFetch","handleDeleteProduct","deleteProductRes","newProductList","paddingTop","overflow","tableLayout","onHeaderRow","column","productState","handleProductListFetch","setProducts","tagList","setTagList","updateTagState","updateTagRes","updateTagList","CoolInput","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","TagList","addTagState","handleAddTagFetch","addTagRes","newTagList","AddNewTag","max","address1","address2","zipCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","customers","setCustomers","AddNewCustomer","lastModified","push","AddNewPage","EditableTagGroup","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","setState","showInput","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","React","Component","AttributeList","AddAttributeValues","setOrderList","orderList","updateOrderState","handleUpdateOrderFetch","addRegionRes","updateRegionList","handleDeleteOrderFetch","handleDeleteRegion","deleteOrderRes","newOrderList","orderState","handleRegionListFetch","regions","setOrders","CartOverLayCartItem","productId","productDetailState","handleProductFetch","setProduct","setIsLoading","getAndSetProduct","handleChangeQuantity","AddNewOrderSummary","ShopOutlined","AddNewOrderProductItem","setCustomerId","setProductIds","selectedOpions","setselectedOptions","selectItems","o","Step","Steps","additionalInfo","steps","content","AddNewOrder","addOrderState","handleOrderFetch","productIds","current","setCurrent","variation","isTrue","UserOutlined","CustomersId","AddProducts","CaretLeftOutlined","CaretRightOutlined","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","Set","SaveOutlined","updateComponentByAddingItem","componentId","destroyOnClose","FileAddOutlined","Panel","Collapse","genExtra","updateComponentByDeleting","event","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","handleUpdateComponentFetch","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","manupulatedLocalComponentForTheReq","updatedItems","manupulatedUpdatedItems","manupulatedUpdatedItem","updateComponentRes","accordion","bordered","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","footer","themeList","setThemeList","addThemeState","handleAddthemeFetch","setselectedThemeTypeValue","loadingThumnail","setLoadingThumbnail","imageUrl","setImageUrl","setname","addThemeRes","path","uploadButton","LoadingOutlined","showUploadList","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","InboxOutlined","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","getSiteSettings","addSiteInfoRes","invoiceTitle","address","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","handlSiteInvoiceSettingsFetch","updateInvoiceRes","AdminSiteInfo","SiteInfoInvoice","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","minimumOrder","deliveryCharge","setdeliveryCharge","handleDeliveryChargeChange","AddNewRegion","regionList","setRegionList","addRegionState","handleRegionFetch","handleAddDeliveryCharge","updateRegionState","handleUpdateRegionFetch","handleDeleteRegioFetch","deleteRegionRes","newRegionList","regionState","setRegions","hasSider","exact","BrandList","OrderList","Delivery","ManageThemes","SiteInfo","App","actionShouldBlock","meta","async","blocking","actionFinished","reducer","utils","productPositionInCart","cart","newCartItem","isSelectedForCheckout","reducerMap","Accept","isomorphicFetch","then","Promise","resolve","reject","response","parseStatus","json","createReducer","tempArrayWithOutOldProduct","productPositionInWishList","wishList","wishlist","ADD","queryPositionInQueryList","queryList","query","types","currentItem","oldQuery","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","isAuthenticated","redirectAfterLogin","cartReducer","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","whitelist","pReducer","persistReducer","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.39d7cfcf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    addonBefore?: string;\r\n    required?: boolean\r\n}\r\n\r\nconst Demo = ({ required, addonBefore, label, type, defaultValue, value, onChange, disabled, isError, errorString, name }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                // hasFeedback={true}\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                // hasFeedback validateStatus=\"success\"\r\n                help={errorString}\r\n\r\n            // rules={[{ required: true }]}\r\n            >\r\n\r\n                <Input\r\n                    required={required}\r\n                    type={type}\r\n                    addonBefore={addonBefore}\r\n                    style={{\r\n                        borderRadius: '0'\r\n                    }}\r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName' />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","const isObjectEmpty = value => {\r\n  return !value || !Object.keys(value).length > 0;\r\n};\r\n\r\nconst manupulateURL = (url, urlOptions = {}) => {\r\n  if (isObjectEmpty(urlOptions)) return url;\r\n\r\n  const params = urlOptions.params || {};\r\n  const placeHolders = urlOptions.placeHolders || {};\r\n\r\n\r\n\r\n  return url\r\n    .split('/')\r\n    .map(currentValue => {\r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders)) {\r\n        let actualPlaceholderValue = placeHolders[currentValue.replace(':', '')];\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (currentValue.includes('?')) {\r\n        currentValue = currentValue\r\n          .split('&')\r\n          .map(currentValue => {\r\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\r\n            return currentValue.replace(param, params[param] || '');\r\n          })\r\n          .join('&');\r\n      }\r\n      return currentValue;\r\n    })\r\n    .join('/');\r\n};\r\n\r\nexport default manupulateURL;\r\n","import config from '../config.json';\r\nimport apiMap from '../apiMap.json';\r\nimport Converter from './converter.js';\r\n\r\n// import utils\r\nimport { manupulateURL } from './utils';\r\n\r\nlet converter = new Converter();\r\n\r\nclass Connector {\r\n  //TODO\r\n  constructor() {\r\n    this.options = {};\r\n  }\r\n\r\n  /**\r\n   * @method request sends request to server\r\n   * this function determines api url and method from config.json\r\n   * and sends request and converts recieved data to general format\r\n   * @param {String} item\r\n   * @param {String} format\r\n   * @param {Object} data optional\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async request(item, format = 'json', options = {}) {\r\n    let api = apiMap[config.server][item]; //api url & method\r\n\r\n    // configuring options for fetch request\r\n\r\n\r\n\r\n    this.options = {\r\n      ...this.options,\r\n      method: api.method,\r\n      credentials: 'include',\r\n      headers: new Headers({\r\n        ...(item !== 'addTheme' && {\r\n          'Content-Type': 'application/json',\r\n        }),\r\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        ...(options.headers && {\r\n          ...options.headers,\r\n        }),\r\n      }),\r\n\r\n      ...(item !== 'addTheme' ? {\r\n        body: api.method !== 'get' ? JSON.stringify(options.body) : null,\r\n      } : {\r\n          body: api.method !== 'get' ? options.body : null,\r\n\r\n        }),\r\n\r\n    };\r\n\r\n    //*replace variable parts in url with actual data if params exists |or| just return the url\r\n\r\n    const url = manupulateURL(api.url, options.urlOptions);\r\n\r\n    // change the formate to text if the server is wooCommerce\r\n    if (config['server'] === 'wooCommerce') {\r\n      // format = 'text';\r\n    }\r\n\r\n    try {\r\n      let res = await fetch(config.baseURL + url, this.options);\r\n\r\n      if (res.status >= 200 && res.status < 300) {\r\n        let formattedData = await res[format](); //await res.json(), res.text()\r\n        if (formattedData.status === 'error') {\r\n          throw formattedData.error;\r\n        }\r\n\r\n        let convertedData = await converter[item](formattedData); //convert recieved data to app general format\r\n        return convertedData;\r\n      } else {\r\n        let error = await res[format]();\r\n\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n\r\n      throw err;\r\n      //TODO: breakdown errors\r\n    }\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import config from '../config.json';\r\nimport dataMap from '../dataMap.json';\r\n\r\nclass Converter {\r\n\t/**\r\n   * @public\r\n   * @method categoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\tname: category.name && category.name,\r\n\t\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\t\tsubCount:\r\n\t\t\t\t\t\tcategory.subCategory.length === 1\r\n\t\t\t\t\t\t\t? category.subCategory[0] && category.subCategory[0].name ? category.subCategory.length : 0\r\n\t\t\t\t\t\t\t: category.subCategory.length,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method categorySelectist convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync categorySelectist(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\ttitle: category.name && category.name,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\ttitle: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail ? subCat.cover.thumbnail : \"\"}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCart(resData) {\r\n\t\tconst cartItems = resData.items || [];\r\n\t\tconst convertedData =\r\n\t\t\tcartItems.length > 0 &&\r\n\t\t\tcartItems.map((cartItem) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: cartItem._id || '',\r\n\t\t\t\t\tname: cartItem.name && cartItem.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${cartItem.cover.medium}`,\r\n\t\t\t\t\tregularPrice: cartItem.price && cartItem.price['regular'],\r\n\t\t\t\t\tofferPrice: cartItem.price && cartItem.price['offer'],\r\n\t\t\t\t\tquantity: cartItem.quantity,\r\n\t\t\t\t\turl: cartItem.url,\r\n\t\t\t\t\tcartKey: cartItem.cartKey\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addtoCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addtoCart(resData) {\r\n\t\tlet data = false;\r\n\r\n\t\tif (resData['inserted']) {\r\n\t\t\tdata = {\r\n\t\t\t\tid: resData['inserted']._id || '',\r\n\t\t\t\tname: resData['inserted'].name && resData['inserted'].name,\r\n\t\t\t\tcover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\r\n\t\t\t\tregularPrice: resData['inserted'].price && resData['inserted'].price['regular'],\r\n\t\t\t\tofferPrice: resData['inserted'].price && resData['inserted'].price['offer'],\r\n\t\t\t\tquantity: resData['inserted'].quantity,\r\n\t\t\t\turl: resData['inserted'].url,\r\n\t\t\t\tcartKey: resData['inserted'].cartKey\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromCart(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData) {\r\n\t\t\tconvertedData = true;\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCartItem convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCartItem(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData['updated']) {\r\n\t\t\tconvertedData = {\r\n\t\t\t\tquantity: resData.updated['quantity']\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method clearCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync clearCart(data) {\r\n\t\tif (data && data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getWishlist(resData) {\r\n\t\t// const cartItems = resData.items || [];\r\n\t\tconst convertedData = resData;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeAllWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeAllWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productSearch convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productSearch(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((product) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${product.cover.thumbnail}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t\tdescription: tag.description && tag.description\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((brand) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: brand._id || '',\r\n\t\t\t\t\tkey: brand._id || '',\r\n\t\t\t\t\tname: brand.name && brand.name,\r\n\t\t\t\t\tdescription: brand.description && brand.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${brand.cover ? brand.cover.thumbnail : ''}`\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method customerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync customerList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((customer) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: customer._id || '',\r\n\t\t\t\t\tkey: customer._id || '',\r\n\t\t\t\t\tfirstName: customer.firstName || '',\r\n\t\t\t\t\tlastName: customer.lastName || '',\r\n\t\t\t\t\tcountry: customer.country || '',\r\n\t\t\t\t\tcity: customer.city || '',\r\n\t\t\t\t\temail: customer.email || '',\r\n\t\t\t\t\tphone: customer.phone || '',\r\n\t\t\t\t\tcreated: customer.created || ''\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method themeList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync themeList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((theme) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: theme._id || '',\r\n\t\t\t\t\tkey: theme._id || '',\r\n\t\t\t\t\tname: theme.name || '',\r\n\t\t\t\t\tadded: theme.added || '',\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method componentList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync componentList(resData) {\r\n\t\tconst components = resData.components || {};\r\n\r\n\t\tif (components && components.length > 0) {\r\n\t\t\tconst convertedData =\r\n\t\t\t\tcomponents.length > 0 &&\r\n\t\t\t\tcomponents.map((component) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: component._id || '',\r\n\t\t\t\t\t\tkey: component._id || '',\r\n\t\t\t\t\t\tname: component.name || '',\r\n\t\t\t\t\t\titems: component.items.length > 0 ? component.items.map(item => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\t\timage: item.image.length > 0 ? item.image.map(img => {\r\n\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail ? img.thumbnail : \"\"}`,\r\n\t\t\t\t\t\t\t\t\t\tid: img._id,\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method regionList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync regionList(data) {\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((region) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: region._id || '',\r\n\t\t\t\t\tkey: region._id || '',\r\n\t\t\t\t\tname: region.name || '',\r\n\t\t\t\t\tpickUpLocation: region.pickUpLocation || '',\r\n\t\t\t\t\tcountry: region.country || '',\r\n\t\t\t\t\tcountryCode: region.countryCode || '',\r\n\t\t\t\t\tcountryName: region.countryName || '',\r\n\t\t\t\t\tcity: region.city || '',\r\n\t\t\t\t\ttime: region.time || '',\r\n\t\t\t\t\tcharge: region.charge || {}\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method attributeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync attributeList(data) {\r\n\t\tconst convertedData = Object.keys(data).length > 0 && data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync ImageListFromLibrary(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((image) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: image._id || '',\r\n\t\t\t\t\tname: image.name && image.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${image.thumbnail}`,\r\n\t\t\t\t\tadded: image.added,\r\n\t\t\t\t\ttitle: image.title,\r\n\t\t\t\t\tlabels: image.labels,\r\n\t\t\t\t\talt: image.alt,\r\n\t\t\t\t\tcaption: image.caption\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method countryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync countryList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((country) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: country._id || '',\r\n\t\t\t\t\tname: country.name && country.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getDeliveryCharge convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getDeliveryCharge(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method cityList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync cityList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((city) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: city._id || '',\r\n\t\t\t\t\tname: city.name && city.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method forAnalytics convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync forAnalytics(resData) {\r\n\t\treturn resData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync productDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover.original}`,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tminimumStock: data.minimumStock,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\t(data.brand &&\r\n\t\t\t\t\t\tdata.brand.length > 0 &&\r\n\t\t\t\t\t\tdata.brand.map((b) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: b._id,\r\n\t\t\t\t\t\t\t\tname: b.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.brand,\r\n\t\t\t\ttags:\r\n\t\t\t\t\t(data.tags &&\r\n\t\t\t\t\t\tdata.tags.length > 0 &&\r\n\t\t\t\t\t\tdata.tags.map((tag) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: tag._id,\r\n\t\t\t\t\t\t\t\tname: tag.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.tags,\r\n\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => `${config.baseURL}${img.medium}`)) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetailById convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productDetailById(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover.thumbnail && data.cover.thumbnail}`,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\t(data.brand &&\r\n\t\t\t\t\t\tdata.brand.length > 0 &&\r\n\t\t\t\t\t\tdata.brand.map((b) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: b._id,\r\n\t\t\t\t\t\t\t\tname: b.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.brand,\r\n\t\t\t\ttags:\r\n\t\t\t\t\t(data.tags &&\r\n\t\t\t\t\t\tdata.tags.length > 0 &&\r\n\t\t\t\t\t\tdata.tags.map((tag) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: tag._id,\r\n\t\t\t\t\t\t\t\tname: tag.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.tags,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => `${config.baseURL}${img.medium}`)) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateProduct(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateComponent(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateTag(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateBrand(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCategory(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method addTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method addComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method logout convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logout(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method activeTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync activeTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deletetheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deletetheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method deleteComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deleteComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method siteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync siteSettings(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateSiteSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateSiteSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updateInvoiceSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateInvoiceSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync invoiceSettingsDetail(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryDetail(data) {\r\n\t\tconst convertedData = {\r\n\t\t\tid: data.id || data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description,\r\n\t\t\tproductCount: data.count || data.productCount,\r\n\t\t\tsubCategory:\r\n\t\t\t\tdata.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name']\r\n\t\t\t\t\t? data.subCategory.map((subCat) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.medium}` : ''\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [],\r\n\t\t\timage:\r\n\t\t\t\t(data.image && data.image.length > 0 && data.image.map((img) => `${config.baseURL}${img.medium}`)) || []\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method createOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync createOrder(data) {\r\n\t\t//map props\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signup convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signup(data) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signin(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method login convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync login(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addImageToLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addImageToLibrary(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method changePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync changePassword(data) {\r\n\t\tif (data['success']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentUserOrders(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\tdate_created: item.date,\r\n\t\t\t\t\t\tpaymentMethod: item['payment']['paymentMethod']\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\tconvertedData = {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentUserOrders(data) {\r\n\t\t//map props\r\n\t\tlet generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...generalFormat,\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.total,\r\n\t\t\t\t\t\tline_items: item.line_items,\r\n\t\t\t\t\t\tdate_created: item.date_created\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method payment convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync payment(data) {\r\n\t\tconst paymentItems = data.items;\r\n\t\tif (!paymentItems.length > 0) {\r\n\t\t\treturn paymentItems;\r\n\t\t}\r\n\r\n\t\tconst items = paymentItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tname: item.name || '',\r\n\t\t\t\tnumber: item.text || ''\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method welcome convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync welcome(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method logo convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logo(data) {\r\n\t\tconst src = data.image && data.image.length > 0 ? `${config['baseURL']}${data.image[0]['original']}` : '';\r\n\t\treturn {\r\n\t\t\tsrc,\r\n\t\t\ttarget: data.target\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method hotline convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync hotline(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method navLinks convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync navLinks(data) {\r\n\t\tconst navLinkItems = data.items;\r\n\t\tif (!navLinkItems.length > 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst items = navLinkItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttext: item.name || item.text,\r\n\t\t\t\ttarget: item.target\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method slider convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync slider(data) {\r\n\t\tconst sliderItems = data.items;\r\n\t\tif (!sliderItems.length > 0) {\r\n\t\t\treturn sliderItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method sliderRight convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync sliderRight(data) {\r\n\t\tconst sliderRightItems = data.items;\r\n\t\tif (!sliderRightItems.length > 0) {\r\n\t\t\treturn sliderRightItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderRightItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method address convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync address(data) {\r\n\t\treturn {\r\n\t\t\tname: data.name,\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Links convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Links(data) {\r\n\t\tconst servicesItems = data.items;\r\n\t\tif (!servicesItems.length > 0) {\r\n\t\t\treturn servicesItems;\r\n\t\t}\r\n\r\n\t\tconst items = servicesItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Account convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Account(data) {\r\n\t\tconst accountItems = data.items;\r\n\t\tif (!accountItems.length > 0) {\r\n\t\t\treturn accountItems;\r\n\t\t}\r\n\r\n\t\tconst items = accountItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'About Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync 'About Us'(data) {\r\n\t\tconst aboutUsItems = data.items;\r\n\t\tif (!aboutUsItems.length > 0) {\r\n\t\t\treturn aboutUsItems;\r\n\t\t}\r\n\r\n\t\tconst items = aboutUsItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n}\r\n\r\nexport default Converter;\r\n","import { useEffect, useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype Tdependecies = any[] | [];\r\ntype TItem = string;\r\ntype IFormat = string | undefined;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n          done: true,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useFetch = (\r\n  dependencies: Tdependecies = [],\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  options?: any,\r\n  format?: IFormat\r\n): IState => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_INIT' });\r\n      try {\r\n        // @ts-ignore\r\n        let data = await connector.request(item, format, options);\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, dependencies);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype TItem = string;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n        },\r\n        done: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useHandleFetch = (\r\n  initialData: TInitialData,\r\n  item: TItem\r\n): [IState, (values: any) => void] => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  const handlePost = async (options: any) => {\r\n    dispatch({ type: 'FETCH_INIT' });\r\n\r\n    try {\r\n      // @ts-ignore\r\n      let data = await connector.request(item, 'json', options);\r\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n      return initialData;\r\n    }\r\n  };\r\n\r\n  return [state, handlePost];\r\n};\r\n\r\nexport default useHandleFetch;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tusername: Yup.string()\r\n\t\t.label('Username')\r\n\t\t.required('Username is required')\r\n\t\t.min(3, 'Username must have at least 3 characters'),\r\n\r\n\tpassword: Yup.string().label('Password').required('Password is required'),\r\n});\r\n\r\nconst initialValues = {\r\n\tusername: '',\r\n\tpassword: '',\r\n};\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst QuickEdit = ({ }: Props) => {\r\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleLoginFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tusername: values.username,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.username || !values.password || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmaxWidth: '400px',\r\n\t\t\t\t\t\t\tmargin: '20px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Username'\r\n\t\t\t\t\t\t\t\tvalue={values.username}\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tisError={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('username');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import Login from './Login';\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch, withRouter } from 'react-router-dom';\r\nimport { Layout, Menu, Upload, message } from 'antd';\r\n\r\n\r\nimport {\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    TagOutlined,\r\n    BranchesOutlined,\r\n    GoldOutlined,\r\n    FilterOutlined,\r\n    TagsOutlined,\r\n    CarOutlined,\r\n    ShoppingCartOutlined,\r\n    MailOutlined,\r\n    SettingOutlined,\r\n    InboxOutlined,\r\n    SlidersOutlined,\r\n    DesktopOutlined,\r\n    RadarChartOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderComponent = (props: any) => {\r\n    const [collapsed, setcollapsed] = useState(false);\r\n    const onCollapse = (collapsed: any) => {\r\n        // console.log(collapsed);\r\n        setcollapsed(collapsed);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Sider\r\n            width={260}\r\n            style={{\r\n                boxShadow: '7px 0 60px rgba(0,0,0,.05)',\r\n                border: 'none'\r\n            }}\r\n            collapsible collapsed={collapsed} onCollapse={onCollapse} theme='light'>\r\n\r\n            <Menu selectable={true} mode='inline'>\r\n                <Menu.Item key='1' icon={<PieChartOutlined />}>\r\n                    <Link to='/admin'>Dashboard</Link>\r\n                </Menu.Item>\r\n\r\n                {/* <SubMenu key='sub1' icon={<TagOutlined />} title='Category'>\r\n\t\t\t\t\t<Menu.Item key='2'>\r\n\t\t\t\t\t\t<Link to='/category'>List Categories</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                {/* <SubMenu key='sub2' icon={<BranchesOutlined />} title='Brand'>\r\n\r\n\t\t\t\t\t<Menu.Item key='5'>\r\n\t\t\t\t\t\t<Link to='/brand'>List Brand</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                <SubMenu\r\n                    key='sub3'\r\n                    icon={<GoldOutlined />}\r\n                    title='Product'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<RadarChartOutlined />}\r\n                        key='6'>\r\n                        <Link to='/admin/product'>List Products</Link>\r\n                    </Menu.Item>\r\n\r\n\r\n\r\n\r\n                    <Menu.Item key='9' icon={<TagsOutlined />}>\r\n                        <Link to='/admin/tag'>Tags</Link>\r\n\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='2' icon={<TagOutlined />}>\r\n                        <Link to='/admin/category'>Categories</Link>\r\n                    </Menu.Item>\r\n\r\n\r\n                    <Menu.Item key='5' icon={<BranchesOutlined />}>\r\n                        <Link to='/admin/brand'>Brands</Link>\r\n                    </Menu.Item>\r\n\r\n\r\n\r\n                </SubMenu>\r\n\r\n                {/* <Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t<Link to='/tag'>Tags</Link>\r\n\t\t\t\t</Menu.Item> */}\r\n\r\n                <Menu.Item key='10' icon={<CarOutlined />}>\r\n                    <Link to='/admin/delivery'>Delivery</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\r\n                    <Menu.Item key='11'>\r\n                        <Link to='/admin/order'>List Orders</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='12'>\r\n                        <Link to='/admin/order/new'>Add Order</Link>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='13' icon={<TeamOutlined />}>\r\n                    <Link to='/admin/customer'>Customer</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub5' icon={<MailOutlined />} title='Email'>\r\n                    <Menu.Item key='14'>STMP Configuration</Menu.Item>\r\n                    <Menu.Item key='15'>Auto emails</Menu.Item>\r\n                    <Menu.Item key='16'>Compose Email</Menu.Item>\r\n                    <Menu.Item key='177'>Sent emails</Menu.Item>\r\n                </SubMenu>\r\n\r\n                <SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\r\n                    <Menu.Item key='17'>\r\n                        <Link to='/admin/page/new'> Add new Page</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='18'>\r\n                        <Link to='/admin/page'> List Pages</Link>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n\r\n                <Menu.Item\r\n                    icon={<DesktopOutlined />}\r\n                    key='20'>\r\n                    <Link to='/admin/settings/themes'>Themes</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key='23'\r\n                    icon={<SlidersOutlined />}\r\n                >\r\n                    <Link to='/admin/settings/components'>Components</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\r\n                    <Menu.Item key='19'>\r\n                        <Link to='/admin/settings/siteInfo'>Site information</Link>\r\n                    </Menu.Item>\r\n\r\n                    {/* <Menu.Item key='21'>\r\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n                    <Menu.Item key='22'>\r\n                        <Link to='/admin/settings/invoice'>Invoice</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n};\r\n\r\nexport default withRouter(SiderComponent);\r\n","import Sider from \"./Sider\";\r\nexport default Sider; ","import styled from 'styled-components';\r\nimport { Layout } from 'antd';\r\nconst { Header } = Layout;\r\n\r\n\r\nconst HeaderStyle = styled(Header)`\r\nbackground: '#fff !important',\r\nheight: '60px',\r\ndisplay: 'flex',\r\njustifyContent: 'space-between',\r\nboxShadow: '0 0.46875rem 2.1875rem rgba(8,10,37,.03), 0 0.9375rem 1.40625rem rgba(8,10,37,.03), 0 0.25rem 0.53125rem rgba(8,10,37,.05), 0 0.125rem 0.1875rem rgba(8,10,37,.03)',\r\nzIndex: 10,\r\ntransition: ' all .2s',\r\nalignItems: 'center',\r\nalignContent: 'center'\r\n`\r\n\r\nconst Title = styled.h2`\r\ncolor: '#0072EA', marginTop: '10px', marginLeft: '-20px'\r\n`\r\n\r\n\r\nexport {\r\n    HeaderStyle,\r\n    Title\r\n}","import Header from \"./Header\";\r\nexport default Header; ","import React from 'react';\r\n\r\n\r\n// import hooks \r\n// import { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\n// import { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\n\r\n// import libraries \r\nimport { LogoutOutlined } from '@ant-design/icons';\r\n\r\n\r\n// import styles\r\nimport { HeaderStyle as Header, Title } from \"./style\";\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst HeaderComponent = (props: Props) => {\r\n\r\n    return (\r\n        <Header\r\n\r\n        >\r\n            <Title>\r\n                Admin\r\n            </Title>\r\n\r\n\r\n            <div\r\n                style={{\r\n                    marginRight: '-28px'\r\n                }}>\r\n\r\n                <a href='/admin/auth/logout'>\r\n                    <span style={{\r\n                        marginLeft: '10px',\r\n                        fontWeight: 600,\r\n                        borderRadius: '25px',\r\n                        color: '#1890ff',\r\n                        padding: '2px 20px',\r\n                        cursor: 'pointer'\r\n                    }}>\r\n                        <LogoutOutlined />\r\n                        <span style={{\r\n                            marginLeft: '10px',\r\n\r\n                        }}>\r\n                            logout\r\n                    </span>\r\n                    </span>\r\n                </a>\r\n\r\n            </div>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent; \r\n","import React from 'react';\r\n// import Login from '../auth/login';\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{/* <Login /> */}\r\n\t\t\t<h2 style={{\r\n\t\t\t\ttextAlign: 'center',\r\n\t\t\t\tmarginTop: '100px'\r\n\t\t\t}}>\r\n\t\t\t\tComing Soon\r\n\t\t\t</h2>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DataTable = (props: any) => (\r\n\t<ContentLoader\r\n\t\tspeed={0.5}\r\n\t\twidth={1300}\r\n\t\theight={400}\r\n\t\tviewBox='0 0 1300 400'\r\n\t\tbackgroundColor='#f3f3f3'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='203' r='12' />\r\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='265' r='12' />\r\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='323' r='12' />\r\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='386' r='12' />\r\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='37' cy='97' r='11' />\r\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n\t\t<circle cx='1316' cy='88' r='11' />\r\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n\t\t<circle cx='77' cy='96' r='11' />\r\n\t</ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n\tname: 'Mohd Arif Un',\r\n\tgithub: 'arif-un',\r\n\tdescription: 'Data Table skeleton',\r\n\tfilename: 'DataTable'\r\n};\r\n\r\nexport default DataTable;\r\n","import React from 'react'\r\nimport { Empty } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n    height?: number\r\n}\r\n\r\nconst EmptyComponent = ({\r\n    title = 'No Data found',\r\n    height = 300\r\n}: Props) => {\r\n    return (\r\n        <div style={{\r\n            height: height,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyComponent\r\n","import Empty from \"./Empty\";\r\nexport default Empty; ","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {AddNewCategory,QuickEdit} from \"../category\"\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n\r\n      // console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            // width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                // onClick={() => history.push(`/category/${record.name}`)}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Desctription\" \r\n           dataIndex=\"desctription\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n       \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  \r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState); \r\n\r\n  \r\n\r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Categories\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{categoryState.done && \r\n    <AddNewCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryState.data}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React from 'react';\r\nimport { Carousel } from 'antd';\r\n\r\ninterface Props {}\r\n\r\nconst CategoryDetail = (props: Props) => {\r\n\treturn (\r\n\t\t<div className='categoryDetailContainer'>\r\n\t\t\t<div className='categoryDetailContainer__item'>\r\n\t\t\t\t<div className='categoryDetailContainer__item-carousel'>\r\n\t\t\t\t\t<Carousel autoplay>\r\n\t\t\t\t\t\t<div className='categoryDetailContainer__item-carousel-item'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='category img'\r\n\t\t\t\t\t\t\t\tsrc='https://images-na.ssl-images-amazon.com/images/I/41Leu3gBUFL.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>2</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>3</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>4</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Carousel>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='categoryDetailContainer__item' />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CategoryDetail;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name}: Props) => {\r\n    return (\r\n        <>\r\n            <h3 className='inputFieldLabel'>\r\n                {label}\r\n            </h3>\r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                  <TextArea\r\n                      disabled={disabled}\r\n                      onChange={onChange}\r\n                      value={value}\r\n                      name={name}\r\n                    className='inputclassName'\r\n                     rows={4} /> \r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\n// import libraries\r\nimport { Upload, Button, Modal, Tabs, message, notification, Popconfirm, Menu, Dropdown, } from 'antd';\r\nimport reqwest from 'reqwest';\r\nimport { Formik } from 'formik';\r\nimport Moment from 'react-moment';\r\n// import * as Yup from 'yup';\r\n\r\n\r\nimport {\r\n\tInboxOutlined,\r\n\tCheckOutlined,\r\n\tArrowUpOutlined,\r\n\tCheckCircleOutlined,\r\n\tEllipsisOutlined,\r\n\tFileImageOutlined,\r\n\tDeleteOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tvisible: boolean;\r\n\tsetvisible: (isVisible: any) => void;\r\n\tsetmyImages?: any;\r\n\tsetmyThumbnailImage?: any;\r\n\tisModalOpenForThumbnail?: boolean;\r\n\tisModalOpenForImages?: boolean;\r\n\tmyImages?: any;\r\n\tmyThumbnailImage?: any\r\n}\r\n\r\n\r\nconst MediaLibrary = ({\r\n\tvisible,\r\n\tsetvisible,\r\n\tsetmyImages,\r\n\tisModalOpenForImages,\r\n\tisModalOpenForThumbnail,\r\n\tsetmyThumbnailImage,\r\n\tmyImages,\r\n\tmyThumbnailImage,\r\n\t...rest\r\n}: Props) => {\r\n\r\n\tconst [fileList, setfileList] = useState([]);\r\n\tconst [uploading, setuploading] = useState(false);\r\n\tconst [selectedimages, setselectedImages] = useState([]);\r\n\tconst [activeImageItem, setactiveImageItem] = useState(false);\r\n\tconst [addMediaLibrary, handleAddMediaLibraryFetch] = useHandleFetch({}, 'addImageToLibrary');\r\n\tconst [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch({}, 'updateImageFromLibrary');\r\n\tconst [imageListFromLibraryState, handleImageListFromLibraryFetch] = useHandleFetch({}, 'ImageListFromLibrary');\r\n\tconst [deleteImageFromLibraryFetchState, handleDeleteImageFromLibraryFetch] = useHandleFetch({}, 'deleteImageFromLibrary');\r\n\tconst [localImageList, setLocalImageList] = useState([]);\r\n\tconst [isDoneOk, setisDoneOk] = useState(false);\r\n\r\n\r\n\tconst handleDeleteImageFromImageLibrary = async (id) => {\r\n\r\n\t\tconst deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteImageLibraryItemRes && deleteImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Imaged Deleted');\r\n\t\t\tconst newImageList = localImageList.filter(item => item.id !== id);\r\n\t\t\tsetLocalImageList(newImageList);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst getImageList = async () => {\r\n\t\tconst imageListRes = await handleImageListFromLibraryFetch({});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (imageListRes) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetLocalImageList(imageListRes);\r\n\t\t}\r\n\r\n\t\t// console.log('imageListRes', imageListRes);\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetImageList();\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\tconst handleUpload = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tfileList.forEach(file => {\r\n\t\t\tformData.append('images', file, file.name);\r\n\t\t});\r\n\r\n\t\tsetuploading(true);\r\n\r\n\t\t//  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n\t\t// \tbody: formData\r\n\t\t//   });\r\n\r\n\t\t//   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\t\t// You can use any AJAX library you like\r\n\t\treqwest({\r\n\t\t\turl: `${config.baseURL}/admin/image/add`,\r\n\t\t\tmethod: 'post',\r\n\t\t\tprocessData: false,\r\n\t\t\tdata: formData,\r\n\t\t\twithCredentials: true,\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tsetfileList([]);\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tgetImageList();\r\n\t\t\t\tmessage.success('upload successfully.');\r\n\t\t\t},\r\n\t\t\terror: () => {\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tmessage.error('upload failed.');\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\r\n\t\tif (isModalOpenForImages) {\r\n\t\t\tsetmyImages(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetmyThumbnailImage(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk && isModalOpenForImages) {\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t\t}\r\n\t}, [myImages, isDoneOk])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk) {\r\n\t\t\t// console.log('myThumbnail', myThumbnailImage)\r\n\t\t\t// setselectedImages([...myThumbnailImage]);\r\n\t\t}\r\n\t}, [myThumbnailImage, isDoneOk])\r\n\r\n\tconst uploadProps = {\r\n\t\t//  listType: 'picture',\r\n\t\tmultiple: true,\r\n\t\tonRemove: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst index = fileList.indexOf(file);\r\n\t\t\t\tconst newFileList = fileList.slice();\r\n\t\t\t\tnewFileList.splice(index, 1);\r\n\t\t\t\treturn newFileList;\r\n\t\t\t})\r\n\r\n\t\t},\r\n\t\tbeforeUpload: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\treturn [...fileList, file]\r\n\t\t\t})\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tfileList,\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst handleAddToSelectedList = (image, id) => {\r\n\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (!isImageExist) {\r\n\t\t\t\tsetselectedImages([image, ...selectedimages]);\r\n\t\t\t\tsetactiveImageItem(image);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst newselectedImages = selectedimages.filter(image => image.id !== id);\r\n\t\t\t\tsetselectedImages(newselectedImages);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetselectedImages([image, ...selectedimages]);\r\n\t\t\tsetactiveImageItem(image);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst getisSelectedImage = (id) => {\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (isImageExist) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleUpdateSubmit = async (values, actions) => {\r\n\t\tconst updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t\talt: values.alt,\r\n\t\t\t\ttitle: values.title,\r\n\t\t\t\tcaptoin: values.captoin,\r\n\t\t\t\tlabels: values.labels,\r\n\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateImageLibraryItemRes && updateImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Image Updated');\r\n\r\n\t\t\tconst positionInImageList = () => {\r\n\t\t\t\treturn localImageList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInImageList();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, localImageList[index], { ...updateImageLibraryItemRes });\r\n\t\t\tconst updateImageList = [...localImageList.slice(0, index), updatedItem, ...localImageList.slice(index + 1)];\r\n\t\t\tsetLocalImageList(updateImageList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t}\r\n\r\n\r\n\tconst getisUpdateSubmitButtonDisabled = (values, isValid) => {\r\n\t\t// if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\r\n\t\t// \treturn true; \r\n\t\t// }\r\n\t\tif (!isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// console.log('selectedimages', selectedimages)\r\n\r\n\tconst ImageItemMenu = (handleDeleteImageFromImageLibrary, id, handleAddToSelectedList, image) => {\r\n\t\treturn (\r\n\t\t\t(\r\n\t\t\t\t<Menu>\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleAddToSelectedList(image, id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<CheckOutlined />}>\r\n\t\t\t\t\t\tSelect\r\n\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleDeleteImageFromImageLibrary(id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<DeleteOutlined color='red' />}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t</Menu >\r\n\t\t\t)\r\n\t\t)\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: '40px'\r\n\t\t\t\t}}\r\n\t\t\t\ttitle=\"Media Library\"\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\twidth={'80vw'}\r\n\t\t\t\tbodyStyle={{\r\n\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\tpadding: '0'\r\n\t\t\t\t}}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<div className='mediaLibraryBodyContainer'>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-left'>\r\n\r\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"2\" type=\"card\" size='middle'>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Upload New Media\" key=\"1\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-header'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Dragger\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='upload-list-inline'\r\n\t\t\t\t\t\t\t\t\t\t\tlistType='picture'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: '#fff',\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '8px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t{...uploadProps}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-hint'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSupport for a single or bulk upload.\r\n\t\t\t\t\t\t                \t</p>\r\n\t\t\t\t\t\t\t\t\t\t</Dragger>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\tonClick={handleUpload}\r\n\t\t\t\t\t\t\t\t\tdisabled={fileList.length === 0}\r\n\t\t\t\t\t\t\t\t\tloading={uploading}\r\n\t\t\t\t\t\t\t\t\ticon={<ArrowUpOutlined />}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '20px',\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Media Library\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.length > 0\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-left-imageListContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getisSelectedImage(image.id) ? <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : ''}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown overlay={() => ImageItemMenu(handleDeleteImageFromImageLibrary, image.id, handleAddToSelectedList, image)} placement=\"bottomRight\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EllipsisOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}} src={image.cover} alt='img' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done && !(localImageList.length > 0) && (\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Empty title='No Image Found in the library' />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-right'>\r\n\r\n\t\t\t\t\t\t{activeImageItem && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\tonSubmit={(values, actions) => handleUpdateSubmit(values, actions)}\r\n\t\t\t\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t{ ...activeImageItem }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\t\t\t\thandleReset,\r\n\t\t\t\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment Details\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={activeImageItem['cover']} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='imageLibnameText'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['name']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['added']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t5000 X 500\r\n\t\t\t\t\t\t\t\t\t</h5> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteImageFromImageLibrary(activeImageItem['id'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='imageLibdeleteText'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete parmanently\r\n\t\t\t\t\t\t\t\t\t                       </h5>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Alternate Text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.alt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='alt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('alt');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('title');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Caption'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('caption');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='default'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={getisUpdateSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{!activeImageItem && (\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{\r\n\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\tfontSize: \"13px\",\r\n\t\t\t\t\t\t\t\t\tcolor: '#8888'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tSelect an image to preview details\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default MediaLibrary;\r\n","import MediaLibrary from './MediaLibrary';\r\nexport default MediaLibrary;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'addCategory');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tparent: selectedParentId\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Created!');\r\n\r\n\t\t\tsetcategoryList([...categoryList, {\r\n\t\t\t\tid: addCategoryRes['id'] || '',\r\n\t\t\t\tkey: addCategoryRes['id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch defaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetcategoryList?: any;\r\n\tcategoryList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t\tsetcategoryList(updateCategoryList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [addBrandState, handleAddBrandFetch] = useHandleFetch({}, 'addBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleAddBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([...brandList, {\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\t// console.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name && !values.description || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Brand\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tbrandList: any; \r\n\tsetBrandList?: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, brandList, setBrandList }: Props) => {\r\n\tconst [updatebrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateBrandRes = await handleUpdateBrandFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\r\n\t  \r\n\t \t  // @ts-ignore\r\n\t\t   if(updateBrandRes && updateBrandRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInBrand = () => {\r\n\t\t\t\treturn brandList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInBrand();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t  const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t  setBrandList(updateBrandList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\r\n\r\n\t\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space, Tag,Button, Input,Tooltip, Modal, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewBrand from \"./AddNewBrand\"\r\nimport QuickEdit from \"./QuickEdit\"\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch({}, 'deleteBrand');\r\n\r\n\r\n      \r\n\r\n \r\n      const handleDeleteBrand = async (id) => {\r\n        const deleteBrandRes = await handleDeleteBrandFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteBrandRes && deleteBrandRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Brand'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            // width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={cover => (\r\n                <>\r\n                <img src={cover} alt='cover img' style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Brand'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteBrand(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    brandList={data}\r\n    setBrandList={setBrandList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  const [brandList,setBrandList] = useState([]);\r\n\r\n  \r\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setBrands = async () => {\r\n     const brands = await handlebrandListFetch({}); \r\n     // @ts-ignore\r\n     setBrandList(brands); \r\n   }\r\n   setBrands(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(brandState.data.length > 0 ){\r\n      const newBrandList = brandState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setBrandList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search brands..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {brandState.done && brandList.length > 0 && <MyTable \r\n          setBrandList={setBrandList}\r\n        data={brandList} />}\r\n        {brandState.isLoading && <DataTableSkeleton />}\r\n        {brandState.done && !(brandList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '100px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Brands found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n    <AddNewBrand \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible} \r\n          setBrandList={setBrandList}\r\n          brandList={brandList}\r\n          />\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\nimport {\r\n    CheckCircleOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Succeed',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <ExclamationCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nexport {\r\n    openSuccessNotification,\r\n    openErrorNotification\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\nconst tagsData = ['Movies', 'Books', 'Music', 'Sports'];\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    console.log('You are interested in: ', nextSelectedTags);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n\r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Select, Button } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n\tsetBrandId?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [selectedBrandId, setSelectedBrandId] = useState('');\r\n\tconst [brandState, handleTagListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\tfunction onChange(value) {\r\n\t\tsetSelectedBrandId(value);\r\n\t\tsetBrandId(value);\r\n\t\t// console.log(`selected ${value}`);\r\n\t}\r\n\r\n\tfunction onBlur() {\r\n\t\t// console.log('blur');\r\n\t}\r\n\r\n\tfunction onFocus() {\r\n\t\t// console.log('focus');\r\n\t}\r\n\r\n\tfunction onSearch(val) {\r\n\t\t// console.log('search:', val);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setBrands = async () => {\r\n\t\t\tconst brandListRes = await handleTagListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (brandListRes && brandListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst brandOptions = brandListRes.map((brand) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: brand.id,\r\n\t\t\t\t\t\tname: brand.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(brandOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetBrands();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t{brandState.done && !(brandState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No Brand found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{brandState.done && brandState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<Select\r\n\t\t\t\t\tshowSearch\r\n\t\t\t\t\tstyle={{ width: '210px', borderRadius: '6px' }}\r\n\t\t\t\t\tplaceholder='Select a Brand'\r\n\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tonSearch={onSearch}\r\n\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t>\r\n\t\t\t\t\t{brandState.done &&\r\n\t\t\t\t\t\tbrandState.data.length > 0 &&\r\n\t\t\t\t\t\toptions.map((option) => {\r\n\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Select>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categorySelectist');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tsetcategoryIds(checkedKeys);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('categoryState', categoryState);\r\n\tconsole.log('optionsCat', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button>\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n    size?: any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name, size='middle'}: Props) => {\r\n    return (\r\n        <>\r\n        {label && <h3 className='inputFieldLabel-small'>\r\n                {label}\r\n            </h3>}\r\n           \r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            // hasFeedback validateStatus=\"success\"\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                     <Input\r\n                     size={size}\r\n                    allowClear \r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName-small' />\r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\r\n\r\n    const [suggestedOptions, setsuggesteOptions] = useState([]);\r\n    const attributeLisState = useFetch([], [], 'attributeList', {});\r\n\r\n\r\n    const [attributeItem, setAttributeITem] = useState({\r\n        name: attribute.name,\r\n        value: attribute.value\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return attributeList.map(item => item.id).indexOf(attribute.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n        const updateAttributeList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n        setAttributeList(updateAttributeList);\r\n\r\n    }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateAttributeList = attributeList.filter(item => item.id !== attribute.id);\r\n        setAttributeList(updateAttributeList);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (attributeLisState.data && Object.keys(attributeLisState.data).length > 0) {\r\n            const options = Object.keys(attributeLisState.data);\r\n            const manupulatedOptions = options.map(option => {\r\n                return {\r\n                    value: option\r\n                }\r\n            })\r\n            setsuggesteOptions(manupulatedOptions);\r\n        };\r\n    }, [attributeLisState.data]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAttributeSelect = (value) => {\r\n\r\n        if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\r\n            if (attributeLisState.data[value]) {\r\n                setAttributeITem({\r\n                    ...attribute,\r\n                    name: value,\r\n                    value: attributeLisState.data[value]\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n            setAttributeITem({\r\n                ...attribute,\r\n                name: value\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleAttributeValueChange = (e) => {\r\n        setAttributeITem({\r\n            ...attribute,\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div\r\n                key={attribute.id}\r\n                className='addProductGridContainer__item-body-variationCard-item-attribute-item'>\r\n                <div\r\n                    onClick={handleAttributeDelete}\r\n                    className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'>\r\n                    <DeleteOutlined />\r\n                </div>\r\n\r\n                <h3 className='inputFieldLabel-small'>\r\n                    Name\r\n                </h3>\r\n                <AutoComplete\r\n                    value={attribute.name}\r\n                    style={{ width: '100%' }}\r\n                    options={suggestedOptions}\r\n                    placeholder=\"attribute\"\r\n                    onChange={handleAttributeSelect}\r\n                    filterOption={(inputValue, suggestedOption) =>\r\n                        suggestedOption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                    }\r\n                />\r\n\r\n                {attribute.name && (\r\n                    <>\r\n                        <div style={{ marginTop: '10px' }}></div>\r\n                        <InputSmall\r\n                            label='Value'\r\n                            value={attribute.value}\r\n                            name='value'\r\n                            onChange={handleAttributeValueChange}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState } from 'react';\r\nimport Attributes from \"./Attributes\";\r\nimport AddAttributeValues from \"../attribute/AddAttributeValues\";\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { Button } from 'antd';\r\nimport {\r\n\r\n\tPlusOutlined,\r\n\tCheckOutlined\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\thandleAddPricing: any;\r\n}\r\n\r\nconst Pricing = ({\r\n\thandleAddPricing\r\n}: Props) => {\r\n\r\n\tconst [price, setprice] = useState({\r\n\t\tregular: \"\",\r\n\t\toffer: \"\"\r\n\t});\r\n\tconst [stock, setStock] = useState({\r\n\t\tavailable: \"\",\r\n\t\tminimum: \"\"\r\n\t});\r\n\r\n\r\n\tconst [attributeList, setAttributeList] = useState([]);\r\n\r\n\tconst handlePriceChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\r\n\t\tsetprice({\r\n\t\t\t...price,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleStockChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetStock({\r\n\t\t\t...stock,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tconst handleSavePricing = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (attributeList.length > 0) {\r\n\t\t\tconst attribute = {};\r\n\r\n\t\t\tfor (let item of attributeList) {\r\n\t\t\t\tattribute[item['name']] = item['value']\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: attribute\r\n\t\t\t}\r\n\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t\tsetAttributeList([]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: {}\r\n\t\t\t}\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\tsetAttributeList([]);\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst handleAddAttribute = () => {\r\n\t\tsetAttributeList([...attributeList, {\r\n\t\t\tname: '',\r\n\t\t\tvalue: '',\r\n\t\t\tid: `${attributeList.length}`\r\n\t\t}])\r\n\t}\r\n\r\n\r\n\tconst getiCreatePricingIsDisabled = () => {\r\n\t\tif (!price.regular || !stock.available) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n\r\n\t// console.log('attributeList', attributeList);\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='addProductGridContainer__item-body-variationCard'>\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-left'>\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\tPrice\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\tlabel='Regular  *'\r\n\t\t\t\t\t\t\t\t\tvalue={price.regular}\r\n\t\t\t\t\t\t\t\t\tname='regular'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\tlabel='Offer'\r\n\t\t\t\t\t\t\t\t\tvalue={price.offer}\r\n\t\t\t\t\t\t\t\t\tname='offer'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\tlabel='Available  *'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.available}\r\n\t\t\t\t\t\t\t\t\t\tname='available'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\tlabel='Minimum'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.minimum}\r\n\t\t\t\t\t\t\t\t\t\tname='minimum'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-right'>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-attribute'>\r\n\r\n\t\t\t\t\t\t\t\t{attributeList.map(attribute => {\r\n\t\t\t\t\t\t\t\t\treturn <Attributes\r\n\t\t\t\t\t\t\t\t\t\tattribute={attribute}\r\n\t\t\t\t\t\t\t\t\t\tattributeList={attributeList} setAttributeList={setAttributeList} />\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t<Button size='small'\r\n\t\t\t\t\t\t\t\t\tonClick={handleAddAttribute}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: '180px',\r\n\t\t\t\t\t\t\t\t\t\tminHeight: '75px',\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '0px',\r\n\t\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t\t}} type=\"dashed\" icon={<PlusOutlined />}>Add Attribute</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t{/* <Button\r\n          // type=\"primary\"\r\n         \r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button> */}\r\n\r\n\t\t\t<Button\r\n\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginLeft: '10px'\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={handleSavePricing}\r\n\t\t\t\tdisabled={getiCreatePricingIsDisabled()}\r\n\t\t\t\tclassName='btnAddToPrice'\r\n\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd To Pricing\r\n\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Pricing\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\r\n}\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tproductList?: any;\r\n\tsetProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList, setProductList }: Props) => {\r\n\r\n\tconst [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addProduct');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [categoryids, setcategoryIds] = useState([]);\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [brandId, setBrandId] = useState('');\r\n\tconst [pricing, setPricing] = useState([]);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\r\n\t\tconst addProductRes = await handleAddProductFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\tmodel: values.model,\r\n\t\t\t\tunit: values.unit,\r\n\t\t\t\tcategory: categoryids,\r\n\t\t\t\ttags: tagIds,\r\n\t\t\t\tbrand: brandId,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tpricing: pricing,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addProductRes && addProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Product Created');\r\n\r\n\t\t\tsetProductList([...productList, {\r\n\t\t\t\tid: addProductRes['id'] || '',\r\n\t\t\t\tkey: addProductRes['id'] || '',\r\n\t\t\t\tname: addProductRes['name'] || '',\r\n\t\t\t\tdescription: addProductRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addProductRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// openErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addProductState['isLoading']) {\r\n\t\t\tconst error = addProductState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addProductState])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !(pricing.length > 0) || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\tconst handleDeleteFromSelectedImage = () => {\r\n\r\n\t};\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleAddPricing = (priceItem) => {\r\n\r\n\t\tsetPricing([{\r\n\t\t\t...priceItem,\r\n\t\t\tid: pricing.length\r\n\t\t}, ...pricing])\r\n\t\tmessage.info('Product Pricing Added');\r\n\t}\r\n\r\n\r\n\tconst handleDeletePricing = (id) => {\r\n\t\tconst newPricing = pricing.filter(item => item.id !== id);\r\n\t\tsetPricing(newPricing);\r\n\t\tmessage.info('Product Pricing Deleted');\r\n\t}\r\n\r\n\r\n\r\n\tconst isCategoryInValid = () => {\r\n\t\tif (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (categoryids && categoryids.length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Product\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Information\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Pricing\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing handleAddPricing={handleAddPricing} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='d' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tImage\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__category'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCategories\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Select at least one category'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={!(categoryids.length > 0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Categories\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetcategoryIds={setcategoryIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTags\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tags setTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__brand'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBrands\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Brands setBrandId={setBrandId} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\r\n\r\n*/","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n\tnotification.success({\r\n\t\tmessage: 'Product Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetProductList?: any;\r\n\tproductList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, setProductList, productList }: Props) => {\r\n\tconst [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateProductRes = await handleUpdateProductFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\tcategory: category.category,\r\n\t\t\t\tpricing: category.pricing\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateProductRes && updateProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn productList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, productList[index], { ...updateProductRes });\r\n\t\t\tconst updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n\t\t\tsetProductList(updateProductList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { notification, Empty, Table, Badge, Menu, Dropdown, Space, Tag, Button, Input, Tooltip, Popconfirm } from 'antd';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewProduct from \"./AddNewProduct\";\r\nimport QuickEdit from \"./QuickEdit\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n  notification.success({\r\n    message: 'Product Deleted',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setProductList: any;\r\n}\r\n\r\n\r\nconst MyTable = ({ data, setProductList }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteProductState, handleDeleteProductFetch] = useHandleFetch({}, 'deleteProduct');\r\n\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    const deleteProductRes = await handleDeleteProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n      }\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteProductRes && deleteProductRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      const newProductList = data.filter(item => item.id !== id);\r\n      setProductList(newProductList);\r\n    }\r\n\r\n    // console.log('deleteProductRes', deleteProductRes)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        style={{\r\n          paddingTop: '10px',\r\n          borderRadius: '5px !important',\r\n          overflow: 'hidden',\r\n          boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n        }}\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        tableLayout={'auto'}\r\n        onHeaderRow={column => {\r\n          return {\r\n            onClick: () => console.log('fuckitbabybybyby'), // click header row\r\n            style: {\r\n              color: 'red !important'\r\n            }\r\n\r\n          };\r\n        }}\r\n      >\r\n        <Column\r\n          title=\"\"\r\n          dataIndex=\"cover\"\r\n          key=\"id\"\r\n          // width={'100px'}\r\n\r\n          className='classnameofthecolumn'\r\n\r\n          render={cover => (\r\n            <>\r\n              <img src={cover} alt='cover img' style={{\r\n                height: '40px',\r\n                width: '40px',\r\n                objectFit: \"contain\",\r\n                borderRadius: '3px'\r\n              }} />\r\n            </>\r\n          )}\r\n        />\r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={text => (\r\n            <>\r\n              <h4 style={{\r\n                fontWeight: 400,\r\n                color: '#666'\r\n              }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title=\"Offer Price\"\r\n          dataIndex=\"offerPrice\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n\r\n        <Column\r\n          title=\"Price\"\r\n          dataIndex=\"price\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n        <Column\r\n          title=\"Unit\"\r\n          dataIndex=\"unit\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n\r\n          className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n                <Tooltip\r\n\r\n                  placement=\"top\" title='Quick Edit Product'>\r\n                  <span className='iconSize' onClick={() => {\r\n                    setvisible(true)\r\n                    setactiveCategoryForEdit(record);\r\n                  }}>\r\n                    <EditOutlined />\r\n\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n\r\n\r\n\r\n              <Popconfirm\r\n\r\n                onConfirm={() => handleDeleteProduct(record.id)}\r\n                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                <span\r\n                  className='iconSize iconSize-danger'\r\n                >\r\n                  <DeleteOutlined />\r\n                </span>\r\n\r\n              </Popconfirm>\r\n\r\n\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n      {activeCategoryForEdit && <QuickEdit\r\n        productList={data}\r\n        setProductList={setProductList}\r\n        setvisible={setvisible}\r\n        visible={visible}\r\n        category={activeCategoryForEdit} />}\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst ProductList = ({ history }: Props) => {\r\n\r\n\r\n\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  const [productState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\r\n\r\n  useEffect(() => {\r\n    const setProducts = async () => {\r\n      const products = await handleProductListFetch({});\r\n      // @ts-ignore\r\n      setProductList(products);\r\n    }\r\n    setProducts();\r\n  }, [])\r\n\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n  // console.log('productState', productState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if (productState.data.length > 0) {\r\n      const newProductList = productState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n      setProductList(newProductList);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n\r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>\r\n              Products\r\n            </h2>\r\n\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder=\"search products..\"\r\n              onSearch={value => handleSearch(value)}\r\n            // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n      </Button>\r\n\r\n\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {productState.done && productList.length > 0 && <MyTable\r\n            setProductList={setProductList}\r\n            data={productList} />}\r\n          {productState.isLoading && <DataTableSkeleton />}\r\n          {productState.done && !(productList.length > 0) && (\r\n            <div style={{\r\n              marginTop: '200px'\r\n            }}>\r\n              <Empty description='No Products found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {productState.done &&\r\n        <AddNewProduct\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          productList={productState.data}\r\n          setProductList={setProductList}\r\n\r\n\r\n        />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProductList);\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined,EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\ttagList: any; \r\nsetTagList: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateTagRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t \t  // @ts-ignore\r\n\t\t   if(updateTagRes && updateTagRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInTag();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\t  const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\t  setTagList(updateTagList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Tag</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t\t<Formik\r\n\t\t\t\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\t\t\t\tvalidationSchema={validationSchema}\r\n\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t{ ...initialValues }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\thandleReset,\r\n\r\n\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='addproductSection addproductSection-right'>\r\n\r\n\t\t\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t\t\t<div className='categoryListContainer__header'>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t\t\t{/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"search tags..\"\r\n\t\t\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__afterHeader'>\r\n\t\t\t\t\t\t\t{/* <Search\r\n\t\t\t\t\t\t\t\tplaceholder=\"search categories..\"\r\n\t\t\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\t\t\tonSearch={value => console.log(value)}\r\n\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t/> */}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<Empty description='No Tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewTag = (props: Props) => {\r\n    return (\r\n        <div>\r\n            AddNewTag\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewTag\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([...customerList, {\r\n\t\t\t\tid: addCustomerRes['id'] || '',\r\n\t\t\t\tkey: addCustomerRes['id'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewCustomer from \"./AddNewCustomer\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Customer'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"First Name\" \r\n           dataIndex=\"firstName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n         <Column\r\n           title=\"Last Name\" \r\n           dataIndex=\"lastName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              <Moment>\r\n                {text}\r\n              </Moment>\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({}); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Customers\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search customer..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewCustomer \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, {useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal  } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst data = [\r\n\t{\r\n\t\tkey: '1',\r\n\t\ttitle: 'Home Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\r\n\t},\r\n\t{\r\n\t\tkey: '2',\r\n\t\ttitle: 'Product Listing Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\t},\r\n\t{\r\n\t\tkey: '3',\r\n\t\ttitle: 'Dashboard Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\t}\r\n];\r\n\r\n\r\n\r\n\r\n\r\nconst MyTable = () => {\r\n    const [visible,setvisible] = useState(false);   \r\n\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        dataSource={data}>\r\n         \r\n          <Column title=\"Title\" dataIndex=\"title\" key=\"title\" />\r\n          <Column title=\"Created\" dataIndex=\"created\" key=\"created\" />\r\n          <Column title=\"Last Modified\" dataIndex=\"lastModified\" key=\"lastModified\" />\r\n        <Column\r\n          title=\"Action\"\r\n          key=\"action\"\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a onClick={() => setvisible(true)} href='##'>Quick Edit</a>\r\n              <Tooltip placement=\"top\" title='Delete Category'>\r\n              <a href='##'>Delete</a>\r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      <Modal\r\n          title=\"Quick Edit\"\r\n          visible={visible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n        >\r\n          {/* <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p> */}\r\n        </Modal>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst PagesList = ({history}: Props) => {\r\n  \r\n    \r\n\treturn (\r\n\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n            <h2 className='categoryListContainer__header-title'>Pages</h2>\r\n            <Button\r\n          type=\"primary\"\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/page/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            <Search\r\n      placeholder=\"search pages..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    />\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t<MyTable />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default withRouter(PagesList);\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst AddNewPage = (props: Props) => {\r\n\treturn <div>AddNewPage</div>;\r\n};\r\n\r\nexport default AddNewPage;\r\n","import React,{useState} from 'react';\r\nimport { Modal  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\n\r\nimport React from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup","import React, {useState} from 'react';\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\r\n\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddAttributeValues from \"./AddAttributeValues\"\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({data}) => {\r\n    const [visible,setvisible] = useState(false);   \r\n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\tconst handleDeleteCategory = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n      }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n              <Tooltip placement=\"top\" title='Delete Tag'>\r\n            \r\n\r\n             <span \r\n             className='iconSize iconSize-danger'\r\n             onClick={() => handleDeleteCategory(record.id)}\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n            \r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n     \r\n\r\n\t\t{activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\t// console.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst AttributeList = ({  }: Props) => {\r\n\tconst tagState = useFetch([], [], 'brandList', {\r\n\t\turlOptions: {\r\n\t\t  params: {\r\n\t\t\tisSubCategory: true,\r\n\t\t  },\r\n\t\t},\r\n\t  });\r\n\r\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t  urlOptions: {\r\n\t\t\t  placeHolders: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t  body: {\r\n\t\t\t  name: values.name,\r\n\t\t\t  description: values.description,\r\n\t\t  },\r\n\t\t});\r\n\t  \r\n\t\tactions.setSubmitting(false);\r\n\t  };\r\n\t  \r\n \r\n  \r\n  \r\n  \r\n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\t  if(!values.name || !values.description || !isValid){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  return false; \r\n\t\t}\r\n\r\n\r\n\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t   <div style={{\r\n\t\t\t\t   marginTop: '0px'\r\n\t\t\t   }}></div>\r\n\t\t\t  \r\n\r\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\r\n\t\t\t\t\r\n\t\t\t\t<AddAttributeValues />\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t  display: 'block',\r\n\t\t\t\t\t\t  marginTop: '20px'\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n                <div className='addproductSection addproductSection-right'> \r\n\r\n\t\t\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n          {/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            {/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\r\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttributeList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n        .label('Name')\r\n        .required()\r\n        .min(2, 'Name must have at least 2 characters '),\r\n    pickUpLocation: Yup.string()\r\n        .label('Pick up Location')\r\n        .required()\r\n        .min(2, 'Pick up Location must have at least 2 characters '),\r\n    time: Yup.string()\r\n        .label('Time')\r\n        .required()\r\n        .min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    orderList?: any;\r\n    setOrderList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setOrderList, orderList }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // console.log('selectedCityValue', selectedCityValue)\r\n\r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n\r\n            body: {\r\n                name: values.name,\r\n                pickUpLocation: values.pickUpLocation,\r\n                time: values.time,\r\n                country: selectedCountryValue,\r\n                city: selectedCityValue,\r\n                charge: {}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return orderList.map(item => item.id).indexOf(customer.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\r\n            const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\r\n            setOrderList(updateRegionList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.name ||\r\n            !values.pickUpLocation ||\r\n            !values.time) {\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Pick up Location'\r\n                                        value={values.pickUpLocation}\r\n                                        name='pickUpLocation'\r\n                                        isError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['pickUpLocation'])}\r\n\r\n                                        errorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['pickUpLocation'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('pickUpLocation');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            <div style={{\r\n                                marginRight: '10px'\r\n                            }}>\r\n                                <Input\r\n                                    label='Time'\r\n                                    value={values.time}\r\n                                    name='time'\r\n                                    isError={(touched.time && errors.time) ||\r\n                                        (!isSubmitting && updateOrderState.error['error']['time'])}\r\n\r\n                                    errorString={(touched.time && errors.time) ||\r\n                                        (!isSubmitting && updateOrderState.error['error']['time'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('time');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.city}\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewOrder from \"./AddNewOrder\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setOrderList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setOrderList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch({}, 'deleteOrder');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteOrderRes = await handleDeleteOrderFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteOrderRes && deleteOrderRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Order'); \r\n\t\t\t  const newOrderList =  data.filter(item => item.id !== id);\r\n\t\t\t  setOrderList(newOrderList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    orderList={data}\r\n    setOrderList={setOrderList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [orderList,setOrderList] = useState([]); \r\n\r\n    const [orderState, handleRegionListFetch] = useHandleFetch({}, 'orderList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setOrders = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setOrderList(regions); \r\n     }\r\n     setOrders(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('orderState',orderState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(orderState.data.length > 0 ){\r\n      const newOrderList = orderState.data.filter(item => item.name.includes(value)); \r\n      setOrderList(newOrderList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Orders \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search orders..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/order/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {orderState.done && orderList.length > 0 && <MyTable \r\n        setOrderList={orderList}\r\n        data={orderList} />}\r\n        {orderState.isLoading && <DataTableSkeleton />}\r\n\r\n        {orderState.done && !(orderList.length > 0) && (\r\n        <Empty title='No Order found'  />\r\n        )}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{/* {orderState.done && \r\n    <AddNewOrder \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          orderList={orderState.data}\r\n          setOrderList={setOrderList}\r\n           />} */}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\ninterface Props {\r\n    setProductList?: any;\r\n    productList?: any;\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productList,\r\n    setProductList,\r\n    productId,\r\n    quantity,\r\n    item\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const positionInAttribute = () => {\r\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\r\n    //     }\r\n\r\n    //     const index = positionInAttribute();\r\n\r\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n    //     setProductList(updateProductList);\r\n\r\n    // }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateProductList = productList.filter(item => item._id !== productId);\r\n        setProductList(updateProductList);\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleChangeQuantity = async (value) => {\r\n        if (value === 'minus') {\r\n            if (quantity === 1) {\r\n                return;\r\n            }\r\n\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList);\r\n\r\n\r\n        } else {\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList)\r\n\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {productDetailState.done && Object.keys(productDetailState.data).length > 0 && (\r\n                <div className='cart-item' key={''}>\r\n                    <div className='cart-item-quantityCounter'>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('plus');\r\n                            }}\r\n                            className='fa fa-chevron-up'\r\n\r\n                        ></i>\r\n                        <p className='item-amount'>{quantity}</p>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('minus');\r\n                            }}\r\n                            className='fa fa-chevron-down'\r\n\r\n                        ></i>\r\n                    </div>\r\n\r\n\r\n                    <img\r\n\r\n                        src={product['cover']}\r\n                        alt='productImg'\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    />\r\n                    <div className='cart-item-info'>\r\n                        <h4\r\n\r\n\r\n                        >\r\n                            {product['name']}\r\n                        </h4>\r\n                        <h5\r\n                        >\r\n                            ${product['offerPrice'] ? product['offerPrice'] : product['regularPrice']}\r\n                        </h5>\r\n                        {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                    </div>\r\n                    {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"./AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div className='addOrderContainer__container-orderSummary'>\r\n            <h3>\r\n                <span>\r\n                    <ShopOutlined />\r\n                </span>\r\n                Added Products\r\n            </h3>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\ninterface Props {\r\n    setCustomerId?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setCustomerId }: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedBrandId, setSelectedBrandId] = useState('');\r\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n    function onChange(value) {\r\n        setSelectedBrandId(value);\r\n        setCustomerId(value);\r\n        // console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        // console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        // console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        // console.log('search:', val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setBrands = async () => {\r\n            const brandListRes = await handleTagListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (brandListRes && brandListRes.length > 0) {\r\n                // @ts-ignore\r\n                const brandOptions = brandListRes.map((brand) => {\r\n                    return {\r\n                        value: brand.id,\r\n                        name: `${brand.firstName} ${brand.lastName}`\r\n                    };\r\n                });\r\n                setoptions(brandOptions);\r\n            }\r\n        };\r\n\r\n        setBrands();\r\n    }, []);\r\n\r\n    return (\r\n        <Select\r\n            showSearch\r\n            size='middle'\r\n            style={{ width: '100%' }}\r\n            placeholder='Select a Customer'\r\n            optionFilterProp='children'\r\n            onChange={onChange}\r\n            onFocus={onFocus}\r\n            onBlur={onBlur}\r\n            onSearch={onSearch}\r\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n        >\r\n            {brandState.done &&\r\n                brandState.data.length > 0 &&\r\n                options.map((option) => {\r\n                    return <Option value={option.value}>{option.name}</Option>;\r\n                })}\r\n        </Select>\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems)\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory.id;\r\n                }\r\n            });\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {tagState.done && tagState.data.length > 0 && <Select\r\n                mode=\"multiple\"\r\n                placeholder=\"search products\"\r\n                value={selectedOpions}\r\n                onChange={handleChange}\r\n                style={{ width: '100%' }}\r\n            >\r\n                {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                    <Select.Option key={item} value={item}>\r\n                        {item}\r\n                    </Select.Option>\r\n                ))}\r\n            </Select>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Steps, Form, Checkbox } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport AddNewOrderSummary from './AddNewOrderSummary';\r\nimport CustomersId from './CustomersId';\r\nimport AddProducts from './AddProducts';\r\nimport { product } from '../../state/ducks';\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Last name')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tadditionalInfo: ''\r\n\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Billing Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Shipping Address',\r\n\t\tcontent: '',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Payment Details',\r\n\t\tcontent: '',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Review your Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewOrder = ({ }: Props) => {\r\n\r\n\tconst [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\tconst [productIds, setProductIds] = useState([]);\r\n\tconst [productList, setProductList] = useState([]);\r\n\tconst [customerId, setCustomerId] = useState([]);\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\tconst [current, setCurrent] = useState(0);\r\n\r\n\r\n\tconst next = () => {\r\n\t\tconst newCurrent = current + 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst prev = () => {\r\n\t\tconst newCurrent = current - 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleOrderFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t// charge\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (productIds.length > 0) {\r\n\r\n\t\t\tif (productIds.length > productList.length) {\r\n\t\t\t\tsetProductList([...productList, {\r\n\t\t\t\t\t_id: productIds[productIds.length - 1],\r\n\t\t\t\t\tvariation: '5f0a8f0e10cf2f1dc280d915',\r\n\t\t\t\t\tquantity: 1\r\n\t\t\t\t}]);\r\n\t\t\t}\r\n\r\n\r\n\t\t\telse if (productIds.length < productList.length) {\r\n\t\t\t\tconst newProductList = productList.filter(item => {\r\n\t\t\t\t\tlet isTrue = false;\r\n\t\t\t\t\tproductIds.forEach(productId => {\r\n\t\t\t\t\t\tif (productId === item._id) {\r\n\t\t\t\t\t\t\tisTrue = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn isTrue;\r\n\t\t\t\t})\r\n\t\t\t\tsetProductList(newProductList);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetProductList([]);\r\n\t\t}\r\n\t\t// console.log('productIds', productIds)\r\n\r\n\r\n\t}, [productIds])\r\n\r\n\r\n\t// console.log('productList', productList)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='addOrderContainer'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tAdd New Order\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<div className='addOrderContainer__container'>\r\n\t\t\t\t\t\t\t\t<Steps current={current}>\r\n\t\t\t\t\t\t\t\t\t{steps.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Step\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.title} />\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Steps>\r\n\r\n\t\t\t\t\t\t\t\t{current === 0 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='addOrderContainer-sectionTitle'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n                                            Customers And products\r\n                                           </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tCustomer\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<CustomersId setCustomerId={setCustomerId} />\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProducts\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddProducts setProductIds={setProductIds} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-right'>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 1 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 2 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{/* {current === steps.length - 1 && (\r\n\r\n\t\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\r\n\t\t\t\t\t\t\t\t\t\tDone\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t{current > 0 && (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '15px', marginTop: '10px' }}\r\n\t\t\t\t\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => prev()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<CaretLeftOutlined />\tPrevious\r\n\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{current < steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => next()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNext< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{/* <div className='addOrderContainer__container-left'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\r\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Tooltip } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: componentItem.title,\r\n        target: componentItem.target,\r\n        text: componentItem.text,\r\n        image: componentItem.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\r\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\r\n        setItemsList(updateComponentList);\r\n\r\n    }, [localComponentItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\r\n        setItemsList(updateComponentList);\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, componentList, setComponentList }: Props) => {\r\n\r\n    const [addComponentState, handleAddComponentFetch] = useHandleFetch({}, 'addComponent');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [itemsList, setItemsList] = useState([])\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addComponentRes = await handleAddComponentFetch({\r\n            body: {\r\n                groupName: values.groupName,\r\n                items: itemsList\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addComponentRes && addComponentRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setComponentList([...componentList, {\r\n                id: addComponentRes['id'] || '',\r\n                key: addComponentRes['id'] || '',\r\n                groupName: addComponentRes['groupName'] || '',\r\n                // @ts-ignore\r\n                ...addComponentRes\r\n            }])\r\n            actions.resetForm();\r\n            setItemsList([])\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!addComponentState['isLoading']) {\r\n            const error = addComponentState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addComponentState])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddComponentItem = () => {\r\n        setItemsList([...itemsList, {\r\n            title: '',\r\n            target: '',\r\n            text: '',\r\n            image: [],\r\n            id: `${itemsList.length}`\r\n        }])\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Component\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            width={'50vw'}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Group Component Name'\r\n                                value={values.groupName}\r\n                                name='groupName'\r\n                                isError={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n\r\n                                errorString={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('groupName');\r\n                                }}\r\n                            />\r\n                            <div style={{\r\n                                marginTop: '15px',\r\n                            }}></div>\r\n                            <h3 className='inputFieldLabel'>Children</h3>\r\n\r\n                            <div className='componentItemsContainer'>\r\n                                {itemsList.map(itemComponent => {\r\n                                    return <ComponentItem\r\n                                        componentItem={itemComponent}\r\n                                        itemsList={itemsList} setItemsList={setItemsList} />\r\n                                })}\r\n\r\n                                <Button size='small'\r\n                                    onClick={handleAddComponentItem}\r\n                                    style={{\r\n                                        width: '290px',\r\n                                        minHeight: '145px',\r\n                                        marginTop: '0px',\r\n                                        borderRadius: '8px'\r\n                                    }} type=\"dashed\" icon={<PlusOutlined />}>Add Childrens</Button>\r\n                            </div>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Button, Tooltip } from 'antd';\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined, \r\n    SaveOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate }) => {\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: item.title,\r\n        target: item.target,\r\n        text: item.text,\r\n        image: item.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                // @ts-ignore\r\n                image: [...new Set([...localComponentItem.image, ...myImages])]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = localComponentItem.image && localComponentItem.image.length > 0 && localComponentItem.image.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            image: [...newImages]\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleComponentItemUpdate = () => {\r\n        componentUpdate(item,component,localComponentItem); \r\n    }\r\n\r\n\r\n\r\n\r\n    console.log('itemComponent',item)\r\n    console.log('localComponentItem',localComponentItem)\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    boxShadow: \"none\"\r\n                }}\r\n                className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {localComponentItem.image &&\r\n                        // @ts-ignore\r\n                        localComponentItem.image.length > 0 && localComponentItem.image.map((image, index) => {\r\n                            console.log('goddamnin',image.cover)\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n                <Button\r\n                style={{\r\n                    marginTop: '15px'\r\n                }}\r\n                    icon={<SaveOutlined />}\r\n          className='btnPrimaryClassNameoutline'\r\n          onClick={() => handleComponentItemUpdate()}\r\n        >\r\n        Save\r\n            \r\n            </Button>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n    updateComponentByAddingItem?: any;\r\n    componentId?: any\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible,\r\n    setAddNewCategoryVisible, componentList,\r\n    setComponentList,\r\n    updateComponentByAddingItem, componentId }: Props) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: '',\r\n        target: '',\r\n        text: '',\r\n        image: [],\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleAddItem = (e) => {\r\n        updateComponentByAddingItem(localComponentItem, componentId)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                destroyOnClose={true}\r\n                title=\"Add New Component Item\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={(e: any) => handleAddItem(e)}\r\n                onCancel={handleCancel}\r\n                okText='Add'\r\n                okButtonProps={{\r\n                    htmlType: \"submit\",\r\n                }}\r\n                width={'400px'}\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n                <Input\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <Input\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <Input\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                    </div>\r\n                </div>\r\n                <MediaLibrary\r\n                    setvisible={setvisibleMedia}\r\n                    visible={visibleMedia}\r\n                    myImages={myImages}\r\n                    setmyImages={setmyImages}\r\n                    isModalOpenForImages={true} />\r\n\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Collapse, Button, Tooltip, Upload, Modal,Input, notification, Popconfirm } from 'antd';\r\nimport { CaretRightOutlined,CheckCircleOutlined,  PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport InputField from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\nimport ComponentImageUpload from './ComponentImageUpload';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewComponent from \"./AddNewComponent\";\r\nimport ComponentListComponentItem from './ComponentListComponentItem';\r\nimport AddNewComponentItem from './AddNewComponentItem';\r\nimport { category } from '../../state/ducks';\r\n\r\n\r\n\r\n\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nfunction getBase64(file: any) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(file);\r\n\t\treader.onload = () => resolve(reader.result);\r\n\t\treader.onerror = (error) => reject(error);\r\n\t});\r\n}\r\n\r\n\r\nconst genExtra = (updateComponentByDeleting,component,id) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</a>\r\n\t\t\r\n\t\t\t\r\n\t\t</Tooltip>\r\n\t\t\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t\t<Popconfirm \r\n               \r\n               onConfirm={() => updateComponentByDeleting(id,component)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n       \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\t</div>\r\n);\r\n\r\nconst genExtraForGroup = (setitemVisible: any, handleDeleteComponent:any, id: any,setComponentId:any) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Add new item Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<PlusOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t\tsetitemVisible(true);\r\n\t\t\t\t\tsetComponentId(id)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t<Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteComponent(id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\r\n\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\r\n\t\t\t\r\n\t</div>\r\n);\r\n\r\nconst Component = (props) => {\r\n\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [groupVisible, setgroupVisible] = useState(false);\r\n\tconst [itemVisible, setitemVisible] = useState(false);\r\n\tconst [componentId,setComponentId] = useState(''); \r\n\r\n\r\n\t\r\n\tconst [componentState, handleComponentListFetch] = useHandleFetch({}, 'componentList');\r\n\tconst [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch({}, 'deleteComponent');\r\n\tconst [updateComponentState, handleUpdateComponentFetch] = useHandleFetch({}, 'updateComponent');\r\n\t\r\n\tconst [componentList,setComponentList] = useState([]); \r\n  \r\n\tuseEffect(()=>{\r\n\t const setComponents = async () => {\r\n\t   const components = await handleComponentListFetch({}); \r\n\t   // @ts-ignore\r\n\t   setComponentList(components); \r\n\t }\r\n\t setComponents(); \r\n\t},[])\r\n\r\n\t\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif(componentState.data.length > 0 ){\r\n\t\t  const newComponentList = componentState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n\t\t  setComponentList(newComponentList); \r\n\t\t}\r\n\t\t \r\n\t  }\r\n\t\r\n\r\n\r\n\r\n\t  \r\n      const handleDeleteComponent = async (id) => {\r\n        const deleteComponentRes = await handleDeleteComponentFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteComponentRes && deleteComponentRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Component Deleted'); \r\n\t\t\t  const newComponentList =  componentList.filter(item => item.id !== id);\r\n\t\t\t  setComponentList(newComponentList); \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification(\"Couldn't delete, Something went wrong\")\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\tconst handleOkGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\t};\r\n\r\n\r\n\tconst componentUpdate = async (item,component,localComponentItem) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(item.id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n\t\t  const itemIndex = positionInItemsOfComponent();\r\n\t\t  \r\n\r\n\t\t  const manupulatedLocalComponentForTheReq = localComponentItem.image.length > 0 ? \r\n\t\t  {\r\n\t\t\t...localComponentItem,\r\n\t\t\timage: localComponentItem.image.length > 0 ? localComponentItem.image.map(img => img.id) : []\r\n\t\t}\r\n\t\t  : localComponentItem;\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            localComponentItem,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t  const manupulatedUpdatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            manupulatedLocalComponentForTheReq,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t\r\n\t\t  const manupulatedUpdatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: manupulatedUpdatedItems\r\n          });\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...manupulatedUpdatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Updated\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t}\r\n\r\n\r\n\tconst updateComponentByDeleting = async (id,component) => {\r\n\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item deleted\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\tconst updateComponentByAddingItem = async (localComponentItem,id) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n    \r\n      \r\n          const updatedItems = [\r\n            ...componentList[componentIndex].items,\r\n            localComponentItem,\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...componentList[componentIndex],\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item Added\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\tsetitemVisible(false);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\tconsole.log('componentState',componentState)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Components\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search components..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n\t\t  onClick={() => setgroupVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n \r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n     \r\n        {componentState.isLoading && <DataTableSkeleton />}\r\n\r\n        {componentState.done && !(componentList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Component found' />\r\n\t\t\t</div>\r\n\t\t)}\r\n\r\n\t\t{componentState.done && componentList.length > 0 && (\r\n\t\t\t\t\t<div className='componentsItemContainer'>\r\n\t\t\t\t\t{componentList.map(component => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className='componentsItemContainer-item'>\r\n\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\r\n\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\theader={component.name}\r\n\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\textra={genExtraForGroup(setitemVisible,handleDeleteComponent, component.id,setComponentId)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=' componentsItemContainer-white'>\r\n\t\t\t\t\t\t\t\t\t\t{component.items && component.items.length > 0 && component.items.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='componentsItemContainer-item-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theader={item.title || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\textra={genExtra(updateComponentByDeleting,component,item.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ComponentListComponentItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetComponentList={setComponentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentList={componentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={component}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentUpdate={componentUpdate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t{!(component.items.length > 0 ) && <Empty title='No item Found'/>}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t\t<AddNewComponent \r\n          addNewCategoryVisible={groupVisible} \r\n          setAddNewCategoryVisible={setgroupVisible} \r\n          setComponentList={setComponentList}\r\n          componentList={componentList}\r\n          />\r\n\t\t  <AddNewComponentItem \r\n          addNewCategoryVisible={itemVisible} \r\n          setAddNewCategoryVisible={setitemVisible} \r\n          setComponentList={setComponentList}\r\n\t\t  componentList={componentList}\r\n\t\t  updateComponentByAddingItem={updateComponentByAddingItem}\r\n\t\t  componentId={componentId}\r\n          />\r\n\r\n\r\n\t\t  \r\n\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Add New Group Component\"\r\n\t\t\t\tvisible={false}\r\n\t\t\t\tonOk={handleOkGroup}\r\n\t\t\t\tonCancel={handleCancelGroup}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<InputField label='Group Component Name' />\r\n\t\t\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Component;\r\n","import React, { useState } from 'react';\r\n\r\n// import third libraries\r\nimport { Upload, message, notification, Modal } from 'antd';\r\n// import { Formik } from 'formik';\r\n// import * as Yup from 'yup';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\n\r\nimport {\r\n    InboxOutlined,\r\n    CheckCircleOutlined,\r\n    LoadingOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\n\r\n// const validationSchema = Yup.object().shape({\r\n//     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n// });\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Brand Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    themeList?: any;\r\n    setThemeList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\r\n\r\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\r\n    const [fileList, setfileList] = useState([]);\r\n    const [uploading, setuploading] = useState(false);\r\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [name, setname] = useState('')\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n\r\n\r\n\r\n\r\n\r\n        const addThemeRes = await handleAddthemeFetch({\r\n\r\n            body: formData,\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addThemeRes && addThemeRes.status === 'ok') {\r\n\r\n            setThemeList([...themeList, {\r\n                id: addThemeRes['id'] || '',\r\n                key: addThemeRes['id'] || '',\r\n                name: addThemeRes['name'] || '',\r\n                thumbnail: addThemeRes['thumbnail'] || '',\r\n                path: addThemeRes['path'] || '',\r\n                added: addThemeRes['added'] || '',\r\n                // @ts-ignore\r\n                ...addThemeRes\r\n            }]);\r\n\r\n            setfileList([]);\r\n            setuploading(false);\r\n            openSuccessNotification('Theme Uploaded!')\r\n            setAddNewCategoryVisible(false);\r\n            setname('');\r\n            setselectedThemeTypeValue('');\r\n\r\n\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification('Theme upload failed, Something went wrong');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = () => {\r\n        if (addThemeState.isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        // @ts-ignore\r\n        else setmyThumbnailImage([]);\r\n    }\r\n\r\n\r\n    const onChangeThemeType = (value) => {\r\n        setselectedThemeTypeValue(value);\r\n    }\r\n\r\n\r\n\r\n    const uploadProps = {\r\n        //  listType: 'picture',\r\n        onRemove: file => {\r\n            setfileList(filelist => {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                newFileList.splice(index, 1);\r\n                return newFileList;\r\n            })\r\n\r\n        },\r\n        beforeUpload: file => {\r\n            setfileList(filelist => {\r\n                return [...fileList, file]\r\n            })\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n        setuploading(true);\r\n\r\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n        // \tbody: formData\r\n        //   });\r\n\r\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // You can use any AJAX library you like\r\n        reqwest({\r\n            url: `${config.baseURL}/admin/theme/add`,\r\n            method: 'post',\r\n            processData: false,\r\n            data: formData,\r\n            withCredentials: true,\r\n            success: () => {\r\n                setfileList([]);\r\n                setuploading(false);\r\n                openSuccessNotification('Theme Uploaded!')\r\n                setAddNewCategoryVisible(false);\r\n                setname('');\r\n                setselectedThemeTypeValue('');\r\n                setThemeList([...themeList, {\r\n\r\n                }])\r\n                // setThemeList([...themeList, {\r\n                //     id: addCategoryRes['id'] || '',\r\n                //     key: addCategoryRes['id'] || '',\r\n                //     name: addCategoryRes['name'] || '',\r\n                //     description: addCategoryRes['description'] || '',\r\n                //     // @ts-ignore\r\n                //     ...addCategoryRes\r\n                // }])\r\n            },\r\n            error: () => {\r\n                setuploading(false);\r\n                openErrorNotification('Theme Upload failed!')\r\n                message.error('upload failed.');\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n\r\n\r\n        getBase64(file, imageUrl => {\r\n            setImageUrl(imageUrl)\r\n            setLoadingThumbnail(false)\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                title=\"Add New Theme\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                okText='Upload Theme'\r\n                okButtonProps={{\r\n                    loading: uploading,\r\n                    htmlType: \"submit\",\r\n                    disabled: getisSubmitButtonDisabled()\r\n                }}\r\n\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n\r\n                <Input\r\n                    label='Name'\r\n                    value={name}\r\n                    name='name'\r\n                    onChange={(e: any) => setname(e.target.value)}\r\n                    isError={addThemeState.error['error']['name']}\r\n\r\n                    errorString={addThemeState.error['error']['name']}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel'>Thumbnail Image</h3>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={beforeUpload}\r\n                    multiple={false}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n\r\n\r\n\r\n                <div style={{\r\n                    marginTop: '20px'\r\n                }}></div>\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Folder (.zip)\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Dragger\r\n                    multiple={false}\r\n                    className='upload-list-inline'\r\n                    listType='picture'\r\n                    style={{\r\n                        background: '#fff'\r\n                    }}\r\n                    {...uploadProps}\r\n                >\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\r\n                        other band files\r\n\t\t\t\t\t\t\t</p>\r\n                </Dragger>\r\n\r\n                {addThemeState.error['error']['folder'] && (\r\n                    <p style={{\r\n                        color: 'rgba(255, 0, 0, 0.507)'\r\n                    }}>{addThemeState.error['error']['folder']}</p>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={false}\r\n                setmyThumbnailImage={setmyThumbnailImage}\r\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                myThumbnailImage={myThumbnailImage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button, Input,Tooltip, Modal, notification, Popconfirm,Badge} from 'antd';\r\nimport { \r\n  PlusOutlined, EditOutlined, \r\n  DeleteOutlined,EditFilled,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewTheme from \"./AddNewTheme\";\r\n\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [themeList,setThemeList] = useState([]); \r\n\r\n    const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\r\n    const [activeThemeState, handleActiveThemeFetch] = useHandleFetch({}, 'activeTheme');\r\n    const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch({}, 'deletetheme');\r\n  \r\n\r\n    \r\n    useEffect(()=>{\r\n     const setThemes = async () => {\r\n       const themes = await handleThemeListFetch({}); \r\n       // @ts-ignore\r\n       setThemeList(themes); \r\n     }\r\n     setThemes(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(themeState.data.length > 0 ){\r\n      const newThemeList = themeState.data.filter(item => item.name.includes(value)); \r\n      setThemeList(newThemeList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleActiveTheme = async (id) => {\r\n    const activeThemeRes = await handleActiveThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(activeThemeRes && activeThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme activated'); \r\n   \r\n  }\r\n  else {\r\n    openErrorNotification(\"Couldn't activate the theme, Something went wrong\")\r\n  }\r\n     \r\n     \r\n  }\r\n\r\n\r\n  const handleDeleteTheme = async (id) => {\r\n    const deleteThemeRes = await handleDeleteThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(deleteThemeRes && deleteThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme Deleted'); \r\n    const newThemeList =  themeList.filter(item => item.id !== id);\r\n    setThemeList(newThemeList); \r\n  }\r\n  else {\r\n  openErrorNotification(\"Couldn't delete, Something went wrong\")\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n\t\t Themes\r\n \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search themes..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {themeState.done && themeList.length > 0 && (\r\n   \r\n   <div className='categoryListContainer__bodyContainerList'>\r\n\t\t\r\n          {themeState.data.map(theme => {\r\n            return (\r\n              <div className='categoryListContainer__bodyContainerList-item'>\r\n              {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n               \r\n                  </Badge> */}\r\n                  <div className='categoryListContainer__bodyContainerList-item-top'>\r\n                  <img\r\n                    alt='theme img'\r\n                    src={theme.thumbnail}\r\n                  />\r\n                </div>\r\n                <div className='categoryListContainer__bodyContainerList-item-body'>\r\n                  <h3> {theme.name} </h3>\r\n     \r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Tooltip placement='top' title='Active this theme'>\r\n                    <Button\r\n                  \r\n                   size='small'\r\n                   className='btnPrimaryClassNameoutline'\r\n                   icon={<CheckOutlined />}\r\n                   onClick={() => handleActiveTheme(theme.id)}\r\n                  >\r\n                    <span style={{\r\n                      fontSize:'11px'\r\n                    }}>\r\n                    Set Active\r\n                 \r\n                    </span>\r\n                \r\n                 </Button>\r\n     \r\n     \r\n                      \r\n                    </Tooltip>\r\n     \r\n                    <Tooltip placement='top' title='Delete theme'>\r\n                    <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteTheme(theme.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <Button\r\n                        size='small'\r\n                        type='link'\r\n                        danger={true}\r\n                        icon={<DeleteOutlined />}\r\n                      >\r\n                        \r\n                        </Button>\r\n           </Popconfirm>\r\n\r\n\r\n                     \r\n     \r\n                        \r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n          })}\r\n         </div>\r\n\t\t)}\r\n\r\n\r\n        {themeState.isLoading && <DataTableSkeleton />}\r\n\r\n        {themeState.done && !(themeList.length > 0) && (\r\n        <Empty title='No Theme found'  />\r\n        )}\r\n        \r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    {themeState.done && \r\n    <AddNewTheme \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          themeList={themeState.data}\r\n          setThemeList={setThemeList}\r\n           />}\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Image\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Invoice = (props: Props) => {\r\n\treturn <div>Invoice</div>;\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .label('Title')\r\n        .required('Site title can not be empty'),\r\n    adminEmail: Yup.string()\r\n        .label('Admin Email')\r\n        .required('Admin Email can not be empty'),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    adminName: '',\r\n    adminEmail: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSettings');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'siteSettings');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState])\r\n\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n\r\n            body: {\r\n                title: values.title,\r\n                adminName: values.adminName,\r\n                adminEmail: values.adminEmail,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.title || !values.adminEmail || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Site Title'\r\n                                    value={values.title}\r\n                                    name='title'\r\n                                    isError={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n\r\n                                    errorString={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('title');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Admin Name'\r\n                                    value={values.adminName}\r\n                                    name='adminName'\r\n                                    isError={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n\r\n                                    errorString={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminName');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <Input\r\n                                    label='Admin Email'\r\n                                    value={values.adminEmail}\r\n                                    name='adminEmail'\r\n                                    isError={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n\r\n                                    errorString={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminEmail');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <Button\r\n                            type='primary'\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n\r\n                        >\r\n                            Update\r\n                        </Button>\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n// import MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    invoiceTitle: Yup.string().label('Title').required('Invoice title is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    invoiceTitle: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    additionalText: \"\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [updateInfovSettingsState, handleUpdateInvoiceSettingsFetch] = useHandleFetch({}, 'updateInvoiceSettings');\r\n    const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch({}, 'invoiceSettingsDetail');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [updateInfovSettingsState])\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\r\n\r\n            body: {\r\n                invoiceTitle: values.invoiceTitle,\r\n                address: values.address,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                additionalText: values.additionalText\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.invoiceTitle || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (InvoiceSettingsState.data && Object.keys(InvoiceSettingsState.data).length > 0) {\r\n            return { ...InvoiceSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Company Name'\r\n                                    value={values.invoiceTitle}\r\n                                    name='invoiceTitle'\r\n                                    isError={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n\r\n                                    errorString={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('invoiceTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Phone Number'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Additional Text'\r\n                                    value={values.additionalText}\r\n                                    name='additionalText'\r\n                                    isError={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n\r\n                                    errorString={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('additionalText');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <TextArea\r\n                                    label='Address'\r\n                                    value={values.address}\r\n                                    name='address'\r\n                                    isError={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n\r\n                                    errorString={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('address');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <Button\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            type='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AdminSiteInfo from \"./AdminSiteInfo\";\r\nimport SiteInfoInvoice from \"./SiteInfoInvoice\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [addBrandState, handleAddBrandFetch] = useHandleFetch({}, 'addBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleAddBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([...brandList, {\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name && !values.description || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='siteInfoContainer'>\r\n\t\t\t\t<h2>\r\n\t\t\t\t\tSite Settings\r\n\t\t\t</h2>\r\n\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\" >\r\n\t\t\t\t\t<TabPane tab=\"Site Info\" key=\"1\">\r\n\t\t\t\t\t\t<AdminSiteInfo />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t{/* <TabPane tab=\"Logo & Icon\" key=\"2\">\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '30px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Site Logo</h3>\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t// marginTop: '15px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Site Icon</h3>\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t</TabPane> */}\r\n\r\n\r\n\t\t\t\t\t<TabPane tab=\"Invoice Information\" key=\"2\">\r\n\r\n\t\t\t\t\t\t<SiteInfoInvoice />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t</Tabs>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t<MediaLibrary\r\n\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t/>\r\n\t\t</>\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n/*\r\n\t<div className='categoryListContainer__bodyContainerList'>\r\n\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t<Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n*/","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\ninterface Props {\r\n\tsetdeliveryChargeList: any;\r\n\tdeliveryChargeList: any;\r\n\tdeliveryChargeItem: any;\r\n}\r\n\r\nconst DeliveryCharge = ({ deliveryChargeItem, setdeliveryChargeList, deliveryChargeList }: Props) => {\r\n\tconst [ deliveryCharge, setdeliveryCharge ] = useState({\r\n\t\tminimumOrder: deliveryChargeItem.minimumOrder,\r\n\t\tcharge: deliveryChargeItem.charge\r\n\t});\r\n\r\n\tconst handleDeliveryChargeChange = (e) => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetdeliveryCharge({\r\n\t\t\t...deliveryCharge,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn deliveryChargeList.map((item) => item.id).indexOf(deliveryChargeItem.id);\r\n\t\t\t};\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\tconst updatedItem = Object.assign({}, deliveryChargeList[index], { ...deliveryCharge });\r\n\t\t\tconst updateAttributeList = [\r\n\t\t\t\t...deliveryChargeList.slice(0, index),\r\n\t\t\t\tupdatedItem,\r\n\t\t\t\t...deliveryChargeList.slice(index + 1)\r\n\t\t\t];\r\n\t\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t\t},\r\n\t\t[ deliveryCharge ]\r\n\t);\r\n\r\n\tconst handleAttributeDelete = () => {\r\n\t\tconst updateAttributeList = deliveryChargeList.filter((item) => item.id !== deliveryChargeItem.id);\r\n\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='dubbleRowInputs'>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Minimum Order'\r\n\t\t\t\t\tvalue={deliveryCharge.minimumOrder}\r\n\t\t\t\t\tname='minimumOrder'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Charge'\r\n\t\t\t\t\tvalue={deliveryCharge.charge}\r\n\t\t\t\t\tname='charge'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DeliveryCharge;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tpickUpLocation: '',\r\n\ttime: '',\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst AddNewRegion = ({ addNewCategoryVisible, setAddNewCategoryVisible, regionList, setRegionList }: Props) => {\r\n\r\n\tconst [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\tconst [deliveryChargeList, setdeliveryChargeList] = useState([{\r\n\t\tminimumOrder: '',\r\n\t\tcharge: '',\r\n\t\tid: '0'\r\n\t}]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tif (deliveryChargeList.length > 0) {\r\n\t\t\tconst charge = {};\r\n\r\n\t\t\tfor (let item of deliveryChargeList) {\r\n\t\t\t\tif (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n\t\t\t\t\tcharge[item['minimumOrder']] = item['charge']\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge: {}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\t\tsetdeliveryChargeList([...deliveryChargeList, {\r\n\t\t\tminimumOrder: '',\r\n\t\t\tcharge: '',\r\n\t\t\tid: `${deliveryChargeList.length}`\r\n\t\t}])\r\n\t};\r\n\r\n\r\n\r\n\r\n\t// console.log('deliveryChargeList', deliveryChargeList)\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Region\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tmode=\"multiple\"\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\tDelivery Charges\r\n            </h3>\r\n\r\n\t\t\t\t\t\t\t{deliveryChargeList.map(deliveryChargeItem => {\r\n\t\t\t\t\t\t\t\treturn <DeliveryCharge\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeItem={deliveryChargeItem}\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeList={deliveryChargeList} setdeliveryChargeList={setdeliveryChargeList} />\r\n\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '5px',\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<Button size='middle'\r\n\t\t\t\t\t\t\t\tonClick={handleAddDeliveryCharge}\r\n\t\t\t\t\t\t\t\ttype=\"dashed\" icon={<PlusOutlined />}>Add Charge</Button>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewRegion;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setRegionList, regionList }: Props) => {\r\n\tconst [updateRegionState, handleUpdateRegionFetch] = useHandleFetch({}, 'updateRegion');\r\n\r\n\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue',selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleUpdateRegionFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\tcharge: {}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn regionList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, regionList[index], { ...addRegionRes });\r\n\t\t\tconst updateRegionList = [...regionList.slice(0, index), updatedItem, ...regionList.slice(index + 1)];\r\n\t\t\tsetRegionList(updateRegionList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...customer }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewRegion from \"./AddNewRegion\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setRegionList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setRegionList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch({}, 'deleteRegion');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteRegionRes = await handleDeleteRegioFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteRegionRes && deleteRegionRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Region'); \r\n\t\t\t  const newRegionList =  data.filter(item => item.id !== id);\r\n\t\t\t  setRegionList(newRegionList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n</a>\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    regionList={data}\r\n    setRegionList={setRegionList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [regionList,setRegionList] = useState([]); \r\n\r\n    const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setRegions = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setRegionList(regions); \r\n     }\r\n     setRegions(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('regionState',regionState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(regionState.data.length > 0 ){\r\n      const newTagList = regionState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setRegionList(newTagList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Regions \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search regions..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {regionState.done && regionList.length > 0 && <MyTable \r\n        setRegionList={setRegionList}\r\n        data={regionList} />}\r\n        {regionState.isLoading && <DataTableSkeleton />}\r\n\r\n        {regionState.done && !(regionList.length > 0) && (\r\n\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{regionState.done && \r\n    <AddNewRegion \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          regionList={regionState.data}\r\n          setRegionList={setRegionList}\r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\n\r\n// import pages\r\nimport { Overview } from '../../pages/overview';\r\nimport { CategoryList, CategoryDetail } from '../../pages/category';\r\nimport { BrandList, AddNewBrand } from '../../pages/brand';\r\nimport { ProductList } from '../../pages/product';\r\nimport { TagList, AddNewTag } from '../../pages/tag';\r\nimport { CustomerList } from '../../pages/customer';\r\nimport { PagesList, AddNewPage } from '../../pages/pages';\r\nimport { AttributeList } from '../../pages/attribute';\r\nimport { OrderList, AddNewOrder } from '../../pages/order';\r\nimport { Component, ManageThemes, Image, Invoice, SiteInfo } from '../../pages/settings';\r\nimport { Delivery } from '../../pages/delivery';\r\n// import Login from '../../pages/auth/login';\r\n\r\n\r\n\r\n\r\n// import libraries\r\nimport { Layout } from 'antd';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ContentComponent = (props: Props) => {\r\n    return (\r\n        <Content\r\n            hasSider={true}\r\n            style={{\r\n                backgroundColor: '#fff',\r\n                paddingTop: '20px'\r\n            }}\r\n        >\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path='/'\r\n                    render={() => <Redirect to='/admin' />}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path='/admin'\r\n                    render={() => <Redirect to='/admin/product' />}\r\n                />\r\n\r\n\r\n                <Route path='/admin' exact>\r\n                    <Overview />\r\n                </Route>\r\n                <Route path='/admin/category' exact>\r\n                    <CategoryList />\r\n                </Route>\r\n                <Route path='/admin/category/:name' exact>\r\n                    <CategoryDetail />\r\n                </Route>\r\n                {/* CategoryDetail */}\r\n                <Route path='/admin/brand/new' exact>\r\n                    <AddNewBrand />\r\n                </Route>\r\n                <Route path='/admin/brand' exact>\r\n                    <BrandList />\r\n                </Route>\r\n                <Route path='/admin/product' exact>\r\n                    <ProductList />\r\n                </Route>\r\n                {/* <Route path='/product/new' exact>\r\n                     <AddNewProduct />\r\n                   </Route> */}\r\n                <Route path='/admin/tag' exact>\r\n                    <TagList />\r\n                </Route>\r\n                <Route path='/admin/product/new' exact>\r\n                    <AddNewTag />\r\n                </Route>\r\n                <Route path='/admin/attribute' exact>\r\n                    <AttributeList />\r\n                </Route>\r\n                <Route path='/admin/order' exact>\r\n                    <OrderList />\r\n                </Route>\r\n                <Route path='/admin/order/new' exact>\r\n                    <AddNewOrder />\r\n                </Route>\r\n                <Route path='/admin/customer' exact>\r\n                    <CustomerList />\r\n                </Route>\r\n                <Route path='/admin/page' exact>\r\n                    <PagesList />\r\n                </Route>\r\n                <Route path='/admin/delivery' exact>\r\n                    <Delivery />\r\n                </Route>\r\n                <Route path='/admin/page/new' exact>\r\n                    <AddNewPage />\r\n                </Route>\r\n                <Route path='/admin/settings/components' exact>\r\n                    <Component />\r\n                </Route>\r\n                <Route path='/admin/settings/image' exact>\r\n                    <Image />\r\n                </Route>\r\n                <Route path='/admin/settings/themes' exact>\r\n                    <ManageThemes />\r\n                </Route>\r\n                <Route path='/admin/settings/invoice' exact>\r\n                    <Invoice />\r\n                </Route>\r\n                <Route path='/admin/settings/siteInfo' exact>\r\n                    <SiteInfo />\r\n                </Route>\r\n            </Switch>\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default ContentComponent\r\n","import Content from \"./Content\";\r\nexport default Content; ","import React from 'react';\n\n// import pages\nimport Login from './pages/auth/login';\n\n\n\n// import layouts\nimport Sider from \"./layout/sider\";\nimport Header from './layout/header';\nimport Content from './layout/content';\n// import Footer from './layout/footer';\n\n// import libraries\nimport { Layout } from 'antd';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/admin/login' exact>\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t\t<Switch>\n\n\t\t\t\t<Layout style={{ minHeight: '100vh' }}>\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<Layout className='site-layout'>\n\t\t\t\t\t\t<Sider />\n\t\t\t\t\t\t<Content />\n\t\t\t\t\t</Layout>\n\t\t\t\t\t{/* <Footer /> */}\n\t\t\t\t</Layout>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","export function actionShouldBlock( meta ) {\r\n    return !meta || !meta.async || !meta.blocking;\r\n}\r\n\r\nexport function actionFinished ( type ) {\r\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\r\n}\r\n","import * as utils from \"./utils\";\r\n\r\nconst busyReducer = ( state = 0, action ) => {\r\n    if ( utils.actionShouldBlock( action.meta ) ) {\r\n        return state;\r\n    }\r\n    if ( utils.actionFinished( action.type ) ) {\r\n        return state - 1;\r\n    }\r\n    return state + 1;\r\n};\r\n\r\nexport default busyReducer;\r\n","import reducer from \"./reducers\";\r\n\r\nexport default reducer;\r\n","export function productPositionInCart(cart, product) {\r\n  return cart.map(item => item.product.id).indexOf(product.id);\r\n}\r\n\r\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\r\n  return {\r\n    product,\r\n    quantity,\r\n    isSelectedForCheckout,\r\n  };\r\n}\r\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\r\n    const reducer = reducerMap[ action.type ];\r\n    return reducer ? reducer( state, action ) : state;\r\n};\r\n","import isomorphicFetch from 'isomorphic-fetch';\r\n\r\nexport default (url, method, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: requestHeaders(),\r\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\r\n\t};\r\n\r\n\treturn isomorphicFetch(url, options).then(res =>\r\n\t\tparseStatus(res.status, res.json())\r\n\t);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (status >= 200 && status < 300) {\r\n\t\t\tres.then(response => resolve(response));\r\n\t\t} else {\r\n\t\t\tres.then(response => reject({ status, response }));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction requestHeaders() {\r\n\treturn {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t};\r\n}\r\n","export function getCartItemQuantity(cart, id) {\r\n  return cart.find((item) => item.product.id === id).quantity;\r\n}\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n  if (!cartItems.length > 0) {\r\n    return 0;\r\n  }\r\n\r\n  const prices = cartItems.map((cartItem) => {\r\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\r\n  });\r\n\r\n  const totalPrice = prices.reduce((a, b) => {\r\n    return a + b;\r\n  }, 0);\r\n  return totalPrice;\r\n};\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as cartOperations from \"./operations\";\r\nimport * as cartSelectors from \"./selectors\";\r\n\r\nexport {\r\n    cartOperations,\r\n    cartSelectors,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { product, quantity, isSelectedForCheckout } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    if (index === -1) {\r\n      return [\r\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\r\n        ...state,\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.id\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n\r\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\r\n    const { cartItems } = action.payload;\r\n\r\n    if (cartItems.length > 0) {\r\n      return cartItems;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n\r\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\r\n    const { product } = action.payload;\r\n\r\n    const index = utils.productPositionInCart(state, product.product);\r\n    if (index === -1) {\r\n      return [...state, { ...product, isSelectedForCheckout: true }];\r\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\r\n      const tempArrayWithOutOldProduct = state.filter(\r\n        (item) => item.product.id !== product.product.id\r\n      );\r\n\r\n      return [\r\n        ...tempArrayWithOutOldProduct,\r\n        { ...product, isSelectedForCheckout: true },\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.product.id\r\n    );\r\n\r\n    return [\r\n      ...tempArrayWithOutOldProduct,\r\n      { ...product, isSelectedForCheckout: false },\r\n    ];\r\n  },\r\n\r\n  [types.CHANGE_QUANTITY]: (state, action) => {\r\n    const { product, quantity } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n\r\n    const updatedItem = Object.assign({}, state[index], { quantity });\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default cartReducer;\r\n","export const SET_CART = 'cart/SET';\r\nexport const TOGGLE = 'cart/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\r\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\r\nexport const REMOVE = 'cart/REMOVE';\r\nexport const CLEAR = 'cart/CLEAR';\r\n","export function productPositionInWishList(wishList, productId) {\r\n  return wishList.map(item => item).indexOf(productId);\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as wishListOperations from './operations';\r\nimport * as wishListSelectors from './selectors';\r\n\r\nexport { wishListOperations, wishListSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst wishListReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    if (index === -1) {\r\n      return [...state, productId];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item !== productId\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n  [types.ADD_WISHLIST]: (state, action) => {\r\n    const wishlist = action.payload;\r\n    return [...wishlist];\r\n  },\r\n\r\n  [types.REMOVE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default wishListReducer;\r\n","export const TOGGLE = 'wishList/TOGGLE';\r\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\r\nexport const REMOVE = 'wishList/REMOVE';\r\nexport const CLEAR = 'wishList/CLEAR';\r\n","export function getCartItemQuantity( cart, id ) {\r\n    return cart.find( item => item.product.id === id ).quantity;\r\n}\r\n\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n    if(!cartItems.length > 0){\r\n        return 0; \r\n    }\r\n\r\n    return cartItems.reduce((a,b) => {\r\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\r\n    },0); \r\n\r\n}","import reducer from './reducers';\r\n\r\nimport * as checkoutOperations from './operations';\r\nimport * as checkoutSelectors from './selectors';\r\n\r\nexport { checkoutOperations, checkoutSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst checkoutReducer = createReducer(initialState)({\r\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\r\n    const { products } = action.payload;\r\n\r\n    if (products.length > 0) {\r\n      const uniqueProductsOfCheckout = products.filter(function(product) {\r\n        return state.indexOf(product) == -1;\r\n      });\r\n      return uniqueProductsOfCheckout;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default checkoutReducer;\r\n","export const SET_CART = 'checkout/SET';\r\nexport const TOGGLE = 'checkout/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\r\nexport const REMOVE = 'checkout/REMOVE';\r\nexport const CLEAR = 'checkout/CLEAR';\r\n","export function productPositionInCart( cart, product ) {\r\n    return cart.map( item => item.product.id ).indexOf( product.id );\r\n}\r\n\r\nexport function newCartItem( product, quantity ) {\r\n    return {\r\n        product,\r\n        quantity,\r\n    };\r\n}\r\n","export const ADD = 'serach/ADD';\r\nexport const UPDATE = 'serach/UPDATE';\r\nexport const REMOVE = 'serach/REMOVE';\r\nexport const CLEAR = 'serach/CLEAR';\r\n","export function queryPositionInQueryList(queryList, query) {\r\n  return queryList.map(item => item.key).indexOf(query.key);\r\n}\r\n\r\nexport function newQueryItem(query) {\r\n  return query;\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as queryOperations from './operations';\r\nimport * as querySelectors from './selectors';\r\n\r\nexport { queryOperations, querySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n       id: uniqueId,\r\n       key: 'searchQuery',\r\n       value: string | product => {name,id,image}\r\n       created: Date,\r\n       lastUpdated: Date\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst searyQueryReducer = createReducer(initialState)({\r\n  [types.ADD]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, query);\r\n    if (index === -1) {\r\n      return [utils.newQueryItem(query), ...state];\r\n    }\r\n\r\n    const currentItem = state[index];\r\n    const updatedItem = Object.assign({}, currentItem);\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.UPDATE]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const oldQuery = state.find(item => item.key !== query.key);\r\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\r\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default searyQueryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\n/* State shape\r\n{\r\n    details: product,\r\n    list: [ product ],\r\n}\r\n*/\r\n\r\nconst detailsReducer = createReducer( null )( {\r\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\r\n} );\r\n\r\nconst listReducer = createReducer( [ ] )( {\r\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\r\n} );\r\n\r\nexport default combineReducers( {\r\n    details: detailsReducer,\r\n    list: listReducer,\r\n} );\r\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\r\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\r\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\r\n\r\nexport const FETCH_LIST = \"product/FETCH_LIST\";\r\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\r\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as productOperations from \"./operations\";\r\n\r\nexport {\r\n    productOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst authReducer = createReducer(false)({\r\n  [types.LOGIN]: () => true,\r\n  [types.LOGOUT]: () => false,\r\n});\r\n\r\nconst redirectAfterLoginReducer = createReducer(null)({\r\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated: authReducer,\r\n  redirectAfterLogin: redirectAfterLoginReducer,\r\n});\r\n","export const LOGIN = \"session/LOGIN\";\r\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\r\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\r\nexport const LOGOUT = \"session/LOGOUT\";\r\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\r\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\r\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as sessionOperations from \"./operations\";\r\n\r\nexport {\r\n    sessionOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_CATEGORIES]: (state, action) => {\r\n    const { categories } = action.payload;\r\n\r\n    if (categories) {\r\n      return categories;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_CATEGORIES]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\r\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\r\n","import reducer from './reducers';\r\n\r\nimport * as categoryOperations from './operations';\r\nimport * as categorySelectors from './selectors';\r\n\r\nexport { categoryOperations, categorySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = {};\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\r\n    const { response } = action.payload;\r\n\r\n    if (response) {\r\n      return { ...state, ...response };\r\n    }\r\n\r\n    return { ...state };\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\r\n","import reducer from './reducers';\r\n\r\nimport * as cacheOperations from './operations';\r\nimport * as cacheSelectors from './selectors';\r\n\r\nexport { cacheOperations, cacheSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_BRAND]: (state, action) => {\r\n    const { brands } = action.payload;\r\n\r\n    if (brands) {\r\n      return brands;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_BRAND]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_BRAND = 'category/ADD_BRAND';\r\nexport const GET_BRAND = 'category/GET_BRAND';\r\n","import reducer from './reducers';\r\n\r\nimport * as brandOperations from './operations';\r\nimport * as brandSelectors from './selectors';\r\n\r\nexport { brandOperations, brandSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_TAGS]: (state, action) => {\r\n    const { tags } = action.payload;\r\n\r\n    if (tags) {\r\n      return tags;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_TAGS]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_TAGS = 'tag/ADD_TAGS';\r\nexport const GET_TAGS = 'tag/GET_TAGS';\r\n","import reducer from './reducers';\r\n\r\nimport * as tagOperations from './operations';\r\nimport * as tagSelectors from './selectors';\r\n\r\nexport { tagOperations, tagSelectors };\r\n\r\nexport default reducer;\r\n","import { fetch } from \"../utils\";\r\n\r\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\r\n\r\nconst apiService = ( ) => ( next ) => ( action ) => {\r\n    const result = next( action );\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return result;\r\n    }\r\n\r\n    const { path, method = \"GET\", body } = action.meta;\r\n\r\n    if ( !path ) {\r\n        throw new Error( `'path' not specified for async action ${ action.type }` );\r\n    }\r\n\r\n    const url = `${ baseUrl }${ path }`;\r\n\r\n    return fetch( url, method, body ).then(\r\n        res => handleResponse( res, action, next ),\r\n        err => handleErrors( err, action, next ),\r\n    );\r\n};\r\n\r\nexport default apiService;\r\n\r\nfunction handleErrors( err, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_FAILED`,\r\n        payload: err,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return Promise.reject( err );\r\n}\r\n\r\nfunction handleResponse( res, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_COMPLETED`,\r\n        payload: res,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return res;\r\n}\r\n","const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\r\n    if ( !active ) {\r\n        return next( action );\r\n    }\r\n\r\n    const prevState = store.getState( );\r\n    const result = next( action );\r\n    const nextState = store.getState( );\r\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\r\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\r\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\r\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\r\n    logGroupEnd( );\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed( ...args ) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logGroupEnd( ...args ) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logInfo( ...args ) {\r\n    console.info( ...args );\r\n}\r\n\r\nfunction determineStyle( action ) {\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as reducers from './ducks';\r\nimport { apiService } from './middlewares';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistConfig = {\r\n  key: 'shop',\r\n  storage: storage,\r\n  whitelist: ['session'], // which reducer want to store\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(\r\n    pReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(apiService),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n}\r\n\r\nconst store = configureStore({});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\n\n// importing react hot loader for hot loading\nimport { AppContainer } from 'react-hot-loader';\n\n\n// Wrap the rendering in a function:\nconst render = () => {\n\tReactDOM.render(\n\t\t<ReduxProvider store={store}>\n\t\t\t<AppContainer>\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</ReduxProvider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\n\n// Render once\nrender();\n\n\n\n// Webpack Hot Module Replacement API\nif (module['hot']) {\n\tmodule['hot'].accept('./App', () => {\n\t\trender();\n\t});\n}\n\n\n"],"sourceRoot":""}