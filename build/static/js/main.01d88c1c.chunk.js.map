{"version":3,"sources":["components/Field/Input.tsx","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","pages/overview/Overview.tsx","components/Placeholders/DataTableSkeleton.tsx","components/Empty/Empty.tsx","components/Empty/index.ts","pages/category/CategoryList.tsx","pages/category/CategoryDetail.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/brand/AddNewBrand.tsx","pages/brand/QuickEdit.tsx","pages/brand/BrandList.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","components/Field/InputSmall.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/QuickEdit.tsx","pages/product/ProductList.tsx","pages/tag/QuickEdit.tsx","pages/tag/TagList.tsx","pages/tag/AddNewTag.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/pages/PagesList.tsx","pages/pages/AddNewPage.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/QuickEdit.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderProductItem.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteInfo.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","layout/Sider.tsx","App.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","className","Item","validateStatus","help","style","borderRadius","isObjectEmpty","Object","keys","length","manupulateURL","url","urlOptions","params","placeHolders","split","map","currentValue","includes","actualPlaceholderValue","replace","param","slice","indexOf","join","converter","resData","data","formatedData","category","id","_id","key","description","cover","config","thumbnail","subCount","subCategory","children","subCat","title","isNext","page","next","convertedData","product","regularPrice","price","offerPrice","parseInt","unit","cartItems","items","cartItem","medium","quantity","cartKey","updated","status","pricing","tag","brand","customer","firstName","lastName","country","city","email","phone","created","theme","added","components","component","region","pickUpLocation","countryCode","countryName","time","charge","image","labels","alt","caption","original","availableStock","minimumStock","cat","b","tags","img","baseURL","success","inserted","productCount","count","item","billingAddress","total","totalPrice","products","date_created","date","paymentMethod","generalFormat","dataMap","line_items","paymentItems","number","text","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","options","format","api","apiMap","server","method","credentials","headers","Headers","body","fetch","res","formattedData","error","connector","dataFetchReducer","state","action","isLoading","done","payload","Error","useFetch","dependencies","initialData","initialState","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","validationSchema","Yup","shape","username","min","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","Overview","props","DataTable","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","metadata","github","filename","EmptyComponent","display","justifyContent","alignItems","Empty","PRESENTED_IMAGE_SIMPLE","Column","Table","Search","ColumnGroup","MyTable","setcategoryList","history","useState","visible","setvisible","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","console","log","handleDeleteCategory","deleteCategoryRes","message","notification","icon","CheckCircleOutlined","color","newCategoryList","filter","size","dataSource","dataIndex","render","record","objectFit","align","placement","EditOutlined","onConfirm","okText","cancelText","DeleteOutlined","categoryList","withRouter","categoryState","handleCategoryListFetch","isSubCategory","categories","setCategories","addNewCategoryVisible","setAddNewCategoryVisible","enterButton","placeholder","onSearch","handleSearch","PlusOutlined","DataTableSkeleton","marginTop","CategoryDetail","autoplay","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","MediaLibrary","setmyImages","isModalOpenForImages","setmyThumbnailImage","isModalOpenForThumbnail","myImages","myThumbnailImage","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","getImageList","imageListRes","handleUpload","formData","FormData","forEach","file","append","reqwest","processData","withCredentials","uploadProps","onRemove","filelist","index","newFileList","splice","beforeUpload","handleUpdateSubmit","captoin","updateImageLibraryItemRes","positionInImageList","updatedItem","assign","updateImageList","openErrorNotification","getisUpdateSubmitButtonDisabled","top","onOk","onCancel","bodyStyle","padding","defaultActiveKey","tab","listType","background","InboxOutlined","ArrowUpOutlined","find","newselectedImages","handleAddToSelectedList","CheckOutlined","Option","Select","AddNewCategory","addCategoryState","handleAddCategoryFetch","isparentCategoryChecked","setisparentcategoryChecked","setisModalOpenForThumbnail","setisModalOpenForImages","setselectedParentId","imagesIds","parent","addCategoryRes","resetForm","onSwitchChange","checked","handleCancel","onChangeSelect","okButtonProps","htmlType","defaultChecked","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","newImages","handleImagesDelete","FileAddOutlined","QuickEdit","updateCategoryState","handleUpdateCategoryFetch","updateCategoryRes","positionInTag","updateCategoryList","AddNewBrand","brandList","setBrandList","addBrandState","handleAddBrandFetch","visibleMedia","setvisibleMedia","addBrandRes","updatebrandState","handleUpdateBrandFetch","updateBrandRes","positionInBrand","updateBrandList","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","brandState","handlebrandListFetch","brands","setBrands","Tags","setTagIds","setoptions","selectedOpions","setselectedOptions","tagState","handleTagListFetch","tagListRes","tagOptions","setTags","mode","selectItems","selectedCategoryIds","selectedcategory","o","Brands","setBrandId","setSelectedBrandId","brandListRes","brandOptions","onFocus","onBlur","val","Checkbox","Group","Categories","setcategoryIds","searchValue","setsearchValue","categoryListRes","borderColor","categoryNames","newOptions","marginLeft","checkable","onSelect","selectedKeys","info","onCheck","checkedKeys","treeData","defaultExpandAll","allowClear","Complete","setAttributeList","attributeList","attribute","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","updateAttributeList","manupulatedOptions","inputValue","suggestedOption","toUpperCase","InputSmall","Pricing","handleAddPricing","regular","offer","setprice","available","minimum","stock","setStock","handlePriceChange","handleStockChange","Attributes","minHeight","preventDefault","priceItem","model","AddNewProduct","productList","setProductList","addProductState","handleAddProductFetch","categoryids","tagIds","brandId","setPricing","addProductRes","err","i","newPricing","handleDeletePricing","updateProductState","handleUpdateProductFetch","updateProductRes","positionInAttribute","updateProductList","handleDeleteProductFetch","handleDeleteProduct","deleteProductRes","newProductList","productState","handleProductListFetch","setProducts","tagList","setTagList","updateTagState","updateTagRes","updateTagList","CoolInput","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","TagList","addTagState","handleAddTagFetch","addTagRes","newTagList","AddNewTag","max","address1","address2","zipCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","marginRight","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","customers","setCustomers","AddNewCustomer","lastModified","href","push","AddNewPage","EditableTagGroup","inputVisible","editInputIndex","editInputValue","handleClose","removedTag","setState","showInput","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","React","Component","AttributeList","AddAttributeValues","setOrderList","orderList","updateOrderState","handleUpdateOrderFetch","addRegionRes","updateRegionList","handleDeleteOrderFetch","handleDeleteRegion","deleteOrderRes","newOrderList","orderState","handleRegionListFetch","regions","setOrders","CartOverLayCartItem","productId","productDetailState","handleProductFetch","setProduct","setIsLoading","getAndSetProduct","handleChangeQuantity","cursor","AddNewOrderSummary","ShopOutlined","AddNewOrderProductItem","setCustomerId","setProductIds","Step","Steps","additionalInfo","steps","content","AddNewOrder","addOrderState","handleOrderFetch","productIds","current","setCurrent","variation","isTrue","CustomersId","AddProducts","CaretLeftOutlined","CaretRightOutlined","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","boxShadow","SaveOutlined","updateComponentByAddingItem","componentId","destroyOnClose","Panel","Collapse","genExtra","updateComponentByDeleting","event","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","handleUpdateComponentFetch","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","updatedItems","updateComponentRes","accordion","bordered","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","footer","themeList","setThemeList","addThemeState","handleAddthemeFetch","selectedThemeTypeValue","setselectedThemeTypeValue","loadingThumnail","setLoadingThumbnail","imageUrl","setImageUrl","setname","addThemeRes","path","uploadButton","LoadingOutlined","showUploadList","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","multiple","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminName","adminEmail","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","invoiceTitle","address","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","updateInvoiceRes","AdminSiteInfo","SiteInfoInvoice","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","minimumOrder","deliveryCharge","setdeliveryCharge","handleDeliveryChargeChange","AddNewRegion","regionList","setRegionList","addRegionState","handleRegionFetch","handleAddDeliveryCharge","updateRegionState","handleUpdateRegionFetch","handleDeleteRegioFetch","deleteRegionRes","newRegionList","regionState","setRegions","Sider","Layout","Header","Content","Footer","SubMenu","Menu","collapsed","setcollapsed","collapsible","onCollapse","level","selectable","defaultSelectedKeys","PieChartOutlined","to","TagOutlined","BranchesOutlined","GoldOutlined","onTitleClick","TagsOutlined","CarOutlined","ShoppingCartOutlined","TeamOutlined","MailOutlined","FileOutlined","SettingOutlined","App","exact","borderBottom","borderLeft","hasSider","BrandList","OrderList","Delivery","ManageThemes","SiteInfo","textAlign","actionShouldBlock","meta","async","blocking","actionFinished","reducer","utils","productPositionInCart","cart","newCartItem","isSelectedForCheckout","reducerMap","Accept","JSON","stringify","isomorphicFetch","then","Promise","resolve","reject","response","parseStatus","json","createReducer","tempArrayWithOutOldProduct","productPositionInWishList","wishList","wishlist","ADD","queryPositionInQueryList","queryList","query","types","currentItem","oldQuery","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","isAuthenticated","redirectAfterLogin","cartReducer","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","whitelist","pReducer","persistReducer","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.01d88c1c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    addonBefore?: string;\r\n    required?: boolean\r\n}\r\n\r\nconst Demo = ({ required, addonBefore, label, type, defaultValue, value, onChange, disabled, isError, errorString, name }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                // hasFeedback={true}\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                // hasFeedback validateStatus=\"success\"\r\n                help={errorString}\r\n\r\n            // rules={[{ required: true }]}\r\n            >\r\n\r\n                <Input\r\n                    required={required}\r\n                    type={type}\r\n                    addonBefore={addonBefore}\r\n                    style={{\r\n                        borderRadius: '0'\r\n                    }}\r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName' />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","const isObjectEmpty = value => {\r\n  return !value || !Object.keys(value).length > 0;\r\n};\r\n\r\nconst manupulateURL = (url, urlOptions = {}) => {\r\n  if (isObjectEmpty(urlOptions)) return url;\r\n\r\n  const params = urlOptions.params || {};\r\n  const placeHolders = urlOptions.placeHolders || {};\r\n\r\n\r\n\r\n  return url\r\n    .split('/')\r\n    .map(currentValue => {\r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders)) {\r\n        let actualPlaceholderValue = placeHolders[currentValue.replace(':', '')];\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (currentValue.includes('?')) {\r\n        currentValue = currentValue\r\n          .split('&')\r\n          .map(currentValue => {\r\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\r\n            return currentValue.replace(param, params[param] || '');\r\n          })\r\n          .join('&');\r\n      }\r\n      return currentValue;\r\n    })\r\n    .join('/');\r\n};\r\n\r\nexport default manupulateURL;\r\n","import config from '../config.json';\r\nimport apiMap from '../apiMap.json';\r\nimport Converter from './converter.js';\r\n\r\n// import utils\r\nimport { manupulateURL } from './utils';\r\n\r\nlet converter = new Converter();\r\n\r\nclass Connector {\r\n  //TODO\r\n  constructor() {\r\n    this.options = {};\r\n  }\r\n\r\n  /**\r\n   * @method request sends request to server\r\n   * this function determines api url and method from config.json\r\n   * and sends request and converts recieved data to general format\r\n   * @param {String} item\r\n   * @param {String} format\r\n   * @param {Object} data optional\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async request(item, format = 'json', options = {}) {\r\n    let api = apiMap[config.server][item]; //api url & method\r\n\r\n    // configuring options for fetch request\r\n\r\n    this.options = {\r\n      ...this.options,\r\n      method: api.method,\r\n      credentials: 'include',\r\n      headers: new Headers({\r\n        // 'Content-Type': 'application/json',\r\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        ...(options.headers && {\r\n          ...options.headers,\r\n        }),\r\n      }),\r\n      body: api.method !== 'get' ? options.body : null,\r\n    };\r\n\r\n    //*replace variable parts in url with actual data if params exists |or| just return the url\r\n\r\n    const url = manupulateURL(api.url, options.urlOptions);\r\n\r\n    // change the formate to text if the server is wooCommerce\r\n    if (config['server'] === 'wooCommerce') {\r\n      // format = 'text';\r\n    }\r\n\r\n    try {\r\n      let res = await fetch(config.baseURL + url, this.options);\r\n\r\n      if (res.status >= 200 && res.status < 300) {\r\n        let formattedData = await res[format](); //await res.json(), res.text()\r\n        if (formattedData.status === 'error') {\r\n          throw formattedData.error;\r\n        }\r\n\r\n        let convertedData = await converter[item](formattedData); //convert recieved data to app general format\r\n        return convertedData;\r\n      } else {\r\n        let error = await res[format]();\r\n\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n\r\n      throw err;\r\n      //TODO: breakdown errors\r\n    }\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import config from '../config.json';\r\nimport dataMap from '../dataMap.json';\r\n\r\nclass Converter {\r\n\t/**\r\n   * @public\r\n   * @method categoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\tname: category.name && category.name,\r\n\t\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\t\tsubCount:\r\n\t\t\t\t\t\tcategory.subCategory.length === 1\r\n\t\t\t\t\t\t\t? category.subCategory[0] && category.subCategory[0].name ? category.subCategory.length : 0\r\n\t\t\t\t\t\t\t: category.subCategory.length,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method categorySelectist convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync categorySelectist(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\ttitle: category.name && category.name,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\ttitle: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail ? subCat.cover.thumbnail : \"\"}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCart(resData) {\r\n\t\tconst cartItems = resData.items || [];\r\n\t\tconst convertedData =\r\n\t\t\tcartItems.length > 0 &&\r\n\t\t\tcartItems.map((cartItem) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: cartItem._id || '',\r\n\t\t\t\t\tname: cartItem.name && cartItem.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${cartItem.cover.medium}`,\r\n\t\t\t\t\tregularPrice: cartItem.price && cartItem.price['regular'],\r\n\t\t\t\t\tofferPrice: cartItem.price && cartItem.price['offer'],\r\n\t\t\t\t\tquantity: cartItem.quantity,\r\n\t\t\t\t\turl: cartItem.url,\r\n\t\t\t\t\tcartKey: cartItem.cartKey\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addtoCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addtoCart(resData) {\r\n\t\tlet data = false;\r\n\r\n\t\tif (resData['inserted']) {\r\n\t\t\tdata = {\r\n\t\t\t\tid: resData['inserted']._id || '',\r\n\t\t\t\tname: resData['inserted'].name && resData['inserted'].name,\r\n\t\t\t\tcover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\r\n\t\t\t\tregularPrice: resData['inserted'].price && resData['inserted'].price['regular'],\r\n\t\t\t\tofferPrice: resData['inserted'].price && resData['inserted'].price['offer'],\r\n\t\t\t\tquantity: resData['inserted'].quantity,\r\n\t\t\t\turl: resData['inserted'].url,\r\n\t\t\t\tcartKey: resData['inserted'].cartKey\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromCart(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData) {\r\n\t\t\tconvertedData = true;\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCartItem convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCartItem(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData['updated']) {\r\n\t\t\tconvertedData = {\r\n\t\t\t\tquantity: resData.updated['quantity']\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method clearCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync clearCart(data) {\r\n\t\tif (data && data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getWishlist(resData) {\r\n\t\t// const cartItems = resData.items || [];\r\n\t\tconst convertedData = resData;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeAllWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeAllWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext: isNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productSearch convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productSearch(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((product) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${product.cover.thumbnail}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t\tdescription: tag.description && tag.description\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((brand) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: brand._id || '',\r\n\t\t\t\t\tkey: brand._id || '',\r\n\t\t\t\t\tname: brand.name && brand.name,\r\n\t\t\t\t\tdescription: brand.description && brand.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${brand.cover ? brand.cover.thumbnail : ''}`\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method customerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync customerList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((customer) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: customer._id || '',\r\n\t\t\t\t\tkey: customer._id || '',\r\n\t\t\t\t\tfirstName: customer.firstName || '',\r\n\t\t\t\t\tlastName: customer.lastName || '',\r\n\t\t\t\t\tcountry: customer.country || '',\r\n\t\t\t\t\tcity: customer.city || '',\r\n\t\t\t\t\temail: customer.email || '',\r\n\t\t\t\t\tphone: customer.phone || '',\r\n\t\t\t\t\tcreated: customer.created || ''\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method themeList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync themeList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((theme) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: theme._id || '',\r\n\t\t\t\t\tkey: theme._id || '',\r\n\t\t\t\t\tname: theme.name || '',\r\n\t\t\t\t\tadded: theme.added || '',\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method componentList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync componentList(resData) {\r\n\t\tconst components = resData.components || {};\r\n\r\n\t\tif (components && components.length > 0) {\r\n\t\t\tconst convertedData =\r\n\t\t\t\tcomponents.length > 0 &&\r\n\t\t\t\tcomponents.map((component) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: component._id || '',\r\n\t\t\t\t\t\tkey: component._id || '',\r\n\t\t\t\t\t\tname: component.name || '',\r\n\t\t\t\t\t\titems: component.items || []\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method regionList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync regionList(data) {\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((region) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: region._id || '',\r\n\t\t\t\t\tkey: region._id || '',\r\n\t\t\t\t\tname: region.name || '',\r\n\t\t\t\t\tpickUpLocation: region.pickUpLocation || '',\r\n\t\t\t\t\tcountry: region.country || '',\r\n\t\t\t\t\tcountryCode: region.countryCode || '',\r\n\t\t\t\t\tcountryName: region.countryName || '',\r\n\t\t\t\t\tcity: region.city || '',\r\n\t\t\t\t\ttime: region.time || '',\r\n\t\t\t\t\tcharge: region.charge || {}\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method attributeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync attributeList(data) {\r\n\t\tconst convertedData = Object.keys(data).length > 0 && data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync ImageListFromLibrary(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((image) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: image._id || '',\r\n\t\t\t\t\tname: image.name && image.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${image.thumbnail}`,\r\n\t\t\t\t\tadded: image.added,\r\n\t\t\t\t\ttitle: image.title,\r\n\t\t\t\t\tlabels: image.labels,\r\n\t\t\t\t\talt: image.alt,\r\n\t\t\t\t\tcaption: image.caption\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method countryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync countryList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((country) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: country._id || '',\r\n\t\t\t\t\tname: country.name && country.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getDeliveryCharge convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getDeliveryCharge(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method cityList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync cityList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((city) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: city._id || '',\r\n\t\t\t\t\tname: city.name && city.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method forAnalytics convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync forAnalytics(resData) {\r\n\t\treturn resData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync productDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover.original}`,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tminimumStock: data.minimumStock,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\t(data.brand &&\r\n\t\t\t\t\t\tdata.brand.length > 0 &&\r\n\t\t\t\t\t\tdata.brand.map((b) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: b._id,\r\n\t\t\t\t\t\t\t\tname: b.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.brand,\r\n\t\t\t\ttags:\r\n\t\t\t\t\t(data.tags &&\r\n\t\t\t\t\t\tdata.tags.length > 0 &&\r\n\t\t\t\t\t\tdata.tags.map((tag) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: tag._id,\r\n\t\t\t\t\t\t\t\tname: tag.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.tags,\r\n\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => `${config.baseURL}${img.medium}`)) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetailById convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productDetailById(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover.thumbnail && data.cover.thumbnail}`,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\t(data.brand &&\r\n\t\t\t\t\t\tdata.brand.length > 0 &&\r\n\t\t\t\t\t\tdata.brand.map((b) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: b._id,\r\n\t\t\t\t\t\t\t\tname: b.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.brand,\r\n\t\t\t\ttags:\r\n\t\t\t\t\t(data.tags &&\r\n\t\t\t\t\t\tdata.tags.length > 0 &&\r\n\t\t\t\t\t\tdata.tags.map((tag) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: tag._id,\r\n\t\t\t\t\t\t\t\tname: tag.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.tags,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => `${config.baseURL}${img.medium}`)) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateProduct(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateComponent(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateTag(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateBrand(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCategory(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method addTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method addComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method activeTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync activeTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deletetheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deletetheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method deleteComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deleteComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryDetail(data) {\r\n\t\tconst convertedData = {\r\n\t\t\tid: data.id || data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description,\r\n\t\t\tproductCount: data.count || data.productCount,\r\n\t\t\tsubCategory:\r\n\t\t\t\tdata.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name']\r\n\t\t\t\t\t? data.subCategory.map((subCat) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.medium}` : ''\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [],\r\n\t\t\timage:\r\n\t\t\t\t(data.image && data.image.length > 0 && data.image.map((img) => `${config.baseURL}${img.medium}`)) || []\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method createOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync createOrder(data) {\r\n\t\t//map props\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signup convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signup(data) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signin(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method login convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync login(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addImageToLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addImageToLibrary(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method changePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync changePassword(data) {\r\n\t\tif (data['success']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentUserOrders(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\tdate_created: item.date,\r\n\t\t\t\t\t\tpaymentMethod: item['payment']['paymentMethod']\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\tconvertedData = {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentUserOrders(data) {\r\n\t\t//map props\r\n\t\tlet generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...generalFormat,\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.total,\r\n\t\t\t\t\t\tline_items: item.line_items,\r\n\t\t\t\t\t\tdate_created: item.date_created\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method payment convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync payment(data) {\r\n\t\tconst paymentItems = data.items;\r\n\t\tif (!paymentItems.length > 0) {\r\n\t\t\treturn paymentItems;\r\n\t\t}\r\n\r\n\t\tconst items = paymentItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tname: item.name || '',\r\n\t\t\t\tnumber: item.text || ''\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method welcome convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync welcome(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method logo convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logo(data) {\r\n\t\tconst src = data.image && data.image.length > 0 ? `${config['baseURL']}${data.image[0]['original']}` : '';\r\n\t\treturn {\r\n\t\t\tsrc,\r\n\t\t\ttarget: data.target\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method hotline convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync hotline(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method navLinks convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync navLinks(data) {\r\n\t\tconst navLinkItems = data.items;\r\n\t\tif (!navLinkItems.length > 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst items = navLinkItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttext: item.name || item.text,\r\n\t\t\t\ttarget: item.target\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method slider convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync slider(data) {\r\n\t\tconst sliderItems = data.items;\r\n\t\tif (!sliderItems.length > 0) {\r\n\t\t\treturn sliderItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method sliderRight convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync sliderRight(data) {\r\n\t\tconst sliderRightItems = data.items;\r\n\t\tif (!sliderRightItems.length > 0) {\r\n\t\t\treturn sliderRightItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderRightItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method address convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync address(data) {\r\n\t\treturn {\r\n\t\t\tname: data.name,\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Links convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Links(data) {\r\n\t\tconst servicesItems = data.items;\r\n\t\tif (!servicesItems.length > 0) {\r\n\t\t\treturn servicesItems;\r\n\t\t}\r\n\r\n\t\tconst items = servicesItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Account convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Account(data) {\r\n\t\tconst accountItems = data.items;\r\n\t\tif (!accountItems.length > 0) {\r\n\t\t\treturn accountItems;\r\n\t\t}\r\n\r\n\t\tconst items = accountItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'About Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync 'About Us'(data) {\r\n\t\tconst aboutUsItems = data.items;\r\n\t\tif (!aboutUsItems.length > 0) {\r\n\t\t\treturn aboutUsItems;\r\n\t\t}\r\n\r\n\t\tconst items = aboutUsItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n}\r\n\r\nexport default Converter;\r\n","import { useEffect, useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype Tdependecies = any[] | [];\r\ntype TItem = string;\r\ntype IFormat = string | undefined;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n          done: true,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useFetch = (\r\n  dependencies: Tdependecies = [],\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  options?: any,\r\n  format?: IFormat\r\n): IState => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_INIT' });\r\n      try {\r\n        // @ts-ignore\r\n        let data = await connector.request(item, format, options);\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, dependencies);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype TItem = string;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n        },\r\n        done: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useHandleFetch = (\r\n  initialData: TInitialData,\r\n  item: TItem\r\n): [IState, (values: any) => void] => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  const handlePost = async (options: any) => {\r\n    dispatch({ type: 'FETCH_INIT' });\r\n\r\n    try {\r\n      // @ts-ignore\r\n      let data = await connector.request(item, 'json', options);\r\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n      return initialData;\r\n    }\r\n  };\r\n\r\n  return [state, handlePost];\r\n};\r\n\r\nexport default useHandleFetch;\r\n","import React,{useState} from 'react';\r\nimport { Button  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tusername: Yup.string()\r\n\t  .label('Username')\r\n\t  .required('Username is required')\r\n\t  .min(3, 'Username must have at least 3 characters'),\r\n  \r\n\tpassword: Yup.string().label('Password').required('Password is required'),\r\n  });\r\n  \r\n  const initialValues = {\r\n\tusername: '',\r\n\tpassword: '',\r\n  };\r\n\r\ninterface Props {\r\n\t\r\n}\r\n\r\nconst QuickEdit = ({  }: Props) => {\r\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\r\n\t  const updateCategoryRes = await handleLoginFetch({\r\n\t\tbody: {\r\n\t\t\tusername: values.username,\r\n\t\t\tpassword: values.password,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.username || !values.password || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<div style={{\r\n\t\t\t\tmaxWidth: '400px',\r\n\t\t\t\tmargin: '20px'\r\n\t\t\t}}>\r\n\t\t\t<Input \r\n\t\t\t   label='Username'\r\n\t\t\t   value={values.username}\r\n\t\t\t   name='username'\r\n\t\t\t   isError={(touched.username && errors.username) ||\r\n\t\t\t\t  (!isSubmitting && loginState.error['error']['username'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.username && errors.username) ||\r\n\t\t\t\t\t  (!isSubmitting && loginState.error['error']['username'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('username');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t<Input \r\n\t\t\t   label='Password'\r\n\t\t\t   value={values.password}\r\n\t\t\t   name='password'\r\n\t\t\t   isError={(touched.password && errors.password) ||\r\n\t\t\t\t  (!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t  (!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t    onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('password');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n<Button \r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e : any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import Login from './Login';\r\nexport default Login;\r\n","import React from 'react';\r\nimport Login from '../auth/login';\r\n\r\ninterface Props {}\r\n\r\nconst Overview = (props: Props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Login />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DataTable = (props: any) => (\r\n\t<ContentLoader\r\n\t\tspeed={0.5}\r\n\t\twidth={1300}\r\n\t\theight={400}\r\n\t\tviewBox='0 0 1300 400'\r\n\t\tbackgroundColor='#f3f3f3'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='203' r='12' />\r\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='265' r='12' />\r\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='323' r='12' />\r\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='386' r='12' />\r\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='37' cy='97' r='11' />\r\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n\t\t<circle cx='1316' cy='88' r='11' />\r\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n\t\t<circle cx='77' cy='96' r='11' />\r\n\t</ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n\tname: 'Mohd Arif Un',\r\n\tgithub: 'arif-un',\r\n\tdescription: 'Data Table skeleton',\r\n\tfilename: 'DataTable'\r\n};\r\n\r\nexport default DataTable;\r\n","import React from 'react'\r\nimport { Empty } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n    height?: number\r\n}\r\n\r\nconst EmptyComponent = ({\r\n    title = 'No Data found',\r\n    height = 300\r\n}: Props) => {\r\n    return (\r\n        <div style={{\r\n            height: height,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyComponent\r\n","import Empty from \"./Empty\";\r\nexport default Empty; ","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {AddNewCategory,QuickEdit} from \"../category\"\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n\r\n      console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            // width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                // onClick={() => history.push(`/category/${record.name}`)}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Desctription\" \r\n           dataIndex=\"desctription\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n       \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  \r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  console.log('categoryState',categoryState)\r\n\r\n\r\n\r\n  \r\n  \r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.includes(value)); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Categories\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{categoryState.done && \r\n    <AddNewCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryState.data}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React from 'react';\r\nimport { Carousel } from 'antd';\r\n\r\ninterface Props {}\r\n\r\nconst CategoryDetail = (props: Props) => {\r\n\treturn (\r\n\t\t<div className='categoryDetailContainer'>\r\n\t\t\t<div className='categoryDetailContainer__item'>\r\n\t\t\t\t<div className='categoryDetailContainer__item-carousel'>\r\n\t\t\t\t\t<Carousel autoplay>\r\n\t\t\t\t\t\t<div className='categoryDetailContainer__item-carousel-item'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='category img'\r\n\t\t\t\t\t\t\t\tsrc='https://images-na.ssl-images-amazon.com/images/I/41Leu3gBUFL.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>2</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>3</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h3>4</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Carousel>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='categoryDetailContainer__item' />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CategoryDetail;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name}: Props) => {\r\n    return (\r\n        <>\r\n            <h3 className='inputFieldLabel'>\r\n                {label}\r\n            </h3>\r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                  <TextArea\r\n                      disabled={disabled}\r\n                      onChange={onChange}\r\n                      value={value}\r\n                      name={name}\r\n                    className='inputclassName'\r\n                     rows={4} /> \r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Moment from 'react-moment';\r\n// import third party ui lib\r\nimport { Upload, Button, Modal, Tabs, message, notification, Popconfirm } from 'antd';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\n\r\nimport {\r\n\tInboxOutlined,\r\n\tCheckOutlined,\r\n\tArrowUpOutlined,\r\n\tCheckCircleOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tvisible: boolean;\r\n\tsetvisible: (isVisible: any) => void;\r\n\tsetmyImages?: any;\r\n\tsetmyThumbnailImage?: any;\r\n\tisModalOpenForThumbnail?: boolean;\r\n\tisModalOpenForImages?: boolean;\r\n\tmyImages?: any;\r\n\tmyThumbnailImage?: any\r\n}\r\n\r\nconst MediaLibrary = ({\r\n\tvisible,\r\n\tsetvisible,\r\n\tsetmyImages,\r\n\tisModalOpenForImages,\r\n\tisModalOpenForThumbnail,\r\n\tsetmyThumbnailImage,\r\n\tmyImages,\r\n\tmyThumbnailImage,\r\n\t...rest\r\n}: Props) => {\r\n\r\n\tconst [fileList, setfileList] = useState([]);\r\n\tconst [uploading, setuploading] = useState(false);\r\n\tconst [selectedimages, setselectedImages] = useState([]);\r\n\tconst [activeImageItem, setactiveImageItem] = useState(false);\r\n\tconst [addMediaLibrary, handleAddMediaLibraryFetch] = useHandleFetch({}, 'addImageToLibrary');\r\n\tconst [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch({}, 'updateImageFromLibrary');\r\n\tconst [imageListFromLibraryState, handleImageListFromLibraryFetch] = useHandleFetch({}, 'ImageListFromLibrary');\r\n\tconst [deleteImageFromLibraryFetchState, handleDeleteImageFromLibraryFetch] = useHandleFetch({}, 'deleteImageFromLibrary');\r\n\tconst [localImageList, setLocalImageList] = useState([]);\r\n\tconst [isDoneOk, setisDoneOk] = useState(false);\r\n\r\n\r\n\tconst handleDeleteImageFromImageLibrary = async (id) => {\r\n\r\n\t\tconst deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteImageLibraryItemRes && deleteImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Imaged Deleted');\r\n\t\t\tconst newImageList = localImageList.filter(item => item.id !== id);\r\n\t\t\tsetLocalImageList(newImageList);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst getImageList = async () => {\r\n\t\tconst imageListRes = await handleImageListFromLibraryFetch({});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (imageListRes) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetLocalImageList(imageListRes);\r\n\t\t}\r\n\r\n\t\tconsole.log('imageListRes', imageListRes);\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetImageList();\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\tconst handleUpload = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tfileList.forEach(file => {\r\n\t\t\tconsole.log('filt', file.name);\r\n\t\t\tformData.append('images', file, file.name);\r\n\t\t});\r\n\r\n\t\tsetuploading(true);\r\n\r\n\t\t//  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n\t\t// \tbody: formData\r\n\t\t//   });\r\n\r\n\t\t//   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\t\t// You can use any AJAX library you like\r\n\t\treqwest({\r\n\t\t\turl: 'http://localhost:5000/admin/image/add',\r\n\t\t\tmethod: 'post',\r\n\t\t\tprocessData: false,\r\n\t\t\tdata: formData,\r\n\t\t\twithCredentials: true,\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tsetfileList([]);\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tgetImageList();\r\n\t\t\t\tmessage.success('upload successfully.');\r\n\t\t\t},\r\n\t\t\terror: () => {\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tmessage.error('upload failed.');\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\r\n\t\tif (isModalOpenForImages) {\r\n\t\t\tsetmyImages(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetmyThumbnailImage(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk && isModalOpenForImages) {\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t\t}\r\n\t}, [myImages, isDoneOk])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk) {\r\n\t\t\tconsole.log('myThumbnail', myThumbnailImage)\r\n\t\t\t// setselectedImages([...myThumbnailImage]);\r\n\t\t}\r\n\t}, [myThumbnailImage, isDoneOk])\r\n\r\n\tconst uploadProps = {\r\n\t\t//  listType: 'picture',\r\n\t\tonRemove: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst index = fileList.indexOf(file);\r\n\t\t\t\tconst newFileList = fileList.slice();\r\n\t\t\t\tnewFileList.splice(index, 1);\r\n\t\t\t\treturn newFileList;\r\n\t\t\t})\r\n\r\n\t\t},\r\n\t\tbeforeUpload: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\treturn [...fileList, file]\r\n\t\t\t})\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tfileList,\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst handleAddToSelectedList = (image, id) => {\r\n\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (!isImageExist) {\r\n\t\t\t\tsetselectedImages([image, ...selectedimages]);\r\n\t\t\t\tsetactiveImageItem(image);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst newselectedImages = selectedimages.filter(image => image.id !== id);\r\n\t\t\t\tsetselectedImages(newselectedImages);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetselectedImages([image, ...selectedimages]);\r\n\t\t\tsetactiveImageItem(image);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst getisSelectedImage = (id) => {\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (isImageExist) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleUpdateSubmit = async (values, actions) => {\r\n\t\tconst updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t\talt: values.alt,\r\n\t\t\t\ttitle: values.title,\r\n\t\t\t\tcaptoin: values.captoin,\r\n\t\t\t\tlabels: values.labels,\r\n\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateImageLibraryItemRes && updateImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Image Updated');\r\n\r\n\t\t\tconst positionInImageList = () => {\r\n\t\t\t\treturn localImageList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInImageList();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, localImageList[index], { ...updateImageLibraryItemRes });\r\n\t\t\tconst updateImageList = [...localImageList.slice(0, index), updatedItem, ...localImageList.slice(index + 1)];\r\n\t\t\tsetLocalImageList(updateImageList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t}\r\n\r\n\r\n\tconst getisUpdateSubmitButtonDisabled = (values, isValid) => {\r\n\t\t// if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\r\n\t\t// \treturn true; \r\n\t\t// }\r\n\t\tif (!isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconsole.log('selectedimages', selectedimages)\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: '40px'\r\n\t\t\t\t}}\r\n\t\t\t\ttitle=\"Media Library\"\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\twidth={'80vw'}\r\n\t\t\t\tbodyStyle={{\r\n\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\tpadding: '0'\r\n\t\t\t\t}}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<div className='mediaLibraryBodyContainer'>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-left'>\r\n\r\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"2\" type=\"card\" size='middle'>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Upload New Media\" key=\"1\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-header'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Dragger\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='upload-list-inline'\r\n\t\t\t\t\t\t\t\t\t\t\tlistType='picture'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: '#fff'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t{...uploadProps}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InboxOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-hint'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSupport for a single or bulk upload. Strictly prohibit from uploading company data or\r\n\t\t\t\t\t\t\t\t\t\t\t\tother band files\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t</Dragger>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\tonClick={handleUpload}\r\n\t\t\t\t\t\t\t\t\tdisabled={fileList.length === 0}\r\n\t\t\t\t\t\t\t\t\tloading={uploading}\r\n\t\t\t\t\t\t\t\t\ticon={<ArrowUpOutlined />}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Media Library\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.length > 0\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-left-imageListContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getisSelectedImage(image.id) ? <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt='img' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-right'>\r\n\r\n\t\t\t\t\t\t{activeImageItem && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\tonSubmit={(values, actions) => handleUpdateSubmit(values, actions)}\r\n\t\t\t\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t{ ...activeImageItem }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\t\t\t\thandleReset,\r\n\t\t\t\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment Details\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={activeImageItem['cover']} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='imageLibnameText'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['name']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['added']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t5000 X 500\r\n\t\t\t\t\t\t\t\t\t</h5> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteImageFromImageLibrary(activeImageItem['id'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='imageLibdeleteText'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete parmanently\r\n\t\t\t\t\t\t\t\t\t                       </h5>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Alternate Text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.alt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='alt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('alt');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('title');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Caption'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('caption');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='default'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={getisUpdateSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{!activeImageItem && (\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tSelect an image to preview details\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default MediaLibrary;\r\n","import MediaLibrary from './MediaLibrary';\r\nexport default MediaLibrary;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\nconst { Dragger } = Upload;\r\nconst { Option } = Select;\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\tconsole.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'addCategory');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tparent: setselectedParentId\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetcategoryList([...categoryList, {\r\n\t\t\t\tid: addCategoryRes['id'] || '',\r\n\t\t\t\tkey: addCategoryRes['id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !values.description || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconsole.log('isparentCategoryChecked', isparentCategoryChecked);\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t\tconsole.log('selectedValue', value);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch defaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h4 className='switchLabelContainer-label'>Top level Category</h4>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect From Library\r\n\t\t\t\t\t\t\t\t\t\t\t</h5> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined,EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Category Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tsetcategoryList?:any; \r\n\tcategoryList?:any; \r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\r\n\t  console.log('updateCategoryRes',updateCategoryRes)\r\n\r\n\t  // @ts-ignore\r\n\t  if(updateCategoryRes && updateCategoryRes.status === 'ok'){\r\n\t\topenSuccessNotification(); \r\n\r\n\t\tconst positionInTag = () => {\r\n\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t  }\r\n\r\n\t\t  const index = positionInTag();\r\n\r\n\t\t  // @ts-ignore\r\n\t\t  const updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t  const updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t  setcategoryList(updateCategoryList); \r\n\t\t\r\n\t  }\r\n\t  else {\r\n\t\topenErrorNotification();\r\n\t  }\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t  setvisible(false)\r\n\t\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name  || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [addBrandState, handleAddBrandFetch] = useHandleFetch({}, 'addBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleAddBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([...brandList, {\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name && !values.description || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Brand\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect From Library\r\n\t\t\t\t\t\t\t\t\t\t\t</h5> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tbrandList: any; \r\n\tsetBrandList?: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, brandList, setBrandList }: Props) => {\r\n\tconst [updatebrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateBrandRes = await handleUpdateBrandFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\r\n\t  \r\n\t \t  // @ts-ignore\r\n\t\t   if(updateBrandRes && updateBrandRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInBrand = () => {\r\n\t\t\t\treturn brandList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInBrand();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t  const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t  setBrandList(updateBrandList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\r\n\r\n\t\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space, Tag,Button, Input,Tooltip, Modal, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewBrand from \"./AddNewBrand\"\r\nimport QuickEdit from \"./QuickEdit\"\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch({}, 'deleteBrand');\r\n\r\n\r\n      \r\n      console.log('activeCategoryForEdit',activeCategoryForEdit)\r\n\r\n \r\n      const handleDeleteBrand = async (id) => {\r\n        const deleteBrandRes = await handleDeleteBrandFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteBrandRes && deleteBrandRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Brand'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            // width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={cover => (\r\n                <>\r\n                <img src={cover} alt='cover img' style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Brand'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteBrand(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    brandList={data}\r\n    setBrandList={setBrandList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  const [brandList,setBrandList] = useState([]);\r\n\r\n  \r\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setBrands = async () => {\r\n     const brands = await handlebrandListFetch({}); \r\n     // @ts-ignore\r\n     setBrandList(brands); \r\n   }\r\n   setBrands(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(brandState.data.length > 0 ){\r\n      const newBrandList = brandState.data.filter(item => item.name.includes(value)); \r\n      setBrandList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  console.log('brandState',brandState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search brands..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {brandState.done && brandList.length > 0 && <MyTable \r\n          setBrandList={setBrandList}\r\n        data={brandList} />}\r\n        {brandState.isLoading && <DataTableSkeleton />}\r\n        {brandState.done && !(brandList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '100px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Brands found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n    <AddNewBrand \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible} \r\n          setBrandList={setBrandList}\r\n          brandList={brandList}\r\n          />\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React,{useEffect,useState} from 'react'; \r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n  setTagIds?: any; \r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds\r\n}: Props) => {\r\n  const [ options, setoptions ] = useState([]);\r\n  const [selectedOpions,setselectedOptions] = useState([]); \r\n  const [ tagState, handleTagListFetch ] = useHandleFetch({}, 'tagList');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tagListRes = await handleTagListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\tisSubCategory: false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (tagListRes && tagListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst tagOptions = tagListRes.map((tag) => {\r\n          return tag.name \r\n        });\r\n\t\t\t\tsetoptions(tagOptions);\r\n      }\r\n      \r\n\t\t};\r\n\r\n\t\tsetTags();\r\n  }, []);\r\n\r\n\r\n\r\n  const handleChange = (selectItems) => {\r\n    setselectedOptions(selectItems)\r\n\r\n    if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n\t\t\tconst selectedCategoryIds = selectItems.map((item) => {\r\n\t\t\t\tconst selectedcategory = tagState.data.find(\r\n\t\t\t\t\t(cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n\t\t\t\t);\r\n\t\t\t\tif (selectedcategory) {\r\n\t\t\t\t\treturn selectedcategory.id;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tsetTagIds(selectedCategoryIds);\r\n    }\r\n    \r\n\r\n  }\r\n\r\n\r\n  console.log('selectedOpions',selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n        {tagState.done && tagState.data.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\ninterface Props {\r\n\tsetBrandId?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId }: Props) => {\r\n\tconst [ options, setoptions ] = useState([]);\r\n\tconst [ selectedBrandId, setSelectedBrandId ] = useState('');\r\n\tconst [ brandState, handleTagListFetch ] = useHandleFetch({}, 'brandList');\r\n\r\n\tfunction onChange(value) {\r\n\t\tsetSelectedBrandId(value);\r\n\t\tsetBrandId(value);\r\n\t\tconsole.log(`selected ${value}`);\r\n\t}\r\n\r\n\tfunction onBlur() {\r\n\t\tconsole.log('blur');\r\n\t}\r\n\r\n\tfunction onFocus() {\r\n\t\tconsole.log('focus');\r\n\t}\r\n\r\n\tfunction onSearch(val) {\r\n\t\tconsole.log('search:', val);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setBrands = async () => {\r\n\t\t\tconst brandListRes = await handleTagListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (brandListRes && brandListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst brandOptions = brandListRes.map((brand) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: brand.id,\r\n\t\t\t\t\t\tname: brand.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(brandOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetBrands();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: 200 }}\r\n\t\t\tplaceholder='Select a Brand'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChange}\r\n\t\t\tonFocus={onFocus}\r\n\t\t\tonBlur={onBlur}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{brandState.done &&\r\n\t\t\t\tbrandState.data.length > 0 &&\r\n\t\t\t\toptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n\t);\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\nimport { Checkbox, Input, Tree } from 'antd';\r\nconst CheckboxGroup = Checkbox.Group;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n}\r\n\r\nconst Categories = ({ setcategoryIds }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categorySelectist');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\tconsole.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tsetcategoryIds(checkedKeys);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('optons', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t<Search\r\n\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tsize='middle'\r\n\t\t\t\t\tplaceholder='category name'\r\n\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginLeft: \"-20px\",\r\n\t\t\t}}>\r\n\t\t\t\t<Tree\r\n\r\n\t\t\t\t\tcheckable\r\n\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n    size?: any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name, size='middle'}: Props) => {\r\n    return (\r\n        <>\r\n        {label && <h3 className='inputFieldLabel-small'>\r\n                {label}\r\n            </h3>}\r\n           \r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            // hasFeedback validateStatus=\"success\"\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                     <Input\r\n                     size={size}\r\n                    allowClear \r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName-small' />\r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\r\n\r\n    const [suggestedOptions, setsuggesteOptions] = useState([]);\r\n    const attributeLisState = useFetch([], [], 'attributeList', {});\r\n\r\n\r\n    const [attributeItem, setAttributeITem] = useState({\r\n        name: attribute.name,\r\n        value: attribute.value\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return attributeList.map(item => item.id).indexOf(attribute.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n        const updateAttributeList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n        setAttributeList(updateAttributeList);\r\n\r\n    }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateAttributeList = attributeList.filter(item => item.id !== attribute.id);\r\n        setAttributeList(updateAttributeList);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (attributeLisState.data && Object.keys(attributeLisState.data).length > 0) {\r\n            const options = Object.keys(attributeLisState.data);\r\n            const manupulatedOptions = options.map(option => {\r\n                return {\r\n                    value: option\r\n                }\r\n            })\r\n            setsuggesteOptions(manupulatedOptions);\r\n        };\r\n    }, [attributeLisState.data]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAttributeSelect = (value) => {\r\n        console.log('handleAttributeSelect', value);\r\n\r\n        if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\r\n            if (attributeLisState.data[value]) {\r\n                setAttributeITem({\r\n                    ...attribute,\r\n                    name: value,\r\n                    value: attributeLisState.data[value]\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n            setAttributeITem({\r\n                ...attribute,\r\n                name: value\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleAttributeValueChange = (e) => {\r\n        setAttributeITem({\r\n            ...attribute,\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div\r\n                key={attribute.id}\r\n                className='addProductGridContainer__item-body-variationCard-item-attribute-item'>\r\n                <div\r\n                    onClick={handleAttributeDelete}\r\n                    className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'>\r\n                    <DeleteOutlined />\r\n                </div>\r\n\r\n                <h3 className='inputFieldLabel-small'>\r\n                    Name\r\n                </h3>\r\n                <AutoComplete\r\n                    value={attribute.name}\r\n                    style={{ width: '100%' }}\r\n                    options={suggestedOptions}\r\n                    placeholder=\"attribute\"\r\n                    onChange={handleAttributeSelect}\r\n                    filterOption={(inputValue, suggestedOption) =>\r\n                        suggestedOption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                    }\r\n                />\r\n\r\n                {attribute.name && (\r\n                    <>\r\n                        <div style={{ marginTop: '10px' }}></div>\r\n                        <InputSmall\r\n                            label='Value'\r\n                            value={attribute.value}\r\n                            name='value'\r\n                            onChange={handleAttributeValueChange}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, {useState} from 'react'; \r\nimport Attributes from \"./Attributes\";\r\nimport AddAttributeValues from \"../attribute/AddAttributeValues\";\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport {  Button } from 'antd';\r\nimport {\r\n\r\n    PlusOutlined,\r\n    CheckOutlined\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n    handleAddPricing: any; \r\n}\r\n\r\nconst Pricing = ({\r\n    handleAddPricing\r\n}: Props) => {\r\n\r\n    const [price, setprice] = useState({\r\n        regular: \"\",\r\n        offer: \"\"\r\n      });\r\n      const [stock, setStock] = useState({\r\n        available: \"\",\r\n        minimum: \"\"\r\n      });\r\n\r\n\r\n      const [attributeList, setAttributeList] = useState([]);\r\n\r\n      const handlePriceChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n    \r\n        setprice({\r\n          ...price,\r\n          [name]: value\r\n        });\r\n      };\r\n    \r\n      const handleStockChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n    \r\n        setStock({\r\n          ...stock,\r\n          [name]: value\r\n        });\r\n      };\r\n\r\n\r\n      const handleSavePricing = (e) => {\r\n\t\t  e.preventDefault(); \r\n\t\t  \r\n\t\t  if(attributeList.length > 0){\r\n\t\t\tconst attribute = {}; \r\n\r\n\t\t\tfor (let item of attributeList){\r\n\t\t\t\tattribute[item['name']] = item['value']\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: attribute\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\",minimum: \"\"})\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t\tsetAttributeList([]);  \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: {}\r\n\t\t\t}\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\",minimum: \"\"})\r\n\t\t\tsetAttributeList([]);  \r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t  }\r\n         \r\n\t  }\r\n\t  \r\n\r\n\t  const handleAddAttribute = () => {\r\n\t\tsetAttributeList([...attributeList, {\r\n\t\t\tname: '',\r\n\t\t\tvalue: '',\r\n\t\t\tid: `${attributeList.length}`\r\n\t\t}])\r\n\t  }\r\n\r\n\r\n\t  const getiCreatePricingIsDisabled = () => {\r\n\t\t  if(!price.regular || !stock.available){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  else return false; \r\n\t  }\r\n\r\n\t  console.log('attributeList',attributeList); \r\n\r\n\r\n    return (\r\n        <>\r\n            \t<div className='addProductGridContainer__item-body-variationCard'>\r\n\t\t\t\t\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-left'>\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\tPrice  \r\n\t\t\t\t</h4>\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t<InputSmall \r\n\t\t\t   label='Regular  *'\r\n\t\t\t   value={price.regular}\r\n\t\t\t   name='regular'\r\n\t\t\t   onChange={handlePriceChange}\r\n\t\t\t   />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n                    <InputSmall \r\n                    size='small'\r\n\t\t\t   label='Offer'\r\n\t\t\t   value={price.offer}\r\n\t\t\t   name='offer'\r\n\t\t\t   onChange={handlePriceChange}\r\n\t\t\t   />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\tStock\r\n\t\t\t\t</h4>\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                    <InputSmall \r\n\t\t\t   label='Available  *'\r\n\t\t\t   value={stock.available}\r\n\t\t\t   name='available'\r\n\t\t\t   onChange={handleStockChange}\r\n\t\t\t   />\r\n\r\n\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\t\t\t\t\r\n\t\t\t\t<InputSmall \r\n\t\t\t   label='Minimum'\r\n\t\t\t   value={stock.minimum}\r\n\t\t\t   name='minimum'\r\n\t\t\t   onChange={handleStockChange}\r\n\t\t\t   />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-right'> \r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\tAttributes\r\n\t\t\t\t</h4>\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-attribute'>\r\n\t\t\t\r\n\t\t\t{attributeList.map(attribute => {\r\n\t\t\t\treturn \t<Attributes \r\n\t\t\t\tattribute={attribute}\r\n\t\t\t\t attributeList={attributeList} setAttributeList={setAttributeList}/> \r\n\t\t\t})}\r\n\t\t\t\t<Button size='small' \r\n\t\t\t\tonClick={handleAddAttribute}\r\n                style={{\r\n\t\t\t\t\twidth: '180px',\r\n\t\t\t\t\tminHeight:'75px',\r\n\t\t\t\t\tmarginTop:'0px'\r\n\t\t\t\t}} type=\"dashed\" icon={<PlusOutlined />}>Add Attribute</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n        </div>\r\n\r\n\r\n\t\t{/* <Button\r\n          // type=\"primary\"\r\n         \r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button> */}\r\n\r\n\r\n\t\t<Button \r\n\t\tstyle={{\r\n\t\t\tmarginLeft: '10px'\r\n\t\t}}\r\n          onClick={handleSavePricing}\r\n\t\tdisabled={getiCreatePricingIsDisabled()}\r\n\t\t icon={<CheckOutlined />}> Add New Pricing </Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pricing\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Tooltip, notification, Modal, Tabs, Empty } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tFileAddOutlined,\r\n\tPlusCircleOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCheckOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\r\n}\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Product Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tproductList?: any;\r\n\tsetProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList, setProductList }: Props) => {\r\n\r\n\tconst [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addProduct');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [categoryids, setcategoryIds] = useState([]);\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [brandId, setBrandId] = useState('');\r\n\tconst [pricing, setPricing] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\r\n\t\tconst addProductRes = await handleAddProductFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\tmodel: values.model,\r\n\t\t\t\tunit: values.unit,\r\n\t\t\t\tcategory: categoryids,\r\n\t\t\t\ttags: tagIds,\r\n\t\t\t\tbrand: brandId,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tpricing: pricing,\r\n\t\t\t\tparent: setselectedParentId\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addProductRes && addProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetProductList([...productList, {\r\n\t\t\t\tid: addProductRes['id'] || '',\r\n\t\t\t\tkey: addProductRes['id'] || '',\r\n\t\t\t\tname: addProductRes['name'] || '',\r\n\t\t\t\tdescription: addProductRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addProductRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// openErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addProductState['isLoading']) {\r\n\t\t\tconst error = addProductState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addProductState])\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !(pricing.length > 0) || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\tconst handleDeleteFromSelectedImage = () => {\r\n\r\n\t};\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconsole.log('addProductState', addProductState);\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t\tconsole.log('selectedValue', value);\r\n\t}\r\n\r\n\r\n\tconst handleAddPricing = (priceItem) => {\r\n\r\n\t\tsetPricing([{\r\n\t\t\t...priceItem,\r\n\t\t\tid: pricing.length\r\n\t\t}, ...pricing])\r\n\t\tmessage.info('Product Pricing Added');\r\n\t}\r\n\r\n\r\n\tconst handleDeletePricing = (id) => {\r\n\t\tconst newPricing = pricing.filter(item => item.id !== id);\r\n\t\tsetPricing(newPricing);\r\n\t\tmessage.info('Product Pricing Deleted');\r\n\t}\r\n\r\n\r\n\tconsole.log('pricing', pricing);\r\n\r\n\tconst isCategoryInValid = () => {\r\n\t\tif (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (categoryids && categoryids.length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Product\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Information\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Variation\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Pricing\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing handleAddPricing={handleAddPricing} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='d' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPricing\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price && item.price.offer && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toffer\r\n\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price && item.price.regular && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tregular\r\n\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tavailable\r\n\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock.available}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminimum\r\n\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock.minimum}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tImage\r\n\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__category'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCategories\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Select at least one category'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={!(categoryids.length > 0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Categories\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetcategoryIds={setcategoryIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTags\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tags setTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__brand'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBrands\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Brands setBrandId={setBrandId} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\r\n\r\n*/","import React,{useState} from 'react';\r\nimport { Modal,notification   } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n\tnotification.success({\r\n\t  message: 'Product Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tsetProductList?: any; \r\n\tproductList?: any; \r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible,setProductList , productList}: Props) => {\r\n\tconst [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateProductRes = await handleUpdateProductFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t\tcategory: category.category,\r\n\t\t\tpricing: category.pricing\r\n\t\t},\r\n\t  });\r\n\r\n\t  // @ts-ignore\r\n\t  if(updateProductRes && updateProductRes.status === 'ok'){\r\n\t\topenSuccessNotification(); \r\n\r\n\t\tconst positionInAttribute = () => {\r\n            return productList.map(item => item.id).indexOf(category.id);\r\n          }\r\n\r\n          const index = positionInAttribute();\r\n\r\n\t\t  // @ts-ignore\r\n          const updatedItem = Object.assign({}, productList[index], { ...updateProductRes });\r\n          const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n          setProductList(updateProductList); \r\n\t\t\r\n\t  }\r\n\t  else {\r\n\t\topenErrorNotification();\r\n\t  }\r\n\t  console.log('updateProductRes',updateProductRes)\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n            <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateProductState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateProductState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n              </Modal>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {notification,Empty, Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Popconfirm   } from 'antd';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined,EditFilled } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewProduct from \"./AddNewProduct\";\r\nimport QuickEdit from \"./QuickEdit\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n\tnotification.success({\r\n\t  message: 'Product Deleted',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setProductList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setProductList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteProductState, handleDeleteProductFetch] = useHandleFetch({}, 'deleteProduct');\r\n\r\n\r\n      const handleDeleteProduct = async (id) => {\r\n        const deleteProductRes = await handleDeleteProductFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          // @ts-ignore\r\n          if(deleteProductRes && deleteProductRes.status === 'ok'){\r\n            openSuccessNotification(); \r\n            const newProductList =  data.filter(item => item.id !== id);\r\n            setProductList(newProductList); \r\n          }\r\n\r\n          console.log('deleteProductRes',deleteProductRes)\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            // width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={cover => (\r\n                <>\r\n                <img src={cover} alt='cover img' style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Offer Price\" \r\n           dataIndex=\"offerPrice\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Price\" \r\n           dataIndex=\"price\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Unit\" \r\n           dataIndex=\"unit\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip \r\n              \r\n               placement=\"top\" title='Quick Edit Product'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteProduct(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n               <span \r\n            className='iconSize iconSize-danger'\r\n            > \r\n            <DeleteOutlined/>\r\n           </span>\r\n       \r\n  </Popconfirm>\r\n\r\n\r\n            \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    productList={data}\r\n    setProductList={setProductList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst ProductList = ({history}: Props) => {\r\n\r\n\r\n\r\n  const [productList,setProductList] = useState([]); \r\n\r\n  const [productState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setProducts = async () => {\r\n     const products = await handleProductListFetch({}); \r\n     // @ts-ignore\r\n     setProductList(products); \r\n   }\r\n   setProducts(); \r\n  },[])\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n  console.log('productState',productState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(productState.data.length > 0 ){\r\n      const newProductList = productState.data.filter(item => item.name.includes(value)); \r\n      setProductList(newProductList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Products\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search products..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button>\r\n\r\n\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n    \r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {productState.done && productList.length > 0 && <MyTable \r\n        setProductList={setProductList}\r\n        data={productList} />}\r\n        {productState.isLoading && <DataTableSkeleton />}\r\n        {productState.done && !(productList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '200px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Products found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{productState.done && \r\n    <AddNewProduct \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          productList={productState.data}\r\n          setProductList={setProductList}\r\n\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(ProductList);\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined,EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\ttagList: any; \r\nsetTagList: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateTagRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t \t  // @ts-ignore\r\n\t\t   if(updateTagRes && updateTagRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInTag();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\t  const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\t  setTagList(updateTagList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconsole.log('deleteTagRes', deleteTagRes)\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\r\n\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\t\tconsole.log('addTagRes', addTagRes)\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.includes(value));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Tag</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t\t<Formik\r\n\t\t\t\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\t\t\t\tvalidationSchema={validationSchema}\r\n\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t{ ...initialValues }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\thandleReset,\r\n\r\n\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='addproductSection addproductSection-right'>\r\n\r\n\t\t\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t\t\t<div className='categoryListContainer__header'>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t\t\t{/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"search tags..\"\r\n\t\t\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__afterHeader'>\r\n\t\t\t\t\t\t\t{/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<Empty description='No Tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewTag = (props: Props) => {\r\n    return (\r\n        <div>\r\n            AddNewTag\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewTag\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([...customerList, {\r\n\t\t\t\tid: addCustomerRes['id'] || '',\r\n\t\t\t\tkey: addCustomerRes['id'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewCustomer from \"./AddNewCustomer\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Customer'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"First Name\" \r\n           dataIndex=\"firstName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n         <Column\r\n           title=\"Last Name\" \r\n           dataIndex=\"lastName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              <Moment>\r\n                {text}\r\n              </Moment>\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({}); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.includes(value)); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Customers\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search customer..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewCustomer \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, {useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal  } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst data = [\r\n\t{\r\n\t\tkey: '1',\r\n\t\ttitle: 'Home Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\r\n\t},\r\n\t{\r\n\t\tkey: '2',\r\n\t\ttitle: 'Product Listing Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\t},\r\n\t{\r\n\t\tkey: '3',\r\n\t\ttitle: 'Dashboard Page',\r\n        created: 'Sun Apr 26 2020 22:34:13',\r\n        lastModified: 'Sun Apr 26 2020 22:34:13',\r\n      \r\n\t}\r\n];\r\n\r\n\r\n\r\n\r\n\r\nconst MyTable = () => {\r\n    const [visible,setvisible] = useState(false);   \r\n\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        dataSource={data}>\r\n         \r\n          <Column title=\"Title\" dataIndex=\"title\" key=\"title\" />\r\n          <Column title=\"Created\" dataIndex=\"created\" key=\"created\" />\r\n          <Column title=\"Last Modified\" dataIndex=\"lastModified\" key=\"lastModified\" />\r\n        <Column\r\n          title=\"Action\"\r\n          key=\"action\"\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a onClick={() => setvisible(true)} href='##'>Quick Edit</a>\r\n              <Tooltip placement=\"top\" title='Delete Category'>\r\n              <a href='##'>Delete</a>\r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      <Modal\r\n          title=\"Quick Edit\"\r\n          visible={visible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n        >\r\n          {/* <p>Some contents...</p>\r\n          <p>Some contents...</p>\r\n          <p>Some contents...</p> */}\r\n        </Modal>\r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst PagesList = ({history}: Props) => {\r\n  \r\n    \r\n\treturn (\r\n\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n            <h2 className='categoryListContainer__header-title'>Pages</h2>\r\n            <Button\r\n          type=\"primary\"\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/page/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            <Search\r\n      placeholder=\"search pages..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    />\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t<MyTable />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default withRouter(PagesList);\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst AddNewPage = (props: Props) => {\r\n\treturn <div>AddNewPage</div>;\r\n};\r\n\r\nexport default AddNewPage;\r\n","import React,{useState} from 'react';\r\nimport { Modal  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t\tconsole.log('ourDamnValues',values)\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\n\r\nimport React from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    console.log(tags);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    console.log(tags);\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup","import React, {useState} from 'react';\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\r\n\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddAttributeValues from \"./AddAttributeValues\"\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({data}) => {\r\n    const [visible,setvisible] = useState(false);   \r\n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\tconst handleDeleteCategory = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n      }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n              <Tooltip placement=\"top\" title='Delete Tag'>\r\n            \r\n\r\n             <span \r\n             className='iconSize iconSize-danger'\r\n             onClick={() => handleDeleteCategory(record.id)}\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n            \r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n     \r\n\r\n\t\t{activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\tconsole.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst AttributeList = ({  }: Props) => {\r\n\tconst tagState = useFetch([], [], 'brandList', {\r\n\t\turlOptions: {\r\n\t\t  params: {\r\n\t\t\tisSubCategory: true,\r\n\t\t  },\r\n\t\t},\r\n\t  });\r\n\r\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\t  console.log('ourDamnValues',values)\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t  urlOptions: {\r\n\t\t\t  placeHolders: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t  body: {\r\n\t\t\t  name: values.name,\r\n\t\t\t  description: values.description,\r\n\t\t  },\r\n\t\t});\r\n\t  \r\n\t\tactions.setSubmitting(false);\r\n\t  };\r\n\t  \r\n \r\n  \r\n  \r\n  \r\n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\t  if(!values.name || !values.description || !isValid){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  return false; \r\n\t\t}\r\n\r\n\r\n\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t   <div style={{\r\n\t\t\t\t   marginTop: '0px'\r\n\t\t\t   }}></div>\r\n\t\t\t  \r\n\r\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\r\n\t\t\t\t\r\n\t\t\t\t<AddAttributeValues />\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t  display: 'block',\r\n\t\t\t\t\t\t  marginTop: '20px'\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n                <div className='addproductSection addproductSection-right'> \r\n\r\n\t\t\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n          {/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            {/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\r\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttributeList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n        .label('Name')\r\n        .required()\r\n        .min(2, 'Name must have at least 2 characters '),\r\n    pickUpLocation: Yup.string()\r\n        .label('Pick up Location')\r\n        .required()\r\n        .min(2, 'Pick up Location must have at least 2 characters '),\r\n    time: Yup.string()\r\n        .label('Time')\r\n        .required()\r\n        .min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    orderList?: any;\r\n    setOrderList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setOrderList, orderList }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        console.log('selectedCityValue', selectedCityValue)\r\n\r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n\r\n            body: {\r\n                name: values.name,\r\n                pickUpLocation: values.pickUpLocation,\r\n                time: values.time,\r\n                country: selectedCountryValue,\r\n                city: selectedCityValue,\r\n                charge: {}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return orderList.map(item => item.id).indexOf(customer.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\r\n            const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\r\n            setOrderList(updateRegionList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.name ||\r\n            !values.pickUpLocation ||\r\n            !values.time) {\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Pick up Location'\r\n                                        value={values.pickUpLocation}\r\n                                        name='pickUpLocation'\r\n                                        isError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['pickUpLocation'])}\r\n\r\n                                        errorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['pickUpLocation'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('pickUpLocation');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            <div style={{\r\n                                marginRight: '10px'\r\n                            }}>\r\n                                <Input\r\n                                    label='Time'\r\n                                    value={values.time}\r\n                                    name='time'\r\n                                    isError={(touched.time && errors.time) ||\r\n                                        (!isSubmitting && updateOrderState.error['error']['time'])}\r\n\r\n                                    errorString={(touched.time && errors.time) ||\r\n                                        (!isSubmitting && updateOrderState.error['error']['time'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('time');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.city}\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewOrder from \"./AddNewOrder\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setOrderList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setOrderList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch({}, 'deleteOrder');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteOrderRes = await handleDeleteOrderFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteOrderRes && deleteOrderRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Order'); \r\n\t\t\t  const newOrderList =  data.filter(item => item.id !== id);\r\n\t\t\t  setOrderList(newOrderList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    orderList={data}\r\n    setOrderList={setOrderList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [orderList,setOrderList] = useState([]); \r\n\r\n    const [orderState, handleRegionListFetch] = useHandleFetch({}, 'orderList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setOrders = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setOrderList(regions); \r\n     }\r\n     setOrders(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('orderState',orderState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(orderState.data.length > 0 ){\r\n      const newOrderList = orderState.data.filter(item => item.name.includes(value)); \r\n      setOrderList(newOrderList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Orders \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search orders..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/order/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {orderState.done && orderList.length > 0 && <MyTable \r\n        setOrderList={orderList}\r\n        data={orderList} />}\r\n        {orderState.isLoading && <DataTableSkeleton />}\r\n\r\n        {orderState.done && !(orderList.length > 0) && (\r\n        <Empty title='No Order found'  />\r\n        )}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{/* {orderState.done && \r\n    <AddNewOrder \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          orderList={orderState.data}\r\n          setOrderList={setOrderList}\r\n           />} */}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\ninterface Props {\r\n    setProductList?: any;\r\n    productList?: any;\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productList,\r\n    setProductList,\r\n    productId,\r\n    quantity,\r\n    item\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const positionInAttribute = () => {\r\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\r\n    //     }\r\n\r\n    //     const index = positionInAttribute();\r\n\r\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n    //     setProductList(updateProductList);\r\n\r\n    // }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateProductList = productList.filter(item => item._id !== productId);\r\n        setProductList(updateProductList);\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleChangeQuantity = async (value) => {\r\n        if (value === 'minus') {\r\n            if (quantity === 1) {\r\n                return;\r\n            }\r\n\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList);\r\n\r\n\r\n        } else {\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList)\r\n\r\n\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {productDetailState.done && Object.keys(productDetailState.data).length > 0 && (\r\n                <div className='cart-item' key={''}>\r\n                    <div className='cart-item-quantityCounter'>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('plus');\r\n                            }}\r\n                            className='fa fa-chevron-up'\r\n\r\n                        ></i>\r\n                        <p className='item-amount'>{quantity}</p>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('minus');\r\n                            }}\r\n                            className='fa fa-chevron-down'\r\n\r\n                        ></i>\r\n                    </div>\r\n\r\n\r\n                    <img\r\n\r\n                        src={product['cover']}\r\n                        alt='productImg'\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    />\r\n                    <div className='cart-item-info'>\r\n                        <h4\r\n\r\n\r\n                        >\r\n                            {product['name']}\r\n                        </h4>\r\n                        <h5\r\n                        >\r\n                            ${product['offerPrice'] ? product['offerPrice'] : product['regularPrice']}\r\n                        </h5>\r\n                        {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                    </div>\r\n                    {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"./AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div className='addOrderContainer__container-orderSummary'>\r\n            <h3>\r\n                <span>\r\n                    <ShopOutlined />\r\n                </span>\r\n                Added Products\r\n            </h3>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <Empty title='No Product Added' height={150} />\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\ninterface Props {\r\n    setCustomerId?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setCustomerId }: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedBrandId, setSelectedBrandId] = useState('');\r\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n    function onChange(value) {\r\n        setSelectedBrandId(value);\r\n        setCustomerId(value);\r\n        console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        console.log('search:', val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setBrands = async () => {\r\n            const brandListRes = await handleTagListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (brandListRes && brandListRes.length > 0) {\r\n                // @ts-ignore\r\n                const brandOptions = brandListRes.map((brand) => {\r\n                    return {\r\n                        value: brand.id,\r\n                        name: `${brand.firstName} ${brand.lastName}`\r\n                    };\r\n                });\r\n                setoptions(brandOptions);\r\n            }\r\n        };\r\n\r\n        setBrands();\r\n    }, []);\r\n\r\n    return (\r\n        <Select\r\n            showSearch\r\n            size='middle'\r\n            style={{ width: '100%' }}\r\n            placeholder='Select a Customer'\r\n            optionFilterProp='children'\r\n            onChange={onChange}\r\n            onFocus={onFocus}\r\n            onBlur={onBlur}\r\n            onSearch={onSearch}\r\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n        >\r\n            {brandState.done &&\r\n                brandState.data.length > 0 &&\r\n                options.map((option) => {\r\n                    return <Option value={option.value}>{option.name}</Option>;\r\n                })}\r\n        </Select>\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems)\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory.id;\r\n                }\r\n            });\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            {tagState.done && tagState.data.length > 0 && <Select\r\n                mode=\"multiple\"\r\n                placeholder=\"search products\"\r\n                value={selectedOpions}\r\n                onChange={handleChange}\r\n                style={{ width: '100%' }}\r\n            >\r\n                {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                    <Select.Option key={item} value={item}>\r\n                        {item}\r\n                    </Select.Option>\r\n                ))}\r\n            </Select>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Steps, Form, Checkbox } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport AddNewOrderSummary from './AddNewOrderSummary';\r\nimport CustomersId from './CustomersId';\r\nimport AddProducts from './AddProducts';\r\nimport { product } from '../../state/ducks';\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tadditionalInfo: ''\r\n\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Billing Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Shipping Address',\r\n\t\tcontent: '',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Payment Details',\r\n\t\tcontent: '',\r\n\t},\r\n\t{\r\n\t\ttitle: 'Review your Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewOrder = ({ }: Props) => {\r\n\r\n\tconst [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\tconst [productIds, setProductIds] = useState([]);\r\n\tconst [productList, setProductList] = useState([]);\r\n\tconst [customerId, setCustomerId] = useState([]);\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\tconst [current, setCurrent] = useState(0);\r\n\r\n\r\n\tconst next = () => {\r\n\t\tconst newCurrent = current + 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst prev = () => {\r\n\t\tconst newCurrent = current - 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleOrderFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t// charge\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (productIds.length > 0) {\r\n\r\n\t\t\tif (productIds.length > productList.length) {\r\n\t\t\t\tsetProductList([...productList, {\r\n\t\t\t\t\t_id: productIds[productIds.length - 1],\r\n\t\t\t\t\tvariation: '5f0a8f0e10cf2f1dc280d915',\r\n\t\t\t\t\tquantity: 1\r\n\t\t\t\t}]);\r\n\t\t\t}\r\n\r\n\r\n\t\t\telse if (productIds.length < productList.length) {\r\n\t\t\t\tconst newProductList = productList.filter(item => {\r\n\t\t\t\t\tlet isTrue = false;\r\n\t\t\t\t\tproductIds.forEach(productId => {\r\n\t\t\t\t\t\tif (productId === item._id) {\r\n\t\t\t\t\t\t\tisTrue = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn isTrue;\r\n\t\t\t\t})\r\n\t\t\t\tsetProductList(newProductList);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetProductList([]);\r\n\t\t}\r\n\t\tconsole.log('productIds', productIds)\r\n\r\n\r\n\t}, [productIds])\r\n\r\n\r\n\tconsole.log('productList', productList)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='addOrderContainer'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tAdd New Order\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<div className='addOrderContainer__container'>\r\n\t\t\t\t\t\t\t\t<Steps current={current}>\r\n\t\t\t\t\t\t\t\t\t{steps.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Step\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.title} />\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Steps>\r\n\r\n\t\t\t\t\t\t\t\t{current === 0 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tCustomer\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<CustomersId setCustomerId={setCustomerId} />\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProducts\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddProducts setProductIds={setProductIds} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-right'>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 1 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 2 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{/* {current === steps.length - 1 && (\r\n\r\n\t\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={() => message.success('Processing complete!')}>\r\n\t\t\t\t\t\t\t\t\t\tDone\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t{current > 0 && (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '15px', marginTop: '10px' }}\r\n\t\t\t\t\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => prev()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tPrevious  <CaretLeftOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t{current < steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => next()}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNext< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{/* <div className='addOrderContainer__container-left'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\r\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: componentItem.title,\r\n        target: componentItem.target,\r\n        text: componentItem.text,\r\n        image: componentItem.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\r\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\r\n        setItemsList(updateComponentList);\r\n\r\n    }, [localComponentItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\r\n        setItemsList(updateComponentList);\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                        {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect From Library\r\n\t\t\t\t\t\t\t\t\t\t\t</h5> */}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, componentList, setComponentList }: Props) => {\r\n\r\n    const [addComponentState, handleAddComponentFetch] = useHandleFetch({}, 'addComponent');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [itemsList, setItemsList] = useState([])\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addComponentRes = await handleAddComponentFetch({\r\n            body: {\r\n                groupName: values.groupName,\r\n                items: itemsList\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addComponentRes && addComponentRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setComponentList([...componentList, {\r\n                id: addComponentRes['id'] || '',\r\n                key: addComponentRes['id'] || '',\r\n                groupName: addComponentRes['groupName'] || '',\r\n                // @ts-ignore\r\n                ...addComponentRes\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!addComponentState['isLoading']) {\r\n            const error = addComponentState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addComponentState])\r\n\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddComponentItem = () => {\r\n        setItemsList([...itemsList, {\r\n            title: '',\r\n            target: '',\r\n            text: '',\r\n            image: [],\r\n            id: `${itemsList.length}`\r\n        }])\r\n    }\r\n\r\n\r\n\r\n\r\n    console.log('itemsList', itemsList)\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Component\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            width={'50vw'}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Group Component Name'\r\n                                value={values.groupName}\r\n                                name='groupName'\r\n                                isError={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n\r\n                                errorString={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('groupName');\r\n                                }}\r\n                            />\r\n                            <div style={{\r\n                                marginTop: '15px',\r\n                            }}></div>\r\n                            <h3 className='inputFieldLabel'>Children</h3>\r\n\r\n                            <div className='componentItemsContainer'>\r\n                                {itemsList.map(itemComponent => {\r\n                                    return <ComponentItem\r\n                                        componentItem={itemComponent}\r\n                                        itemsList={itemsList} setItemsList={setItemsList} />\r\n                                })}\r\n\r\n                                <Button size='small'\r\n                                    onClick={handleAddComponentItem}\r\n                                    style={{\r\n                                        width: '290px',\r\n                                        minHeight: '145px',\r\n                                        marginTop: '0px'\r\n                                    }} type=\"dashed\" icon={<PlusOutlined />}>Add Childrens</Button>\r\n                            </div>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Button } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined, \r\n    SaveOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: item.title,\r\n        target: item.target,\r\n        text: item.text,\r\n        image: item.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleComponentItemUpdate = () => {\r\n        componentUpdate(item,component,localComponentItem); \r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    boxShadow: \"none\"\r\n                }}\r\n                className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                        {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelect From Library\r\n\t\t\t\t\t\t\t\t\t\t\t</h5> */}\r\n                    </div>\r\n\r\n        \r\n\r\n                </div>\r\n                <Button\r\n                style={{\r\n                    marginTop: '15px'\r\n                }}\r\n                    icon={<SaveOutlined />}\r\n          className='btnPrimaryClassNameoutline'\r\n          onClick={() => handleComponentItemUpdate()}\r\n        >\r\n        Save\r\n            \r\n            </Button>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n    updateComponentByAddingItem?: any;\r\n    componentId?: any\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible,\r\n    setAddNewCategoryVisible, componentList,\r\n    setComponentList,\r\n    updateComponentByAddingItem, componentId }: Props) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: '',\r\n        target: '',\r\n        text: '',\r\n        image: [],\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleAddItem = (e) => {\r\n        updateComponentByAddingItem(localComponentItem, componentId)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                destroyOnClose={true}\r\n                title=\"Add New Component Item\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={(e: any) => handleAddItem(e)}\r\n                onCancel={handleCancel}\r\n                okText='Add'\r\n                okButtonProps={{\r\n                    htmlType: \"submit\",\r\n                }}\r\n                width={'400px'}\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n                <Input\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <Input\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <Input\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                    </div>\r\n                </div>\r\n                <MediaLibrary\r\n                    setvisible={setvisibleMedia}\r\n                    visible={visibleMedia}\r\n                    myImages={myImages}\r\n                    setmyImages={setmyImages}\r\n                    isModalOpenForImages={true} />\r\n\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Collapse, Button, Tooltip, Upload, Modal,Input, notification, Popconfirm } from 'antd';\r\nimport { CaretRightOutlined,CheckCircleOutlined,  PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport InputField from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\nimport ComponentImageUpload from './ComponentImageUpload';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewComponent from \"./AddNewComponent\";\r\nimport ComponentListComponentItem from './ComponentListComponentItem';\r\nimport AddNewComponentItem from './AddNewComponentItem';\r\nimport { category } from '../../state/ducks';\r\n\r\n\r\n\r\n\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nfunction getBase64(file: any) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(file);\r\n\t\treader.onload = () => resolve(reader.result);\r\n\t\treader.onerror = (error) => reject(error);\r\n\t});\r\n}\r\n\r\n\r\nconst genExtra = (updateComponentByDeleting,component,id) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t\t<Popconfirm \r\n               \r\n               onConfirm={() => updateComponentByDeleting(id,component)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n           </Popconfirm>\r\n\t</div>\r\n);\r\n\r\nconst genExtraForGroup = (setitemVisible: any, handleDeleteComponent:any, id: any,setComponentId:any) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Add new item Component'>\r\n\t\t\t<PlusOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t\tsetitemVisible(true);\r\n\t\t\t\t\tsetComponentId(id)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteComponent(id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n           </Popconfirm>\r\n\r\n\r\n\t\t\t\r\n\t</div>\r\n);\r\n\r\nconst Component = (props) => {\r\n\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [groupVisible, setgroupVisible] = useState(false);\r\n\tconst [itemVisible, setitemVisible] = useState(false);\r\n\tconst [componentId,setComponentId] = useState(''); \r\n\r\n\r\n\t\r\n\tconst [componentState, handleComponentListFetch] = useHandleFetch({}, 'componentList');\r\n\tconst [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch({}, 'deleteComponent');\r\n\tconst [updateComponentState, handleUpdateComponentFetch] = useHandleFetch({}, 'updateComponent');\r\n\t\r\n\tconst [componentList,setComponentList] = useState([]); \r\n  \r\n\tuseEffect(()=>{\r\n\t const setComponents = async () => {\r\n\t   const categories = await handleComponentListFetch({}); \r\n\t   // @ts-ignore\r\n\t   setComponentList(categories); \r\n\t }\r\n\t setComponents(); \r\n\t},[])\r\n\r\n\t\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif(componentState.data.length > 0 ){\r\n\t\t  const newComponentList = componentState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n\t\t  setComponentList(newComponentList); \r\n\t\t}\r\n\t\t \r\n\t  }\r\n\t\r\n\r\n\r\n\r\n\t  \r\n      const handleDeleteComponent = async (id) => {\r\n        const deleteComponentRes = await handleDeleteComponentFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteComponentRes && deleteComponentRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Component Deleted'); \r\n\t\t\t  const newComponentList =  componentList.filter(item => item.id !== id);\r\n\t\t\t  setComponentList(newComponentList); \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification(\"Couldn't delete, Something went wrong\")\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\tconst handleOkGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\t};\r\n\r\n\r\n\tconst componentUpdate = async (item,component,localComponentItem) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(item.id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            localComponentItem,\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Updated\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t}\r\n\r\n\r\n\tconst updateComponentByDeleting = async (id,component) => {\r\n\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item deleted\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\tconst updateComponentByAddingItem = async (localComponentItem,id) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n    \r\n      \r\n          const updatedItems = [\r\n            ...componentList[componentIndex].items,\r\n            localComponentItem,\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...componentList[componentIndex],\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item Added\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\tsetitemVisible(false);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\tconsole.log('componentList',componentList); \r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Components\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search components..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n\t\t  onClick={() => setgroupVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n \r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n     \r\n        {componentState.isLoading && <DataTableSkeleton />}\r\n\r\n        {componentState.done && !(componentList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Component found' />\r\n\t\t\t</div>\r\n\t\t)}\r\n\r\n\t\t{componentState.done && componentList.length > 0 && (\r\n\t\t\t\t\t<div className='componentsItemContainer'>\r\n\t\t\t\t\t{componentList.map(component => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className='componentsItemContainer-item'>\r\n\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\r\n\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\theader={component.name}\r\n\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\textra={genExtraForGroup(setitemVisible,handleDeleteComponent, component.id,setComponentId)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=' componentsItemContainer-white'>\r\n\t\t\t\t\t\t\t\t\t\t{component.items && component.items.length > 0 && component.items.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='componentsItemContainer-item-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theader={item.title || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\textra={genExtra(updateComponentByDeleting,component,item.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ComponentListComponentItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetComponentList={setComponentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentList={componentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={component}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentUpdate={componentUpdate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t{!(component.items.length > 0 ) && <Empty title='No item Found'/>}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t\t<AddNewComponent \r\n          addNewCategoryVisible={groupVisible} \r\n          setAddNewCategoryVisible={setgroupVisible} \r\n          setComponentList={setComponentList}\r\n          componentList={componentList}\r\n          />\r\n\t\t  <AddNewComponentItem \r\n          addNewCategoryVisible={itemVisible} \r\n          setAddNewCategoryVisible={setitemVisible} \r\n          setComponentList={setComponentList}\r\n\t\t  componentList={componentList}\r\n\t\t  updateComponentByAddingItem={updateComponentByAddingItem}\r\n\t\t  componentId={componentId}\r\n          />\r\n\r\n\r\n\t\t  \r\n\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Add New Group Component\"\r\n\t\t\t\tvisible={false}\r\n\t\t\t\tonOk={handleOkGroup}\r\n\t\t\t\tonCancel={handleCancelGroup}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<InputField label='Group Component Name' />\r\n\t\t\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Component;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport reqwest from 'reqwest';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Form } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    ArrowUpOutlined,\r\n    LoadingOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Brand Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    themeList?: any;\r\n    setThemeList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\r\n\r\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\r\n    const [fileList, setfileList] = useState([]);\r\n    const [uploading, setuploading] = useState(false);\r\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [name, setname] = useState('')\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('type', selectedThemeTypeValue)\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n\r\n\r\n        const addThemeRes = await handleAddthemeFetch({\r\n\r\n            body: formData,\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addThemeRes && addThemeRes.status === 'ok') {\r\n\r\n            setThemeList([...themeList, {\r\n                id: addThemeRes['id'] || '',\r\n                key: addThemeRes['id'] || '',\r\n                name: addThemeRes['name'] || '',\r\n                thumbnail: addThemeRes['thumbnail'] || '',\r\n                path: addThemeRes['path'] || '',\r\n                added: addThemeRes['added'] || '',\r\n                // @ts-ignore\r\n                ...addThemeRes\r\n            }]);\r\n\r\n            setfileList([]);\r\n            setuploading(false);\r\n            openSuccessNotification('Theme Uploaded!')\r\n            setAddNewCategoryVisible(false);\r\n            setname('');\r\n            setselectedThemeTypeValue('');\r\n\r\n\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification('Theme upload failed, Something went wrong');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = () => {\r\n        if (addThemeState.isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        // @ts-ignore\r\n        else setmyThumbnailImage([]);\r\n    }\r\n\r\n\r\n    const onChangeThemeType = (value) => {\r\n        setselectedThemeTypeValue(value);\r\n    }\r\n\r\n\r\n\r\n    const uploadProps = {\r\n        //  listType: 'picture',\r\n        onRemove: file => {\r\n            setfileList(filelist => {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                newFileList.splice(index, 1);\r\n                return newFileList;\r\n            })\r\n\r\n        },\r\n        beforeUpload: file => {\r\n            console.log('file', file)\r\n            setfileList(filelist => {\r\n                return [...fileList, file]\r\n            })\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('type', selectedThemeTypeValue)\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n        setuploading(true);\r\n\r\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n        // \tbody: formData\r\n        //   });\r\n\r\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // You can use any AJAX library you like\r\n        reqwest({\r\n            url: 'http://localhost:5000/admin/theme/add',\r\n            method: 'post',\r\n            processData: false,\r\n            data: formData,\r\n            withCredentials: true,\r\n            success: () => {\r\n                setfileList([]);\r\n                setuploading(false);\r\n                openSuccessNotification('Theme Uploaded!')\r\n                setAddNewCategoryVisible(false);\r\n                setname('');\r\n                setselectedThemeTypeValue('');\r\n                setThemeList([...themeList, {\r\n\r\n                }])\r\n                // setThemeList([...themeList, {\r\n                //     id: addCategoryRes['id'] || '',\r\n                //     key: addCategoryRes['id'] || '',\r\n                //     name: addCategoryRes['name'] || '',\r\n                //     description: addCategoryRes['description'] || '',\r\n                //     // @ts-ignore\r\n                //     ...addCategoryRes\r\n                // }])\r\n            },\r\n            error: () => {\r\n                setuploading(false);\r\n                openErrorNotification('Theme Upload failed!')\r\n                message.error('upload failed.');\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        console.log('beforeUpload', file)\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n\r\n\r\n        getBase64(file, imageUrl => {\r\n            setImageUrl(imageUrl)\r\n            setLoadingThumbnail(false)\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('imageUrl', imageUrl)\r\n\r\n\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n\r\n\r\n    console.log('addThemeState', addThemeState)\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                title=\"Add New Theme\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                okText='Upload Theme'\r\n                okButtonProps={{\r\n                    loading: uploading,\r\n                    htmlType: \"submit\",\r\n                    disabled: getisSubmitButtonDisabled()\r\n                }}\r\n\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n\r\n                <Input\r\n                    label='Name'\r\n                    value={name}\r\n                    name='name'\r\n                    onChange={(e: any) => setname(e.target.value)}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel'>Thumbnail Image</h3>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={beforeUpload}\r\n                    multiple={false}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n\r\n                {/* <div style={{ marginTop: '15px' }}></div> */}\r\n\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Type\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Form.Item\r\n                    validateStatus={(addThemeState.error['error']['type']) ? \"error\" : \"\"}\r\n                    help={addThemeState.error['error']['type']}\r\n                // noStyle={true}\r\n                >\r\n                    <Select\r\n                        style={{ width: '100%' }}\r\n                        placeholder='Select a Theme type'\r\n                        optionFilterProp='children'\r\n                        onChange={onChangeThemeType}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        <Option value={'spa'}> API Based Template (React/Angular/Vue) </Option>\r\n                        <Option value={'template'}> Alpha Template </Option>\r\n                    </Select>\r\n\r\n                </Form.Item>\r\n\r\n\r\n\r\n                <div style={{\r\n                    marginTop: '20px'\r\n                }}></div>\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Folder (.zip)\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Dragger\r\n                    multiple={false}\r\n                    className='upload-list-inline'\r\n                    listType='picture'\r\n                    style={{\r\n                        background: '#fff'\r\n                    }}\r\n                    {...uploadProps}\r\n                >\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\r\n                        other band files\r\n\t\t\t\t\t\t\t</p>\r\n                </Dragger>\r\n\r\n                {addThemeState.error['error']['folder'] && (\r\n                    <p style={{\r\n                        color: 'rgba(255, 0, 0, 0.507)'\r\n                    }}>{addThemeState.error['error']['folder']}</p>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={false}\r\n                setmyThumbnailImage={setmyThumbnailImage}\r\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                myThumbnailImage={myThumbnailImage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button, Input,Tooltip, Modal, notification, Popconfirm,Badge} from 'antd';\r\nimport { \r\n  PlusOutlined, EditOutlined, \r\n  DeleteOutlined,EditFilled,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewTheme from \"./AddNewTheme\";\r\n\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [themeList,setThemeList] = useState([]); \r\n\r\n    const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\r\n    const [activeThemeState, handleActiveThemeFetch] = useHandleFetch({}, 'activeTheme');\r\n    const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch({}, 'deletetheme');\r\n  \r\n\r\n    \r\n    useEffect(()=>{\r\n     const setThemes = async () => {\r\n       const themes = await handleThemeListFetch({}); \r\n       // @ts-ignore\r\n       setThemeList(themes); \r\n     }\r\n     setThemes(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('orderState',themeState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(themeState.data.length > 0 ){\r\n      const newThemeList = themeState.data.filter(item => item.name.includes(value)); \r\n      setThemeList(newThemeList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleActiveTheme = async (id) => {\r\n    const activeThemeRes = await handleActiveThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(activeThemeRes && activeThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme activated'); \r\n   \r\n  }\r\n  else {\r\n    openErrorNotification(\"Couldn't activate the theme, Something went wrong\")\r\n  }\r\n     \r\n     \r\n  }\r\n\r\n\r\n  const handleDeleteTheme = async (id) => {\r\n    const deleteThemeRes = await handleDeleteThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(deleteThemeRes && deleteThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme Deleted'); \r\n    const newThemeList =  themeList.filter(item => item.id !== id);\r\n    setThemeList(newThemeList); \r\n  }\r\n  else {\r\n  openErrorNotification(\"Couldn't delete, Something went wrong\")\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n\t\t Themes\r\n \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search themes..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {themeState.done && themeList.length > 0 && (\r\n   \r\n   <div className='categoryListContainer__bodyContainerList'>\r\n\t\t\r\n          {themeState.data.map(theme => {\r\n            return (\r\n              <div className='categoryListContainer__bodyContainerList-item'>\r\n              {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n               \r\n                  </Badge> */}\r\n                  <div className='categoryListContainer__bodyContainerList-item-top'>\r\n                  <img\r\n                    alt='theme img'\r\n                    src='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n                  />\r\n                </div>\r\n                <div className='categoryListContainer__bodyContainerList-item-body'>\r\n                  <h3> {theme.name} </h3>\r\n     \r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Tooltip placement='top' title='Active this theme'>\r\n                    <Button\r\n                   size='small'\r\n                   className='btnPrimaryClassNameoutline'\r\n                   icon={<CheckOutlined />}\r\n                   onClick={() => handleActiveTheme(theme.id)}\r\n                  >\r\n                  Set Active\r\n                 \r\n                 </Button>\r\n     \r\n     \r\n                      \r\n                    </Tooltip>\r\n     \r\n                    <Tooltip placement='top' title='Delete theme'>\r\n                    <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteTheme(theme.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <Button\r\n                        size='small'\r\n                        type='link'\r\n                        danger={true}\r\n                        icon={<DeleteOutlined />}\r\n                      >\r\n                        \r\n                        </Button>\r\n           </Popconfirm>\r\n\r\n\r\n                     \r\n     \r\n                        \r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n          })}\r\n         </div>\r\n\t\t)}\r\n\r\n\r\n        {themeState.isLoading && <DataTableSkeleton />}\r\n\r\n        {themeState.done && !(themeList.length > 0) && (\r\n        <Empty title='No Theme found'  />\r\n        )}\r\n        \r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    {themeState.done && \r\n    <AddNewTheme \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          themeList={themeState.data}\r\n          setThemeList={setThemeList}\r\n           />}\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Image\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Invoice = (props: Props) => {\r\n\treturn <div>Invoice</div>;\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    adminName: '',\r\n    adminEmail: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSettings');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addBrandRes = await handleUpdateSiteSettingsFetch({\r\n\r\n            body: {\r\n                title: values.title,\r\n                adminName: values.adminName,\r\n                adminEmail: values.adminEmail,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addBrandRes && addBrandRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name && !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Site Title'\r\n                                    value={values.title}\r\n                                    name='title'\r\n                                    isError={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n\r\n                                    errorString={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('title');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Admin Name'\r\n                                    value={values.adminName}\r\n                                    name='adminName'\r\n                                    isError={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n\r\n                                    errorString={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminName');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <Input\r\n                                    label='Admin Email'\r\n                                    value={values.adminEmail}\r\n                                    name='name'\r\n                                    isError={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n\r\n                                    errorString={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminEmail');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <Button type='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    invoiceTitle: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    additionalText: \"\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [updateInfovSettingsState, handleUpdateInvoiceSettingsFetch] = useHandleFetch({}, 'updateInvoiceSettings');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\r\n\r\n            body: {\r\n                invoiceTitle: values.invoiceTitle,\r\n                address: values.values.address,\r\n                phone: values.values.phone,\r\n                email: values.values.email,\r\n                additionalText: values.values.additionalText\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name && !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Company Name'\r\n                                    value={values.invoiceTitle}\r\n                                    name='invoiceTitle'\r\n                                    isError={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n\r\n                                    errorString={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('invoiceTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Phone Number'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Additional Text'\r\n                                    value={values.additionalText}\r\n                                    name='additionalText'\r\n                                    isError={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n\r\n                                    errorString={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('additionalText');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <TextArea\r\n                                    label='Address'\r\n                                    value={values.address}\r\n                                    name='address'\r\n                                    isError={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n\r\n                                    errorString={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('address');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <Button type='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AdminSiteInfo from \"./AdminSiteInfo\";\r\nimport SiteInfoInvoice from \"./SiteInfoInvoice\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [addBrandState, handleAddBrandFetch] = useHandleFetch({}, 'addBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleAddBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([...brandList, {\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tconsole.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name && !values.description || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='siteInfoContainer'>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\tSite Settings\r\n\t\t\t\t\t\t\t</h2>\r\n\r\n\t\t\t\t\t\t\t<Tabs defaultActiveKey=\"1\" >\r\n\t\t\t\t\t\t\t\t<TabPane tab=\"Site Info\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t<AdminSiteInfo />\r\n\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t<TabPane tab=\"Logo & Icon\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginRight: '30px'\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Site Logo</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t// marginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Site Icon</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-overlay'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileAddOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\r\n\t\t\t\t\t\t\t\t<TabPane tab=\"Invoice Information\" key=\"3\">\r\n\r\n\t\t\t\t\t\t\t\t\t<SiteInfoInvoice />\r\n\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n/*\r\n\t<div className='categoryListContainer__bodyContainerList'>\r\n\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t<Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n*/","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\ninterface Props {\r\n\tsetdeliveryChargeList: any;\r\n\tdeliveryChargeList: any;\r\n\tdeliveryChargeItem: any;\r\n}\r\n\r\nconst DeliveryCharge = ({ deliveryChargeItem, setdeliveryChargeList, deliveryChargeList }: Props) => {\r\n\tconst [ deliveryCharge, setdeliveryCharge ] = useState({\r\n\t\tminimumOrder: deliveryChargeItem.minimumOrder,\r\n\t\tcharge: deliveryChargeItem.charge\r\n\t});\r\n\r\n\tconst handleDeliveryChargeChange = (e) => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetdeliveryCharge({\r\n\t\t\t...deliveryCharge,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn deliveryChargeList.map((item) => item.id).indexOf(deliveryChargeItem.id);\r\n\t\t\t};\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\tconst updatedItem = Object.assign({}, deliveryChargeList[index], { ...deliveryCharge });\r\n\t\t\tconst updateAttributeList = [\r\n\t\t\t\t...deliveryChargeList.slice(0, index),\r\n\t\t\t\tupdatedItem,\r\n\t\t\t\t...deliveryChargeList.slice(index + 1)\r\n\t\t\t];\r\n\t\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t\t},\r\n\t\t[ deliveryCharge ]\r\n\t);\r\n\r\n\tconst handleAttributeDelete = () => {\r\n\t\tconst updateAttributeList = deliveryChargeList.filter((item) => item.id !== deliveryChargeItem.id);\r\n\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='dubbleRowInputs'>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Minimum Order'\r\n\t\t\t\t\tvalue={deliveryCharge.minimumOrder}\r\n\t\t\t\t\tname='minimumOrder'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Charge'\r\n\t\t\t\t\tvalue={deliveryCharge.charge}\r\n\t\t\t\t\tname='charge'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DeliveryCharge;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tpickUpLocation: '',\r\n\ttime: '',\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst AddNewRegion = ({ addNewCategoryVisible, setAddNewCategoryVisible, regionList, setRegionList }: Props) => {\r\n\r\n\tconst [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\tconst [deliveryChargeList, setdeliveryChargeList] = useState([{\r\n\t\tminimumOrder: '',\r\n\t\tcharge: '',\r\n\t\tid: '0'\r\n\t}]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tif (deliveryChargeList.length > 0) {\r\n\t\t\tconst charge = {};\r\n\r\n\t\t\tfor (let item of deliveryChargeList) {\r\n\t\t\t\tif (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n\t\t\t\t\tcharge[item['minimumOrder']] = item['charge']\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge: {}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\t\tsetdeliveryChargeList([...deliveryChargeList, {\r\n\t\t\tminimumOrder: '',\r\n\t\t\tcharge: '',\r\n\t\t\tid: `${deliveryChargeList.length}`\r\n\t\t}])\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconsole.log('deliveryChargeList', deliveryChargeList)\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Region\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tmode=\"multiple\"\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\tDelivery Charges\r\n            </h3>\r\n\r\n\t\t\t\t\t\t\t{deliveryChargeList.map(deliveryChargeItem => {\r\n\t\t\t\t\t\t\t\treturn <DeliveryCharge\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeItem={deliveryChargeItem}\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeList={deliveryChargeList} setdeliveryChargeList={setdeliveryChargeList} />\r\n\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '5px',\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<Button size='middle'\r\n\t\t\t\t\t\t\t\tonClick={handleAddDeliveryCharge}\r\n\t\t\t\t\t\t\t\ttype=\"dashed\" icon={<PlusOutlined />}>Add Charge</Button>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewRegion;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string()\r\n      .label('Name')\r\n      .required()\r\n      .min(2, 'Name must have at least 2 characters '),\r\n\t  pickUpLocation: Yup.string()\r\n      .label('Pick up Location')\r\n      .required()\r\n\t  .min(2, 'Pick up Location must have at least 2 characters '),\r\n\t  time: Yup.string()\r\n      .label('Time')\r\n      .required()\r\n      .min(2, 'Time must have at least 2 characters '),\r\n  \r\n  });\r\n\r\n\r\n\r\n  const openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tregionList?:any;\r\n\tsetRegionList?:any; \r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setRegionList, regionList }: Props) => {\r\n\tconst [updateRegionState, handleUpdateRegionFetch] = useHandleFetch({}, 'updateRegion');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\tconsole.log('selectedCityValue',selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleUpdateRegionFetch({\r\n\t\t\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\tcharge : {}\r\n\t\t\t},\r\n\t\t  });\r\n\r\n\t\t   // @ts-ignore\r\n\t\t   if(addRegionRes && addRegionRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn regionList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInTag();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, regionList[index], { ...addRegionRes });\r\n\t\t\t  const updateRegionList = [...regionList.slice(0, index), updatedItem, ...regionList.slice(index + 1)];\r\n\t\t\t  setRegionList(updateRegionList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\r\n\t};\r\n\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.name ||\r\n            !values.pickUpLocation ||\r\n            !values.time ){ \r\n\t\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n    \t\t\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Name'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Pick up Location'\r\n\t\t\t   value={values.pickUpLocation}\r\n\t\t\t   name='pickUpLocation'\r\n\t\t\t   isError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('pickUpLocation');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n     \r\n            \r\n\r\n\r\n    \r\n          <div style={{\r\n              marginRight: '10px'\r\n          }}>\r\n          <Input \r\n\t\t\t   label='Time'\r\n\t\t\t   value={values.time}\r\n\t\t\t   name='time'\r\n\t\t\t   isError={(touched.time && errors.time) ||\r\n\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t  (!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('time');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n          </div>\r\n\r\n\r\n\r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewRegion from \"./AddNewRegion\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setRegionList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setRegionList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch({}, 'deleteRegion');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteRegionRes = await handleDeleteRegioFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteRegionRes && deleteRegionRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Region'); \r\n\t\t\t  const newRegionList =  data.filter(item => item.id !== id);\r\n\t\t\t  setRegionList(newRegionList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    regionList={data}\r\n    setRegionList={setRegionList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [regionList,setRegionList] = useState([]); \r\n\r\n    const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setRegions = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setRegionList(regions); \r\n     }\r\n     setRegions(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('regionState',regionState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(regionState.data.length > 0 ){\r\n      const newTagList = regionState.data.filter(item => item.name.includes(value)); \r\n      setRegionList(newTagList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Regions \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search regions..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {regionState.done && regionList.length > 0 && <MyTable \r\n        setRegionList={setRegionList}\r\n        data={regionList} />}\r\n        {regionState.isLoading && <DataTableSkeleton />}\r\n\r\n        {regionState.done && !(regionList.length > 0) && (\r\n\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{regionState.done && \r\n    <AddNewRegion \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          regionList={regionState.data}\r\n          setRegionList={setRegionList}\r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch, withRouter } from 'react-router-dom';\r\nimport { Layout, Menu, Upload, message } from 'antd';\r\nimport Title from 'antd/lib/typography/Title';\r\n\r\nimport {\r\n\tPieChartOutlined,\r\n\tFileOutlined,\r\n\tTeamOutlined,\r\n\tTagOutlined,\r\n\tBranchesOutlined,\r\n\tGoldOutlined,\r\n\tFilterOutlined,\r\n\tTagsOutlined,\r\n\tCarOutlined,\r\n\tShoppingCartOutlined,\r\n\tMailOutlined,\r\n\tSettingOutlined,\r\n\tInboxOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderComponent = (props: any) => {\r\n\tconst [collapsed, setcollapsed] = useState(false);\r\n\tconst onCollapse = (collapsed: any) => {\r\n\t\tconsole.log(collapsed);\r\n\t\tsetcollapsed(collapsed);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Sider collapsible collapsed={collapsed} onCollapse={onCollapse} theme='light'>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginLeft: '22px',\r\n\t\t\t\t\tmarginRight: '20px',\r\n\t\t\t\t\tmarginTop: '8px',\r\n\t\t\t\t\twidth: '100%'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Title style={{ color: '#0072EA' }} level={4}>\r\n\t\t\t\t\tALPHA\r\n\t\t\t\t</Title>\r\n\t\t\t</div>\r\n\t\t\t<Menu selectable={true} defaultSelectedKeys={['1']} mode='inline'>\r\n\t\t\t\t<Menu.Item key='1' icon={<PieChartOutlined />}>\r\n\t\t\t\t\t<Link to='/'>Dashboard</Link>\r\n\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t<SubMenu key='sub1' icon={<TagOutlined />} title='Category'>\r\n\t\t\t\t\t<Menu.Item key='2'>\r\n\t\t\t\t\t\t<Link to='/category'>List Categories</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t{/* <Menu.Item key='3'>\r\n\t\t\t\t\t\t<Link to='/category/new'>Add Category</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n\t\t\t\t</SubMenu>\r\n\r\n\t\t\t\t<SubMenu key='sub2' icon={<BranchesOutlined />} title='Brand'>\r\n\t\t\t\t\t{/* <Menu.Item key='4'>\r\n\t\t\t\t\t\t<Link to='/brand/new'>Add Brand</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n\t\t\t\t\t<Menu.Item key='5'>\r\n\t\t\t\t\t\t<Link to='/brand'>List Brand</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\r\n\t\t\t\t<SubMenu\r\n\t\t\t\t\tkey='sub3'\r\n\t\t\t\t\ticon={<GoldOutlined />}\r\n\t\t\t\t\ttitle='Product'\r\n\t\t\t\t\tonTitleClick={() => props.history.push('/product')}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Menu.Item key='6'>\r\n\t\t\t\t\t\t<Link to='/product/new'>Add Product</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t\t<Menu.Item key='2'>\r\n\t\t\t\t\t\t<Link to='/category'>List Categories</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t\t<Menu.Item key='5'>\r\n\t\t\t\t\t\t<Link to='/brand'>List Brand</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\r\n\t\t\t\t<Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t<Link to='/tag'>Tags</Link>\r\n\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t<Menu.Item key='10' icon={<CarOutlined />}>\r\n\t\t\t\t\t<Link to='/delivery'>Delivery</Link>\r\n\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t<SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\r\n\t\t\t\t\t<Menu.Item key='11'>\r\n\t\t\t\t\t\t<Link to='/order'>List Orders</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='12'>\r\n\t\t\t\t\t\t<Link to='/order/new'>Add Order</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\r\n\t\t\t\t<Menu.Item key='13' icon={<TeamOutlined />}>\r\n\t\t\t\t\t<Link to='/customer'>Customer</Link>\r\n\t\t\t\t</Menu.Item>\r\n\r\n\t\t\t\t<SubMenu key='sub5' icon={<MailOutlined />} title='Email'>\r\n\t\t\t\t\t<Menu.Item key='14'>STMP Configuration</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='15'>Auto emails</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='16'>Compose Email</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='177'>Sent emails</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\r\n\t\t\t\t<SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\r\n\t\t\t\t\t<Menu.Item key='17'>\r\n\t\t\t\t\t\t<Link to='/page/new'> Add new Page</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='18'>\r\n\t\t\t\t\t\t<Link to='/page'> List Pages</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\r\n\t\t\t\t<SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\r\n\t\t\t\t\t<Menu.Item key='19'>\r\n\t\t\t\t\t\t<Link to='/settings/siteInfo'>Site information</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='20'>\r\n\t\t\t\t\t\t<Link to='/settings/themes'>Manage themes</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='21'>\r\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='22'>\r\n\t\t\t\t\t\t<Link to='/settings/invoice'>Invoice</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t<Menu.Item key='23'>\r\n\t\t\t\t\t\t<Link to='/settings/components'>Components</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu>\r\n\t\t\t</Menu>\r\n\t\t</Sider>\r\n\t);\r\n};\r\n\r\nexport default withRouter(SiderComponent);\r\n","import React from 'react';\n\n// import pages\nimport { Overview } from './pages/overview';\nimport { CategoryList, CategoryDetail } from './pages/category';\nimport { BrandList, AddNewBrand } from './pages/brand';\nimport { ProductList, AddNewProduct } from './pages/product';\nimport { TagList, AddNewTag } from './pages/tag';\nimport { CustomerList } from './pages/customer';\nimport { PagesList, AddNewPage } from './pages/pages';\nimport { AttributeList } from './pages/attribute';\nimport { OrderList, AddNewOrder } from './pages/order';\nimport { Component, ManageThemes, Image, Invoice, SiteInfo } from './pages/settings';\nimport { Delivery } from './pages/delivery';\nimport Login from './pages/auth/login';\n// import components\nimport Sider from './layout/Sider';\n\n// import third party ui libraries\nimport { Layout } from 'antd';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst { Header, Content, Footer } = Layout;\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/login' exact>\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t\t<Switch>\n\t\t\t\t<Layout style={{ minHeight: '100vh' }}>\n\t\t\t\t\t<Sider />\n\t\t\t\t\t<Layout className='site-layout'>\n\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\tclassName='site-layout-background'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackground: '#fff',\n\t\t\t\t\t\t\t\tborderBottom: '1px solid #fafafa',\n\t\t\t\t\t\t\t\tborderLeft: '1px solid #fafafa',\n\t\t\t\t\t\t\t\theight: '50px'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Content\n\t\t\t\t\t\t\thasSider={true}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor: '#Fff'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route path='/' exact>\n\t\t\t\t\t\t\t\t\t<Overview />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/category' exact>\n\t\t\t\t\t\t\t\t\t<CategoryList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/category/:name' exact>\n\t\t\t\t\t\t\t\t\t<CategoryDetail />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\tCategoryDetail\n\t\t\t\t\t\t\t\t<Route path='/brand/new' exact>\n\t\t\t\t\t\t\t\t\t<AddNewBrand />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/brand' exact>\n\t\t\t\t\t\t\t\t\t<BrandList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/product' exact>\n\t\t\t\t\t\t\t\t\t<ProductList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t{/* <Route path='/product/new' exact>\n\t\t\t\t\t\t\t\t\t<AddNewProduct />\n\t\t\t\t\t\t\t\t</Route> */}\n\t\t\t\t\t\t\t\t<Route path='/tag' exact>\n\t\t\t\t\t\t\t\t\t<TagList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/product/new' exact>\n\t\t\t\t\t\t\t\t\t<AddNewTag />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/attribute' exact>\n\t\t\t\t\t\t\t\t\t<AttributeList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/order' exact>\n\t\t\t\t\t\t\t\t\t<OrderList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/order/new' exact>\n\t\t\t\t\t\t\t\t\t<AddNewOrder />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/customer' exact>\n\t\t\t\t\t\t\t\t\t<CustomerList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/page' exact>\n\t\t\t\t\t\t\t\t\t<PagesList />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/delivery' exact>\n\t\t\t\t\t\t\t\t\t<Delivery />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/page/new' exact>\n\t\t\t\t\t\t\t\t\t<AddNewPage />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/settings/components' exact>\n\t\t\t\t\t\t\t\t\t<Component />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/settings/image' exact>\n\t\t\t\t\t\t\t\t\t<Image />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/settings/themes' exact>\n\t\t\t\t\t\t\t\t\t<ManageThemes />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/settings/invoice' exact>\n\t\t\t\t\t\t\t\t\t<Invoice />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path='/settings/siteInfo' exact>\n\t\t\t\t\t\t\t\t\t<SiteInfo />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Content>\n\t\t\t\t\t\t<Footer style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t© 2020 The Alpha E-commerce Engine - Developed By Lotus Technology Development.\n\t\t\t\t\t\t</Footer>\n\t\t\t\t\t</Layout>\n\t\t\t\t</Layout>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","export function actionShouldBlock( meta ) {\r\n    return !meta || !meta.async || !meta.blocking;\r\n}\r\n\r\nexport function actionFinished ( type ) {\r\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\r\n}\r\n","import * as utils from \"./utils\";\r\n\r\nconst busyReducer = ( state = 0, action ) => {\r\n    if ( utils.actionShouldBlock( action.meta ) ) {\r\n        return state;\r\n    }\r\n    if ( utils.actionFinished( action.type ) ) {\r\n        return state - 1;\r\n    }\r\n    return state + 1;\r\n};\r\n\r\nexport default busyReducer;\r\n","import reducer from \"./reducers\";\r\n\r\nexport default reducer;\r\n","export function productPositionInCart(cart, product) {\r\n  return cart.map(item => item.product.id).indexOf(product.id);\r\n}\r\n\r\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\r\n  return {\r\n    product,\r\n    quantity,\r\n    isSelectedForCheckout,\r\n  };\r\n}\r\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\r\n    const reducer = reducerMap[ action.type ];\r\n    return reducer ? reducer( state, action ) : state;\r\n};\r\n","import isomorphicFetch from 'isomorphic-fetch';\r\n\r\nexport default (url, method, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: requestHeaders(),\r\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\r\n\t};\r\n\r\n\treturn isomorphicFetch(url, options).then(res =>\r\n\t\tparseStatus(res.status, res.json())\r\n\t);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (status >= 200 && status < 300) {\r\n\t\t\tres.then(response => resolve(response));\r\n\t\t} else {\r\n\t\t\tres.then(response => reject({ status, response }));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction requestHeaders() {\r\n\treturn {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t};\r\n}\r\n","export function getCartItemQuantity(cart, id) {\r\n  return cart.find((item) => item.product.id === id).quantity;\r\n}\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n  if (!cartItems.length > 0) {\r\n    return 0;\r\n  }\r\n\r\n  const prices = cartItems.map((cartItem) => {\r\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\r\n  });\r\n\r\n  const totalPrice = prices.reduce((a, b) => {\r\n    return a + b;\r\n  }, 0);\r\n  return totalPrice;\r\n};\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as cartOperations from \"./operations\";\r\nimport * as cartSelectors from \"./selectors\";\r\n\r\nexport {\r\n    cartOperations,\r\n    cartSelectors,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { product, quantity, isSelectedForCheckout } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    if (index === -1) {\r\n      return [\r\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\r\n        ...state,\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.id\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n\r\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\r\n    const { cartItems } = action.payload;\r\n\r\n    if (cartItems.length > 0) {\r\n      return cartItems;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n\r\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\r\n    const { product } = action.payload;\r\n\r\n    const index = utils.productPositionInCart(state, product.product);\r\n    if (index === -1) {\r\n      return [...state, { ...product, isSelectedForCheckout: true }];\r\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\r\n      const tempArrayWithOutOldProduct = state.filter(\r\n        (item) => item.product.id !== product.product.id\r\n      );\r\n\r\n      return [\r\n        ...tempArrayWithOutOldProduct,\r\n        { ...product, isSelectedForCheckout: true },\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.product.id\r\n    );\r\n\r\n    return [\r\n      ...tempArrayWithOutOldProduct,\r\n      { ...product, isSelectedForCheckout: false },\r\n    ];\r\n  },\r\n\r\n  [types.CHANGE_QUANTITY]: (state, action) => {\r\n    const { product, quantity } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n\r\n    const updatedItem = Object.assign({}, state[index], { quantity });\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default cartReducer;\r\n","export const SET_CART = 'cart/SET';\r\nexport const TOGGLE = 'cart/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\r\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\r\nexport const REMOVE = 'cart/REMOVE';\r\nexport const CLEAR = 'cart/CLEAR';\r\n","export function productPositionInWishList(wishList, productId) {\r\n  return wishList.map(item => item).indexOf(productId);\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as wishListOperations from './operations';\r\nimport * as wishListSelectors from './selectors';\r\n\r\nexport { wishListOperations, wishListSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst wishListReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    if (index === -1) {\r\n      return [...state, productId];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item !== productId\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n  [types.ADD_WISHLIST]: (state, action) => {\r\n    const wishlist = action.payload;\r\n    return [...wishlist];\r\n  },\r\n\r\n  [types.REMOVE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default wishListReducer;\r\n","export const TOGGLE = 'wishList/TOGGLE';\r\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\r\nexport const REMOVE = 'wishList/REMOVE';\r\nexport const CLEAR = 'wishList/CLEAR';\r\n","export function getCartItemQuantity( cart, id ) {\r\n    return cart.find( item => item.product.id === id ).quantity;\r\n}\r\n\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n    if(!cartItems.length > 0){\r\n        return 0; \r\n    }\r\n\r\n    return cartItems.reduce((a,b) => {\r\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\r\n    },0); \r\n\r\n}","import reducer from './reducers';\r\n\r\nimport * as checkoutOperations from './operations';\r\nimport * as checkoutSelectors from './selectors';\r\n\r\nexport { checkoutOperations, checkoutSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst checkoutReducer = createReducer(initialState)({\r\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\r\n    const { products } = action.payload;\r\n\r\n    if (products.length > 0) {\r\n      const uniqueProductsOfCheckout = products.filter(function(product) {\r\n        return state.indexOf(product) == -1;\r\n      });\r\n      return uniqueProductsOfCheckout;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default checkoutReducer;\r\n","export const SET_CART = 'checkout/SET';\r\nexport const TOGGLE = 'checkout/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\r\nexport const REMOVE = 'checkout/REMOVE';\r\nexport const CLEAR = 'checkout/CLEAR';\r\n","export function productPositionInCart( cart, product ) {\r\n    return cart.map( item => item.product.id ).indexOf( product.id );\r\n}\r\n\r\nexport function newCartItem( product, quantity ) {\r\n    return {\r\n        product,\r\n        quantity,\r\n    };\r\n}\r\n","export const ADD = 'serach/ADD';\r\nexport const UPDATE = 'serach/UPDATE';\r\nexport const REMOVE = 'serach/REMOVE';\r\nexport const CLEAR = 'serach/CLEAR';\r\n","export function queryPositionInQueryList(queryList, query) {\r\n  return queryList.map(item => item.key).indexOf(query.key);\r\n}\r\n\r\nexport function newQueryItem(query) {\r\n  return query;\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as queryOperations from './operations';\r\nimport * as querySelectors from './selectors';\r\n\r\nexport { queryOperations, querySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n       id: uniqueId,\r\n       key: 'searchQuery',\r\n       value: string | product => {name,id,image}\r\n       created: Date,\r\n       lastUpdated: Date\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst searyQueryReducer = createReducer(initialState)({\r\n  [types.ADD]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, query);\r\n    if (index === -1) {\r\n      return [utils.newQueryItem(query), ...state];\r\n    }\r\n\r\n    const currentItem = state[index];\r\n    const updatedItem = Object.assign({}, currentItem);\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.UPDATE]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const oldQuery = state.find(item => item.key !== query.key);\r\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\r\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default searyQueryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\n/* State shape\r\n{\r\n    details: product,\r\n    list: [ product ],\r\n}\r\n*/\r\n\r\nconst detailsReducer = createReducer( null )( {\r\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\r\n} );\r\n\r\nconst listReducer = createReducer( [ ] )( {\r\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\r\n} );\r\n\r\nexport default combineReducers( {\r\n    details: detailsReducer,\r\n    list: listReducer,\r\n} );\r\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\r\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\r\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\r\n\r\nexport const FETCH_LIST = \"product/FETCH_LIST\";\r\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\r\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as productOperations from \"./operations\";\r\n\r\nexport {\r\n    productOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst authReducer = createReducer(false)({\r\n  [types.LOGIN]: () => true,\r\n  [types.LOGOUT]: () => false,\r\n});\r\n\r\nconst redirectAfterLoginReducer = createReducer(null)({\r\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated: authReducer,\r\n  redirectAfterLogin: redirectAfterLoginReducer,\r\n});\r\n","export const LOGIN = \"session/LOGIN\";\r\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\r\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\r\nexport const LOGOUT = \"session/LOGOUT\";\r\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\r\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\r\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as sessionOperations from \"./operations\";\r\n\r\nexport {\r\n    sessionOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_CATEGORIES]: (state, action) => {\r\n    const { categories } = action.payload;\r\n\r\n    if (categories) {\r\n      return categories;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_CATEGORIES]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\r\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\r\n","import reducer from './reducers';\r\n\r\nimport * as categoryOperations from './operations';\r\nimport * as categorySelectors from './selectors';\r\n\r\nexport { categoryOperations, categorySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = {};\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\r\n    const { response } = action.payload;\r\n\r\n    if (response) {\r\n      return { ...state, ...response };\r\n    }\r\n\r\n    return { ...state };\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\r\n","import reducer from './reducers';\r\n\r\nimport * as cacheOperations from './operations';\r\nimport * as cacheSelectors from './selectors';\r\n\r\nexport { cacheOperations, cacheSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_BRAND]: (state, action) => {\r\n    const { brands } = action.payload;\r\n\r\n    if (brands) {\r\n      return brands;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_BRAND]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_BRAND = 'category/ADD_BRAND';\r\nexport const GET_BRAND = 'category/GET_BRAND';\r\n","import reducer from './reducers';\r\n\r\nimport * as brandOperations from './operations';\r\nimport * as brandSelectors from './selectors';\r\n\r\nexport { brandOperations, brandSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_TAGS]: (state, action) => {\r\n    const { tags } = action.payload;\r\n\r\n    if (tags) {\r\n      return tags;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_TAGS]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_TAGS = 'tag/ADD_TAGS';\r\nexport const GET_TAGS = 'tag/GET_TAGS';\r\n","import reducer from './reducers';\r\n\r\nimport * as tagOperations from './operations';\r\nimport * as tagSelectors from './selectors';\r\n\r\nexport { tagOperations, tagSelectors };\r\n\r\nexport default reducer;\r\n","import { fetch } from \"../utils\";\r\n\r\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\r\n\r\nconst apiService = ( ) => ( next ) => ( action ) => {\r\n    const result = next( action );\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return result;\r\n    }\r\n\r\n    const { path, method = \"GET\", body } = action.meta;\r\n\r\n    if ( !path ) {\r\n        throw new Error( `'path' not specified for async action ${ action.type }` );\r\n    }\r\n\r\n    const url = `${ baseUrl }${ path }`;\r\n\r\n    return fetch( url, method, body ).then(\r\n        res => handleResponse( res, action, next ),\r\n        err => handleErrors( err, action, next ),\r\n    );\r\n};\r\n\r\nexport default apiService;\r\n\r\nfunction handleErrors( err, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_FAILED`,\r\n        payload: err,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return Promise.reject( err );\r\n}\r\n\r\nfunction handleResponse( res, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_COMPLETED`,\r\n        payload: res,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return res;\r\n}\r\n","const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\r\n    if ( !active ) {\r\n        return next( action );\r\n    }\r\n\r\n    const prevState = store.getState( );\r\n    const result = next( action );\r\n    const nextState = store.getState( );\r\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\r\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\r\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\r\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\r\n    logGroupEnd( );\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed( ...args ) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logGroupEnd( ...args ) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logInfo( ...args ) {\r\n    console.info( ...args );\r\n}\r\n\r\nfunction determineStyle( action ) {\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as reducers from './ducks';\r\nimport { apiService } from './middlewares';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistConfig = {\r\n  key: 'shop',\r\n  storage: storage,\r\n  whitelist: ['session'], // which reducer want to store\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(\r\n    pReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(apiService),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n}\r\n\r\nconst store = configureStore({});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\nReactDOM.render(\n\t<ReduxProvider store={store}>\n\t\t<App />\n\t</ReduxProvider>,\n\tdocument.getElementById('root')\n);\n\n/*\nimport React from 'react';\n\n// import third party ui lib\nimport { Upload, message } from 'antd';\n\nimport { FileOutlined, InboxOutlined } from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\n\nconst { Dragger } = Upload;\n\nconst props = {\n\tname: 'file',\n\tmultiple: true,\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n\tonChange(info: any) {\n\t\tconst { status } = info.file;\n\t\tif (status !== 'uploading') {\n\t\t\tconsole.log(info.file, info.fileList);\n\t\t}\n\t\tif (status === 'done') {\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\n\t\t} else if (status === 'error') {\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\n\t\t}\n\t}\n};\n\ninterface Props {}\n\nconst AddNewProduct = ({  }: Props) => {\n\treturn (\n\t\t<div className='site-layout-background' style={{ padding: 60, minHeight: 360 }}>\n\t\t\t<div className='addproductSectionTitleContainer'>\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Product</h2>\n\t\t\t</div>\n\t\t\t<div className='addproductSectionContainer'>\n\t\t\t\t<div className='addproductSection addproductSection-left'>\n\t\t\t\t\t<Input label='Title' />\n\t\t\t\t\t<h3 className='inputFieldLabel'>Description</h3>\n\t\t\t\t\t<ReactQuill theme='snow' />\n\t\t\t\t</div>\n\t\t\t\t<div className='addproductSection addproductSection-right'>\n\t\t\t\t\t<h3 className='addproductSection-right-title'>Classification</h3>\n\t\t\t\t\t<Input label='Category' />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='addproductSectionContainer'>\n\t\t\t\t<div className='addproductSection addproductSection-left'>\n\t\t\t\t\t<div className='addproductSection-left-header'>\n\t\t\t\t\t\t<h3 className='addproductSection-right-title'>Images</h3>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<FileOutlined />\n\t\t\t\t\t\t\t<span>Media Center</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Dragger\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackground: '#fff'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\n\t\t\t\t\t\t\t\t<InboxOutlined />\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\n\t\t\t\t\t\t\t<p className='ant-upload-hint'>\n\t\t\t\t\t\t\t\tSupport for a single or bulk upload. Strictly prohibit from uploading company data or\n\t\t\t\t\t\t\t\tother band files\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Dragger>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='addproductSection addproductSection-right'>\n\t\t\t\t\t<h3 className='addproductSection-right-title'>Classification</h3>\n\t\t\t\t\t<Input label='Category' />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AddNewProduct;\n\n\n\n\n\n\n\n\n\n\n\n\n\n*/\n"],"sourceRoot":""}