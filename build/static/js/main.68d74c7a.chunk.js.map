{"version":3,"sources":["components/Field/Input.tsx","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/globalState/reducers.js","state/ducks/globalState/types.js","state/ducks/globalState/actions.js","state/ducks/globalState/index.js","utils/index.ts","layout/sider/Sider.tsx","layout/sider/index.ts","components/Empty/index.ts","components/Empty/Empty.tsx","layout/header/Header.tsx","layout/header/index.ts","pages/overview/ApiVisits.tsx","pages/overview/OrderOverView.tsx","pages/overview/PlatformVisits.tsx","pages/overview/PageVisits.tsx","pages/overview/Overview.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/MetaTags.tsx","pages/category/CategoryNewQuickEdit.tsx","components/Placeholders/DataTableSkeleton.tsx","pages/category/CategoryList.tsx","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/category/CategoryNewEdit.tsx","pages/category/NewCategoryDetail.tsx","components/Field/InputSmall.tsx","components/Notification/Notification.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","pages/productBundle/ProductBundleQuickEdit.tsx","pages/productBundle/SelectProducts.tsx","pages/order/AddNewOrderProductItem.tsx","pages/productBundle/SelectedProductItems.tsx","pages/productBundle/AddNewProductBundle.tsx","pages/productBundle/ProductBundleList.tsx","pages/productBundle/ProductBundleEdit.tsx","pages/coupon/CouponProducts.tsx","pages/productBundle/ProductBundleDetail.tsx","pages/brand/AddNewBrand.tsx","pages/brand/BrandQuickEdit.tsx","pages/brand/BrandList.tsx","pages/brand/BrandEdit.tsx","pages/brand/NewBrandDetail.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/ProductQuickEdit.tsx","pages/product/ProductList.tsx","pages/product/ProductEdit.tsx","pages/product/NewProductDetail.tsx","pages/tag/TagQuickEdit.tsx","pages/tag/AddNewTag.tsx","pages/tag/TagList.tsx","pages/tag/TagEdit.tsx","pages/tag/NewTagDetail.tsx","pages/coupon/OrderedProductsSelectProducts.tsx","pages/coupon/OrderedProductsSelectedProductItems.tsx","pages/coupon/CouponEdit.tsx","pages/coupon/CouponDetail.tsx","pages/coupon/CouponQuickEdit.tsx","pages/coupon/AddNewCoupon.tsx","pages/coupon/CouponList.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/customer/CustomerEdit.tsx","pages/customer/CustomerDetail.tsx","pages/pages/PagesList.tsx","pages/pages/PageDetail.tsx","pages/pages/AddNewPage.tsx","pages/pages/PageEdit.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/OrderInvoice.jsx","pages/order/productItemForOrderDetail.tsx","pages/order/QuickEdit.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/order/OrderEdit.tsx","pages/order/OrderNoteEdit.tsx","pages/order/OrderDetail.tsx","pages/order/orderAnalytics/ThisMonthOrderReport.tsx","pages/order/orderAnalytics/ThisWeekOrderReport.tsx","pages/order/orderAnalytics/DateOrderReport.tsx","pages/order/orderAnalytics/HourOrderReport.tsx","pages/order/orderAnalytics/MonthOrderReport.tsx","pages/order/orderAnalytics/YearOrderReport.tsx","pages/order/orderAnalytics/DeliveryRegionReport.tsx","pages/order/orderAnalytics/index.ts","pages/order/orderAnalytics/OrderOverviewReport.tsx","pages/order/ConfigOrderStatus.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteSeo.tsx","pages/settings/ChangeAdminPassword.tsx","pages/settings/SiteInfo.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","pages/sms/ConfigureSMS.tsx","pages/sms/NewCustomerTemplate.tsx","pages/sms/OrderStatusTemplateAutoEmail.tsx","pages/sms/OrderTemplateAutoEmail.tsx","pages/sms/ConfigureAutoSMS.tsx","pages/sms/ComposeCustomSMS.tsx","pages/sms/InboxEmailDetails.tsx","pages/sms/Inbox.tsx","pages/sms/Sms.tsx","pages/sms/index.ts","pages/email/ConfigureSTMP.tsx","pages/email/NewCustomerTemplate.tsx","pages/email/OrderStatusTemplateAutoEmail.tsx","pages/email/OrderTemplateAutoEmail.tsx","pages/email/ConfigureAutoEmail.tsx","pages/email/ComposeCustomEmail.tsx","pages/email/InboxEmailDetails.tsx","pages/email/Inbox.tsx","pages/email/Email.tsx","pages/notification/NotificationList.tsx","pages/admins/AccessCheckbox.tsx","state/ducks/credentials/reducers.js","state/ducks/credentials/types.js","state/ducks/credentials/actions.js","state/ducks/credentials/index.js","pages/admins/QuickEdit.tsx","pages/admins/AddNewAdmin.tsx","pages/admins/AdminList.tsx","pages/admins/AdminEdit.tsx","pages/admins/AdminDetail.tsx","pages/post/Tags.tsx","pages/post/Categories.tsx","pages/post/SelectProducts.tsx","pages/post/SelectedProductItems.tsx","pages/post/PostQuickEdit.tsx","pages/post/AddNewPost.tsx","pages/post/PostList.tsx","pages/post/PostEdit.tsx","pages/post/PostDetail.tsx","pages/post/postTags/QuickEdit.tsx","pages/post/postTags/AddNewPostTag.tsx","pages/post/postTags/PostTagList.tsx","pages/post/postTags/TagEdit.tsx","pages/post/postTags/NewPostTagDetail.tsx","pages/post/postCategory/MetaTags.tsx","pages/post/postCategory/QuickEdit.tsx","pages/post/postCategory/AddNewPostCategory.tsx","pages/post/postCategory/PostCategoryList.tsx","pages/post/postCategory/PostCategoryEdit.tsx","pages/post/postCategory/NewPostCategoryDetail.tsx","components/Field/DatePicker.tsx","pages/staff/AddNewStaff.tsx","pages/staff/QuickEdit.tsx","pages/staff/StaffList.tsx","pages/staff/StaffEdit.tsx","pages/staff/StaffDetail.tsx","pages/staff/salaryReport/Sfaffid.tsx","pages/staff/salaryReport/ComponentItem.tsx","pages/staff/salaryReport/AddNewSalaryReport.tsx","pages/staff/salaryReport/SalaryReportList.tsx","pages/staff/salaryReport/SalaryReportDetail.tsx","pages/expense/QuickEdit.tsx","pages/expense/AddNewExpense.tsx","pages/expense/ExpenseList.tsx","pages/expense/ExpenseEdit.tsx","pages/expense/ExpenseDetail.tsx","pages/dealer/Areas.tsx","pages/dealer/AddNewDealer.tsx","pages/dealer/QuickEdit.tsx","pages/dealer/DealerList.tsx","pages/dealer/DealerEdit.tsx","pages/dealer/DealerDetail.tsx","pages/dealer/Area/AreaQuickEdit.tsx","pages/dealer/Area/AddNewArea.tsx","pages/dealer/Area/AreaList.tsx","pages/dealer/Area/AreaEdit.tsx","pages/dealer/Area/AreaDetail.tsx","layout/content/Content.tsx","layout/content/index.ts","App.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","placeHolder","min","className","Item","validateStatus","help","style","borderRadius","placeholder","isObjectEmpty","Object","keys","length","manupulateURL","url","urlOptions","params","placeHolders","split","map","currentValue","includes","console","log","actualPlaceholderValue","replace","fuckValue","item","join","param","slice","indexOf","converter","resData","data","formatedData","category","id","_id","key","description","productCount","parent","cover","config","thumbnail","icon","image","img","medium","added","title","labels","alt","caption","subCount","subCategory","children","subCat","original","notiData","forEach","not","read","push","noti","heading","text","link","page","next","convertedData","product","regularPrice","price","offerPrice","unit","pricing","date","time","venue","brand","tags","parseInt","available","minimum","cartItems","items","cartItem","quantity","cartKey","updated","status","avalable","isNext","post","body","preparationTime","servingSize","cookingTime","requiredProducts","detail","category2","cat","anotherPrice","startDate","endDate","actualPrice","products","visit","count","itemId","firstName","lastName","country","city","email","phone","address1","address2","created","code","minimumOrder","maximumOrder","freeProducts","orderedProductsCount","orderedProducts","freeProductsCount","amountType","amount","freeDelivery","maxUsePerUser","tag","recipient","subject","html","event","sms","success","msg","succes","customer","dealerName","dealer","address","commission","depositMoney","theme","components","component","region","pickUpLocation","countryCode","countryName","charge","availableStock","minimumStock","primaryCategory","inserted","staff","topic","order","shippingAddress","shortCode","total","totalPrice","deliveryCharge","deliveryRegion","deliveryName","deliveryPickUpLocation","deliveryCountryName","date_created","paymentMethod","paymentStatus","payment","customerId","billingAddress","generalFormat","dataMap","line_items","paymentItems","number","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","options","format","api","apiMap","server","method","credentials","headers","Headers","JSON","stringify","fetch","baseURL","res","formattedData","error","connector","dataFetchReducer","state","action","isLoading","done","payload","Error","useFetch","dependencies","initialData","initialState","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","validationSchema","Yup","shape","username","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","reducerMap","reducer","Accept","isomorphicFetch","then","Promise","resolve","reject","response","parseStatus","json","globalState","createReducer","roles","saveRoles","isAccess","role","adminRoles","Sider","Layout","Header","Content","Footer","SubMenu","Menu","mapDispathToProps","glboalOperations","connect","useState","collapsed","setcollapsed","width","boxShadow","border","collapsible","onCollapse","selectable","mode","PieChartOutlined","to","GoldOutlined","RadarChartOutlined","TagsOutlined","TagOutlined","BranchesOutlined","FireOutlined","CarOutlined","CalculatorOutlined","UsergroupAddOutlined","MoneyCollectOutlined","ShoppingCartOutlined","TeamOutlined","GlobalOutlined","UserOutlined","MailOutlined","MessageOutlined","FileOutlined","FileSearchOutlined","FileAddOutlined","SettingOutlined","UserAddOutlined","SlidersOutlined","BgColorsOutlined","Empty","height","display","justifyContent","alignItems","PRESENTED_IMAGE_SIMPLE","props","history","useHistory","getAllNotificationState","handleGetAllNOticationFetch","handleMarkNotificationAsReadFetch","handleMarkAllNotificationAsReadFetch","notificationList","setnotificationList","sortItem","sortOrderValue","limitNumber","getAllNotification","handleNotificationAsRead","handleAllNotificationAsRead","notification","message","CheckCircleOutlined","color","typeIcon","background","zIndex","transition","alignContent","marginTop","marginLeft","cursor","marginRight","placement","overlay","backgroundColor","padding","textAlign","fontSize","href","index","moment","overflowCount","showZero","TwitterSquareFilled","fontWeight","BellOutlined","LogoutOutlined","Option","Select","RangePicker","DatePicker","MONTHS","TooltipContainerStyles","ApiVisits","selectedApiValue","setSelectedApiValue","setStartDate","setEndDate","demoGraphicVisitsState","handleDemoGraphicVisitsStateFetch","userData","setuserData","metricType","startDateValue","endDateValue","uservisitsDataRes","getDemoGraphicVisitsValue","Date","thisMonth","getMonth","bordered","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","size","x1","y1","x2","y2","offset","stopColor","vertical","strokeDasharray","stroke","dataKey","tickFormatter","orientation","axisLine","tickLine","contentStyle","formatter","fill","showTime","picker","orderAnalyticsVisitsState","handleOrderAnalyticsVisitsStateFetch","orderData","setorderData","ordersDataRes","getAnalyticsOrders","localOptions","COLORS","PlatformVisits","demographicData","setdemographicData","RADIAN","Math","PI","marginBottom","outerRadius","innerRadius","nameKey","cx","cy","midAngle","percent","radius","x","cos","y","sin","dominantBaseline","toFixed","labelLine","entry","CalendarOutlined","Column","Table","ColumnGroup","PageVisits","pageVisitsState","handlePageVisitsStateFetch","visitType","getPageVisitsValue","pagination","defaultPageSize","dataSource","tableLayout","onHeaderRow","column","dataIndex","render","record","textTransform","Overview","handleAnalyticsProductVisitCountFetch","handleAnalyticsCategoryVisitCountFetch","handleGetTotalUserCountFetch","getTotalUserCount","getProductVisitCount","getCategoryVisitCount","OrderOverView","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","MediaLibrary","visible","setvisible","setmyImages","isModalOpenForImages","myImages","isModalOpenForThumbnail","setmyThumbnailImage","myThumbnailImage","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","filter","getImageList","imageListRes","handleUpload","formData","FormData","file","append","reqwest","processData","withCredentials","uploadProps","multiple","onRemove","filelist","newFileList","splice","beforeUpload","xflelist","handleAddToSelectedList","find","newselectedImages","handleUpdateSubmit","captoin","updateImageLibraryItemRes","positionInImageList","updatedItem","assign","updateImageList","openErrorNotification","getisUpdateSubmitButtonDisabled","top","onOk","onCancel","bodyStyle","okText","defaultActiveKey","tab","listType","FileImageOutlined","ArrowUpOutlined","lenght","CloseOutlined","CheckOutlined","DeleteOutlined","ImageItemMenu","EllipsisOutlined","onConfirm","cancelText","MetaTags","inputVisible","inputValue","editInputIndex","editInputValue","handleClose","removedTag","setTags","showInput","setState","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onBlur","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","preventDefault","PlusOutlined","React","Component","bnName","bnDescription","metaTitle","bnMetaTitle","metaDescription","bnMetaDescription","metaTags","bnMetaTags","displayOrder","AddNewCategory","addNewCategoryVisible","setAddNewCategoryVisible","categoryList","setcategoryList","categoryDetailData","addCategoryState","handleAddCategoryFetch","handleUpdateCategoryIconFetch","isparentCategoryChecked","setisparentcategoryChecked","selectedParentId","setselectedParentId","imageUrl","setImageUrl","loadingThumnail","setLoadingThumbnail","imageFile","setImagefile","bnTags","setBnTags","coverImageId","setCoverImageId","handleAttachImageToItemMultipleFetch","handleAttachImageToItemSingleFetch","handleDetachImageFromItemSingleFetch","handleSetImageAsThumbnailToItemFetch","mahImages","handleSetImageAsThumnail","handleDetachSingleImage","imageId","collection","thumbnailRes","imagesIds","trim","aboutToUpdatedImageIds","bn","addCategoryRes","resetForm","onSwitchChange","checked","handleCancel","onChangeSelect","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","setNewIcon","iconUrl","uploadButton","LoadingOutlined","destroyOnClose","okButtonProps","htmlType","defaultChecked","InfoCircleOutlined","showUploadList","newImages","handleImagesDelete","FileImageFilled","DataTable","speed","viewBox","foregroundColor","rx","ry","r","metadata","github","filename","Search","MyTable","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","handleDeleteCategory","deleteCategoryRes","newCategoryList","objectFit","align","EditOutlined","CategoryNewQuickEdit","withRouter","categoryState","handleCategoryListFetch","isSubCategory","productCountValue","categories","setCategories","enterButton","handleSearch","DataTableSkeleton","setisModalOpenForThumbnail","setisModalOpenForImages","bnData","bnFormData","get","err","i","setcategoryDetailData","CoolInput","categoryDetailState","handleCategoryDetailFetch","categoryProductsState","handleCategoryProductsFetch","useParams","categoryId","categoryEditVisible","setCategoryEditVisible","categoryDetail","setcategoryDetail","categoryDetailDataRes","getCategoryDetail","getCategoryProducts","row","imgs","columns","localIndex","columnNumber","getImagesInCollumn","CategoryNewEdit","avatar","paragraph","paddingTop","overflow","allowClear","ExclamationCircleOutlined","CheckableTag","Tag","Tags","setTagIds","setSelectedTags","selectedTags","setoptions","tagState","handleTagListFetch","searchValue","setsearchValue","selectedCategoryIds","selectedcategory","tagListRes","tagOptions","borderColor","onSearch","categoryNames","newOptions","nextSelectedTags","t","Brands","setBrandId","brandId","productDetailState","setSelectedBrandId","brandState","brandListRes","brandOptions","setBrands","onFocus","val","Categories","setcategoryIds","categoryOptions","setCategoryOptions","categoryListRes","checkable","checkedKeys","onSelect","selectedKeys","info","onCheck","checkedIds","treeData","defaultExpandAll","checkStrictly","bundlePrice","AddNewProduct","bundleList","productList","setBundleList","setProductList","productDetailData","updateProductState","handleProductDetailFetch","categoryids","tagIds","setPricing","setDateFeild","setTimeFeild","setDescription","setBNDescription","setMetaTags","setBnMetaTags","productIds","setProductIds","addProductState","handleAddProductFetch","getProductDetail","regular","offer","setPrice","variation","model","metaUnit","addProductRes","positionInAttribute","updateProductList","newProductList","isTrue","categoryIds","editor","ClassicEditor","onInit","getData","InputSmall","selectedOpions","setselectedOptions","isProductIdsfirstTime","selectItems","o","CartOverLayCartItem","productId","handleProductFetch","setProduct","setIsLoading","modifiedPrice","setModifiedPrice","selectedVariationId","setSelectedVariationId","getAndSetProduct","handleChangeQuantity","updateAttributeList","convertAttributeValuesToStringValue","attribute","attributeValue","pricingOptions","pricingItem","pricingOption","getPricingOptions","priceItem","getPriceByVariationId","tagId","handleAttributeChange","AddNewOrderSummary","flexDirection","AddNewOrderProductItem","SelectProducts","SelectedProductItems","setTagList","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","ProductBundleQuickEdit","TagList","tagList","productType","newTagList","AddNewProductBundle","CouponProducts","NewBrandDetail","productEditVisible","setProductEditVisible","ProductBundleEdit","AddNewBrand","brandList","setBrandList","updateBrandState","handleUpdateBrandFetch","visibleMedia","setvisibleMedia","addBrandRes","brandDetailData","brandEditVisible","setBrandEditVisible","brandDetailState","handleBrandDetailFetch","myGoddamnImages","setMyGoddamnImages","getBrandDetail","updateBrandRes","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","BrandQuickEdit","handlebrandListFetch","brands","setBrandDetailData","brandProductsState","handleBrandProductsFetch","brandDetailRes","getBrandProducts","BrandEdit","Complete","setAttributeList","attributeList","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","manupulatedOptions","suggestedOption","toUpperCase","Pricing","handleAddPricing","handleUpdatePricing","isPricingEditActive","setprice","stock","setStock","attributeListItems","attributeKey","handlePriceChange","handleStockChange","Attributes","minHeight","purchaseLimit","bnUnit","editpricingItem","setEditPricingItem","pricingTagActiveKey","setpricingTagActiveKey","seTisPricingEditActive","updatePricingList","animated","tabPosition","activeKey","handleEditPricing","newPricing","handleDeletePricing","textDecoration","handleUpdateProductFetch","updatedProductRes","handleDeleteProductFetch","handleUpdateOrderStatusFetch","handleDeleteProduct","deleteProductRes","handleUpdateOrderStatus","newStatus","inStock","updateOrderStatusRes","positionInTag","updateOrderList","StatusItemMenu","DownOutlined","ProductQuickEdit","productState","handleProductListFetch","setProducts","setProductDetailData","productDetailRes","ProductEdit","QuickEdit","tagEditVisible","setTagEditVisible","tagDetailData","updateTagState","handleUpdateCategoryFetch","updateTagRes","updateTagList","addTagState","handleAddTagFetch","addTagRes","TagQuickEdit","AddNewTag","setTagDetailData","tagDetailState","handleTagDetailFetch","tagProductsState","handleTagProductsFetch","tagDetailRes","getTagProducts","TagEdit","selecttedOptions","addCouponState","handleAddCouponStateFetch","couponDetailState","handleCouponDetailFetch","freeProductIds","freeProductList","setFreeProductList","OrderedProductsSelectProducts","OrderedProductsSelectedProductItems","CouponEdit","CouponQuickEdit","Couponlist","AddNewCoupon","max","zipCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","orderStatusFilterValue","setorderStatusFilterValue","getSorttingvalue","customers","setCustomers","AddNewCustomer","setCustomerDetailData","customerDetailState","handleCustomerDetailFetch","orderListState","handleOrderListFetch","customerDetailData","customerDetailDataRes","getCustomerDetail","getOrderList","CustomerEdit","handleDeletePageFetch","handleDeletePage","deletePageRes","pageList","setPageList","pageState","handlePagsListFetch","pages","setPages","ReactHtmlParser","Steps","Step","content","bnContent","AddNewPage","addPageState","handleAddPageFetch","setContent","setBnContent","handleAddPageSubmit","addOrderRes","updateCategoryState","EditableTagGroup","AttributeList","AddAttributeValues","ComponentToPrint","orderDetailState","invoiceSettingsState","anotherRef","cellPadding","cellSpacing","bgcolor","borderBottom","paddingBottom","lineHeight","verticalAlign","colSpan","unitPrice","whiteSpace","OrderInvoice","setShowInvoice","showInvoice","handleOrderDetailFetch","componentRef","useRef","createRef","handlSiteInvoiceSettingsFetch","getSiteSettings","getOrderDetail","window","print","footer","targetRef","toPdf","FilePdfOutlined","documentTitle","trigger","PrinterOutlined","current","setOrderList","orderList","updateOrderState","handleUpdateOrderFetch","addRegionRes","updateRegionList","newOrderstatus","orderState","deliveryRegionNameValue","setdeliveryRegionNameValue","statusValue","regions","setOrders","regionList","setRegionList","handleRegionListFetch","regionListOptions","setRegions","joiningDate","Status","newOrderList","DownloadOutlined","memo","ShopOutlined","setCustomerId","setSelectedCustomerData","customerData","productListState","productOptions","additionalInfo","steps","AddNewOrder","addOrderState","handleOrderFetch","selectedCustomerData","setCurrent","customerListState","handleDeliveryRegionFetch","deliveryRegionName","setDeliveryRegionName","setSelectedRegion","regionDeliveryCharge","setregionDeliveryCharge","isDeliveryChargeExists","cityName","deliveryRegionState","getAndSetShippingDeliveryCharge","selectedRegion","handleCheckoutSubmit","delivery","CustomersId","AddProducts","Group","flexWrap","deliveryRegionItem","handleDeviliveryRegionChange","ClockCircleOutlined","CaretRightOutlined","CaretLeftOutlined","summary","note","setOrderNotes","orderNotes","activeNote","orderDetailNotesState","handleOrderDetailNotesFetch","handleDeleteOrderNoteFetch","activeOrderNote","setActiveOrderNote","isOrderNoteEdit","setIsOrderNoteEdit","isInvoiceShow","setIsInvoiceShow","handleDeleteOrderNote","newOrderNoteList","OrderNoteEdit","OrderEdit","EyeOutlined","flex","minWidth","noteItem","getMonthNameByOrder","WEEEK","getWeekNameByOrder","getHourFormatter","DeliveryRegionReport","OrderOverviewReport","ThisWeekOrderReport","ThisMonthOrderReport","DateOrderReport","HourOrderReport","MonthOrderReport","YearOrderReport","ConfigOrderStatus","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","isLoadingUpdate","Set","SaveOutlined","updateComponentByAddingItem","componentId","Panel","Collapse","genExtra","updateComponentByDeleting","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","updateComponentState","handleUpdateComponentFetch","imageValue","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","manupulatedLocalComponentForTheReq","componentItems","imgItem","updatedItems","manupulatedUpdatedItems","manupulatedUpdatedItem","updateComponentRes","accordion","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","themeList","setThemeList","addThemeState","handleAddthemeFetch","setselectedThemeTypeValue","setname","thumbnailFile","setThumbnailFile","addThemeRes","path","InboxOutlined","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","adminPhone","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","addSiteInfoRes","invoiceTitle","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","updateInvoiceRes","UpdateSiteSEO","newPassword","newPassword2","oneOf","newPass","ChangeAdminPassword","newPassRepeat","paddingRight","SiteInfo","handleUpdateSiteLogoAndIconFetch","iconimageUrl","setIconImageUrl","loadingIcon","setloadingIcon","appLogo","setAppLogo","loadingAppLogo","setloadingAppLogo","iconUploadButton","appIconUploadButton","AdminSiteInfo","onError","SiteSeo","SiteInfoInvoice","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","handleDeliveryChargeChange","updatedValue","handleAttributeDelete","AddNewRegion","addRegionState","handleRegionFetch","floor","random","handleAddDeliveryCharge","updateRegionState","handleUpdateRegionFetch","deliveryChargeListFromRegionDetail","chargeKey","handleDeleteRegioFetch","handleDeleteRegion","deleteRegionRes","newRegionList","regionState","ConfigureSTMP","getEmailConfigurationState","handleGetEmailConfigurationFetch","emailConfigurationState","handleEmailConfigurationFetch","isAuthenticated","setIsAuthenticated","isArraySupport","setIsArraySupport","configurationData","setConfigurationData","setMethod","protocol","setProtocol","getEmailConfiguration","authentication","parameters","recipientKey","arraySupport","separator","textKey","mask","maskKey","maskValue","usernameKey","usernameValue","passwordKey","passwordValue","additional","MsgType","additionalMsgType","handleAuthenticatedChange","prottocolOptions","methodOptions","handleMethodChange","handleProtocolChange","setVisible","autoEmailTemplate","handleAutoEmailTemplateFetch","setcustomer","admin","setadmin","getConfigurationAutoEmailTemplateRes","eventName","getCustomerAutoEmail","overflowY","ConfigureAutoEmail","getAutoEmailConfigurationState","handleGetAutoEmailConfigurationFetch","configureAutoEmailConfigurationState","handleAutoEmailConfigurationFetch","isnewCustomerAdmin","setnewCustomerAdmin","isnewCustomerCustomer","setnewCustomerCustomer","isorderAdmin","setorderAdmin","isorderStatusAdmin","setorderStatusAdmin","isorderCustomer","setorderCustomer","isorderStatusCustomer","setIsorderStatusCustomer","newcustomermodal","setnewcustomermodal","ordermodal","setordermodal","orderStatusmodal","setorderStatusmodal","autoEmailData","setAutoEmailData","getAutoEmailConfiguration","handleUpdateAutoEmail","newCustomer","user","orderStatus","updateAutoEmailRes","NewCustomerTemplate","OrderStatusTemplateAutoEmail","OrderTemplateAutoEmail","ComposeCustomEmail","sendCustomerEmailState","handleSendCustomEmailFetch","setText","setrecipient","handleMsgSend","tokenSeparators","SendOutlined","InboxEmailDetails","setSelectedEmailId","getEmailDetailState","handleGetEmailListFetch","LeftOutlined","Inbox","getEmailListState","selectedEmailId","limitCount","sortItemValue","substring","Sms","PlusCircleOutlined","SMS","fromEmail","fromName","host","encryption","port","smtpUsername","smtpPassword","sethtml","NotificationList","AccessCheckbox","checkedList","setCheckedList","plainOptions","interminate","setInterminate","checkAll","setCheckAll","indeterminate","accessItem","span","saveCredentials","credentialsOperations","accesscheckedList","setAccessCheckedList","unshift","access","password2","passwordConfirmation","AddNewAdminRoles","deleteTagState","AddNewAdmin","AdminEdit","bnBody","bnPreparationTime","bnServingSize","bnCookingTime","setBody","setBnBody","setPostDetailData","postDetailData","categoryOne","tagsOne","AddNewPostCategory","DatePickerComponent","withTime","salary","designation","fatherName","motherName","NID","handleTimeChange","dateString","StaffQuickEdit","AddNewStaff","setCustomer","customerDetail","setCustomerDetail","StaffEdit","Sfaffid","month","setMonthFeild","convertedYear","convertedMonth","convertedStaffs","bonus","convince","negative","year","handleMonthChange","months","totalSalary","totalBonus","totalConvince","totalExtra","totalNegative","AddNewExpense","ExpenseEdit","dealerArea","Areas","area","areas","registeredCustomerListState","handleRegisteredCustomerListFetch","getRegisteredOrderList","hasSider","exact","NewCategoryDetail","BrandList","NewProductDetail","ProductBundleList","ProductBundleDetail","CouponList","PostList","PostTagList","PostCategoryList","PostDetail","NewPostTagDetail","NewPostCategoryDetail","CouponDetail","NewTagDetail","OrderList","OrderDetail","DealerList","AreaList","AreaDetail","DealerDetail","StaffList","SalaryReportList","SalaryReportDetail","StaffDetail","ExpenseList","ExpenseDetail","CustomerDetail","PagesList","PageEdit","PageDetail","Delivery","ManageThemes","AdminList","AdminDetail","Email","handleAdminCredentCialsFetch","getCredenCials","actionShouldBlock","meta","async","blocking","actionFinished","utils","productPositionInCart","cart","newCartItem","isSelectedForCheckout","tempArrayWithOutOldProduct","productPositionInWishList","wishList","wishlist","ADD","queryPositionInQueryList","queryList","query","types","currentItem","oldQuery","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","redirectAfterLogin","cartReducer","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","pReducer","persistReducer","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"47hBAmEeA,GAhEMC,IAAbC,SAkBK,SAAC,GAcA,IAbZC,EAaW,EAbXA,SACAC,EAYW,EAZXA,YACAC,EAWW,EAXXA,MACAC,EAUW,EAVXA,KAEAC,GAQW,EATXC,aASW,EARXD,OACAE,EAOW,EAPXA,SACAC,EAMW,EANXA,SACAC,EAKW,EALXA,QACAC,EAIW,EAJXA,YACAC,EAGW,EAHXA,KACAC,EAEW,EAFXA,YACAC,EACW,EADXA,IAEA,OACE,oCACGV,GAAS,wBAAIW,UAAU,mBAAmBX,GAE3C,kBAAC,IAAKY,KAAN,CAEEC,eAAgBP,EAAU,QAAU,GAEpCQ,KAAMP,GAGN,kBAAC,IAAD,CACEG,IAAKA,EACLZ,SAAUA,EACVG,KAAMA,EACNF,YAAaA,EACbgB,MAAO,CACLC,aAAc,KAEhBR,KAAMA,EACNH,SAAUA,EACVH,MAAOA,EACPE,SAAUA,EACVO,UAAU,iBACVM,YAAaR,Q,2DC5DjBS,EAAgB,SAAAhB,GACpB,OAAQA,IAAUiB,OAAOC,KAAKlB,GAAOmB,OAAS,GAiDjCC,EA9CO,SAACC,GAA0B,IAArBC,EAAoB,uDAAP,GACvC,GAAIN,EAAcM,GAAa,OAAOD,EAEtC,IAAME,EAASD,EAAWC,QAAU,GAC9BC,EAAeF,EAAWE,cAAgB,GAIhD,OAAOH,EACJI,MAAM,KACNC,KAAI,SAAAC,GACH,GAAIA,EAAaC,SAAS,OAASZ,EAAcQ,KAAkBG,EAAaC,SAAS,KAAM,CAC7FC,QAAQC,IAAI,eAAeH,GAC3B,IAAII,EAAyBP,EAAaG,EAAaK,QAAQ,IAAK,KACpEH,QAAQC,IAAI,yBAAyBC,GACrCJ,EAAeI,EAGjB,GAAIJ,EAAaC,SAAS,OAASZ,EAAcQ,IAAiBG,EAAaC,SAAS,KAAM,CAC5F,IAAIK,EAAYN,EAAaF,MAAM,KAChCQ,GAAaA,EAAUd,OAAS,IACjCc,EAAYA,EAAUP,KAAI,SAAAQ,GACxB,OAAOV,EAAaU,EAAKF,QAAQ,IAAK,KAAOR,EAAaU,EAAKF,QAAQ,IAAK,KAAOE,MAGvFL,QAAQC,IAAI,YAAYG,GACxB,IAAIF,EAAyBE,EAAUE,KAAK,KAC5CN,QAAQC,IAAI,yBAAyBC,EAAuB,eAAeJ,GAC3EE,QAAQC,IAAI,eAAeN,GAC3BG,EAAeI,EAYjB,OATIJ,EAAaC,SAAS,OACxBD,EAAeA,EACZF,MAAM,KACNC,KAAI,SAAAC,GACH,IAAMS,EAAQT,EAAaU,MAAMV,EAAaW,QAAQ,KAAO,GAC7D,OAAOX,EAAaK,QAAQI,EAAOb,EAAOa,IAAU,OAErDD,KAAK,MAEHR,KAERQ,KAAK,MCxCNI,EAAY,I,8ICIKC,G,gFACXC,EAAOD,EAAQC,MAAQ,GAEvBC,EACJD,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACiB,GACR,OAAO,eACFA,EADL,CAEEC,GAAID,EAASE,KAAO,GACpBC,IAAKH,EAASE,KAAO,GACrBvC,KAAMqC,EAASrC,MAAQqC,EAASrC,KAChCyC,YAAaJ,EAASI,aAAeJ,EAASI,YAC9CC,aAAcL,EAASK,cAAgB,EACvCC,OAAQN,EAASM,QAAU,GAC3BC,MAAOP,EAASO,MAAT,UACAC,EAAM,SADN,OACoBR,EAASO,MAAME,WACtC,KACJC,KAAMV,EAASU,KAAT,UAAmBF,EAAM,SAAzB,OAAuCR,EAASU,MAAS,KAC/DC,MACGb,EAAKa,OACJb,EAAKa,MAAMnC,OAAS,GACpBsB,EAAKa,MAAM5B,KAAI,SAAC6B,GACd,MAAO,CACLX,GAAIW,EAAIV,KAAO,GACfvC,KAAMiD,EAAIjD,MAAQiD,EAAIjD,KACtB4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIC,QAClCC,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,GACFC,SACkC,IAAhCnB,EAASoB,YAAY5C,OACjBwB,EAASoB,YAAY,IAAMpB,EAASoB,YAAY,GAAGzD,KACjDqC,EAASoB,YAAY5C,OACrB,EACFwB,EAASoB,YAAY5C,QACvBwB,EAASoB,aACXpB,EAASoB,YAAY5C,OAAS,GAC9BwB,EAASoB,YAAY,IACrBpB,EAASoB,YAAY,GAArB,MAAmC,CACjCC,SAAUrB,EAASoB,YAAYrC,KAAI,SAACuC,GAClC,MAAO,CACLrB,GAAIqB,EAAOpB,KAAO,GAClBC,IAAKmB,EAAOpB,IACZvC,KAAM2D,EAAO3D,MAAQ2D,EAAO3D,KAC5ByC,YAAakB,EAAOlB,aAAekB,EAAOlB,YAC1CG,MAAOe,EAAOf,MAAP,UACAC,EAAM,SADN,OACoBc,EAAOf,MAAME,WACpC,Y,kBAOXV,G,kLAScF,G,gFACfC,EAAOD,EAAQC,MAAQD,EAAQC,KAAOD,EAAQC,KAAO,GAErDC,EACJD,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACiB,GACR,MAAO,CACLC,GAAID,EAASE,KAAO,GACpBC,IAAKH,EAASE,KAAO,GACrBvC,KAAMqC,EAASrC,MAAQqC,EAASrC,KAChCyC,YAAaJ,EAASI,aAAeJ,EAASI,YAC9CG,MAAOP,EAASO,MAAT,UACAC,EAAM,SADN,OACoBR,EAASO,MAAME,WACtC,KACJC,KAAMV,EAASU,KAAT,UAAmBF,EAAM,SAAzB,OAAuCR,EAASU,MAAS,S,kBAI9DX,G,oLASgBF,G,0EACjBC,EAAOD,IAETvB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAExBsB,E,CACHG,GAAIH,EAAKI,KAAO,GAChBvC,KAAMmC,EAAKnC,MAAQmC,EAAKnC,KACxB4C,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OACHV,EAAKS,MAAQT,EAAKS,MAAMgB,UAAYzB,EAAKS,MAAMgB,SAAW,IAE5DtB,GAAIH,EAAKS,MAAQT,EAAKS,MAAML,IAAM,IAEpCxB,IAAKoB,EAAKpB,IACViC,MACGb,EAAKa,OACJb,EAAKa,MAAMnC,OAAS,GACpBsB,EAAKa,MAAM5B,KAAI,SAAC6B,GACd,MAAO,CACLX,GAAIW,EAAIV,KAAO,GACfvC,KAAMiD,EAAIjD,MAAQiD,EAAIjD,KACtB4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,M,oLAWiBrB,G,gFACjBC,EAAOD,EAAQC,MAAQ,GAEzB0B,EAAW,GACX1B,GAAQA,EAAKtB,OAAS,GACxBsB,EAAK2B,SAAQ,SAACC,GACPA,EAAIC,MACPH,EAASI,KAAKF,M,kBAKbF,G,wLASoB3B,G,gFACrBC,EAAOD,EAAQC,MAAQ,GACvBC,EACJD,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC8C,GACR,MAAO,CACL5B,GAAI4B,EAAK3B,KAAO,GAChBC,IAAK0B,EAAK3B,KAAO,GACjB4B,QAASD,EAAKC,SAAWD,EAAKC,QAC9BC,KAAMF,EAAKE,MAAQF,EAAKE,KACxB3E,KAAMyE,EAAKzE,KACX4E,KAAMH,EAAKG,MAAQ,GACnBlB,MAAOe,EAAKf,OAAS,GACrBa,KAAME,EAAKF,S,kBAIV5B,G,mLASeF,G,gFAChBC,EAAOD,EAAQC,MAAQ,GAEvBC,EACJD,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACiB,GACR,OAAO,aACLC,GAAID,EAASE,KAAO,GACpBC,IAAKH,EAASE,KAAO,GACrBa,MAAOf,EAASrC,MAAQqC,EAASrC,MAC7BqC,EAASoB,aACXpB,EAASoB,YAAY5C,OAAS,GAC9BwB,EAASoB,YAAY,IACrBpB,EAASoB,YAAY,GAArB,MAAmC,CACjCC,SAAUrB,EAASoB,YAAYrC,KAAI,SAACuC,GAClC,MAAO,CACLrB,GAAIqB,EAAOpB,KAAO,GAClBC,IAAKmB,EAAOpB,IACZa,MAAOO,EAAO3D,MAAQ2D,EAAO3D,KAC7B4C,MAAOe,EAAOf,MAAP,UACAC,EAAM,SADN,OAEDc,EAAOf,MAAME,UAAYa,EAAOf,MAAME,UAAY,IAEpD,Y,kBAOXV,G,wLASoBF,G,gFACrBC,EAAOD,EAAQC,KAEfC,EACJD,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACiB,GACR,MAAO,CACLC,GAAID,EAASE,KAAO,GACpBC,IAAKH,EAASE,KAAO,GACrBa,MAAOf,EAASrC,MAAQqC,EAASrC,S,kBAIhCoC,G,kLAScF,G,gFACfC,EAAOD,EAAQC,MAAQ,GACdD,EAAQoC,KAAKC,KAEtBC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACqD,GACR,MAAO,CACLnC,GAAImC,EAAQlC,KAAO,GACnBvC,KAAMyE,EAAQzE,MAAQyE,EAAQzE,KAC9ByC,YAAagC,EAAQhC,aAAegC,EAAQhC,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OACF4B,EAAQ7B,OAAS6B,EAAQ7B,MAAR,WAA+B,IAEnD8B,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7B5D,IAAK0D,EAAQ1D,IACb8D,KAAMJ,EAAQI,KACdxC,SAAUoC,EAAQpC,SAClByC,QAASL,EAAQK,QACjBC,KAAMN,EAAQM,KACdC,KAAMP,EAAQO,KACdC,MAAOR,EAAQQ,MACfC,MAAOT,EAAQS,MACfC,KAAMV,EAAQU,KACdR,MACES,SAASX,EAAQE,MAAR,OACTS,SAASX,EAAQE,MAAR,SACLF,EAAQE,MAAR,MACAF,EAAQE,MAAR,QACNU,UACEZ,EAAQK,SAAWL,EAAQK,QAAQjE,OAAS,EACxC4D,EAAQK,QAAQ,GAAhB,OACAL,EAAQK,QAAQ,GAAhB,gBACA,EACNQ,QACEb,EAAQK,SAAWL,EAAQK,QAAQjE,OAAS,EACxC4D,EAAQK,QAAQ,GAAhB,OACAL,EAAQK,QAAQ,GAAhB,cACA,M,kBASLN,G,yKASKtC,G,gFACNqD,EAAYrD,EAAQsD,OAAS,GAC7BhB,EACJe,EAAU1E,OAAS,GACnB0E,EAAUnE,KAAI,SAACqE,GACb,MAAO,CACLnD,GAAImD,EAASlD,KAAO,GACpBvC,KAAMyF,EAASzF,MAAQyF,EAASzF,KAChC4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB4C,EAAS7C,MAAMM,QAC7CwB,aAAce,EAASd,OAASc,EAASd,MAAT,QAChCC,WAAYa,EAASd,OAASc,EAASd,MAAT,MAC9Be,SAAUD,EAASC,SACnB3E,IAAK0E,EAAS1E,IACd4E,QAASF,EAASE,Y,kBAIjBnB,G,2KASOtC,G,gFACVC,GAAO,EAEPD,EAAO,WACTC,EAAO,CACLG,GAAIJ,EAAO,SAAaK,KAAO,GAC/BvC,KAAMkC,EAAO,SAAalC,MAAQkC,EAAO,SAAalC,KACtD4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBX,EAAO,SAAaU,MAAMM,QACxDwB,aACExC,EAAO,SAAayC,OAASzC,EAAO,SAAayC,MAApB,QAC/BC,WACE1C,EAAO,SAAayC,OAASzC,EAAO,SAAayC,MAApB,MAC/Be,SAAUxD,EAAO,SAAawD,SAC9B3E,IAAKmB,EAAO,SAAanB,IACzB4E,QAASzD,EAAO,SAAayD,UAI3BnB,EAAgBrC,E,kBAEfqC,G,gLASYtC,G,8EACfsC,GAAgB,EAChBtC,IACFsC,GAAgB,G,kBAEXA,G,gLASYtC,G,8EACfsC,GAAgB,EAChBtC,EAAO,UACTsC,EAAgB,CACdkB,SAAUxD,EAAQ0D,QAAR,W,kBAGPpB,G,2KASOrC,G,qEACVA,IAAQA,EAAI,I,yCACP,CACL0D,OAAQ,O,gCAGL1D,G,6KASSD,G,8EAEVsC,EAAgBtC,E,kBAEfsC,G,6KASStC,G,qEACZA,GAA8B,qBAAnBA,EAAO,I,yCACb,CACL2D,OAAQ,O,iCAIL,G,oLASgB3D,G,qEACnBA,GAA8B,qBAAnBA,EAAO,I,yCACb,CACL2D,OAAQ,O,iCAIL,G,mLASe3D,G,qEAClBA,GAA8B,qBAAnBA,EAAO,I,yCACb,CACL2D,OAAQ,O,iCAIL,G,6KASS3D,G,gFACVC,EAAOD,EAAQC,MAAQ,GACdD,EAAQoC,KAAKC,KAEtBC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACqD,GACR,MAAO,CACLnC,GAAImC,EAAQlC,KAAO,GACnBvC,KAAMyE,EAAQzE,MAAQyE,EAAQzE,KAC9ByC,YAAagC,EAAQhC,aAAegC,EAAQhC,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OACF4B,EAAQ7B,OAAS6B,EAAQ7B,MAAR,WAA+B,IAEnD8B,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7B5D,IAAK0D,EAAQ1D,IACb8D,KAAMJ,EAAQI,KACdxC,SAAUoC,EAAQpC,SAClByC,QAASL,EAAQK,QACjBC,KAAMN,EAAQM,KACdC,KAAMP,EAAQO,KACdC,MAAOR,EAAQQ,MACfC,MAAOT,EAAQS,MACfC,KAAMV,EAAQU,KACdR,MACES,SAASX,EAAQE,MAAR,OACTS,SAASX,EAAQE,MAAR,SACLF,EAAQE,MAAR,MACAF,EAAQE,MAAR,QACNmB,SACErB,EAAQK,SAAWL,EAAQK,QAAQjE,OAAS,EACxC4D,EAAQK,QAAQ,GAAhB,OACAL,EAAQK,QAAQ,GAAhB,gBACA,EACNQ,QACEb,EAAQK,SAAWL,EAAQK,QAAQjE,OAAS,EACxC4D,EAAQK,QAAQ,GAAhB,OACAL,EAAQK,QAAQ,GAAhB,cACA,M,kBASLN,G,+KASWtC,G,gFACZC,EAAOD,EAAQC,MAAQ,GACdD,EAAQoC,KAAKC,KAEtBC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACqD,GACR,MAAO,CACLnC,GAAImC,EAAQlC,KAAO,GACnBvC,KAAMyE,EAAQzE,MAAQyE,EAAQzE,KAC9ByC,YAAagC,EAAQhC,aAAegC,EAAQhC,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OACF4B,EAAQ7B,OAAS6B,EAAQ7B,MAAR,WAA+B,IAEnD8B,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7B5D,IAAK0D,EAAQ1D,IACb8D,KAAMJ,EAAQI,KACdxC,SAAUoC,EAAQpC,SAClByC,QAASL,EAAQK,QACjBC,KAAMN,EAAQM,KACdC,KAAMP,EAAQO,KACdC,MAAOR,EAAQQ,MACfC,MAAOT,EAAQS,MACfC,KAAMV,EAAQU,KACdR,MACES,SAASX,EAAQE,MAAR,OACTS,SAASX,EAAQE,MAAR,SACLF,EAAQE,MAAR,MACAF,EAAQE,MAAR,QACNmB,SACErB,EAAQK,SAAWL,EAAQK,QAAQjE,OAAS,EACxC4D,EAAQK,QAAQ,GAAhB,OACAL,EAAQK,QAAQ,GAAhB,gBACA,EACNQ,QACEb,EAAQK,SAAWL,EAAQK,QAAQjE,OAAS,EACxC4D,EAAQK,QAAQ,GAAhB,OACAL,EAAQK,QAAQ,GAAhB,cACA,M,kBASLN,G,+KASWtC,G,kFACZC,EAAOD,EAAQC,MAAQ,GACvB4D,EAAS7D,EAAQoC,KAAKC,KAEtBC,EACHrC,EAAKtB,OAAS,GACbsB,EAAKf,KAAI,SAACqD,GACR,MAAO,CACLnC,GAAImC,EAAQlC,KAAO,GACnBvC,KAAMyE,EAAQzE,MAAQyE,EAAQzE,KAC9ByC,YAAagC,EAAQhC,aAAegC,EAAQhC,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyB4B,EAAQ7B,MAAME,WAC5C4B,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7B5D,IAAK0D,EAAQ1D,IACb8D,KAAMJ,EAAQI,KACdE,KAAMN,EAAQM,KACdE,MAAOR,EAAQQ,MACfH,QAASL,EAAQK,aAGvB,G,kBAEK,CACL3C,KAAMqC,EACNuB,W,6KAUc7D,G,gFACVC,EAAOD,EAAQC,MAAQ,GACdD,EAAQoC,KAAKC,KAExBC,EACFrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACqD,GACR,OAAO,eACFA,EADL,CAEEnC,GAAImC,EAAQlC,KAAO,GACnBvC,KAAMyE,EAAQzE,MAAQyE,EAAQzE,KAC9ByC,YAAagC,EAAQhC,aAAegC,EAAQhC,YAC5CG,MAAO6B,EAAQ7B,MAAR,UACAC,EAAM,SADN,OAEA4B,EAAQ7B,OAAS6B,EAAQ7B,MAAR,WAA+B,IAEnD6B,EAAQ7B,MACZ8B,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7B5D,IAAK0D,EAAQ1D,IACb8D,KAAMJ,EAAQI,KACdxC,SAAUoC,EAAQpC,SAClBW,MACGb,EAAKa,OACJb,EAAKa,MAAMnC,OAAS,GACpBsB,EAAKa,MAAM5B,KAAI,SAAC6B,GACd,MAAO,CACLX,GAAIW,EAAIV,KAAO,GACfvC,KAAMiD,EAAIjD,MAAQiD,EAAIjD,KACtB4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,GACFuB,QAASL,EAAQK,QACjBC,KAAMN,EAAQM,KACdC,KAAMP,EAAQO,KACdC,MAAOR,EAAQQ,MACfC,MAAOT,EAAQS,MACfC,KAAMV,EAAQU,KACdR,MACES,SAASX,EAAQE,MAAR,OACTS,SAASX,EAAQE,MAAR,SACLF,EAAQE,MAAR,MACAF,EAAQE,MAAR,QACNU,UACEZ,EAAQK,SAAWL,EAAQK,QAAQjE,OAAS,EACxC4D,EAAQK,QAAQ,GAAhB,OACAL,EAAQK,QAAQ,GAAhB,gBACA,EACNQ,QACEb,EAAQK,SAAWL,EAAQK,QAAQjE,OAAS,EACxC4D,EAAQK,QAAQ,GAAhB,OACAL,EAAQK,QAAQ,GAAhB,cACA,O,kBASLN,G,0KASMtC,G,gFACPC,EAAOD,EAAQC,KAGjBqC,EACFrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC4E,GACR,OAAO,eACFA,EADL,CAEE1D,GAAI0D,EAAKzD,KAAO,GAChBvC,KAAMgG,EAAKhG,MAAQgG,EAAKhG,KACxBiG,KAAMD,EAAKC,MAAQD,EAAKC,KACxBC,gBAAiBF,EAAKE,iBAAmBF,EAAKE,gBAC9CC,YAAaH,EAAKG,aAAeH,EAAKG,YACtCC,YAAaJ,EAAKI,aAAeJ,EAAKI,YACtCxD,MAAM,GAAD,OAAKC,EAAM,SAAX,OACFmD,EAAKpD,OAASoD,EAAKpD,MAAL,WAA4B,IAE7C7B,IAAKiF,EAAKjF,IACVsB,SAAU2D,EAAK3D,SACf8C,KAAMa,EAAKb,U,kBASVX,G,6KASStC,G,gFACVC,EAAOD,EAAQC,KAGjBqC,EACFrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC4E,GACR,OAAO,eACFA,EADL,CAEE1D,GAAI0D,EAAKzD,KAAO,GAChBvC,KAAMgG,EAAKhG,MAAQgG,EAAKhG,KACxBiG,KAAMD,EAAKC,MAAQD,EAAKC,KACxBC,gBAAiBF,EAAKE,iBAAmBF,EAAKE,gBAC9CC,YAAaH,EAAKG,aAAeH,EAAKG,YACtCC,YAAaJ,EAAKI,aAAeJ,EAAKI,YACtCxD,MAAM,GAAD,OAAKC,EAAM,SAAX,OACFmD,EAAKpD,OAASoD,EAAKpD,MAAL,WAA4B,IAE7C7B,IAAKiF,EAAKjF,IACVsB,SAAU2D,EAAK3D,SACf8C,KAAMa,EAAKb,U,kBASVX,G,kLASctC,G,gFACfC,EAAOD,EAAQC,KAGjBqC,EACFrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC4E,GACR,OAAO,eACFA,EADL,CAEE1D,GAAI0D,EAAKzD,KAAO,GAChBvC,KAAMgG,EAAKhG,MAAQgG,EAAKhG,KACxBiG,KAAMD,EAAKC,MAAQD,EAAKC,KACxBC,gBAAiBF,EAAKE,iBAAmBF,EAAKE,gBAC9CC,YAAaH,EAAKG,aAAeH,EAAKG,YACtCC,YAAaJ,EAAKI,aAAeJ,EAAKI,YACtCxD,MAAM,GAAD,OAAKC,EAAM,SAAX,OACFmD,EAAKpD,OAASoD,EAAKpD,MAAL,WAA4B,IAE7C7B,IAAKiF,EAAKjF,IACVsB,SAAU2D,EAAK3D,SACf8C,KAAMa,EAAKb,U,kBAIVX,G,4KASQtC,G,0EACTC,EAAOD,EAGbX,QAAQC,IAAI,wBAAyBU,KAEjCvB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAExBsB,E,CACHG,GAAIH,EAAKI,KAAO,GAChBvC,KAAMmC,EAAKnC,MAAQmC,EAAKnC,KACxBiG,KAAM9D,EAAK8D,MAAQ9D,EAAK8D,KACxBC,gBAAiB/D,EAAK+D,iBAAmB/D,EAAK+D,gBAC9CC,YAAahE,EAAKgE,aAAehE,EAAKgE,YACtCC,YAAajE,EAAKiE,aAAejE,EAAKiE,YACtCxD,MAAM,GAAD,OAAKC,EAAM,SAAX,OACFV,EAAKS,OAAST,EAAKS,MAAL,QAAyB,IAE1C7B,IAAKoB,EAAKpB,IACVsF,iBACElE,EAAKkE,kBAAoBlE,EAAKkE,iBAAiBxF,OAAS,EACpDsB,EAAKkE,iBAAiBjF,KAAI,SAACQ,GACzB,OAAO,eACFA,EADL,CAEEU,GAAIV,EAAKU,IACLV,EAAK0E,QACP3F,OAAOC,KAAKgB,EAAK0E,QAAQzF,OAAS,GADhC,eAEGe,EAAK0E,OAFR,CAGA1D,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OACHjB,EAAK0E,OAAO1D,MACRhB,EAAK0E,OAAO1D,MAAMgB,UAClBhC,EAAK0E,OAAO1D,MAAMgB,SAClB,IAENtB,GAAIV,EAAK0E,OAAO1D,MAAQhB,EAAK0E,OAAO1D,MAAML,IAAM,IAElDoC,MACES,SAASxD,EAAK0E,OAAO3B,MAAZ,OACTS,SAASxD,EAAK0E,OAAO3B,MAAZ,SACL/C,EAAK0E,OAAO3B,MAAZ,MACA/C,EAAK0E,OAAO3B,MAAZ,QACN3B,MACGpB,EAAK0E,OAAOtD,OACXpB,EAAK0E,OAAOtD,MAAMnC,OAAS,GAC3Be,EAAK0E,OAAOtD,MAAM5B,KAAI,SAAC6B,GACrB,MAAO,CACLX,GAAIW,EAAIV,KAAO,GACfvC,KAAMiD,EAAIjD,MAAQiD,EAAIjD,KACtB4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,SAIV,GACNgD,UACGpE,EAAKE,UACJF,EAAKE,SAASxB,OAAS,GACvBsB,EAAKE,SAASjB,KAAI,SAACoF,GACjB,MAAO,CACLlE,GAAIkE,EAAIjE,IACRvC,KAAMwG,EAAIxG,UAGhBmC,EAAKE,SACPA,SACGF,EAAKE,UACJF,EAAKE,SAASxB,OAAS,GACvBsB,EAAKE,SAASjB,KAAI,SAACoF,GACjB,OAAOA,EAAIjE,QAEfJ,EAAKE,SACP8C,KAAMhD,EAAKgD,MAAQhD,EAAKgD,KAAKtE,OAAS,EAAIsB,EAAKgD,KAAO,GACtDnC,MACGb,EAAKa,OACJb,EAAKa,MAAMnC,OAAS,GACpBsB,EAAKa,MAAM5B,KAAI,SAAC6B,GACd,MAAO,CACLX,GAAIW,EAAIV,KAAO,GACfvC,KAAMiD,EAAIjD,MAAQiD,EAAIjD,KACtB4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,M,gCAEQ,I,gLASKrB,G,0EACbC,EAAOD,EAGbX,QAAQC,IAAI,wBAAyBU,KAEjCvB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAExBsB,E,CACHG,GAAIH,EAAKI,KAAO,GAChBvC,KAAMmC,EAAKnC,MAAQmC,EAAKnC,KACxBiG,KAAM9D,EAAK8D,MAAQ9D,EAAK8D,KACxBC,gBAAiB/D,EAAK+D,iBAAmB/D,EAAK+D,gBAC9CC,YAAahE,EAAKgE,aAAehE,EAAKgE,YACtCC,YAAajE,EAAKiE,aAAejE,EAAKiE,YACtCxD,MAAM,GAAD,OAAKC,EAAM,SAAX,OACFV,EAAKS,OAAST,EAAKS,MAAL,QAAyB,IAE1C7B,IAAKoB,EAAKpB,IACVsF,iBACElE,EAAKkE,kBAAoBlE,EAAKkE,iBAAiBxF,OAAS,EACpDsB,EAAKkE,iBAAiBjF,KAAI,SAACQ,GACzB,OAAO,eACFA,EADL,CAEEU,GAAIV,EAAKU,IACLV,EAAK0E,QACP3F,OAAOC,KAAKgB,EAAK0E,QAAQzF,OAAS,GADhC,eAEGe,EAAK0E,OAFR,CAGA1D,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OACHjB,EAAK0E,OAAO1D,MACRhB,EAAK0E,OAAO1D,MAAMgB,UAClBhC,EAAK0E,OAAO1D,MAAMgB,SAClB,IAENtB,GAAIV,EAAK0E,OAAO1D,MAAQhB,EAAK0E,OAAO1D,MAAML,IAAM,IAElDoC,MACES,SAASxD,EAAK0E,OAAO3B,MAAZ,OACTS,SAASxD,EAAK0E,OAAO3B,MAAZ,SACL/C,EAAK0E,OAAO3B,MAAZ,MACA/C,EAAK0E,OAAO3B,MAAZ,QACN3B,MACGpB,EAAK0E,OAAOtD,OACXpB,EAAK0E,OAAOtD,MAAMnC,OAAS,GAC3Be,EAAK0E,OAAOtD,MAAM5B,KAAI,SAAC6B,GACrB,MAAO,CACLX,GAAIW,EAAIV,KAAO,GACfvC,KAAMiD,EAAIjD,MAAQiD,EAAIjD,KACtB4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,SAIV,GACNlB,SAAUF,EAAKE,SACf8C,KAAMhD,EAAKgD,MAAQhD,EAAKgD,KAAKtE,OAAS,EAAIsB,EAAKgD,KAAO,GACtDnC,MACGb,EAAKa,OACJb,EAAKa,MAAMnC,OAAS,GACpBsB,EAAKa,MAAM5B,KAAI,SAAC6B,GACd,MAAO,CACLX,GAAIW,EAAIV,KAAO,GACfvC,KAAMiD,EAAIjD,MAAQiD,EAAIjD,KACtB4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,M,gCAEQ,I,4KASCrB,G,gFACTC,EAAOD,EAAQC,MAAQ,GAEzBqC,EACFrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACqD,GACR,OAAO,eACFA,EADL,CAEEgC,aAAchC,EAAQE,MACtBrC,GAAImC,EAAQlC,KAAO,GACnBvC,KAAMyE,EAAQzE,MAAQyE,EAAQzE,KAC9ByC,YAAagC,EAAQhC,aAAegC,EAAQhC,YAC5CG,MAAO6B,EAAQ7B,MAAR,UACAC,EAAM,SADN,OAEA4B,EAAQ7B,OAAS6B,EAAQ7B,MAAR,WAA+B,IAEnD6B,EAAQ7B,MACZ8B,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7B5D,IAAK0D,EAAQ1D,IACb2F,UAAWjC,EAAQiC,UACnBC,QAASlC,EAAQkC,QACjBC,YAAanC,EAAQmC,YACrB/B,KAAMJ,EAAQI,KACdxC,SAAUoC,EAAQpC,SAClByC,QAASL,EAAQK,QACjBC,KAAMN,EAAQM,KACdC,KAAMP,EAAQO,KACdC,MAAOR,EAAQQ,MACfC,MAAOT,EAAQS,MACfC,KAAMV,EAAQU,KACdV,QAASA,EAAO,QAChB/B,aAAc+B,EAAO,QAAY5D,OACjC8D,MACES,SAASX,EAAQE,MAAR,OACTS,SAASX,EAAQE,MAAR,SACLF,EAAQE,MAAR,MACAF,EAAQE,MAAR,a,kBASLH,G,8KASUtC,G,0EACXC,EAAOD,GAAW,KAEpBvB,OAAOC,KAAKuB,GAAMtB,OAAS,G,yCACtB,CACLyB,GAAIH,EAAKI,KAAO,GAChBvC,KAAMmC,EAAKnC,MAAQmC,EAAKnC,KACxByC,YAAaN,EAAKM,aAAeN,EAAKM,YACtCG,MAAOT,EAAKS,MAAL,UACAC,EAAM,SADN,OAEAV,EAAKS,OAAST,EAAKS,MAAL,WAA4B,IAE7C,GACJ8B,aAAcvC,EAAKwC,OAASxC,EAAKwC,MAAL,QAC5BC,WAAYzC,EAAKwC,OAASxC,EAAKwC,MAAL,MAC1B5D,IAAKoB,EAAKpB,IACV2F,UAAWvE,EAAKuE,UAChBC,QAASxE,EAAKwE,QACdC,YAAazE,EAAKyE,YAClB/B,KAAM1C,EAAK0C,KACXxC,SAAUF,EAAKE,SACfyC,QAAS3C,EAAK2C,QACdC,KAAM5C,EAAK4C,KACXC,KAAM7C,EAAK6C,KACXC,MAAO9C,EAAK8C,MACZC,MAAO/C,EAAK+C,MACZC,KAAMhD,EAAKgD,KACX0B,SAAU1E,EAAKsC,QACf/B,aAAcP,EAAI,QAAYtB,OAC9B8D,MACES,SAASjD,EAAKwC,MAAL,OAAuBS,SAASjD,EAAKwC,MAAL,SACrCxC,EAAKwC,MAAL,MACAxC,EAAKwC,MAAL,QACN3B,MACGb,EAAKa,OACJb,EAAKa,MAAMnC,OAAS,GACpBsB,EAAKa,MAAM5B,KAAI,SAAC6B,GACd,MAAO,CACLX,GAAIW,EAAIV,KAAO,GACfvC,KAAMiD,EAAIjD,MAAQiD,EAAIjD,KACtB4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,K,gCAEQpB,G,wLAcaD,G,gFACrBC,EAAOD,GAAWA,EAAQC,KAAOD,EAAQC,KAAO,GAEtDZ,QAAQC,IAAI,yBAA0BU,GAElCsC,EACFrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACQ,GACR,MAAO,CACLU,GAAIV,EAAKW,KAAO,GAChBuE,MAAOlF,EAAKmF,OAAS,GACrB/G,KACE4B,EAAI,QAAcA,EAAI,OAAW,IAAMA,EAAI,OAAW,GAAf,KACzCb,IAAKa,EAAI,QAAcA,EAAI,OAAW,IAAMA,EAAI,OAAW,GAAf,IAC5CoF,OACEpF,EAAI,QAAcA,EAAI,OAAW,IAAMA,EAAI,OAAW,GAAf,Q,kBASxC4C,G,4LASwBtC,G,0FACxBA,G,+LAS2BA,G,4EAC5BC,EAAOD,GAAWA,EAAQC,KAAOD,EAAQC,KAAO,I,yCAE7CA,G,gCACK,I,oLASSD,G,8EACjBC,EAAOD,EAAQC,MAAQ,G,kBACtBA,G,4LASwBD,G,0FACxBA,G,gLASYA,G,qEACfA,E,wDAEGA,E,CACHI,GAAIJ,EAAQK,KAAO,GACnBC,IAAKN,EAAQK,KAAO,GACpB0E,UAAW/E,EAAQ+E,WAAa,GAChCC,SAAUhF,EAAQgF,UAAY,GAC9BlH,KAAMkC,EAAQ+E,UAAY,IAAM/E,EAAQgF,SACxCC,QAASjF,EAAQiF,SAAW,GAC5BC,KAAMlF,EAAQkF,MAAQ,GACtBC,MAAOnF,EAAQmF,OAAS,GACxBC,MAAOpF,EAAQoF,OAAS,GACxBC,SAAUrF,EAAQqF,UAAY,GAC9BC,SAAUtF,EAAQsF,UAAY,GAC9BC,QAASvF,EAAQuF,SAAW,M,gCAElBvF,G,4KASCA,G,gFAGXsC,GAFErC,EAAOD,GAAW,IAGjBrB,OAAS,GACdsB,EAAKf,KAAI,SAACqD,GACR,OAAO,eACFtC,EADL,CAEEG,GAAImC,EAAQlC,KAAO,GACnBvC,KAAMyE,EAAQzE,MAAQyE,EAAQzE,KAC9B0H,KAAMjD,EAAQiD,KACd9E,MAAO6B,EAAQ7B,MAAR,UACAC,EAAM,SADN,OAEA4B,EAAQ7B,OAAS6B,EAAQ7B,MAAR,WAA+B,IAEnD6B,EAAQ7B,MACZ+E,aAAclD,EAAQkD,aACtBC,aAAcnD,EAAQmD,aACtBhD,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7BkD,aAAcpD,EAAQoD,aACtBC,qBACErD,EAAQsD,iBAAmBtD,EAAQsD,gBAAgBlH,OACrDmH,kBACEvD,EAAQoD,cAAgBpD,EAAQoD,aAAahH,OAC/CoH,WAAYxD,EAAQwD,WACpBC,OAAQzD,EAAQyD,OAChBC,aAAc1D,EAAQ0D,aACtBzB,UAAWjC,EAAQiC,UACnBC,QAASlC,EAAQkC,QACjByB,cAAe3D,EAAQ2D,cACvBxB,YAAanC,EAAQmC,YACrB/B,KAAMJ,EAAQI,KACdxC,SAAUoC,EAAQpC,SAClByC,QAASL,EAAQK,QACjBC,KAAMN,EAAQM,KACdC,KAAMP,EAAQO,UAIpBzD,QAAQC,IAAI,sBAAuBgD,G,kBAO5BA,G,yKASKtC,G,gFACNC,EAAOD,EAAQC,MAAQ,GAEvBqC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACiH,GACR,OAAO,eACFA,EADL,CAEE/F,GAAI+F,EAAI9F,KAAO,GACfC,IAAK6F,EAAI9F,KAAO,GAChBvC,KAAMqI,EAAIrI,MAAQqI,EAAIrI,KACtByC,YAAa4F,EAAI5F,aAAe4F,EAAI5F,iB,kBAInC+B,G,iLASatC,G,gFACdC,EAAOD,EAAQC,MAAQ,GAEvBqC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACiG,GACR,OAAO,eACFA,EADL,CAEE/E,GAAI+E,EAAM9E,KAAO,GACjBC,IAAK6E,EAAM9E,KAAO,GAClB+F,UAAWjB,EAAMiB,UACjBC,QAASlB,EAAMkB,QACfC,KAAMnB,EAAMmB,KACZpE,KAAMiD,EAAMjD,KACZY,KAAMqC,EAAMrC,KACZyD,MAAOpB,EAAMoB,W,kBAIZjE,G,gLASYtC,G,gFACbC,EAAOD,EAAQC,MAAQ,GAEvBqC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACsH,GACR,OAAO,eACFA,EADL,CAEEpG,GAAIoG,EAAInG,KAAO,GACfC,IAAKkG,EAAInG,KAAO,GAChB+F,UAAWI,EAAIJ,UACflE,KAAMsE,EAAItE,KACVY,KAAM0D,EAAI1D,KACVyD,MAAOC,EAAID,W,kBAIVjE,G,6KASStC,G,gFACVC,EAAOD,EAAQC,KAEfqC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACiH,GACR,MAAO,CACL/F,GAAI+F,EAAI9F,KAAO,GACfC,IAAK6F,EAAI9F,KAAO,GAChBvC,KAAMqI,EAAIrI,MAAQqI,EAAIrI,KACtByC,YAAa4F,EAAI5F,aAAe4F,EAAI5F,gB,kBAInC+B,G,+KASWtC,G,0EACZC,EAAOD,IAETvB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAExBsB,E,CACHG,GAAIH,EAAKI,KAAO,GAChBC,IAAKL,EAAKI,KAAO,GACjBvC,KAAMmC,EAAKnC,MAAQmC,EAAKnC,KACxByC,YAAaN,EAAKM,aAAeN,EAAKM,e,gCAE5B,I,kLAUOP,G,0EACfC,EAAOD,IAETvB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAExBsB,E,CACHG,GAAIH,EAAKI,KAAO,GAChBC,IAAKL,EAAKI,KAAO,GACjBvC,KAAMmC,EAAKnC,MAAQmC,EAAKnC,Q,gCAEd,I,2KASAkC,G,gFACRC,EAAOD,EAAQC,MAAQ,GAEvBqC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC8D,GACR,MAAO,CACL5C,GAAI4C,EAAM3C,KAAO,GACjBC,IAAK0C,EAAM3C,KAAO,GAClBvC,KAAMkF,EAAMlF,MAAQkF,EAAMlF,KAC1ByC,YAAayC,EAAMzC,aAAeyC,EAAMzC,YACxCG,MAAM,GAAD,OAAKC,EAAM,SAAX,OACHqC,EAAMtC,MAAQsC,EAAMtC,MAAME,UAAY,Q,kBAKvC0B,G,2LASuBtC,G,qEAC1BA,EAAQyG,Q,yCACH,CACL9C,OAAQ,O,gCAGL,I,6KASS3D,G,qEACZA,EAAQyG,Q,yCACH,CACL9C,OAAQ,O,gCAGL,I,2LASuB3D,G,qEAC1BA,EAAQyG,Q,yCACH,CACL9C,OAAQ,O,gCAGL,I,oLASgB3D,G,qEACnBA,EAAQyG,Q,yCACH,CACL9C,OAAQ,O,gCAGL,I,8KASU3D,G,qEACbA,EAAQyG,Q,yCACH,CACL9C,OAAQ,O,gCAGL,I,uLASmB3D,G,sEACtBA,GAAWvB,OAAOC,KAAKsB,GAASrB,OAAS,G,wDAEtCqB,E,CACH2D,OAAQ,Q,gCAGL,I,qLASiB3D,G,sEACpBA,GAAWvB,OAAOC,KAAKsB,GAASrB,OAAS,G,wDAEtCqB,E,CACH2D,OAAQ,Q,gCAGL,I,iLASa3D,G,qEAChBA,IAAWA,EAAQ0G,I,yCACd,CACL/C,OAAQ,O,gCAGL,I,+KASW3D,G,qEACdA,IAAWA,EAAQyG,Q,yCACd,CACL9C,OAAQ,O,gCAGL,I,uLASmB3D,G,qEACtBA,EAAQyG,Q,yCACH,CACL9C,OAAQ,O,gCAGL,I,6KASS3D,G,qEACZA,EAAQ2G,O,yCACH,CACLhD,OAAQ,O,gCAGL,I,6KASS3D,G,4EACVC,EAAOxB,OAAOC,KAAKsB,GAASrB,OAAS,EAAIqB,EAAU,M,wDAGlDC,E,CACHG,GAAIH,EAAKI,KAAO,GAChBC,IAAKL,EAAKI,KAAO,GACjBvC,KAAMmC,EAAKnC,MAAQmC,EAAKnC,KACxByC,YAAaN,EAAKM,aAAeN,EAAKM,YACtC1B,IAAKoB,EAAKpB,KAAOoB,EAAKpB,IACtB6B,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OACHV,EAAKS,MAAQT,EAAKS,MAAMgB,UAAYzB,EAAKS,MAAMgB,SAAW,IAE5DtB,GAAIH,EAAKS,MAAQT,EAAKS,MAAML,IAAM,IAEpCS,MACGb,EAAKa,OACJb,EAAKa,MAAMnC,OAAS,GACpBsB,EAAKa,MAAM5B,KAAI,SAAC6B,GACd,MAAO,CACLX,GAAIW,EAAIV,KAAO,GACfvC,KAAMiD,EAAIjD,MAAQiD,EAAIjD,KACtB4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIH,WAClCK,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,M,gCAIC,I,2KASOrB,G,4EACRC,EAAOxB,OAAOC,KAAKsB,GAASrB,OAAS,EAAIqB,EAAU,M,wDAGlDC,E,CACHG,GAAIH,EAAKI,KAAO,GAChBC,IAAKL,EAAKI,KAAO,GACjBvC,KAAMmC,EAAKnC,MAAQmC,EAAKnC,KACxBe,IAAKoB,EAAKpB,KAAOoB,EAAKpB,IACtB0B,YAAaN,EAAKM,aAAeN,EAAKM,e,gCAInC,I,8KASUP,G,gFACXC,EAAOD,EAAQC,MAAQ,GAEvBqC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC0H,GACR,OAAO,eACFA,EADL,CAEExG,GAAIwG,EAASvG,KAAO,GACpBC,IAAKsG,EAASvG,KAAO,GACrB0E,UAAW6B,EAAS7B,WAAa,GACjCC,SAAU4B,EAAS5B,UAAY,GAC/BlH,KAAM8I,EAAS7B,UAAY,IAAM6B,EAAS5B,SAC1C6B,WACED,EAASE,QAAUrI,OAAOC,KAAKkI,EAASE,QAAQnI,OAAS,EACrDiI,EAAQ,OAAW7B,UAAY,IAAM6B,EAAQ,OAAW5B,SACxD,OACNC,QAAS2B,EAAS3B,SAAW,GAC7BC,KAAM0B,EAAS1B,MAAQ,GACvBC,MAAOyB,EAASzB,OAAS,GACzBC,MAAOwB,EAASxB,OAAS,GACzBC,SAAUuB,EAASvB,UAAY,GAC/BC,SAAUsB,EAAStB,UAAY,GAC/BC,QAASqB,EAAS3F,OAAS,Q,kBAI1BqB,G,2KASOtC,G,gFACRC,EAAOD,EAAQC,MAAQ,GAEvBqC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC0H,GACR,OAAO,eACFA,EADL,CAEExG,GAAIwG,EAASvG,KAAO,GACpBC,IAAKsG,EAASvG,KAAO,GACrB0E,UAAW6B,EAAS7B,WAAa,GACjCC,SAAU4B,EAAS5B,UAAY,GAC/BlH,KAAM8I,EAAS7B,UAAY,IAAM6B,EAAS5B,SAC1CC,QAAS2B,EAAS3B,SAAW,GAC7BC,KAAM0B,EAAS1B,MAAQ,GACvBC,MAAOyB,EAASzB,OAAS,GACzBC,MAAOwB,EAASxB,OAAS,GACzB2B,QAASH,EAASG,SAAW,Q,kBAI5BzE,G,8LAS0BtC,G,gFAC3BC,EAAOD,EAAQC,MAAQ,GAEvBqC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC0H,GACR,OAAO,eACFA,EADL,CAEExG,GAAIwG,EAASvG,KAAO,GACpBC,IAAKsG,EAASvG,KAAO,GACrB0E,UAAW6B,EAAS7B,WAAa,GACjCC,SAAU4B,EAAS5B,UAAY,GAC/BlH,KAAM8I,EAAS7B,UAAY,IAAM6B,EAAS5B,SAC1C6B,WACED,EAASE,QAAUrI,OAAOC,KAAKkI,EAASE,QAAQnI,OAAS,EACrDiI,EAAQ,OAAW7B,UAAY,IAAM6B,EAAQ,OAAW5B,SACxD,OACNC,QAAS2B,EAAS3B,SAAW,GAC7BC,KAAM0B,EAAS1B,MAAQ,GACvBC,MAAOyB,EAASzB,OAAS,GACzBC,MAAOwB,EAASxB,OAAS,GACzBC,SAAUuB,EAASvB,UAAY,GAC/BC,SAAUsB,EAAStB,UAAY,GAC/BC,QAASqB,EAAS3F,OAAS,Q,kBAI1BqB,G,4KASQtC,G,gFACTC,EAAOD,EAAQC,MAAQ,GAEvBqC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC0H,GACR,OAAO,eACFA,EADL,CAEExG,GAAIwG,EAASvG,KAAO,GACpBC,IAAKsG,EAASvG,KAAO,GACrBmF,KAAMoB,EAASpB,MAAQ,GACvBwB,WAAYJ,EAASI,YAAc,GACnCC,aAAcL,EAASK,cAAgB,GACvCnJ,KAAM8I,EAAS7B,UAAY,IAAM6B,EAAS5B,SAC1CC,QAAS2B,EAAS3B,SAAW,GAC7BC,KAAM0B,EAAS1B,MAAQ,GACvBC,MAAOyB,EAASzB,OAAS,GACzBC,MAAOwB,EAASxB,OAAS,GACzBC,SAAUuB,EAASvB,UAAY,GAC/BC,SAAUsB,EAAStB,UAAY,GAC/BC,QAASqB,EAAS3F,OAAS,Q,kBAI1BqB,G,kLASctC,G,gFAGfsC,GAFArC,EAAOD,GAAW,IAGjBrB,OAAS,GACdsB,EAAKf,KAAI,SAAC0H,GACR,OAAO,eACFA,EADL,CAEExG,GAAIwG,EAASvG,KAAO,GACpBC,IAAKsG,EAASvG,KAAO,GACrBmF,KAAMoB,EAASpB,MAAQ,GACvBwB,WAAYJ,EAASI,YAAc,GACnCC,aAAcL,EAASK,cAAgB,GACvCnJ,KAAM8I,EAAS7B,UAAY,IAAM6B,EAAS5B,SAC1CC,QAAS2B,EAAS3B,SAAW,GAC7BC,KAAM0B,EAAS1B,MAAQ,GACvBC,MAAOyB,EAASzB,OAAS,GACzBC,MAAOwB,EAASxB,OAAS,GACzBC,SAAUuB,EAASvB,UAAY,GAC/BC,SAAUsB,EAAStB,UAAY,GAC/BC,QAASqB,EAAS3F,OAAS,Q,kBAI1BqB,G,8KASUtC,G,qEACbA,E,wDAEGA,E,CACHI,GAAIJ,EAAQK,KAAO,GACnBC,IAAKN,EAAQK,KAAO,GACpBmF,KAAMxF,EAAQwF,MAAQ,GACtBwB,WAAYhH,EAAQgH,YAAc,GAClCC,aAAcjH,EAAQiH,cAAgB,GACtCnJ,KAAMkC,EAAQ+E,UAAY,IAAM/E,EAAQgF,SACxCC,QAASjF,EAAQiF,SAAW,GAC5BC,KAAMlF,EAAQkF,MAAQ,GACtBC,MAAOnF,EAAQmF,OAAS,GACxBC,MAAOpF,EAAQoF,OAAS,GACxBC,SAAUrF,EAAQqF,UAAY,GAC9BC,SAAUtF,EAAQsF,UAAY,GAC9BC,QAASvF,EAAQiB,OAAS,M,gCAEhBjB,G,0KASDA,G,gFACPC,EAAOD,EAAQC,MAAQ,GAEvBqC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACkD,GACR,OAAO,eACFA,EADL,CAEEhC,GAAIgC,EAAK/B,KAAO,GAChBC,IAAK8B,EAAK/B,KAAO,GACjBvC,KAAMsE,EAAKtE,MAAQsE,EAAKtE,KACxByC,YAAa6B,EAAK7B,aAAe6B,EAAK7B,YACtCG,MAAM,GAAD,OAAKC,EAAM,SAAX,OACHyB,EAAK1B,MAAQ0B,EAAK1B,MAAME,UAAY,S,kBAKrC0B,G,2KASOtC,G,gFAGRsC,GAFArC,EAAOD,GAAW,IAGjBrB,OAAS,GACdsB,EAAKf,KAAI,SAACgI,GACR,MAAO,CACL9G,GAAI8G,EAAM7G,KAAO,GACjBC,IAAK4G,EAAM7G,KAAO,GAClBvC,KAAMoJ,EAAMpJ,MAAQ,GACpBmD,MAAOiG,EAAMjG,OAAS,GACtBL,UAAU,GAAD,OAAKD,EAAM,SAAX,OACPuG,EAAMtG,UAAYsG,EAAMtG,UAAY,Q,kBAKrC0B,G,+KASWtC,G,+EACZmH,EAAanH,EAAQmH,YAAc,KAEvBA,EAAWxI,OAAS,G,uBAC9B2D,EACJ6E,EAAWxI,OAAS,GACpBwI,EAAWjI,KAAI,SAACkI,GACd,MAAO,CACLhH,GAAIgH,EAAU/G,KAAO,GACrBC,IAAK8G,EAAU/G,KAAO,GACtBvC,KAAMsJ,EAAUtJ,MAAQ,GACxBwF,MACE8D,EAAU9D,MAAM3E,OAAS,EACrByI,EAAU9D,MAAMpE,KAAI,SAACQ,GACnB,OAAO,eACFA,EADL,CAEEoB,MACEpB,EAAKoB,MAAMnC,OAAS,EAChBe,EAAKoB,MAAM5B,KAAI,SAAC6B,GACd,MAAO,CACLL,MAAM,GAAD,OAAKC,EAAM,SAAX,OACHI,EAAIH,UAAYG,EAAIH,UAAY,IAElCR,GAAIW,EAAIV,IACRvC,KAAMiD,EAAIjD,MAAQiD,EAAIjD,KACtBmD,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,YAGjB,QAGV,O,kBAILiB,G,gCAGF,I,4KASQrC,G,8EACTqC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACmI,GACR,MAAO,CACLjH,GAAIiH,EAAOhH,KAAO,GAClBC,IAAK+G,EAAOhH,KAAO,GACnBvC,KAAMuJ,EAAOvJ,MAAQ,GACrBwJ,eAAgBD,EAAOC,gBAAkB,GACzCrC,QAASoC,EAAOpC,SAAW,GAC3BsC,YAAaF,EAAOE,aAAe,GACnCC,YAAaH,EAAOG,aAAe,GACnCtC,KAAMmC,EAAOnC,MAAQ,GACrBpC,KAAMuE,EAAOvE,MAAQ,GACrB2E,OAAQJ,EAAOI,QAAU,O,kBAIxBnF,G,+KASWrC,G,8EACZqC,EAAgB7D,OAAOC,KAAKuB,GAAMtB,OAAS,GAAKsB,E,kBAC/CqC,G,sLASkBtC,G,gFACnBC,EAAOD,EAAQC,MAAQ,GAEvBqC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC4B,GACR,MAAO,CACLV,GAAIU,EAAMT,KAAO,GACjBvC,KAAMgD,EAAMhD,MAAQgD,EAAMhD,KAC1B4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBG,EAAMF,WACpCK,MAAOH,EAAMG,MACbC,MAAOJ,EAAMI,MACbC,OAAQL,EAAMK,OACdC,IAAKN,EAAMM,IACXC,QAASP,EAAMO,Y,kBAIdiB,G,6KASStC,G,gFAGVsC,GAFArC,EAAOD,GAAW,IAGjBrB,OAAS,GACdsB,EAAKf,KAAI,SAAC+F,GACR,MAAO,CACL7E,GAAI6E,EAAQ5E,KAAO,GACnBvC,KAAMmH,EAAQnH,MAAQmH,EAAQnH,S,kBAI7BwE,G,mLAUerC,G,8EAChBqC,EAAgBrC,E,kBAEfqC,G,0KASMtC,G,gFAGPsC,GAFArC,EAAOD,GAAW,IAGjBrB,OAAS,GACdsB,EAAKf,KAAI,SAACgG,GACR,MAAO,CACL9E,GAAI8E,EAAK7E,KAAO,GAChBvC,KAAMoH,EAAKpH,MAAQoH,EAAKpH,S,kBAIvBwE,G,8KASUtC,G,0FACVA,G,+KAUWC,G,8EACZqC,EACH7D,OAAOC,KAAKuB,GAAMtB,OAAS,GAA3BF,OAAA,IAAAA,CAAA,GACIwB,EADJ,CAECG,GAAIH,EAAKI,KAAOJ,EAAKG,IAAM,GAC3BtC,KAAMmC,EAAKnC,MAAQ,GACnByC,YAAaN,EAAKM,YAAYf,QAAQ,WAAY,KAAO,GACzDgD,aAAcvC,EAAKwC,OAASxC,EAAKwC,MAAL,QAC5BC,WAAYzC,EAAKwC,OAASxC,EAAKwC,MAAL,MAC1B5D,IAAKoB,EAAKpB,IACV6I,eAAgBzH,EAAKyH,eACrBC,aAAc1H,EAAK0H,aACnBhF,KAAM1C,EAAK0C,KACXE,KAAM5C,EAAK4C,KACXE,MAAO9C,EAAK8C,MACZC,MACE/C,EAAK+C,OAASvE,OAAO6B,IAAIL,EAAK+C,OAAOrE,OAAS,EAC1C,CACEyB,GAAIH,EAAK+C,MAAM5C,GACftC,KAAMmC,EAAK+C,MAAMlF,MAEnB,GACN2E,MACES,SAASjD,EAAKwC,MAAL,OAAuBS,SAASjD,EAAKwC,MAAL,SACrCxC,EAAKwC,MAAL,MACAxC,EAAKwC,MAAL,QACNG,QAAS3C,EAAK2C,QACdzC,SACGF,EAAKE,UACJF,EAAKE,SAASxB,OAAS,GACvBsB,EAAKE,SAASjB,KAAI,SAACoF,GACjB,MAAO,CACLlE,GAAIkE,EAAIjE,IACRvC,KAAMwG,EAAIxG,UAGhBmC,EAAKE,SACP8C,KAAMhD,EAAKgD,MAAQhD,EAAKgD,KAAKtE,OAAS,EAAIsB,EAAKgD,KAAO,GAEtDvC,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OACHV,EAAKS,MAAQT,EAAKS,MAAMgB,UAAYzB,EAAKS,MAAMgB,SAAW,IAE5DtB,GAAIH,EAAKS,MAAQT,EAAKS,MAAML,IAAM,IAEpCS,MACGb,EAAKa,OACJb,EAAKa,MAAMnC,OAAS,GACpBsB,EAAKa,MAAM5B,KAAI,SAAC6B,GACd,MAAO,CACLX,GAAIW,EAAIV,KAAO,GACfvC,KAAMiD,EAAIjD,MAAQiD,EAAIjD,KACtB4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,GACF8B,UACElD,EAAK2C,SAAW3C,EAAK2C,QAAQjE,OAAS,EAClCsB,EAAK2C,QAAQ,GAAb,OAA4B3C,EAAK2C,QAAQ,GAAb,gBAC5B,EACNQ,QACEnD,EAAK2C,SAAW3C,EAAK2C,QAAQjE,OAAS,EAClCsB,EAAK2C,QAAQ,GAAb,OAA4B3C,EAAK2C,QAAQ,GAAb,cAC5B,KAER,G,kBAEKN,G,8KAUUrC,G,8EACXqC,EACH7D,OAAOC,KAAKuB,GAAMtB,OAAS,GAA3BF,OAAA,IAAAA,CAAA,GACIwB,EADJ,CAECG,GAAIH,EAAKI,KAAO,GAChBvC,KAAMmC,EAAKnC,MAAQmC,EAAKnC,KACxB4C,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OACHV,EAAKS,MAAQT,EAAKS,MAAMgB,UAAYzB,EAAKS,MAAMgB,SAAW,IAE5DtB,GAAIH,EAAKS,MAAQT,EAAKS,MAAML,IAAM,IAEpCmF,KAAMvF,EAAKuF,KACXC,aAAcxF,EAAKwF,aACnBC,aAAczF,EAAKyF,aACnBC,aAAc1F,EAAK0F,cAAgB,GACnCE,gBACE5F,EAAK4F,iBAAmB5F,EAAK4F,gBAAgBlH,OAAS,EAClDsB,EAAK4F,gBAAgB3G,KAAI,SAACQ,GAExB,OADAL,QAAQC,IAAI,sBAAuBI,GAC5B,eACFA,EADL,CAEEU,GAAIV,EAAKU,IACLV,EAAK0E,QACP3F,OAAOC,KAAKgB,EAAK0E,QAAQzF,OAAS,GADhC,eAEGe,EAAK0E,OAFR,CAGA1D,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OACHjB,EAAK0E,OAAO1D,MACRhB,EAAK0E,OAAO1D,MAAMgB,UAClBhC,EAAK0E,OAAO1D,MAAMgB,SAClB,IAENtB,GAAIV,EAAK0E,OAAO1D,MAAQhB,EAAK0E,OAAO1D,MAAML,IAAM,IAElDoC,MACES,SAASxD,EAAK0E,OAAO3B,MAAZ,OACTS,SAASxD,EAAK0E,OAAO3B,MAAZ,SACL/C,EAAK0E,OAAO3B,MAAZ,MACA/C,EAAK0E,OAAO3B,MAAZ,cAId,GACNqD,kBAAmB7F,EAAK0F,cAAgB1F,EAAK4F,gBAAgBlH,OAC7DoH,WAAY9F,EAAK8F,WACjBC,OAAQ/F,EAAK+F,OACbC,aAAchG,EAAKgG,aACnBzB,UAAWvE,EAAKuE,UAChBC,QAASxE,EAAKwE,QACdyB,cAAejG,EAAKiG,cACpBxB,YAAazE,EAAKyE,YAClB/B,KAAM1C,EAAK0C,KACXxC,SAAUF,EAAKE,SACfyC,QAAS3C,EAAK2C,QACdC,KAAM5C,EAAK4C,KACXC,KAAM7C,EAAK6C,KACXC,MAAO9C,EAAK8C,MACZC,MAAO/C,EAAK+C,MACZC,KAAMhD,EAAKgD,QAEb,GAEF5D,QAAQC,IAAI,sBAAuBgD,G,kBAE5BA,G,mLASerC,G,8EAChBqC,EACH7D,OAAOC,KAAKuB,GAAMtB,OAAS,GAA3BF,OAAA,IAAAA,CAAA,GACIwB,EADJ,CAECG,GAAIH,EAAKI,KAAOJ,EAAKG,IAAM,GAC3BtC,KAAMmC,EAAKnC,MAAQ,GACnByC,YAAaN,EAAKM,YAAYf,QAAQ,WAAY,KAAO,GACzDgD,aAAcvC,EAAKwC,OAASxC,EAAKwC,MAAL,QAC5BC,WAAYzC,EAAKwC,OAASxC,EAAKwC,MAAL,MAC1B5D,IAAKoB,EAAKpB,IACV8D,KAAM1C,EAAK0C,KACXE,KAAM5C,EAAK4C,KACXE,MAAO9C,EAAK8C,MACZH,QAAS3C,EAAK2C,QACdH,MACES,SAASjD,EAAKwC,MAAL,OAAuBS,SAASjD,EAAKwC,MAAL,SACrCxC,EAAKwC,MAAL,MACAxC,EAAKwC,MAAL,QACNtC,SACGF,EAAKE,UACJF,EAAKE,SAASxB,OAAS,GACvBsB,EAAKE,SAASjB,KAAI,SAACoF,GACjB,MAAO,CACLlE,GAAIkE,EAAIjE,IACRvC,KAAMwG,EAAIxG,KACV4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OACH2D,EAAI5D,MAAQ4D,EAAI5D,MAAMgB,UAAY4C,EAAI5D,MAAMgB,SAAW,SAI/DzB,EAAKE,SACP6C,MACE/C,EAAK+C,OAASvE,OAAOC,KAAKuB,EAAK+C,OAAOrE,OAAS,EAC3C,CACEyB,GAAIH,EAAK+C,MAAM3C,IACfvC,KAAMmC,EAAK+C,MAAMlF,KACjB4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OACHV,EAAK+C,MAAMtC,MACPT,EAAK+C,MAAMtC,MAAMgB,UAAYzB,EAAK+C,MAAMtC,MAAMgB,SAC9C,KAGRzB,EAAK+C,MACX4E,gBACE3H,EAAK2H,iBAAmBnJ,OAAOC,KAAKuB,EAAK2H,iBAAiBjJ,OAAS,EAC/D,CACEyB,GAAIH,EAAK2H,gBAAgBvH,IACzBvC,KAAMmC,EAAK2H,gBAAgB9J,KAC3B4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OACHV,EAAK2H,gBAAgBlH,MACjBT,EAAK2H,gBAAgBlH,MAAMgB,UAC3BzB,EAAK2H,gBAAgBlH,MAAMgB,SAC3B,KAGRzB,EAAK2H,gBACX3E,KAAMhD,EAAKgD,MAAQhD,EAAKgD,KAAKtE,OAAS,EAAIsB,EAAKgD,KAAO,GACtDyE,eAAgBzH,EAAKyH,eACrBhH,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OACHV,EAAKS,MAAQT,EAAKS,MAAMgB,UAAYzB,EAAKS,MAAMgB,SAAW,IAE5DtB,GAAIH,EAAKS,MAAQT,EAAKS,MAAML,IAAM,IAEpCS,MACGb,EAAKa,OACJb,EAAKa,MAAMnC,OAAS,GACpBsB,EAAKa,MAAM5B,KAAI,SAAC6B,GACd,MAAO,CACLX,GAAIW,EAAIV,KAAO,GACfvC,KAAMiD,EAAIjD,MAAQiD,EAAIjD,KACtB4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,MAEJ,G,kBAEKiB,G,+KASWrC,G,0EACZqC,EAAgBrC,GAElBA,IAAQA,EAAKyD,Q,wDAEVzD,EAAKyD,Q,CACRtD,GAAIH,EAAKyD,QAAQrD,KAAOJ,EAAKyD,QAAQtD,IAAM,GAC3CtC,KAAMmC,EAAKyD,QAAQ5F,MAAQ,GAC3ByC,YAAaN,EAAKyD,QAAQnD,YAAYf,QAAQ,WAAY,KAAO,GACjEgD,aAAcvC,EAAKyD,QAAQjB,OAASxC,EAAKyD,QAAQjB,MAAb,QACpCC,WAAYzC,EAAKyD,QAAQjB,OAASxC,EAAKyD,QAAQjB,MAAb,MAClC5D,IAAKoB,EAAKyD,QAAQ7E,IAClB6I,eAAgBzH,EAAKyD,QAAQgE,eAC7BC,aAAc1H,EAAKyD,QAAQiE,aAC3BhF,KAAM1C,EAAKyD,QAAQf,KACnBE,KAAM5C,EAAKyD,QAAQb,KACnBE,MAAO9C,EAAKyD,QAAQX,MACpBC,MACE/C,EAAKyD,QAAQV,OAASvE,OAAO6B,IAAIL,EAAKyD,QAAQV,OAAOrE,OAAS,EAC1D,CACEyB,GAAIH,EAAKyD,QAAQV,MAAM5C,GACvBtC,KAAMmC,EAAKyD,QAAQV,MAAMlF,MAE3B,GACN2E,MACES,SAASjD,EAAKyD,QAAQjB,MAAb,OACTS,SAASjD,EAAKyD,QAAQjB,MAAb,SACLxC,EAAKyD,QAAQjB,MAAb,MACAxC,EAAKyD,QAAQjB,MAAb,QACNG,QAAS3C,EAAKyD,QAAQd,QACtBzC,SACGF,EAAKyD,QAAQvD,UACZF,EAAKyD,QAAQvD,SAASxB,OAAS,GAC/BsB,EAAKyD,QAAQvD,SAASjB,KAAI,SAACoF,GACzB,MAAO,CACLlE,GAAIkE,EAAIjE,IACRvC,KAAMwG,EAAIxG,UAGhBmC,EAAKyD,QAAQvD,SACf8C,KACEhD,EAAKyD,QAAQT,MAAQhD,EAAKyD,QAAQT,KAAKtE,OAAS,EAC5CsB,EAAKyD,QAAQT,KACb,GAENvC,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OACHV,EAAKyD,QAAQhD,MACTT,EAAKyD,QAAQhD,MAAMgB,UAAYzB,EAAKyD,QAAQhD,MAAMgB,SAClD,IAENtB,GAAIH,EAAKyD,QAAQhD,MAAQT,EAAKyD,QAAQhD,MAAML,IAAM,IAEpDS,MACGb,EAAKyD,QAAQ5C,OACZb,EAAKyD,QAAQ5C,MAAMnC,OAAS,GAC5BsB,EAAKyD,QAAQ5C,MAAM5B,KAAI,SAAC6B,GACtB,MAAO,CACLX,GAAIW,EAAIV,KAAO,GACfvC,KAAMiD,EAAIjD,MAAQiD,EAAIjD,KACtB4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,GACFsC,OAAQ,Q,gCAILrB,G,4KASQrC,G,0EACTqC,EAAgBrC,IAElBA,GAAQA,EAAKyD,SAAWzD,EAAKyD,QAAQ,I,uBACvCrE,QAAQC,IAAI,aAAcW,EAAKyD,S,iCAE1BzD,EAAKyD,QAAQ,G,CAChBtD,GAAIH,EAAKyD,QAAQ,GAAGrD,KAAOJ,EAAKyD,QAAQ,GAAGtD,IAAM,GACjDtC,KAAMmC,EAAKyD,QAAQ,GAAG5F,MAAQ,GAC9Be,IAAKoB,EAAKyD,QAAQ,GAAG7E,IACrBsB,SAAUF,EAAKyD,QAAQ,GAAGvD,SAC1B8C,KACEhD,EAAKyD,QAAQ,GAAGT,MAAQhD,EAAKyD,QAAQ,GAAGT,KAAKtE,OAAS,EAClDsB,EAAKyD,QAAQ,GAAGT,KAChB,GAENvC,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OACHV,EAAKyD,QAAQ,GAAGhD,MACZT,EAAKyD,QAAQ,GAAGhD,MAAMgB,UAAYzB,EAAKyD,QAAQ,GAAGhD,MAAMgB,SACxD,IAENtB,GAAIH,EAAKyD,QAAQ,GAAGhD,MAAQT,EAAKyD,QAAQ,GAAGhD,MAAML,IAAM,IAE1DS,MACGb,EAAKyD,QAAQ,GAAG5C,OACfb,EAAKyD,QAAQ,GAAG5C,MAAMnC,OAAS,GAC/BsB,EAAKyD,QAAQ,GAAG5C,MAAM5B,KAAI,SAAC6B,GACzB,MAAO,CACLX,GAAIW,EAAIV,KAAO,GACfvC,KAAMiD,EAAIjD,MAAQiD,EAAIjD,KACtB4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIW,UAClCT,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,GACFsC,OAAQ,Q,gCAILrB,G,iLASarC,G,0EACdqC,EAAgBrC,GAElBA,IAAQA,EAAKyD,Q,wDAEVzD,EAAKyD,Q,CACRC,OAAQ,Q,gCAILrB,G,8KASUrC,G,0EACXqC,EAAgBrC,GAElBA,IAAQA,EAAKyD,Q,wDAEVzD,EAAKyD,Q,CACRC,OAAQ,Q,gCAILrB,G,oLASgBrC,G,0EACjBqC,EAAgBrC,GAElBA,IAAQA,EAAKyD,Q,wDAEVzD,EAAKyD,Q,CACRC,OAAQ,Q,gCAILrB,G,wLASoBrC,G,0EACrBqC,EAAgBrC,GAElBA,IAAQA,EAAKyD,Q,wDAEVzD,EAAKyD,Q,CACRC,OAAQ,Q,gCAILrB,G,2KASOrC,G,0EACRqC,EAAgBrC,GAElBA,IAAQA,EAAKyD,Q,wDAEVzD,EAAKyD,Q,CACRC,OAAQ,Q,gCAILrB,G,kLAScrC,G,0EACfqC,EAAgBrC,GAElBA,IAAQA,EAAKyD,Q,wDAEVzD,EAAKyD,Q,CACRC,OAAQ,Q,gCAILrB,G,8KASUrC,G,0EACXqC,EAAgBrC,GAElBA,IAAQA,EAAKyD,Q,wDAEVzD,EAAKyD,Q,CACRC,OAAQ,Q,gCAILrB,G,4KASQrC,G,0EACTqC,EAAgBrC,GAElBA,IAAQA,EAAKyD,Q,wDAEVzD,EAAKyD,Q,CACRC,OAAQ,Q,gCAILrB,G,6KASSrC,G,0EACVqC,EAAgBrC,GAElBA,IAAQA,EAAKyD,Q,wDAEVzD,EAAKyD,Q,CACRC,OAAQ,Q,gCAILrB,G,8KASUrC,G,0EACXqC,EAAgBrC,IAElBA,GAAQxB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAEhCsB,E,CACH0D,OAAQ,Q,gCAILrB,G,gLASYrC,G,0EACbqC,EAAgBrC,GAElBA,IAAQA,EAAKyD,Q,wDAEVzD,EAAKyD,Q,CACRC,OAAQ,Q,gCAILrB,G,gLASYrC,G,0EACbqC,EAAgBrC,GAElBA,IAAQA,EAAKyD,Q,wDAEVzD,EAAKyD,Q,CACRC,OAAQ,Q,gCAILrB,G,6KASSrC,G,0EACVqC,EAAgBrC,IAElBA,GAAQxB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAEhC2D,E,CACHqB,OAAQ,Q,gCAILrB,G,8KASUrC,G,0EACXqC,EAAgBrC,GAElBA,IAAQA,EAAKyD,Q,wDAEVzD,EAAKyD,Q,CACRC,OAAQ,Q,gCAILrB,G,+KASWrC,G,0EACZqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,+KASWrC,G,0EACZqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,oLASgBrC,G,0EACjBqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,4KASQrC,G,0EACTqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,8KASUrC,G,0EACXqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,8KASUrC,G,0EACXqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,4KASQrC,G,6EACTqC,EAAgBrC,IACDxB,OAAOC,KAAK4D,GAAe3D,OAAS,G,wDAElD2D,E,CACHlC,GAAIkC,EAAcjC,IAClBK,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OACH2B,EAAc5B,MACV4B,EAAc5B,MAAMgB,UAAYY,EAAc5B,MAAMgB,SACpD,IAENtB,GAAIkC,EAAc5B,MAAQ4B,EAAc5B,MAAML,IAAM,O,gCAInDiC,G,mLASerC,G,0EAChBqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,wDAEVxG,E,CACH0D,OAAQ,Q,gCAILrB,G,+KASWrC,G,0EACZqC,EAAgBrC,GAClBA,IAAQA,EAAKyD,Q,wDAEVzD,EAAKyD,Q,CAER5F,KAAMmC,EAAKyD,QAAQ5F,MAAQmC,EAAKyD,QAAQ5F,KACxCyC,YAAaN,EAAKyD,QAAQnD,aAAeN,EAAKyD,QAAQnD,YACtDoD,OAAQ,Q,gCAILrB,G,+KASWrC,G,0EACZqC,EAAgBrC,IAClBA,GAAQxB,OAAOC,KAAK4D,GAAe3D,OAAS,G,wDAEzCsB,E,CACH0D,OAAQ,Q,gCAILrB,G,wLASoBrC,G,0EACrBqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,4KASQrC,G,0EACTqC,EAAgBrC,GAClBA,IAAQA,EAAKyG,I,yCACR,CACL/C,OAAQ,O,gCAILrB,G,wKASIrC,G,0EACLqC,EAAgBrC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBlE,OAAQ,Q,gCAILrB,G,4KASQrC,G,0EACTqC,EAAgBrC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBlE,OAAQ,Q,gCAILrB,G,0KASMrC,G,0EACPqC,EAAgBrC,IAClBA,GAAQA,EAAK4H,UAAY5H,EAAK4H,U,wDAE3B5H,EAAK4H,SAAS,G,CACjBlE,OAAQ,Q,gCAILrB,G,sLASkBrC,G,0EACnBqC,EAAgBrC,IAClBA,GAAQA,GAAQA,EAAK,I,wDAElBA,EAAK,G,CACR0D,OAAQ,Q,gCAILrB,G,iLASatC,G,gFACdC,EAAOD,EAAQC,MAAQ,GAEvBqC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAAC0H,GACR,OAAO,eACFA,EADL,CAEExG,GAAIwG,EAASvG,KAAO,Q,kBAInBiC,G,uLASmBtC,G,6EACpBC,EAAOD,GAAW,KAEZvB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAEhCsB,E,CACHG,GAAIH,EAAKI,KAAO,GAChByH,MACE7H,EAAK6H,OAAS7H,EAAK6H,MAAMnJ,OAAS,EAC9BsB,EAAK6H,MAAM5I,KAAI,SAAC0H,GACd,OAAO,eACFA,EADL,CAEExG,GAAIwG,EAASvG,KAAO,GACpBC,IAAKsG,EAASvG,KAAO,GACrB0E,UAAW6B,EAAS7B,WAAa,GACjCC,SAAU4B,EAAS5B,UAAY,GAC/BlH,KAAM8I,EAAS7B,UAAY,IAAM6B,EAAS5B,SAC1CC,QAAS2B,EAAS3B,SAAW,GAC7BC,KAAM0B,EAAS1B,MAAQ,GACvBC,MAAOyB,EAASzB,OAAS,GACzBC,MAAOwB,EAASxB,OAAS,GACzB2B,QAASH,EAASG,SAAW,QAGjC,M,gCAEI,I,6KASE9G,G,6EACVqC,EAAgBrC,IACDxB,OAAOC,KAAK4D,GAAe3D,OAAS,G,wDAElD2D,E,CACHlC,GAAIkC,EAAcjC,KAAO,GACzBC,IAAKgC,EAAcjC,KAAO,GAC1B0E,UAAWzC,EAAcyC,WAAa,GACtCC,SAAU1C,EAAc0C,UAAY,GACpClH,KAAMwE,EAAcyC,UAAY,IAAMzC,EAAc0C,SACpDC,QAAS3C,EAAc2C,SAAW,GAClCC,KAAM5C,EAAc4C,MAAQ,GAC5BC,MAAO7C,EAAc6C,OAAS,GAC9BC,MAAO9C,EAAc8C,OAAS,GAC9B2B,QAASzE,EAAcyE,SAAW,M,gCAI/BzE,G,+KASWrC,G,6EACZqC,EAAgBrC,IACDxB,OAAOC,KAAK4D,GAAe3D,OAAS,G,wDAElD2D,E,CACHlC,GAAIkC,EAAcjC,KAAO,GACzBC,IAAKgC,EAAcjC,KAAO,M,gCAIvBiC,G,+KASWrC,G,0EACZqC,EAAgBrC,GAClBA,IAAQA,EAAK,G,wDAEVA,EAAK,G,CACR0D,OAAQ,Q,gCAILrB,G,iLASarC,G,0EACdqC,EAAgBrC,GAClBA,IAAQA,EAAK,G,wDAEVA,EAAK,G,CACRS,MAAOT,EAAK,GAAGS,MAAR,UACAC,EAAM,SADN,OAEDV,EAAK,GAAGS,MAAQT,EAAK,GAAGS,MAAME,UAAY,IAE5C,GACJ+C,OAAQ,Q,gCAILrB,G,oLASgBrC,G,0EACjBqC,EAAgBrC,GAClBA,IAAQA,EAAKyD,Q,wDAEVzD,EAAI,Q,CACPS,MAAOT,EAAI,QAAYS,MAAhB,UACAC,EAAM,SADN,OAEDV,EAAI,QAAYS,MAAQT,EAAI,QAAYS,MAAME,UAAY,IAE5D,GACJ+C,OAAQ,Q,gCAILrB,G,gLASYtC,G,gFAGbsC,GAFArC,EAAOD,GAAW,IAGjBrB,OAAS,GACdsB,EAAKf,KAAI,SAACiH,GACR,OAAO,eACFA,EADL,CAEE/F,GAAI+F,EAAI9F,KAAO,GACfC,IAAK6F,EAAI9F,KAAO,GAChBvC,KAAMqI,EAAIrI,MAAQqI,EAAIrI,U,kBAIrBwE,G,6KASStC,G,gFACVC,EAAOD,EAAQC,MAAQ,GAE7BZ,QAAQC,IAAI,cAAeW,GACrBqC,EACJrC,EAAKtB,OAAS,GACdsB,EAAKf,KAAI,SAACiH,GACR,OAAO,eACFA,EADL,CAEE/F,GAAI+F,EAAI9F,KAAO,GACfC,IAAK6F,EAAI9F,KAAO,GAChB0H,MAAO5B,EAAI4B,OAAS5B,EAAI4B,MACxB/B,OAAQG,EAAIH,QAAUG,EAAIH,Y,kBAIzB1D,G,2KASOrC,G,0EACRqC,EAAgBrC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBlE,OAAQ,Q,gCAILrB,G,6KAUSrC,G,0EACVqC,EAAgBrC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBlE,OAAQ,KACRjD,MAAOT,EAAK4H,SAAS,GAAGnH,MAAjB,UACAC,EAAM,SADN,OAEDV,EAAK4H,SAAS,GAAGnH,MAAQT,EAAK4H,SAAS,GAAGnH,MAAME,UAAY,IAE9D,M,gCAID0B,G,iLASarC,G,0EACdqC,EAAgBrC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBlE,OAAQ,Q,gCAILrB,G,4KAUQrC,G,0EACTqC,EAAgBrC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBlE,OAAQ,KACRjD,MAAOT,EAAK4H,SAAS,GAAGnH,MAAjB,UACAC,EAAM,SADN,OAEDV,EAAK4H,SAAS,GAAGnH,MAAQT,EAAK4H,SAAS,GAAGnH,MAAME,UAAY,IAE9D,M,gCAID0B,G,yKAUKrC,G,0EACNqC,EAAgBrC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBlE,OAAQ,KACRjD,MAAOT,EAAK4H,SAAS,GAAGnH,MAAjB,UACAC,EAAM,SADN,OAEDV,EAAK4H,SAAS,GAAGnH,MAAQT,EAAK4H,SAAS,GAAGnH,MAAME,UAAY,IAE9D,M,gCAGD0B,G,8KAUUrC,G,0EACXqC,EAAgBrC,GAClBA,IAAQA,EAAK,G,wDAEVA,EAAK,G,CACR0D,OAAQ,Q,gCAGLrB,G,iLAUarC,G,0EACdqC,EAAgBrC,GAClBA,IAAQA,EAAI,Q,wDAETA,EAAI,Q,CACP0D,OAAQ,Q,gCAGLrB,G,iLAUarC,G,0EACdqC,EAAgBrC,GAClBA,IAAQA,EAAKyD,Q,wDAEVzD,EAAKyD,Q,CACRC,OAAQ,Q,gCAGLrB,G,4KAUQrC,G,0EACTqC,EAAgBrC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBlE,OAAQ,Q,gCAGLrB,G,0KAUMrC,G,0EACPqC,EAAgBrC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBlE,OAAQ,Q,gCAGLrB,G,8KAUUrC,G,8EACXqC,EAAgBrC,E,kBACfqC,G,0KASMrC,G,0EACPqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,wDAEVxG,EAAK4H,SAAS,G,CACjBlE,OAAQ,Q,gCAILrB,G,+KASWrC,G,0EACZqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,oLASgBrC,G,0EACjBqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,iLASarC,G,0EACdqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,yKASKrC,G,0EACNqC,EAAgBrC,GAClBA,IAAQA,EAAK,G,wDAEVA,EAAK,G,CACR0D,OAAQ,Q,gCAILrB,G,0KASMrC,G,0EACPqC,EAAgBrC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBlE,OAAQ,KACRjD,MAAOT,EAAK4H,SAAS,GAAGnH,MAAjB,UACAC,EAAM,SADN,OAEDV,EAAK4H,SAAS,GAAGnH,MAAQT,EAAK4H,SAAS,GAAGnH,MAAME,UAAY,IAE9D,M,gCAID0B,G,8KAQUrC,G,0EACXqC,EAAgBrC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBlE,OAAQ,Q,gCAILrB,G,6KASSrC,G,0EACVqC,EAAgBrC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBlE,OAAQ,Q,gCAILrB,G,2KASOrC,G,0EACRqC,EAAgBrC,GAClBA,IAAQA,EAAK4H,S,wDAEV5H,EAAK4H,SAAS,G,CACjBlE,OAAQ,Q,gCAILrB,G,2KASOrC,G,0EACRqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,kLAScrC,G,0EACfqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,8KASUrC,G,0EACXqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,wKASIrC,G,0EACLqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,6KASSrC,G,0EACVqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,6KASSrC,G,0EACVqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,gLASYrC,G,0EACbqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,6KASSrC,G,0EACVqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,iLASarC,G,0EACdqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,6KASSrC,G,0EACVqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,gLASYrC,G,0EACbqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,8KASUrC,G,0EACXqC,EAAgBrC,GAClBA,IAAQA,EAAKwG,Q,yCACR,CACL9C,OAAQ,O,gCAILrB,G,8KASUtC,G,0EACXsC,EAAgBtC,GAElBA,EAAQC,K,wDAELD,EAAQC,O,gCAIRqC,G,4KASQtC,G,0EACTsC,EAAgBtC,GAElBA,EAAQC,K,wDAELD,EAAQC,O,gCAIRqC,G,oLASgBtC,G,0EACjBsC,EAAgBtC,GAElBA,EAAQC,K,wDAELD,EAAQC,O,gCAIRqC,G,oLASgBrC,G,qEACnBA,EAAI,Q,yCACC,CACL0D,OAAQ,O,gCAIL1D,G,+KASWA,G,qEACdA,EAAI,Q,wDAEDA,EAAI,Q,CACP0D,OAAQ,Q,gCAIL1D,G,uLASmBA,G,sEACtBA,GAAQxB,OAAOC,KAAKuB,GAAMtB,OAAS,G,wDAEhCsB,E,CACH0D,OAAQ,Q,gCAIL1D,G,qLASiBA,G,qEACpBA,EAAI,Q,wDAEDA,EAAI,Q,CACP0D,OAAQ,Q,gCAIL1D,G,uLASmBA,G,qEACtBA,EAAI,Q,yCACC,CACL0D,OAAQ,O,gCAIL1D,G,uLASmBD,G,0EACpBsC,EAAgBtC,GAElBA,EAAQC,K,wDAELD,EAAQC,O,gCAIRqC,G,gLASYrC,G,8EACbqC,E,eACDrC,E,CACHG,GAAIH,EAAKG,IAAMH,EAAKI,KAAO,GAC3BvC,KAAMmC,EAAKnC,MAAQmC,EAAKnC,KACxByC,YAAaN,EAAKM,aAAeN,EAAKM,YACtCC,aAAcP,EAAKO,cAAgB,EACnCK,KAAMZ,EAAKY,KAAL,UAAeF,EAAM,SAArB,OAAmCV,EAAKY,MAAS,GACvDtD,KACE0C,EAAKsB,YAAY5C,OAAS,GAC1BsB,EAAKsB,YAAY,IACjBtB,EAAKsB,YAAY,GAAjB,KACI,eACA,iBACN1C,IAAKoB,EAAKpB,KAAO,GACjB0C,YACEtB,EAAKsB,YAAY5C,OAAS,GAC1BsB,EAAKsB,YAAY,IACjBtB,EAAKsB,YAAY,GAAjB,KACItB,EAAKsB,YAAYrC,KAAI,SAACuC,GACpB,MAAO,CACLrB,GAAIqB,EAAOpB,KAAO,GAClBvC,KAAM2D,EAAO3D,MAAQ2D,EAAO3D,KAC5ByC,YAAakB,EAAOlB,aAAekB,EAAOlB,YAC1CG,MAAOe,EAAOf,MAAP,UACAC,EAAM,SADN,OACoBc,EAAOf,MAAMM,QACpC,OAGR,GACNN,MAAO,CACLA,MAAM,GAAD,OAAKC,EAAM,SAAX,OACHV,EAAKS,MAAQT,EAAKS,MAAMgB,UAAYzB,EAAKS,MAAMgB,SAAW,IAE5DtB,GAAIH,EAAKS,MAAQT,EAAKS,MAAML,IAAM,IAEpCS,MACGb,EAAKa,OACJb,EAAKa,MAAMnC,OAAS,GACpBsB,EAAKa,MAAM5B,KAAI,SAAC6B,GACd,MAAO,CACLX,GAAIW,EAAIV,KAAO,GACfvC,KAAMiD,EAAIjD,MAAQiD,EAAIjD,KACtB4C,MAAM,GAAD,OAAKC,EAAM,SAAX,OAAyBI,EAAIC,QAClCC,MAAOF,EAAIE,MACXC,MAAOH,EAAIG,MACXC,OAAQJ,EAAII,OACZC,IAAKL,EAAIK,IACTC,QAASN,EAAIM,aAGnB,K,kBAGGiB,G,6KAQSrC,G,8EAGVC,E,eACDD,G,kBAGEC,G,mLASeD,G,sEAGlBA,GAAQA,EAAKtB,OAAS,G,sDAEtBgF,OAAQ,MACL1D,EAAK,K,gCAEE,I,2KAUAD,G,0FAEPA,G,6KASSA,G,0FAGTA,G,6KASSC,G,4EAEV+H,EAAQ/H,EAAK+H,QAAS,G,wDAGrBA,E,CACH5H,GAAI4H,EAAM5H,IAAM4H,EAAM3H,IACtB4H,gBAAiBD,EAAMC,gBACvBnK,KACEkK,EAAMC,gBAAN,UACA,IACAD,EAAMC,gBAAN,SACFhD,QAAS+C,EAAMC,gBAAN,QACT/C,KAAM8C,EAAMC,gBAAN,KACNlB,QAASiB,EAAMC,gBAAN,QACT7C,MAAO4C,EAAMC,gBAAN,MACP9C,MAAO6C,EAAMC,gBAAN,MACPC,UAAWF,EAAME,WAAa,GAC9BvE,OAC0B,kBAAjBqE,EAAMrE,OACTqE,EAAMrE,OACNqE,EAAMrE,QAAUlF,OAAOC,KAAKsJ,EAAMrE,QAAQhF,OAAS,EACnDqJ,EAAMrE,OAAN,KACA,UACNwE,MAAOH,EAAMI,WACbC,eAAgBL,EAAMI,WACtBE,eAAgBN,EAAMM,eACtBC,aAAcP,EAAMM,gBAAkBN,EAAMM,eAAN,KACtCE,uBACER,EAAMM,gBAAkBN,EAAMM,eAAN,eAC1BG,oBACET,EAAMM,gBAAkBN,EAAMM,eAAN,YAC1B3D,SACEqD,EAAMrD,UAAYqD,EAAMrD,SAAShG,OAAS,EACtCqJ,EAAMrD,SAASzF,KAAI,SAACqD,GAClB,OAAO,eACFA,EADL,CAEEnC,GAAImC,EAAQlC,KAAO,GACnBvC,KAAMyE,EAAQzE,MAAQyE,EAAQzE,KAC9ByC,YAAagC,EAAQhC,aAAegC,EAAQhC,YAC5CG,MAAM,GAAD,OAAKC,EAAM,SAAX,OACF4B,EAAQ7B,OAAS6B,EAAQ7B,MAAR,WAA+B,IAEnD8B,aAAcD,EAAQE,OAASF,EAAQE,MAAR,QAC/BC,WAAYH,EAAQE,OAASF,EAAQE,MAAR,MAC7B5D,IAAK0D,EAAQ1D,IACb8D,KAAMJ,EAAQI,KACdxC,SAAUoC,EAAQpC,SAClByC,QAASL,EAAQK,QACjBC,KAAMN,EAAQM,KACdC,KAAMP,EAAQO,KACdC,MAAOR,EAAQQ,MACfC,MAAOT,EAAQS,MACfC,KAAMV,EAAQU,KACdR,MAAOF,EAAQE,MACfU,UACEZ,EAAQK,SAAWL,EAAQK,QAAQjE,OAAS,EACxC4D,EAAQK,QAAQ,GAAhB,OACAL,EAAQK,QAAQ,GAAhB,gBACA,EACNQ,QACEb,EAAQK,SAAWL,EAAQK,QAAQjE,OAAS,EACxC4D,EAAQK,QAAQ,GAAhB,OACAL,EAAQK,QAAQ,GAAhB,cACA,OAGV,GACN8F,aAAcV,EAAM/G,MACpB0H,cAAeX,EAAK,QAAL,cACfY,cAAeZ,EAAK,QAAL,OACfa,QAASb,EAAK,QACdc,WAAYd,EAAK,SAAeA,EAAK,SAAL,IAA2B,M,gCAEjD,I,wKASH/H,G,0FACJ,CACL0D,OAAQ,O,wKAUC1D,G,qEACPA,EAAI,I,yCACC,CACL0D,OAAQ,O,iCAIL,G,uKASG1D,G,qEACNA,EAAI,I,yCACC,CACL0D,OAAQ,O,iCAIL,G,mLASe1D,G,0FACfA,G,wLASoBA,G,8EAIrBC,E,eACDD,G,kBAGEC,G,2LASuBD,G,8EACxBC,E,eACDD,G,kBAGEC,G,yLASqBD,G,8EACtBC,E,eACDD,G,kBAGEC,G,iLASaD,G,8EACdC,E,eACDD,G,kBAGEC,G,+KASWD,G,8EACZC,E,eACDD,G,kBAGEC,G,qLASiBD,G,8EAIlBqC,E,eACDrC,G,kBAGEqC,G,2LASuBrC,G,8EAIxBqC,EAAgB,CACpBqB,OAAQ,M,kBAGHrB,G,gLASYrC,G,qEACfA,EAAI,Q,yCACC,CACL0D,OAAQ,O,gCAIL1D,G,oLASgBA,G,qEACnBA,EAAI,Q,yCACC,CACL0D,OAAQ,O,gCAGL1D,G,kLAScA,G,qEACjBA,EAAI,Q,yCACC,CACL0D,OAAQ,O,gCAGL1D,G,sLASkBD,G,kFACnBC,EAAOD,EAAQC,MAAQ,GACvB4D,EAAS7D,EAAQoC,KAAKC,KAmB5BC,EAAgB,CACdrC,KAlBEqC,EACDrC,EAAKtB,OAAS,GACbsB,EAAKf,KAAI,SAACQ,GACR,OAAO,eACFA,EADL,CAEEU,GAAIV,EAAKU,IAAMV,EAAKW,IACpB0I,eAAgBrJ,EAAKqJ,eACrBpF,OAAQjE,EAAKiE,OACbwE,MAAOzI,EAAK0I,WACZzD,SAAUjF,EAAKiF,SACf+D,aAAchJ,EAAKmD,KACnB8F,cAAejJ,EAAI,QAAJ,cACfoJ,WAAYpJ,EAAKkH,SAAL,UAGlB,GAIA/C,U,kBAGKvB,G,2KASOtC,G,gFACRC,EAAOD,EAAQC,MAAQ,GAG7BZ,QAAQC,IAAI,gBAAiBW,GAEzBqC,EACDrC,EAAKtB,OAAS,GACbsB,EAAKf,KAAI,SAACQ,GACR,OAAO,eACFA,EADL,CAEEU,GAAIV,EAAKU,IAAMV,EAAKW,IACpB4H,gBAAiBvI,EAAKqJ,eACtBb,UAAWxI,EAAKwI,WAAa,GAC7BpK,KACE4B,EAAKuI,iBACLvI,EAAKuI,gBAAL,WACAvI,EAAKuI,gBAAL,UAAoC,IAAMvI,EAAKuI,iBAC/CvI,EAAKuI,gBAAL,UACAvI,EAAKuI,gBAAL,SACFhD,QACEvF,EAAKuI,iBACLvI,EAAKuI,gBAAL,SACAvI,EAAKuI,gBAAL,QACF/C,KACExF,EAAKuI,iBACLvI,EAAKuI,gBAAL,MACAvI,EAAKuI,gBAAL,KACFtE,OACyB,kBAAhBjE,EAAKiE,OACRjE,EAAKiE,OACLjE,EAAKiE,QAAUlF,OAAOC,KAAKgB,EAAKiE,QAAQhF,OAAS,EACjDe,EAAKiE,OAAL,KACA,UACNwE,MAAOzI,EAAK0I,WACZzD,SAAUjF,EAAKiF,SACf+D,aAAchJ,EAAKuB,MACnB0H,cAAejJ,EAAI,SAAeA,EAAI,QAAJ,cAClCkJ,cAAelJ,EAAI,SAAeA,EAAI,QAAJ,OAClCmJ,QAASnJ,EAAI,QACboJ,WAAYpJ,EAAI,SAAeA,EAAI,SAAJ,IAA0B,GACzD6I,aACE7I,EAAK4I,gBAAkB7J,OAAOC,KAAKgB,EAAK4I,gBAAgB3J,OAAS,EAAjE,UACOe,EAAK4I,eAAL,MACH,SAGZ,G,kBAOKhG,G,iLASatC,G,gFACdC,EAAOD,EAAQC,MAAQ,GAG7BZ,QAAQC,IAAI,gBAAiBW,GAEzBqC,EACDrC,EAAKtB,OAAS,GACbsB,EAAKf,KAAI,SAACQ,GACR,OAAO,eACFA,EADL,CAEEU,GAAIV,EAAKU,IAAMV,EAAKW,IACpB4H,gBAAiBvI,EAAKqJ,eACtBb,UAAWxI,EAAKwI,WAAa,GAC7BpK,KACE4B,EAAKuI,iBACLvI,EAAKuI,gBAAL,WACAvI,EAAKuI,gBAAL,UAAoC,IAAMvI,EAAKuI,iBAC/CvI,EAAKuI,gBAAL,UACAvI,EAAKuI,gBAAL,SACFhD,QACEvF,EAAKuI,iBACLvI,EAAKuI,gBAAL,SACAvI,EAAKuI,gBAAL,QACF/C,KACExF,EAAKuI,iBACLvI,EAAKuI,gBAAL,MACAvI,EAAKuI,gBAAL,KACFtE,OACyB,kBAAhBjE,EAAKiE,OACRjE,EAAKiE,OACLjE,EAAKiE,QAAUlF,OAAOC,KAAKgB,EAAKiE,QAAQhF,OAAS,EACjDe,EAAKiE,OAAL,KACA,UACNwE,MAAOzI,EAAK0I,WACZzD,SAAUjF,EAAKiF,SACf+D,aAAchJ,EAAKuB,MACnB0H,cAAejJ,EAAI,SAAeA,EAAI,QAAJ,cAClCkJ,cAAelJ,EAAI,SAAeA,EAAI,QAAJ,OAClCmJ,QAASnJ,EAAI,QACboJ,WAAYpJ,EAAI,SAAeA,EAAI,SAAJ,IAA0B,SAG/D,G,kBAOK4C,G,sLASkBtC,G,gFACnBC,EAAOD,EAAQC,MAAQ,GAGzBqC,EACDrC,EAAKtB,OAAS,GACbsB,EAAKf,KAAI,SAACQ,GACR,MAAO,CACLU,GAAIV,EAAKU,IAAMV,EAAKW,IACpB6H,UAAWxI,EAAKwI,WAAa,GAC7BD,gBAAiBvI,EAAKqJ,eACtBpF,OACyB,kBAAhBjE,EAAKiE,OACRjE,EAAKiE,OACLjE,EAAKiE,QAAUlF,OAAOC,KAAKgB,EAAKiE,QAAQhF,OAAS,EACjDe,EAAKiE,OAAL,KACA,UACN7F,KACE4B,EAAKuI,iBACLvI,EAAKuI,gBAAL,WACAvI,EAAKuI,gBAAL,UAAoC,IAAMvI,EAAKuI,iBAC/CvI,EAAKuI,gBAAL,UACAvI,EAAKuI,gBAAL,SACFhD,QACEvF,EAAKuI,iBACLvI,EAAKuI,gBAAL,SACAvI,EAAKuI,gBAAL,QACF/C,KACExF,EAAKuI,iBACLvI,EAAKuI,gBAAL,MACAvI,EAAKuI,gBAAL,KACFE,MAAOzI,EAAK0I,WACZzD,SAAUjF,EAAKiF,SACf+D,aAAchJ,EAAKuB,MACnB0H,cAAejJ,EAAI,SAAeA,EAAI,QAAJ,cAClCkJ,cAAelJ,EAAI,SAAeA,EAAI,QAAJ,OAClCmJ,QAASnJ,EAAI,QACboJ,WAAYpJ,EAAI,SAAeA,EAAI,SAAJ,IAA0B,GACzD6I,aACE7I,EAAK4I,gBAAkB7J,OAAOC,KAAKgB,EAAK4I,gBAAgB3J,OAAS,EAAjE,UACOe,EAAK4I,eAAL,MACH,QAGZ,G,kBAOKhG,G,mLASerC,G,gFAElB+I,EAAgBC,EAAQtI,EAAM,QAAd,kBAEd2B,EACHrC,EAAKtB,OAAS,GACbsB,EAAKf,KAAI,SAACQ,GACR,OAAO,eACFsJ,EADL,CAEE5I,GAAIV,EAAKU,GACTuD,OAAQjE,EAAKiE,OACbwE,MAAOzI,EAAKyI,MACZe,WAAYxJ,EAAKwJ,WACjBR,aAAchJ,EAAKgJ,mBAGzB,G,kBAEKpG,G,yKAUKrC,G,gFACNkJ,EAAelJ,EAAKqD,OACR3E,OAAS,G,yCAClBwK,G,cAGH7F,EAAQ6F,EAAajK,KAAI,SAACQ,GAC9B,MAAO,CACL5B,KAAM4B,EAAK5B,MAAQ,GACnBsL,OAAQ1J,EAAKwC,MAAQ,O,kBAGlBoB,G,yKASKrD,G,0FACL,CACLiC,KAAMjC,EAAKiC,O,sKAUJjC,G,8EACHoJ,EACJpJ,EAAKa,OAASb,EAAKa,MAAMnC,OAAS,EAAlC,UACOgC,EAAM,SADb,OAC2BV,EAAKa,MAAM,GAAX,UACvB,G,kBACC,CACLuI,MACAC,OAAQrJ,EAAKqJ,S,yKAUHrJ,G,0FACL,CACLiC,KAAMjC,EAAKiC,O,0KAUAjC,G,gFACPsJ,EAAetJ,EAAKqD,OACR3E,OAAS,G,yCAClB,I,cAGH2E,EAAQiG,EAAarK,KAAI,SAACQ,GAC9B,MAAO,CACLwC,KAAMxC,EAAK5B,MAAQ4B,EAAKwC,KACxBoH,OAAQ5J,EAAK4J,W,kBAIVhG,G,wKASIrD,G,gFACLuJ,EAAcvJ,EAAKqD,OACR3E,OAAS,G,yCACjB6K,G,cAGHC,EAASD,EAAYtK,KAAI,SAACQ,GAC9B,MAAO,CACL4J,OAAQ5J,EAAK4J,OACbD,IAAI,GAAD,OAAK1I,EAAM,SAAX,OAAyBjB,EAAKoB,MAAM,GAAX,Y,kBAGzB2I,G,6KASSxJ,G,gFACVyJ,EAAmBzJ,EAAKqD,OACR3E,OAAS,G,yCACtB+K,G,cAGHD,EAASC,EAAiBxK,KAAI,SAACQ,GACnC,MAAO,CACL4J,OAAQ5J,EAAK4J,OACbD,IAAI,GAAD,OAAK1I,EAAM,SAAX,OAAyBjB,EAAKoB,MAAM,GAAX,Y,kBAGzB2I,G,yKASKxJ,G,0FACL,CACLnC,KAAMmC,EAAKnC,KACXoE,KAAMjC,EAAKiC,O,uKAUHjC,G,gFACJ0J,EAAgB1J,EAAKqD,OACR3E,OAAS,G,yCACnBgL,G,cAGHrG,EAAQqG,EAAczK,KAAI,SAACQ,GAC/B,MAAO,CACL4J,OAAQ5J,EAAK4J,OACbxL,KAAM4B,EAAK5B,MAAQ4B,EAAKwC,S,kBAGrBoB,G,yKASKrD,G,gFACN2J,EAAe3J,EAAKqD,OACR3E,OAAS,G,yCAClBiL,G,cAGHtG,EAAQsG,EAAa1K,KAAI,SAACQ,GAC9B,MAAO,CACL4J,OAAQ5J,EAAK4J,OACbxL,KAAM4B,EAAK5B,MAAQ4B,EAAKwC,S,kBAGrBoB,G,uGASH,W,wDAAWrD,G,gFACT4J,EAAe5J,EAAKqD,OACR3E,OAAS,G,yCAClBkL,G,cAGHvG,EAAQuG,EAAa3K,KAAI,SAACQ,GAC9B,MAAO,CACL4J,OAAQ5J,EAAK4J,OACbxL,KAAM4B,EAAK5B,MAAQ4B,EAAKwC,S,kBAGrBoB,G,mLASerD,G,0FACfA,G,2KASOA,G,qEACVA,IAAQA,EAAK,G,sDAEb0D,OAAQ,MACL1D,EAAK,G,CACRS,MAAOT,EAAK,GAAGS,MAAR,UACAC,EAAM,SADN,OAEDV,EAAK,GAAGS,MAAQT,EAAK,GAAGS,MAAME,UAAY,IAE5C,M,gCAGD,I,2KASOX,G,qEACVA,IAAQA,EAAK,G,sDAEb0D,OAAQ,MACL1D,EAAK,G,CACRwC,MACES,SAASjD,EAAK,GAAGwC,MAAR,OAA0BS,SAASjD,EAAK,GAAGwC,MAAR,SACxCxC,EAAK,GAAGwC,MAAR,MACAxC,EAAK,GAAGwC,MAAR,QACN/B,MAAOT,EAAK,GAAGS,MAAR,UACAC,EAAM,SADN,OAEDV,EAAK,GAAGS,MAAQT,EAAK,GAAGS,MAAME,UAAY,IAE5C,M,gCAGD,I,0GD3sJIkJ,E,WA3Eb,aAAe,oBACbC,KAAKC,QAAU,G,6FAaHtK,G,sGAAMuK,E,+BAAS,OAAQD,E,+BAAU,GACzCE,EAAMC,EAAOxJ,EAAOyJ,QAAQ1K,GAIhCqK,KAAKC,QAAL,eACKD,KAAKC,QADV,CAEEK,OAAQH,EAAIG,OACZC,YAAa,UACbC,QAAS,IAAIC,QAAJ,eACQ,SAAXP,GAAqB,CACzB,eAAgB,oBAFT,GAIHD,EAAQO,SAAR,eACCP,EAAQO,YAIA,SAAXN,EAAoB,CACtBlG,KAAqB,QAAfmG,EAAIG,OAAmBI,KAAKC,UAAUV,EAAQjG,MAAQ,MAC1D,CACAA,KAAqB,QAAfmG,EAAIG,OAAmBL,EAAQjG,KAAO,OAM5ClF,EAAMD,EAAcsL,EAAIrL,IAAKmL,EAAQlL,YAC3CO,QAAQC,IAAI,MAAM4K,EAAIrL,KACtBQ,QAAQC,IAAI,aAAayK,KAAKC,SAC9B3K,QAAQC,IAAI,SAAS2K,GAGjBtJ,EAAM,O,mBAKQgK,MAAMhK,EAAOiK,QAAU/L,EAAKkL,KAAKC,S,cAA7Ca,E,QAEIlH,QAAU,KAAOkH,EAAIlH,OAAS,K,kCACVkH,EAAG,O,WACA,WADzBC,E,QACcnH,O,uBACVmH,EAAcC,M,yBAGIhL,EAAUL,GAAMoL,G,eAAtCxI,E,yBACGA,G,yBAEWuI,EAAG,O,kNEtDvBG,EAAY,IAAIlB,EAEhBmB,EAAmB,SAACC,EAAeC,GACvC,OAAQA,EAAO5N,MACb,IAAK,aACH,OAAO,eACF2N,EADL,CAEEE,WAAW,EACXL,MAAO,CACLnN,SAAS,EACTmN,MAAO,IAETM,MAAM,IAEV,IAAK,gBACH,OAAO,eACFH,EADL,CAEEE,WAAW,EACXnL,KAAMkL,EAAOG,QACbD,MAAM,IAEV,IAAK,gBACH,OAAO,eACFH,EADL,CAEEE,WAAW,EACXL,MAAO,CACLnN,SAAS,EACTmN,MAAOI,EAAOG,QACdD,MAAM,KAGZ,QACE,MAAM,IAAIE,QA+CDC,EA3CE,WAMH,IALZC,EAKW,uDALkB,GAC7BC,EAIW,uCAHXhM,EAGW,uCAFXsK,EAEW,uCADXC,EACW,uCACL0B,EAAuB,CAC3BP,WAAW,EACXL,MAAO,CACLnN,SAAS,EACTmN,MAAO,IAET9K,KAAMyL,EACNL,MAAM,GARG,EAUeO,qBAAWX,EAAkBU,GAV5C,mBAUJT,EAVI,KAUGW,EAVH,KAkCX,OAtBAC,qBAAU,WACR,IAAIC,GAAY,EAgBhB,OAfe,uCAAG,4BAAAC,EAAA,6DAChBH,EAAS,CAAEtO,KAAM,eADD,kBAIGyN,EAAUiB,QAAQvM,EAAMuK,EAAQD,GAJnC,OAIV/J,EAJU,OAKT8L,GACHF,EAAS,CAAEtO,KAAM,gBAAiB+N,QAASrL,IAN/B,gDAST8L,GACHF,EAAS,CAAEtO,KAAM,gBAAiB+N,QAAQ,EAAD,KAV7B,yDAAH,oDAcfY,GACO,WACLH,GAAY,KAEbN,GAEIP,GC9EHF,EAAY,IAAIlB,EAEhBmB,EAAmB,SAACC,EAAeC,GACvC,OAAQA,EAAO5N,MACb,IAAK,aACH,OAAO,eACF2N,EADL,CAEEE,WAAW,EACXL,MAAO,CACLnN,SAAS,EACTmN,MAAO,IAETM,MAAM,IAEV,IAAK,gBACH,OAAO,eACFH,EADL,CAEEE,WAAW,EACXnL,KAAMkL,EAAOG,QACbD,MAAM,IAEV,IAAK,gBACH,OAAO,eACFH,EADL,CAEEE,WAAW,EACXL,MAAO,CACLnN,SAAS,EACTmN,MAAOI,EAAOG,SAEhBD,MAAM,IAEV,QACE,MAAM,IAAIE,QAsCDY,EAlCQ,SACrBT,EACAhM,EACAuK,GAEA,IAAM0B,EAAuB,CAC3BP,WAAW,EACXL,MAAO,CACLnN,SAAS,EACTmN,MAAO,IAET9K,KAAMyL,EACNL,MAAM,GAR4B,EAWVO,qBAAWX,EAAkBU,GAXnB,mBAW7BT,EAX6B,KAWtBW,EAXsB,KA2BpC,MAAO,CAACX,EAdQ,uCAAG,WAAOlB,GAAP,eAAAgC,EAAA,6DACjBH,EAAS,CAAEtO,KAAM,eADA,kBAKEyN,EAAUiB,QAAQvM,EAAMuK,GAAU,OAAQD,GAL5C,cAKX/J,EALW,OAMf4L,EAAS,CAAEtO,KAAM,gBAAiB+N,QAASrL,IAN5B,kBAORA,GAPQ,uCASf4L,EAAS,CAAEtO,KAAM,gBAAiB+N,QAAQ,EAAD,KAT1B,kBAURI,GAVQ,yDAAH,wDC7DZU,EAAmBC,MAAaC,MAAM,CAC3CC,SAAUF,MACR/O,MAAM,YACNF,SAAS,wBACTY,IAAI,EAAG,4CAETwO,SAAUH,MAAa/O,MAAM,YAAYF,SAAS,0BAG7CqP,EAAgB,CACrBF,SAAU,GACVC,SAAU,ICpBIE,ED2BG,SAAC,GAAgB,qBACKP,EAAe,GAAI,SADzB,mBAC1BQ,EAD0B,KACdC,EADc,KAG3BC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,SAAAf,EAAA,sEACYY,EAAiB,CAChD7I,KAAM,CACLwI,SAAUO,EAAOP,SACjBC,SAAUM,EAAON,YAJC,cAQpBO,EAAQC,eAAc,GARF,2CAAH,wDAcZC,EAA4B,SAACH,EAAQI,GAC1C,QAAKJ,EAAOP,UAAaO,EAAON,UAAaU,IAM9C,OACC,kBAAC,IAAD,CACCC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,EAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,KAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,yBAAKvP,MAAO,CACXwP,SAAU,QACVC,OAAQ,SAER,kBAAC5Q,EAAD,CACCI,MAAM,WACNE,MAAOsP,EAAOP,SACdzO,KAAK,WACLF,QAAU6P,EAAQlB,UAAYgB,EAAOhB,WAClCiB,GAAgBb,EAAW5B,MAAX,eAEnBlN,YAAc4P,EAAQlB,UAAYgB,EAAOhB,WACtCiB,GAAgBb,EAAW5B,MAAX,eACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,eAIlB,kBAACxQ,EAAD,CACCI,MAAM,WACNE,MAAOsP,EAAON,SACd1O,KAAK,WACLF,QAAU6P,EAAQjB,UAAYe,EAAOf,WAClCgB,GAAgBb,EAAW5B,MAAX,eACnBlN,YAAc4P,EAAQjB,UAAYe,EAAOf,WACtCgB,GAAgBb,EAAW5B,MAAX,eACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,eAIlB,kBAAC,IAAD,CACCnQ,KAAK,UACLyQ,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCpQ,SAAUsP,EAA0BH,EAAQI,GAC5Ce,QAAST,EACTnP,MAAO,IALR,e,mRE5GQ,YAAEsN,GAAF,OAAoB,SAAEuC,GAAF,OAAkB,WAAqC,IAAnChD,EAAkC,uDAA1BS,EAAcR,EAAY,uCAC/EgD,EAAUD,EAAY/C,EAAO5N,MACnC,OAAO4Q,EAAUA,EAASjD,EAAOC,GAAWD,K,qBCAjC,YAACrM,EAAKwL,EAAQtG,GAC5B,IAAMiG,EAAU,CACfK,SACAE,QAoBM,CACN6D,OAAQ,mBACR,eAAgB,oBArBhBrK,KAAiB,QAAXsG,EAAmBI,KAAKC,UAAU3G,GAAQ,MAGjD,OAAOsK,KAAgBxP,EAAKmL,GAASsE,MAAK,SAAAzD,GAAG,OAK9C,SAAqBlH,EAAQkH,GAC5B,OAAO,IAAI0D,SAAQ,SAACC,EAASC,GACxB9K,GAAU,KAAOA,EAAS,IAC7BkH,EAAIyD,MAAK,SAAAI,GAAQ,OAAIF,EAAQE,MAE7B7D,EAAIyD,MAAK,SAAAI,GAAQ,OAAID,EAAO,CAAE9K,SAAQ+K,mBATvCC,CAAY9D,EAAIlH,OAAQkH,EAAI+D,YCC9B,IAAMC,GAAcC,GAAc,GAAdA,CAAA,gBCXM,sBDYJ,SAAC5D,EAAOC,GAC1B,IAAM4D,EAAQ5D,EAAOG,QACrB,OAAO,aAAIyD,OEZFC,GAAY,SAACD,GAAD,MAAY,CACjCxR,KDHsB,qBCItB+N,QAASyD,ICIEZ,GHUAU,GICTI,GAAW,SAACC,EAAMC,GACtB,SAAKA,IAAeA,EAAW,QAC3BA,EAAW/P,SAAS,eACjB+P,EAAW/P,SAAS8P,KCwBIE,IAAUC,IAAnCC,OAAmCD,IAA3BE,QAA2BF,IAAlBG,OAAkBH,IAAVD,OACzBK,GAAYC,IAAZD,QA4MFE,GAAoB,CACxBX,UAAWY,EAAiBZ,WC3PfI,GDmQAS,aALS,SAAC3E,GAAD,MAAY,CAClC6D,MAAO7D,EAAM2D,eAIyBc,GAAzBE,EAnNQ,SAAC,GAAoB,IAAlBd,EAAiB,EAAjBA,MAAiB,EACPe,oBAAS,GADF,mBAClCC,EADkC,KACvBC,EADuB,KAOzC,OACE,kBAACZ,GAAD,CACEa,MAAO,IACP5R,MAAO,CACL6R,UAAW,6BACXC,OAAQ,QAEVC,aAAW,EACXL,UAAWA,EACXM,WAde,SAACN,GAElBC,EAAaD,IAaX7I,MAAM,SAEN,kBAAC,IAAD,CAAMoJ,YAAY,EAAMC,KAAK,UAC1BtB,GAAS,YAAaF,IACrB,kBAAC,IAAK7Q,KAAN,CAAWoC,IAAI,IAAIO,KAAM,kBAAC2P,EAAA,EAAD,OACvB,kBAAC,IAAD,CAAMC,GAAG,UAAT,cAIHxB,GAAS,eAAgBF,IACxB,kBAACU,GAAD,CACEnP,IAAI,OACJO,KAAM,kBAAC6P,EAAA,EAAD,MACNxP,MAAM,WAGN,kBAAC,IAAKhD,KAAN,CAAW2C,KAAM,kBAAC8P,EAAA,EAAD,MAAwBrQ,IAAI,KAC3C,kBAAC,IAAD,CAAMmQ,GAAG,kBAAT,aASF,kBAAC,IAAKvS,KAAN,CAAWoC,IAAI,IAAIO,KAAM,kBAAC+P,EAAA,EAAD,OACvB,kBAAC,IAAD,CAAMH,GAAG,cAAT,SAGF,kBAAC,IAAKvS,KAAN,CAAWoC,IAAI,IAAIO,KAAM,kBAACgQ,EAAA,EAAD,OACvB,kBAAC,IAAD,CAAMJ,GAAG,mBAAT,eAGF,kBAAC,IAAKvS,KAAN,CAAWoC,IAAI,IAAIO,KAAM,kBAACiQ,EAAA,EAAD,OACvB,kBAAC,IAAD,CAAML,GAAG,gBAAT,WAKN,kBAAChB,GAAD,CACEnP,IAAI,SACJO,KAAM,kBAAC6P,EAAA,EAAD,MACNxP,MAAM,WAGN,kBAAC,IAAKhD,KAAN,CAAW2C,KAAM,kBAAC8P,EAAA,EAAD,MAAwBrQ,IAAI,OAC3C,kBAAC,IAAD,CAAMmQ,GAAG,gBAAT,gBAGF,kBAAC,IAAKvS,KAAN,CAAW2C,KAAM,kBAACgQ,EAAA,EAAD,MAAiBvQ,IAAI,WACpC,kBAAC,IAAD,CAAMmQ,GAAG,yBAAT,oBAGF,kBAAC,IAAKvS,KAAN,CAAWoC,IAAI,MAAMO,KAAM,kBAAC+P,EAAA,EAAD,OACzB,kBAAC,IAAD,CAAMH,GAAG,oBAAT,iBAaJ,kBAAC,IAAKvS,KAAN,CAAWoC,IAAI,OAAOO,KAAM,kBAACkQ,EAAA,EAAD,OAC1B,kBAAC,IAAD,CAAMN,GAAG,iBAAT,WAGDxB,GAAS,cAAeF,IACvB,kBAAC,IAAK7Q,KAAN,CAAWoC,IAAI,KAAKO,KAAM,kBAACmQ,EAAA,EAAD,OACxB,kBAAC,IAAD,CAAMP,GAAG,mBAAT,aAIHxB,GAAS,WAAYF,IACpB,kBAACU,GAAD,CAASnP,IAAI,QAAQO,KAAM,kBAACoQ,GAAA,EAAD,MAAwB/P,MAAM,cACvD,kBAACuO,GAAD,CAASnP,IAAI,UAAUO,KAAM,kBAACoQ,GAAA,EAAD,MAAwB/P,MAAM,SACzD,kBAAC,IAAKhD,KAAN,CAAW2C,KAAM,kBAACqQ,GAAA,EAAD,MAA0B5Q,IAAI,MAC7C,kBAAC,IAAD,CAAMmQ,GAAG,gBAAT,WAEF,kBAAC,IAAKvS,KAAN,CAAW2C,KAAM,kBAACsQ,GAAA,EAAD,MAA0B7Q,IAAI,SAC7C,kBAAC,IAAD,CAAMmQ,GAAG,uBAAT,mBAIJ,kBAAC,IAAKvS,KAAN,CAAW2C,KAAM,kBAACsQ,GAAA,EAAD,MAA0B7Q,IAAI,MAC7C,kBAAC,IAAD,CAAMmQ,GAAG,kBAAT,YAGF,kBAAC,IAAKvS,KAAN,CAAWoC,IAAI,UACb,kBAAC,IAAD,CAAMmQ,GAAG,+BAAT,kBAKLxB,GAAS,WAAYF,IACpB,kBAACU,GAAD,CAASnP,IAAI,OAAOO,KAAM,kBAACuQ,GAAA,EAAD,MAA0BlQ,MAAM,UACxD,kBAAC,IAAKhD,KAAN,CAAWoC,IAAI,MACb,kBAAC,IAAD,CAAMmQ,GAAG,gBAAT,gBAEF,kBAAC,IAAKvS,KAAN,CAAWoC,IAAI,SACb,kBAAC,IAAD,CAAMmQ,GAAG,yBAAT,oBAEF,kBAAC,IAAKvS,KAAN,CAAWoC,IAAI,MACb,kBAAC,IAAD,CAAMmQ,GAAG,oBAAT,eAULxB,GAAS,YAAaF,IACrB,kBAACU,GAAD,CACEnP,IAAI,UACJO,KAAM,kBAACwQ,GAAA,EAAD,MACNnQ,MAAM,UAGN,kBAAC,IAAKhD,KAAN,CAAW2C,KAAM,kBAACwQ,GAAA,EAAD,MAAkB/Q,IAAI,UACrC,kBAAC,IAAD,CAAMmQ,GAAG,iBAAT,gBAGF,kBAAC,IAAKvS,KAAN,CAAW2C,KAAM,kBAACyQ,GAAA,EAAD,MAAoBhR,IAAI,eACvC,kBAAC,IAAD,CAAMmQ,GAAG,sBAAT,kBAKN,kBAAC,IAAKvS,KAAN,CAAWoC,IAAI,KAAKO,KAAM,kBAAC0Q,GAAA,EAAD,OACxB,kBAAC,IAAD,CAAMd,GAAG,mBAAT,aAEF,kBAAC,IAAKvS,KAAN,CAAWoC,IAAI,OAAOO,KAAM,kBAAC2Q,GAAA,EAAD,OAC1B,kBAAC,IAAD,CAAMf,GAAG,gBAAT,UAEF,kBAAC,IAAKvS,KAAN,CAAWoC,IAAI,MAAMO,KAAM,kBAAC4Q,GAAA,EAAD,OACzB,kBAAC,IAAD,CAAMhB,GAAG,cAAT,QAGDxB,GAAS,YAAaF,IACrB,kBAACU,GAAD,CAASnP,IAAI,OAAOO,KAAM,kBAAC6Q,GAAA,EAAD,MAAkBxQ,MAAM,SAChD,kBAAC,IAAKhD,KAAN,CAAWoC,IAAI,KAAKO,KAAM,kBAAC8Q,GAAA,EAAD,OACxB,kBAAC,IAAD,CAAMlB,GAAG,eAAT,gBAEF,kBAAC,IAAKvS,KAAN,CAAW2C,KAAM,kBAAC+Q,GAAA,EAAD,MAAqBtR,IAAI,MACxC,kBAAC,IAAD,CAAMmQ,GAAG,mBAAT,mBAKN,kBAAChB,GAAD,CAASnP,IAAI,OAAOO,KAAM,kBAACgR,GAAA,EAAD,MAAqB3Q,MAAM,YACnD,kBAAC,IAAKhD,KAAN,CAAW2C,KAAM,kBAAC0Q,GAAA,EAAD,MAAkBjR,IAAI,MACrC,kBAAC,IAAD,CAAMmQ,GAAG,4BAAT,qBAGF,kBAAC,IAAKvS,KAAN,CAAW2C,KAAM,kBAACiR,GAAA,EAAD,MAAqBxR,IAAI,SACxC,kBAAC,IAAD,CAAMmQ,GAAG,0BAAT,WAGF,kBAAC,IAAKvS,KAAN,CAAWoC,IAAI,KAAKO,KAAM,kBAACkR,GAAA,EAAD,OACxB,kBAAC,IAAD,CAAMtB,GAAG,8BAAT,eAGF,kBAAC,IAAKvS,KAAN,CAAW2C,KAAM,kBAACmR,GAAA,EAAD,MAAsB1R,IAAI,MACzC,kBAAC,IAAD,CAAMmQ,GAAG,0BAAT,iB,UE3OGwB,GCQQ,SAAC,GAGV,IAAD,IAFT/Q,aAES,MAFD,gBAEC,MADTgR,cACS,MADA,IACA,EACT,OACI,yBAAK7T,MAAO,CACR6T,OAAQA,EACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,CAAO9R,YAAaW,EAAOJ,MAAOmR,KAAMK,2B,yFCK5ChD,GAAWD,IAAXC,OCxBOA,GDsCS,SAACiD,GACvB,IAAMC,EAAUC,eADwB,EAGuBtG,EAC7D,GACA,sBALsC,mBAGjCuG,EAHiC,KAGRC,EAHQ,OAUpCxG,EAAe,GAAI,0BAViB,mBAStCyG,GATsC,aAcpCzG,EAAe,GAAI,6BAdiB,mBAatC0G,GAbsC,aAgBQ/C,mBAAS,IAhBjB,mBAgBjCgD,EAhBiC,KAgBfC,EAhBe,KAuBxCjH,qBAAU,YACgB,uCAAG,4BAAAE,EAAA,sEACP2G,EAA4B,CAC5C7T,WAAY,CACVC,OAAQ,CACNiU,SAAU,QACVC,eAAgB,KAChBC,YAAa,QANM,QACnBrI,EADmB,SAcvBkI,EAAoBlI,GAdG,2CAAH,qDAkBxBsI,KACC,IAEH,IAAMC,EAAwB,uCAAG,WAAOhT,GAAP,SAAA4L,EAAA,sEACzB4G,EAAkC,CACtC7O,KAAM,CACJ3D,GAAI,CAACA,MAHsB,2CAAH,sDAQxBiT,EAA2B,uCAAG,4BAAArH,EAAA,sEAChB6G,EAAqC,IADrB,QAC5BhI,EAD4B,SAGR,OAAfA,EAAIlH,SAlEc+C,EAmEH,wBAlE5B4M,KAAa7M,QAAQ,CACnB8M,QAAS7M,GAAO,kBAChBnG,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAgEzCV,EAAoB,KALY,iCA/DN,IAACrM,IA+DK,OAAH,qDASjCrH,QAAQC,IAAI,0BAA2BoT,GAEvC,IAAMgB,EAAW,CACf9M,SAAU,kBAAC2K,GAAA,EAAD,MACVvJ,MAAO,kBAACoJ,GAAA,EAAD,OAsHT,OAFA/R,QAAQC,IAAI,mBAAoBwT,GAG9B,kBAAC,GAAD,CACEzU,MAAO,CACLsV,WAAY,OACZzB,OAAQ,OACRC,QAAS,OACTC,eAAgB,gBAChBlC,UACE,qKACF0D,OAAQ,GACRC,WAAY,WACZxB,WAAY,SACZyB,aAAc,WAGhB,wBACE9F,QAAS,kBAAMwE,EAAQzQ,KAAK,WAC5B1D,MAAO,CACLoV,MAAO,UACPM,UAAW,OACXC,WAAY,QACZC,OAAQ,YANZ,SAYA,yBACE5V,MAAO,CACL6V,YAAa,UAGf,kBAAC,KAAD,CACEC,UAAU,aACVC,QArJK,WACX,OAAI1B,EAAwBtH,UAExB,yBACE/M,MAAO,CACL6T,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZgC,gBAAiB,OACjBC,QAAS,WAGX,kBAAC,KAAD,OAKJ5B,EAAwBrH,MACxByH,IACCA,EAAiB,GAGhB,yBACE7U,UAAU,gCACVI,MAAO,CACL6T,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZgC,gBAAiB,OACjBC,QAAS,WAGX,kBAAC,GAAD,CAAOpT,MAAM,2BAKjB,yBAAK7C,MAAO,GAAIJ,UAAU,iCACvByU,EAAwBrH,MAAQyH,EAAiB,IAChD,yBAAKzU,MAAO,IACV,yBACEA,MAAO,CACL4R,MAAO,OACPkC,QAAS,OACTC,eAAgB,iBAGlB,uBACEpE,QAAS,kBAAMqF,KACfhV,MAAO,CACLkW,UAAW,SACXF,gBAAiB,UACjBC,QAAS,OACTrE,MAAO,MACPuE,SAAU,QAEZC,KAAK,MATP,aAaA,uBACEzG,QAAS,kBAAMwE,EAAQzQ,KAAK,wBAC5B1D,MAAO,CACLkW,UAAW,SACXF,gBAAiB,OACjBC,QAAS,OACTrE,MAAO,MACPuE,SAAU,QAEZC,KAAK,MATP,aAiBL/B,EAAwBrH,MACvByH,EAAiB,IACjBA,EAAiB5T,KAAI,SAACQ,EAAMgV,GAE1B,OADArV,QAAQC,IAAI,mBAAoBI,GAE9B,yBACEsO,QAAS,WACPoF,EAAyB1T,EAAKW,KAC9BmS,EAAQzQ,KAAR,iBAAuBrC,EAAKnC,KAA5B,YAAoCmC,EAAKW,OAE3CpC,UACGyB,EAAKoC,KAEF,sCADA,kFAIN,0BAAM7D,UAAU,4CACbyV,EAAShU,EAAI,OAEhB,yBAAKzB,UAAU,4CACb,4BAAKyB,EAAKuC,SACV,4BAAKvC,EAAKwC,MACV,4BACGxC,EAAKuB,OACJ0T,IAAOjV,EAAKuB,OAAOgJ,OAAO,iCAiDtC,uBACE5L,MAAO,CACL6V,YAAa,QAEfO,KAAK,MACLxW,UAAU,6BAEV,kBAAC,KAAD,CACE2W,cAAe,IAEfC,SAAUC,KACVjQ,MACE6N,EAAwBrH,OAASyH,EAC7B,EACAA,GAAoBA,EAAiBnU,OACrCmU,EAAiBnU,OACjB,GAGN,0BACEN,MAAO,CACL2V,WAAY,OACZe,WAAY,IACZzW,aAAc,OACdmV,MAAO,UACPa,QAAS,WACTL,OAAQ,UACRC,YAAa,SAGf,kBAACc,GAAA,EAAD,UAMR,uBAAGP,KAAK,sBACN,0BACEpW,MAAO,CACL2V,WAAY,OACZe,WAAY,IACZzW,aAAc,OACdmV,MAAO,UACPa,QAAS,WACTL,OAAQ,YAGV,kBAACgB,GAAA,EAAD,MACA,0BACE5W,MAAO,CACL2V,WAAY,SAFhB,e,6BEvQJkB,GAAWC,KAAXD,OAEAE,GAAgBC,KAAhBD,YA0GFE,GAAS,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAMSC,GAAyB,CAClCpF,OAAQ,EACR7R,aAAc,MACdkW,SAAU,GACVtE,UAAW,oCAsPAsF,GAjOG,SAACjD,GAAkB,IAAD,EACgBzC,mBAAS,QADzB,mBACzB2F,EADyB,KACPC,EADO,OAEC5F,mBAAS,IAFV,mBAEzBtL,EAFyB,KAEfmR,EAFe,OAGH7F,mBAAS,IAHN,mBAGzBrL,EAHyB,KAGjBmR,EAHiB,OASoCzJ,EAAe,GAAI,iCATvD,mBASzB0J,EATyB,KASDC,EATC,OAYAhG,mBAAS,IAZT,mBAYzBiG,EAZyB,KAYfC,EAZe,KAchClK,qBAAU,YACyB,uCAAG,4BAAAE,EAAA,sEACG8J,EAAkC,CAC/DhX,WAAY,CACRC,OAAQ,CACJkX,WAAYR,EACZS,eAAgB1R,EAChB2R,aAAc1R,MANI,OACxB2R,EADwB,OAW/B/W,QAAQC,IAAI,iBAAiB8W,GAG1BA,GAEFJ,EAAYI,GAhBkB,2CAAH,qDAuB5BC,KAEL,CAACZ,EAAiBjR,EAAUC,IAG9BpF,QAAQC,IAAI,yBAAyBuW,GAKrC,IA6BMhT,EAAO,IAAIyT,KACXC,EAAYjB,GAAOzS,EAAK2T,YAsC9B,OACI,yBAAKvY,UAAU,iCACX,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,qCAII,uDAMR,yBAAKA,UAAU,uDACf,kBAAC,KAAD,CACIwY,UAAU,EACVC,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAAS3R,aAAc,MAAOmV,MAAO,WACrDlV,YAAY,gBACZoY,iBAAiB,WACjBjZ,SAxCC,SAACF,GACdkY,EAAoBlY,IAwCRC,aAAcgY,EACdmB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IA3F/F,CACZ,CACIvZ,MAAO,OACPM,KAAM,QAEV,CACIN,MAAO,OACPM,KAAM,QAEV,CACIN,MAAO,YACPM,KAAM,eAEV,CACIN,MAAO,aACPM,KAAM,gBAET,CACGN,MAAO,QACPM,KAAM,SAEV,CACIN,MAAO,OACPM,KAAM,SAuEcoB,KAAI,SAAC4X,GACT,OAAO,kBAAC5B,GAAD,CAAQ1X,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAM5D,yBAAKG,UAAU,gCACd4X,EAAuBzK,WACxB,oCACA,yBAAK/M,MAAO,CACRyP,OAAO,UACPqE,QAAQ,OACRC,eAAe,SACfC,WAAW,WAEb,kBAAC,KAAD,CAAM2E,KAAK,YAKRnB,EAAuBxK,QAAUwK,EAAuB5V,KAAKtB,OAAS,IACnE,yBAAKN,MAAO,CACR0V,UAAW,SAEX,kBAAC,KAAD,CAAOxT,YAAW,kBAAqBO,MAAOmR,KAAMK,0BAK5DuD,EAAuBxK,MAAQ0K,GAAYA,EAASpX,OAAS,GACzD,kBAAC,KAAD,CAAqBsR,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAWjS,KAAM8V,EAAUvB,SAAU,IACjC,8BACI,oCAAgBpU,GAAG,eAAe6W,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CAAOC,QAASjC,EAChBkC,cAzGQ,SAAC3P,GAEzB,MAAwB,QAArByN,EACQzN,EAAQ2M,IAAO3M,GAAOiC,OAAO,2BAA6BjC,EAEvC,SAArByN,EACEzN,EAAQ2M,IAAO3M,GAAOiC,OAAO,gBAAkBjC,EAE5B,UAArByN,GACEzN,EAAQsN,GAAOtN,EAAQ,GAE3BA,KAgGS,kBAAC,KAAD,CACI4P,YAAY,OACZ3H,MAAO,GACP4H,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI7D,QAAQ,EACR8D,aAAcxC,GACdyC,UAAW,SAACxa,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACI4Z,QAAQ,QACR5Z,KAAK,QACLP,KAAK,QACLoF,KAA2B,UAArB8S,EAA+Bc,EAAY,GACjD0B,KAAK,0BAQrB,yBAAKha,UAAU,kCACT,kBAACmX,GAAD,CACA8C,UAAU,EACVxa,SAlHsB,SAACqQ,GAClC,GAAGA,GAAKA,EAAE,GAAG,CACZ,IAAMvJ,EAAY,IAAI8R,KAAK3B,IAAO5G,EAAE,IAAI9D,UAClCxF,EAAU,IAAI6R,KAAK3B,IAAO5G,EAAE,IAAI9D,UAEtC0L,EAAanR,GAEboR,EAAWnR,KA4GDgS,UAAU,EACV0B,OAAO,YCnXjBjD,GAAWC,KAAXD,OAEAE,GAAgBC,KAAhBD,YA0GFE,GAAS,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAWSC,GAAyB,CAClCpF,OAAQ,EACR7R,aAAc,MACdkW,SAAU,GACVtE,UAAW,oCA0PAsF,GAtOG,SAACjD,GAAkB,IAAD,EACgBzC,mBAAS,QADzB,mBACzB2F,EADyB,KACPC,EADO,OAE0CvJ,EAAe,GAAI,sBAF7D,mBAEzBiM,EAFyB,KAEEC,EAFF,OAGEvI,mBAAS,IAHX,mBAGzBwI,EAHyB,KAGdC,EAHc,OAICzI,mBAAS,IAJV,mBAIzBtL,EAJyB,KAIfmR,EAJe,OAKH7F,mBAAS,IALN,mBAKzBrL,EALyB,KAKjBmR,EALiB,KAQhC9J,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMqM,EAAqC,CAC9DvZ,WAAY,CACRC,OAAQ,CACJkX,WAAYR,EACZS,eAAgB1R,EAChB2R,aAAc1R,MAPH,OAEjB+T,EAFiB,OAYxBnZ,QAAQC,IAAI,gBAAgBkZ,GAGzBA,GAEFD,EAAaC,GAjBU,2CAAH,qDAqBrBC,KAEL,CAAChD,EAAiBjR,EAAUC,IAG9BpF,QAAQC,IAAI,4BAA4B8Y,GAGxC,IAkCMvV,EAAO,IAAIyT,KACXC,EAAYjB,GAAOzS,EAAK2T,YA8C9B,OACI,yBAAKvY,UAAU,iCACX,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,sCAII,wDAKR,yBAAKA,UAAU,uDACf,kBAAC,KAAD,CACIwY,UAAU,EACVC,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAAS3R,aAAc,MAAOmV,MAAO,WACrDlV,YAAY,gBACZoY,iBAAiB,WACjBjZ,SArGC,SAACF,GACdkY,EAAoBlY,IAqGRC,aAAcgY,EACdmB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IAlG/F,CACZ,CACIvZ,MAAO,OACPM,KAAM,QAEV,CACIN,MAAO,OACPM,KAAM,QAEV,CACIN,MAAO,YACPM,KAAM,eAEV,CACIN,MAAO,aACPM,KAAM,gBAET,CACGN,MAAO,QACPM,KAAM,SAEV,CACIN,MAAO,OACPM,KAAM,SA8EcoB,KAAI,SAAC4X,GACT,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAM5D,yBAAKG,UAAU,gCACdma,EAA0BhN,WAC3B,oCAEA,yBAAK/M,MAAO,CACRyP,OAAO,UACPqE,QAAQ,OACRC,eAAe,SACfC,WAAW,WAEX,kBAAC,KAAD,CAAM2E,KAAK,YAIVoB,EAA0B/M,QAAU+M,EAA0BnY,KAAKtB,OAAS,IACzE,yBAAKN,MAAO,CACR0V,UAAW,SAEX,kBAAC,KAAD,CAAOxT,YAAW,oBAAuBO,MAAOmR,KAAMK,0BAK9D8F,EAA0B/M,MAAQiN,GAAaA,EAAU3Z,OAAS,GAC9D,kBAAC,KAAD,CAAqBsR,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAWjS,KAAMqY,EAAW9D,SAAU,IAClC,8BACI,oCAAgBpU,GAAG,eAAe6W,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACAC,QAASjC,EACTkC,cAlHQ,SAAC3P,GAEzB,MAAwB,QAArByN,EACQzN,EAAQ2M,IAAO3M,GAAOiC,OAAO,2BAA6BjC,EAEvC,SAArByN,EACEzN,EAAQ2M,IAAO3M,GAAOiC,OAAO,gBAAkBjC,EAE5B,UAArByN,EACEH,GAAOtN,EAAQ,GAEnBA,KAyGS,kBAAC,KAAD,CAEI4P,YAAY,OACZ3H,MAAO,GACP4H,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI7D,QAAQ,EACR8D,aAAcxC,GACdyC,UAAW,SAACxa,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACI4Z,QAAQ,QACR5Z,KAAK,QACL6E,KAA2B,UAArB8S,EAA+Bc,EAAY,GACjDhZ,KAAK,QACL0a,KAAK,0BAQrB,yBAAKha,UAAU,kCACT,kBAAC,GAAD,CACEia,UAAU,EACVxa,SAhHoB,SAACqQ,GACjC1O,QAAQC,IAAI,YAAYqV,IAAO5G,EAAE,IAAI9D,UACrC5K,QAAQC,IAAI,UAAUqV,IAAO5G,EAAE,IAAI9D,UACnC,IAAMzF,EAAY,IAAI8R,KAAK3B,IAAO5G,EAAE,IAAI9D,UAClCxF,EAAU,IAAI6R,KAAK3B,IAAO5G,EAAE,IAAI9D,UAEtC0L,EAAanR,GAEboR,EAAWnR,IAyGC0T,OAAQ,OACR1B,UAAU,O,UClYtBvB,GAAWC,KAAXD,OASFwD,GAAe,CACjB,CACIlb,MAAO,UACPM,KAAM,WAEV,CACIN,MAAO,SACPM,KAAM,UAEV,CACIN,MAAO,KACPM,KAAM,MACP,CACCN,MAAO,WACPM,KAAM,aAkCD6a,GAAS,CAClB,UACA,UACA,UACA,UACA,UACA,WAMSpD,GAAyB,CAClCpF,OAAQ,EACR7R,aAAc,MACdkW,SAAU,GACVtE,UAAW,oCAoLA0I,GA9KQ,SAACrG,GAAkB,IAAD,EACPzC,mBAAS4I,IADF,mBAC9B1O,EAD8B,aAEW8F,mBAAS,YAFpB,mBAE9B2F,EAF8B,KAEZC,EAFY,OAK+BvJ,EAAe,GAAI,iCALlD,mBAK9B0J,EAL8B,KAKNC,EALM,OAQShG,mBAAS,IARlB,mBAQ9B+I,EAR8B,KAQbC,EARa,KAUrChN,qBAAU,YACyB,uCAAG,sBAAAE,EAAA,sEACS8J,EAAkC,CACrEhX,WAAY,CACRC,OAAQ,CACJkX,WAAYR,MAJM,yDAAH,qDAU5BY,KAEL,CAACZ,IAIH3J,qBAAU,WACH+J,EAAuBxK,MAAQwK,EAAuB5V,MACrD6Y,EAAmBjD,EAAuB5V,QAEhD,CAAC4V,IAIHxW,QAAQC,IAAI,yBAAyBuW,GACrCxW,QAAQC,IAAI,kBAAkBuZ,GAG9B,IAIME,EAASC,KAAKC,GAAK,IA4BzB,OACI,yBAAKhb,UAAU,0CACX,yBAAKA,UAAU,iDACX,yBAAKA,UAAU,sDACX,2CAGA,4BACIwX,EADJ,gBAIJ,yBAAKxX,UAAU,4DACX,kBAAC,KAAD,CACIwY,UAAU,EACVC,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAAS3R,aAAc,MAAOmV,MAAO,WACrDlV,YAAY,cACZoY,iBAAiB,WACjBjZ,SAlDH,SAACF,GACdkY,EAAoBlY,IAkDJC,aAAc,UACdmZ,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IAG3F/M,EAAQ9K,KAAI,SAAC4X,GACT,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAMhE,yBAAKG,UAAU,gCAEd4X,EAAuBzK,WACxB,oCACI,yBAAK/M,MAAO,CACR8T,QAAQ,OACRC,eAAe,SACfC,WAAW,SACX0B,UAAU,QACVmF,aAAa,UAEjB,kBAAC,KAAD,CACAlC,KAAK,YAMJnB,EAAuBxK,QAAUwK,EAAuB5V,KAAKtB,OAAS,IACnE,yBAAKN,MAAO,CACR0V,UAAW,SAEX,kBAAC,KAAD,CAAOxT,YAAW,wBAAmBkV,GAAoB3U,MAAOmR,KAAMK,0BAKzEuD,EAAuBxK,MAAQwN,GAAmBA,EAAgBla,OAAS,GACxE,kBAAC,KAAD,CAAqBsR,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAUsC,SAAU,IAChB,kBAAC,KAAD,CACIP,QAAQ,EACR8D,aAAcxC,GACdyC,UAAW,SAACxa,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAGhD,kBAAC,KAAD,CACI4Z,QAAQ,QACRzX,KAAM4Y,EACNM,YAAa,IACbC,YAAa,GACbtb,KAAM2X,EACN4D,QAAS5D,EACT9S,KAAK,IACLrF,MAnGE,SAAC,GAUxB,IATHgc,EASE,EATFA,GACAC,EAQE,EARFA,GACAC,EAOE,EAPFA,SACAJ,EAME,EANFA,YACAD,EAKE,EALFA,YAIAM,GACE,EAJFjc,MAIE,EAHFM,KAGE,EAFF4W,MAEE,EADF+E,SAEMC,EAASN,EAA4C,IAA7BD,EAAcC,GACtCO,EAAIL,EAAKI,EAASV,KAAKY,KAAKJ,EAAWT,GAAU,GACjDc,EAAIN,EAAKG,EAASV,KAAKc,KAAKN,EAAWT,GAG7C,OADA1Z,QAAQC,IAAI,YAAYma,GAEpB,0BAAME,EAAGA,EAAGE,EAAGA,EAAG5B,KAAK,QAAQzD,SAAU,GAAIuF,iBAAiB,WAA9D,WACmB,IAAVN,GAAeO,QAAQ,GADhC,OAmFoBC,WAAW,GAEVpB,GAAmBA,EAAgB3Z,KAAI,SAACgb,EAAOxF,GAAR,OACpC,kBAAC,KAAD,CACIpU,IAAG,eAAUoU,GACbuD,KAAMU,GAAOjE,EAAQiE,GAAOha,iBASxD,yBAAKV,UAAU,kCACX,4BACI,8BACI,kBAACkc,GAAA,EAAD,OAFR,wB,UCnPRjF,GAAWC,KAAXD,OAEAkF,GAAwBC,KAAxBD,OAQF1B,IAR0B2B,KAAhBC,YAQK,CACjB,CACI9c,MAAO,WACPM,KAAM,YAET,CACGN,MAAO,UACPM,KAAM,aA8KCyc,GAxKI,SAAChI,GAEhB,IAAMC,EAAUC,eAFiB,EAKH3C,mBAAS4I,IALN,mBAK1B1O,EAL0B,aAMe8F,mBAAS,YANxB,mBAM1B2F,EAN0B,KAMRC,EANQ,OAOqBvJ,EAAe,GAAI,0BAPxC,mBAO1BqO,EAP0B,KAOTC,EAPS,KAUjC3O,qBAAU,YACkB,uCAAG,sBAAAE,EAAA,sEACUyO,EAA2B,CACxD3b,WAAY,CACRC,OAAQ,CACJ2b,UAAWjF,EACX/V,KAAM,WALK,yDAAH,qDAWrBib,KAEL,CAAClF,IAUH,OAHApW,QAAQC,IAAI,kBAAkBkb,GAK1B,yBAAKvc,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,0CAGA,mCACWwX,EADX,uBAIJ,yBAAKxX,UAAU,uDACX,kBAAC,KAAD,CACIwY,UAAU,EACVC,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAAS3R,aAAc,MAAOmV,MAAO,WACrDlV,YAAY,gBACZoY,iBAAiB,WACjBjZ,SA3BC,SAACF,GACdkY,EAAoBlY,IA2BRC,aAAcgY,EACdmB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IAG3F/M,EAAQ9K,KAAI,SAAC4X,GACT,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAMhE,yBAAKG,UAAU,gCACduc,EAAgBpP,WACb,oCACA,yBAAK/M,MAAO,CACR8T,QAAQ,OACRC,eAAe,SACfC,WAAW,WAEf,kBAAC,KAAD,CACA2E,KAAK,YAMAwD,EAAgBnP,QAAUmP,EAAgBva,KAAKtB,OAAS,IACrD,yBAAKN,MAAO,CACR0V,UAAW,SAEX,kBAAC,KAAD,CAAOxT,YAAW,wBAAmBkV,GAAoB3U,MAAOmR,KAAMK,0BAI7EkI,EAAgBnP,MAAQmP,EAAgBva,MAAQua,EAAgBva,KAAKtB,OAAS,GAC3E,oCACI,kBAAC,KAAD,CACAic,WAAY,CAAEC,gBAAiB,GAC3Bxc,MAAO,GAOP2Y,KAAK,QAEL8D,WAAYN,EAAgBva,KAC5B8a,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACHoV,MAAO,qBAQnB,kBAAC2G,GAAD,CACIlZ,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACJ,oCACG,uBAAG3G,KAAK,MACR,wBACKzG,QAAS,WACLwE,EAAQzQ,KAAR,iBAAuB0T,GAAoBA,EAAiBsB,cAA5D,YAA6EqE,EAAOtW,UAExFzG,MAAO,CACH0W,WAAY,IACZtB,MAAO,OACP4H,cAAc,YACdpH,OAAQ,YAEX/R,GAAI,UAAOuT,EAAP,kBAOrB,kBAAC2E,GAAD,CACIlZ,MAAM,QACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,4BAUlC,yBAAKA,UAAU,kCACX,4BACI,8BACI,kBAACkc,GAAA,EAAD,OAFR,wBCMGmB,GAlLE,SAAC/I,GAAkB,IAAD,EAC+CpG,EAAe,GAAI,8BADlE,mBACMoP,GADN,aAEiDpP,EAAe,GAAI,8BAFpE,mBAEOqP,GAFP,aAG0BrP,EAAe,GAAI,8BAH7C,mBAGNsP,GAHM,WA2ClC,OApCA3P,qBAAU,YAEc,uCAAG,sBAAAE,EAAA,sEACnByP,EAA6B,IADV,2CAAH,qDAIvBC,KACE,IAIH5P,qBAAU,YACiB,uCAAG,sBAAAE,EAAA,sEACtBuP,EAAsC,CAC3Cxc,OAAQ,YAFmB,2CAAH,qDAK1B4c,KACC,IAIF7P,qBAAU,YACkB,uCAAG,sBAAAE,EAAA,sEACvBwP,EAAuC,CAC5Czc,OAAQ,aAFoB,2CAAH,qDAK3B6c,KACC,IAQD,yBAAK3d,UAAU,qBA0Hd,yBAAKA,UAAU,2BACd,kBAAC,GAAD,MACA,kBAAC,GAAD,OAED,yBAAKA,UAAU,4BAEf,kBAAC4d,GAAD,MACA,kBAAC,GAAD,Q,sJC9MK1e,GAAaD,IAAbC,SAmDOF,GAjCF,SAAC,GAIK,IAJHK,EAIE,EAJFA,MAA2BE,GAIzB,EAJKD,KAIL,EAJWE,aAIX,EAJyBD,OACvCE,EAGc,EAHdA,SAAUC,EAGI,EAHJA,SAAUC,EAGN,EAHMA,QACnBC,EAEa,EAFbA,YAAaC,EAEA,EAFAA,KAEA,IAFMge,YAEN,MAFa,EAEb,EADbvd,EACa,EADbA,YAED,OACI,oCACKjB,GACG,wBAAIW,UAAU,mBACTX,GAIT,kBAAC,IAAKY,KAAN,CACIC,eAAgBP,EAAU,QAAU,GACpCQ,KAAMP,GAGN,kBAAC,GAAD,CACIF,SAAUA,EACVD,SAAUA,EACVF,MAAOA,EACPM,KAAMA,EACNG,UAAU,iBACV6d,KAAMA,EACNvd,YAAaA,O,4FCVzBwd,I,MAAYC,KAAZD,SACAE,GAAYC,KAAZD,QAKFE,GAA0B,SAAC5I,GAChCD,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,mBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BC7C9B2I,GD0EM,SAAC,GAUR,IATbC,EASY,EATZA,QACAC,EAQY,EARZA,WACAC,EAOY,EAPZA,YACAC,EAMY,EANZA,qBAGAC,GAGY,EALZC,wBAKY,EAJZC,oBAIY,EAHZF,UACAG,EAEY,EAFZA,iBAEY,+JAEoB9M,mBAAS,KAF7B,mBAEL+M,EAFK,KAEKC,EAFL,OAGsBhN,oBAAS,GAH/B,mBAGLiN,EAHK,KAGMC,EAHN,OAIgClN,mBAAS,IAJzC,mBAILmN,EAJK,KAIWC,EAJX,OAKkCpN,oBAAS,GAL3C,mBAKLqN,EALK,KAKYC,EALZ,OAMgDjR,EAAe,GAAI,0BANnE,mBAMLkR,EANK,KAMeC,EANf,OAOyDnR,EAAe,GAAI,wBAP5E,mBAOLoR,EAPK,KAOsBC,EAPtB,OAQkErR,EAAe,GAAI,0BARrF,mBAQ6BsR,GAR7B,aASgC3N,mBAAS,IATzC,mBASL4N,EATK,KASWC,EATX,OAUoB7N,oBAAS,GAV7B,mBAUL8N,EAVK,KAUKC,EAVL,KAaNC,GAAiC,uCAAG,WAAO1d,GAAP,iBAAA4L,EAAA,sEAEDyR,EAAkC,CACzE3e,WAAY,CACXE,aAAc,CACboB,SALsC,QAEnC2d,EAFmC,SAY6B,OAArCA,EAA0Bpa,SAC1DwY,GAAwB,kBAClB6B,EAAeN,EAAeO,QAAO,SAAAve,GAAI,OAAIA,EAAKU,KAAOA,KAC/Dud,EAAkBK,IAfsB,2CAAH,sDAmBjCE,GAAY,uCAAG,4BAAAlS,EAAA,sEACOwR,EAAgC,CAC1D1e,WAAY,CACXC,OAAQ,CACPmU,YAAa,IACbF,SAAU,QACRC,eAAgB,SAND,QACdkL,EADc,SAenBR,EAAkBQ,GAfC,2CAAH,qDAuBlBrS,qBAAU,WAEToS,OACE,IAKH,IAAME,GAAY,uCAAG,4BAAApS,EAAA,sDACdqS,EAAW,IAAIC,SACrBzB,EAASjb,SAAQ,SAAA2c,GAChBF,EAASG,OAAO,SAAUD,EAAMA,EAAKzgB,SAGtCkf,GAAa,GAWbyB,KAAQ,CACP5f,IAAI,GAAD,OAAK8B,EAAOiK,QAAZ,wBACHP,OAAQ,OACRqU,aAAa,EACbze,KAAMoe,EACNM,iBAAiB,EACjBlY,QAAS,WACRqW,EAAY,IACZE,GAAa,GACbkB,KACA3K,KAAQ9M,QAAQ,yBAEjBsE,MAAO,WACNiS,GAAa,GACbzJ,KAAQxI,MAAM,qBA/BI,2CAAH,qDA0DlBe,qBAAU,WACL2Q,GAAYA,EAAS9d,OAAS,GACjCue,EAAkB,aAAIT,MACrB,CAACA,IAGJ3Q,qBAAU,WACL8R,GAAYpB,GAAwBC,GACvCS,EAAkB,aAAIT,MAErB,CAACA,EAAUmB,IAId9R,qBAAU,cAKP,CAAC8Q,EAAkBgB,IAEtB,IAAMgB,GAAc,CAEnBC,UAAU,EACVC,SAAU,SAAAP,GACTzB,GAAY,SAAAiC,GACX,IAAMrK,EAAQmI,EAAS/c,QAAQye,GACzBS,EAAcnC,EAAShd,QAE7B,OADAmf,EAAYC,OAAOvK,EAAO,GACnBsK,MAITE,aAAc,SAAAX,GAKb,OAJAzB,GAAY,SAAAiC,GACX,IAAMI,EAAWJ,EACjB,MAAM,GAAN,oBAAWI,GAAX,CAAqBZ,QAEf,GAER1B,YAMKuC,GAA0B,SAACte,EAAOV,GAEvC,GAAI6c,GAAkBA,EAAete,OAAS,EAE7C,GADqBse,EAAeoC,MAAK,SAAAve,GAAK,OAAIA,EAAMV,KAAOA,KAK1D,CACJ,IAAMkf,EAAoBrC,EAAegB,QAAO,SAAAnd,GAAK,OAAIA,EAAMV,KAAOA,KACtE8c,EAAkBoC,QALlBpC,EAAkB,CAACpc,GAAF,oBAAWmc,KAC5BG,EAAmBtc,QAQpBoc,EAAkB,CAACpc,GAAF,oBAAWmc,KAC5BG,EAAmBtc,IAqBfye,GAAkB,uCAAG,WAAOzS,EAAQC,GAAf,qBAAAf,EAAA,sEACcsR,EAA8B,CACrEvZ,KAAM,CACL3D,GAAI0M,EAAO1M,GACXgB,IAAK0L,EAAO1L,IACZF,MAAO4L,EAAO5L,MACdse,QAAS1S,EAAO0S,QAChBre,OAAQ2L,EAAO3L,UAPS,QACpBse,EADoB,SAc4C,OAArCA,EAA0B9b,QAC1DwY,GAAwB,iBAMlBzH,EAJsB,WAC3B,OAAOgJ,EAAexe,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQgN,EAAO1M,IAG7Csf,GAGRC,EAAclhB,OAAOmhB,OAAO,GAAIlC,EAAehJ,GAAjCjW,OAAA,IAAAA,CAAA,GAA8CghB,IAC5DI,EAXqE,uBAW/CnC,EAAe7d,MAAM,EAAG6U,IAXuB,CAWfiL,GAXe,aAWCjC,EAAe7d,MAAM6U,EAAQ,KACzGiJ,EAAkBkC,KAvQUtM,OA2Q5BuM,EA1QFxM,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBA4Q3C1G,EAAQC,eAAc,GAnCI,iCA7OE,IAACuG,IA6OH,OAAH,wDAuClBwM,GAAkC,SAACjT,EAAQI,GAIhD,OAAKA,GAiCN,OACC,oCACC,kBAAC,KAAD,CACC7O,MAAO,CACN2hB,IAAK,QAEN9e,MAAM,gBACNmb,QAASA,EACT4D,KA1Lc,SAAClS,GAEbyO,GACHD,EAAYU,GACZY,GAAY,KAGZxe,QAAQC,IAAI,IACZD,QAAQC,IAAI,oBAAoB2d,EAAe,IAC/CV,EAAYU,GAAkBA,EAAe,GAAK,CAACA,EAAe,IAAM,IACxEY,GAAY,IAEbvB,GAAW,IA+KT4D,SA5KkB,SAACnS,GACrBuO,GAAW,IA4KTrM,MAAO,OACPkQ,UAAW,CACVrS,OAAQ,IACRwG,QAAS,KAEV8L,OAAO,QAEP,yBAAKniB,UAAU,6BACd,yBAAKA,UAAU,kCAEd,kBAAC,KAAD,CAAMoiB,iBAAiB,IAAI9iB,KAAK,OAAOyZ,KAAK,UAC3C,kBAACiF,GAAD,CAASqE,IAAI,mBAAmBhgB,IAAI,KACnC,yBAAKrC,UAAU,yCAEd,6BACC,kBAAC8d,GAAD,eACC9d,UAAU,qBACVsiB,SAAS,UACTliB,MAAO,CACNsV,WAAY,OACZrV,aAAc,QAEXsgB,IAEJ,uBAAG3gB,UAAU,wBACZ,kBAACuiB,GAAA,EAAD,OAED,uBAAGviB,UAAU,mBAAb,6CACA,uBAAGA,UAAU,mBAAb,2CASH,kBAAC,IAAD,CACCA,UAAU,6BACVV,KAAK,UACLyQ,QAASoQ,GACTzgB,SAA8B,IAApBkf,EAASle,OACnBsP,QAAS8O,EACTlc,KAAM,kBAAC4f,GAAA,EAAD,MACNpiB,MAAO,CACN0V,UAAW,OACXmF,aAAc,SAThB,WAgBD,kBAAC+C,GAAD,CAASqE,IAAI,gBAAgBhgB,IAAI,KAChC,oCACEmc,GAAYA,EAASiE,OAAS,GAC9B,oCACC,wBAAIziB,UAAU,mBAAd,kBAGA,yBAAKA,UAAU,4CACbsf,EAA0BlS,MACvBoR,EAAS9d,OAAS,GAClB8d,EAASvd,KAAI,SAAA4B,GACf,OACC,yBACCR,IAAKQ,EAAMV,GAEXnC,UAAU,oEAGV,yBACC+P,QAAS,WACRoR,GAAwBte,EAAOA,EAAMV,KAEtCnC,UAAU,yEACV,kBAAC0iB,GAAA,EAAD,OAMD,yBAAK1iB,UAAU,yDACd,yBAAKoL,IAAKvI,EAAMJ,MAAOU,IAAI,gBAapC,yBAAKnD,UAAU,qDAEbsf,EAA0BlS,MACvBqS,EAAe/e,OAAS,GACxB+e,EAAexe,KAAI,SAAA4B,GACrB,OACC,yBACCR,IAAKQ,EAAMV,GAEXnC,UAAU,2DA9MMmC,EA+MIU,EAAMV,GA9MjC6c,GAAkBA,EAAete,OAAS,GACxBse,EAAeoC,MAAK,SAAAve,GAAK,OAAIA,EAAMV,KAAOA,KA6MrB,yBAAKnC,UAAU,+DAC9C,kBAAC2iB,GAAA,EAAD,OAGQ,IAET,kBAAC,KAAD,CAAUxM,QAAS,kBAnJT,SAAC0J,EAAmC1d,EAAIgf,EAAyBte,GACtF,OAEE,kBAAC,IAAD,KACC,kBAAC,IAAK5C,KAAN,CACC8P,QAAS,kBAAMoR,EAAwBte,EAAOV,IAC9CE,IAAI,IAAIO,KAAM,kBAAC+f,GAAA,EAAD,OAFf,UASA,kBAAC,IAAK1iB,KAAN,CACC8P,QAAS,kBAAM8P,EAAkC1d,IACjDE,IAAI,IAAIO,KAAM,kBAACggB,GAAA,EAAD,CAAgBpN,MAAM,SAFrC,WAsIiCqN,CAAchD,GAAmChd,EAAMV,GAAIgf,GAAyBte,IAAQqT,UAAU,eAC9H,yBAAKlW,UAAU,+DACd,kBAAC8iB,GAAA,EAAD,QAUF,yBAAK/S,QAAS,WACboR,GAAwBte,EAAOA,EAAMV,KACnCiJ,IAAKvI,EAAMJ,MAAOU,IAAI,SAnOV,IAAChB,KA0OnBmd,EAA0BlS,QAAUqS,EAAe/e,OAAS,IAC5D,yBAAKN,MAAO,CACX8T,QAAS,OACTC,eAAgB,SAChBnC,MAAO,SAGP,kBAAC,GAAD,CAAO/O,MAAM,uCAYnB,yBAAKjD,UAAU,mCAEbkf,GACA,oCACC,kBAAC,IAAD,CACChQ,SAAU,SAACL,EAAQC,GAAT,OAAqBwS,GAAmBzS,EAAQC,IAC1DK,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAEP0Q,KAGL,gBACA7P,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kDAGA,yBAAK3P,UAAU,gDACd,yBAAKA,UAAU,+DACd,yBAAKoL,IAAK8T,EAAe,MAAW/b,IAAI,SAEzC,yBAAKnD,UAAU,8DACd,wBAAIA,UAAU,oBACZkf,EAAe,MAEjB,4BACC,kBAAC,KAAD,KACEA,EAAe,QAOlB,kBAAC,KAAD,CAEC6D,UAAW,kBAAMlD,GAAkCX,EAAe,KAClEjc,MAAM,qBAAgBkf,OAAO,MAAMa,WAAW,MAE9C,wBACChjB,UAAU,sBADX,yBAaH,kBAACf,EAAD,CACCI,MAAM,iBACNE,MAAOsP,EAAO1L,IACdtD,KAAK,MACLF,QAAU6P,EAAQrM,KAAOmM,EAAOnM,MAC7BoM,GAAgB6P,EAAmBtS,MAAnB,UAEnBlN,YAAc4P,EAAQrM,KAAOmM,EAAOnM,MACjCoM,GAAgB6P,EAAmBtS,MAAnB,UACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,UAKlB,kBAACxQ,EAAD,CACCI,MAAM,QACNE,MAAOsP,EAAO5L,MACdpD,KAAK,QACLF,QAAU6P,EAAQvM,OAASqM,EAAOrM,QAC/BsM,GAAgB6P,EAAmBtS,MAAnB,YAEnBlN,YAAc4P,EAAQvM,OAASqM,EAAOrM,QACnCsM,GAAgB6P,EAAmBtS,MAAnB,YACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,YAIlB,kBAACxQ,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAOzL,QACdvD,KAAK,QACLF,QAAU6P,EAAQpM,SAAWkM,EAAOlM,UACjCmM,GAAgB6P,EAAmBtS,MAAnB,cAEnBlN,YAAc4P,EAAQpM,SAAWkM,EAAOlM,UACrCmM,GAAgB6P,EAAmBtS,MAAnB,cACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,cAIlB,kBAAC,IAAD,CACCnQ,KAAK,UACLyQ,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCpQ,SAAUoiB,GAAgCjT,EAAQI,GAClDe,QAAST,EACTnP,MAAO,IALR,gBAwBJ8e,GACD,yBAAK9e,MAAO,CACX6T,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,wBAAIhU,MAAO,CACVkW,UAAW,SACXC,SAAU,OACVf,MAAO,UAHR,4C,wCE9fOyN,G,6MAvJbhW,MAAQ,CACNjI,KAAM,GACNke,cAAc,EACdC,WAAY,GACZC,gBAAiB,EACjBC,eAAgB,I,EAGlBC,YAAc,SAACC,GAAgB,IAAD,EACF,EAAKjP,OAE/BkP,EAH4B,EACpBA,SADoB,EACXxe,KACMgb,QAAO,SAAC9X,GAAD,OAASA,IAAQqb,O,EAIjDE,UAAY,WACV,EAAKC,SAAS,CAAER,cAAc,IAAQ,kBAAM,EAAKtK,MAAM+K,Y,EAGzDC,kBAAoB,SAAC9T,GACnB,EAAK4T,SAAS,CAAEP,WAAYrT,EAAEzE,OAAO9L,S,EAGvCskB,mBAAqB,WACnBziB,QAAQC,IAAI,qBAAsB,EAAKiT,OADd,IAEjB6O,EAAe,EAAKlW,MAApBkW,WAFiB,EAGD,EAAK7O,MAAvBtP,EAHmB,EAGnBA,KAAMwe,EAHa,EAGbA,QACRL,GAAcne,IAAsC,IAA9BA,EAAKnD,QAAQshB,KACrCne,EAAI,uBAAOA,GAAP,CAAame,KAEnBK,EAAQxe,GACR,EAAK0e,SAAS,CACZR,cAAc,EACdC,WAAY,M,EAIhBW,sBAAwB,SAAChU,GACvB,EAAK4T,SAAS,CAAEL,eAAgBvT,EAAEzE,OAAO9L,QACzC6B,QAAQC,IAAI,WAAYyO,EAAEzE,OAAO9L,Q,EAGnCwkB,uBAAyB,WACvB,EAAKL,UAAS,YAAwC,EAArCN,eAAqC,EAArBC,eAC/B,MAAO,CACLD,gBAAiB,EACjBC,eAAgB,OAIpB,IAAMW,EAAO,aAAO,EAAK1P,MAAMtP,MAC/Bgf,EAAQZ,gBAAkBC,eAC1B,EAAK/O,MAAMkP,QAAQQ,I,EAGrBC,aAAe,SAACrL,GACd,EAAKA,MAAQA,G,EAGfsL,iBAAmB,SAACtL,GAClB,EAAKuL,UAAYvL,G,yEAGT,IAAD,SAMH9M,KAAKmB,MAJPiW,EAFK,EAELA,aACAC,EAHK,EAGLA,WACAC,EAJK,EAILA,eACAC,EALK,EAKLA,eALK,EAOuBvX,KAAKwI,MAA3BhU,EAPD,EAOCA,YAAa0E,EAPd,EAOcA,KAErB,OACE,oCACGA,GACCA,EAAKtE,OAAS,GACdsE,EAAK/D,KAAI,SAACiH,EAAKuO,GACb,GAAI2M,IAAmB3M,EACrB,OACE,kBAAC,IAAD,CACE2N,IAAK,EAAKF,iBACV7hB,IAAK6F,EACL6Q,KAAK,QACLzY,YAAaA,EACbN,UAAU,YACVT,MAAO8jB,EACP5jB,SAAU,EAAKqkB,sBACfO,OAAQ,EAAKN,uBACbO,aAAc,EAAKP,yBAKzB,IAAMQ,EAAYrc,EAAIxH,OAAS,GAEzB8jB,EACJ,kBAAC,KAAD,CACExkB,UAAU,WACVqC,IAAK6F,EACLuc,UAAU,EACVC,QAAS,kBAAM,EAAKpB,YAAYpb,KAEhC,0BACEyc,cAAe,SAAC7U,GACA,IAAV2G,IACF,EAAKiN,SACH,CAAEN,eAAgB3M,EAAO4M,eAAgBnb,IACzC,WACE,EAAKic,UAAUR,WAGnB7T,EAAE8U,oBAILL,EAAS,UAAMrc,EAAItG,MAAM,EAAG,IAAnB,OAA8BsG,IAI9C,OAAOqc,EACL,kBAAC,KAAD,CAASthB,MAAOiF,EAAK7F,IAAK6F,GACvBsc,GAGHA,KAGLtB,GACC,kBAAC,IAAD,CACE9iB,MAAO,CACLyP,OAAQ,UAEVuU,IAAKtY,KAAKmY,aACV3kB,KAAK,OACLyZ,KAAK,QACL/Y,UAAU,YACVT,MAAO4jB,EACP1jB,SAAUqM,KAAK8X,kBACfS,OAAQvY,KAAK+X,mBACbS,aAAcxY,KAAK+X,sBAGrBX,GACA,kBAAC,KAAD,CAAKljB,UAAU,yBAAyB+P,QAASjE,KAAK2X,WACpD,kBAACoB,GAAA,EAAD,MADF,mB,GA/IaC,IAAMC,WC6BvB5W,GAAmBC,MAAaC,MAAM,CAC3CxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAGhEme,GAA0B,SAAC5I,GAChCD,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,mBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAKvCqM,GAAwB,SAACvM,GAC9BD,KAAavI,MAAM,CAClBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAQvChH,GAAgB,CACrB3O,KAAM,GACNmlB,OAAQ,GACR1iB,YAAa,GACb2iB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1iB,MAAO,GACPjC,IAAK,GACL6B,MAAO,GACP+iB,aAAc,MAGPvO,GAAWC,KAAXD,OAuxBOwO,GA7wBQ,SAAC,GAIa,IAHjCC,EAGgC,EAHhCA,sBACAC,EAEgC,EAFhCA,yBACAC,EACgC,EADhCA,aAAcC,EACkB,EADlBA,gBACdC,EAAgC,EAAhCA,mBAAgC,EAEgB5X,EAAe,GAAI,kBAFnC,mBAE5B6X,EAF4B,KAEVC,EAFU,OAG8B9X,EAAe,GAAI,qBAAsB,QAHvE,mBAGH+X,GAHG,aAKLpU,oBAAS,GALJ,mBAK5BuM,EAL4B,KAKnBC,EALmB,OAMHxM,oBAAS,GANN,mBAM5B2M,EAN4B,KAMlBF,EANkB,OAOazM,oBAAS,GAPtB,mBAOV6M,GAPU,aAQ2B7M,oBAAS,GARpC,mBAQ5BqU,EAR4B,KAQHC,EARG,OAS2BtU,oBAAS,GATpC,mBAS5B4M,EAT4B,aAUqB5M,oBAAS,IAV9B,mBAU5B0M,EAV4B,aAWa1M,mBAAS,KAXtB,mBAW5BuU,EAX4B,KAWVC,EAXU,OAYHxU,mBAAS,IAZN,mBAY5ByU,EAZ4B,KAYlBC,EAZkB,OAaY1U,oBAAS,GAbrB,mBAa5B2U,EAb4B,KAaXC,GAbW,QAcD5U,mBAAS,IAdR,qBAc5B6U,GAd4B,MAcjBC,GAdiB,SAeZ9U,mBAAS,IAfG,qBAe5B7M,GAf4B,MAevBwe,GAfuB,SAgBR3R,mBAAS,IAhBD,qBAgB5B+U,GAhB4B,MAgBrBC,GAhBqB,SAiBKhV,oBAAS,GAjBd,qCAkBQA,mBAAS,KAlBjB,qBAkBzBiV,GAlByB,MAkBXC,GAlBW,SAmBclV,mBAAS,IAnBvB,qCAsB4C3D,EAAe,GAAI,8BAtB/D,qBAsBI8Y,IAtBJ,gBAuB2C9Y,EAAe,GAAI,2BAvB9D,qBAuBK+Y,IAvBL,gBAwBmD/Y,EAAe,GAAI,+BAxBtE,qCAyB+CA,EAAe,GAAI,8BAzBlE,qBAyBOgZ,IAzBP,gBA0B+ChZ,EAAe,GAAI,6BA1BlE,qBA0BOiZ,IA1BP,aA6BhCtZ,qBAAU,WACN,GAAIiY,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,EAAG,CAE3E,IAAM8K,EAASsa,EAAmBjjB,MAC9BukB,EAAY,GAMhB,GAJI5b,GAAUA,EAAO9K,OAAS,IAC7B0mB,EAAY5b,GAGTsa,EAAmBrjB,OAASqjB,EAAmBrjB,MAAnB,GAChB+I,EAAO4V,MAAK,SAAA3f,GAAI,OAAIA,EAAKU,KAAO2jB,EAAmBrjB,MAAnB,QAE9C2kB,EAAS,CAAItB,EAAmBrjB,OAAvB,oBAAiC2kB,KAG3CL,GAAgBjB,EAAmBrjB,MAAnB,IAIX6b,EAAY8I,MAEd,CAACtB,IAGJjY,qBAAU,WAEF2Q,GAAYA,EAAS,IAAMA,EAAS9d,OAAS,GAEzComB,KAAiBtI,EAAS,GAAGrc,KAC7B4kB,GAAgBvI,EAAS,GAAGrc,IAC5BklB,GAAyB7I,EAAS,OAK3C,CAACA,IAGJ,IAAM8I,GAAuB,uCAAG,WAAMnlB,GAAN,SAAA4L,EAAA,sEACtBmZ,GAAqC,CACvCrmB,WAAY,CACRE,aAAc,CACVwmB,QAASplB,EACTqlB,WAAY,WACZ3gB,OAAQif,EAAmB3jB,OANX,2CAAH,sDAcvBklB,GAAwB,uCAAG,WAAMxkB,GAAN,eAAAkL,EAAA,sEAEFoZ,GAAqC,CAC5DtmB,WAAY,CACRE,aAAc,CACVwmB,QAAS1kB,EAAMV,GACfqlB,WAAY,WACZ3gB,OAAQif,EAAmB3jB,OAPV,QAEvBslB,EAFuB,SAce,OAAxBA,EAAa/hB,OAC7BwY,GAAwB,qBAGxB2D,GAAsB,mDAlBG,2CAAH,sDAuC3BjT,GAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAf,EAAA,yDAEd2Z,EAAYlJ,EAAWA,EAASvd,KAAI,SAAA4B,GACzC,OAAOA,EAAMV,MACT,IAECie,EAAW,IAAIC,UAEZE,OAAO,OAAQ1R,EAAOhP,KAAK8nB,QACpCvH,EAASG,OAAO,cAAe1R,EAAOvM,aACtC8d,EAASG,OAAO,QAAS/T,KAAKC,UAAUib,IACxCtH,EAASG,OAAO,QAASuG,IAAgBY,EAAU,GAAKA,EAAU,GAAK,IACvEtH,EAASG,OAAO,SAAU6F,GAC1BhG,EAASG,OAAO,OAAQmG,IAGxBtlB,QAAQC,IAAI,qBAAqBykB,KAE7BA,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,GAlB/C,oBAmBbknB,EAAyB,GAE5BF,GAAaA,EAAUhnB,OAAS,GAClCgnB,EAAU/jB,SAAQ,SAAA4jB,GACdzB,GAAsBA,EAAkB,QACtCA,EAAkB,MAAU3kB,SAASomB,IACxCK,EAAuB9jB,KAAKyjB,SAOnBK,EAAuB,IAAMA,EAAuBlnB,OAAS,GAhCvD,kCAiCAsmB,GAAqC,CACvCnmB,WAAY,CACRE,aAAc,CACVymB,WAAY,WACZ3gB,OAAQif,EAAmB3jB,KAGnC2D,KAAM,CACFjD,MAAO+kB,KAzCT,qCA8CDA,EAAuB,IAAMA,EAAuBlnB,OAAS,GA9C5D,kCA+CAumB,GAAmC,CACrCpmB,WAAY,CACRE,aAAc,CACVwmB,QAASK,EAAuB,GAAGzlB,GACnCqlB,WAAY,WACZ3gB,OAAQif,EAAmB3jB,OApDjC,yBA4DS6jB,EAAuB,CAC1CnlB,WAAY,CACRE,aAAc,CACVoB,GAAI2jB,EAAmB3jB,KAG/B2D,KAAM,CACFjG,KAAMgP,EAAOhP,KAAK8nB,OAClBrlB,YAAauM,EAAOvM,YACpBkjB,aAAc3W,EAAO2W,aACrB3iB,MAAO6kB,EACPjlB,MAAOqkB,IAAgBY,EAAU,GAAKA,EAAU,GAAK,GACrDllB,OAAQ4jB,EACRxjB,KAAM8jB,GACNxB,UAAWrW,EAAOqW,UAClBE,gBAAiBvW,EAAOuW,gBACxBE,SAAWtgB,IAAQA,GAAKtE,OAAS,EAAKsE,GAAKtD,KAAK,KAAO,GACvDmmB,GAAI,CACA3C,UAAWrW,EAAOsW,YACjCC,gBAAiBvW,EAAOwW,kBACxBC,SAAWsB,IAAUA,GAAOlmB,OAAS,EAAKkmB,GAAOllB,KAAK,KAAO,GAC9C7B,KAAMgP,EAAOmW,OAAO2C,OACpBrlB,YAAauM,EAAOoW,kBAlFlB,SA4Dd6C,EA5Dc,SAwF4B,OAA1BA,EAAepiB,QACpCwY,GAAwB,qBACxByH,GAAyB,GAEzBE,EAAgB,CAAC,aAChB1jB,GAAI2lB,EAAc,KAAW,GAC7BzlB,IAAKylB,EAAc,KAAW,GAC9BjoB,KAAMioB,EAAc,MAAY,GAChCxlB,YAAawlB,EAAc,aAAmB,GAC9CrlB,MAAOqlB,EAAc,OAAa,IAE/BA,IAPW,oBAQVlC,KAML9W,EAAQiZ,YAERzJ,EAAY,IACZyI,GAAgB,IAChBV,EAAoB,IACpBF,GAA2B,GAC3BI,EAAY,KAGZ1E,KAMD/S,EAAQC,eAAc,GAzHF,4CAAH,wDAmIZiZ,GAAiB,SAACC,GACvB9B,EAA2B8B,IAItBC,GAAe,SAACpY,GACrB0T,GAAQ,IACRqD,GAAU,IACVlB,GAAyB,GACzBgB,GAAa,IACbI,GAAgB,IAChBV,EAAoB,IACpB/H,GAAY,IASP6J,GAAiB,SAAC5oB,GACvB8mB,EAAoB9mB,IAYpB,SAAS0hB,GAAaX,GA6CtB,MA5CiC,eAAdA,EAAKhhB,MAAuC,cAAdghB,EAAKhhB,MAErDgW,KAAQxI,MAAM,qCAEAwT,EAAKvH,KAAO,KAAO,KAAO,GAExCzD,KAAQxI,MAAM,gCAdhB,SAAmBhK,EAAKslB,GACvB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAc3lB,GAerB4lB,CAAUpI,GAAM,SAAAgG,GACfC,EAAYD,GACZK,GAAarG,GACG,uCAAI,8BAAAvS,EAAA,6DACbqS,EAAW,IAAIC,UACZE,OAAO,OAAOD,GAFJ,SAMD2F,EAA8B,CAC/CplB,WAAY,CACXE,aAAc,CACboB,GAAI2jB,EAAmB3jB,KAIzB2D,KAAMsa,IAbY,QAMbxT,EANa,SAiBM,OAAfA,EAAIlH,OACbwY,GAAwB,0BAGxB2D,GAAsB,uDArBJ,2CAAJ,oDA2BhB8G,GACAlC,IAAoB,OAGd,EAKR5Y,qBAAU,WAEH,GAAGiY,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,EAAE,CAChE,IAAMkoB,EAAU9C,EAAmBljB,MAAQkjB,EAAmBljB,KAEvE2jB,EAAYqC,MAGT,IAGL,IAAMC,GACL,6BACErC,EAAkB,kBAACsC,GAAA,EAAD,MAAsB,kBAACjE,GAAA,EAAD,MACzC,yBAAK7kB,UAAU,mBAAf,WAyBF,OAlBG6N,qBAAU,WAEN,GAAGiY,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,EAAE,CAChE,IAAM4kB,EAAWQ,EAAmBR,UAAYQ,EAAmBR,SAAStkB,MAAM,KAElFI,QAAQC,IAAI,gBAAgBikB,GAE5B,IAAMC,EAAaO,EAAmB+B,IAAM/B,EAAmB+B,GAAnB,UAAqC/B,EAAmB+B,GAAnB,SAAkC7mB,MAAM,KACzHwiB,GAAQ8B,GAAY,IACpBuB,GAAUtB,GAAc,OAGjC,IAGFnkB,QAAQC,IAAI,uBAAuB2D,IAIlC,kBAAC,IAAD,CACCkK,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAEKA,GAFL,GAGOsX,EAHP,GAISA,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,GAAK,CACrEykB,YAAaW,EAAkB,IAC5BA,EAAkB,GAAOZ,WACzBY,EAAkB,GAAOZ,UAC5BG,kBAAmBS,EAAkB,IAAWA,EAAkB,GAAOV,iBAAmBU,EAAkB,GAAOV,gBACrHJ,OAAQc,EAAkB,IAAUA,EAAkB,GAAOjmB,MAAQimB,EAAkB,GAAOjmB,KAC9FolB,cAAea,EAAkB,IAAUA,EAAkB,GAAOxjB,aAAewjB,EAAkB,GAAOxjB,gBAKhI,gBACA+M,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OAEAC,GANA,EAKAN,QALA,EAMAM,cACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACAoZ,gBAAgB,EACf3oB,MAAO,CACN2hB,IAAK,QAEN9e,MAAM,gBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACdhZ,QAAST,EACT0Z,SAAU,WAGX,kBAAChqB,EAAD,CACCI,MAAM,OACNE,MAAOsP,EAAOhP,KACdC,YAAa,kBACbD,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgBwW,EAAiBjZ,MAAjB,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgBwW,EAAiBjZ,MAAjB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,wFACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgBwW,EAAiBjZ,MAAjB,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgBwW,EAAiBjZ,MAAjB,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAIlB,kBAAC,GAAD,CACCpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACdhC,YAAa,mBACbT,KAAK,cACLF,QAAU6P,EAAQlN,aAAegN,EAAOhN,cACrCiN,GAAgBwW,EAAiBjZ,MAAjB,kBAEnBlN,YAAc4P,EAAQlN,aAAegN,EAAOhN,cACzCiN,GAAgBwW,EAAiBjZ,MAAjB,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,iBACNE,MAAOsP,EAAOoW,cACd3kB,YAAa,yEACbT,KAAK,gBACLF,QAAU6P,EAAQyV,eAAiB3V,EAAO2V,gBACvC1V,GAAgBwW,EAAiBjZ,MAAjB,oBAEnBlN,YAAc4P,EAAQyV,eAAiB3V,EAAO2V,gBAC3C1V,GAAgBwW,EAAiBjZ,MAAjB,oBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBAMhB,kBAACxQ,EAAD,CACCI,MAAM,gBACNE,MAAOsP,EAAO2W,aACd1lB,YAAa,QACbD,KAAK,eACLP,KAAK,SACLK,QAAU6P,EAAQgW,cAAgBlW,EAAOkW,eACtCjW,GAAgBwW,EAAiBjZ,MAAjB,mBAEnBlN,YAAc4P,EAAQgW,cAAgBlW,EAAOkW,eAC1CjW,GAAgBwW,EAAiBjZ,MAAjB,mBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,mBAIpB,yBAAKrP,MAAO,CACX0V,UAAW,UAGZ,yBAAK9V,UAAU,wBACd,kBAAC,KAAD,CACCioB,QAAS/B,EACTgD,gBAAc,EAACzpB,SAAUuoB,KAC1B,yBAAKhoB,UAAU,sCACd,kDACA,wBAAIA,UAAU,6BAAd,0CAIAkmB,GACD,oCACC,wBAAIlmB,UAAU,mBAAd,mBACA,kBAAC,KAAD,CACCyY,YAAU,EACVrY,MAAO,CAAE4R,MAAO,KAChB1R,YAAY,2BACZoY,iBAAiB,WACjBjZ,SAAU0oB,GAIVxP,aAAc,SAACC,EAAOC,GAAR,OAAwBA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IAEnG8M,EAAallB,OAAS,GAAKklB,EAAa3kB,KAAI,SAAAiB,GAC5C,OAAO,kBAAC,GAAD,CAAQ3C,MAAO2C,EAASC,IAAKD,EAASrC,WASjD,yBACCO,MAAO,CACN0V,UAAW,UAKb,yBAAK9V,UAAU,iCACd,wBAAIA,UAAU,mBAAd,SACA,kBAAC,KAAD,CACCkW,UAAU,OAAOjT,MAAO,oCACxB,uBAAGuT,KAAK,OACP,kBAAC2S,GAAA,EAAD,SAKH,kBAAC,KAAD,CACC/oB,MAAO,CACNC,aAAc,OAEfR,KAAK,SACLyiB,SAAS,eACTtiB,UAAU,kBACVopB,gBAAgB,EAChBnI,aAAcA,GACdL,UAAU,GAET0F,EAAW,yBAAKlb,IAAKkb,EAAUnjB,IAAI,SAAS/C,MAAO,CAAE4R,MAAO,UAAe6W,IAG5E,yBAAKzoB,MAAO,CACX0V,UAAU,UAGZ,yBAAK9V,UAAU,gCAEtBI,MAAO,CACN6a,aAAc,SAGf,wBAAIjb,UAAU,mBAAd,WAQA,yBAAKA,UAAU,gCAEd8lB,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,GAC/D,oCACE8d,GAEAA,EAAS9d,OAAS,GAAK8d,EAASvd,KAAI,SAAC4B,EAAO4T,GAC3C,OACC,yBAAKzW,UAAU,sCACd,yBACCA,UAAU,kDACV+P,QAAS,WACRgX,GAAgBlkB,EAAMV,IACtBklB,GAAyBxkB,KAG1B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGnC,0BACC4M,QAAS,YA1fe,SAAC5N,GAExB,IAAMknB,EAAY7K,GAAYA,EAASwB,QAAO,SAAAnd,GAC1C,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GAqfZC,CAAmBzmB,EAAMV,IACzBmlB,GAAwBzkB,EAAMV,KAG/BnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,QAIAoE,KAAiBjkB,EAAMV,KAInB2kB,IAA0B,IAAVrQ,IAHpB,0BAAMzW,UAAU,4CACf,kBAAC2iB,GAAA,EAAD,WAcN,kBAAC,KAAD,CACC1f,MAAO,iBAEP,yBACC8M,QAAS,WACRsO,GAAW,IAEZre,UAAU,4CAIV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACf,kBAAC6kB,GAAA,EAAD,WAUE,kBAAC5lB,EAAD,CACCI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACnC3V,GAAgBwW,EAAiBjZ,MAAjB,gBAEnBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACvC3V,GAAgBwW,EAAiBjZ,MAAjB,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACxQ,EAAD,CACCI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACrC5V,GAAgBwW,EAAiBjZ,MAAjB,kBAEnBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cACzC5V,GAAgBwW,EAAiBjZ,MAAjB,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACzC7V,GAAgBwW,EAAiBjZ,MAAjB,sBAEnBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC7C7V,GAAgBwW,EAAiBjZ,MAAjB,sBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC3C9V,GAAgBwW,EAAiBjZ,MAAjB,wBAEnBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC/C9V,GAAgBwW,EAAiBjZ,MAAjB,wBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASA,GACTxe,KAAMA,KAGN,yBAAK5E,MAAO,CACX0V,UAAU,UAGX,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASqD,GACT7hB,KAAM4hB,MAKP,kBAAC,GAAD,CAECvI,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,S,UCn1BvBiL,GAAY,SAAClV,GAAD,OACjB,kBAAC,KAAD,eACCmV,MAAO,GACPzX,MAAO,KACPiC,OAAQ,IACRyV,QAAQ,eACRtT,gBAAgB,UAChBuT,gBAAgB,WACZrV,GAEJ,0BAAMoH,EAAE,KAAKE,EAAE,MAAMgO,GAAG,IAAIC,GAAG,IAAI7X,MAAM,KAAKiC,OAAO,OACrD,0BAAMyH,EAAE,KAAKE,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACvD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,MAAMiC,OAAO,OACzD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACxD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,MAAMiC,OAAO,OACzD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACxD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACxD,0BAAMyH,EAAE,OAAOE,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACzD,0BAAMyH,EAAE,KAAKE,EAAE,MAAMgO,GAAG,IAAIC,GAAG,IAAI7X,MAAM,KAAKiC,OAAO,OACrD,0BAAMyH,EAAE,KAAKE,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACvD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,MAAMiC,OAAO,OACzD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACxD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,MAAMiC,OAAO,OACzD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACxD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACxD,4BAAQoH,GAAG,OAAOC,GAAG,MAAMwO,EAAE,OAC7B,0BAAMpO,EAAE,KAAKE,EAAE,MAAMgO,GAAG,IAAIC,GAAG,IAAI7X,MAAM,KAAKiC,OAAO,OACrD,0BAAMyH,EAAE,KAAKE,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACvD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,MAAMiC,OAAO,OACzD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACxD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,MAAMiC,OAAO,OACzD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACxD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACxD,4BAAQoH,GAAG,OAAOC,GAAG,MAAMwO,EAAE,OAC7B,0BAAMpO,EAAE,KAAKE,EAAE,MAAMgO,GAAG,IAAIC,GAAG,IAAI7X,MAAM,KAAKiC,OAAO,OACrD,0BAAMyH,EAAE,KAAKE,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACvD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,MAAMiC,OAAO,OACzD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACxD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,MAAMiC,OAAO,OACzD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACxD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACxD,4BAAQoH,GAAG,OAAOC,GAAG,MAAMwO,EAAE,OAC7B,0BAAMpO,EAAE,KAAKE,EAAE,MAAMgO,GAAG,IAAIC,GAAG,IAAI7X,MAAM,KAAKiC,OAAO,OACrD,0BAAMyH,EAAE,KAAKE,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACvD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,MAAMiC,OAAO,OACzD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACxD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,MAAMiC,OAAO,OACzD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACxD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACxD,4BAAQoH,GAAG,OAAOC,GAAG,MAAMwO,EAAE,OAC7B,0BAAMpO,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,MAAMiC,OAAO,OACzD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,MAAMiC,OAAO,OACzD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,MAAMiC,OAAO,OACzD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,MAAMiC,OAAO,OACzD,0BAAMyH,EAAE,MAAME,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,MAAMiC,OAAO,OACzD,0BAAMyH,EAAE,OAAOE,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACzD,0BAAMyH,EAAE,OAAOE,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACzD,0BAAMyH,EAAE,OAAOE,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACzD,0BAAMyH,EAAE,OAAOE,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACzD,0BAAMyH,EAAE,OAAOE,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACzD,0BAAMyH,EAAE,OAAOE,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACzD,0BAAMyH,EAAE,OAAOE,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACzD,0BAAMyH,EAAE,OAAOE,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACzD,0BAAMyH,EAAE,OAAOE,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACzD,0BAAMyH,EAAE,OAAOE,EAAE,MAAMgO,GAAG,KAAKC,GAAG,KAAK7X,MAAM,KAAKiC,OAAO,OACzD,4BAAQoH,GAAG,KAAKC,GAAG,KAAKwO,EAAE,OAC1B,0BAAMpO,EAAE,KAAKE,EAAE,KAAKgO,GAAG,IAAIC,GAAG,IAAI7X,MAAM,MAAMiC,OAAO,OACrD,4BAAQoH,GAAG,OAAOC,GAAG,KAAKwO,EAAE,OAC5B,0BAAMpO,EAAE,OAAOE,EAAE,KAAKgO,GAAG,IAAIC,GAAG,IAAI7X,MAAM,MAAMiC,OAAO,MACvD,4BAAQoH,GAAG,KAAKC,GAAG,KAAKwO,EAAE,SAI5BN,GAAUO,SAAW,CACpBlqB,KAAM,eACNmqB,OAAQ,UACR1nB,YAAa,sBACb2nB,SAAU,aAGIT,UClDPrN,GAAwBC,KAAxBD,OACA+N,IADwB9N,KAAhBC,YACGpd,IAAXirB,QAyBFC,GAAU,SAAC,GAA6D,IAA3DnoB,EAA0D,EAA1DA,KAAM6jB,EAAoD,EAApDA,gBAAiBtR,EAAmC,EAAnCA,QAASzD,EAA0B,EAA1BA,MAA0B,EAC7Ce,oBAAS,GADoC,mBACpEuM,EADoE,KAC3DC,EAD2D,OAEjBxM,oBAAS,GAFQ,mBAEpEuY,EAFoE,KAE7CC,EAF6C,OAGlBnc,EACvD,GACA,kBALyE,mBAG/Coc,GAH+C,WASrEC,EAAoB,uCAAG,WAAOpoB,GAAP,iBAAA4L,EAAA,sEACKuc,EAA0B,CACxDzpB,WAAY,CACVE,aAAc,CACZoB,SAJqB,QACrBqoB,EADqB,SAU2B,OAA7BA,EAAkB9kB,SA1Cd4P,EA2CH,mBA1C5BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,mBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAwCnCiV,EAAkBzoB,EAAKge,QAAO,SAACve,GAAD,OAAUA,EAAKU,KAAOA,KAC1D0jB,EAAgB4E,IAbS,iCAhCC,IAACnV,IAgCF,OAAH,sDAiB1B,OACE,oCACE,kBAAC,KAAD,CAMEyD,KAAK,QAEL8D,WAAY7a,GAEZ,kBAAC,GAAD,CACEiB,MAAM,GACNga,UAAU,QACV5a,IAAI,KACJ2P,MAAO,OACPhS,UAAU,uBACVkd,OAAQ,SAACza,EAAO0a,GAAR,OACN,oCACE,yBACE/R,IAAK3I,EACLsN,QAAS,WACPwE,EAAQzQ,KAAR,0BAAgCqZ,EAAOhb,KAEvCkoB,EAAyBlN,IAE3Bha,IAAI,YACJ/C,MAAO,CACL6T,OAAQ,OACRjC,MAAO,OACP0Y,UAAW,UACXrqB,aAAc,MACd2V,OAAQ,iBAMlB,kBAAC,GAAD,CACE/S,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,0BAAgCqZ,EAAOhb,KAEvCkoB,EAAyBlN,IAE3B/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAMT,kBAAC,GAAD,CACEhB,MAAM,gBACNga,UAAU,WACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,UACNga,UAAU,eACV5a,IAAI,KACJrC,UAAU,yBA8BXgR,GAAS,gBAAiBF,IACzB,kBAAC,GAAD,CACE9Q,UAAU,uBACViD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGvC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,iBAC7B,0BACEjD,UAAU,WACV+P,QAAS,WACPsO,GAAW,GACXgM,EAAyBlN,KAG3B,kBAACyN,GAAA,EAAD,SAIN,kBAAC,KAAD,CACE7H,UAAW,kBAAMwH,EAAqBpN,EAAOhb,KAC7Cc,MAAM,qBACNkf,OAAO,MACPa,WAAW,MAEX,0BAAMhjB,UAAU,4BACd,kBAAC4iB,GAAA,EAAD,aASbwH,GACC,kBAACS,GAAD,CACE/E,mBAAoBsE,EACpBvE,gBAAiBA,EACjBD,aAAc5jB,EACd2jB,yBAA0BtH,EAC1BqH,sBAAuBtH,MAyIlBxM,gBALS,SAAC3E,GAAD,MAAY,CAClC6D,MAAO7D,EAAM2D,eAIyB,KAAzBgB,CAA+BkZ,cA7HzB,SAAC,GAA+B,IAA7BvW,EAA4B,EAA5BA,QAASzD,EAAmB,EAAnBA,MAAmB,EACD5C,EAC/C,GACA,gBAHgD,mBAC3C6c,EAD2C,KAC5BC,EAD4B,OAKVnZ,mBAAS,IALC,mBAK3C+T,EAL2C,KAK7BC,EAL6B,KAOlDhY,qBAAU,YACW,uCAAG,4BAAAE,EAAA,sEACKid,EAAwB,CAC/CnqB,WAAY,CACVC,OAAQ,CACNmqB,eAAe,EACfC,mBAAmB,EACnBnW,SAAU,QACVC,eAAgB,SAPF,OACdmW,EADc,OAYpBtF,EAAgBsF,GAZI,2CAAH,qDAcnBC,KACC,IAvB+C,MAyBQvZ,oBAAS,GAzBjB,mBAyB3C6T,EAzB2C,KAyBpBC,EAzBoB,KA8ClD,OACE,oCAIE,yBAAK3lB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,cAEA,kBAACkqB,GAAD,CACEmB,aAAa,EACbrrB,UAAU,qBACVM,YAAY,sBACZb,SAAU,SAACqQ,GAAD,OAvBD,SAACvQ,GACpB,GAAIwrB,EAAc/oB,KAAKtB,OAAS,EAAG,CACjC,IAAM+pB,EAAkBM,EAAc/oB,KAAKge,QAAO,SAACve,GAAD,OAChDA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBAEzC+M,EAAgB4E,IAkBSa,CAAaxb,EAAEzE,OAAO9L,WAI1CyR,GAAS,gBAAiBF,IACzB,kBAAC,IAAD,CAEE9Q,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJ1C,YAWJ,yBAAK3lB,UAAU,uCASf,yBAAKA,UAAU,uCACZ+qB,EAAc3d,MAAQwY,EAAallB,OAAS,GAC3C,kBAAC,GAAD,CACEoQ,MAAOA,EACPyD,QAASA,EACTsR,gBAAiBA,EACjB7jB,KAAM4jB,IAGTmF,EAAc5d,WAAa,kBAACoe,GAAD,MAE3BR,EAAc3d,QAAUwY,EAAallB,OAAS,IAC7C,yBACEN,MAAO,CACL0V,UAAW,SAGb,kBAAC,GAAD,CAAO7S,MAAM,yBAMpB8nB,EAAc3d,MACb,kBAAC,GAAD,CACEsY,sBAAuBA,EACvBC,yBAA0BA,EAC1BC,aAAcA,EACdC,gBAAiBA,SCnUrB1X,GAAmBC,MAAaC,MAAM,IAatCwT,GAAwB,SAACvM,GAC9BD,KAAavI,MAAM,CAClBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAQvChH,GAAgB,CACrB3O,KAAM,GACNmlB,OAAQ,GACR1iB,YAAa,GACb2iB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1iB,MAAO,GACPjC,IAAK,GACL6B,MAAO,GACP+iB,aAAc,MAGPvO,GAAWC,KAAXD,OAmmBOwO,GA1lBQ,SAAC,GAA+F,IAA7FC,EAA4F,EAA5FA,sBAAuBC,EAAqE,EAArEA,yBAA0BC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,gBAA6B,EAElE3X,EAAe,GAAI,cAAc,QAFiC,mBAE9G6X,EAF8G,KAE5FC,EAF4F,OAGvFnU,oBAAS,GAH8E,mBAG9GuM,EAH8G,KAGrGC,EAHqG,OAIrFxM,oBAAS,GAJ4E,mBAI9G2M,EAJ8G,KAIpGF,EAJoG,OAKrEzM,oBAAS,GAL4D,mBAK5F6M,GAL4F,aAMvD7M,oBAAS,GAN8C,mBAM9GqU,EAN8G,KAMrFC,EANqF,OAOvDtU,oBAAS,GAP8C,mBAO9G4M,EAP8G,KAOrF+M,EAPqF,OAQ7D3Z,oBAAS,GARoD,mBAQ9G0M,EAR8G,KAQxFkN,EARwF,OAS7E5Z,mBAAS,IAToE,mBAS9GiV,EAT8G,KAShGC,EATgG,OAUrElV,mBAAS,IAV4D,mBAU9GuU,EAV8G,KAU5FC,EAV4F,OAWrFxU,mBAAS,IAX4E,mBAW9GyU,EAX8G,KAWpGC,EAXoG,OAYtE1U,oBAAS,GAZ6D,oBAY9G2U,GAZ8G,MAY7FC,GAZ6F,SAanF5U,mBAAS,IAb0E,qBAa9G6U,GAb8G,MAanGC,GAbmG,SAc9F9U,mBAAS,IAdqF,qBAc9G7M,GAd8G,MAczGwe,GAdyG,SAe1F3R,mBAAS,IAfiF,qBAe9G+U,GAf8G,MAevGC,GAfuG,MAkB/GjY,GAAY,uCAAG,WAAOC,EAAaC,GAApB,yBAAAf,EAAA,6DAEd2Z,EAAYlJ,EAAWA,EAASvd,KAAI,SAAA4B,GACzC,OAAOA,EAAMV,MACT,GAECie,EAAW,IAAIC,SAEfwH,EAAK,CACV3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUsB,GAAOllB,KAAK,KACtB7B,KAAMgP,EAAOmW,OAAO2C,OACpBrlB,YAAauM,EAAOoW,eAGrB7E,EAASG,OAAO,OAAQ1R,EAAOhP,KAAK8nB,QACpCvH,EAASG,OAAO,cAAe1R,EAAOvM,aACtC8d,EAASG,OAAO,QAAS/T,KAAKC,UAAUib,IACxCtH,EAASG,OAAO,QAASuG,GAAgBY,EAAU,GAAKA,EAAU,GAAK,IACvEtH,EAASG,OAAO,SAAU6F,GAC1BhG,EAASG,OAAO,OAAQmG,IACxBtG,EAASG,OAAO,YAAa1R,EAAOqW,WACpC9E,EAASG,OAAO,eAAgB1R,EAAO2W,cACvCpF,EAASG,OAAO,kBAAmB1R,EAAOuW,iBAC1ChF,EAASG,OAAO,WAAY1R,EAAOyW,UAI7BoG,EAASlf,KAAKC,UAAUob,IACxB8D,EAAa,IAAItL,UACZE,OAAO,KAAKmL,GAIvBtL,EAASG,OAAO,KAAMoL,EAAWC,IAAI,OAKrCxqB,QAAQC,IAAI,qBAAZ,eACI+e,IAzCgB,UA+CS4F,EAAuB,CACnDlgB,KAAMsa,IAhDa,SA+Cd0H,EA/Cc,SAqD4B,OAA1BA,EAAepiB,QAtHN4P,EAuHN,oBAtH1BD,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,mBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAoH1CmQ,GAAyB,GAEzBE,EAAgB,CAAC,aAChB1jB,GAAI2lB,EAAc,KAAW,GAC7BzlB,IAAKylB,EAAc,KAAW,GAC9BjoB,KAAMioB,EAAc,MAAY,GAChCxlB,YAAawlB,EAAc,aAAmB,GAC9CrlB,MAAOqlB,EAAc,OAAa,IAE/BA,IAPW,oBAQVlC,KAEL9W,EAAQiZ,YAERzJ,EAAY,IACZyI,EAAgB,IAChBV,EAAoB,IACpBF,GAA2B,GAC3BI,EAAY,KAGZ1E,KAMD/S,EAAQC,eAAc,GAlFF,kCAjEU,IAACuG,IAiEX,OAAH,wDAuFlBlU,QAAQC,IAAI,mBAAmB0kB,GAG/BlY,qBAAU,WACT,IAAKkY,EAAgB,UAAe,CACnC,IAAMjZ,EAAQiZ,EAAgB,MAC9B,GAAIjZ,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAI3DF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACpCF,OAAOqO,OAAO/B,EAAK,OACnB,IACGnJ,SAAQ,SAACkoB,EAAKC,GACpB,GAAmB,kBAARD,EACVhK,GAAsBgK,QAElB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACvBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACZhK,GAAsBgK,aAQ1B,CAAC9F,IAMJ,IAAMiC,GAAiB,SAACC,GACvB9B,EAA2B8B,IAItBC,GAAe,SAACpY,GACrB6V,GAAyB,IAoCpBwC,GAAiB,SAAC5oB,GACvB8mB,EAAoB9mB,IAYrB,SAAS0hB,GAAaX,GAiBrB,MAhBiC,eAAdA,EAAKhhB,MAAuC,cAAdghB,EAAKhhB,MAErDgW,KAAQxI,MAAM,qCAEAwT,EAAKvH,KAAO,KAAO,KAAO,GAExCzD,KAAQxI,MAAM,gCAdhB,SAAmBhK,EAAKslB,GACvB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAc3lB,GAerB4lB,CAAUpI,GAAM,SAAAgG,GACfC,EAAYD,GACZK,GAAarG,GACbmG,IAAoB,OAGd,EAIR,IAAMoC,GACL,6BACErC,GAAkB,kBAACsC,GAAA,EAAD,MAAsB,kBAACjE,GAAA,EAAD,MACzC,yBAAK7kB,UAAU,mBAAf,WAMF,OACC,kBAAC,IAAD,CACCkP,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OAEAC,GANA,EAKAN,QALA,EAMAM,cACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCvP,MAAO,CACN2hB,IAAK,QAEN9e,MAAM,mBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACdhZ,QAAST,EACT0Z,SAAU,WAGX,kBAAChqB,EAAD,CACCI,MAAM,OACNE,MAAOsP,EAAOhP,KACdC,YAAa,kBACbD,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgBwW,EAAiBjZ,MAAjB,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgBwW,EAAiBjZ,MAAjB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,wFACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgBwW,EAAiBjZ,MAAjB,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgBwW,EAAiBjZ,MAAjB,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAIlB,kBAAC,GAAD,CACCpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACdhC,YAAa,mBACbT,KAAK,cACLF,QAAU6P,EAAQlN,aAAegN,EAAOhN,cACrCiN,GAAgBwW,EAAiBjZ,MAAjB,kBAEnBlN,YAAc4P,EAAQlN,aAAegN,EAAOhN,cACzCiN,GAAgBwW,EAAiBjZ,MAAjB,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,iBACNE,MAAOsP,EAAOoW,cACd3kB,YAAa,yEACbT,KAAK,gBACLF,QAAU6P,EAAQyV,eAAiB3V,EAAO2V,gBACvC1V,GAAgBwW,EAAiBjZ,MAAjB,oBAEnBlN,YAAc4P,EAAQyV,eAAiB3V,EAAO2V,gBAC3C1V,GAAgBwW,EAAiBjZ,MAAjB,oBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBAIzB,kBAACxQ,EAAD,CACUI,MAAM,gBACNE,MAAOsP,EAAO2W,aACd1lB,YAAa,QACbD,KAAK,eACLP,KAAK,SACLK,QAAU6P,EAAQgW,cAAgBlW,EAAOkW,eACtCjW,GAAgBwW,EAAiBjZ,MAAjB,mBAEnBlN,YAAc4P,EAAQgW,cAAgBlW,EAAOkW,eAC1CjW,GAAgBwW,EAAiBjZ,MAAjB,mBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,mBAIpB,yBAAKrP,MAAO,CACX0V,UAAW,UAGZ,yBAAK9V,UAAU,wBACd,kBAAC,KAAD,CACCioB,QAAS/B,EACTgD,gBAAc,EAACzpB,SAAUuoB,KAC1B,yBAAKhoB,UAAU,sCACd,kDACA,wBAAIA,UAAU,6BAAd,0CAIAkmB,GACD,oCACC,wBAAIlmB,UAAU,mBAAd,mBACA,kBAAC,KAAD,CACCyY,YAAU,EACVrY,MAAO,CAAE4R,MAAO,KAChB1R,YAAY,2BACZoY,iBAAiB,WACjBjZ,SAAU0oB,GAIVxP,aAAc,SAACC,EAAOC,GAAR,OAAwBA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IAEnG8M,EAAallB,OAAS,GAAKklB,EAAa3kB,KAAI,SAAAiB,GAC5C,OAAO,kBAAC,GAAD,CAAQ3C,MAAO2C,EAASC,IAAKD,EAASrC,WASjD,yBACCO,MAAO,CACN0V,UAAW,UAKb,yBAAK9V,UAAU,iCACd,wBAAIA,UAAU,mBAAd,SACA,kBAAC,KAAD,CACCkW,UAAU,OAAOjT,MAAO,oCACxB,uBAAGuT,KAAK,OACP,kBAAC2S,GAAA,EAAD,SAKH,kBAAC,KAAD,CACC/oB,MAAO,CACNC,aAAc,OAEfR,KAAK,SACLyiB,SAAS,eACTtiB,UAAU,kBACVopB,gBAAgB,EAChBnI,aAAcA,GACdL,UAAU,GAET0F,EAAW,yBAAKlb,IAAKkb,EAAUnjB,IAAI,SAAS/C,MAAO,CAAE4R,MAAO,UAAe6W,IAI7E,yBACCzoB,MAAO,CACN0V,UAAW,UAKb,yBAAK9V,UAAU,gCAAgCI,MAAO,CACrD6a,aAAc,SAEd,wBAAIjb,UAAU,mBAAd,UACA,kBAAC,KAAD,CACCkW,UAAU,OAAOjT,MAAO,uFACxB,uBAAGuT,KAAK,OACP,kBAAC2S,GAAA,EAAD,SAIH,yBAAKnpB,UAAU,gCACbwe,GAEAA,EAAS9d,OAAS,GAAK8d,EAASvd,KAAI,SAAC4B,EAAO4T,GAC3C,OACC,yBAAKzW,UAAU,sCACd,yBACCA,UAAU,kDACV+P,QAAS,kBAAMgX,EAAgBlkB,EAAMV,MAErC,yBAAKiJ,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGnC,0BACC4M,QAAS,kBA/RM,SAAC5N,GAE3B,IAAMknB,EAAY7K,GAAYA,EAASwB,QAAO,SAAAnd,GAC7C,OAAOA,EAAMV,KAAOA,KAGrBmc,EAAY+K,GAyRcC,CAAmBzmB,EAAMV,KACxCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,QAIAoE,IAAiBjkB,EAAMV,KAInB2kB,GAA0B,IAAVrQ,IAHpB,0BAAMzW,UAAU,4CACf,kBAAC2iB,GAAA,EAAD,WAcN,kBAAC,KAAD,CACC1f,MAAO,iBAEP,yBACC8M,QAAS,WACRsO,GAAW,GACXoN,GAAwB,GACxBD,GAA2B,IAE5BxrB,UAAU,4CAIV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACf,kBAAC6kB,GAAA,EAAD,UAOJ,kBAAC5lB,EAAD,CACCI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACnC3V,GAAgBwW,EAAiBjZ,MAAjB,gBAEnBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACvC3V,GAAgBwW,EAAiBjZ,MAAjB,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACxQ,EAAD,CACCI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACrC5V,GAAgBwW,EAAiBjZ,MAAjB,kBAEnBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cACzC5V,GAAgBwW,EAAiBjZ,MAAjB,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACzC7V,GAAgBwW,EAAiBjZ,MAAjB,sBAEnBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC7C7V,GAAgBwW,EAAiBjZ,MAAjB,sBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC3C9V,GAAgBwW,EAAiBjZ,MAAjB,wBAEnBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC/C9V,GAAgBwW,EAAiBjZ,MAAjB,wBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASA,GACTxe,KAAMA,KAGN,yBAAK5E,MAAO,CACX0V,UAAU,UAGX,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASqD,GACT7hB,KAAM4hB,MAKP,kBAAC,GAAD,CACCvI,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,S,ICrpBJnQ,MAAaC,MAAM,CAC3CxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0C,QCuBhEoO,GAAmBC,MAAaC,MAAM,CAC1CxO,KAAMuO,MACH/O,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAGNme,GAA0B,SAAC5I,GAC/BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,mBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAIzCqM,GAAwB,SAACvM,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAIzChH,GAAgB,CACpB3O,KAAM,GACNmlB,OAAQ,GACR1iB,YAAa,GACb2iB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1iB,MAAO,GACPjC,IAAK,GACL6B,MAAO,GACP+iB,aAAc,IAGRvO,GAAWC,KAAXD,OAk1BOwO,GAv0BQ,SAAC,GAOV,IANZC,EAMW,EANXA,sBACAC,EAKW,EALXA,yBACAC,EAIW,EAJXA,aAEAE,GAEW,EAHXD,gBAGW,EAFXC,oBACAiG,EACW,EADXA,sBACW,EACwC7d,EACjD,GACA,kBAHS,mBACJ6X,EADI,KACcC,EADd,OAQP9X,EAAe,GAAI,sBARZ,mBAOT+X,GAPS,aAYP/X,EAAe,GAAI,6BAZZ,mBAWT8Y,GAXS,aAgBP9Y,EAAe,GAAI,2BAhBZ,mBAeT+Y,GAfS,aAoBP/Y,EAAe,GAAI,+BApBZ,gCAwBPA,EAAe,GAAI,8BAxBZ,mBAuBTgZ,GAvBS,aA4BPhZ,EAAe,GAAI,6BA5BZ,mBA2BTiZ,GA3BS,aA8BmBtV,oBAAS,GA9B5B,mBA8BJuM,EA9BI,KA8BKC,EA9BL,OA+BqCxM,oBAAS,GA/B9C,mBA+Bc6M,GA/Bd,aAgCmD7M,oBAAS,GAhC5D,mBAgCJqU,EAhCI,KAgCqBC,EAhCrB,OAiCmDtU,oBAAS,GAjC5D,mBAiCJ4M,EAjCI,aAkC6C5M,oBAAS,IAlCtD,mBAkCJ0M,EAlCI,KAkCkBkN,EAlClB,QAmCqC5Z,mBAAS,IAnC9C,qBAmCJuU,GAnCI,MAmCcC,GAnCd,SAoCqBxU,mBAAS,IApC9B,qBAoCJyU,GApCI,MAoCMC,GApCN,SAqCoC1U,oBAAS,GArC7C,qBAqCJ2U,GArCI,MAqCaC,GArCb,SAsCuB5U,mBAAS,IAtChC,qBAsCJ6U,GAtCI,MAsCOC,GAtCP,SAuCa9U,mBAAS,IAvCtB,qBAuCJ7M,GAvCI,MAuCEwe,GAvCF,SAwCiB3R,mBAAS,IAxC1B,qBAwCJ+U,GAxCI,MAwCIC,GAxCJ,SAyCqBhV,oBAAS,GAzC9B,qBAyCJ2M,GAzCI,MAyCMF,GAzCN,SA0C6BzM,mBAAS,IA1CtC,qBA0CJiV,GA1CI,MA0CUC,GA1CV,SA2CmClV,mBAAS,IA3C5C,qBA6CLjD,IA7CK,YA6CO,uCAAG,WAAOC,EAAaC,GAApB,qBAAAf,EAAA,yDAEb2Z,EAAYlJ,GACdA,GAASvd,KAAI,SAAC4B,GACZ,OAAOA,EAAMV,MAEf,IAEEie,EAAW,IAAIC,UAEZE,OAAO,OAAQ1R,EAAOhP,KAAK8nB,QACpCvH,EAASG,OAAO,cAAe1R,EAAOvM,aACtC8d,EAASG,OAAO,QAAS/T,KAAKC,UAAUib,IACxCtH,EAASG,OAAO,QAASuG,IAAgBY,EAAU,GAAKA,EAAU,GAAK,IACvEtH,EAASG,OAAO,SAAU6F,IAC1BhG,EAASG,OAAO,OAAQmG,IACxBtG,EAASG,OAAO,eAAgB1R,EAAO2W,cAEvCpkB,QAAQC,IAAI,qBAAsBykB,GAClC1kB,QAAQC,IAAI,YAAaqmB,KAErB5B,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,GArBhD,oBAsBXknB,EAAyB,GAE3BF,GAAaA,EAAUhnB,OAAS,GAClCgnB,EAAU/jB,SAAQ,SAAC4jB,GACbzB,GAAsBA,EAAkB,QACrCA,EAAkB,MAAU3kB,SAASomB,IACxCK,EAAuB9jB,KAAKyjB,SAMhCK,EAAuB,IAAMA,EAAuBlnB,OAAS,GAlChD,kCAmCTsmB,EAAqC,CACzCnmB,WAAY,CACVE,aAAc,CACZymB,WAAY,WACZ3gB,OAAQif,EAAmB3jB,KAG/B2D,KAAM,CACJjD,MAAO+kB,KA3CI,qCA+CfA,EAAuB,IACvBA,EAAuBlnB,OAAS,GAhDjB,kCAkDTumB,EAAmC,CACvCpmB,WAAY,CACVE,aAAc,CACZwmB,QAASK,EAAuB,GAAGzlB,GACnCqlB,WAAY,WACZ3gB,OAAQif,EAAmB3jB,OAvDlB,yBA8DU6jB,EAAuB,CAClDnlB,WAAY,CACVE,aAAc,CACZoB,GAAI2jB,EAAmB3jB,KAG3B2D,KAAM,CACJjG,KAAMgP,EAAOhP,KAAK8nB,OAClBrlB,YAAauM,EAAOvM,YACpBO,MAAO6kB,EACPjlB,MAAOqkB,IAAgBY,EAAU,GAAKA,EAAU,GAAK,GACrDllB,OAAQ4jB,GACRxjB,KAAM8jB,GACNxB,UAAWrW,EAAOqW,UAClBE,gBAAiBvW,EAAOuW,gBACxBI,aAAc3W,EAAO2W,aACrBF,SAAUtgB,IAAQA,GAAKtE,OAAS,EAAIsE,GAAKtD,KAAK,KAAO,GACrDmmB,GAAI,CACF3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUsB,IAAUA,GAAOlmB,OAAS,EAAIkmB,GAAOllB,KAAK,KAAO,GAC3D7B,KAAMgP,EAAOmW,OAAO2C,OACpBrlB,YAAauM,EAAOoW,kBApFP,SA8Db6C,EA9Da,SA0F6B,OAA1BA,EAAepiB,QACnCwY,GAAwB,qBACxByH,GAAyB,GAYzBoG,EAAsB,eACjBjG,EADgB,GAGhBgC,IAGLhZ,EAAQiZ,YAERzJ,GAAY,IACZyI,GAAgB,IAChBV,GAAoB,IACpBF,GAA2B,GAC3BI,GAAY,KAEZ1E,KAGF/S,EAAQC,eAAc,GAzHH,4CAAH,yDA4HlBlB,qBAAU,WACR,GAAIiY,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,EAAG,CAEpE,IAAM8K,EAASsa,EAAmBjjB,MACjCukB,EAAY,GAMhB,GAJI5b,GAAUA,EAAO9K,OAAS,IAC7B0mB,EAAY5b,GAGTsa,EAAmBrjB,OAASqjB,EAAmBrjB,MAAnB,GAChB+I,EAAO4V,MAAK,SAAA3f,GAAI,OAAIA,EAAKU,KAAO2jB,EAAmBrjB,MAAnB,QAE9C2kB,EAAS,CAAItB,EAAmBrjB,OAAvB,oBAAiC2kB,KAG3CL,GAAgBjB,EAAmBrjB,MAAnB,IAIV6b,GAAY8I,MAIjB,CAACtB,IAEJjY,qBAAU,WAEJ2Q,IAAYA,GAAS,IAAMA,GAAS9d,OAAS,GAC3ComB,KAAiBtI,GAAS,GAAGrc,KAC/B4kB,GAAgBvI,GAAS,GAAGrc,IAC5BklB,GAAyB7I,GAAS,OAGrC,CAACA,KAEJ,IAAM8I,GAAuB,uCAAG,WAAOnlB,GAAP,SAAA4L,EAAA,sEACxBmZ,EAAqC,CACzCrmB,WAAY,CACVE,aAAc,CACZwmB,QAASplB,EACTqlB,WAAY,WACZ3gB,OAAQif,EAAmB3jB,OANH,2CAAH,sDAYvBklB,GAAwB,uCAAG,WAAOxkB,GAAP,eAAAkL,EAAA,sEACJoZ,EAAqC,CAC9DtmB,WAAY,CACVE,aAAc,CACZwmB,QAAS1kB,EAAMV,GACfqlB,WAAY,WACZ3gB,OAAQif,EAAmB3jB,OANF,QACzBslB,EADyB,SAYa,OAAxBA,EAAa/hB,OAC/BwY,GAAwB,qBAexB2D,GAAsB,mDA5BO,2CAAH,sDA2CxBmG,GAAiB,SAACC,GACtB9B,EAA2B8B,IAGvBC,GAAe,SAACpY,GACpB6V,GAAyB,IAuBrBwC,GAAiB,SAAC5oB,GACtB8mB,GAAoB9mB,IAStB,SAAS0hB,GAAaX,GA0CpB,MAzCiC,eAAdA,EAAKhhB,MAAuC,cAAdghB,EAAKhhB,MAEpDgW,KAAQxI,MAAM,qCAEDwT,EAAKvH,KAAO,KAAO,KAAO,GAEvCzD,KAAQxI,MAAM,gCAblB,SAAmBhK,EAAKslB,GACtB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAc3lB,GAarB4lB,CAAUpI,GAAM,SAACgG,GACfC,GAAYD,GACZK,GAAarG,GACG,uCAAG,8BAAAvS,EAAA,6DACXqS,EAAW,IAAIC,UACZE,OAAO,OAAQD,GAFP,SAMC2F,EAA8B,CAC9CplB,WAAY,CACVE,aAAc,CACZoB,GAAI2jB,EAAmB3jB,KAG3B2D,KAAMsa,IAZS,QAMXxT,EANW,SAgBS,OAAfA,EAAIlH,OACbwY,GAAwB,0BAExB2D,GACE,uDApBa,2CAAH,oDAyBhB8G,GACAlC,IAAoB,OAGf,EAGT,IAAMoC,GACJ,6BACGrC,GAAkB,kBAACsC,GAAA,EAAD,MAAsB,kBAACjE,GAAA,EAAD,MACzC,yBAAK7kB,UAAU,mBAAf,WAkCJ,OA9BA6N,qBAAU,WACR,GAAIiY,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,EAAG,CACpE,IAAMkoB,EAAU9C,EAAmBljB,MAAQkjB,EAAmBljB,KAE9D2jB,GAAYqC,MAEb,IAEH/a,qBAAU,WACR,GAAIiY,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,EAAG,CACpE,IAAM4kB,EACJQ,EAAmBR,UAAYQ,EAAmBR,SAAStkB,MAAM,KAEnEI,QAAQC,IAAI,gBAAiBikB,GAE7B,IAAMC,EACJO,EAAmB+B,IACnB/B,EAAmB+B,GAAnB,UACA/B,EAAmB+B,GAAnB,SAAkC7mB,MAAM,KAG1CwiB,GAAQ8B,GAAY,IACpBuB,GAAUtB,GAAc,OAEzB,IAOD,kBAAC,IAAD,CACErW,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,GAERsX,EAFQ,GAGPA,GACFtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,GAAK,CAC5CykB,YACEW,EAAkB,IAClBA,EAAkB,GAAOZ,WACzBY,EAAkB,GAAOZ,UAC3BG,kBACES,EAAkB,IAClBA,EAAkB,GAAOV,iBACzBU,EAAkB,GAAOV,gBAC3BJ,OACEc,EAAkB,IAClBA,EAAkB,GAAOjmB,MACzBimB,EAAkB,GAAOjmB,KAC3BolB,cACEa,EAAkB,IAClBA,EAAkB,GAAOxjB,aACzBwjB,EAAkB,GAAOxjB,gBAIhC,gBACC+M,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEvP,MAAO,CACL2hB,IAAK,QAEP9e,MAAM,gBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,WAGZ,kBAAChqB,EAAD,CACEI,MAAM,OACNE,MAAOsP,EAAOhP,KACdC,YAAa,kBACbD,KAAK,OACLF,QACG6P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GAAgBwW,EAAiBjZ,MAAjB,WAEpBlN,YACG4P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GAAgBwW,EAAiBjZ,MAAjB,WAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACxQ,EAAD,CACEI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,wFACbD,KAAK,SACLF,QACG6P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GAAgBwW,EAAiBjZ,MAAjB,aAEpBlN,YACG4P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GAAgBwW,EAAiBjZ,MAAjB,aAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC,GAAD,CACEpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACdhC,YAAa,mBACbT,KAAK,cACLF,QACG6P,EAAQlN,aAAegN,EAAOhN,cAC7BiN,GACAwW,EAAiBjZ,MAAjB,kBAEJlN,YACG4P,EAAQlN,aAAegN,EAAOhN,cAC7BiN,GACAwW,EAAiBjZ,MAAjB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACEpQ,MAAM,iBACNE,MAAOsP,EAAOoW,cACd3kB,YAAa,yEACbT,KAAK,gBACLF,QACG6P,EAAQyV,eAAiB3V,EAAO2V,gBAC/B1V,GACAwW,EAAiBjZ,MAAjB,oBAEJlN,YACG4P,EAAQyV,eAAiB3V,EAAO2V,gBAC/B1V,GACAwW,EAAiBjZ,MAAjB,oBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACxQ,EAAD,CACEI,MAAM,gBACNE,MAAOsP,EAAO2W,aACd1lB,YAAa,QACbD,KAAK,eACLP,KAAK,SACLK,QACG6P,EAAQgW,cAAgBlW,EAAOkW,eAC9BjW,GACAwW,EAAiBjZ,MAAjB,mBAEJlN,YACG4P,EAAQgW,cAAgBlW,EAAOkW,eAC9BjW,GACAwW,EAAiBjZ,MAAjB,mBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,mBAIpB,yBACErP,MAAO,CACL0V,UAAW,UAIf,yBAAK9V,UAAU,wBACb,kBAAC,KAAD,CACEioB,QAAS/B,EACTgD,gBAAc,EACdzpB,SAAUuoB,KAEZ,yBAAKhoB,UAAU,sCACb,kDACA,wBAAIA,UAAU,6BAAd,0CAMFkmB,GACA,oCACE,wBAAIlmB,UAAU,mBAAd,mBACA,kBAAC,KAAD,CACEyY,YAAU,EACVrY,MAAO,CAAE4R,MAAO,KAChB1R,YAAY,2BACZoY,iBAAiB,WACjBjZ,SAAU0oB,GAIVxP,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOtV,SACJuV,cACAjX,QAAQ+W,EAAME,gBAAkB,IAGpC8M,EAAallB,OAAS,GACrBklB,EAAa3kB,KAAI,SAACiB,GAChB,OACE,kBAAC,GAAD,CAAQ3C,MAAO2C,EAASC,IAAKD,EAASrC,WAOlD,yBACEO,MAAO,CACL0V,UAAW,UAIf,yBAAK9V,UAAU,iCACb,wBAAIA,UAAU,mBAAd,SACA,kBAAC,KAAD,CACEkW,UAAU,OACVjT,MAAO,oCAEP,uBAAGuT,KAAK,OACN,kBAAC2S,GAAA,EAAD,SAKN,kBAAC,KAAD,CACE/oB,MAAO,CACLC,aAAc,OAEhBR,KAAK,SACLyiB,SAAS,eACTtiB,UAAU,kBACVopB,gBAAgB,EAChBnI,aAAcA,GACdL,UAAU,GAET0F,GACC,yBAAKlb,IAAKkb,GAAUnjB,IAAI,SAAS/C,MAAO,CAAE4R,MAAO,UAEjD6W,IAIJ,yBACEzoB,MAAO,CACL0V,UAAW,UAIf,yBACE9V,UAAU,gCACVI,MAAO,CACL6a,aAAc,SAGhB,wBAAIjb,UAAU,mBAAd,WAOF,yBAAKA,UAAU,gCACZ8lB,GACCtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,GACvC,oCACG8d,IAECA,GAAS9d,OAAS,GAClB8d,GAASvd,KAAI,SAAC4B,EAAO4T,GACnB,OACE,yBAAKzW,UAAU,sCACb,yBACEA,UAAU,kDACV+P,QAAS,WACPgX,GAAgBlkB,EAAMV,IACtBklB,GAAyBxkB,KAG3B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACE4M,QAAS,YA9ZV,SAAC5N,GAE1B,IAAMknB,EACJ7K,IACAA,GAASwB,QAAO,SAACnd,GACf,OAAOA,EAAMV,KAAOA,KAGxBmc,GAAY+K,GAuZgBC,CAAmBzmB,EAAMV,IACzBmlB,GAAwBzkB,EAAMV,KAEhCnC,UAAU,6CAEV,kBAAC0iB,GAAA,EAAD,QAGDoE,KAAiBjkB,EAAMV,KAKrB2kB,IACS,IAAVrQ,IALA,0BAAMzW,UAAU,4CACd,kBAAC2iB,GAAA,EAAD,WAcZ,kBAAC,KAAD,CAAS1f,MAAO,iBACd,yBACE8M,QAAS,WACPsO,GAAW,GACXoN,GAAwB,IAE1BzrB,UAAU,4CAKV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACd,kBAAC6kB,GAAA,EAAD,WAQd,kBAAC5lB,EAAD,CACEI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QACG6P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GAAgBwW,EAAiBjZ,MAAjB,gBAEpBlN,YACG4P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GAAgBwW,EAAiBjZ,MAAjB,gBAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACxQ,EAAD,CACEI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QACG6P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACAwW,EAAiBjZ,MAAjB,kBAEJlN,YACG4P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACAwW,EAAiBjZ,MAAjB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACEpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QACG6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACAwW,EAAiBjZ,MAAjB,sBAEJlN,YACG4P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACAwW,EAAiBjZ,MAAjB,sBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACEpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QACG6P,EAAQ6V,mBAAqB/V,EAAO+V,oBACnC9V,GACAwW,EAAiBjZ,MAAjB,wBAEJlN,YACG4P,EAAQ6V,mBAAqB/V,EAAO+V,oBACnC9V,GACAwW,EAAiBjZ,MAAjB,wBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIzP,UAAU,mBAAd,+BAEA,kBAAC,GAAD,CAEEwjB,QAASA,GACTxe,KAAMA,KAGR,yBACE5E,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,wGAEA,kBAAC,GAAD,CAEEwjB,QAASqD,GACT7hB,KAAM4hB,MAIV,kBAAC,GAAD,CACEvI,WAAYA,EACZD,QAASA,EACTE,YAAaA,GACbE,SAAUA,GACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,SC53B1BpC,GAAwBC,KAAxBD,OAuaSvK,IAvaewK,KAAhBC,YACG2P,IAAX9B,OAsaStY,aALO,SAAA3E,GAAK,MAAK,CAC9B6D,MAAO7D,EAAM2D,eAIyB,KAAzBgB,EA/ZM,SAAC,GAAoB,IAAnBd,EAAkB,EAAlBA,MAAkB,EACkB5C,EAAe,GAAI,kBADrC,mBAChC+d,EADgC,KACXC,EADW,OAEsBhe,EAAe,GAAI,oBAFzC,mBAEhCie,EAFgC,KAETC,EAFS,KAIjCtrB,EAASurB,eACT9X,EAAUC,eACV8X,EAAaxrB,EAAM,GANc,EAOe+Q,oBAAS,GAPxB,mBAOhC0a,EAPgC,KAOXC,EAPW,OAQI3a,mBAAS,IARb,mBAQhC4a,EARgC,KAQjBC,EARiB,KAYvC7e,qBAAU,YAEiB,uCAAG,4BAAAE,EAAA,sEACeme,EAA0B,CAC3DrrB,WAAY,CACRE,aAAc,CACVoB,GAAImqB,MAJM,QAChBK,EADgB,SAYlBD,EAAkBC,GAZA,2CAAH,qDAgBvBC,KAED,CAACN,IAMJze,qBAAU,YAEmB,uCAAG,sBAAAE,EAAA,sEAClBqe,EAA4B,CAC9BvrB,WAAY,CACRE,aAAc,CACVoB,GAAImqB,MAJQ,2CAAH,qDAUzBO,KAED,CAACP,IAKJlrB,QAAQC,IAAI,wBAAyB8qB,GAErC/qB,QAAQC,IAAI,cAAeP,GAG3B,IA8BMgsB,EAAMb,EAAoB7e,MAAQqf,GAAkBA,EAAc,MA9B7C,SAACM,GACxB,IAAKA,EAAK,GAAI,OAAO,EACrBA,EAAOA,EAAK9rB,KAAI,SAAAQ,GAAI,OAAIA,EAAKgB,SAC7B,IAAMuqB,EAAU,GAEZC,EAAa,EACbC,EAAe,EAqBnB,OAlBAH,EAAKppB,SAAQ,SAAClC,EAAMgV,GACZwW,EAAa,GACTD,EAAQE,GACRF,EAAQE,GAAR,uBAA4BF,EAAQE,IAApC,CAAmDzrB,IAElDurB,EAAQE,GAAgB,CAACzrB,GAE9BwrB,GAA0B,EAC1BC,GAA8B,IAI9BD,EAAa,EACbC,EAAe,EACf9rB,QAAQC,IAAI,aAAc4rB,OAI3BD,EAGyEG,CAAmBV,EAAc,OAAa,GAElI,OACI,yBAAKzsB,UAAU,wBAEX,yBAAKA,UAAU,iCACX,+CAICisB,EAAoB7e,MAAQqf,GAAmBjsB,OAAOC,KAAKgsB,GAAgB/rB,OAAS,GACjF,oCACI,kBAAC0sB,GAAD,CACI1H,sBAAuB6G,EACvB5G,yBAA0B6G,EAC1B1G,mBAAoB2G,EACpBV,sBAAuBW,IAIlC1b,GAAS,gBAAgBF,IACd,kBAAC,IAAD,CACAf,QAAS,kBAAMyc,GAAuB,IACtCltB,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAHN,UAchB,kBAAC,KAAD,CACIyC,QAAM,EAACC,UAAW,CAAEzP,KAAM,GAC1B7N,QAASic,EAAoB9e,WAC5B8e,EAAoB7e,MAAQqf,KAAoBjsB,OAAOC,KAAKgsB,GAAgB/rB,OAAS,IAClF,kBAAC,KAAD,CAAO4B,YAAY,oBAAoBO,MAAOmR,KAAMK,yBAKvD4X,EAAoB7e,MAAQqf,GAAmBjsB,OAAOC,KAAKgsB,GAAgB/rB,OAAS,GACjF,oCACI,yBAAKV,UAAU,gCACX,yBAAKA,UAAU,oGACX,yBAAKoL,IAAKqhB,EAAc,OAAaA,EAAc,MAAd,MAAkCtpB,IAAI,MAE/E,yBAAKnD,UAAU,qCACX,4BACKysB,EAAc,MAEnB,4BACKA,EAAc,aAEnB,8CACmB,8BACVA,EAAc,OAItBA,EAAc,KACX,mCAEI,8BACKA,EAAc,QAUlCA,EAAc,MACX,oCACI,yBAAKzsB,UAAU,iCACX,qCAKJ,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,gGACX,yBAAKoL,IAAKqhB,EAAc,MAAYA,EAAc,KAAUtpB,IAAI,OAKxE,yBAAK/C,MAAO,CACR6a,aAAc,WAMzBwR,EAAc,OAAaA,EAAc,MAAU/rB,OAAS,GACzD,oCACI,yBAAKV,UAAU,iCACX,8CAKJ,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,kBACV8sB,GAAOtsB,OAAOC,KAAKqsB,GAAK7rB,KAAI,SAAA+b,GACzB,OACI,yBAAKhd,UAAU,qBACV8sB,EAAI9P,IAAW8P,EAAI9P,GAAQ/b,KAAI,SAAA6B,GAC5B,OAAO,yBACPK,IAAI,KACJiI,IAAKtI,EAAK1C,MAAO,CACb4R,MAAO,oBAcvC,yBAAK5R,MAAO,CACR6a,aAAc,WAMzBwR,EAAc,aAAmBA,EAAc,YAAgB/rB,OAAS,GACrE,oCACI,yBAAKV,UAAU,iCACX,iDAKJ,yBAAKA,UAAU,yBACVysB,EAAc,YAAgBxrB,KAAI,SAAAuC,GAC/B,OACI,yBACIuM,QAAS,kBAAMwE,EAAQzQ,KAAR,0BAAgCN,EAAOrB,MACtDnC,UAAU,+BACV,yBAAKA,UAAU,wCACX,yBAAKoL,IAAK5H,EAAOf,MAAOU,IAAI,MAEhC,yBAAKnD,UAAU,oCACX,4BACKwD,EAAO3D,YAShC,yBAAKO,MAAO,CACR6a,aAAc,aAYtC,yBAAKjb,UAAU,iCACX,yCAIJ,yBAAKA,UAAU,8BACVmsB,EAAsBhf,WAAa,kBAACoe,GAAD,MACnCY,EAAsB/e,QAAU+e,EAAsBnqB,KAAKtB,OAAS,IACjE,yBAAKN,MAAO,CACR0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,sCAAsCO,MAAOmR,KAAMK,0BAI7E8X,EAAsB/e,MAAQ+e,EAAsBnqB,MAAQmqB,EAAsBnqB,KAAKtB,OAAS,GAC7F,oCACI,kBAAC,KAAD,CACIN,MAAO,CACHmtB,WAAY,OACZltB,aAAc,iBACdmtB,SAAU,SACVvb,UAAW,+FAGf8G,KAAK,QACL8D,WAAYsP,EAAsBnqB,KAClC8a,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACHoV,MAAO,qBAMnB,kBAAC,GAAD,CACIvS,MAAM,GACNga,UAAU,QACV5a,IAAI,KACJ2P,MAAO,OAEPhS,UAAU,uBAEVkd,OAAQ,SAACza,EAAO0a,GAAR,OACJ,oCACI,yBACIpN,QAAS,WACLwE,EAAQzQ,KAAR,yBAA+BqZ,EAAOhb,MAG1CiJ,IAAK3I,EAAOU,IAAI,YAAY/C,MAAO,CAC/B6T,OAAQ,OACRjC,MAAO,OACP0Y,UAAW,UACXrqB,aAAc,MACd2V,OAAQ,iBAU5B,kBAAC,GAAD,CACI/S,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACJ,oCACI,wBACIpN,QAAS,WACLwE,EAAQzQ,KAAR,yBAA+BqZ,EAAOhb,MAE1C/B,MAAO,CACH0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGX/R,OASjB,kBAAC,GAAD,CACIhB,MAAM,cACNga,UAAU,aACV5a,IAAI,KACJrC,UAAU,yBAKd,kBAAC,GAAD,CACIiD,MAAM,QACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,yBAI1C,kBAAC,GAAD,CACgCiD,MAAM,YACNga,UAAU,YACV5a,IAAI,KACJrC,UAAU,yBAKd,kBAAC,GAAD,CACIiD,MAAM,UACNga,UAAU,UACV5a,IAAI,KACJrC,UAAU,iC,wCCvX3BhB,GAvCF,SAAC,GAYA,IAXZe,EAWW,EAXXA,IACAV,EAUW,EAVXA,MACAC,EASW,EATXA,KAEAC,GAOW,EARXC,aAQW,EAPXD,OACAE,EAMW,EANXA,SACAC,EAKW,EALXA,SACAC,EAIW,EAJXA,QACAC,EAGW,EAHXA,YACAC,EAEW,EAFXA,KAEW,IADXkZ,YACW,MADJ,SACI,EACX,OACE,oCACG1Z,GAAS,wBAAIW,UAAU,yBAAyBX,GAEjD,kBAAC,IAAKY,KAAN,CACEC,eAAgBP,EAAU,QAAU,GAEpCQ,KAAMP,GAGN,kBAAC,IAAD,CACEG,IAAKA,EACLT,KAAMA,EACNyZ,KAAMA,EACN0U,YAAU,EACV5tB,KAAMA,EACNH,SAAUA,EACVH,MAAOA,EACPE,SAAUA,EACVO,UAAU,4B,UCxCdke,GAA0B,SAAC5I,GAC7BD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,UACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAK7CqM,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC8qB,GAAA,EAAD,CAA2BttB,MAAO,CAAEoV,MAAO,yBCHjDmY,GAAiBC,KAAjBD,aACAzD,GAAWjrB,IAAXirB,OAgOO2D,GAvNF,SAAC,GAKA,IAJZC,EAIW,EAJXA,UACAC,EAGW,EAHXA,gBACAC,EAEW,EAFXA,aAEW,EACmBnc,mBAAS,IAD5B,mBACJ9F,EADI,KACKkiB,EADL,OAEkCpc,mBAAS,IAF3C,gCAG4B3D,EAAe,GAAI,YAH/C,mBAGJggB,EAHI,KAGMC,EAHN,OAI2Btc,mBAAS,IAJpC,mBAIJuc,EAJI,KAISC,EAJT,KAyBXxgB,qBAAU,WACR,GAAIqgB,EAAS9gB,MAAQ8gB,EAASlsB,KAAKtB,OAAS,GAAKstB,EAAattB,OAAS,EAAG,CACxE,IAAM4tB,EAAsBN,EAAa/sB,KAAI,SAACQ,GAC5C,IAAM8sB,EAAmBL,EAASlsB,KAAKof,MACrC,SAAC/a,GAAD,OAASA,EAAIlE,KAAOV,KAEtB,GAAI8sB,EACF,OAAOA,EAAiB1uB,QAG5BkuB,EAAgBO,MAEjB,CAACJ,IAIJrgB,qBAAU,YACK,uCAAG,8BAAAE,EAAA,sEACWogB,EAAmB,CAC1CttB,WAAY,CACVC,OAAQ,CACNmqB,eAAe,MAJP,QACRuD,EADQ,SAUIA,EAAW9tB,OAAS,IAE9B+tB,EAAaD,EAAWvtB,KAAI,SAACiH,GACjC,OAAOA,EAAIrI,QAEbouB,EAAWQ,IAfC,2CAAH,qDAoBbjL,KACC,IAiDH,OAJApiB,QAAQC,IAAI,eAAgB2sB,GAK1B,oCAEGE,EAAS/gB,WACR,yBAAK/M,MAAO,CACViW,QAAS,SACTrE,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,OAMH8Z,EAAS9gB,QAAU8gB,EAASlsB,KAAKtB,OAAS,IACzC,yBAAKN,MAAO,CACV4R,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,GAAD,CAAOnR,MAAM,eAAegR,OAAQ,OAoBvCia,EAAS9gB,MAAQ8gB,EAASlsB,KAAKtB,OAAS,GAAKqL,EAAQrL,OAAS,GAC7D,oCACE,yBAAKV,UAAU,8CACb,kBAAC,GAAD,CACEgS,MAAO,MACP5R,MAAO,CACL6T,OAAQ,OACR5T,aAAc,iBACdquB,YAAa,mBAEf3V,KAAK,SACLzY,YAAY,WACZquB,SAAU,SAACpvB,GAAD,OAAW6B,QAAQC,IAAI9B,IACjCE,SArFW,SAACqQ,GAGtB,GAFAue,EAAeve,EAAEzE,OAAO9L,OAED,KAAnBuQ,EAAEzE,OAAO9L,OACX,GAAI2uB,EAASlsB,MAAQksB,EAASlsB,KAAKtB,OAAS,EAAG,CAE7C,IAAMkuB,EAAgBV,EAASlsB,KAAKf,KAAI,SAACoF,GAAD,OAASA,EAAIxG,QACrDouB,EAAWW,QAER,CACL,IAAMC,EACJ9iB,EAAQrL,OAAS,EACbqL,EAAQiU,QAAO,SAACnH,GAChB,OAAOA,EAAOC,cAAc3X,SAASitB,EAAYtV,kBAEjD,GAENmV,EAAWY,QAwEN9iB,EAAQ9K,KAAI,SAAAiH,GAAG,OACd,oCACE,kBAACylB,GAAD,CACEtrB,IAAK6F,EACL+f,QAAS+F,EAAansB,QAAQqG,IAAQ,EACtCzI,SAAU,SAAAwoB,GAAO,OA7KV,SAAC/f,EAAK+f,GACzB,IAAM6G,EAAmB7G,EAAO,uBAAO+F,GAAP,CAAqB9lB,IAAO8lB,EAAahO,QAAO,SAAA+O,GAAC,OAAIA,IAAM7mB,KAG3F,GAFA6lB,EAAgBe,GAEZZ,EAAS9gB,MAAQ8gB,EAASlsB,KAAKtB,OAAS,GAAKouB,EAAiBpuB,OAAS,EAAG,CAC5E,IAAM4tB,EAAsBQ,EAAiB7tB,KAAI,SAACQ,GAChD,IAAM8sB,EAAmBL,EAASlsB,KAAKof,MACrC,SAAC/a,GAAD,OAASA,EAAIxG,KAAKiZ,gBAAkBrX,EAAKqX,iBAE3C,GAAIyV,EACF,OAAOA,EAAiBpsB,MAG5B2rB,EAAUQ,IAgKqBjf,CAAanH,EAAK+f,KAEtC/f,UCjMT+O,GAAWC,KAAXD,OA2HO+X,GAzHA,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,QAAyC,KAAhCC,mBACRtd,mBAAS,KAD+B,mBAC/D9F,EAD+D,KACtDkiB,EADsD,OAExBpc,mBAAS,IAFe,mBAE9Cud,GAF8C,aAG7BlhB,EAAe,GAAI,aAHU,mBAG/DmhB,EAH+D,KAGnDlB,EAHmD,KA2CtE,OApBAtgB,qBAAU,YACM,uCAAG,8BAAAE,EAAA,sEACUogB,EAAmB,IAD7B,QACXmB,EADW,SAIGA,EAAa5uB,OAAS,IAEnC6uB,EAAeD,EAAaruB,KAAI,SAAC8D,GACtC,MAAO,CACNxF,MAAOwF,EAAM5C,GACbtC,KAAMkF,EAAMlF,SAGdouB,EAAWsB,IAZK,2CAAH,qDAgBfC,KACE,IAGF,oCAEC,8BAECH,EAAWliB,WACX,yBAAK/M,MAAO,CACXiW,QAAS,SACTrE,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,OAMDib,EAAWjiB,QAAUiiB,EAAWrtB,KAAKtB,OAAS,IAC9C,yBAAKN,MAAO,CACX4R,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,GAAD,CAAOnR,MAAM,iBAAiBgR,OAAQ,OAKvCob,EAAWjiB,MAAQiiB,EAAWrtB,MAAQqtB,EAAWrtB,KAAKtB,OAAS,GAAKqL,EAAQrL,OAAS,GAErF,kBAAC,KAAD,CACC+X,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAAS3R,aAAc,OACvCC,YAAY,iBACZoY,iBAAiB,WACjBjZ,SA9EJ,SAAkBF,GACjB6vB,EAAmB7vB,GACnB0vB,EAAW1vB,IA6ERkwB,QArEJ,aAsEIpL,OA1EJ,aA2EIsK,SAnEJ,SAAkBe,KAoEdlwB,aAAc0vB,EACdvW,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IAE9FuW,EAAWjiB,MACXiiB,EAAWrtB,KAAKtB,OAAS,GACzBqL,EAAQ9K,KAAI,SAAC4X,GACZ,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,Y,UCpG3CqqB,GAAWjrB,IAAXirB,OAuJOyF,GA5II,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,eAAgBC,EAAiD,EAAjDA,gBAAiBC,EAAgC,EAAhCA,mBAAgC,EACxDje,mBAAS,IAD+C,mBAC/E9F,EAD+E,KACtEkiB,EADsE,OAEhDpc,mBAAS,IAFuC,mBAE/Euc,EAF+E,KAElEC,EAFkE,OAIrCngB,EAAe,GAAI,qBAJkB,mBAI/E6c,EAJ+E,KAIhEC,EAJgE,KAMtFnd,qBAAU,YACU,uCAAG,4BAAAE,EAAA,sEACSid,EAAwB,IADjC,QACf+E,EADe,SAIEA,EAAgBrvB,OAAS,GAE/CutB,EAAW8B,GANS,2CAAH,qDAUnB3E,KACE,IAsCH,OACC,yBAAKprB,UAAU,oCAEb+qB,EAAc5d,WACd,yBAAK/M,MAAO,CACXiW,QAAS,SACTrE,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,OAKD2W,EAAc3d,QAAU2d,EAAc/oB,KAAKtB,OAAS,IACpD,yBAAKN,MAAO,CACX4R,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,GAAD,CAAOnR,MAAM,oBAAoBgR,OAAQ,OAI1C8W,EAAc3d,MAAQ2d,EAAc/oB,KAAKtB,OAAS,GAAKqL,EAAQrL,OAAS,GACxE,oCACC,yBAAKV,UAAU,8CACd,kBAAC,GAAD,CACCgS,MAAO,OACP5R,MAAO,CACN6T,OAAQ,OACR5T,aAAc,iBACdquB,YAAa,mBAEd3V,KAAK,SACLzY,YAAY,kBACZquB,SAAU,SAACpvB,GAAD,OAAW6B,QAAQC,IAAI9B,IACjCE,SAnEiB,SAACqQ,GAGvB,GAFAue,EAAeve,EAAEzE,OAAO9L,OAED,KAAnBuQ,EAAEzE,OAAO9L,OACZ,GAAIwrB,EAAc/oB,MAAQ+oB,EAAc/oB,KAAKtB,OAAS,EAAG,CAExD,IAAMkuB,EAAgB7D,EAAc/oB,KAAKf,KAAI,SAACoF,GAC7C,OAAO,eACHA,MAGL4nB,EAAWW,QAEN,CACN,IAAMC,EACL9iB,EAAQrL,OAAS,EACdqL,EAAQiU,QAAO,SAACnH,GACjB,OAAOA,GAAUA,EAAO5V,MAAM6V,cAAc3X,SAASitB,EAAYtV,kBAEhE,GAEJmV,EAAWY,QAkDT,yBAAKzuB,MAAO,IAGV2L,EAAQrL,OAAS,GACjB,kBAAC,KAAD,CACCsvB,WAAS,EACTC,YAAaJ,EACbK,SAzFU,SAACC,EAAcC,KA0FzBC,QArFS,SAACJ,EAAaG,GAC7B,IAAME,EAAaL,EAAYhI,SAAW,GAC1C2H,EAAeU,GACfR,EAAmBQ,IAmFbC,SAAUxkB,EACVykB,kBAAkB,EAClBC,eAAe,QCjGjBtiB,IAFc8P,KAAZD,QAEiB5P,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,2CAInEyO,GAAgB,CAClB3O,KAAM,GACN6wB,YAAa,KACbnqB,UAAW,GACXC,QAAS,GACTlE,YAAa,GACb0iB,OAAQ,GACXC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IA+qCEoL,GAlqCO,SAAC,GAA2I,IAAzIjL,EAAwI,EAAxIA,sBAAuBC,EAAiH,EAAjHA,yBAAuCiL,EAA0E,EAAvFC,YAAyCC,EAA8C,EAA9DC,eAA+BC,EAA+B,EAA/BA,kBAA+B,EAItG9iB,EAAe,GAAI,iBAJmF,mBAItJ+iB,EAJsJ,aAKtG/iB,EAAe,GAAI,iBALmF,mBAKtJihB,EALsJ,KAKlI+B,EALkI,OAM9EhjB,EAAe,GAAI,6BAN2D,mBAMtH8Y,GANsH,aAOlF9Y,EAAe,GAAI,2BAP+D,mBAOxH+Y,GAPwH,aAQ1E/Y,EAAe,GAAI,+BARuD,gCAS9EA,EAAe,GAAI,8BAT2D,mBAStHgZ,GATsH,aAU9EhZ,EAAe,GAAI,6BAV2D,mBAUtHiZ,GAVsH,aAaxHtV,mBAAS,IAb+G,mBAatJgf,EAbsJ,KAa1IE,EAb0I,OAc/Hlf,oBAAS,GAdsH,mBActJuM,EAdsJ,KAc7IC,EAd6I,OAe7HxM,oBAAS,GAfoH,mBAetJ2M,EAfsJ,KAe5IF,EAf4I,OAgB7GzM,oBAAS,GAhBoG,mBAgBpI6M,GAhBoI,aAiB/F7M,oBAAS,GAjBsF,mBAiBtJ4M,EAjBsJ,KAiB7H+M,GAjB6H,QAkBrG3Z,oBAAS,GAlB4F,qBAkBtJ0M,GAlBsJ,MAkBhIkN,GAlBgI,SAmBvH5Z,mBAAS,IAnB8G,qBAmBtJsf,GAnBsJ,MAmBzIvB,GAnByI,SAoBjI/d,mBAAS,IApBwH,qBAoBtJuf,GApBsJ,MAoB9ItD,GApB8I,SAqB/Hjc,mBAAS,IArBsH,qBAqBtJqd,GArBsJ,MAqB7ID,GArB6I,SAsB/Hpd,mBAAS,IAtBsH,qBAsB7Iwf,IAtB6I,gBAuBrHxf,mBAAS,IAvB4G,qBAuBtJiV,GAvBsJ,MAuBxIC,GAvBwI,SAwB/GlV,mBAAS,IAxBsG,qBAwBtJge,GAxBsJ,MAwBrIC,GAxBqI,SAyBrHje,mBAAS,IAzB4G,qBAyBtJmc,GAzBsJ,MAyBxID,GAzBwI,SA0BhIlc,mBAAS,IA1BuH,qBA0BhJyf,IA1BgJ,gBA2BhIzf,mBAAS,IA3BuH,qBA2BhJ0f,IA3BgJ,gBA4BvH1f,mBAAS,IA5B8G,qBA4BtJvP,GA5BsJ,MA4BzIkvB,GA5ByI,SA6BtH3f,mBAAS,IA7B6G,qBA6BzJoT,GA7ByJ,MA6B1IwM,GA7B0I,SA8BjI5f,mBAAS,IA9BwH,qBA8BzJyT,GA9ByJ,MA8BhJoM,GA9BgJ,SA+B7H7f,mBAAS,IA/BoH,qBA+BzJ0T,GA/ByJ,MA+B9IoM,GA/B8I,SAgCnH9f,mBAAS,IAhC0G,qCAiC3GA,mBAAS,MAjCkG,qCAkC1GA,oBAAS,IAlCiG,qCAoC1HA,mBAAS,KApCiH,qBAoCtJ+f,GApCsJ,MAoC3IC,GApC2I,SAwC5G3jB,EAAe,GAAI,gBAxCyF,qBAwCtJ4jB,GAxCsJ,MAwCrIC,GAxCqI,MA0C7JlkB,qBAAU,YACgB,uCAAG,sBAAAE,EAAA,sEACfmjB,EAAyB,CAC3BrwB,WAAY,CACRE,aAAc,CACVoB,GAAI6uB,EAAkB7uB,OAJb,2CAAH,qDAUtB6vB,KAED,CAAChB,IAvDyJ,OA0DnInf,mBAAS,CAC/BogB,QAAS,KACTC,MAAO,OA5DkJ,qBA0DtJ1tB,GA1DsJ,MA0D/I2tB,GA1D+I,MAkEvJvjB,GAAY,uCAAG,WAAOC,EAAaC,GAApB,2BAAAf,EAAA,yDAEX2Z,EAAYlJ,EAAWA,EAASvd,KAAI,SAAA4B,GACtC,OAAOA,EAAMV,MACZ,GAELf,QAAQC,IAAI,cAAcwvB,GAEpBnqB,EAAWmqB,EAAYnwB,OAAS,EAAImwB,EAAY5vB,KAAI,SAAAqD,GACtD,MAAO,CACHlC,IAAKkC,EAAQlC,IACbgwB,UAAW9tB,EAAQ8tB,UACnB7sB,SAAUjB,EAAQiB,aAErB,KAGGyrB,GAAqBxwB,OAAOC,KAAKuwB,GAAmBtwB,OAAS,GAjBpD,oBAkBHknB,EAAyB,GAE5BF,GAAaA,EAAUhnB,OAAS,GAC/BgnB,EAAU/jB,SAAQ,SAAA4jB,GACXyJ,GAAqBA,EAAiB,QACjCA,EAAiB,MAAU7vB,SAASomB,IACpCK,EAAuB9jB,KAAKyjB,SAOxCK,EAAuB,IAAMA,EAAuBlnB,OAAS,GA/BxD,iCAgCCsmB,EAAqC,CACvCnmB,WAAY,CACRE,aAAc,CACVymB,WAAY,UACZ3gB,OAAQmqB,EAAkB7uB,KAGlC2D,KAAM,CACFjD,MAAO+kB,KAxCV,oCA4CAA,EAAuB,IAAMA,EAAuBlnB,OAAS,GA5C7D,kCA6CCumB,EAAmC,CACrCpmB,WAAY,CACRE,aAAc,CACVwmB,QAASK,EAAuB,GAAGzlB,GACnCqlB,WAAY,UACZ3gB,OAAQmqB,EAAkB7uB,OAlDjC,yBA6DW4vB,GAAsB,CAC9ClxB,WAAY,CACRE,aAAc,CACVoB,GAAI6uB,EAAkB7uB,KAG9B2D,KAAM,CACFjG,KAAMgP,EAAOhP,KAAK8nB,OAClBzlB,SAAUivB,GACVnsB,KAAMosB,GACNrsB,MAAOmqB,GACP1qB,MAAOA,GACPlC,YAAaA,GACb+vB,MAAOxjB,EAAOwjB,MACd3tB,KAAMmK,EAAOnK,KACb7B,MAAO6kB,EACPhhB,WAEAwe,UAAWrW,EAAOqW,UAC9BE,gBAAiBvW,EAAOuW,gBACxBE,SAAUA,GAAS5jB,KAAK,KAGxBmmB,GAAI,CACH3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUC,GAAW7jB,KAAK,KAC1B7B,KAAMgP,EAAOmW,OAAO2C,OACpBjjB,KAAMmK,EAAOyjB,SACbhwB,YAAauM,EAAOoW,kBA1FA,SA6DXsN,EA7DW,SAoG6B,OAAzBA,EAAc7sB,SAC/BwY,GAAwB,kBAGxByH,GAAyB,GAO5BlP,EAJ+B,WACpC,OAAOma,EAAW3vB,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQmvB,EAAkB7uB,IAGpDqwB,GAGR9Q,EAAclhB,OAAOmhB,OAAO,GAAIiP,EAAWna,GAA7BjW,OAAA,IAAAA,CAAA,GAA0CwwB,EAA1C,GAAgEuB,IAC9EE,EAfmD,uBAe3B7B,EAAWhvB,MAAM,EAAG6U,IAfO,CAeCiL,GAfD,aAeiBkP,EAAWhvB,MAAM6U,EAAQ,KAC1Fqa,EAAc2B,GAOdnU,EAAY,IACZyI,GAAgB,IAChBsK,GAAW,IACXvD,GAAU,IACVC,GAAgB,IAChBkB,GAAW,IACXW,GAAe,IACfE,GAAmB,IACnBhhB,EAAQiZ,aAMZjZ,EAAQC,eAAc,GAzIL,4CAAH,wDAkJlBlB,qBAAU,WACN,IAAKikB,GAAe,UAAe,CAC/B,IAAMhlB,EAAQglB,GAAe,MAC7B,GAAIhlB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAIrDF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACjCF,OAAOqO,OAAO/B,EAAK,OACnB,IACHnJ,SAAQ,SAACkoB,EAAKC,GACjB,GAAmB,kBAARD,EACPhK,GAAsBgK,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACpBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACThK,GAAsBgK,aAQ/C,CAACiG,KAIJjkB,qBAAU,WACN,GAAGshB,EAAkB,MAAYA,EAAkB,KAAlB,UAA0CA,EAAkB,KAAlB,SAAuCzuB,OAAS,EAAE,CACzH,IAAMkxB,EAAazC,EAAkB,KAAlB,SAAuCluB,KAAI,SAAAQ,GAC5D,OAAO,eACFA,EADL,CAEEU,GAAIV,EAAKW,SAGbyvB,GAAcD,GACd,IAAMf,EAAc1B,EAAkB,KAASzoB,SAASzF,KAAI,SAAAQ,GACxD,MAAO,CACHW,IAAKX,EAAKW,IACVgwB,UAAW3wB,EAAK2wB,UAChB7sB,SAAU9D,EAAK8D,SACf4E,WAAY1I,EAAK0I,eAG1B4mB,EAAeF,GAIlBzvB,QAAQC,IAAI,6BAA6B8tB,EAAkB,QAC7D,CAACA,EAAkB,OAMrBthB,qBAAU,WAEN,GAAI+jB,IAAcA,GAAWlxB,OAAS,GAAKmwB,GACvC,GAAIe,GAAWlxB,OAASmwB,EAAYnwB,OAAQ,CACxC,IAAM0xB,EAAYR,GAAWA,GAAWlxB,OAAS,GAA/B,SAAgDkxB,GAAWA,GAAWlxB,OAAS,GAA/B,QAA6CA,OAAS,GAAKkxB,GAAWA,GAAWlxB,OAAS,GAA/B,QAA6C,GAA7C,IAC7HU,QAAQC,IAAI,YAAa+wB,GAEzBrB,EAAe,GAAD,oBAAKF,GAAL,gBACPe,GAAWA,GAAWlxB,OAAS,GADxB,CAEV0B,IAAKwvB,GAAWA,GAAWlxB,OAAS,GAA/B,GACL0xB,UAAWA,EACX7sB,SAAU,YAKb,GAAIqsB,GAAWlxB,OAASmwB,EAAYnwB,OAAQ,CAC7CU,QAAQC,IAAI,aAAcuwB,IAC1BxwB,QAAQC,IAAI,cAAewvB,GAE3B,IAAM6B,EAAiB7B,EAAY7Q,QAAO,SAAAve,GACtC,IAAIkxB,GAAS,EAMb,OALAf,GAAWjuB,SAAQ,SAAAW,GACXA,EAAQnC,KAAOV,EAAKW,MACpBuwB,GAAS,MAGVA,KAEX5B,EAAe2B,SAKnB3B,EAAe,MAIpB,CAACa,KAQJ/jB,qBAAU,WAgBN,GAdImjB,GAAqBA,EAAkBjsB,MACvCkqB,GAAW+B,EAAkBjsB,MAAlB,IAGXkqB,GAAW,IAEX+B,GAAqBA,EAAkBhsB,MAAQgsB,EAAkBhsB,KAAKtE,OAAS,EAE/EqtB,GAAgBiD,EAAkBhsB,MAGlC+oB,GAAgB,IAGhBiD,GAAqBA,EAAkB9uB,UAAY8uB,EAAkB9uB,SAASxB,OAAS,EAAG,CAG1F,IAAMkyB,EAAc5B,EAAkB9uB,SACtC4tB,GAAmB8C,GACnBhD,GAAegD,QAGf9C,GAAmB,IAGnBkB,GAAqBA,EAAkB1qB,cAAgB0qB,EAAkB1qB,aACzE6rB,GAASnB,EAAkB1qB,cAG3B+qB,GAAW,IAKXL,GAAqBA,EAAkBpsB,MAAQosB,EAAkBpsB,KACjE0sB,GAAaN,EAAkBpsB,MAG/B0sB,GAAa,IAIbN,GAAqBA,EAAkBnsB,MAAQmsB,EAAkBnsB,KACjE0sB,GAAaP,EAAkBnsB,MAG/B0sB,GAAa,MAKlB,CAACP,IAIJnjB,qBAAU,WACN,GAAIshB,EAAmB/hB,MAAQ5M,OAAOC,KAAK0uB,GAAoBzuB,OAAS,EAAG,CAEvE,IAAM8K,EAAS2jB,EAAmBntB,KAAKa,MACnC2I,GAAUA,EAAO9K,OAAS,GAC1B4d,EAAY9S,GAGZ2jB,EAAmBntB,KAAKS,OAAS0sB,EAAmBntB,KAAKS,MAAxB,KAEjC6b,EAAY,CAAC6Q,EAAmBntB,KAAKS,OAA1B,oBAAoC+I,KAC/CpK,QAAQC,IAAI,SAAZ,CAAuB8tB,EAAmBntB,KAAKS,OAA/C,oBAAyD+I,KACzDub,GAAgBoI,EAAmBntB,KAAKS,MAAxB,QAGzB,CAAC0sB,IAGJthB,qBAAU,WACNzM,QAAQC,IAAI,WAAYmd,GAEpBA,GAAYA,EAAS,IAAMA,EAAS9d,OAAS,IAC7CU,QAAQC,IAAI,YAAamd,GAErBsI,KAAiBtI,EAAS,GAAGrc,KAC7B4kB,GAAgBvI,EAAS,GAAGrc,IAC5BklB,GAAyB7I,EAAS,QAK3C,CAACA,IAGJ,IAAM8I,GAAuB,uCAAG,WAAMnlB,GAAN,SAAA4L,EAAA,sEACtBmZ,EAAqC,CACvCrmB,WAAY,CACRE,aAAc,CACVwmB,QAASplB,EACTqlB,WAAY,UACZ3gB,OAAQmqB,EAAkB7uB,OANV,2CAAH,sDAcvBklB,GAAwB,uCAAG,WAAMxkB,GAAN,eAAAkL,EAAA,sEAEFoZ,EAAqC,CAC5DtmB,WAAY,CACRE,aAAc,CACVwmB,QAAS1kB,EAAMV,GACfqlB,WAAY,UACZ3gB,OAAQmqB,EAAkB7uB,OAPT,OAEvBslB,EAFuB,OAY7BrmB,QAAQC,IAAI,eAAgBomB,GAGxBA,GAAwC,OAAxBA,EAAa/hB,OAC7BwY,GAAwB,qBAkBxB2D,GAAsB,mDAlCG,2CAAH,sDA0C9BhU,qBAAU,WACN,IAAKojB,EAAkB,UAAe,CAClC,IAAMnkB,EAAQmkB,EAAkB,MAChC,GAAInkB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAIrDF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACjCF,OAAOqO,OAAO/B,EAAK,OACnB,IACHnJ,SAAQ,SAACkoB,EAAKC,GACjB,GAAmB,kBAARD,EACPhK,GAAsBgK,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACpBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACThK,GAAsBgK,aAQ/C,CAACoF,IAGJ,IAAM/I,GAAe,SAACpY,GAClB6V,GAAyB,IA2D7B,OAjBA9X,qBAAU,WAEN,GAAGshB,EAAmBntB,MAAQxB,OAAOC,KAAK0uB,EAAmBntB,MAAMtB,OAAS,GAAKyuB,EAAmBntB,KAAKsjB,SAAS,CAC9G,IAAMA,EAAW6J,EAAmBntB,KAAKsjB,SAAStkB,MAAM,KAExDI,QAAQC,IAAI,gBAAgBikB,GAE5B,IAAMC,EAAa4J,EAAmBntB,KAAK6lB,GAAxB,SAAuC7mB,MAAM,KAChE0wB,GAAYpM,GACZqM,GAAcpM,MAGpB,CAAC4J,EAAkB,OAMjB,kBAAC,IAAD,CACIjgB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,kBAGFwiB,EAHE,GAIA7B,EAAkB,MAAY3uB,OAAOC,KAAK0uB,EAAkB,MAAUzuB,OAAS,GAAKyuB,EAAkB,KAAlB,IAAoC,CACzHhK,YAAagK,EAAkB,KAAlB,GAAiCjK,UAC9CG,kBAAmB8J,EAAkB,KAAlB,GAAiC/J,gBACpDJ,OAAQmK,EAAkB,KAAlB,GAAiCtvB,KACzCyyB,SAAUnD,EAAkB,KAAlB,GAAiCzqB,KAC3CugB,cAAekK,EAAkB,KAAlB,GAAiC7sB,iBAK3D,gBACG+M,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIvP,MAAO,CACH2hB,IAAK,QAGTG,UAAW,CACPrS,OAAQ,EACRwG,QAAS,GAEbrE,MAAO,OACP/O,MAAM,iBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,WAKd,6BAASjpB,UAAU,2BACf,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,wCACX,oDAIA,yBAAKA,UAAW6O,EAAOhP,MAAQgP,EAAOhP,KAAKa,OAAS,EAAI,mBAAqB,aACzE,kBAAC6U,GAAA,EAAD,QAGR,yBAAKvV,UAAU,sCACf,kBAACf,EAAD,CAC5BI,MAAM,OACNE,MAAOsP,EAAOhP,KACdC,YAAa,WACbD,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgBuiB,GAAgBhlB,MAAhB,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgBuiB,GAAgBhlB,MAAhB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACAI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,0DACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgBuiB,GAAgBhlB,MAAhB,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgBuiB,GAAgBhlB,MAAhB,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAQjB,wBAAIzP,UAAU,mBAAd,eAIA,yBAAKI,MAAO,CACX4R,MAAO,OACPpC,SAAU,SAEV,kBAAC,KAAD,CACCijB,OAAQC,KACR9wB,KAAMM,GACNywB,OAAQ,SAAAF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAExCpzB,SAAU,SAAC6I,EAAOuqB,GACjB,IAAM7wB,EAAO6wB,EAAOG,UACpBxB,GAAexvB,IAEhBqiB,OAAQ,SAAC/b,EAAOuqB,GACfzxB,QAAQC,IAAI,QAASwxB,IAEtBpD,QAAS,SAACnnB,EAAOuqB,GAChBzxB,QAAQC,IAAI,SAAUwxB,OAKxB,yBAAKzyB,MAAO,CACX0V,UAAU,UAGZ,wBAAI9V,UAAU,mBAAd,kBAIA,yBAAKI,MAAO,CACX4R,MAAO,OACPpC,SAAU,SAEV,kBAAC,KAAD,CACCijB,OAAQC,KACR9wB,KAAMijB,GACN8N,OAAQ,SAAAF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAExCpzB,SAAU,SAAC6I,EAAOuqB,GACjB,IAAM7wB,EAAO6wB,EAAOG,UACpBvB,GAAiBzvB,IAElBqiB,OAAQ,SAAC/b,EAAOuqB,GACfzxB,QAAQC,IAAI,QAASwxB,IAEtBpD,QAAS,SAACnnB,EAAOuqB,GAChBzxB,QAAQC,IAAI,SAAUwxB,OA+BQ,yBAAKzyB,MAAO,CACR6a,aAAc,UAqClB,yBAAKjb,UAAU,yDACX,uCAGA,yBAAKA,UAAU,mEACX,yBAAKA,UAAU,wEACX,kBAACizB,GAAD,CACI5zB,MAAM,UACNE,MAAOiF,GAAMytB,QACbpyB,KAAK,UACLJ,SAAU,SAACqQ,GAAD,OAAOqiB,GAAS,eACnB3tB,GADkB,CAErBytB,QAASniB,EAAEzE,OAAO9L,aAM9B,yBAAKS,UAAU,yEAEX,kBAACizB,GAAD,CACI5zB,MAAM,QACNE,MAAOiF,GAAM0tB,MACbryB,KAAK,QACLJ,SAAU,SAACqQ,GAAD,OAAOqiB,GAAS,eACnB3tB,GADkB,CAErB0tB,MAAOpiB,EAAEzE,OAAO9L,iBA+E5C,yBAAKS,UAAU,kCAEnB,yBAAKA,UAAU,wCACX,qCAIA,kBAAC,KAAD,CACIkW,UAAU,OAAOjT,MAAO,uFACxB,uBAAGuT,KAAK,OACJ,kBAAC2S,GAAA,EAAD,SAK5C,yBACI/oB,MAAO,CACHiW,QAAS,QAEbrW,UAAU,gCACTmvB,EAAmBhiB,WAChB,yBAAK/M,MAAO,CACRiW,QAAS,WAET,kBAAC,KAAD,OAGP8Y,EAAmB/hB,MAChB,oCACKoR,GAEGA,EAAS9d,OAAS,GAAK8d,EAASvd,KAAI,SAAC4B,EAAO4T,GACxC,OACI,yBAAKzW,UAAU,sCACX,yBACIA,UAAU,kDACV+P,QAAS,WACLgX,GAAgBlkB,EAAMV,IACtBklB,GAAyBxkB,KAG7B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACI4M,QAAS,YAzaV,SAAC5N,GAExB,IAAMknB,EAAY7K,GAAYA,EAASwB,QAAO,SAAAnd,GAC1C,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GAoagBC,CAAmBzmB,EAAMV,IACzBmlB,GAAwBzkB,EAAMV,KAIlCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,QAIHoE,KAAiBjkB,EAAMV,KAInB2kB,IAA0B,IAAVrQ,IAHjB,0BAAMzW,UAAU,4CACZ,kBAAC2iB,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACI1f,MAAO,iBAEP,yBACI8M,QAAS,WACLsO,GAAW,GACXoN,IAAwB,GACxBD,IAA2B,IAE/BxrB,UAAU,4CAIV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACZ,kBAAC6kB,GAAA,EAAD,YAWxB,yBAAK7kB,UAAU,kCAEf,yBAAKA,UAAU,wCACX,yCAIA,kBAAC,KAAD,CACIkW,UAAU,OAAOjT,MAAO,sFACxB,uBAAGuT,KAAK,OACJ,kBAAC2S,GAAA,EAAD,SAIZ,yBAAKnpB,UAAU,sCAGf,kBAACf,EAAD,CACAI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACpC3V,GAAgBuiB,GAAgBhlB,MAAhB,gBAElBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACxC3V,GAAgBuiB,GAAgBhlB,MAAhB,gBAClBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,gBAIhB,kBAACxQ,EAAD,CACAI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACtC5V,GAAgBuiB,GAAgBhlB,MAAhB,kBAElBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cAC1C5V,GAAgBuiB,GAAgBhlB,MAAhB,kBAClBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,kBAIhB,kBAAC,GAAD,CACApQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC1C7V,GAAgBuiB,GAAgBhlB,MAAhB,sBAElBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC9C7V,GAAgBuiB,GAAgBhlB,MAAhB,sBAClBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,sBAIhB,kBAAC,GAAD,CACApQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC5C9V,GAAgBuiB,GAAgBhlB,MAAhB,wBAElBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAChD9V,GAAgBuiB,GAAgBhlB,MAAhB,wBAClBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,wBAIhB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASkO,GACT1sB,KAAMsgB,KAGN,yBAAKllB,MAAO,CACZ0V,UAAU,UAGV,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASmO,GACT3sB,KAAMugB,QAW0B,yBAAKvlB,UAAU,kCACX,yBAAKA,UAAU,qCAEX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,4CAIA,kBAAC,KAAD,CACIwV,MAAM,MACN4I,QAAS0T,GAAgBhlB,MAAhB,kBAAgDqkB,GAAYzwB,OAAS,GAC9EwV,UAAU,OAAOjT,MAAO,gCACxB,yBAAKjD,UAAamxB,GAAYzwB,OAAS,GAC/BoxB,GAAgBhlB,MAAhB,eAA2DglB,GAAgBhlB,MAAhB,eAA6C,kBAAoB,mBAA/E,aACjD,kBAACyI,GAAA,EAAD,SAKZ,yBAAKvV,UAAU,mDACX,kBAAC,GAAD,CACI8vB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,QAMhC,yBAAK5vB,UAAU,gCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,qCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CACI+tB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,QAK3B,yBAAK9tB,UAAU,kCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,sCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CAAQivB,WAAYA,WAa5C,kBAAC,GAAD,CACI5Q,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,UCznCnCsP,GA7FF,SAAC,GAGA,IAFVgE,EAES,EAFTA,cACAD,EACS,EADTA,WACS,EACqB/f,mBAAS,IAD9B,mBACF9F,EADE,KACOkiB,EADP,OAEoCpc,mBAAS,IAF7C,mBAEFqhB,EAFE,KAEcC,EAFd,OAG8BjlB,EAAe,GAAI,eAHjD,mBAGFggB,EAHE,KAGQC,EAHR,OAI8Ctc,oBAAS,GAJvD,mBAIFuhB,EAJE,UAMTvlB,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACaogB,EAAmB,CACxCttB,WAAY,CACRC,OAAQ,CACJiU,SAAU,QACVC,eAAgB,SALhB,QACNwZ,EADM,SAWMA,EAAW9tB,OAAS,IAE5B+tB,EAAaD,EAAWvtB,KAAI,SAACiH,GAC/B,OAAOA,EAAIrI,QAEfouB,EAAWQ,IAhBH,2CAAH,qDAqBbjL,KACD,IAIH3V,qBAAU,WAEN,GAAG+jB,GAAcA,EAAWlxB,OAAS,IAAM0yB,EAAsB,CAC7D,IAAMC,EAAczB,EAAW3wB,KAAI,SAACiH,GAChC,OAAOA,EAAI/F,MAGfgxB,EAAmBE,MAIzB,CAACzB,IAyBH,OACI,oCACI,kBAAC,KAAD,CAAU5hB,QAASke,EAAS/gB,WACvB+gB,EAAS9gB,MAAQ8gB,EAASlsB,KAAKtB,OAAS,GAAK,kBAAC,KAAD,CAC1C4R,KAAK,WACLhS,YAAY,kBACZf,MAAO2zB,EACPzzB,SA7BK,SAAC4zB,GAIlB,GAHAF,EAAmBE,GACnBjyB,QAAQC,IAAI,cAAcgyB,GAEtBnF,EAAS9gB,MAAQ8gB,EAASlsB,KAAKtB,OAAS,GAAK2yB,EAAY3yB,OAAS,EAAG,CACrE,IAAM4tB,EAAsB+E,EAAYpyB,KAAI,SAACQ,GACzC,IAAM8sB,EAAmBL,EAASlsB,KAAKof,MACnC,SAAC/a,GAAD,OAASA,EAAIxG,KAAKiZ,gBAAkBrX,EAAKqX,iBAE7C,GAAIyV,EACA,OAAOA,KAIfsD,EAAcvD,QAGduD,EAAc,KAaNzxB,MAAO,CAAE4R,MAAO,SAEfjG,EAAQiU,QAAO,SAAAsT,GAAC,OAAKJ,EAAe/xB,SAASmyB,MAAIryB,KAAI,SAAAQ,GAAI,OACtD,kBAAC,KAAOwV,OAAR,CAAe5U,IAAKZ,EAAMlC,MAAOkC,GAC5BA,UC2Ld8xB,GAxQa,SAAC,GAOf,IANV1C,EAMS,EANTA,YACAE,EAKS,EALTA,eACAyC,EAIS,EAJTA,UACAjuB,EAGS,EAHTA,SACA9D,EAES,EAFTA,KACA2wB,EACS,EADTA,UACS,EAGwClkB,EAC7C,GACA,qBALK,mBAGFihB,EAHE,KAGkBsE,EAHlB,OAOqB5hB,mBAAS,IAP9B,mBAOO6hB,GAPP,aAQyB7hB,oBAAS,GARlC,mBAQS8hB,GART,aASiC9hB,mBAAS,IAT1C,mBASF+hB,EATE,KASaC,EATb,OAU6ChiB,mBAASugB,GAVtD,mBAUF0B,EAVE,KAUmBC,EAVnB,KAcT3yB,QAAQC,IAAI,4BAA4B8tB,GAExCthB,qBAAU,WACN8lB,GAAa,GACS,uCAAG,4BAAA5lB,EAAA,sEACC0lB,EAAmB,CACrC5yB,WAAY,CACRE,aAAc,CACVoB,GAAIqxB,MAJK,OACflvB,EADe,OAUrBovB,EAAWpvB,GACXqvB,GAAa,GAXQ,2CAAH,oDAatBK,KACD,IAkBH,IAOMC,EAAoB,uCAAG,WAAO10B,GAAP,yBAAAwO,EAAA,yDACX,UAAVxO,EADqB,oBAEJ,IAAbgG,EAFiB,iDAUfkR,EAJsB,WACxB,OAAOoa,EAAY5vB,KAAI,SAAAQ,GAAI,OAAIA,EAAKW,OAAKP,QAAQ2xB,GAGvChB,GAER9Q,EAAclhB,OAAOmhB,OAAO,GAAIkP,EAAYpa,GAA9BjW,OAAA,IAAAA,CAAA,GAA2CiB,EAA3C,CAAiD8D,WAAYA,KAC3E2uB,EAbe,uBAaWrD,EAAYjvB,MAAM,EAAG6U,IAbhC,CAawCiL,GAbxC,aAawDmP,EAAYjvB,MAAM6U,EAAQ,KACvGsa,EAAemD,GAdM,wBAsBfzd,EAJsB,WACxB,OAAOoa,EAAY5vB,KAAI,SAAAQ,GAAI,OAAIA,EAAKW,OAAKP,QAAQ2xB,GAGvChB,GAER9Q,EAAclhB,OAAOmhB,OAAO,GAAIkP,EAAYpa,GAA9BjW,OAAA,IAAAA,CAAA,GAA2CiB,EAA3C,CAAiD8D,WAAYA,KAC3E2uB,EAzBe,uBAyBWrD,EAAYjvB,MAAM,EAAG6U,IAzBhC,CAyBwCiL,GAzBxC,aAyBwDmP,EAAYjvB,MAAM6U,EAAQ,KACvGsa,EAAemD,GA1BM,4CAAH,sDAgCpBC,EAAsC,SAACC,GACzC,IAAM70B,EAAQ,GAQd,OANsBiB,OAAOqO,OAAOulB,GACpBzwB,SAAQ,SAAA0wB,GAEpB90B,EAAMuE,KAAKuwB,MAGR90B,EAAMmC,KAAK,MA4BhB4yB,EAAiB7yB,GAAQjB,OAAOC,KAAKgB,GAAMf,OAAS,EAtBhC,SAACiE,GACvB,GAAIA,GAAWA,EAAQjE,OAAS,EAAG,CAC/B,IAAM4zB,EAAiB,GAevB,OAbA3vB,EAAQhB,SAAQ,SAAA4wB,GAEZ,GAAI/zB,OAAOqO,OAAO0lB,EAAYH,WAAW1zB,OAAS,GAAK6zB,EAAYnyB,IAAK,CACpE,IAAIoyB,EAAgB,CAChBj1B,MAAOg1B,EAAYnyB,IACnB/C,MAAM,GAAD,OAAK80B,EAAoCI,EAAYH,YAAc,KAG5EE,EAAexwB,KAAK0wB,OAKrBF,EAEN,OAAO,EAG8CG,CAAkBhzB,EAAKkD,SAAW,GAGhGvD,QAAQC,IAAI,iBAAkBizB,GA6C9B,OA3BAzmB,qBAAU,WAiBN,GAAIimB,EAAqB,CACrB,IAAMtvB,EAhBoB,SAACrC,GAC3B,IAAMwC,KAAUlD,GAAQjB,OAAOC,KAAKgB,GAAMf,OAAS,IAAIe,EAAKkD,QAC5D,GAAIA,EAAS,CACT,IAAM+vB,EAAY/vB,EAAQyc,MAAK,SAAAmT,GAAW,OAAIA,EAAYnyB,MAAQD,KAGlE,OAFAf,QAAQC,IAAI,YAAac,MAErBuyB,IAAaA,EAAUlwB,MAAMytB,WACtByC,EAAUlwB,MAAM0tB,OAChBjtB,SAASyvB,EAAUlwB,MAAM0tB,OAC1BwC,EAAUlwB,MAAM0tB,MAAQwC,EAAUlwB,MAAMytB,UAOxC0C,CAAsBb,GACpCD,EAAiBrvB,MAGtB,CAACsvB,IAIJ1yB,QAAQC,IAAI,gBAAiBuyB,GAEzB,oCAEKnyB,GAAQjB,OAAOC,KAAKgB,GAAMf,OAAS,GAChC,yBAAKV,UAAU,YAAYqC,IAAK,IAC5B,yBAAKrC,UAAU,6BACX,uBACI+P,QAAS,WACLkkB,EAAqB,SAEzBj0B,UAAU,qBAGd,uBAAGA,UAAU,eAAeuF,GAC5B,uBACIwK,QAAS,WACLkkB,EAAqB,UAEzBj0B,UAAU,wBAMlB,yBAEIoL,IAAK3J,EAAI,OAAaA,EAAI,MAC1B0B,IAAI,MACJ/C,MAAO,CACH4V,OAAQ,aAGhB,yBAAKhW,UAAU,kBACX,4BAGKyB,EAAI,MAET,4BAEKmyB,GAAiBnyB,EAAI,OAIzB6yB,GAAkBA,EAAe5zB,OAAS,GAAK4zB,EAAerzB,KAAI,SAAAiH,GAAG,OAClE,oCACI,0BACI6H,QAAS,kBA1FX,SAAC6kB,GAC3Bb,EAAuBa,GAEvB,IAIMne,EAHKoa,EAAY5vB,KAAI,SAAAQ,GAAI,OAAIA,EAAKW,OAAKP,QAAQ2xB,GAK/C9R,EAAclhB,OAAOmhB,OAAO,GAAIkP,EAAYpa,GAA9BjW,OAAA,IAAAA,CAAA,GAA2CiB,EAA3C,CAAiD8D,SAAU,KACzE2uB,EAAmB,uBAAOrD,EAAYjvB,MAAM,EAAG6U,IAA5B,CAAoCiL,GAApC,aAAoDmP,EAAYjvB,MAAM6U,EAAQ,KACvGsa,EAAemD,GA+E4BW,CAAsB3sB,EAAI3I,QACzCS,UAAW8zB,IAAwB5rB,EAAI3I,MAAQ,mDAAqD,wBACnG2I,EAAI7I,eCnM1By1B,GApCY,SAAC,GAGd,IAFV/D,EAES,EAFTA,eACAF,EACS,EADTA,YAEA,OACI,yBACIzwB,MAAO,CAEH20B,cAAe,QAEnB/0B,UAAU,6CACV,yBAAKA,UAAU,qDACV6wB,GAAeA,EAAYnwB,OAAS,GAAKmwB,EAAY5vB,KAAI,SAAAQ,GACtD,OAAO,kBAACuzB,GAAD,CACHjE,eAAgBA,EAChBF,YAAaA,EACb2C,UAAW/xB,EAAKW,IAChBmD,SAAU9D,EAAK8D,SACf9D,KAAMA,EACN2wB,UAAW3wB,EAAK2wB,iBAIrBvB,EAAYnwB,OAAS,IACpB,yBAAKN,MAAO,CACR2V,WAAY,SAEZ,kBAAC,GAAD,CAAO9S,MAAM,mBAAmBgR,OAAQ,UCC1D9F,IAFc8P,KAAZD,QAEiB5P,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,2CAInEyO,GAAgB,CAClB3O,KAAM,GACN6wB,YAAa,KACbnqB,UAAW,GACXC,QAAS,GACTlE,YAAa,GACb0iB,OAAQ,GACXC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAs4BEoL,GA13BO,SAAC,GAAwH,IAAtHjL,EAAqH,EAArHA,sBAAuBC,EAA8F,EAA9FA,yBAAuCiL,EAAuD,EAApEC,YAAyCC,EAA2B,EAA3CC,eAA2C,EAEzF7iB,EAAe,GAAI,aAFsE,mBAEnI4jB,EAFmI,KAElHC,EAFkH,OAG5GlgB,oBAAS,GAHmG,mBAGnIuM,EAHmI,KAG1HC,EAH0H,OAI1GxM,oBAAS,GAJiG,mBAInI2M,EAJmI,KAIzHF,EAJyH,OAK1FzM,oBAAS,GALiF,mBAKjH6M,GALiH,aAM5E7M,oBAAS,GANmE,mBAMnI4M,EANmI,KAM1G+M,EAN0G,OAOlF3Z,oBAAS,GAPyE,mBAOnI0M,EAPmI,KAO7GkN,EAP6G,OAQpG5Z,mBAAS,IAR2F,mBAQnIsf,EARmI,KAQtHvB,EARsH,OAS9G/d,mBAAS,IATqG,mBASnIuf,EATmI,KAS3HtD,EAT2H,OAU5Gjc,mBAAS,IAVmG,mBAUnIqd,EAVmI,KAU1HD,EAV0H,OAW5Gpd,mBAAS,IAXmG,mBAWnIlN,EAXmI,KAW1H0sB,EAX0H,OAYlGxf,mBAAS,IAZyF,oBAYnIiV,GAZmI,MAYrHC,GAZqH,SAa5FlV,mBAAS,IAbmF,qBAanIge,GAbmI,MAalHC,GAbkH,SAclGje,mBAAS,IAdyF,qBAcnImc,GAdmI,MAcrHD,GAdqH,SAexGlc,mBAAS,IAf+F,qCAgB5GA,mBAAS,KAhBmG,qCAiBpGA,mBAAS,KAjB2F,qBAiBnIvP,GAjBmI,MAiBtHkvB,GAjBsH,SAkBnG3f,mBAAS,IAlB0F,qBAkBtIoT,GAlBsI,MAkBvHwM,GAlBuH,SAmBtG5f,mBAAS,IAnB6F,qBAmBnI+f,GAnBmI,MAmBvHC,GAnBuH,SAoBpGhgB,mBAAS,IApB2F,qBAoBnIgf,GApBmI,MAoBtHE,GApBsH,SAqB9Glf,mBAAS,IArBqG,qBAqBtIyT,GArBsI,MAqB7HoM,GArB6H,SAsB1G7f,mBAAS,IAtBiG,qBAsBtI0T,GAtBsI,MAsB3HoM,GAtB2H,SAwBhH9f,mBAAS,CAC/BogB,QAAS,KACTC,MAAO,OA1B+H,qBAwBnI1tB,GAxBmI,MAwB5H2tB,GAxB4H,MAkCpIvjB,GAAY,uCAAG,WAAOC,EAAaC,GAApB,mBAAAf,EAAA,6DAEX2Z,EAAYlJ,EAAWA,EAASvd,KAAI,SAAA4B,GACtC,OAAOA,EAAMV,MACZ,GAELf,QAAQC,IAAI,cAAcwvB,IAEpBnqB,EAAWmqB,GAAYnwB,OAAS,EAAImwB,GAAY5vB,KAAI,SAAAqD,GACtD,MAAO,CACHlC,IAAKkC,EAAQlC,IACbgwB,UAAW9tB,EAAQ8tB,UACnB7sB,SAAUjB,EAAQiB,aAErB,GAdY,SAiBWwsB,EAAsB,CAC9CjsB,KAAM,CACFjG,KAAMgP,EAAOhP,KAAK8nB,OAClBzlB,SAAUivB,EACVnsB,KAAMosB,EACNrsB,MAAOmqB,EACP1qB,MAAOA,GACPlC,YAAaA,GACb+vB,MAAOxjB,EAAOwjB,MACd3tB,KAAMmK,EAAOnK,KACb7B,MAAO6kB,EACPhhB,WAEAwe,UAAWrW,EAAOqW,UAC9BE,gBAAiBvW,EAAOuW,gBACxBE,SAAUA,GAAS5jB,KAAK,KAGxBmmB,GAAI,CACH3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUC,GAAW7jB,KAAK,KAC1B7B,KAAMgP,EAAOmW,OAAO2C,OACpBjjB,KAAMmK,EAAOyjB,SACbhwB,YAAauM,EAAOoW,kBAzCA,QAiBXsN,EAjBW,SAkD6B,OAAzBA,EAAc7sB,SAC/BwY,GAAwB,kBACxB9c,QAAQC,IAAI,sBAAsBkxB,GAElCzB,EAAc,CAAC,aACX3uB,GAAIowB,EAAa,KAAW,GAC5BlwB,IAAKkwB,EAAa,KAAW,GAC7B1yB,KAAM0yB,EAAa,MAAY,GAC/BjwB,YAAaiwB,EAAa,aAAmB,IAE1CA,IANM,oBAOR3B,KACLjL,GAAyB,GAEzBrH,EAAY,IACZyI,GAAgB,IAChBsK,EAAW,IACXvD,EAAU,IACVC,GAAgB,IAChBkB,EAAW,IACXW,EAAe,IACfE,GAAmB,IACnBhhB,EAAQiZ,aAMZjZ,EAAQC,eAAc,GA9EL,2CAAH,wDAoFlB3N,QAAQC,IAAI,oBAAoBwvB,IAIhChjB,qBAAU,WACN,IAAKikB,EAAe,UAAe,CAC/B,IAAMhlB,EAAQglB,EAAe,MAC7B,GAAIhlB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAIrDF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACjCF,OAAOqO,OAAO/B,EAAK,OACnB,IACHnJ,SAAQ,SAACkoB,EAAKC,GACjB,GAAmB,kBAARD,EACPhK,GAAsBgK,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACpBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACThK,GAAsBgK,aAQ/C,CAACiG,IAMJjkB,qBAAU,WAEN,GAAI+jB,IAAcA,GAAWlxB,OAAS,GAAKmwB,IACvC,GAAIe,GAAWlxB,OAASmwB,GAAYnwB,OAAQ,CACxC,IAAM0xB,EAAYR,GAAWA,GAAWlxB,OAAS,GAA/B,SAAgDkxB,GAAWA,GAAWlxB,OAAS,GAA/B,QAA6CA,OAAS,GAAKkxB,GAAWA,GAAWlxB,OAAS,GAA/B,QAA6C,GAA7C,IAC7HU,QAAQC,IAAI,YAAa+wB,GAEzBrB,GAAe,GAAD,oBAAKF,IAAL,gBACPe,GAAWA,GAAWlxB,OAAS,GADxB,CAEV0B,IAAKwvB,GAAWA,GAAWlxB,OAAS,GAA/B,GACL0xB,UAAWA,EACX7sB,SAAU,YAKb,GAAIqsB,GAAWlxB,OAASmwB,GAAYnwB,OAAQ,CAC7CU,QAAQC,IAAI,aAAcuwB,IAC1BxwB,QAAQC,IAAI,cAAewvB,IAE3B,IAAM6B,EAAiB7B,GAAY7Q,QAAO,SAAAve,GACtC,IAAIkxB,GAAS,EAMb,OALAf,GAAWjuB,SAAQ,SAAAW,GACXA,EAAQnC,KAAOV,EAAKW,MACpBuwB,GAAS,MAGVA,KAEX5B,GAAe2B,SAMnB3B,GAAe,MAKpB,CAACa,KAOJ,IAAM1J,GAAe,SAACpY,GAClB6V,GAAyB,IAqF7B,OACI,kBAAC,IAAD,CACIzW,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIvP,MAAO,CACH2hB,IAAK,QAGTG,UAAW,CACPrS,OAAQ,EACRwG,QAAS,GAEbrE,MAAO,OACP/O,MAAM,iBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,WAKd,6BAASjpB,UAAU,2BACf,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,wCACX,oDAIA,yBAAKA,UAAW6O,EAAOhP,MAAQgP,EAAOhP,KAAKa,OAAS,EAAI,mBAAqB,aACzE,kBAAC6U,GAAA,EAAD,QAGR,yBAAKvV,UAAU,sCACf,kBAACf,EAAD,CAC5BI,MAAM,OACNE,MAAOsP,EAAOhP,KACdC,YAAa,WACbD,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgBuiB,EAAgBhlB,MAAhB,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgBuiB,EAAgBhlB,MAAhB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACAI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,0DACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgBuiB,EAAgBhlB,MAAhB,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgBuiB,EAAgBhlB,MAAhB,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAQjB,wBAAIzP,UAAU,mBAAd,eAIA,yBAAKI,MAAO,CACX4R,MAAO,OACPpC,SAAU,SAEV,kBAAC,KAAD,CACCijB,OAAQC,KACR9wB,KAAMM,GACNywB,OAAQ,SAAAF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAExCpzB,SAAU,SAAC6I,EAAOuqB,GACjB,IAAM7wB,EAAO6wB,EAAOG,UACpBxB,GAAexvB,IAEhBqiB,OAAQ,SAAC/b,EAAOuqB,GACfzxB,QAAQC,IAAI,QAASwxB,IAEtBpD,QAAS,SAACnnB,EAAOuqB,GAChBzxB,QAAQC,IAAI,SAAUwxB,OAKxB,yBAAKzyB,MAAO,CACX0V,UAAU,UAGZ,wBAAI9V,UAAU,mBAAd,kBAIA,yBAAKI,MAAO,CACX4R,MAAO,OACPpC,SAAU,SAEV,kBAAC,KAAD,CACCijB,OAAQC,KACR9wB,KAAMijB,GACN8N,OAAQ,SAAAF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAExCpzB,SAAU,SAAC6I,EAAOuqB,GACjB,IAAM7wB,EAAO6wB,EAAOG,UACpBvB,GAAiBzvB,IAElBqiB,OAAQ,SAAC/b,EAAOuqB,GACfzxB,QAAQC,IAAI,QAASwxB,IAEtBpD,QAAS,SAACnnB,EAAOuqB,GAChBzxB,QAAQC,IAAI,SAAUwxB,OAgCQ,yBAAKzyB,MAAO,CACR6a,aAAc,UAqClB,yBAAKjb,UAAU,yDACX,uCAGA,yBAAKA,UAAU,mEACX,yBAAKA,UAAU,wEACX,kBAACizB,GAAD,CACI5zB,MAAM,UACNE,MAAOiF,GAAMytB,QACbpyB,KAAK,UACLJ,SAAU,SAACqQ,GAAD,OAAOqiB,GAAS,eACnB3tB,GADkB,CAErBytB,QAASniB,EAAEzE,OAAO9L,aAM9B,yBAAKS,UAAU,yEAEX,kBAACizB,GAAD,CACI5zB,MAAM,QACNE,MAAOiF,GAAM0tB,MACbryB,KAAK,QACLJ,SAAU,SAACqQ,GAAD,OAAOqiB,GAAS,eACnB3tB,GADkB,CAErB0tB,MAAOpiB,EAAEzE,OAAO9L,iBAyC5C,yBAAKS,UAAU,kCACX,yBAAKA,UAAU,wCACX,wCAIA,yBAAKA,UAAW2E,GAAWA,EAAQjE,OAAS,EAAI,mBAAqB,aACjE,kBAAC6U,GAAA,EAAD,QAKR,yBAAKvV,UAAU,sCAEX,wBAAIA,UAAU,mBAAd,YAGA,kBAACi1B,GAAD,CACIpD,cAAeA,GACfD,WAAYA,KAGhB,yBAAKxxB,MAAO,CACR0V,UAAW,UAGf,wBAAI9V,UAAU,mBAAd,oBAIA,kBAACk1B,GAAD,CACIrE,YAAaA,GACbE,eAAgBA,OAQ5B,yBAAK/wB,UAAU,kCAEX,yBAAKA,UAAU,wCACX,qCAIA,kBAAC,KAAD,CACIkW,UAAU,OAAOjT,MAAO,uFACxB,uBAAGuT,KAAK,OACJ,kBAAC2S,GAAA,EAAD,SAIZ,yBAAKnpB,UAAU,sCACX,yBAAKA,UAAU,gCACVwe,GAEGA,EAAS9d,OAAS,GAAK8d,EAASvd,KAAI,SAAC4B,EAAO4T,GACxC,OACI,yBAAKzW,UAAU,sCACX,yBACIA,UAAU,kDACV+P,QAAS,kBAAMgX,GAAgBlkB,EAAMV,MAErC,yBAAKiJ,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACI4M,QAAS,kBA5a9C,SAAC5N,GAExB,IAAMknB,EAAY7K,GAAYA,EAASwB,QAAO,SAAAnd,GAC1C,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GAsa+DC,CAAmBzmB,EAAMV,KACxCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,QAIHoE,KAAiBjkB,EAAMV,KAInB2kB,IAA0B,IAAVrQ,IAHjB,0BAAMzW,UAAU,4CACZ,kBAAC2iB,GAAA,EAAD,WAYxB,kBAAC,KAAD,CACI1f,MAAO,iBAEP,yBACI8M,QAAS,WACLsO,GAAW,GACXoN,GAAwB,GACxBD,GAA2B,IAE/BxrB,UAAU,4CAIV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACZ,kBAAC6kB,GAAA,EAAD,YAaxB,yBAAK7kB,UAAU,kCAEnD,yBAAKA,UAAU,wCACX,yCAIA,kBAAC,KAAD,CACIkW,UAAU,OAAOjT,MAAO,sFACxB,uBAAGuT,KAAK,OACJ,kBAAC2S,GAAA,EAAD,SAIZ,yBAAKnpB,UAAU,sCAGf,kBAACf,EAAD,CACAI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACpC3V,GAAgBuiB,EAAgBhlB,MAAhB,gBAElBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACxC3V,GAAgBuiB,EAAgBhlB,MAAhB,gBAClBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,gBAIhB,kBAACxQ,EAAD,CACAI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACtC5V,GAAgBuiB,EAAgBhlB,MAAhB,kBAElBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cAC1C5V,GAAgBuiB,EAAgBhlB,MAAhB,kBAClBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,kBAIhB,kBAAC,GAAD,CACApQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC1C7V,GAAgBuiB,EAAgBhlB,MAAhB,sBAElBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC9C7V,GAAgBuiB,EAAgBhlB,MAAhB,sBAClBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,sBAIhB,kBAAC,GAAD,CACApQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC5C9V,GAAgBuiB,EAAgBhlB,MAAhB,wBAElBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAChD9V,GAAgBuiB,EAAgBhlB,MAAhB,wBAClBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,wBAIhB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASkO,GACT1sB,KAAMsgB,KAGN,yBAAKllB,MAAO,CACZ0V,UAAU,UAGV,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASmO,GACT3sB,KAAMugB,QAQ0B,yBAAKvlB,UAAU,kCACX,yBAAKA,UAAU,qCAEX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,4CAIA,kBAAC,KAAD,CACIwV,MAAM,MACN4I,QAAS0T,EAAgBhlB,MAAhB,kBAAgDqkB,EAAYzwB,OAAS,GAC9EwV,UAAU,OAAOjT,MAAO,gCACxB,yBAAKjD,UAAamxB,EAAYzwB,OAAS,GAC/BoxB,EAAgBhlB,MAAhB,eAA2DglB,EAAgBhlB,MAAhB,eAA6C,kBAAoB,mBAA/E,aACjD,kBAACyI,GAAA,EAAD,SAKZ,yBAAKvV,UAAU,mDACX,kBAAC,GAAD,CACI8vB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,OAMhC,yBAAK5vB,UAAU,gCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,qCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CACI+tB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,OAK3B,yBAAK9tB,UAAU,kCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,sCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CAAQivB,WAAYA,UAa5C,kBAAC,GAAD,CACI5Q,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,SCj3B1CpC,IAXiB/N,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAUzCqc,KAAxBD,QACA+N,IADwB9N,KAAhBC,YACG2P,IAAX9B,QAIFC,GAAU,SAAC,GAA0B,IAAxBnoB,EAAuB,EAAvBA,KAAMmzB,EAAiB,EAAjBA,WAAiB,EACRtjB,oBAAS,GADD,mBAC/BuM,EAD+B,KACtBC,EADsB,OAEoBxM,oBAAS,GAF7B,mBAE/BuY,EAF+B,KAERC,EAFQ,OAGSnc,EAAe,GAAI,gBAH5B,mBAGfknB,GAHe,WAKhC7gB,EAAUC,eAGV6gB,EAAe,uCAAG,WAAOlzB,GAAP,iBAAA4L,EAAA,sEACOqnB,EAAqB,CAC5Cv0B,WAAY,CACRE,aAAc,CACVoB,SAJQ,QACdmzB,EADc,SAYwB,OAAxBA,EAAa5vB,SAvDR4P,EAwDG,iBAvDhCD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,iBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAqDjC+f,EAAavzB,EAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAKU,KAAOA,KACnDgzB,EAAWI,IAfK,iCA3CI,IAACjgB,IA2CL,OAAH,sDAiCrB,OACI,oCACI,kBAAC,KAAD,CAMIyD,KAAK,QAEL8D,WAAY7a,GAGZ,kBAAC,GAAD,CACIiB,MAAM,GACNga,UAAU,QACV5a,IAAI,KACJ2P,MAAO,OAEPhS,UAAU,uBAEVkd,OAAQ,SAACza,EAAO0a,GAAR,OACJ,oCACI,yBACIpN,QAAS,WACLwE,EAAQzQ,KAAR,wBAA8BqZ,EAAOhb,KACrCkoB,EAAyBlN,IAE7B/R,IAAK3I,EAAOU,IAAI,YAAY/C,MAAO,CAC/B6T,OAAQ,OACRjC,MAAO,OACP0Y,UAAW,UACXrqB,aAAc,MACd2V,OAAQ,iBAM5B,kBAAC,GAAD,CACI/S,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACJ,oCAEI,wBACIpN,QAAS,WACLwE,EAAQzQ,KAAR,wBAA8BqZ,EAAOhb,KAErCkoB,EAAyBlN,IAE7B/c,MAAO,CACH0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAEX/R,OAQjB,kBAAC,GAAD,CACIhB,MAAM,QACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,yBAKd,kBAAC,GAAD,CACIiD,MAAM,UACNga,UAAU,eACV5a,IAAI,KACJrC,UAAU,yBAkCd,kBAAC,GAAD,CAEIA,UAAU,uBACViD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACJ,kBAAC,KAAD,CAAOpE,KAAK,UACR,uBAAGvC,KAAK,MACJ,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,qBAC3B,0BAAMjD,UAAU,WAAW+P,QAAS,WAChCsO,GAAW,GACXgM,EAAyBlN,KAEzB,kBAACyN,GAAA,EAAD,SAOZ,kBAAC,KAAD,CACI7H,UAAW,kBAAMsS,EAAgBlY,EAAOhb,KACxCc,MAAM,qBAAgBkf,OAAO,MAAMa,WAAW,MAC9C,0BACIhjB,UAAU,4BAEV,kBAAC4iB,GAAA,EAAD,aAavBwH,GAAyB,kBAACoL,GAAD,CACzB3E,YAAa7uB,EACb+uB,eAAgBoE,EAChBxP,yBAA0BtH,EAC1BqH,sBAAuBtH,EACvB4S,kBAAmB5G,MAsHjBqL,GA5GC,SAAC,GAAgB,qBAGC5jB,mBAAS,IAHX,mBAGrB6jB,EAHqB,KAGZP,EAHY,OAKWjnB,EAAe,GAAI,cAL9B,mBAKrBggB,EALqB,KAKXC,EALW,KAQ5BtgB,qBAAU,YACO,uCAAG,4BAAAE,EAAA,sEACOogB,EAAmB,CAClCttB,WAAW,CACPC,OAAQ,CACNiU,SAAU,QACVC,eAAgB,KAChB2gB,YAAa,aANX,OACN3wB,EADM,OAWZmwB,EAAWnwB,GAXC,2CAAH,qDAabwe,KACD,IAvByB,MA2B8B3R,oBAAS,GA3BvC,mBA2BrB6T,EA3BqB,KA2BEC,EA3BF,KAsD5B,OACI,oCAEI,yBAAK3lB,UAAU,yBACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uCAAd,WAIA,kBAAC,GAAD,CACIqrB,aAAa,EACbrrB,UAAU,qBACVM,YAAY,mBACZb,SAAU,SAAAqQ,GAAC,OAtBd,SAACvQ,GAClB,GAAI2uB,EAASlsB,KAAKtB,OAAS,EAAG,CAC1B,IAAMk1B,EAAa1H,EAASlsB,KAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBACvFqc,EAAWS,IAmBoBtK,CAAaxb,EAAEzE,OAAO9L,WAG7C,kBAAC,IAAD,CAEIS,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJ5C,YASJ,yBAAK3lB,UAAU,uCACVkuB,EAAS9gB,MAAQsoB,EAAQh1B,OAAS,GAAK,kBAAC,GAAD,CACpCy0B,WAAYA,EACZnzB,KAAM0zB,IACTxH,EAAS/gB,WAAa,kBAACoe,GAAD,MAGtB2C,EAAS9gB,QAAUsoB,EAAQh1B,OAAS,IACjC,yBAAKN,MAAO,CACR0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,kBAAkBO,MAAOmR,KAAMK,4BAMlE,kBAACwhB,GAAD,CACIhF,YAAa6E,EACb3E,eAAgBoE,EAChBzP,sBAAuBA,EACvBC,yBAA0BA,MCrVpCxX,IAFc8P,KAAZD,QAEiB5P,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,2CAInEyO,GAAgB,CAClB3O,KAAM,GACN6wB,YAAa,KACbnqB,UAAW,GACXC,QAAS,GACTlE,YAAa,GACb0iB,OAAQ,GACXC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAqqCEoL,GA1pCO,SAAC,GAAmF,IAAjFjL,EAAgF,EAAhFA,sBAAuBC,EAAyD,EAAzDA,yBAA0BqL,EAA+B,EAA/BA,kBAA+B,EAI9C9iB,EAAe,GAAI,iBAJ2B,mBAI9F+iB,EAJ8F,aAK9C/iB,EAAe,GAAI,iBAL2B,mBAK9FihB,EAL8F,KAK1E+B,EAL0E,OAMtBhjB,EAAe,GAAI,6BANG,mBAM9D8Y,GAN8D,aAO1B9Y,EAAe,GAAI,2BAPO,mBAOhE+Y,GAPgE,aAQlB/Y,EAAe,GAAI,+BARD,gCAStBA,EAAe,GAAI,8BATG,mBAS9DgZ,GAT8D,aAUtBhZ,EAAe,GAAI,6BAVG,mBAU9DiZ,GAV8D,aAahEtV,mBAAS,IAbuD,mBAa9Fgf,EAb8F,KAalFE,EAbkF,OAcvElf,oBAAS,GAd8D,mBAc9FuM,EAd8F,KAcrFC,EAdqF,OAerExM,oBAAS,GAf4D,mBAe9F2M,EAf8F,KAepFF,EAfoF,OAgBrDzM,oBAAS,GAhB4C,mBAgB5E6M,GAhB4E,aAiBvC7M,oBAAS,GAjB8B,mBAiB9F4M,EAjB8F,KAiBrE+M,EAjBqE,OAkB7C3Z,oBAAS,GAlBoC,oBAkB9F0M,GAlB8F,MAkBxEkN,GAlBwE,SAmB/D5Z,mBAAS,IAnBsD,qBAmB9Fsf,GAnB8F,MAmBjFvB,GAnBiF,SAoBzE/d,mBAAS,IApBgE,qBAoB9Fuf,GApB8F,MAoBtFtD,GApBsF,SAqBvEjc,mBAAS,IArB8D,qBAqB9Fqd,GArB8F,MAqBrFD,GArBqF,SAsBvEpd,mBAAS,IAtB8D,qBAsBrFwf,IAtBqF,gBAuB7Dxf,mBAAS,IAvBoD,qBAuB9FiV,GAvB8F,MAuBhFC,GAvBgF,SAwBvDlV,mBAAS,IAxB8C,qBAwB9Fge,GAxB8F,MAwB7EC,GAxB6E,SAyB7Dje,mBAAS,IAzBoD,qBAyB9Fmc,GAzB8F,MAyBhFD,GAzBgF,SA0BxElc,mBAAS,IA1B+D,qBA0BxFyf,IA1BwF,gBA2BxEzf,mBAAS,IA3B+D,qBA2BxF0f,IA3BwF,gBA4B/D1f,mBAAS,IA5BsD,qBA4B9FvP,GA5B8F,MA4BjFkvB,GA5BiF,SA6B9D3f,mBAAS,IA7BqD,qBA6BjGoT,GA7BiG,MA6BlFwM,GA7BkF,SA8BzE5f,mBAAS,IA9BgE,qBA8BjGyT,GA9BiG,MA8BxFoM,GA9BwF,SA+BrE7f,mBAAS,IA/B4D,qBA+BjG0T,GA/BiG,MA+BtFoM,GA/BsF,SAgC3D9f,mBAAS,IAhCkD,qCAiCnDA,mBAAS,MAjC0C,qCAkClDA,oBAAS,IAlCyC,qCAoClEA,mBAAS,KApCyD,qBAoC9F+f,GApC8F,MAoCnFC,GApCmF,SAwCpD3jB,EAAe,GAAI,gBAxCiC,qBAwC9F4jB,GAxC8F,MAwC7EC,GAxC6E,MA0CrGlkB,qBAAU,YACgB,uCAAG,sBAAAE,EAAA,sEACfmjB,EAAyB,CAC3BrwB,WAAY,CACRE,aAAc,CACVoB,GAAI6uB,EAAkB7uB,OAJb,2CAAH,qDAUtB6vB,KAED,CAAChB,IAvDiG,OA0D3Enf,mBAAS,CAC/BogB,QAAS,KACTC,MAAO,OA5D0F,qBA0D9F1tB,GA1D8F,MA0DvF2tB,GA1DuF,MAkE/FvjB,GAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAf,EAAA,yDAEX2Z,EAAYlJ,EAAWA,EAASvd,KAAI,SAAA4B,GACtC,OAAOA,EAAMV,MACZ,GAELf,QAAQC,IAAI,cAAcwvB,GAEpBnqB,EAAWmqB,EAAYnwB,OAAS,EAAImwB,EAAY5vB,KAAI,SAAAqD,GACtD,MAAO,CACHlC,IAAKkC,EAAQlC,IACbgwB,UAAW9tB,EAAQ8tB,UACnB7sB,SAAUjB,EAAQiB,aAErB,KAGGyrB,GAAqBxwB,OAAOC,KAAKuwB,GAAmBtwB,OAAS,GAjBpD,oBAkBHknB,EAAyB,GAE5BF,GAAaA,EAAUhnB,OAAS,GAC/BgnB,EAAU/jB,SAAQ,SAAA4jB,GACXyJ,GAAqBA,EAAiB,QACjCA,EAAiB,MAAU7vB,SAASomB,IACpCK,EAAuB9jB,KAAKyjB,SAOxCK,EAAuB,IAAMA,EAAuBlnB,OAAS,GA/BxD,iCAgCCsmB,EAAqC,CACvCnmB,WAAY,CACRE,aAAc,CACVymB,WAAY,UACZ3gB,OAAQmqB,EAAkB7uB,KAGlC2D,KAAM,CACFjD,MAAO+kB,KAxCV,oCA4CAA,EAAuB,IAAMA,EAAuBlnB,OAAS,GA5C7D,kCA6CCumB,EAAmC,CACrCpmB,WAAY,CACRE,aAAc,CACVwmB,QAASK,EAAuB,GAAGzlB,GACnCqlB,WAAY,UACZ3gB,OAAQmqB,EAAkB7uB,OAlDjC,yBA6DW4vB,GAAsB,CAC9ClxB,WAAY,CACRE,aAAc,CACVoB,GAAI6uB,EAAkB7uB,KAG9B2D,KAAM,CACFjG,KAAMgP,EAAOhP,KAAK8nB,OAClBzlB,SAAUivB,GACVnsB,KAAMosB,GACNrsB,MAAOmqB,GACP1qB,MAAOA,GACPlC,YAAaA,GACb+vB,MAAOxjB,EAAOwjB,MACd3tB,KAAMmK,EAAOnK,KACb7B,MAAO6kB,EACPhhB,WAEAwe,UAAWrW,EAAOqW,UAC9BE,gBAAiBvW,EAAOuW,gBACxBE,SAAUA,GAAS5jB,KAAK,KAGxBmmB,GAAI,CACH3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUC,GAAW7jB,KAAK,KAC1B7B,KAAMgP,EAAOmW,OAAO2C,OACpBjjB,KAAMmK,EAAOyjB,SACbhwB,YAAauM,EAAOoW,kBA1FA,SA6DXsN,EA7DW,SAoG6B,OAAzBA,EAAc7sB,SAC/BwY,GAAwB,kBAGxByH,GAAyB,GASzBrH,EAAY,IACZyI,GAAgB,IAChBsK,GAAW,IACXvD,GAAU,IACVC,GAAgB,IAChBkB,GAAW,IACXW,GAAe,IACfE,GAAmB,IACnBhhB,EAAQiZ,aAMZjZ,EAAQC,eAAc,GA/HL,4CAAH,wDAwIlBlB,qBAAU,WACN,IAAKikB,GAAe,UAAe,CAC/B,IAAMhlB,EAAQglB,GAAe,MAC7B,GAAIhlB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAIrDF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACjCF,OAAOqO,OAAO/B,EAAK,OACnB,IACHnJ,SAAQ,SAACkoB,EAAKC,GACjB,GAAmB,kBAARD,EACPhK,GAAsBgK,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACpBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACThK,GAAsBgK,aAQ/C,CAACiG,KAIJjkB,qBAAU,WACN,GAAGshB,EAAkB,MAAYA,EAAkB,KAAlB,UAA0CA,EAAkB,KAAlB,SAAuCzuB,OAAS,EAAE,CACzH,IAAMkxB,EAAazC,EAAkB,KAAlB,SAAuCluB,KAAI,SAAAQ,GAC5D,OAAO,eACFA,EADL,CAEEU,GAAIV,EAAKW,SAGbyvB,GAAcD,GACd,IAAMf,EAAc1B,EAAkB,KAASzoB,SAASzF,KAAI,SAAAQ,GACxD,MAAO,CACHW,IAAKX,EAAKW,IACVgwB,UAAW3wB,EAAK2wB,UAChB7sB,SAAU9D,EAAK8D,SACf4E,WAAY1I,EAAK0I,eAG1B4mB,EAAeF,GAIlBzvB,QAAQC,IAAI,6BAA6B8tB,EAAkB,QAC7D,CAACA,EAAkB,OAMrBthB,qBAAU,WAEN,GAAI+jB,IAAcA,GAAWlxB,OAAS,GAAKmwB,GACvC,GAAIe,GAAWlxB,OAASmwB,EAAYnwB,OAAQ,CACxC,IAAM0xB,EAAYR,GAAWA,GAAWlxB,OAAS,GAA/B,SAAgDkxB,GAAWA,GAAWlxB,OAAS,GAA/B,QAA6CA,OAAS,GAAKkxB,GAAWA,GAAWlxB,OAAS,GAA/B,QAA6C,GAA7C,IAC7HU,QAAQC,IAAI,YAAa+wB,GAEzBrB,EAAe,GAAD,oBAAKF,GAAL,gBACPe,GAAWA,GAAWlxB,OAAS,GADxB,CAEV0B,IAAKwvB,GAAWA,GAAWlxB,OAAS,GAA/B,GACL0xB,UAAWA,EACX7sB,SAAU,YAKb,GAAIqsB,GAAWlxB,OAASmwB,EAAYnwB,OAAQ,CAC7CU,QAAQC,IAAI,aAAcuwB,IAC1BxwB,QAAQC,IAAI,cAAewvB,GAE3B,IAAM6B,EAAiB7B,EAAY7Q,QAAO,SAAAve,GACtC,IAAIkxB,GAAS,EAMb,OALAf,GAAWjuB,SAAQ,SAAAW,GACXA,EAAQnC,KAAOV,EAAKW,MACpBuwB,GAAS,MAGVA,KAEX5B,EAAe2B,SAKnB3B,EAAe,MAIpB,CAACa,KAQJ/jB,qBAAU,WAgBN,GAdImjB,GAAqBA,EAAkBjsB,MACvCkqB,GAAW+B,EAAkBjsB,MAAlB,IAGXkqB,GAAW,IAEX+B,GAAqBA,EAAkBhsB,MAAQgsB,EAAkBhsB,KAAKtE,OAAS,EAE/EqtB,GAAgBiD,EAAkBhsB,MAGlC+oB,GAAgB,IAGhBiD,GAAqBA,EAAkB9uB,UAAY8uB,EAAkB9uB,SAASxB,OAAS,EAAG,CAG1F,IAAMkyB,EAAc5B,EAAkB9uB,SACtC4tB,GAAmB8C,GACnBhD,GAAegD,QAGf9C,GAAmB,IAGnBkB,GAAqBA,EAAkB1qB,cAAgB0qB,EAAkB1qB,aACzE6rB,GAASnB,EAAkB1qB,cAG3B+qB,GAAW,IAKXL,GAAqBA,EAAkBpsB,MAAQosB,EAAkBpsB,KACjE0sB,GAAaN,EAAkBpsB,MAG/B0sB,GAAa,IAIbN,GAAqBA,EAAkBnsB,MAAQmsB,EAAkBnsB,KACjE0sB,GAAaP,EAAkBnsB,MAG/B0sB,GAAa,MAKlB,CAACP,IAIJnjB,qBAAU,WACN,GAAIshB,EAAmB/hB,MAAQ5M,OAAOC,KAAK0uB,GAAoBzuB,OAAS,EAAG,CAEvE,IAAM8K,EAAS2jB,EAAmBntB,KAAKa,MACnC2I,GAAUA,EAAO9K,OAAS,GAC1B4d,EAAY9S,GAGZ2jB,EAAmBntB,KAAKS,OAAS0sB,EAAmBntB,KAAKS,MAAxB,KAEjC6b,EAAY,CAAC6Q,EAAmBntB,KAAKS,OAA1B,oBAAoC+I,KAC/CpK,QAAQC,IAAI,SAAZ,CAAuB8tB,EAAmBntB,KAAKS,OAA/C,oBAAyD+I,KACzDub,GAAgBoI,EAAmBntB,KAAKS,MAAxB,QAGzB,CAAC0sB,IAGJthB,qBAAU,WACNzM,QAAQC,IAAI,WAAYmd,GAEpBA,GAAYA,EAAS,IAAMA,EAAS9d,OAAS,IAC7CU,QAAQC,IAAI,YAAamd,GAErBsI,KAAiBtI,EAAS,GAAGrc,KAC7B4kB,GAAgBvI,EAAS,GAAGrc,IAC5BklB,GAAyB7I,EAAS,QAK3C,CAACA,IAGJ,IAAM8I,GAAuB,uCAAG,WAAMnlB,GAAN,SAAA4L,EAAA,sEACtBmZ,EAAqC,CACvCrmB,WAAY,CACRE,aAAc,CACVwmB,QAASplB,EACTqlB,WAAY,UACZ3gB,OAAQmqB,EAAkB7uB,OANV,2CAAH,sDAcvBklB,GAAwB,uCAAG,WAAMxkB,GAAN,eAAAkL,EAAA,sEAEFoZ,EAAqC,CAC5DtmB,WAAY,CACRE,aAAc,CACVwmB,QAAS1kB,EAAMV,GACfqlB,WAAY,UACZ3gB,OAAQmqB,EAAkB7uB,OAPT,OAEvBslB,EAFuB,OAY7BrmB,QAAQC,IAAI,eAAgBomB,GAGxBA,GAAwC,OAAxBA,EAAa/hB,OAC7BwY,GAAwB,qBAkBxB2D,GAAsB,mDAlCG,2CAAH,sDA0C9BhU,qBAAU,WACN,IAAKojB,EAAkB,UAAe,CAClC,IAAMnkB,EAAQmkB,EAAkB,MAChC,GAAInkB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAIrDF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACjCF,OAAOqO,OAAO/B,EAAK,OACnB,IACHnJ,SAAQ,SAACkoB,EAAKC,GACjB,GAAmB,kBAARD,EACPhK,GAAsBgK,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACpBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACThK,GAAsBgK,aAQ/C,CAACoF,IAGJ,IAAM/I,GAAe,SAACpY,GAClB6V,GAAyB,IA2D7B,OAjBA9X,qBAAU,WAEN,GAAGshB,EAAmBntB,MAAQxB,OAAOC,KAAK0uB,EAAmBntB,MAAMtB,OAAS,GAAKyuB,EAAmBntB,KAAKsjB,SAAS,CAC9G,IAAMA,EAAW6J,EAAmBntB,KAAKsjB,SAAStkB,MAAM,KAExDI,QAAQC,IAAI,gBAAgBikB,GAE5B,IAAMC,EAAa4J,EAAmBntB,KAAK6lB,GAAxB,SAAuC7mB,MAAM,KAChE0wB,GAAYpM,GACZqM,GAAcpM,MAGpB,CAAC4J,EAAkB,OAMjB,kBAAC,IAAD,CACIjgB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,kBAGFwiB,EAHE,GAIA7B,EAAkB,MAAY3uB,OAAOC,KAAK0uB,EAAkB,MAAUzuB,OAAS,GAAKyuB,EAAkB,KAAlB,IAAoC,CACzHhK,YAAagK,EAAkB,KAAlB,GAAiCjK,UAC9CG,kBAAmB8J,EAAkB,KAAlB,GAAiC/J,gBACpDJ,OAAQmK,EAAkB,KAAlB,GAAiCtvB,KACzCyyB,SAAUnD,EAAkB,KAAlB,GAAiCzqB,KAC3CugB,cAAekK,EAAkB,KAAlB,GAAiC7sB,iBAK3D,gBACG+M,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIvP,MAAO,CACH2hB,IAAK,QAGTG,UAAW,CACPrS,OAAQ,EACRwG,QAAS,GAEbrE,MAAO,OACP/O,MAAM,iBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,WAKd,6BAASjpB,UAAU,2BACf,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,wCACX,oDAIA,yBAAKA,UAAW6O,EAAOhP,MAAQgP,EAAOhP,KAAKa,OAAS,EAAI,mBAAqB,aACzE,kBAAC6U,GAAA,EAAD,QAGR,yBAAKvV,UAAU,sCACf,kBAACf,EAAD,CAC5BI,MAAM,OACNE,MAAOsP,EAAOhP,KACdC,YAAa,WACbD,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgBuiB,GAAgBhlB,MAAhB,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgBuiB,GAAgBhlB,MAAhB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACAI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,0DACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgBuiB,GAAgBhlB,MAAhB,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgBuiB,GAAgBhlB,MAAhB,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAQjB,wBAAIzP,UAAU,mBAAd,eAIA,yBAAKI,MAAO,CACX4R,MAAO,OACPpC,SAAU,SAEV,kBAAC,KAAD,CACCijB,OAAQC,KACR9wB,KAAMM,GACNywB,OAAQ,SAAAF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAExCpzB,SAAU,SAAC6I,EAAOuqB,GACjB,IAAM7wB,EAAO6wB,EAAOG,UACpBxB,GAAexvB,IAEhBqiB,OAAQ,SAAC/b,EAAOuqB,GACfzxB,QAAQC,IAAI,QAASwxB,IAEtBpD,QAAS,SAACnnB,EAAOuqB,GAChBzxB,QAAQC,IAAI,SAAUwxB,OAKxB,yBAAKzyB,MAAO,CACX0V,UAAU,UAGZ,wBAAI9V,UAAU,mBAAd,kBAIA,yBAAKI,MAAO,CACX4R,MAAO,OACPpC,SAAU,SAEV,kBAAC,KAAD,CACCijB,OAAQC,KACR9wB,KAAMijB,GACN8N,OAAQ,SAAAF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAExCpzB,SAAU,SAAC6I,EAAOuqB,GACjB,IAAM7wB,EAAO6wB,EAAOG,UACpBvB,GAAiBzvB,IAElBqiB,OAAQ,SAAC/b,EAAOuqB,GACfzxB,QAAQC,IAAI,QAASwxB,IAEtBpD,QAAS,SAACnnB,EAAOuqB,GAChBzxB,QAAQC,IAAI,SAAUwxB,OA+BQ,yBAAKzyB,MAAO,CACR6a,aAAc,UAqClB,yBAAKjb,UAAU,yDACX,uCAGA,yBAAKA,UAAU,mEACX,yBAAKA,UAAU,wEACX,kBAACizB,GAAD,CACI5zB,MAAM,UACNE,MAAOiF,GAAMytB,QACbpyB,KAAK,UACLJ,SAAU,SAACqQ,GAAD,OAAOqiB,GAAS,eACnB3tB,GADkB,CAErBytB,QAASniB,EAAEzE,OAAO9L,aAM9B,yBAAKS,UAAU,yEAEX,kBAACizB,GAAD,CACI5zB,MAAM,QACNE,MAAOiF,GAAM0tB,MACbryB,KAAK,QACLJ,SAAU,SAACqQ,GAAD,OAAOqiB,GAAS,eACnB3tB,GADkB,CAErB0tB,MAAOpiB,EAAEzE,OAAO9L,iBA+E5C,yBAAKS,UAAU,kCAEnB,yBAAKA,UAAU,wCACX,qCAIA,kBAAC,KAAD,CACIkW,UAAU,OAAOjT,MAAO,uFACxB,uBAAGuT,KAAK,OACJ,kBAAC2S,GAAA,EAAD,SAK5C,yBACI/oB,MAAO,CACHiW,QAAS,QAEbrW,UAAU,gCACTmvB,EAAmBhiB,WAChB,yBAAK/M,MAAO,CACRiW,QAAS,WAET,kBAAC,KAAD,OAGP8Y,EAAmB/hB,MAChB,oCACKoR,GAEGA,EAAS9d,OAAS,GAAK8d,EAASvd,KAAI,SAAC4B,EAAO4T,GACxC,OACI,yBAAKzW,UAAU,sCACX,yBACIA,UAAU,kDACV+P,QAAS,WACLgX,GAAgBlkB,EAAMV,IACtBklB,GAAyBxkB,KAG7B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACI4M,QAAS,YAzaV,SAAC5N,GAExB,IAAMknB,EAAY7K,GAAYA,EAASwB,QAAO,SAAAnd,GAC1C,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GAoagBC,CAAmBzmB,EAAMV,IACzBmlB,GAAwBzkB,EAAMV,KAIlCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,QAIHoE,KAAiBjkB,EAAMV,KAInB2kB,IAA0B,IAAVrQ,IAHjB,0BAAMzW,UAAU,4CACZ,kBAAC2iB,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACI1f,MAAO,iBAEP,yBACI8M,QAAS,WACLsO,GAAW,GACXoN,IAAwB,GACxBD,GAA2B,IAE/BxrB,UAAU,4CAIV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACZ,kBAAC6kB,GAAA,EAAD,YAaxB,yBAAK7kB,UAAU,kCAEf,yBAAKA,UAAU,wCACX,yCAIA,kBAAC,KAAD,CACIkW,UAAU,OAAOjT,MAAO,sFACxB,uBAAGuT,KAAK,OACJ,kBAAC2S,GAAA,EAAD,SAIZ,yBAAKnpB,UAAU,sCAGf,kBAACf,EAAD,CACAI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACpC3V,GAAgBuiB,GAAgBhlB,MAAhB,gBAElBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACxC3V,GAAgBuiB,GAAgBhlB,MAAhB,gBAClBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,gBAIhB,kBAACxQ,EAAD,CACAI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACtC5V,GAAgBuiB,GAAgBhlB,MAAhB,kBAElBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cAC1C5V,GAAgBuiB,GAAgBhlB,MAAhB,kBAClBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,kBAIhB,kBAAC,GAAD,CACApQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC1C7V,GAAgBuiB,GAAgBhlB,MAAhB,sBAElBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC9C7V,GAAgBuiB,GAAgBhlB,MAAhB,sBAClBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,sBAIhB,kBAAC,GAAD,CACApQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC5C9V,GAAgBuiB,GAAgBhlB,MAAhB,wBAElBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAChD9V,GAAgBuiB,GAAgBhlB,MAAhB,wBAClBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,wBAIhB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASkO,GACT1sB,KAAMsgB,KAGN,yBAAKllB,MAAO,CACZ0V,UAAU,UAGV,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASmO,GACT3sB,KAAMugB,QAW0B,yBAAKvlB,UAAU,kCACX,yBAAKA,UAAU,qCAEX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,4CAIA,kBAAC,KAAD,CACIwV,MAAM,MACN4I,QAAS0T,GAAgBhlB,MAAhB,kBAAgDqkB,GAAYzwB,OAAS,GAC9EwV,UAAU,OAAOjT,MAAO,gCACxB,yBAAKjD,UAAamxB,GAAYzwB,OAAS,GAC/BoxB,GAAgBhlB,MAAhB,eAA2DglB,GAAgBhlB,MAAhB,eAA6C,kBAAoB,mBAA/E,aACjD,kBAACyI,GAAA,EAAD,SAKZ,yBAAKvV,UAAU,mDACX,kBAAC,GAAD,CACI8vB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,QAMhC,yBAAK5vB,UAAU,gCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,qCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CACI+tB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,QAK3B,yBAAK9tB,UAAU,kCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,sCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CAAQivB,WAAYA,WAa5C,kBAAC,GAAD,CACI5Q,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,UCpoCnCuX,GAhEQ,SAAC,GAGV,IAFVtC,EAES,EAFTA,UACAjuB,EACS,EADTA,SAGMgP,EAAUC,eAFP,EAIwCtG,EAC7C,GACA,qBANK,mBAIFihB,EAJE,KAIkBsE,EAJlB,KA2BT,OAlBA5lB,qBAAU,YACgB,uCAAG,sBAAAE,EAAA,sEACf0lB,EAAmB,CACrB5yB,WAAY,CACRE,aAAc,CACVoB,GAAIqxB,MAJK,2CAAH,qDAUtBQ,KACD,IAGH5yB,QAAQC,IAAI,2BAA4B8tB,GAIpC,kBAAC,KAAD,CACI7B,UAAW,CAAEzP,KAAM,GACnB7N,QAASmf,EAAmBhiB,WAC3BgiB,EAAmBntB,MAAQxB,OAAOC,KAAK0uB,EAAmBntB,MAAMtB,OAAS,GACtE,oCACI,yBAAKV,UAAU,2BACX,yBACI+P,QAAS,kBAAMwE,EAAQzQ,KAAR,yBAA+B0vB,KAC9CxzB,UAAU,kCACV,yBAAKoL,IAAK+jB,EAAmBntB,KAAKS,OAAS0sB,EAAmBntB,KAAKS,MAAxB,MAAwCU,IAAI,MAE3F,yBAAKnD,UAAU,iCACX,wBACI+P,QAAS,kBAAMwE,EAAQzQ,KAAR,yBAA+B0vB,MAE7CrE,EAAmBntB,KAAKnC,MAE7B,4BACKsvB,EAAmBntB,KAAKwC,OAE7B,yCACee,QCwU5BwwB,IAtXiB3Z,KAAxBD,OAAwBC,KAAhBC,YACG2P,IAAX9B,OAOe,SAAC5V,GAAkB,IAAD,EACkBpG,EAAe,GAAI,gBADrC,mBAC9BihB,EAD8B,KACV+B,EADU,KAG/BpwB,EAASurB,eACT9X,EAAUC,eACVgf,EAAY1yB,EAAM,GALa,EAMe+Q,oBAAS,GANxB,mBAM9BmkB,EAN8B,KAMVC,EANU,KASrCpoB,qBAAU,YAEgB,uCAAG,sBAAAE,EAAA,sEACfmjB,EAAyB,CAC3BrwB,WAAY,CACRE,aAAc,CACVoB,GAAIqxB,MAJK,2CAAH,qDAUtBxB,KAED,CAACwB,IAKJpyB,QAAQC,IAAI,qBAAsB8tB,GAElC/tB,QAAQC,IAAI,cAAeP,GAE3B,IA+BMgsB,EAAMqC,EAAmB/hB,MAAQ+hB,EAAmBntB,MAAQmtB,EAAmBntB,KAAnB,MA/BvC,SAAC+qB,GACxB,IAAKA,EAAK,GAAI,OAAO,EACrBA,EAAOA,EAAK9rB,KAAI,SAAAQ,GAAI,OAAIA,EAAKgB,SAC7B,IAAMuqB,EAAU,GAEZC,EAAa,EACbC,EAAe,EAqBnB,OAlBAH,EAAKppB,SAAQ,SAAClC,EAAMgV,GACZwW,EAAa,GACTD,EAAQE,GACRF,EAAQE,GAAR,uBAA4BF,EAAQE,IAApC,CAAmDzrB,IAElDurB,EAAQE,GAAgB,CAACzrB,GAE9BwrB,GAA0B,EAC1BC,GAA8B,IAI9BD,EAAa,EACbC,EAAe,EACf9rB,QAAQC,IAAI,aAAc4rB,OAI3BD,EAI0FG,CAAmBgC,EAAmBntB,KAAnB,OAAoC,GAI5J,OADAZ,QAAQC,IAAI,eAAgB8tB,GAExB,yBAAKnvB,UAAU,wBAEX,yBAAKA,UAAU,iCACX,6CAICmvB,EAAmB/hB,MAAQ+hB,EAAmBntB,MAASxB,OAAOC,KAAK0uB,EAAmBntB,MAAMtB,OAAS,GAClG,oCACC,kBAACw1B,GAAD,CACKvQ,yBAA0BsQ,EAC3BvQ,sBAAuBsQ,EACpBhF,kBAAmB7B,EAAmBntB,OAGzC,kBAAC,IAAD,CACG+N,QAAS,kBAAMkmB,GAAsB,IACrC32B,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAHT,UAWb,kBAAC,KAAD,CACIyC,QAAM,EAACC,UAAW,CAAEzP,KAAM,GAC1B7N,QAASmf,EAAmBhiB,WAC3BgiB,EAAmB/hB,MAAQ+hB,EAAmBntB,QAAUxB,OAAOC,KAAK0uB,EAAmBntB,MAAMtB,OAAS,IACnG,kBAAC,KAAD,CAAO4B,YAAY,0BAA0BO,MAAOmR,KAAMK,yBAG7D8a,EAAmB/hB,MAAQ+hB,EAAmBntB,MAASxB,OAAOC,KAAK0uB,EAAmBntB,MAAMtB,OAAS,GAClG,oCACI,yBAAKV,UAAU,gCACX,yBAAKA,UAAU,mGACX,yBAAKoL,IAAK+jB,EAAmBntB,KAAnB,OAAoCmtB,EAAmBntB,KAAnB,YAA2CmB,IAAI,MAEjG,yBAAKnD,UAAU,qCACX,4BACKmvB,EAAmBntB,KAAnB,MAEL,4BACKmtB,EAAmBntB,KAAnB,OAGJmtB,EAAmBntB,KAAnB,aACG,4BACCmtB,EAAmBntB,KAAnB,aA2BJmtB,EAAmBntB,KAAnB,KACG,mCAEI,8BACKmtB,EAAmBntB,KAAnB,MAsBZmtB,EAAmBntB,KAAnB,UAAuCmtB,EAAmBntB,KAAnB,SAAoCtB,OAAS,GAChF,oCACG,0CAECyuB,EAAmBntB,KAAnB,SAAoCf,KAAI,SAAAoF,GACrC,OACI,0BACI0J,QAAS,kBAAMwE,EAAQzQ,KAAR,0BAAgCuC,EAAIlE,OAGlDkE,EAAIxG,aAahCsvB,EAAmBntB,KAAnB,MACG,oCACI,yBAAKhC,UAAU,iCACX,qCAKJ,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,gGACX,yBAAKoL,IAAK+jB,EAAmBntB,KAAnB,MAAmCmtB,EAAmBntB,KAAnB,KAAiCmB,IAAI,OAK1F,yBAAK/C,MAAO,CACR6a,aAAc,WAMzBkU,EAAmBntB,KAAnB,OAAoCmtB,EAAmBntB,KAAnB,MAAiCtB,OAAS,GAC3E,oCACI,yBAAKV,UAAU,iCACX,8CAKJ,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,kBACV8sB,GAAOtsB,OAAOC,KAAKqsB,GAAK7rB,KAAI,SAAA+b,GACzB,OACI,yBAAKhd,UAAU,qBACV8sB,EAAI9P,IAAW8P,EAAI9P,GAAQ/b,KAAI,SAAA6B,GAC5B,OAAO,yBAAKsI,IAAKtI,EAAK1C,MAAO,CACzB4R,MAAO,oBAcvC,yBAAK5R,MAAO,CACR6a,aAAc,WAKzBkU,EAAmBntB,KAAnB,OAAoCxB,OAAOC,KAAK0uB,EAAmBntB,KAAnB,OAAkCtB,OAAS,GACxF,oCACI,yBAAKV,UAAU,iCACX,sCAKJ,yBACI+P,QAAS,kBAAMwE,EAAQzQ,KAAR,uBAA6BqrB,EAAmBntB,KAAnB,YAE5ChC,UAAU,+BACV,yBAAKA,UAAU,wCACX,yBAAKoL,IAAK+jB,EAAmBntB,KAAnB,aAA6CmtB,EAAmBntB,KAAnB,YAA2CmB,IAAI,MAE1G,yBAAKnD,UAAU,oCACX,4BACKmvB,EAAmBntB,KAAnB,YAEL,4BACKmtB,EAAmBntB,KAAnB,qBAKb,yBAAK5B,MAAO,CACR6a,aAAc,WAMzBkU,EAAmBntB,KAAnB,iBAA8CxB,OAAOC,KAAK0uB,EAAmBntB,KAAnB,iBAA4CtB,OAAS,GAC5G,oCACI,yBAAKV,UAAU,iCACX,iDAKJ,yBACI+P,QAAS,kBAAMwE,EAAQzQ,KAAR,0BAAgCqrB,EAAmBntB,KAAnB,sBAC/ChC,UAAU,+BACV,yBAAKA,UAAU,wCACX,yBAAKoL,IAAK+jB,EAAmBntB,KAAnB,uBAAuDmtB,EAAmBntB,KAAnB,sBAAqDmB,IAAI,MAE9H,yBAAKnD,UAAU,oCACX,4BACKmvB,EAAmBntB,KAAnB,sBAEL,4BACKmtB,EAAmBntB,KAAnB,+BAKb,yBAAK5B,MAAO,CACR6a,aAAc,WAW7BkU,EAAmB/hB,MAAQ+hB,EAAmBntB,MAAQxB,OAAOC,KAAK0uB,EAAmBntB,MAAMtB,OAAS,GAAKyuB,EAAmBntB,KAAnB,UAClG,yBAAKhC,UAAU,iCACX,yCAQR,yBAAKA,UAAU,8BACVmvB,EAAmB/hB,MAAQ+hB,EAAmBntB,MAAQmtB,EAAmBntB,KAAnB,YAAyCmtB,EAAmBntB,KAAnB,SAAoCtB,OAAS,IACzI,yBAAKN,MAAO,CACR0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,qCAAqCO,MAAOmR,KAAMK,0BAI5E8a,EAAmB/hB,MAAQ+hB,EAAmBntB,MAAQxB,OAAOC,KAAK0uB,EAAmBntB,MAAMtB,OAAS,GACjG,oCACKyuB,EAAmBntB,KAAnB,UAAuCmtB,EAAmBntB,KAAnB,SAAoCtB,OAAS,GACjFyuB,EAAmBntB,KAAnB,SAAoCf,KAAI,SAAAqD,GACpC,OACI,kBAAC,GAAD,CACIiB,SAAUjB,EAAQiB,SAClBiuB,UAAWlvB,EAAO,gBC5VhE6J,GAAmBC,MAAaC,MAAM,CAC3CxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAchE8hB,GAAwB,SAACvM,GAC9BD,KAAavI,MAAM,CAClBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAKvChH,GAAgB,CACrB3O,KAAM,GACNmlB,OAAQ,GACR1iB,YAAa,GACb2iB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1iB,MAAO,GACPjC,IAAK,GACL6B,MAAO,IAkZO0zB,GArYK,SAAC,GAAyF,IAAvFzQ,EAAsF,EAAtFA,sBAAuBC,EAA+D,EAA/DA,yBAA0ByQ,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,aAA0B,EAEzDnoB,EAAe,GAAI,YAFsC,mBAErGooB,EAFqG,KAEnFC,EAFmF,OAG5E1kB,oBAAS,GAHmE,mBAGrG2M,EAHqG,KAG3FF,EAH2F,OAIpEzM,oBAAS,GAJ2D,mBAIrG2kB,EAJqG,KAIvFC,EAJuF,OAKpE5kB,mBAAS,IAL2D,mBAKrGiV,EALqG,KAKvFC,EALuF,OAMrFlV,mBAAS,IAN4E,mBAMrG7M,EANqG,KAMhGwe,EANgG,OAOjF3R,mBAAS,IAPwE,mBAOrG+U,EAPqG,KAO9FC,EAP8F,KAW5GzlB,QAAQC,IAAI,cAAcmd,GAC1B,IAAM5P,EAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAf,EAAA,6DAGd2Z,EAAYlJ,EAAWA,EAASvd,KAAI,SAAA4B,GACzC,OAAOA,EAAMV,MACT,GALe,SAQMo0B,EAAuB,CAEhDzwB,KAAM,CACLjG,KAAMgP,EAAOhP,KAAK8nB,OAClBrlB,YAAauM,EAAOvM,YACpBhD,KAAMuP,EAAOvP,KACbuD,MAAO6kB,EACPjlB,MAAOqkB,GAAgBY,EAAU,GAAKA,EAAU,GAAK,GACrDxC,UAAWrW,EAAOqW,UACNE,gBAAiBvW,EAAOuW,gBACpCE,SAAUtgB,EAAKtD,KAAK,KAGpBmmB,GAAI,CACH3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUsB,EAAOllB,KAAK,KACtB7B,KAAMgP,EAAOmW,OAAO2C,OACpBrlB,YAAauM,EAAOoW,kBA1BH,QAQdyR,EARc,SAgCsB,OAAvBA,EAAYhxB,QAxFA4P,OAyF9B4I,EAxFF7I,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,gBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAuF1C6gB,EAAa,CAAC,aACbl0B,GAAIu0B,EAAW,KAAW,GAC1Br0B,IAAKq0B,EAAW,KAAW,GAC3B72B,KAAM62B,EAAW,MAAY,GAC7Bp0B,YAAao0B,EAAW,aAAmB,GAC3Cj0B,MAAOi0B,EAAW,OAAa,IAE5BA,IAPQ,oBAQPN,KAELtnB,EAAQiZ,YACRpC,GAAyB,IAGzB9D,KAGD/S,EAAQC,eAAc,GApDF,iCAxDU,IAACuG,IAwDX,OAAH,wDA8DZ4S,EAAe,SAACpY,GACrB6V,GAAyB,IAsB1B,OACC,kBAAC,IAAD,CACCzW,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OAEAC,GANA,EAKAN,QALA,EAMAM,cACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCvP,MAAO,CACN2hB,IAAK,QAEN9e,MAAM,gBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACdhZ,QAAST,EACT0Z,SAAU,WAGX,kBAAChqB,EAAD,CACCI,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLC,YAAa,kBACbH,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgB+mB,EAAiBxpB,MAAjB,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgB+mB,EAAiBxpB,MAAjB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,sEACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgB+mB,EAAiBxpB,MAAjB,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgB+mB,EAAiBxpB,MAAjB,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAKlB,kBAAC,GAAD,CACCpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACdzC,KAAK,cACLS,YAAa,gBACbX,QAAU6P,EAAQlN,aAAegN,EAAOhN,cACrCiN,GAAgB+mB,EAAiBxpB,MAAjB,kBAEnBlN,YAAc4P,EAAQlN,aAAegN,EAAOhN,cACzCiN,GAAgB+mB,EAAiBxpB,MAAjB,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,iBACNE,MAAOsP,EAAOoW,cACd3kB,YAAa,yEACbT,KAAK,gBACLF,QAAU6P,EAAQyV,eAAiB3V,EAAO2V,gBACvC1V,GAAgB+mB,EAAiBxpB,MAAjB,oBAEnBlN,YAAc4P,EAAQyV,eAAiB3V,EAAO2V,gBAC3C1V,GAAgB+mB,EAAiBxpB,MAAjB,oBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBAIlB,yBACCrP,MAAO,CACN0V,UAAW,UAKb,yBAAK9V,UAAU,gCAEdI,MAAO,CACN6a,aAAc,SAGf,wBAAIjb,UAAU,mBAAd,WAGD,yBAAKA,UAAU,gCACbwe,GAEAA,EAAS9d,OAAS,GAAK8d,EAASvd,KAAI,SAAC4B,EAAO4T,GAC3C,OACC,yBAAKzW,UAAU,sCACd,yBACCA,UAAU,kDACV+P,QAAS,kBAAMgX,EAAgBlkB,EAAMV,MAErC,yBAAKiJ,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGnC,0BACC4M,QAAS,kBA/IM,SAAC5N,GAE3B,IAAMknB,EAAY7K,GAAYA,EAASwB,QAAO,SAAAnd,GAC7C,OAAOA,EAAMV,KAAOA,KAGrBmc,EAAY+K,GAyIcC,CAAmBzmB,EAAMV,KACxCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,QAIAoE,IAAiBjkB,EAAMV,KAInB2kB,GAA0B,IAAVrQ,IAHpB,0BAAMzW,UAAU,4CACf,kBAAC2iB,GAAA,EAAD,WAeJnE,KAEAA,GAAcA,GAAYA,EAAS9d,OAAS,GAiBzC,GAhBH,oCACA,kBAAC,KAAD,CACDuC,MAAO,iBAEP,yBACC8M,QAAS,WACR0mB,GAAgB,IAEjBz2B,UAAU,4CACV,kBAACupB,GAAA,EAAD,MACA,0BAAMvpB,UAAU,iDACf,kBAAC6kB,GAAA,EAAD,WAcJ,kBAAC5lB,EAAD,CACCI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACnC3V,GAAgB+mB,EAAiBxpB,MAAjB,gBAEnBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACvC3V,GAAgB+mB,EAAiBxpB,MAAjB,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACxQ,EAAD,CACCI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACrC5V,GAAgB+mB,EAAiBxpB,MAAjB,kBAEnBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cACzC5V,GAAgB+mB,EAAiBxpB,MAAjB,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACzC7V,GAAgB+mB,EAAiBxpB,MAAjB,sBAEnBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC7C7V,GAAgB+mB,EAAiBxpB,MAAjB,sBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC3C9V,GAAgB+mB,EAAiBxpB,MAAjB,wBAEnBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC/C9V,GAAgB+mB,EAAiBxpB,MAAjB,wBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASA,EACTxe,KAAMA,IAGN,yBAAK5E,MAAO,CACX0V,UAAU,UAGX,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASqD,EACT7hB,KAAM4hB,KAMP,kBAAC,GAAD,CACCvI,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCjavBpQ,GAAmBC,MAAaC,MAAM,CAC1CxO,KAAMuO,MACH/O,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAGNme,GAA0B,SAAC5I,GAC/BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,gBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAIzCqM,GAAwB,SAACvM,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAIzChH,GAAgB,CACpB3O,KAAM,GACNmlB,OAAQ,GACR1iB,YAAa,GACb2iB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1iB,MAAO,GACPjC,IAAK,GACL6B,MAAO,IAinBM0zB,GAtmBK,SAAC,GAMP,IALZQ,EAKW,EALXA,gBACAC,EAIW,EAJXA,iBACAC,EAGW,EAHXA,oBACAT,EAEW,EAFXA,UACAC,EACW,EADXA,aACW,EACwCnoB,EACjD,GACA,eAHS,mBACJooB,EADI,KACcC,EADd,OAKwCroB,EACjD,GACA,eAPS,mBAKJ4oB,EALI,KAKcC,EALd,OAaP7oB,EAAe,GAAI,6BAbZ,mBAYT8Y,GAZS,aAiBP9Y,EAAe,GAAI,2BAjBZ,mBAgBT+Y,GAhBS,aAqBP/Y,EAAe,GAAI,+BArBZ,gCAyBPA,EAAe,GAAI,8BAzBZ,mBAwBTgZ,GAxBS,aA6BPhZ,EAAe,GAAI,6BA7BZ,mBA4BTiZ,GA5BS,aA+B0BtV,oBAAS,GA/BnC,mBA+BJ2M,EA/BI,KA+BMF,EA/BN,OAgC6BzM,oBAAS,GAhCtC,mBAgCJ2kB,EAhCI,KAgCUC,EAhCV,OAiC6B5kB,mBAAS,IAjCtC,mBAiCJiV,EAjCI,KAiCUC,EAjCV,OAkCmClV,mBAAS,IAlC5C,mBAkCJmlB,EAlCI,KAkCaC,EAlCb,OAmCaplB,mBAAS,IAnCtB,oBAmCJ7M,GAnCI,MAmCEwe,GAnCF,SAoCiB3R,mBAAS,IApC1B,qBAoCJ+U,GApCI,MAoCIC,GApCJ,MAsCXhZ,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACQgpB,EAAuB,CAClDl2B,WAAY,CACVE,aAAc,CACZoB,GAAIw0B,EAAgBx0B,OAJL,yDAAH,qDAUpB+0B,KACC,CAACP,IAEJ9oB,qBAAU,WACR,GACEipB,EAAiB90B,MACjBxB,OAAOC,KAAKq2B,EAAiB90B,MAAMtB,OAAS,EAC5C,CACA,IAAM8K,EAASsrB,EAAiB90B,KAAKa,MACjC2I,GAAUA,EAAO9K,OAAS,IAC5B4d,EAAY9S,GACZyrB,EAAmBzrB,IAGjBsrB,EAAiB90B,KAAKS,OAASq0B,EAAiB90B,KAAKS,MAAtB,KAEjC6b,EAAY,CAACwY,EAAiB90B,KAAKS,QACnCskB,EAAgB+P,EAAiB90B,KAAKS,MAAtB,QAGnB,CAACq0B,EAAiB90B,OAErB6L,qBAAU,WAEJ2Q,GAAYA,EAAS,IAAMA,EAAS9d,OAAS,GAC3ComB,IAAiBtI,EAAS,GAAGrc,KAC/B4kB,EAAgBvI,EAAS,GAAGrc,IAC5BklB,GAAyB7I,EAAS,OAGrC,CAACA,IAEJ,IAAM8I,GAAuB,uCAAG,WAAOnlB,GAAP,SAAA4L,EAAA,sEACxBmZ,EAAqC,CACzCrmB,WAAY,CACVE,aAAc,CACZwmB,QAASplB,EACTqlB,WAAY,QACZ3gB,OAAQ8vB,EAAgBx0B,OANA,2CAAH,sDAYvBklB,GAAwB,uCAAG,WAAOxkB,GAAP,eAAAkL,EAAA,sEACJoZ,EAAqC,CAC9DtmB,WAAY,CACVE,aAAc,CACZwmB,QAAS1kB,EAAMV,GACfqlB,WAAY,QACZ3gB,OAAQ8vB,EAAgBx0B,OANC,QACzBslB,EADyB,SAYa,OAAxBA,EAAa/hB,OAC/BwY,GAAwB,qBAexB2D,GAAsB,mDA5BO,2CAAH,sDAgCxBjT,GAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAf,EAAA,yDACnB3M,QAAQC,IAAI,oBAAqBmd,KAE7BmY,GAAmBn2B,OAAOC,KAAKk2B,GAAiBj2B,OAAS,GAH1C,uBAKX8K,EACJgT,GAAYA,EAAS9d,OAAS,EAAI8d,EAASvd,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAM,IAE3D,IAAMqJ,EAAO9K,OAAS,GARhB,gCASTsmB,EAAqC,CACzCnmB,WAAY,CACVE,aAAc,CACZymB,WAAY,QACZ3gB,OAAQ8vB,EAAgBx0B,KAG5B2D,KAAM,CACJjD,MAAO2I,KAjBI,mCAoBNA,EAAO,IAAMA,EAAO9K,OAAS,GApBvB,kCAqBTumB,EAAmC,CACvCpmB,WAAY,CACVE,aAAc,CACZwmB,QAAS/b,EAAO,GAAGrJ,GACnBqlB,WAAY,QACZ3gB,OAAQ8vB,EAAgBx0B,OA1Bf,yBAiCUo0B,EAAuB,CAClD11B,WAAY,CACVE,aAAc,CACZoB,GAAIw0B,EAAgBx0B,KAGxB2D,KAAM,CACJjG,KAAMgP,EAAOhP,KAAK8nB,OAClBrlB,YAAauM,EAAOvM,eAzCL,SAiCb60B,EAjCa,SA8C6B,OAA1BA,EAAezxB,QACnCtE,QAAQC,IAAI,iBAAkB81B,GAE9Bd,EAAa,CAAC,eAEPM,EAFK,CAGRx0B,GAAIg1B,EAAc,IAAU,GAC5B90B,IAAK80B,EAAc,IAAU,GAC7Bt3B,KAAMs3B,EAAc,MAAY,GAChC70B,YAAa60B,EAAc,aAAmB,IAE3CA,IARK,oBAUPf,KAGLlY,GAAwB,kBACxB2Y,GAAoB,GAcpB/nB,EAAQiZ,aAERlG,KAGF/S,EAAQC,eAAc,GAlFH,4CAAH,wDAyFZmZ,GAAe,SAACpY,GACpB+mB,GAAoB,GACpBhQ,GAAU,IACVrD,GAAQ,IACRuD,EAAgB,IAChB0P,GAAgB,GAChBnY,GAAY,IAyCd,OApBAld,QAAQC,IAAI,WAAYmd,GAExB3Q,qBAAU,WACR,GAAI8oB,GAAmBn2B,OAAOC,KAAKk2B,GAAiBj2B,OAAS,EAAG,CAC9D,IAAM4kB,EACJqR,EAAgBrR,UAAYqR,EAAgBrR,SAAStkB,MAAM,KAE7DI,QAAQC,IAAI,gBAAiBikB,GAE7B,IAAMC,EACJoR,EAAgB9O,IAChB8O,EAAgB9O,GAAhB,UACA8O,EAAgB9O,GAAhB,SAA+B7mB,MAAM,KACvCwiB,GAAQ8B,GAAY,IACpBuB,GAAUtB,GAAc,OAEzB,IAEHnkB,QAAQC,IAAI,YAAas1B,GAGvB,kBAAC,IAAD,CACEznB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,GAERmoB,EAFQ,GAGPA,GACFn2B,OAAOC,KAAKk2B,GAAiBj2B,OAAS,GAAK,CACzCykB,YACEwR,EAAe,IACfA,EAAe,GAAOzR,WACtByR,EAAe,GAAOzR,UACxBG,kBACEsR,EAAe,IACfA,EAAe,GAAOvR,iBACtBuR,EAAe,GAAOvR,gBACxBJ,OACE2R,EAAe,IACfA,EAAe,GAAO92B,MACtB82B,EAAe,GAAO92B,KACxBolB,cACE0R,EAAe,IACfA,EAAe,GAAOr0B,aACtBq0B,EAAe,GAAOr0B,gBAI7B,gBACC+M,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEvP,MAAO,CACL2hB,IAAK,QAEP9e,MAAM,aACN8lB,gBAAgB,EAChB3K,QAASwY,EACT5U,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,WAGZ,kBAAChqB,EAAD,CACEI,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLC,YAAa,kBACbH,QACG6P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GAAgB+mB,EAAiBxpB,MAAjB,WAEpBlN,YACG4P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GAAgB+mB,EAAiBxpB,MAAjB,WAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACxQ,EAAD,CACEI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,sEACbD,KAAK,SACLF,QACG6P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GAAgB+mB,EAAiBxpB,MAAjB,aAEpBlN,YACG4P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GAAgB+mB,EAAiBxpB,MAAjB,aAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC,GAAD,CACEpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACdzC,KAAK,cACLS,YAAa,gBACbX,QACG6P,EAAQlN,aAAegN,EAAOhN,cAC7BiN,GACA+mB,EAAiBxpB,MAAjB,kBAEJlN,YACG4P,EAAQlN,aAAegN,EAAOhN,cAC7BiN,GACA+mB,EAAiBxpB,MAAjB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACEpQ,MAAM,iBACNE,MAAOsP,EAAOoW,cACd3kB,YAAa,yEACbT,KAAK,gBACLF,QACG6P,EAAQyV,eAAiB3V,EAAO2V,gBAC/B1V,GACA+mB,EAAiBxpB,MAAjB,oBAEJlN,YACG4P,EAAQyV,eAAiB3V,EAAO2V,gBAC/B1V,GACA+mB,EAAiBxpB,MAAjB,oBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,yBACErP,MAAO,CACL0V,UAAW,UAIf,yBACE9V,UAAU,gCACVI,MAAO,CACL6a,aAAc,SAGhB,wBAAIjb,UAAU,mBAAd,UAOF,yBAAKA,UAAU,gCACZ22B,GAAmBn2B,OAAOC,KAAKk2B,GAAiBj2B,OAAS,GACxD,oCACG8d,GAECA,EAAS9d,OAAS,GAClB8d,EAASvd,KAAI,SAAC4B,EAAO4T,GACnB,OACE,yBAAKzW,UAAU,sCACb,yBACEA,UAAU,kDACV+P,QAAS,WACPgX,EAAgBlkB,EAAMV,IACtBklB,GAAyBxkB,KAG3B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACE4M,QAAS,YAhNR,SAAC5N,GAE1B,IAAMknB,EACJ7K,GACAA,EAASwB,QAAO,SAACnd,GACf,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GAyMcC,CAAmBzmB,EAAMV,IACzBmlB,GAAwBzkB,EAAMV,KAEhCnC,UAAU,6CAEV,kBAAC0iB,GAAA,EAAD,QAGDoE,IAAiBjkB,EAAMV,KAKrB2kB,GACS,IAAVrQ,IALA,0BAAMzW,UAAU,4CACd,kBAAC2iB,GAAA,EAAD,WAcVnE,KAEDA,GAAcA,GAAYA,EAAS9d,OAAS,GAiB3C,GAhBA,oCACE,kBAAC,KAAD,CAASuC,MAAO,iBACd,yBACE8M,QAAS,WACP0mB,GAAgB,IAElBz2B,UAAU,4CAEV,kBAACupB,GAAA,EAAD,MACA,0BAAMvpB,UAAU,iDACd,kBAAC6kB,GAAA,EAAD,YAYhB,kBAAC5lB,EAAD,CACEI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QACG6P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GAAgB+mB,EAAiBxpB,MAAjB,gBAEpBlN,YACG4P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GAAgB+mB,EAAiBxpB,MAAjB,gBAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACxQ,EAAD,CACEI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QACG6P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACA+mB,EAAiBxpB,MAAjB,kBAEJlN,YACG4P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACA+mB,EAAiBxpB,MAAjB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACEpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QACG6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACA+mB,EAAiBxpB,MAAjB,sBAEJlN,YACG4P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACA+mB,EAAiBxpB,MAAjB,sBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACEpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QACG6P,EAAQ6V,mBAAqB/V,EAAO+V,oBACnC9V,GACA+mB,EAAiBxpB,MAAjB,wBAEJlN,YACG4P,EAAQ6V,mBAAqB/V,EAAO+V,oBACnC9V,GACA+mB,EAAiBxpB,MAAjB,wBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIzP,UAAU,mBAAd,+BAEA,kBAAC,GAAD,CAEEwjB,QAASA,GACTxe,KAAMA,KAGR,yBACE5E,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,wGAEA,kBAAC,GAAD,CAEEwjB,QAASqD,GACT7hB,KAAM4hB,MAIV,kBAAC,GAAD,CACEvI,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVwY,gBAAiBA,EACjBC,mBAAoBA,EACpB1Y,sBAAsB,SC1pB1BpC,GAAWC,KAAXD,OACA+N,GAAWjrB,IAAXirB,OA+BFC,GAAU,SAAC,GAA6C,IAA5CnoB,EAA2C,EAA3CA,KAAKq0B,EAAsC,EAAtCA,aAAavlB,EAAyB,EAAzBA,MAAyB,EAC5Be,oBAAS,GADmB,mBAClDuM,EADkD,KAC1CC,EAD0C,OAEAxM,oBAAS,GAFT,mBAElDuY,EAFkD,KAE5BC,EAF4B,OAGNnc,EAAe,GAAI,eAHb,mBAGhCkpB,GAHgC,aAINvlB,oBAAS,GAJH,mBAKnD0C,GALmD,UAKzCC,gBAIR6iB,EAAiB,uCAAG,WAAOl1B,GAAP,iBAAA4L,EAAA,sEACKqpB,EAAuB,CAClDv2B,WAAY,CACVE,aAAc,CACZoB,SAJkB,QAClBm1B,EADkB,SAUmB,OAA1BA,EAAe5xB,SA/CP4P,EAgDJ,gBA/C5BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,gBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BA6CnC+hB,EAAgBv1B,EAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAKU,KAAOA,KACtDk0B,EAAakB,IAbc,iCArCA,IAACjiB,IAqCD,OAAH,sDAkBzB,OACI,oCACA,kBAAC,KAAD,CAMAyD,KAAK,QAEL8D,WAAY7a,GAER,kBAAC,GAAD,CACFiB,MAAM,GACLga,UAAU,QACT5a,IAAI,KACJ2P,MAAO,OAERhS,UAAU,uBAEVkd,OAAQ,SAACza,EAAO0a,GAAR,OACP,oCACE,yBACEpN,QAAS,WAEPwE,EAAQzQ,KAAR,uBAA6BqZ,EAAOhb,KACpCkoB,EAAyBlN,IAE3B/R,IAAK3I,EAAOU,IAAI,YAAY/C,MAAO,CACjC6T,OAAQ,OACRjC,MAAO,OACP0Y,UAAW,UACXrqB,aAAc,MACd2V,OAAQ,iBAKhB,kBAAC,GAAD,CACC/S,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACP,oCAEE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,uBAA6BqZ,EAAOhb,KAEpCkoB,EAAyBlN,IAE3B/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAQT,kBAAC,GAAD,CACGhB,MAAM,cACNga,UAAU,cACV5a,IAAI,KACJrC,UAAU,yBAId,kBAAC,GAAD,CACIiD,MAAM,UACNga,UAAU,eACV5a,IAAI,KACJrC,UAAU,yBA+BpBgR,GAAS,gBAAgBF,IACf,kBAAC,GAAD,CAEK9Q,UAAU,uBACRiD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACR,uBAAGvC,KAAK,MACT,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,oBAChC,0BAAMjD,UAAU,WAAW+P,QAAS,WAClCsO,GAAW,GACXgM,EAAyBlN,KAE3B,kBAACyN,GAAA,EAAD,SAOC,kBAAC,KAAD,CAEA7H,UAAW,kBAAMsU,EAAkBla,EAAOhb,KAC1Cc,MAAM,qBAAgBkf,OAAO,MAAMa,WAAW,MAElD,0BACEhjB,UAAU,4BAEV,kBAAC4iB,GAAA,EAAD,aAiBhBwH,GAA2B,kBAACoN,GAAD,CAC5BpB,UAAWp0B,EACXq0B,aAAcA,EACdQ,oBAAqBxY,EACrBuY,iBAAkBxY,EAClBuY,gBAAiBvM,MAsJNxY,gBALS,SAAA3E,GAAK,MAAK,CAChC6D,MAAO7D,EAAM2D,eAIyB,KAAzBgB,EA1IM,SAAC,GAAoB,IAAnBd,EAAkB,EAAlBA,MAAkB,EAGNe,mBAAS,IAHH,mBAGhCukB,EAHgC,KAGtBC,EAHsB,OAMInoB,EAAe,GAAI,aANvB,mBAMhCmhB,EANgC,KAMpBoI,EANoB,KASvC5pB,qBAAU,YACM,uCAAG,4BAAAE,EAAA,sEACK0pB,EAAqB,CACzC52B,WAAW,CACTC,OAAQ,CACNiU,SAAU,QACVC,eAAgB,SALL,OACV0iB,EADU,OAUhBrB,EAAaqB,GAVG,2CAAH,qDAYflI,KACC,IAvBqC,MA2BkB3d,oBAAS,GA3B3B,mBA2BhC6T,EA3BgC,KA2BVC,EA3BU,KAsDxC,OACC,oCAIE,yBAAK3lB,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,SAKA,kBAAC,GAAD,CACEqrB,aAAa,EACbrrB,UAAU,qBACZM,YAAY,iBACZb,SAAU,SAAAqQ,GAAC,OAjCE,SAACvQ,GACpB,GAAG8vB,EAAWrtB,KAAKtB,OAAS,EAAG,CAC7B,IAAM62B,EAAelI,EAAWrtB,KAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBAC3Fud,EAAakB,IA8BMjM,CAAaxb,EAAEzE,OAAO9L,WAKpCyR,GAAS,gBAAgBF,IAC7B,kBAAC,IAAD,CAEK9Q,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJ7C,YAcK,yBAAK3lB,UAAU,uCAWxB,yBAAKA,UAAU,uCACTqvB,EAAWjiB,MAAQgpB,EAAU11B,OAAS,GAAK,kBAAC,GAAD,CAC5CoQ,MAAOA,EACLulB,aAAcA,EAChBr0B,KAAMo0B,IACL/G,EAAWliB,WAAa,kBAACoe,GAAD,MACxB8D,EAAWjiB,QAAUgpB,EAAU11B,OAAS,IAC9C,yBAAKN,MAAO,CACX0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,iBAAkBO,MAAOmR,KAAMK,4BAMlD,kBAAC,GAAD,CACMqR,sBAAuBA,EACvBC,yBAA0BA,EAC1B0Q,aAAcA,EACdD,UAAWA,QCvVfjoB,GAAmBC,MAAaC,MAAM,CAC1CxO,KAAMuO,MACH/O,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAGNme,GAA0B,SAAC5I,GAC/BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,gBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAIzCqM,GAAwB,SAACvM,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAIzChH,GAAgB,CACpB3O,KAAM,GACNmlB,OAAQ,GACR1iB,YAAa,GACb2iB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1iB,MAAO,GACPjC,IAAK,GACL6B,MAAO,IA0kBM0zB,GAhkBK,SAAC,GAKP,IAJZQ,EAIW,EAJXA,gBACAC,EAGW,EAHXA,iBACAC,EAEW,EAFXA,oBACAc,EACW,EADXA,mBACW,EACwCzpB,EACjD,GACA,eAHS,mBACJooB,EADI,KACcC,EADd,OAQProB,EAAe,GAAI,6BARZ,mBAOT8Y,GAPS,aAYP9Y,EAAe,GAAI,2BAZZ,mBAWT+Y,GAXS,aAgBP/Y,EAAe,GAAI,+BAhBZ,gCAoBPA,EAAe,GAAI,8BApBZ,mBAmBTgZ,GAnBS,aAwBPhZ,EAAe,GAAI,6BAxBZ,mBAuBTiZ,GAvBS,aA0B0BtV,oBAAS,GA1BnC,mBA0BJ2M,EA1BI,KA0BMF,EA1BN,OA2B6BzM,oBAAS,GA3BtC,mBA2BJ2kB,EA3BI,KA2BUC,EA3BV,OA4B6B5kB,mBAAS,IA5BtC,mBA4BJiV,EA5BI,KA4BUC,EA5BV,OA6BmClV,mBAAS,IA7B5C,mBA6BJmlB,EA7BI,KA6BaC,EA7Bb,OA8BaplB,mBAAS,IA9BtB,mBA8BJ7M,EA9BI,KA8BEwe,EA9BF,OA+BiB3R,mBAAS,IA/B1B,mBA+BJ+U,GA/BI,KA+BIC,GA/BJ,KAiCXhZ,qBAAU,WACR,GAAI8oB,GAAmBn2B,OAAOC,KAAKk2B,GAAiBj2B,OAAS,EAAG,CAC9D,IAAM8K,EAASmrB,EAAgB9zB,MAC3B2I,GAAUA,EAAO9K,OAAS,IAC5B4d,EAAY9S,GACZyrB,EAAmBzrB,IAGjBmrB,EAAgBl0B,OAASk0B,EAAgBl0B,MAAhB,KAE3B6b,EAAY,CAACqY,EAAgBl0B,QAC7BskB,EAAgB4P,EAAgBl0B,MAAhB,QAGnB,CAACk0B,IAEJ9oB,qBAAU,WAEJ2Q,GAAYA,EAAS,IAAMA,EAAS9d,OAAS,GAC3ComB,IAAiBtI,EAAS,GAAGrc,KAC/B4kB,EAAgBvI,EAAS,GAAGrc,IAC5BklB,GAAyB7I,EAAS,OAGrC,CAACA,IAEJ,IAAM8I,GAAuB,uCAAG,WAAOnlB,GAAP,SAAA4L,EAAA,sEACxBmZ,EAAqC,CACzCrmB,WAAY,CACVE,aAAc,CACZwmB,QAASplB,EACTqlB,WAAY,QACZ3gB,OAAQ8vB,EAAgBx0B,OANA,2CAAH,sDAYvBklB,GAAwB,uCAAG,WAAOxkB,GAAP,eAAAkL,EAAA,sEACJoZ,EAAqC,CAC9DtmB,WAAY,CACVE,aAAc,CACZwmB,QAAS1kB,EAAMV,GACfqlB,WAAY,QACZ3gB,OAAQ8vB,EAAgBx0B,OANC,QACzBslB,EADyB,SAYa,OAAxBA,EAAa/hB,OAC/BwY,GAAwB,qBAexB2D,GAAsB,mDA5BO,2CAAH,sDA2CxBjT,GAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAf,EAAA,yDACnB3M,QAAQC,IAAI,oBAAqBmd,KAE7BmY,GAAmBn2B,OAAOC,KAAKk2B,GAAiBj2B,OAAS,GAH1C,uBAKX8K,EACJgT,GAAYA,EAAS9d,OAAS,EAAI8d,EAASvd,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAM,IAE3D,IAAMqJ,EAAO9K,OAAS,GARhB,gCASTsmB,EAAqC,CACzCnmB,WAAY,CACVE,aAAc,CACZymB,WAAY,QACZ3gB,OAAQ8vB,EAAgBx0B,KAG5B2D,KAAM,CACJjD,MAAO2I,KAjBI,mCAoBNA,EAAO,IAAMA,EAAO9K,OAAS,GApBvB,kCAqBTumB,EAAmC,CACvCpmB,WAAY,CACVE,aAAc,CACZwmB,QAAS/b,EAAO,GAAGrJ,GACnBqlB,WAAY,QACZ3gB,OAAQ8vB,EAAgBx0B,OA1Bf,yBAiCUo0B,EAAuB,CAClD11B,WAAY,CACVE,aAAc,CACZoB,GAAIw0B,EAAgBx0B,KAGxB2D,KAAM,CACJjG,KAAMgP,EAAOhP,KAAK8nB,OAClBrlB,YAAauM,EAAOvM,eAzCL,SAiCb60B,EAjCa,SA8C6B,OAA1BA,EAAezxB,QACnCtE,QAAQC,IAAI,iBAAkB81B,GAC9BQ,EAAmB,eACdhB,EADa,GAGbQ,IAELjZ,KACA2Y,GAAoB,GAcpB/nB,EAAQiZ,aAERlG,KAGF/S,EAAQC,eAAc,GAzEH,4CAAH,wDAgFZmZ,GAAe,SAACpY,GACpB+mB,GAAoB,IA8BtB,OApBAz1B,QAAQC,IAAI,WAAYmd,GAExB3Q,qBAAU,WACR,GAAI8oB,GAAmBn2B,OAAOC,KAAKk2B,GAAiBj2B,OAAS,EAAG,CAC9D,IAAM4kB,EACJqR,EAAgBrR,UAAYqR,EAAgBrR,SAAStkB,MAAM,KAE7DI,QAAQC,IAAI,gBAAiBikB,GAE7B,IAAMC,EACJoR,EAAgB9O,IAChB8O,EAAgB9O,GAAhB,UACA8O,EAAgB9O,GAAhB,SAA+B7mB,MAAM,KACvCwiB,EAAQ8B,GAAY,IACpBuB,GAAUtB,GAAc,OAEzB,IAEHnkB,QAAQC,IAAI,YAAas1B,GAGvB,kBAAC,IAAD,CACEznB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,GAERmoB,EAFQ,GAGPA,GACFn2B,OAAOC,KAAKk2B,GAAiBj2B,OAAS,GAAK,CACzCykB,YACEwR,EAAe,IACfA,EAAe,GAAOzR,WACtByR,EAAe,GAAOzR,UACxBG,kBACEsR,EAAe,IACfA,EAAe,GAAOvR,iBACtBuR,EAAe,GAAOvR,gBACxBJ,OACE2R,EAAe,IACfA,EAAe,GAAO92B,MACtB82B,EAAe,GAAO92B,KACxBolB,cACE0R,EAAe,IACfA,EAAe,GAAOr0B,aACtBq0B,EAAe,GAAOr0B,gBAI7B,gBACC+M,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEvP,MAAO,CACL2hB,IAAK,QAEP9e,MAAM,aACNmb,QAASwY,EACT5U,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,WAGZ,kBAAChqB,EAAD,CACEI,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLC,YAAa,kBACbH,QACG6P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GAAgB+mB,EAAiBxpB,MAAjB,WAEpBlN,YACG4P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GAAgB+mB,EAAiBxpB,MAAjB,WAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACxQ,EAAD,CACEI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,sEACbD,KAAK,SACLF,QACG6P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GAAgB+mB,EAAiBxpB,MAAjB,aAEpBlN,YACG4P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GAAgB+mB,EAAiBxpB,MAAjB,aAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC,GAAD,CACEpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACdzC,KAAK,cACLS,YAAa,gBACbX,QACG6P,EAAQlN,aAAegN,EAAOhN,cAC7BiN,GACA+mB,EAAiBxpB,MAAjB,kBAEJlN,YACG4P,EAAQlN,aAAegN,EAAOhN,cAC7BiN,GACA+mB,EAAiBxpB,MAAjB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACEpQ,MAAM,iBACNE,MAAOsP,EAAOoW,cACd3kB,YAAa,yEACbT,KAAK,gBACLF,QACG6P,EAAQyV,eAAiB3V,EAAO2V,gBAC/B1V,GACA+mB,EAAiBxpB,MAAjB,oBAEJlN,YACG4P,EAAQyV,eAAiB3V,EAAO2V,gBAC/B1V,GACA+mB,EAAiBxpB,MAAjB,oBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,yBACErP,MAAO,CACL0V,UAAW,UAIf,yBACE9V,UAAU,gCACVI,MAAO,CACL6a,aAAc,SAGhB,wBAAIjb,UAAU,mBAAd,UAOF,yBAAKA,UAAU,gCACZ22B,GAAmBn2B,OAAOC,KAAKk2B,GAAiBj2B,OAAS,GACxD,oCACG8d,GAECA,EAAS9d,OAAS,GAClB8d,EAASvd,KAAI,SAAC4B,EAAO4T,GACnB,OACE,yBAAKzW,UAAU,sCACb,yBACEA,UAAU,kDACV+P,QAAS,WACPgX,EAAgBlkB,EAAMV,IACtBklB,GAAyBxkB,KAG3B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACE4M,QAAS,YA1SR,SAAC5N,GAE1B,IAAMknB,EACJ7K,GACAA,EAASwB,QAAO,SAACnd,GACf,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GAmScC,CAAmBzmB,EAAMV,IACzBmlB,GAAwBzkB,EAAMV,KAEhCnC,UAAU,6CAEV,kBAAC0iB,GAAA,EAAD,QAGDoE,IAAiBjkB,EAAMV,KAKrB2kB,GACS,IAAVrQ,IALA,0BAAMzW,UAAU,4CACd,kBAAC2iB,GAAA,EAAD,WAcVnE,KAEDA,GAAcA,GAAYA,EAAS9d,OAAS,GAiB3C,GAhBA,oCACE,kBAAC,KAAD,CAASuC,MAAO,iBACd,yBACE8M,QAAS,WACP0mB,GAAgB,IAElBz2B,UAAU,4CAEV,kBAACupB,GAAA,EAAD,MACA,0BAAMvpB,UAAU,iDACd,kBAAC6kB,GAAA,EAAD,YAYhB,kBAAC5lB,EAAD,CACEI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QACG6P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GAAgB+mB,EAAiBxpB,MAAjB,gBAEpBlN,YACG4P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GAAgB+mB,EAAiBxpB,MAAjB,gBAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACxQ,EAAD,CACEI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QACG6P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACA+mB,EAAiBxpB,MAAjB,kBAEJlN,YACG4P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACA+mB,EAAiBxpB,MAAjB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACEpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QACG6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACA+mB,EAAiBxpB,MAAjB,sBAEJlN,YACG4P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACA+mB,EAAiBxpB,MAAjB,sBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACEpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QACG6P,EAAQ6V,mBAAqB/V,EAAO+V,oBACnC9V,GACA+mB,EAAiBxpB,MAAjB,wBAEJlN,YACG4P,EAAQ6V,mBAAqB/V,EAAO+V,oBACnC9V,GACA+mB,EAAiBxpB,MAAjB,wBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIzP,UAAU,mBAAd,+BAEA,kBAAC,GAAD,CAEEwjB,QAASA,EACTxe,KAAMA,IAGR,yBACE5E,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,wGAEA,kBAAC,GAAD,CAEEwjB,QAASqD,GACT7hB,KAAM4hB,MAIV,kBAAC,GAAD,CACEvI,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVwY,gBAAiBA,EACjBC,mBAAoBA,EACpB1Y,sBAAsB,SCxmB1BpC,GAAwBC,KAAxBD,OAiSSvK,IAjSewK,KAAhBC,YACG2P,IAAX9B,OAgSStY,aALO,SAAA3E,GAAK,MAAK,CAC9B6D,MAAO7D,EAAM2D,eAIyB,KAAzBgB,EAzRM,SAAC,GAAoB,IAAnBd,EAAkB,EAAlBA,MAAkB,EACY5C,EAAe,GAAI,eAD/B,mBAChC4oB,EADgC,KACdC,EADc,OAEgB7oB,EAAe,GAAI,iBAFnC,mBAEhC0pB,EAFgC,KAEZC,EAFY,KAIjC/2B,EAASurB,eACT9X,EAAUC,eACV0a,EAAUpuB,EAAM,GANiB,EAOS+Q,oBAAS,GAPlB,mBAOhC+kB,EAPgC,KAOdC,EAPc,OAQOhlB,oBAAS,GARhB,mBAQhC8kB,EARgC,KAQfgB,EARe,KA6DvC,OAlDA9pB,qBAAU,YACc,uCAAG,4BAAAE,EAAA,sEACUgpB,EAAuB,CAChDl2B,WAAY,CACRE,aAAc,CACVoB,GAAI+sB,MAJG,QACb4I,EADa,SAYfH,EAAmBG,GAIvB12B,QAAQC,IAAI,iBAAiBy2B,GAhBV,2CAAH,qDAqBpBZ,KAED,CAAChI,IAEJrhB,qBAAU,YAEgB,uCAAG,sBAAAE,EAAA,sEACf8pB,EAAyB,CAC3Bh3B,WAAY,CACRE,aAAc,CACVoB,GAAI+sB,MAJK,2CAAH,qDAUtB6I,KAED,CAAC7I,IAKJ9tB,QAAQC,IAAI,qBAAsBu2B,GAElCx2B,QAAQC,IAAI,cAAeP,GAIvB,yBAAKd,UAAU,wBAKX,yBAAKA,UAAU,iCACX,4CAKC82B,EAAiB1pB,MAAQupB,GAAoBn2B,OAAOC,KAAKk2B,GAAiBj2B,OAAS,GAChF,oCACI,kBAACs3B,GAAD,CACIpB,iBAAkBA,EAClBC,oBAAqBA,EACrBF,gBAAiBA,EACjBgB,mBAAoBA,IAG/B3mB,GAAS,gBAAgBF,IACtB,kBAAC,IAAD,CACAf,QAAS,kBAAM8mB,GAAoB,IACnCv3B,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAHN,UAcR,kBAAC,KAAD,CACIyC,QAAM,EAACC,UAAW,CAAEzP,KAAM,GAC1B7N,QAAS8mB,EAAiB3pB,WACzB2pB,EAAiB1pB,MAAQupB,KAAqBn2B,OAAOC,KAAKk2B,GAAiBj2B,OAAS,IACjF,kBAAC,KAAD,CAAO4B,YAAY,iBAAiBO,MAAOmR,KAAMK,yBAGpDyiB,EAAiB1pB,MAAQupB,GAAoBn2B,OAAOC,KAAKk2B,GAAiBj2B,OAAS,GAChF,yBAAKV,UAAU,gCACX,yBAAKA,UAAU,+CACX,yBAAKoL,IAAKurB,EAAe,OAAaA,EAAe,MAAf,MAAmCxzB,IAAI,MAEjF,yBAAKnD,UAAU,qCACX,4BACK22B,EAAe,MAEpB,4BACKA,EAAe,aAGnBA,EAAe,KACZ,mCAEI,8BACKA,EAAe,SAW5C,yBAAK32B,UAAU,iCACX,yCAIJ,yBAAKA,UAAU,8BACV43B,EAAmBzqB,WAAa,kBAACoe,GAAD,MAChCqM,EAAmBxqB,QAAUwqB,EAAmB51B,KAAKtB,OAAS,IAC3D,yBAAKN,MAAO,CACR0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,oCAAoCO,MAAOmR,KAAMK,0BAI3EujB,EAAmBxqB,MAAQwqB,EAAmB51B,MAAQ41B,EAAmB51B,KAAKtB,OAAS,GACpF,oCACI,kBAAC,KAAD,CACIN,MAAO,CACHmtB,WAAY,OACZltB,aAAc,iBACdmtB,SAAU,SACVvb,UAAW,+FAOf8G,KAAK,QAEL8D,WAAY+a,EAAmB51B,KAC/B8a,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACHoV,MAAO,qBAMnB,kBAAC,GAAD,CACIvS,MAAM,GACNga,UAAU,QACV5a,IAAI,KACJ2P,MAAO,OAEPhS,UAAU,uBAEVkd,OAAQ,SAACza,EAAO0a,GAAR,OACJ,oCACI,yBACIpN,QAAS,WACLwE,EAAQzQ,KAAR,yBAA+BqZ,EAAOhb,MAE1CiJ,IAAK3I,EAAOU,IAAI,YAAY/C,MAAO,CAC/B6T,OAAQ,OACRjC,MAAO,OACP0Y,UAAW,UACXrqB,aAAc,MACd2V,OAAQ,iBAU5B,kBAAC,GAAD,CACI/S,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACJ,oCACI,wBACIpN,QAAS,WACLwE,EAAQzQ,KAAR,yBAA+BqZ,EAAOhb,MAE1C/B,MAAO,CACH0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGX/R,OASjB,kBAAC,GAAD,CACIhB,MAAM,cACNga,UAAU,aACV5a,IAAI,KACJrC,UAAU,yBAKd,kBAAC,GAAD,CACIiD,MAAM,QACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,yBAKd,kBAAC,GAAD,CACIiD,MAAM,YACNga,UAAU,YACV5a,IAAI,KACJrC,UAAU,yBAKd,kBAAC,GAAD,CACIiD,MAAM,UACNga,UAAU,UACV5a,IAAI,KACJrC,UAAU,iC,oBCvL3Bi4B,GApHE,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,iBAAkBC,EAA+B,EAA/BA,cAAe/D,EAAgB,EAAhBA,UAAgB,EACpBviB,mBAAS,IADW,mBAC5DumB,EAD4D,KAC1CC,EAD0C,KAE7DC,EAAoB/qB,EAAS,GAAI,GAAI,gBAAiB,IAFO,EAIzBsE,mBAAS,CACjDhS,KAAMu0B,EAAUv0B,KAChBN,MAAO60B,EAAU70B,QANgD,mBAI5Dg5B,EAJ4D,KAI7CC,EAJ6C,KASnE3qB,qBAAU,WACR,IAIM4I,EAHG0hB,EAAcl3B,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQuyB,EAAUjyB,IAK1Duf,EAAclhB,OAAOmhB,OAAO,GAAIwW,EAAc1hB,GAAhCjW,OAAA,IAAAA,CAAA,GACf+3B,IAECrE,EAAmB,uBACpBiE,EAAcv2B,MAAM,EAAG6U,IADH,CAEvBiL,GAFuB,aAGpByW,EAAcv2B,MAAM6U,EAAQ,KAEjCyhB,EAAiBhE,KAChB,CAACqE,IASJ1qB,qBAAU,WACR,GACEyqB,EAAkBt2B,MAClBxB,OAAOC,KAAK63B,EAAkBt2B,MAAMtB,OAAS,EAC7C,CACA,IACM+3B,EADUj4B,OAAOC,KAAK63B,EAAkBt2B,MACXf,KAAI,SAAC4X,GACtC,MAAO,CACLtZ,MAAOsZ,MAGXwf,EAAmBI,MAEpB,CAACH,EAAkBt2B,OA0BtB,OACE,oCACE,yBACEK,IAAK+xB,EAAUjyB,GACfnC,UAAU,wEAEV,yBACE+P,QArDsB,WAC5B,IAAMmkB,EAAsBiE,EAAcnY,QACxC,SAACve,GAAD,OAAUA,EAAKU,KAAOiyB,EAAUjyB,MAElC+1B,EAAiBhE,IAkDXl0B,UAAU,+EAEV,kBAAC4iB,GAAA,EAAD,OAGF,wBAAI5iB,UAAU,yBAAd,QACA,kBAAC,KAAD,CACET,MAAO60B,EAAUv0B,KACjBO,MAAO,CAAE4R,MAAO,QAChBjG,QAASqsB,EACT93B,YAAY,YACZb,SA3CsB,SAACF,GACzB+4B,GAAqB93B,OAAOC,KAAK63B,EAAkBt2B,MAAMtB,OAAS,EAChE43B,EAAkBt2B,KAAKzC,IACzBi5B,EAAiB,eACZpE,EADW,CAEdv0B,KAAMN,EACNA,MAAO+4B,EAAkBt2B,KAAKzC,MAIlCi5B,EAAiB,eACZpE,EADW,CAEdv0B,KAAMN,MAgCJoZ,aAAc,SAACwK,EAAYuV,GAAb,OAG8B,IAF1CA,EAAgBn5B,MACbo5B,cACA92B,QAAQshB,EAAWwV,kBAIzBvE,EAAUv0B,MACT,oCACE,yBAAKO,MAAO,CAAE0V,UAAW,UACzB,kBAACmd,GAAD,CACE5zB,MAAM,QACNE,MAAO60B,EAAU70B,MACjBM,KAAK,QACLJ,SAzCuB,SAACqQ,GAClC0oB,EAAiB,eACZpE,EADW,CAEd70B,MAAOuQ,EAAEzE,OAAO9L,gBC6OPq5B,GA3SC,SAAC,GAKH,IAJZC,EAIW,EAJXA,iBACAtE,EAGW,EAHXA,YACAuE,EAEW,EAFXA,oBACAC,EACW,EADXA,oBACW,EACelnB,mBAAS,CACjCogB,QAAS,GACTC,MAAO,KAHE,mBACJ1tB,EADI,KACGw0B,EADH,OAKennB,mBAAS,CACjC3M,UAAW,GACXC,QAAS,KAPA,mBAKJ8zB,EALI,KAKGC,EALH,OAU+BrnB,mBAAS,IAVxC,mBAUJsmB,EAVI,KAUWD,EAVX,KAYXrqB,qBAAU,WACR,GAAI0mB,GAAe/zB,OAAOC,KAAK8zB,GAAa7zB,OAAS,EAAG,CACtDs4B,EAAS,eACJx0B,EADG,GAEH+vB,EAAW,QAGhB2E,EAAS,eACJD,EADG,GAEH1E,EAAW,QAGhB,IAAM4E,EAAqB,GAC3B,GACE5E,EAAYH,WACZ5zB,OAAOC,KAAK8zB,EAAYH,WAAW1zB,OAAS,EAEtBF,OAAOC,KAAK8zB,EAAYH,WAChCzwB,SAAQ,SAACy1B,EAAc3iB,GACnC0iB,EAAmBr1B,KAAK,CACtBjE,KAAMu5B,EACN75B,MAAOg1B,EAAYH,UAAUgF,GAC7Bj3B,GAAIsU,OAKVyhB,EAAiBiB,MAElB,CAAC5E,IAEJnzB,QAAQC,IAAI,cAAekzB,GAC3BnzB,QAAQC,IAAI,gBAAiB82B,GAE7B,IAAMkB,EAAoB,SAACvpB,GACzB,IAAMjQ,EAAOiQ,EAAEzE,OAAOxL,KAChBN,EAAQuQ,EAAEzE,OAAO9L,MAEvBy5B,EAAS,eACJx0B,EADG,gBAEL3E,EAAON,MAIN+5B,EAAoB,SAACxpB,GACzB,IAAMjQ,EAAOiQ,EAAEzE,OAAOxL,KAChBN,EAAQuQ,EAAEzE,OAAO9L,MAEvB25B,EAAS,eACJD,EADG,gBAELp5B,EAAON,MA+GZ,OACE,oCACE,yBAAKS,UAAU,oDACb,yBAAKA,UAAU,yDACb,yBAAKA,UAAU,yDACb,qCACA,yBAAKA,UAAU,mEACb,yBAAKA,UAAU,wEACb,kBAACizB,GAAD,CACElzB,IAAK,EACLT,KAAK,SACLD,MAAM,aACNE,MAAOiF,EAAMytB,QACbpyB,KAAK,UACLJ,SAAU45B,KAGd,yBAAKr5B,UAAU,yEACb,kBAACizB,GAAD,CACElzB,IAAK,EACLT,KAAK,SACLyZ,KAAK,QACL1Z,MAAM,QACNE,MAAOiF,EAAM0tB,MACbryB,KAAK,QACLJ,SAAU45B,OAMlB,yBAAKr5B,UAAU,0DACb,yBAAKA,UAAU,yDACb,0CACA,yBAAKA,UAAU,mEACZm4B,EAAcl3B,KAAI,SAACmzB,GAClB,OACE,kBAACmF,GAAD,CACEnF,UAAWA,EACX+D,cAAeA,EACfD,iBAAkBA,OAIxB,kBAAC,IAAD,CACEnf,KAAK,QACLhJ,QAjEW,WACzBmoB,EAAiB,GAAD,oBACXC,GADW,CAEd,CACEt4B,KAAM,GACNN,MAAO,GACP4C,GAAG,GAAD,OAAKg2B,EAAcz3B,aA4DXN,MAAO,CACL4R,MAAO,QACPwnB,UAAW,OACX1jB,UAAW,MACXzV,aAAc,OAEhBf,KAAK,SACLsD,KAAM,kBAACiiB,GAAA,EAAD,OAVR,mBAiBJ,yBACEzkB,MAAO,CACL0V,UAAW,QAEb9V,UAAU,yDAEV,qCACA,yBAAKA,UAAU,mEACb,yBAAKA,UAAU,wEACb,kBAACizB,GAAD,CACElzB,IAAK,EACLT,KAAK,SACLD,MAAM,YACNE,MAAO05B,EAAM/zB,UACbrF,KAAK,YACLJ,SAAU65B,KAGd,yBAAKt5B,UAAU,yEACb,kBAACizB,GAAD,CACElzB,IAAK,EACLT,KAAK,SACLD,MAAM,UACNE,MAAO05B,EAAM9zB,QACbtF,KAAK,UACLJ,SAAU65B,UAkBxB,kBAAC,IAAD,CACEl5B,MAAO,CACL2V,WAAY,QAEdhG,QACEgpB,EA7KwB,SAACjpB,GAG/B,GAFAA,EAAE8U,iBAEEuT,EAAcz3B,OAAS,EAAG,CAC5B,IAAM0zB,EAAY,GADU,uBAG5B,YAAiB+D,EAAjB,+CAAgC,CAAC,IAAxB12B,EAAuB,QAC9BL,QAAQC,IAAI,kBAAmBI,GAC3BA,EAAI,OAAaA,EAAI,OACvB2yB,EAAU3yB,EAAI,MAAYA,EAAI,QANN,kFAU5B,IAAMizB,EAAY,CAChBlwB,MAAOA,EACPy0B,MAAOA,EACP7E,UAAWA,EACXjyB,GAAIoyB,EAAYpyB,IAGlB62B,EAAS,CACP/G,QAAS,GACTC,MAAO,KAETgH,EAAS,CAAEh0B,UAAW,GAAIC,QAAS,KACnC2zB,EAAoBpE,GACpBwD,EAAiB,QACZ,CACL,IAAMxD,EAAY,CAChBlwB,MAAOA,EACPy0B,MAAOA,EACP7E,UAAW,GACXjyB,GAAIoyB,EAAYpyB,IAGlB62B,EAAS,CACP/G,QAAS,GACTC,MAAO,KAETgH,EAAS,CAAEh0B,UAAW,GAAIC,QAAS,KACnC+yB,EAAiB,IACjBY,EAAoBpE,KApFE,SAAC5kB,GAGzB,GAFAA,EAAE8U,iBAEEuT,EAAcz3B,OAAS,EAAG,CAC5B,IAAM0zB,EAAY,GADU,uBAG5B,YAAiB+D,EAAjB,+CAAgC,CAAC,IAAxB12B,EAAuB,QAC9BL,QAAQC,IAAI,kBAAmBI,GAC3BA,EAAI,OAAaA,EAAI,OACvB2yB,EAAU3yB,EAAI,MAAYA,EAAI,QANN,kFAU5B,IAAMizB,EAAY,CAChBlwB,MAAOA,EACPy0B,MAAOA,EACP7E,UAAWA,GAGb4E,EAAS,CACP/G,QAAS,GACTC,MAAO,KAETgH,EAAS,CAAEh0B,UAAW,GAAIC,QAAS,KACnC0zB,EAAiBnE,GACjBwD,EAAiB,QACZ,CACL,IAAMxD,EAAY,CAChBlwB,MAAOA,EACPy0B,MAAOA,EACP7E,UAAW,IAGb4E,EAAS,CACP/G,QAAS,GACTC,MAAO,KAETgH,EAAS,CAAEh0B,UAAW,GAAIC,QAAS,KACnC+yB,EAAiB,IACjBW,EAAiBnE,KAmLfh1B,UAtHC8E,EAAMytB,QAuHPjyB,UAAU,gBACV4C,KAAM,kBAAC+f,GAAA,EAAD,OAELoW,EAAsB,iBAAmB,oBCpQ1C/a,GAAYC,KAAZD,QAEF7P,GAAmBC,MAAaC,MAAM,IAKtCG,GAAgB,CACrB3O,KAAM,GACNyC,YAAa,GACb+vB,MAAO,GACP3tB,KAAM,GACNutB,QAAS,GACTC,MAAO,GACPhtB,UAAW,GACXC,QAAS,GACTtC,MAAO,GACPjC,IAAK,GACL6B,MAAO,GACPkC,QAAS,GACTG,MAAO,GACPF,KAAM,GACNC,KAAM,GACN40B,cAAe,KACfC,OAAQ,GACR1U,OAAQ,GACRC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAu9BEoL,GA58BO,SAAC,GAA6F,IAA3FjL,EAA0F,EAA1FA,sBAAuBC,EAAmE,EAAnEA,yBAA0BkL,EAAyC,EAAzCA,YAAaE,EAA4B,EAA5BA,eAA4B,EAEjE7iB,EAAe,GAAI,cAF8C,mBAE3G4jB,EAF2G,KAE1FC,EAF0F,OAGpFlgB,oBAAS,GAH2E,mBAG3GuM,EAH2G,KAGlGC,EAHkG,OAIlFxM,oBAAS,GAJyE,mBAI3G2M,EAJ2G,KAIjGF,EAJiG,OAKlEzM,oBAAS,GALyD,mBAKzF6M,GALyF,aAMpD7M,oBAAS,GAN2C,mBAM3G4M,EAN2G,KAMlF+M,EANkF,OAO1D3Z,oBAAS,GAPiD,mBAO3G0M,EAP2G,KAOrFkN,EAPqF,OAQ5E5Z,mBAAS,IARmE,mBAQ3Gsf,EAR2G,KAQ9FvB,EAR8F,OAStF/d,mBAAS,IAT6E,mBAS3Guf,EAT2G,KASnGtD,EATmG,OAUpFjc,mBAAS,IAV2E,mBAU3Gqd,EAV2G,KAUlGD,EAVkG,OAWpFpd,mBAAS,IAX2E,mBAW3GlN,EAX2G,KAWlG0sB,EAXkG,OAY1Exf,mBAAS,IAZiE,oBAY3GiV,GAZ2G,MAY7FC,GAZ6F,SAapElV,mBAAS,IAb2D,qBAa3Gge,GAb2G,MAa1FC,GAb0F,SAc1Eje,mBAAS,IAdiE,qBAc3Gmc,GAd2G,MAc7FD,GAd6F,SAerFlc,mBAAS,IAf4E,qCAgBrFA,mBAAS,KAhB4E,qCAiB5EA,mBAAS,KAjBmE,qBAiB3GvP,GAjB2G,MAiB9FkvB,GAjB8F,SAkBxE3f,mBAAS,IAlB+D,qBAkB3GoT,GAlB2G,MAkB5FwM,GAlB4F,SAmBnF5f,mBAAS,IAnB0E,qBAmB3GyT,GAnB2G,MAmBlGoM,GAnBkG,SAoB/E7f,mBAAS,IApBsE,qBAoB3G0T,GApB2G,MAoBhGoM,GApBgG,SAqBrE9f,mBAAS,IArB4D,qBAqB3G8nB,GArB2G,MAqB3FC,GArB2F,SAsB7D/nB,mBAAS,KAtBoD,qBAsB3GgoB,GAtB2G,MAsBvFC,GAtBuF,SAuB5DjoB,oBAAS,GAvBmD,qBAuB3GknB,GAvB2G,MAuBtFgB,GAvBsF,MA+B5GnrB,GAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAf,EAAA,6DAEd2Z,EAAYlJ,EAAWA,EAASvd,KAAI,SAAA4B,GACzC,OAAOA,EAAMV,MACT,GAJe,SAMQ4vB,EAAsB,CAEjDjsB,KAAM,CACLjG,KAAMgP,EAAOhP,KAAK8nB,OAClBrlB,YAAaA,GACb+vB,MAAOxjB,EAAOwjB,MACd3tB,KAAMmK,EAAOnK,KACbxC,SAAUivB,EACVnsB,KAAMosB,EACNrsB,MAAOmqB,EACPrsB,MAAO6kB,EACPjlB,MAAOqkB,IAAgBY,EAAU,GAAKA,EAAU,GAAK,GACrD/iB,QAASA,EACTugB,UAAWrW,EAAOqW,UAClBE,gBAAiBvW,EAAOuW,gBACxBE,SAAUA,GAAS5jB,KAAK,KAGxBmmB,GAAI,CACH3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUC,GAAW7jB,KAAK,KAC1B7B,KAAMgP,EAAOmW,OAAO2C,OACpBjjB,KAAMmK,EAAOyjB,SACbhwB,YAAa2iB,OA9BI,QAMdsN,EANc,SAqC0B,OAAzBA,EAAc7sB,SAClCwY,GAAwB,mBACxByH,GAAyB,GAEzBoL,EAAe,CAAC,eAEZwB,EAFU,CAGbpwB,GAAIowB,EAAa,KAAW,GAC5BlwB,IAAKkwB,EAAa,KAAW,GAC7B1yB,KAAM0yB,EAAa,MAAY,GAC/BjwB,YAAaiwB,EAAa,aAAmB,GAC7C9vB,MAAO8vB,EAAa,OAAa,MAPpB,oBAQT1B,KAELvS,EAAY,IACZyI,GAAgB,IAChBsK,EAAW,IACXvD,EAAU,IACVC,GAAgB,IAChBkB,EAAW,IACXW,EAAe,IACfE,GAAmB,IACnBhhB,EAAQiZ,aAMTjZ,EAAQC,eAAc,GAjEF,2CAAH,wDAwElBlB,qBAAU,WACT,IAAKikB,EAAe,UAAe,CAClC,IAAMhlB,EAAQglB,EAAe,MAC7B,GAAIhlB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAI3DF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACpCF,OAAOqO,OAAO/B,EAAK,OACnB,IACGnJ,SAAQ,SAACkoB,EAAKC,GACpB,GAAmB,kBAARD,EACVhK,GAAsBgK,QAElB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACvBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACZhK,GAAsBgK,aAQ1B,CAACiG,IAGJ,IAAM5J,GAAe,SAACpY,GACrB6V,GAAyB,IA0CpBkT,GAAmB,SAACnE,GAEzBrD,EAAW,CAAC,eACRqD,EADM,CAETvyB,GAAIwC,EAAQjE,UAFH,oBAGJiE,KACN2Q,KAAQ8a,KAAK,0BAIR0I,GAAsB,SAACpE,GAE5B,IAIQje,EAHA9R,EAAQ1D,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQ6yB,EAAUvyB,IAM/Cuf,EAAclhB,OAAOmhB,OAAO,GAAIhd,EAAQ8R,GAA1BjW,OAAA,IAAAA,CAAA,GAAuCk0B,IACrDsF,EAAiB,uBAAOr1B,EAAQ/C,MAAM,EAAG6U,IAAxB,CAAgCiL,GAAhC,aAAgD/c,EAAQ/C,MAAM6U,EAAQ,KAE7F4a,EAAW2I,GAEb1kB,KAAQ8a,KAAK,2BACb2J,IAAuB,GACvBD,GAAuB,MA4CxB,OAFA14B,QAAQC,IAAI,cAAcsD,GAGzB,kBAAC,IAAD,CACCuK,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OAEAC,GANA,EAKAN,QALA,EAMAM,cACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCvP,MAAO,CACN2hB,IAAK,QAGNG,UAAW,CACVrS,OAAQ,EACRwG,QAAS,GAEVrE,MAAO,OACP/O,MAAM,kBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACdhZ,QAAST,EACT0Z,SAAU,WAKX,6BAASjpB,UAAU,2BAClB,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,wCACd,qDAIA,yBAAKA,UAAW6O,EAAOhP,MAAQgP,EAAOhP,KAAKa,OAAS,EAAI,mBAAqB,aAC5E,kBAAC6U,GAAA,EAAD,QAGF,yBAAKvV,UAAU,sCACd,kBAACf,EAAD,CACCI,MAAM,OACNE,MAAOsP,EAAOhP,KACdC,YAAa,WACbD,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgBuiB,EAAgBhlB,MAAhB,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgBuiB,EAAgBhlB,MAAhB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACAI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,0DACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgBuiB,EAAgBhlB,MAAhB,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgBuiB,EAAgBhlB,MAAhB,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAqEjB,kBAACxQ,EAAD,CACCI,MAAM,OACNE,MAAOsP,EAAOnK,KACd7E,KAAK,OACFC,YAAa,cAChBH,QAAU6P,EAAQ9K,MAAQ4K,EAAO5K,OAC9B6K,GAAgBuiB,EAAgBhlB,MAAhB,WAEnBlN,YAAc4P,EAAQ9K,MAAQ4K,EAAO5K,OAClC6K,GAAgBuiB,EAAgBhlB,MAAhB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAKlB,kBAACxQ,EAAD,CACAI,MAAM,UACNE,MAAOsP,EAAO6qB,OACd55B,YAAa,0DACbD,KAAK,SACLF,QAAU6P,EAAQkqB,QAAUpqB,EAAOoqB,SAChCnqB,GAAgBuiB,EAAgBhlB,MAAhB,aAEnBlN,YAAc4P,EAAQkqB,QAAUpqB,EAAOoqB,SACpCnqB,GAAgBuiB,EAAgBhlB,MAAhB,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAKjB,kBAACxQ,EAAD,CACCI,MAAM,eACNE,MAAOsP,EAAOwjB,MACdxyB,KAAK,QACLF,QAAU6P,EAAQ6iB,OAAS/iB,EAAO+iB,QAC/B9iB,GAAgBuiB,EAAgBhlB,MAAhB,YAEnBlN,YAAc4P,EAAQ6iB,OAAS/iB,EAAO+iB,QACnC9iB,GAAgBuiB,EAAgBhlB,MAAhB,YACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,YAKlB,wBAAIzP,UAAU,mBAAd,eAIA,yBAAKI,MAAO,CACX4R,MAAO,OACPpC,SAAU,SAEV,kBAAC,KAAD,CACCijB,OAAQC,KACR9wB,KAAMM,GACNywB,OAAQ,SAAAF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAExCpzB,SAAU,SAAC6I,EAAOuqB,GACjB,IAAM7wB,EAAO6wB,EAAOG,UACpBxB,GAAexvB,IAEhBqiB,OAAQ,SAAC/b,EAAOuqB,GACfzxB,QAAQC,IAAI,QAASwxB,IAEtBpD,QAAS,SAACnnB,EAAOuqB,GAChBzxB,QAAQC,IAAI,SAAUwxB,OAKxB,yBAAKzyB,MAAO,CACX0V,UAAU,UAGZ,wBAAI9V,UAAU,mBAAd,kBAIA,yBAAKI,MAAO,CACX4R,MAAO,OACPpC,SAAU,SAEV,kBAAC,KAAD,CACCijB,OAAQC,KACR9wB,KAAMijB,GACN8N,OAAQ,SAAAF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAExCpzB,SAAU,SAAC6I,EAAOuqB,GACjB,IAAM7wB,EAAO6wB,EAAOG,UACpBvB,GAAiBzvB,IAElBqiB,OAAQ,SAAC/b,EAAOuqB,GACfzxB,QAAQC,IAAI,QAASwxB,IAEtBpD,QAAS,SAACnnB,EAAOuqB,GAChBzxB,QAAQC,IAAI,SAAUwxB,SAc3B,yBAAK7yB,UAAU,kCACd,yBAAKA,UAAU,wCACd,iDAIA,yBAAKA,UAAW2E,GAAWA,EAAQjE,OAAS,EAAI,mBAAqB,aACpE,kBAAC6U,GAAA,EAAD,QAKF,yBAAKvV,UAAU,sCAEd,kBAAC,KAAD,CACCi6B,UAAU,EACVC,YAAY,MACZ56B,KAAK,OACL66B,UAAWN,GACXp6B,SAAU,SAACF,GACVu6B,GAAuB,GAAD,OAAIv6B,MAI3B,kBAAC,GAAD,CAAS8iB,IAAI,gBAAgBhgB,IAAI,KAChC,kBAAC,GAAD,CACAw2B,iBAAkBA,GAClBtE,YAAaoF,GACbb,oBAAqBA,GACrBC,oBAAqBA,MAGtB,kBAAC,GAAD,CAEC1W,IAAI,eAAehgB,IAAI,KACvB,yBAAKrC,UAAU,uDAEb2E,EAAQjE,OAAS,GAAKiE,EAAQ1D,KAAI,SAAAQ,GAClC,OACC,yBAAKzB,UAAU,4DACd,yBAAKA,UAAU,iEAId,0BAAMA,UAAU,kBAAkB+P,QAAS,YAtWlC,SAAC5N,GAC1B43B,IAAuB,GACvB,IAAMxF,EAAc5vB,EAAQyc,MAAK,SAAA3f,GAAI,OAAIA,EAAKU,KAAOA,KAClDoyB,GACFqF,GAAmBrF,GAmWH6F,CAAkB34B,EAAKU,IACvB23B,GAAuB,OAGvB,kBAAClP,GAAA,EAAD,OAED,0BAAM5qB,UAAU,oBAAoB+P,QAAS,kBApWlC,SAAC5N,GAC5B,IAAMk4B,EAAa11B,EAAQqb,QAAO,SAAAve,GAAI,OAAIA,EAAKU,KAAOA,KACtDkvB,EAAWgJ,GACX/kB,KAAQ8a,KAAK,2BAiWsDkK,CAAoB74B,EAAKU,MAC3E,kBAACygB,GAAA,EAAD,QAGF,yBAAK5iB,UAAU,gEACd,6BACC,qCAGA,yBAAKA,UAAU,iEAGbyB,EAAK+C,MAAM0tB,MACX,oCACC,4BACEzwB,EAAK+C,MAAM0tB,OAFd,IAMF,wBAAI9xB,MAAO,CACPm6B,eAAgB,iBAGf94B,EAAK+C,MAAMytB,UAIb,4BACExwB,EAAK+C,MAAMytB,WAShBxwB,EAAKw3B,OAASx3B,EAAKw3B,MAAL,WACd,6BACC,kBAAC,KAAD,CACCtiB,cAAe,IACf/P,MAAOnF,EAAKw3B,MAAM/zB,WAClB,sCAIAzD,EAAKw3B,MAAL,SACA,oCACF,yBAAKj5B,UAAU,iEACb,6BACC,kCAEC,kBAAC,KAAD,CACCA,UAAU,qBACV2W,cAAe,IACf/P,MAAOnF,EAAKw3B,MAAM9zB,gBAiBxB1D,EAAK2yB,WACF5zB,OAAOqO,OAAOpN,EAAK2yB,WAAW1zB,OAAS,GACzC,oCACC,0CAGA,yBAAKV,UAAU,iEACbyB,EAAK2yB,WACF5zB,OAAOC,KAAKgB,EAAK2yB,WAAW1zB,OAAS,GACrCF,OAAOC,KAAKgB,EAAK2yB,WAAWnzB,KAAI,SAAAs3B,GAClC,OACC,6BACC,4BACEA,GAEF,4BACE92B,EAAK2yB,UAAUmE,gBAczB5zB,EAAQjE,OAAS,IAAM,yBAAKN,MAAO,CACrC4R,MAAO,OACPkC,QAAS,OACTC,eAAgB,WAEhB,kBAAC,KAAD,CAAO7R,YAAY,mBAAmBO,MAAOmR,KAAMK,6BAOvD,yBAAKrU,UAAU,mDAQjB,yBAAKA,UAAU,kCAEd,yBAAKA,UAAU,wCACd,qCAIA,kBAAC,KAAD,CACCkW,UAAU,OAAOjT,MAAO,uFACxB,uBAAGuT,KAAK,OACP,kBAAC2S,GAAA,EAAD,SAIH,yBAAKnpB,UAAU,sCAId,yBAAKA,UAAU,gCACbwe,GAEAA,EAAS9d,OAAS,GAAK8d,EAASvd,KAAI,SAAC4B,EAAO4T,GAC3C,OACC,yBAAKzW,UAAU,sCACd,yBACCA,UAAU,kDACV+P,QAAS,kBAAMgX,GAAgBlkB,EAAMV,MAErC,yBAAKiJ,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGnC,0BACC4M,QAAS,kBAnkBE,SAAC5N,GAE3B,IAAMknB,EAAY7K,GAAYA,EAASwB,QAAO,SAAAnd,GAC7C,OAAOA,EAAMV,KAAOA,KAGrBmc,EAAY+K,GA6jBkBC,CAAmBzmB,EAAMV,KACxCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,QAIAoE,KAAiBjkB,EAAMV,KAInB2kB,IAA0B,IAAVrQ,IAHpB,0BAAMzW,UAAU,4CACf,kBAAC2iB,GAAA,EAAD,WAYN,kBAAC,KAAD,CACC1f,MAAO,iBAEP,yBACC8M,QAAS,WACRsO,GAAW,GACXoN,GAAwB,GACxBD,GAA2B,IAE5BxrB,UAAU,4CAIV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACf,kBAAC6kB,GAAA,EAAD,YAcN,yBAAK7kB,UAAU,kCAEZ,yBAAKA,UAAU,wCACd,yCAIA,kBAAC,KAAD,CACCkW,UAAU,OAAOjT,MAAO,sFACxB,uBAAGuT,KAAK,OACP,kBAAC2S,GAAA,EAAD,SAIP,yBAAKnpB,UAAU,sCAGf,kBAACf,EAAD,CACAI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACnC3V,GAAgBuiB,EAAgBhlB,MAAhB,gBAEnBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACvC3V,GAAgBuiB,EAAgBhlB,MAAhB,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACxQ,EAAD,CACCI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACrC5V,GAAgBuiB,EAAgBhlB,MAAhB,kBAEnBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cACzC5V,GAAgBuiB,EAAgBhlB,MAAhB,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACzC7V,GAAgBuiB,EAAgBhlB,MAAhB,sBAEnBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC7C7V,GAAgBuiB,EAAgBhlB,MAAhB,sBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC3C9V,GAAgBuiB,EAAgBhlB,MAAhB,wBAEnBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC/C9V,GAAgBuiB,EAAgBhlB,MAAhB,wBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASkO,GACT1sB,KAAMsgB,KAGN,yBAAKllB,MAAO,CACX0V,UAAU,UAGX,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASmO,GACT3sB,KAAMugB,QAOL,yBAAKvlB,UAAU,kCACd,yBAAKA,UAAU,qCAEd,yBAAKA,UAAU,8CACd,yBAAKA,UAAU,qDACd,4CAIA,kBAAC,KAAD,CACCwV,MAAM,MACN4I,QAAS0T,EAAgBhlB,MAAhB,kBAAgDqkB,EAAYzwB,OAAS,GAC9EwV,UAAU,OAAOjT,MAAO,gCACxB,yBAAKjD,UAAamxB,EAAYzwB,OAAS,GAClCoxB,EAAgBhlB,MAAhB,eAA2DglB,EAAgBhlB,MAAhB,eAA6C,kBAAoB,mBAA/E,aACjD,kBAACyI,GAAA,EAAD,SAKH,yBAAKvV,UAAU,mDACd,kBAAC,GAAD,CACC8vB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,OAMpB,yBAAK5vB,UAAU,gCACd,yBAAKA,UAAU,8CACd,yBAAKA,UAAU,qDACd,qCAID,yBAAKA,UAAU,mDACd,kBAAC,GAAD,CACC+tB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,OAKf,yBAAK9tB,UAAU,kCACd,yBAAKA,UAAU,8CACd,yBAAKA,UAAU,qDACd,sCAID,yBAAKA,UAAU,mDACd,kBAAC,GAAD,CAAQivB,WAAYA,UAa1B,kBAAC,GAAD,CACC5Q,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,SC1+BrBP,GAAYC,KAAZD,QAEF7P,GAAmBC,MAAaC,MAAM,IAKtCG,GAAgB,CAClB3O,KAAM,GACTyC,YAAa,GACb+vB,MAAO,GACP3tB,KAAM,GACNutB,QAAS,GACTC,MAAO,GACPhtB,UAAW,GACXC,QAAS,GACTtC,MAAO,GACPjC,IAAK,GACL6B,MAAO,GACPkC,QAAS,GACTG,MAAO,GACPF,KAAM,GACNC,KAAM,GACN40B,cAAe,KACfC,OAAQ,GACR1U,OAAQ,GACRC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAmzCEoL,GAtyCO,SAAC,GAKR,IALUqF,EAKX,EALWA,mBACrBC,EAIU,EAJVA,sBACAjF,EAGU,EAHVA,kBACAD,EAEU,EAFVA,eACAF,EACU,EADVA,YACU,EAE6C3iB,EAAe,GAAI,iBAFhE,mBAEH+iB,EAFG,KAEiBuJ,EAFjB,OAG6CtsB,EAAe,GAAI,qBAHhE,mBAGHihB,EAHG,KAGiB+B,EAHjB,OAIqEhjB,EAAe,GAAI,6BAJxF,mBAI6B8Y,GAJ7B,aAKiE9Y,EAAe,GAAI,2BALpF,mBAK2B+Y,GAL3B,aAMyE/Y,EAAe,GAAI,+BAN5F,gCAOqEA,EAAe,GAAI,8BAPxF,mBAO6BgZ,GAP7B,aAQqEhZ,EAAe,GAAI,6BARxF,mBAQ6BiZ,GAR7B,aAYoBtV,oBAAS,GAZ7B,mBAYHuM,EAZG,KAYMC,EAZN,OAasBxM,oBAAS,GAb/B,mBAaH2M,EAbG,KAaOF,EAbP,OAcsCzM,oBAAS,GAd/C,mBAce6M,GAdf,aAeoD7M,oBAAS,GAf7D,mBAeH4M,EAfG,KAesB+M,EAftB,OAgB8C3Z,oBAAS,GAhBvD,mBAgBH0M,GAhBG,KAgBmBkN,GAhBnB,QAiB4B5Z,mBAAS,IAjBrC,qBAiBHsf,GAjBG,MAiBUvB,GAjBV,SAkBkB/d,mBAAS,IAlB3B,qBAkBHuf,GAlBG,MAkBKtD,GAlBL,SAmBoBjc,mBAAS,IAnB7B,qBAmBHqd,GAnBG,MAmBMD,GAnBN,SAoBoBpd,mBAAS,IApB7B,qBAoBHlN,GApBG,MAoBM0sB,GApBN,SAqB8Bxf,mBAAS,IArBvC,qBAqBHiV,GArBG,MAqBWC,GArBX,SAsBoClV,mBAAS,IAtB7C,qBAsBHge,GAtBG,MAsBcC,GAtBd,SAuB8Bje,mBAAS,IAvBvC,qBAuBHmc,GAvBG,MAuBWD,GAvBX,SAwBmBlc,mBAAS,IAxB5B,qBAwBGyf,IAxBH,gBAyBmBzf,mBAAS,IAzB5B,qBAyBG0f,IAzBH,gBA0B4B1f,mBAAS,IA1BrC,qBA0BHvP,GA1BG,MA0BUkvB,GA1BV,SA2B6B3f,mBAAS,IA3BtC,qBA2BNoT,GA3BM,MA2BSwM,GA3BT,SA4BkB5f,mBAAS,IA5B3B,qBA4BNyT,GA5BM,MA4BGoM,GA5BH,SA6BsB7f,mBAAS,IA7B/B,qBA6BN0T,GA7BM,MA6BKoM,GA7BL,SA8BgC9f,mBAAS,IA9BzC,qBA8BN8nB,GA9BM,MA8BUC,GA9BV,SA+BwC/nB,mBAAS,KA/BjD,qBA+BNgoB,GA/BM,MA+BcC,GA/Bd,SAgCyCjoB,oBAAS,GAhClD,qBAgCNknB,GAhCM,MAgCegB,GAhCf,MAmCVlsB,qBAAU,YAEgB,uCAAG,sBAAAE,EAAA,sEACfmjB,EAAyB,CAC3BrwB,WAAY,CACRE,aAAc,CACVoB,GAAI6uB,EAAkB7uB,OAJb,2CAAH,qDAUtB6vB,KAED,CAAChB,IAEJnjB,qBAAU,WAgBN,GAdImjB,GAAqBA,EAAkBjsB,MACvCkqB,GAAW+B,EAAkBjsB,MAAlB,IAGXkqB,GAAW,IAEX+B,GAAqBA,EAAkBhsB,MAAQgsB,EAAkBhsB,KAAKtE,OAAS,EAE/EqtB,GAAgBiD,EAAkBhsB,MAGlC+oB,GAAgB,IAGhBiD,GAAqBA,EAAkB9uB,UAAY8uB,EAAkB9uB,SAASxB,OAAS,EAAG,CAC1F,IAAMkyB,EAAc5B,EAAkB9uB,SACtC4tB,GAAmB8C,QAGnB9C,GAAmB,IAInBkB,GAAqBA,EAAkBrsB,SAAWqsB,EAAkBrsB,QACpE0sB,GAAWL,EAAkBrsB,SAG7B0sB,GAAW,IAKXL,GAAqBA,EAAkBpsB,MAAQosB,EAAkBpsB,KACjE0sB,GAAaN,EAAkBpsB,MAG/B0sB,GAAa,IAIbN,GAAqBA,EAAkBnsB,MAAQmsB,EAAkBnsB,KACjE0sB,GAAaP,EAAkBnsB,MAG/B0sB,GAAa,IAKbP,GAAqBA,EAAkB1uB,YACvCkvB,GAAeR,EAAkB1uB,aAGjCkvB,GAAe,IAGfR,GAAqBA,EAAkBnJ,IAAMmJ,EAAkBnJ,GAAlB,YAC7C4J,GAAiBT,EAAkBnJ,GAAlB,aAGjB4J,GAAiB,MAItB,CAACT,IAIJnjB,qBAAU,WACN,GAAIshB,EAAmB/hB,MAAQ5M,OAAOC,KAAK0uB,GAAoBzuB,OAAS,EAAG,CAGvE,IAAM8K,EAAS2jB,EAAmBntB,KAAKa,MAC5CukB,EAAY,GAMhB,GAJI5b,GAAUA,EAAO9K,OAAS,IAC7B0mB,EAAY5b,GAGT2jB,EAAmBntB,KAAKS,OAAS0sB,EAAmBntB,KAAKS,MAAxB,GACrB+I,EAAO4V,MAAK,SAAA3f,GAAI,OAAIA,EAAKU,KAAOgtB,EAAmBntB,KAAKS,MAAxB,QAE9C2kB,EAAS,CAAI+H,EAAmBntB,KAAKS,OAA5B,oBAAsC2kB,KAGhDL,GAAgBoI,EAAmBntB,KAAKS,MAAxB,IAIJ6b,EAAY8I,MAIrB,CAAC+H,IAGJthB,qBAAU,WACNzM,QAAQC,IAAI,WAAYmd,GAEpBA,GAAYA,EAAS,IAAMA,EAAS9d,OAAS,IAC7CU,QAAQC,IAAI,YAAamd,GAErBsI,KAAiBtI,EAAS,GAAGrc,KAC7B4kB,GAAgBvI,EAAS,GAAGrc,IAC5BklB,GAAyB7I,EAAS,QAK3C,CAACA,IAGJ,IAAM8I,GAAuB,uCAAG,WAAMnlB,GAAN,SAAA4L,EAAA,sEACtBmZ,EAAqC,CACvCrmB,WAAY,CACRE,aAAc,CACVwmB,QAASplB,EACTqlB,WAAY,UACZ3gB,OAAQmqB,EAAkB7uB,OANV,2CAAH,sDAcvBklB,GAAwB,uCAAG,WAAMxkB,GAAN,eAAAkL,EAAA,sEAEFoZ,EAAqC,CAC5DtmB,WAAY,CACRE,aAAc,CACVwmB,QAAS1kB,EAAMV,GACfqlB,WAAY,UACZ3gB,OAAQmqB,EAAkB7uB,OAPT,OAEvBslB,EAFuB,OAY7BrmB,QAAQC,IAAI,eAAgBomB,GAGxBA,GAAwC,OAAxBA,EAAa/hB,OAC7BwY,GAAwB,qBAkBxB2D,GAAsB,mDAlCG,2CAAH,sDAgDxBjT,GAAY,uCAAG,WAAOC,EAAaC,GAApB,yBAAAf,EAAA,yDAEX2Z,EAAYlJ,EAAWA,EAASvd,KAAI,SAAA4B,GACtC,OAAOA,EAAMV,MACZ,KAGD6uB,GAAqBxwB,OAAOC,KAAKuwB,GAAmBtwB,OAAS,GAPhD,oBAQhBknB,EAAyB,GAE5BF,GAAaA,EAAUhnB,OAAS,GAClCgnB,EAAU/jB,SAAQ,SAAA4jB,GACdyJ,GAAqBA,EAAiB,QACpCA,EAAiB,MAAU7vB,SAASomB,IACvCK,EAAuB9jB,KAAKyjB,SAOnBK,EAAuB,IAAMA,EAAuBlnB,OAAS,GArBpD,gCAsBHsmB,EAAqC,CACvCnmB,WAAY,CACRE,aAAc,CACVymB,WAAY,UACZ3gB,OAAQmqB,EAAkB7uB,KAGlC2D,KAAM,CACFjD,MAAO+kB,KA9BN,mCAkCJA,EAAuB,IAAMA,EAAuBlnB,OAAS,GAlCzD,kCAmCHumB,EAAmC,CACrCpmB,WAAY,CACRE,aAAc,CACVwmB,QAASK,EAAuB,GAAGzlB,GACnCqlB,WAAY,UACZ3gB,OAAQmqB,EAAkB7uB,OAxC7B,yBAiDeq4B,EAAyB,CACrD35B,WAAY,CACRE,aAAc,CACVoB,GAAI6uB,EAAkB7uB,KAG9B2D,KAAM,CACFjG,KAAMgP,EAAOhP,KAAK8nB,OAClBrlB,YAAaA,GACb+vB,MAAOxjB,EAAOwjB,MACd3tB,KAAMmK,EAAOnK,KACbxC,SAAU2tB,GACV7qB,KAAMosB,GACNrsB,MAAOmqB,GACPrsB,MAAO6kB,EACPjlB,MAAOqkB,IAAgBY,EAAU,GAAKA,EAAU,GAAK,GACrD/iB,QAASA,GACTugB,UAAWrW,EAAOqW,UAC9BE,gBAAiBvW,EAAOuW,gBACZE,SAAUA,IAAYA,GAAS5kB,OAAS,EAAI4kB,GAAS5jB,KAAK,KAAO,GAG7EmmB,GAAI,CACH3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACTC,SAAUC,IAAcA,GAAW7kB,OAAS,EAAI6kB,GAAW7jB,KAAK,KAAO,GACtF7B,KAAMgP,EAAOmW,OAAO2C,OACpBjjB,KAAMmK,EAAOyjB,SACbhwB,YAAa2iB,OA7EO,SAiDXwV,EAjDW,SAoFqC,OAA7BA,EAAkB/0B,SACvCwY,GAAwB,mBAO3BzH,EAJsB,WAC3B,OAAOoa,EAAY5vB,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQmvB,EAAkB7uB,IAGrDqwB,GAGR9Q,EAAclhB,OAAOmhB,OAAO,GAAIkP,EAAYpa,GAA9BjW,OAAA,IAAAA,CAAA,GAA2CwwB,EAA3C,GAAiEyJ,IAC/EhI,EAZ2D,uBAYnC5B,EAAYjvB,MAAM,EAAG6U,IAZc,CAYNiL,GAZM,aAYUmP,EAAYjvB,MAAM6U,EAAQ,KAC5Fsa,EAAe0B,GAGfwD,GAAsB,GAwBtB3X,EAAY,IACZyI,GAAgB,IAChBsK,GAAW,IACXvD,GAAU,IACVC,GAAgB,IAChBkB,GAAW,IACXW,GAAe,IACfE,GAAmB,IACnBhhB,EAAQiZ,aAMZjZ,EAAQC,eAAc,GA1IL,4CAAH,wDAiJlBlB,qBAAU,WACN,IAAKojB,EAAkB,UAAe,CAClC,IAAMnkB,EAAQmkB,EAAkB,MAChC,GAAInkB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAIrDF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACjCF,OAAOqO,OAAO/B,EAAK,OACnB,IACHnJ,SAAQ,SAACkoB,EAAKC,GACjB,GAAmB,kBAARD,EACPhK,GAAsBgK,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACpBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACThK,GAAsBgK,aAQ/C,CAACoF,IAGJ,IAAM/I,GAAe,SAACpY,GAClBmmB,GAAsB,GACtB3X,GAAY,GACZyI,GAAgB,IAChBsK,GAAW,IACXvD,GAAU,IACVC,GAAgB,IAChBkB,GAAW,IACXW,GAAe,IACfE,GAAmB,IACnB4B,GAAY,IACZC,GAAc,KA2CZmH,GAAsB,SAACpE,GAE/B,IAIQje,EAHA9R,GAAQ1D,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQ6yB,EAAUvyB,IAM/Cuf,EAAclhB,OAAOmhB,OAAO,GAAIhd,GAAQ8R,GAA1BjW,OAAA,IAAAA,CAAA,GAAuCk0B,IACrDsF,EAAiB,uBAAOr1B,GAAQ/C,MAAM,EAAG6U,IAAxB,CAAgCiL,GAAhC,aAAgD/c,GAAQ/C,MAAM6U,EAAQ,KAE7F4a,GAAW2I,GAEb1kB,KAAQ8a,KAAK,2BACb2J,IAAuB,GACvBD,GAAuB,MAMfjB,GAAmB,SAACnE,GAEtBrD,GAAW,CAAC,eACLqD,EADG,CAENvyB,GAAIwC,GAAQjE,UAFN,oBAGJiE,MACN2Q,KAAQ8a,KAAK,0BAgEjB,OAtBAhvB,QAAQC,IAAI,oBAAqB2vB,GACjC5vB,QAAQC,IAAI,qBAAsB8tB,GAGlCthB,qBAAU,WAEN,GAAGshB,EAAmBntB,MAAQxB,OAAOC,KAAK0uB,EAAmBntB,MAAMtB,OAAS,GAAKyuB,EAAmBntB,KAAKsjB,SAAS,CAC9G,IAAMA,EAAW6J,EAAmBntB,KAAKsjB,SAAStkB,MAAM,KAExDI,QAAQC,IAAI,gBAAgBikB,GAE5B,IAAMC,EAAa4J,EAAmBntB,KAAK6lB,GAAxB,SAAuC7mB,MAAM,KAChE0wB,GAAYpM,GAAY,IACxBqM,GAAcpM,GAAc,OAGlC,CAAC4J,EAAkB,OAIrB/tB,QAAQC,IAAI,qBAGR,kBAAC,IAAD,CACI6N,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,kBAGFwiB,EAHE,GAIA7B,EAAkB,MAAY3uB,OAAOC,KAAK0uB,EAAkB,MAAUzuB,OAAS,GAAKyuB,EAAkB,KAAlB,IAAoC,CACzHhK,YAAagK,EAAkB,KAAlB,GAAiCjK,UAC9CG,kBAAmB8J,EAAkB,KAAlB,GAAiC/J,gBACpDJ,OAAQmK,EAAkB,KAAlB,GAAiCtvB,KACzCyyB,SAAUnD,EAAkB,KAAlB,GAAiCzqB,KAC3CugB,cAAekK,EAAkB,KAAlB,GAAiC7sB,iBAK3D,gBACG+M,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIvP,MAAO,CACH2hB,IAAK,QAGTG,UAAW,CACPrS,OAAQ,EACRwG,QAAS,GAEbrE,MAAO,OACP/O,MAAM,eACNmb,QAAS4X,EACThU,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACVa,gBAAgB,EAChB5G,OAAO,SACP6G,cAAe,CACnChZ,QAAST,EACT0Z,SAAU,WAGU,6BAASjpB,UAAU,2BACf,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,wCACX,qDAGA,yBAAKA,UAAW6O,EAAOhP,MAAQgP,EAAOhP,KAAKa,OAAS,EAAI,mBAAqB,aACzE,kBAAC6U,GAAA,EAAD,QAGR,yBAAKvV,UAAU,sCACf,kBAACf,EAAD,CAC5BI,MAAM,OACNE,MAAOsP,EAAOhP,KACdC,YAAa,WACbD,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgB0hB,EAAmBnkB,MAAnB,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgB0hB,EAAmBnkB,MAAnB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACAI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,0DACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgB0hB,EAAmBnkB,MAAnB,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgB0hB,EAAmBnkB,MAAnB,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAsEjB,kBAACxQ,EAAD,CACCI,MAAM,OACNE,MAAOsP,EAAOnK,KACd7E,KAAK,OACFC,YAAa,cAChBH,QAAU6P,EAAQ9K,MAAQ4K,EAAO5K,OAC9B6K,GAAgB0hB,EAAmBnkB,MAAnB,WAEnBlN,YAAc4P,EAAQ9K,MAAQ4K,EAAO5K,OAClC6K,GAAgB0hB,EAAmBnkB,MAAnB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAKlB,kBAACxQ,EAAD,CACAI,MAAM,UACNE,MAAOsP,EAAO6qB,OACd55B,YAAa,0DACbD,KAAK,SACLF,QAAU6P,EAAQkqB,QAAUpqB,EAAOoqB,SAChCnqB,GAAgB0hB,EAAmBnkB,MAAnB,aAEnBlN,YAAc4P,EAAQkqB,QAAUpqB,EAAOoqB,SACpCnqB,GAAgB0hB,EAAmBnkB,MAAnB,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAKjB,kBAACxQ,EAAD,CACCI,MAAM,eACNE,MAAOsP,EAAOwjB,MACdxyB,KAAK,QACLF,QAAU6P,EAAQ6iB,OAAS/iB,EAAO+iB,QAC/B9iB,GAAgB0hB,EAAmBnkB,MAAnB,YAEnBlN,YAAc4P,EAAQ6iB,OAAS/iB,EAAO+iB,QACnC9iB,GAAgB0hB,EAAmBnkB,MAAnB,YACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,YAKe,wBAAIzP,UAAU,mBAAd,eAIA,yBAAKI,MAAO,CACR4R,MAAO,OACPpC,SAAU,SAEV,kBAAC,KAAD,CACIijB,OAAQC,KACR9wB,KAAMM,GACNywB,OAAQ,SAAAF,GAEJzxB,QAAQC,IAAI,0BAA2BwxB,IAE3CpzB,SAAU,SAAC6I,EAAOuqB,GACd,IAAM7wB,EAAO6wB,EAAOG,UACpBxB,GAAexvB,IAEnBqiB,OAAQ,SAAC/b,EAAOuqB,GACZzxB,QAAQC,IAAI,QAASwxB,IAEzBpD,QAAS,SAACnnB,EAAOuqB,GACbzxB,QAAQC,IAAI,SAAUwxB,OAKlC,yBAAKzyB,MAAO,CACR0V,UAAW,UAGf,wBAAI9V,UAAU,mBAAd,kBAIA,yBAAKI,MAAO,CACR4R,MAAO,OACPpC,SAAU,SAEV,kBAAC,KAAD,CACIijB,OAAQC,KACR9wB,KAAMijB,GACN8N,OAAQ,SAAAF,GAEJzxB,QAAQC,IAAI,0BAA2BwxB,IAE3CpzB,SAAU,SAAC6I,EAAOuqB,GACd,IAAM7wB,EAAO6wB,EAAOG,UACpBvB,GAAiBzvB,IAErBqiB,OAAQ,SAAC/b,EAAOuqB,GACZzxB,QAAQC,IAAI,QAASwxB,IAEzBpD,QAAS,SAACnnB,EAAOuqB,GACbzxB,QAAQC,IAAI,SAAUwxB,OAKlC,yBAAKzyB,MAAO,CACR0V,UAAU,SADd,OASR,yBAAK9V,UAAU,kCACzC,yBAAKA,UAAU,wCACd,iDAIA,yBAAKA,UAAW2E,IAAWA,GAAQjE,OAAS,EAAI,mBAAqB,aACpE,kBAAC6U,GAAA,EAAD,QAKF,yBAAKvV,UAAU,sCAEd,kBAAC,KAAD,CACCi6B,UAAU,EACVC,YAAY,MACZ56B,KAAK,OACL66B,UAAWN,GACXp6B,SAAU,SAACF,GACVu6B,GAAuB,GAAD,OAAIv6B,MAI3B,kBAAC,GAAD,CAAS8iB,IAAI,gBAAgBhgB,IAAI,KAChC,kBAAC,GAAD,CACAw2B,iBAAkBA,GAClBtE,YAAaoF,GACbb,oBAAqBA,GACrBC,oBAAqBA,MAGtB,kBAAC,GAAD,CAEC1W,IAAI,eAAehgB,IAAI,KACvB,yBAAKrC,UAAU,uDAEb2E,GAAQjE,OAAS,GAAKiE,GAAQ1D,KAAI,SAAAQ,GAClC,OACC,yBAAKzB,UAAU,4DACd,yBAAKA,UAAU,iEAId,0BAAMA,UAAU,kBAAkB+P,QAAS,YA5X/B,SAAC5N,GAC7B43B,IAAuB,GACvB,IAAMxF,EAAc5vB,GAAQyc,MAAK,SAAA3f,GAAI,OAAIA,EAAKU,KAAOA,KAClDoyB,GACFqF,GAAmBrF,GAyXH6F,CAAkB34B,EAAKU,IACvB23B,GAAuB,OAGvB,kBAAClP,GAAA,EAAD,OAED,0BAAM5qB,UAAU,oBAAoB+P,QAAS,kBA1Y/B,SAAC5N,GACzB,IAAMk4B,EAAa11B,GAAQqb,QAAO,SAAAve,GAAI,OAAIA,EAAKU,KAAOA,KACtDkvB,GAAWgJ,GACX/kB,KAAQ8a,KAAK,2BAuYgDkK,CAAoB74B,EAAKU,MAC3E,kBAACygB,GAAA,EAAD,QAGF,yBAAK5iB,UAAU,gEACd,6BACC,qCAGA,yBAAKA,UAAU,iEAGbyB,EAAK+C,MAAM0tB,MACX,oCACC,4BACEzwB,EAAK+C,MAAM0tB,OAFd,IAMF,wBAAI9xB,MAAO,CACPm6B,eAAgB,iBAGf94B,EAAK+C,MAAMytB,UAIb,4BACExwB,EAAK+C,MAAMytB,WAUhBxwB,EAAKw3B,OAASx3B,EAAKw3B,MAAL,WACd,6BACC,kBAAC,KAAD,CACCtiB,cAAe,IACf/P,MAAOnF,EAAKw3B,MAAM/zB,WAClB,sCAIAzD,EAAKw3B,MAAL,SACA,oCACF,yBAAKj5B,UAAU,iEACb,6BACC,kCAEC,kBAAC,KAAD,CACCA,UAAU,qBACV2W,cAAe,IACf/P,MAAOnF,EAAKw3B,MAAM9zB,gBAiBxB1D,EAAK2yB,WACF5zB,OAAOqO,OAAOpN,EAAK2yB,WAAW1zB,OAAS,GACzC,oCACC,0CAGA,yBAAKV,UAAU,iEACbyB,EAAK2yB,WACF5zB,OAAOC,KAAKgB,EAAK2yB,WAAW1zB,OAAS,GACrCF,OAAOC,KAAKgB,EAAK2yB,WAAWnzB,KAAI,SAAAs3B,GAClC,OACC,6BACC,4BACEA,GAEF,4BACE92B,EAAK2yB,UAAUmE,gBAczB5zB,GAAQjE,OAAS,IAAM,yBAAKN,MAAO,CACrC4R,MAAO,OACPkC,QAAS,OACTC,eAAgB,WAEhB,kBAAC,KAAD,CAAO7R,YAAY,mBAAmBO,MAAOmR,KAAMK,6BAOvD,yBAAKrU,UAAU,mDAQU,yBAAKA,UAAU,kCAEX,yBAAKA,UAAU,wCACX,qCAIA,kBAAC,KAAD,CACIkW,UAAU,OAAOjT,MAAO,uFACxB,uBAAGuT,KAAK,OACJ,kBAAC2S,GAAA,EAAD,SAKZ,yBACI/oB,MAAO,CACHiW,QAAS,QAEbrW,UAAU,gCACTmvB,EAAmBhiB,WAChB,yBAAK/M,MAAO,CACRiW,QAAS,WAET,kBAAC,KAAD,OAGP8Y,EAAmB/hB,MAChB,oCACKoR,GAEGA,EAAS9d,OAAS,GAAK8d,EAASvd,KAAI,SAAC4B,EAAO4T,GACxC,OACI,yBAAKzW,UAAU,sCACX,yBACIA,UAAU,kDACV+P,QAAS,WACLgX,GAAgBlkB,EAAMV,IACtBklB,GAAyBxkB,KAG7B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACI4M,QAAS,YAjnBlD,SAAC5N,GAExB,IAAMknB,EAAY7K,GAAYA,EAASwB,QAAO,SAAAnd,GAC1C,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GA4mBwDC,CAAmBzmB,EAAMV,IACzBmlB,GAAwBzkB,EAAMV,KAIlCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,QAIHoE,KAAiBjkB,EAAMV,KAInB2kB,IAA0B,IAAVrQ,IAHjB,0BAAMzW,UAAU,4CACZ,kBAAC2iB,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACI1f,MAAO,iBAEP,yBACI8M,QAAS,WACLsO,GAAW,GACXoN,IAAwB,GACxBD,GAA2B,IAE/BxrB,UAAU,4CAIV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACZ,kBAAC6kB,GAAA,EAAD,YAoBvD,yBAAK7kB,UAAU,kCAEgB,yBAAKA,UAAU,wCACX,yCAIA,kBAAC,KAAD,CACIkW,UAAU,OAAOjT,MAAO,sFACxB,uBAAGuT,KAAK,OACJ,kBAAC2S,GAAA,EAAD,SAIZ,yBAAKnpB,UAAU,sCAGf,kBAACf,EAAD,CACAI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACpC3V,GAAgB0hB,EAAmBnkB,MAAnB,gBAElBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACxC3V,GAAgB0hB,EAAmBnkB,MAAnB,gBAClBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,gBAIhB,kBAACxQ,EAAD,CACAI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACtC5V,GAAgB0hB,EAAmBnkB,MAAnB,kBAElBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cAC1C5V,GAAgB0hB,EAAmBnkB,MAAnB,kBAClBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,kBAIhB,kBAAC,GAAD,CACApQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC1C7V,GAAgB0hB,EAAmBnkB,MAAnB,sBAElBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC9C7V,GAAgB0hB,EAAmBnkB,MAAnB,sBAClBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,sBAIhB,kBAAC,GAAD,CACApQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC5C9V,GAAgB0hB,EAAmBnkB,MAAnB,wBAElBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAChD9V,GAAgB0hB,EAAmBnkB,MAAnB,wBAClBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,wBAIhB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASkO,GACT1sB,KAAMsgB,KAGN,yBAAKllB,MAAO,CACZ0V,UAAU,UAGV,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASmO,GACT3sB,KAAMugB,QAOd,yBAAKvlB,UAAU,kCACX,yBAAKA,UAAU,qCAEX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,4CAIA,kBAAC,KAAD,CACIwV,MAAM,MACN4I,QAAS6S,EAAmBnkB,MAAnB,kBAAmDqkB,GAAYzwB,OAAS,GACjFwV,UAAU,OAAOjT,MAAO,gCACxB,yBAAKjD,UAAamxB,GAAYzwB,OAAS,GAC/BuwB,EAAmBnkB,MAAnB,eAA8DmkB,EAAmBnkB,MAAnB,eAAgD,kBAAoB,mBAAlF,aACpD,kBAACyI,GAAA,EAAD,SAKZ,yBAAKvV,UAAU,mDACX,kBAAC,GAAD,CACI8vB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,QAMhC,yBAAK5vB,UAAU,gCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,qCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CACI+tB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,QAK3B,yBAAK9tB,UAAU,kCACX,yBAAKA,UAAU,8CACX,yBAAKA,UAAU,qDACX,sCAIJ,yBAAKA,UAAU,mDACX,kBAAC,GAAD,CACImvB,mBAAoBA,EACpBD,QAASA,GACTD,WAAYA,WAaxC,kBAAC,GAAD,CACI5Q,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,UC/0C1CpC,GAAwBC,KAAxBD,OACA+N,IADwB9N,KAAhBC,YACGpd,IAAXirB,QAEFhM,GAA0B,SAACzV,GAC/B4M,KAAa7M,QAAQ,CACnB8M,QAAS7M,GAAO,kBAChBnG,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAUzC2U,GAAU,SAAC,GAAmD,IAAjDnoB,EAAgD,EAAhDA,KAAM+uB,EAA0C,EAA1CA,eAAgBjgB,EAA0B,EAA1BA,MAA0B,EACnCe,oBAAS,GAD0B,mBAC1DuM,EAD0D,KACjDC,EADiD,OAEPxM,oBAAS,GAFF,mBAE1DuY,EAF0D,KAEnCC,EAFmC,OAGVnc,EACrD,GACA,iBAL+D,mBAGtCwsB,GAHsC,aAOT7oB,oBAAS,GAPA,gCAQF3D,EAC7D,GACA,gBAV+D,mBAQlCysB,GARkC,WAa3DpmB,EAAUC,eAEVomB,EAAmB,uCAAG,WAAOz4B,GAAP,iBAAA4L,EAAA,sEACK2sB,EAAyB,CACtD75B,WAAY,CACVE,aAAc,CACZoB,SAJoB,QACpB04B,EADoB,SAU0B,OAA5BA,EAAiBn1B,SACvCwY,KACMwU,EAAiB1wB,EAAKge,QAAO,SAACve,GAAD,OAAUA,EAAKU,KAAOA,KACzD4uB,EAAe2B,IAbS,2CAAH,sDAmBnBoI,EAAuB,uCAAG,WAAO3d,EAAQhb,EAAI44B,GAAnB,qBAAAhtB,EAAA,sEACK4sB,EAA6B,CAC9D70B,KAAM,CACJk1B,QAASD,GAEXl6B,WAAY,CACVE,aAAc,CACZoB,SAPwB,QACxB84B,EADwB,SAa8B,OAAhCA,EAAqBv1B,SAC/CwY,GAAwB,iBAMlBzH,EAJgB,WACpB,OAAOzU,EAAKf,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQM,GAG/B+4B,GACd95B,QAAQC,IAAI,WAAY8b,EAAQ1G,GAG1BiL,EAAclhB,OAAOmhB,OAAO,GAAI3f,EAAKyU,GAAQ,CACjDukB,QAASD,IAELI,EAd0D,uBAe3Dn5B,EAAKJ,MAAM,EAAG6U,IAf6C,CAgB9DiL,GAhB8D,aAiB3D1f,EAAKJ,MAAM6U,EAAQ,KAExBrV,QAAQC,IAAI,kBAAmB85B,EAAiB,QAASpK,GACzDA,EAAeoK,IAjCa,2CAAH,0DAkE7B,OACE,oCACE,kBAAC,KAAD,CACE/6B,MAAO,CACLmtB,WAAY,OACZltB,aAAc,iBACdmtB,SAAU,SACVvb,UACE,+FAOJ8G,KAAK,QAEL8D,WAAY7a,EACZ8a,YAAa,OACbC,YAAa,SAACC,GACZ,MAAO,CACL5c,MAAO,CACLoV,MAAO,qBAKb,kBAAC,GAAD,CACEvS,MAAM,GACNga,UAAU,QACV5a,IAAI,KACJ2P,MAAO,OACPhS,UAAU,uBACVkd,OAAQ,SAACza,EAAO0a,GAAR,OACN,oCACE,yBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,yBAA+BqZ,EAAOhb,KACtCkoB,EAAyBlN,IAE3B/R,IAAK3I,EACLU,IAAI,YACJ/C,MAAO,CACL6T,OAAQ,OACRjC,MAAO,OACP0Y,UAAW,UACXrqB,aAAc,MACd2V,OAAQ,iBAOlB,kBAAC,GAAD,CACE/S,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,yBAA+BqZ,EAAOhb,KACtCkoB,EAAyBlN,IAE3B/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAMT,kBAAC,GAAD,CACEhB,MAAM,cACNga,UAAU,aACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,QACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,YACNga,UAAU,YACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACE2qB,MAAM,QACN1nB,MAAM,QACNga,UAAU,UACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACGnM,GAAS,gBAAiBF,GACzB,kBAAC,KAAD,CACEqF,QAAS,kBA1IF,SAACgH,EAAQhb,GAC9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAKlC,KAAN,CACE8P,QAAS,kBAAM+qB,EAAwB3d,EAAQhb,GAAI,IACnDE,IAAI,IACJO,KAAM,kBAAC+f,GAAA,EAAD,OAHR,YAQA,kBAAC,IAAK1iB,KAAN,CACE8P,QAAS,kBAAM+qB,EAAwB3d,EAAQhb,GAAI,IACnDE,IAAI,IACJO,KAAM,kBAAC+f,GAAA,EAAD,OAHR,iBA+HyByY,CAAeje,EAAQA,EAAOhb,KAC7C+T,UAAU,eAEV,uBAAGM,KAAK,MACN,0BAEEpW,MAAO,CACLmW,SAAU,SAGXtS,EAAO,WAAa,eACrB,0BACE7D,MAAO,CACL2V,WAAY,MACZQ,SAAU,SAGZ,kBAAC8kB,GAAA,EAAD,UAMR,uBAAG7kB,KAAK,MACN,0BAEEpW,MAAO,CACLmW,SAAU,SAGXtS,EAAO,WAAa,eACrB,0BACE7D,MAAO,CACL2V,WAAY,MACZQ,SAAU,gBA4CzBvF,GAAS,gBAAiBF,IACzB,kBAAC,GAAD,CACE9Q,UAAU,uBACViD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGvC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,gBAC7B,0BACEjD,UAAU,WACV+P,QAAS,WACPsO,GAAW,GACXgM,EAAyBlN,KAG3B,kBAACyN,GAAA,EAAD,SAKN,kBAAC,KAAD,CACE7H,UAAW,kBAAM6X,EAAoBzd,EAAOhb,KAC5Cc,MAAM,qBACNkf,OAAO,MACPa,WAAW,MAEX,0BAAMhjB,UAAU,4BACd,kBAAC4iB,GAAA,EAAD,aASbwH,GACC,kBAACkR,GAAD,CACEzK,YAAa7uB,EACb+uB,eAAgBA,EAChBkF,sBAAuB5X,EACvB2X,mBAAoB5X,EACpB4S,kBAAmB5G,MAoIdxY,gBALS,SAAC3E,GAAD,MAAY,CAClC6D,MAAO7D,EAAM2D,eAIyB,KAAzBgB,EAzHK,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EACFe,mBAAS,IADP,mBACjCgf,EADiC,KACpBE,EADoB,OAGO7iB,EAC7C,GACA,eALsC,mBAGjCqtB,EAHiC,KAGnBC,EAHmB,KAQxC3tB,qBAAU,YACS,uCAAG,4BAAAE,EAAA,sEACKytB,EAAuB,CAC5C36B,WAAY,CACVC,OAAQ,CACNiU,SAAU,QACVC,eAAgB,KAChB2gB,YAAa,cAND,OACZjvB,EADY,OAWlBqqB,EAAerqB,GAXG,2CAAH,qDAajB+0B,KACC,IAEHr6B,QAAQC,IAAI,uBAAwBwvB,GAzBI,MA2BkBhf,oBAAS,GA3B3B,mBA2BjC6T,EA3BiC,KA2BVC,EA3BU,KAwCxC,OACE,oCAIE,yBAAK3lB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,YAEA,kBAAC,GAAD,CACEqrB,aAAa,EACbrrB,UAAU,qBACVM,YAAY,oBACZb,SAAU,SAACqQ,GAAD,OAvBD,SAACvQ,GACpB,GAAIg8B,EAAav5B,KAAKtB,OAAS,EAAG,CAChC,IAAMgyB,EAAiB6I,EAAav5B,KAAKge,QAAO,SAACve,GAAD,OAC9CA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBAEzCiY,EAAe2B,IAkBUpH,CAAaxb,EAAEzE,OAAO9L,WAK1CyR,GAAS,gBAAiBF,IACzB,kBAAC,IAAD,CAEE9Q,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJ1C,YAWJ,yBAAK3lB,UAAU,uCASf,yBAAKA,UAAU,uCACZu7B,EAAanuB,MAAQyjB,EAAYnwB,OAAS,GACzC,kBAAC,GAAD,CACEoQ,MAAOA,EACPigB,eAAgBA,EAChB/uB,KAAM6uB,IAGT0K,EAAapuB,WAAa,kBAACoe,GAAD,MAC1BgQ,EAAanuB,QAAUyjB,EAAYnwB,OAAS,IAC3C,yBACEN,MAAO,CACL0V,UAAW,UAGb,kBAAC,KAAD,CACExT,YAAY,oBACZO,MAAOmR,KAAMK,4BAOtBknB,EAAanuB,MACZ,kBAAC,GAAD,CACEsY,sBAAuBA,EACvBC,yBAA0BA,EAC1BkL,YAAa0K,EAAav5B,KAC1B+uB,eAAgBA,QC5clB/S,GAAYC,KAAZD,QAEF7P,GAAmBC,MAAaC,MAAM,IAItCG,GAAgB,CACpB3O,KAAM,GACNyC,YAAa,GACb+vB,MAAO,GACP3tB,KAAM,GACNutB,QAAS,GACTC,MAAO,GACPhtB,UAAW,GACXC,QAAS,GACTtC,MAAO,GACPjC,IAAK,GACL6B,MAAO,GACPkC,QAAS,GACTG,MAAO,GACPF,KAAM,GACNC,KAAM,GACN40B,cAAe,KACfC,OAAQ,GACR1U,OAAQ,GACRC,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IA6xCCoL,GAnxCO,SAAC,GAKT,IAJZqF,EAIW,EAJXA,mBACAC,EAGW,EAHXA,sBACAjF,EAEW,EAFXA,kBACA0K,EACW,EADXA,qBACW,EAC4CxtB,EACrD,GACA,iBAHS,mBACJ+iB,EADI,KACgBuJ,EADhB,OAK4CtsB,EACrD,GACA,qBAPS,mBAKJihB,EALI,KAKgB+B,EALhB,OAYPhjB,EAAe,GAAI,6BAZZ,mBAWT8Y,GAXS,aAgBP9Y,EAAe,GAAI,2BAhBZ,mBAeT+Y,GAfS,aAoBP/Y,EAAe,GAAI,+BApBZ,gCAwBPA,EAAe,GAAI,8BAxBZ,mBAuBTgZ,GAvBS,aA4BPhZ,EAAe,GAAI,6BA5BZ,mBA2BTiZ,GA3BS,aA8BmBtV,oBAAS,GA9B5B,mBA8BJuM,EA9BI,KA8BKC,EA9BL,OA+BqBxM,oBAAS,GA/B9B,mBA+BJ2M,EA/BI,KA+BMF,EA/BN,OAgCqCzM,oBAAS,GAhC9C,mBAgCc6M,GAhCd,aAiCmD7M,oBAAS,GAjC5D,mBAiCJ4M,EAjCI,KAiCqB+M,EAjCrB,OAkC6C3Z,oBAAS,GAlCtD,mBAkCJ0M,EAlCI,KAkCkBkN,GAlClB,QAmC2B5Z,mBAAS,IAnCpC,qBAmCJsf,GAnCI,MAmCSvB,GAnCT,SAoCiB/d,mBAAS,IApC1B,qBAoCJuf,GApCI,MAoCItD,GApCJ,SAqCmBjc,mBAAS,IArC5B,qBAqCJqd,GArCI,MAqCKD,GArCL,SAsCmBpd,mBAAS,IAtC5B,qBAsCJlN,GAtCI,MAsCK0sB,GAtCL,SAuC6Bxf,mBAAS,IAvCtC,qBAuCJiV,GAvCI,MAuCUC,GAvCV,SAwCmClV,mBAAS,IAxC5C,qBAwCJge,GAxCI,MAwCaC,GAxCb,SAyC6Bje,mBAAS,IAzCtC,qBAyCJmc,GAzCI,MAyCUD,GAzCV,SA0CkBlc,mBAAS,IA1C3B,qBA0CEyf,IA1CF,gBA2CkBzf,mBAAS,IA3C3B,qBA2CE0f,IA3CF,gBA4C2B1f,mBAAS,IA5CpC,qBA4CJvP,GA5CI,MA4CSkvB,GA5CT,SA6C+B3f,mBAAS,IA7CxC,qBA6CJoT,GA7CI,MA6CWwM,GA7CX,SA8CqB5f,mBAAS,IA9C9B,qBA8CJyT,GA9CI,MA8CMoM,GA9CN,SA+CyB7f,mBAAS,IA/ClC,qBA+CJ0T,GA/CI,MA+CQoM,GA/CR,SAgDmC9f,mBAAS,IAhD5C,qBAgDJ8nB,GAhDI,MAgDaC,GAhDb,SAiD2C/nB,mBAAS,KAjDpD,qBAiDJgoB,GAjDI,MAiDiBC,GAjDjB,SAkD2CjoB,oBAAS,GAlDpD,qBAkDJknB,GAlDI,MAkDiBgB,GAlDjB,MAoDXlsB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACjBmjB,EAAyB,CAC7BrwB,WAAY,CACVE,aAAc,CACZoB,GAAI6uB,EAAkB7uB,OAJL,2CAAH,qDAUtB6vB,KACC,CAAChB,IAEJnjB,qBAAU,WAgBR,GAfImjB,GAAqBA,EAAkBjsB,MACzCkqB,GAAW+B,EAAkBjsB,MAAlB,IAEXkqB,GAAW,IAGX+B,GACAA,EAAkBhsB,MAClBgsB,EAAkBhsB,KAAKtE,OAAS,EAGhCqtB,GAAgBiD,EAAkBhsB,MAElC+oB,GAAgB,IAGhBiD,GACAA,EAAkB9uB,UAClB8uB,EAAkB9uB,SAASxB,OAAS,EACpC,CACA,IAAMkyB,EAAc5B,EAAkB9uB,SAASjB,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAClE2tB,GAAmB8C,QAEnB9C,GAAmB,IAInBkB,GACAA,EAAkBrsB,SAClBqsB,EAAkBrsB,QAElB0sB,GAAWL,EAAkBrsB,SAE7B0sB,GAAW,IAGTL,GAAqBA,EAAkBpsB,MAAQosB,EAAkBpsB,KACnE0sB,GAAaN,EAAkBpsB,MAE/B0sB,GAAa,IAGXN,GAAqBA,EAAkBnsB,MAAQmsB,EAAkBnsB,KACnE0sB,GAAaP,EAAkBnsB,MAE/B0sB,GAAa,IAGXP,GAAqBA,EAAkB1uB,YACzCkvB,GAAeR,EAAkB1uB,aAEjCkvB,GAAe,IAIfR,GACAA,EAAkBnJ,IAClBmJ,EAAkBnJ,GAAlB,YAEA4J,GAAiBT,EAAkBnJ,GAAlB,aAEjB4J,GAAiB,MAElB,CAACT,IAEJnjB,qBAAU,WACR,GAAIshB,EAAmB/hB,MAAQ5M,OAAOC,KAAK0uB,GAAoBzuB,OAAS,EAAG,CACzE,IAAM8K,EAAS2jB,EAAmBntB,KAAKa,MACnCukB,EAAY,GAMhB,GAJI5b,GAAUA,EAAO9K,OAAS,IAC5B0mB,EAAY5b,GAIZ2jB,EAAmBntB,KAAKS,OACxB0sB,EAAmBntB,KAAKS,MAAxB,GAEe+I,EAAO4V,MACpB,SAAC3f,GAAD,OAAUA,EAAKU,KAAOgtB,EAAmBntB,KAAKS,MAAxB,QAGtB2kB,EAAS,CAAI+H,EAAmBntB,KAAKS,OAA5B,oBAAsC2kB,KAGjDL,GAAgBoI,EAAmBntB,KAAKS,MAAxB,IAIlB6b,EAAY8I,MAEb,CAAC+H,IAEJthB,qBAAU,WACRzM,QAAQC,IAAI,WAAYmd,GAEpBA,GAAYA,EAAS,IAAMA,EAAS9d,OAAS,IAC/CU,QAAQC,IAAI,YAAamd,GAErBsI,KAAiBtI,EAAS,GAAGrc,KAC/B4kB,GAAgBvI,EAAS,GAAGrc,IAC5BklB,GAAyB7I,EAAS,QAGrC,CAACA,IAEJ,IAAM8I,GAAuB,uCAAG,WAAOnlB,GAAP,SAAA4L,EAAA,sEACxBmZ,EAAqC,CACzCrmB,WAAY,CACVE,aAAc,CACZwmB,QAASplB,EACTqlB,WAAY,UACZ3gB,OAAQmqB,EAAkB7uB,OANF,2CAAH,sDAYvBklB,GAAwB,uCAAG,WAAOxkB,GAAP,eAAAkL,EAAA,sEACJoZ,EAAqC,CAC9DtmB,WAAY,CACVE,aAAc,CACZwmB,QAAS1kB,EAAMV,GACfqlB,WAAY,UACZ3gB,OAAQmqB,EAAkB7uB,OAND,OACzBslB,EADyB,OAW/BrmB,QAAQC,IAAI,eAAgBomB,GAGxBA,GAAwC,OAAxBA,EAAa/hB,OAC/BwY,GAAwB,qBAiBxB2D,GAAsB,mDAhCO,2CAAH,sDAwCxBjT,GAAY,uCAAG,WAAOC,EAAaC,GAApB,mBAAAf,EAAA,yDAEb2Z,EAAYlJ,EACdA,EAASvd,KAAI,SAAC4B,GACZ,OAAOA,EAAMV,MAEf,KAEA6uB,GAAqBxwB,OAAOC,KAAKuwB,GAAmBtwB,OAAS,GAR9C,oBASXknB,EAAyB,GAE3BF,GAAaA,EAAUhnB,OAAS,GAClCgnB,EAAU/jB,SAAQ,SAAC4jB,GACbyJ,GAAqBA,EAAiB,QACnCA,EAAiB,MAAU7vB,SAASomB,IACvCK,EAAuB9jB,KAAKyjB,SAMhCK,EAAuB,IAAMA,EAAuBlnB,OAAS,GArBhD,gCAsBTsmB,EAAqC,CACzCnmB,WAAY,CACVE,aAAc,CACZymB,WAAY,UACZ3gB,OAAQmqB,EAAkB7uB,KAG9B2D,KAAM,CACJjD,MAAO+kB,KA9BI,mCAkCfA,EAAuB,IACvBA,EAAuBlnB,OAAS,GAnCjB,kCAqCTumB,EAAmC,CACvCpmB,WAAY,CACVE,aAAc,CACZwmB,QAASK,EAAuB,GAAGzlB,GACnCqlB,WAAY,UACZ3gB,OAAQmqB,EAAkB7uB,OA1CjB,yBAiDaq4B,EAAyB,CACvD35B,WAAY,CACVE,aAAc,CACZoB,GAAI6uB,EAAkB7uB,KAG1B2D,KAAM,CACJjG,KAAMgP,EAAOhP,KAAK8nB,OAClBrlB,YAAaA,GACb+vB,MAAOxjB,EAAOwjB,MACd3tB,KAAMmK,EAAOnK,KACbxC,SAAU2tB,GACV7qB,KAAMosB,GACNrsB,MAAOmqB,GACPrsB,MAAO6kB,EACPjlB,MAAOqkB,IAAgBY,EAAU,GAAKA,EAAU,GAAK,GACrD/iB,QAASA,GACTugB,UAAWrW,EAAOqW,UAClBE,gBAAiBvW,EAAOuW,gBACxBE,SAAUA,GAAS5jB,KAAK,KACxBmmB,GAAI,CACF3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUC,GAAW7jB,KAAK,KAC1B7B,KAAMgP,EAAOmW,OAAO2C,OACpBjjB,KAAMmK,EAAOyjB,SACbhwB,YAAa2iB,OA3EA,SAiDbwV,EAjDa,SAiFmC,OAA7BA,EAAkB/0B,SACzCwY,GAAwB,mBACxB+X,GAAsB,GACtByF,EAAqB,eAEhBjB,EAFe,CAGlBv4B,SAAU8uB,EAAkB9uB,SAC5B6C,MAAOisB,EAAkBjsB,MACzBC,KAAMgsB,EAAkBhsB,KACxBvC,MAAOuuB,EAAkBvuB,MACzBI,MAAOmuB,EAAkBnuB,SAG3BzB,QAAQC,IAAI,oBAAqBo5B,GAUjCnc,EAAY,IACZyI,GAAgB,IAChBsK,GAAW,IACXvD,GAAU,IACVC,GAAgB,IAChBkB,GAAW,IACXW,GAAe,IACfE,GAAmB,IACnBhhB,EAAQiZ,aAKVjZ,EAAQC,eAAc,GArHH,4CAAH,wDAwHlBlB,qBAAU,WACR,IAAKojB,EAAkB,UAAe,CACpC,IAAMnkB,EAAQmkB,EAAkB,MAChC,GAAInkB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAEzDF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,aAOjC,CAACoF,IAEJ,IAAM/I,GAAe,SAACpY,GACpBmmB,GAAsB,IAyClB6C,GAAsB,SAACpE,GAC3B,IAIMje,EAHG9R,GAAQ1D,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQ6yB,EAAUvyB,IAMpDuf,EAAclhB,OAAOmhB,OAAO,GAAIhd,GAAQ8R,GAA1BjW,OAAA,IAAAA,CAAA,GAAuCk0B,IACrDsF,EAAiB,uBAClBr1B,GAAQ/C,MAAM,EAAG6U,IADC,CAErBiL,GAFqB,aAGlB/c,GAAQ/C,MAAM6U,EAAQ,KAG3B4a,GAAW2I,GAEX1kB,KAAQ8a,KAAK,2BACb2J,IAAuB,GACvBD,GAAuB,MAWnBjB,GAAmB,SAACnE,GACxBrD,GAAW,CAAC,eAELqD,EAFG,CAGNvyB,GAAIwC,GAAQjE,UAHN,oBAKLiE,MAEL2Q,KAAQ8a,KAAK,0BAmDf,OApBAhvB,QAAQC,IAAI,oBAAqB2vB,GACjC5vB,QAAQC,IAAI,qBAAsB8tB,GAElCthB,qBAAU,WACR,GACEshB,EAAmBntB,MACnBxB,OAAOC,KAAK0uB,EAAmBntB,MAAMtB,OAAS,EAC9C,CACA,IAAM4kB,EAAW6J,EAAmBntB,KAAKsjB,SAAStkB,MAAM,KAExDI,QAAQC,IAAI,gBAAiBikB,GAE7B,IAAMC,EAAa4J,EAAmBntB,KAAK6lB,GAAxB,SAAuC7mB,MAAM,KAChE0wB,GAAYpM,GAAY,IACxBqM,GAAcpM,GAAc,OAE7B,CAAC4J,EAAkB,OAEtB/tB,QAAQC,IAAI,sBAAuB2vB,GAGjC,kBAAC,IAAD,CACE9hB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,kBAGNwiB,EAHM,GAIL7B,EAAkB,MACpB3uB,OAAOC,KAAK0uB,EAAkB,MAAUzuB,OAAS,GACjDyuB,EAAkB,KAAlB,IAAoC,CAClChK,YAAagK,EAAkB,KAAlB,GAAiCjK,UAC9CG,kBACE8J,EAAkB,KAAlB,GAAiC/J,gBACnCJ,OAAQmK,EAAkB,KAAlB,GAAiCtvB,KACzCyyB,SAAUnD,EAAkB,KAAlB,GAAiCzqB,KAC3CugB,cAAekK,EAAkB,KAAlB,GAAiC7sB,iBAKvD,gBACC+M,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEvP,MAAO,CACL2hB,IAAK,QAEPG,UAAW,CACTrS,OAAQ,EACRwG,QAAS,GAEXrE,MAAO,OACP/O,MAAM,eACNmb,QAAS4X,EACThU,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACVa,gBAAgB,EAChB5G,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,WAGZ,6BAASjpB,UAAU,2BACjB,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wCACb,mDACA,yBACEA,UACE6O,EAAOhP,MAAQgP,EAAOhP,KAAKa,OAAS,EAChC,mBACA,aAGN,kBAAC6U,GAAA,EAAD,QAGJ,yBAAKvV,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,OACNE,MAAOsP,EAAOhP,KACdC,YAAa,WACbD,KAAK,OACLF,QACG6P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GACA0hB,EAAmBnkB,MAAnB,WAEJlN,YACG4P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GACA0hB,EAAmBnkB,MAAnB,WAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACxQ,EAAD,CACEI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,0DACbD,KAAK,SACLF,QACG6P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GACA0hB,EAAmBnkB,MAAnB,aAEJlN,YACG4P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GACA0hB,EAAmBnkB,MAAnB,aAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAiEpB,kBAACxQ,EAAD,CACEI,MAAM,OACNE,MAAOsP,EAAOnK,KACd7E,KAAK,OACLC,YAAa,cACbH,QACG6P,EAAQ9K,MAAQ4K,EAAO5K,OACtB6K,GACA0hB,EAAmBnkB,MAAnB,WAEJlN,YACG4P,EAAQ9K,MAAQ4K,EAAO5K,OACtB6K,GACA0hB,EAAmBnkB,MAAnB,WAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACxQ,EAAD,CACEI,MAAM,UACNE,MAAOsP,EAAO6qB,OACd55B,YAAa,0DACbD,KAAK,SACLF,QACG6P,EAAQkqB,QAAUpqB,EAAOoqB,SACxBnqB,GACA0hB,EAAmBnkB,MAAnB,aAEJlN,YACG4P,EAAQkqB,QAAUpqB,EAAOoqB,SACxBnqB,GACA0hB,EAAmBnkB,MAAnB,aAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAACxQ,EAAD,CACEI,MAAM,eACNE,MAAOsP,EAAOwjB,MACdxyB,KAAK,QACLF,QACG6P,EAAQ6iB,OAAS/iB,EAAO+iB,QACvB9iB,GACA0hB,EAAmBnkB,MAAnB,YAEJlN,YACG4P,EAAQ6iB,OAAS/iB,EAAO+iB,QACvB9iB,GACA0hB,EAAmBnkB,MAAnB,YAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,YAIpB,wBAAIzP,UAAU,mBAAd,eAEA,yBACEI,MAAO,CACL4R,MAAO,OACPpC,SAAU,SAGZ,kBAAC,KAAD,CACEijB,OAAQC,KACR9wB,KAAMM,GACNywB,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpBxB,GAAexvB,IAEjBqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,OAK5B,yBACEzyB,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,kBAEA,yBACEI,MAAO,CACL4R,MAAO,OACPpC,SAAU,SAGZ,kBAAC,KAAD,CACEijB,OAAQC,KACR9wB,KAAMijB,GACN8N,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpBvB,GAAiBzvB,IAEnBqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,OAK5B,yBACEzyB,MAAO,CACL0V,UAAW,SAGZ,OAKP,yBAAK9V,UAAU,kCACb,yBAAKA,UAAU,wCACb,iDAEA,yBACEA,UACE2E,IAAWA,GAAQjE,OAAS,EACxB,mBACA,aAGN,kBAAC6U,GAAA,EAAD,QAIJ,yBAAKvV,UAAU,sCACb,kBAAC,KAAD,CACEi6B,UAAU,EACVC,YAAY,MACZ56B,KAAK,OACL66B,UAAWN,GACXp6B,SAAU,SAACF,GACTu6B,GAAuB,GAAD,OAAIv6B,MAG5B,kBAAC,GAAD,CAAS8iB,IAAI,gBAAgBhgB,IAAI,KAC/B,kBAAC,GAAD,CACEw2B,iBAAkBA,GAClBtE,YAAaoF,GACbb,oBAAqBA,GACrBC,oBAAqBA,MAGzB,kBAAC,GAAD,CAAS1W,IAAI,eAAehgB,IAAI,KAC9B,yBAAKrC,UAAU,uDACZ2E,GAAQjE,OAAS,GAChBiE,GAAQ1D,KAAI,SAACQ,GACX,OACE,yBAAKzB,UAAU,4DACb,yBAAKA,UAAU,iEAIb,0BACEA,UAAU,kBACV+P,QAAS,YAranB,SAAC5N,GACzB43B,IAAuB,GACvB,IAAMxF,EAAc5vB,GAAQyc,MAAK,SAAC3f,GAAD,OAAUA,EAAKU,KAAOA,KACnDoyB,GACFqF,GAAmBrF,GAkae6F,CAAkB34B,EAAKU,IACvB23B,GAAuB,OAGzB,kBAAClP,GAAA,EAAD,OAEF,0BACE5qB,UAAU,oBACV+P,QAAS,kBA3ZjB,SAAC5N,GAC3B,IAAMk4B,EAAa11B,GAAQqb,QAAO,SAACve,GAAD,OAAUA,EAAKU,KAAOA,KACxDkvB,GAAWgJ,GACX/kB,KAAQ8a,KAAK,2BAyZuBkK,CAAoB74B,EAAKU,MAG3B,kBAACygB,GAAA,EAAD,QAGJ,yBAAK5iB,UAAU,gEACb,6BACE,qCACA,yBAAKA,UAAU,iEACZyB,EAAK+C,MAAM0tB,MACV,oCACE,4BAAKzwB,EAAK+C,MAAM0tB,OADlB,IAEE,wBACE9xB,MAAO,CACLm6B,eAAgB,iBAGjB94B,EAAK+C,MAAMytB,UAIhB,4BAAKxwB,EAAK+C,MAAMytB,WAKrBxwB,EAAKw3B,OAASx3B,EAAKw3B,MAAL,WACb,6BACE,kBAAC,KAAD,CACEtiB,cAAe,IACf/P,MAAOnF,EAAKw3B,MAAM/zB,WAElB,sCAEDzD,EAAKw3B,MAAL,SACC,oCACE,yBAAKj5B,UAAU,iEACb,6BACE,kCAEE,kBAAC,KAAD,CACEA,UAAU,qBACV2W,cAAe,IACf/P,MAAOnF,EAAKw3B,MAAM9zB,gBAWnC1D,EAAK2yB,WACJ5zB,OAAOqO,OAAOpN,EAAK2yB,WAAW1zB,OAC5B,GACA,oCACE,0CACA,yBAAKV,UAAU,iEACZyB,EAAK2yB,WACJ5zB,OAAOC,KAAKgB,EAAK2yB,WAAW1zB,OAC1B,GACFF,OAAOC,KAAKgB,EAAK2yB,WAAWnzB,KAC1B,SAACs3B,GACC,OACE,6BACE,4BAAKA,GACL,4BAEI92B,EAAK2yB,UACHmE,gBAe7B5zB,GAAQjE,OAAS,IAClB,yBACEN,MAAO,CACL4R,MAAO,OACPkC,QAAS,OACTC,eAAgB,WAGlB,kBAAC,KAAD,CACE7R,YAAY,mBACZO,MAAOmR,KAAMK,6BAQzB,yBAAKrU,UAAU,mDAInB,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,wCACb,qCAEA,kBAAC,KAAD,CACEkW,UAAU,OACVjT,MACE,uFAGF,uBAAGuT,KAAK,OACN,kBAAC2S,GAAA,EAAD,SAKN,yBACE/oB,MAAO,CACLiW,QAAS,QAEXrW,UAAU,gCAETmvB,EAAmBhiB,WAClB,yBACE/M,MAAO,CACLiW,QAAS,WAGX,kBAAC,KAAD,OAGH8Y,EAAmB/hB,MAClB,oCACGoR,GAECA,EAAS9d,OAAS,GAClB8d,EAASvd,KAAI,SAAC4B,EAAO4T,GACnB,OACE,yBAAKzW,UAAU,sCACb,yBACEA,UAAU,kDACV+P,QAAS,WACPgX,GAAgBlkB,EAAMV,IACtBklB,GAAyBxkB,KAG3B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACE4M,QAAS,YA9nBd,SAAC5N,GAE1B,IAAMknB,EACJ7K,GACAA,EAASwB,QAAO,SAACnd,GACf,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GAunBoBC,CAAmBzmB,EAAMV,IACzBmlB,GAAwBzkB,EAAMV,KAEhCnC,UAAU,6CAEV,kBAAC0iB,GAAA,EAAD,QAGDoE,KAAiBjkB,EAAMV,KAKrB2kB,IACS,IAAVrQ,IALA,0BAAMzW,UAAU,4CACd,kBAAC2iB,GAAA,EAAD,WAcZ,kBAAC,KAAD,CAAS1f,MAAO,iBACd,yBACE8M,QAAS,WACPsO,GAAW,GACXoN,IAAwB,GACxBD,GAA2B,IAE7BxrB,UAAU,4CAKV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACd,kBAAC6kB,GAAA,EAAD,YASd,yBAAK7kB,UAAU,kCACb,yBAAKA,UAAU,wCACb,yCAEA,kBAAC,KAAD,CACEkW,UAAU,OACVjT,MACE,sFAGF,uBAAGuT,KAAK,OACN,kBAAC2S,GAAA,EAAD,SAIN,yBAAKnpB,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QACG6P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GACA0hB,EAAmBnkB,MAAnB,gBAEJlN,YACG4P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GACA0hB,EAAmBnkB,MAAnB,gBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACxQ,EAAD,CACEI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QACG6P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACA0hB,EAAmBnkB,MAAnB,kBAEJlN,YACG4P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACA0hB,EAAmBnkB,MAAnB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACEpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QACG6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACA0hB,EAAmBnkB,MAAnB,sBAEJlN,YACG4P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACA0hB,EAAmBnkB,MAAnB,sBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACEpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QACG6P,EAAQ6V,mBACP/V,EAAO+V,oBACP9V,GACA0hB,EAAmBnkB,MAAnB,wBAIJlN,YACG4P,EAAQ6V,mBACP/V,EAAO+V,oBACP9V,GACA0hB,EAAmBnkB,MAAnB,wBAIJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEEwjB,QAASkO,GACT1sB,KAAMsgB,KAGR,yBACEllB,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEEwjB,QAASmO,GACT3sB,KAAMugB,QAKd,yBAAKvlB,UAAU,kCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,0CAEA,kBAAC,KAAD,CACEwV,MAAM,MACN4I,QACE6S,EAAmBnkB,MAAnB,kBACEqkB,GAAYzwB,OAAS,GAEzBwV,UAAU,OACVjT,MAAO,gCAEP,yBACEjD,UACImxB,GAAYzwB,OAAS,GACtBuwB,EAAmBnkB,MAAnB,eAEGmkB,EAAmBnkB,MAAnB,eACA,kBACA,mBAHA,aAMN,kBAACyI,GAAA,EAAD,SAIN,yBAAKvV,UAAU,mDACb,kBAAC,GAAD,CACE8vB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,QAMxB,yBAAK5vB,UAAU,gCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,qCAEF,yBAAKA,UAAU,mDACb,kBAAC,GAAD,CACE+tB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,QAKnB,yBAAK9tB,UAAU,kCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,sCAEF,yBAAKA,UAAU,mDACb,kBAAC,GAAD,CACEmvB,mBAAoBA,EACpBD,QAASA,GACTD,WAAYA,WAS1B,kBAAC,GAAD,CACE5Q,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,SC14BnB3M,IArbiBwK,KAAxBD,OAAwBC,KAAhBC,YACG2P,IAAX9B,OAobOtY,aALS,SAAA3E,GAAK,MAAK,CAChC6D,MAAO7D,EAAM2D,eAIyB,KAAzBgB,EA9aQ,SAAC,GAAoB,IAAnBd,EAAkB,EAAlBA,MAAkB,EACc5C,EACrD,GACA,qBAHuC,mBAClCihB,EADkC,KACd+B,EADc,KAMnCpwB,EAASurB,eACT9X,EAAUC,eACVgf,EAAY1yB,EAAM,GARiB,EASW+Q,oBAAS,GATpB,mBASlCmkB,EATkC,KASdC,EATc,OAUSpkB,mBAAS,IAVlB,mBAUlCmf,EAVkC,KAUf0K,EAVe,KAYzC7tB,qBAAU,YACc,uCAAG,4BAAAE,EAAA,sEACQmjB,EAAyB,CACtDrwB,WAAY,CACVE,aAAc,CACZoB,GAAIqxB,MAJa,QACjBmI,EADiB,SAYrBD,EAAqBC,GAGvBv6B,QAAQC,IAAI,mBAAoBs6B,GAfT,2CAAH,qDAkBtB3J,KACC,CAACwB,IAEJpyB,QAAQC,IAAI,qBAAsB8tB,GAElC/tB,QAAQC,IAAI,cAAeP,GAE3B,IA0BMgsB,EACJqC,EAAmB/hB,MAAQ4jB,GAAqBA,EAAiB,MA3BxC,SAACjE,GAC1B,IAAKA,EAAK,GAAI,OAAO,EACrBA,EAAOA,EAAK9rB,KAAI,SAACQ,GAAD,OAAUA,EAAKgB,SAC/B,IAAMuqB,EAAU,GAEZC,EAAa,EACbC,EAAe,EAiBnB,OAfAH,EAAKppB,SAAQ,SAAClC,EAAMgV,GACdwW,EAAa,GACXD,EAAQE,GACVF,EAAQE,GAAR,uBAA4BF,EAAQE,IAApC,CAAmDzrB,IAC9CurB,EAAQE,GAAgB,CAACzrB,GAEhCwrB,GAA0B,EAC1BC,GAA8B,IAE9BD,EAAa,EACbC,EAAe,EACf9rB,QAAQC,IAAI,aAAc4rB,OAIvBD,EAKHG,CAAmB6D,EAAiB,OACpC,GAEN,OACE,yBAAKhxB,UAAU,wBACb,yBAAKA,UAAU,iCACb,8CAECmvB,EAAmB/hB,MAClB4jB,GACAxwB,OAAOC,KAAKuwB,GAAmBtwB,OAAS,GACtC,oCACE,kBAACk7B,GAAD,CACE5F,mBAAoBA,EACpBC,sBAAuBA,EACvBjF,kBAAmBA,EACnB0K,qBAAsBA,IAEpB1qB,GAAS,gBAAgBF,IACzB,kBAAC,IAAD,CACAf,QAAS,kBAAMkmB,GAAsB,IACrC32B,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAHN,UAYZ,kBAAC,KAAD,CACEyC,QAAM,EACNC,UAAW,CAAEzP,KAAM,GACnB7N,QAASmf,EAAmBhiB,WAE3BgiB,EAAmB/hB,MAClB4jB,KACExwB,OAAOC,KAAKuwB,GAAmBtwB,OAAS,IACxC,kBAAC,KAAD,CACE4B,YAAY,mBACZO,MAAOmR,KAAMK,yBAIlB8a,EAAmB/hB,MAClB4jB,GACAxwB,OAAOC,KAAKuwB,GAAmBtwB,OAAS,GACtC,oCACE,yBAAKV,UAAU,gCACb,yBAAKA,UAAU,mGACb,yBACEoL,IACE4lB,EAAiB,OACjBA,EAAiB,MAAjB,MAEF7tB,IAAI,MAGR,yBAAKnD,UAAU,qCACb,4BAAKgxB,EAAiB,MACtB,4BAAKA,EAAiB,OACtB,4BAAKA,EAAiB,aAErBA,EAAiB,KAChB,mCAEE,8BAAOA,EAAiB,MAqB3BA,EAAiB,UAChBA,EAAiB,SAAatwB,OAAS,GACrC,oCACE,0CAEGswB,EAAiB,SAAa/vB,KAAI,SAACoF,GAClC,OACE,0BACE0J,QAAS,kBACPwE,EAAQzQ,KAAR,0BAAgCuC,EAAIlE,OAGrCkE,EAAIxG,aAUtBmxB,EAAiB,MAChB,oCACE,yBAAKhxB,UAAU,iCACb,qCAGF,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,gGACb,yBACEoL,IACE4lB,EAAiB,MAAYA,EAAiB,KAEhD7tB,IAAI,OAKV,yBACE/C,MAAO,CACL6a,aAAc,WAMrB+V,EAAiB,SAChBA,EAAiB,QAAYtwB,OAAS,GACpC,oCACE,yBAAKV,UAAU,iCACb,wCAGF,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,uDACZgxB,EAAiB,QAAY/vB,KAAI,SAACQ,GACjC,OACE,yBAAKzB,UAAU,4DACb,yBAAKA,UAAU,gEACb,6BACE,qCACA,yBAAKA,UAAU,iEACZyB,EAAK+C,MAAM0tB,MACV,oCACE,4BAAKzwB,EAAK+C,MAAM0tB,OADlB,IAEE,wBACE9xB,MAAO,CACLm6B,eAAgB,iBAGjB94B,EAAK+C,MAAMytB,UAIhB,4BAAKxwB,EAAK+C,MAAMytB,WAKrBxwB,EAAKw3B,OACJ,6BACE,kBAAC,KAAD,CACEtiB,cAAe,IACf/P,MAAOnF,EAAKw3B,MAAM/zB,WAElB,sCAEF,yBAAKlF,UAAU,iEACb,6BACE,kCAEE,kBAAC,KAAD,CACEA,UAAU,qBACV2W,cAAe,IACf/P,MAAOnF,EAAKw3B,MAAM9zB,eAS/B1D,EAAK2yB,WACJ5zB,OAAOqO,OAAOpN,EAAK2yB,WAAW1zB,OAAS,GACrC,oCACE,0CACA,yBAAKV,UAAU,iEACZyB,EAAK2yB,WACJ5zB,OAAOC,KAAKgB,EAAK2yB,WAAW1zB,OAC1B,GACFF,OAAOC,KAAKgB,EAAK2yB,WAAWnzB,KAC1B,SAACs3B,GACC,OACE,6BACE,4BAAKA,GACL,4BAEI92B,EAAK2yB,UACHmE,gBAiBlC,yBACEn4B,MAAO,CACL6a,aAAc,WAMvB+V,EAAiB,OAChBA,EAAiB,MAAUtwB,OAAS,GAClC,oCACE,yBAAKV,UAAU,iCACb,8CAGF,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,kBACZ8sB,GACCtsB,OAAOC,KAAKqsB,GAAK7rB,KAAI,SAAC+b,GACpB,OACE,yBAAKhd,UAAU,qBACZ8sB,EAAI9P,IACH8P,EAAI9P,GAAQ/b,KAAI,SAAC6B,GACf,OACE,yBACEsI,IAAKtI,EACL1C,MAAO,CACL4R,MAAO,oBAY/B,yBACE5R,MAAO,CACL6a,aAAc,WAMvB+V,EAAiB,OAChBxwB,OAAOC,KAAKuwB,EAAiB,OAAWtwB,OAAS,GAC/C,oCACE,yBAAKV,UAAU,iCACb,sCAGF,yBACE+P,QAAS,kBACPwE,EAAQzQ,KAAR,uBACkBktB,EAAiB,MAAjB,MAGpBhxB,UAAU,+BAEV,yBAAKA,UAAU,wCACb,yBACEoL,IACE4lB,EAAiB,MAAjB,OACAA,EAAiB,MAAjB,MAEF7tB,IAAI,MAGR,yBAAKnD,UAAU,oCACb,4BAAKgxB,EAAiB,MAAjB,MACL,4BAAKA,EAAiB,MAAjB,eAIT,yBACE5wB,MAAO,CACL6a,aAAc,WAMvB+V,EAAiB,iBAChBxwB,OAAOC,KAAKuwB,EAAiB,iBAAqBtwB,OAChD,GACA,oCACE,yBAAKV,UAAU,iCACb,iDAGF,yBACE+P,QAAS,kBACPwE,EAAQzQ,KAAR,0BACqBktB,EAAiB,gBAAjB,MAGvBhxB,UAAU,+BAEV,yBAAKA,UAAU,wCACb,yBACEoL,IACE4lB,EAAiB,gBAAjB,OACAA,EAAiB,gBAAjB,MAEF7tB,IAAI,MAGR,yBAAKnD,UAAU,oCACb,4BAAKgxB,EAAiB,gBAAjB,MACL,4BACGA,EAAiB,gBAAjB,eAKP,yBACE5wB,MAAO,CACL6a,aAAc,kBCzbhC9M,GAAmBC,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAcnE8hB,GAAwB,SAACvM,GAC3BD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAK7ChH,GAAgB,CAClB3O,KAAM,GACTmlB,OAAQ,GACR1iB,YAAa,GACb2iB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IA0UEsW,GA3TG,SAAC,GAAoF,IAAlFC,EAAiF,EAAjFA,eAAgBC,EAAiE,EAAjEA,kBAAmBC,EAA8C,EAA9CA,cAAc7G,EAAgC,EAAhCA,WAAWO,EAAqB,EAArBA,QAAqB,EAC9CxnB,EAAe,GAAI,aAD2B,mBAC3F+tB,EAD2F,KAC3EC,EAD2E,OAE3ErqB,mBAAS,IAFkE,mBAE3F7M,EAF2F,KAEtFwe,EAFsF,OAGvE3R,mBAAS,IAH8D,mBAG3F+U,EAH2F,KAGpFC,EAHoF,KAM5FjY,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAf,EAAA,sEACUmuB,EAA0B,CACjDr7B,WAAY,CACRE,aAAc,CACVoB,GAAI0M,EAAO1M,KAGnB2D,KAAM,CACFjG,KAAMgP,EAAOhP,KACbyC,YAAauM,EAAOvM,YACpB4iB,UAAWrW,EAAOqW,UAClBE,gBAAiBvW,EAAOuW,gBACxBE,SAAUtgB,EAAKtD,KAAK,KAEpBmmB,GAAI,CACf3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUsB,EAAOllB,KAAK,KACtB7B,KAAMgP,EAAOmW,OAAO2C,OACpBrlB,YAAauM,EAAOoW,kBAnBA,QACXkX,EADW,SA0B2B,OAAxBA,EAAaz2B,QAOhC+Q,EAJgB,WACrB,OAAOif,EAAQz0B,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQgN,EAAO1M,IAGtC+4B,GAGRxZ,EAAclhB,OAAOmhB,OAAO,GAAI+T,EAAQjf,GAA1BjW,OAAA,IAAAA,CAAA,GAAuC27B,IACrDC,EAXiD,uBAW7B1G,EAAQ9zB,MAAM,EAAG6U,IAXY,CAWJiL,GAXI,aAWYgU,EAAQ9zB,MAAM6U,EAAQ,KACzF0e,EAAWiH,GAGFh7B,QAAQC,IAAI,uBAAuB86B,GA1Fd7mB,OA2FrB4I,EA1FR7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,cACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAwFhDumB,GAAkB,IAcTla,KAGJ/S,EAAQC,eAAc,GA5DL,iCAjDO,IAACuG,IAiDR,OAAH,wDAgEZ4S,EAAe,SAACpY,GAClBisB,GAAkB,IAiCtB,OALA36B,QAAQC,IAAI,gBAAgB26B,GAMxB,kBAAC,IAAD,CACI9sB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACNA,GADM,GAENwtB,EAFM,GAGJA,GAAiBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAAK,CAC3DykB,YAAa6W,EAAa,IACvBA,EAAa,GAAO9W,WACpB8W,EAAa,GAAO9W,UACvBG,kBAAmB2W,EAAa,IAAWA,EAAa,GAAO5W,iBAAmB4W,EAAa,GAAO5W,gBACtGJ,OAAQgX,EAAa,IAAUA,EAAa,GAAOn8B,MAAQm8B,EAAa,GAAOn8B,KAC/EolB,cAAe+W,EAAa,IAAUA,EAAa,GAAO15B,aAAe05B,EAAa,GAAO15B,gBAIpG,gBACG+M,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACCvP,MAAO,CACxB2hB,IAAK,QAGe9e,MAAM,WACNmb,QAAS0d,EACT9Z,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SAC5B6G,cAAe,CACdhZ,QAAST,EACT0Z,SAAU,WAGkB,kBAAChqB,EAAD,CAC5BI,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLC,YAAa,YACbH,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgB0sB,EAAenvB,MAAf,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgB0sB,EAAenvB,MAAf,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,0DACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgB0sB,EAAenvB,MAAf,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgB0sB,EAAenvB,MAAf,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAKlB,kBAAC,GAAD,CACCpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACUzC,KAAK,cACLS,YAAa,cACrCX,QAAU6P,EAAQlN,aAAegN,EAAOhN,cACrCiN,GAAgB0sB,EAAenvB,MAAf,kBAEnBlN,YAAc4P,EAAQlN,aAAegN,EAAOhN,cACzCiN,GAAgB0sB,EAAenvB,MAAf,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,iBACNE,MAAOsP,EAAOoW,cACd3kB,YAAa,iDACbT,KAAK,gBACLF,QAAU6P,EAAQyV,eAAiB3V,EAAO2V,gBACvC1V,GAAgB0sB,EAAenvB,MAAf,oBAEnBlN,YAAc4P,EAAQyV,eAAiB3V,EAAO2V,gBAC3C1V,GAAgB0sB,EAAenvB,MAAf,oBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBAKzB,kBAACxQ,EAAD,CACQI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACnC3V,GAAgB0sB,EAAenvB,MAAf,gBAEnBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACvC3V,GAAgB0sB,EAAenvB,MAAf,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACxQ,EAAD,CACCI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACrC5V,GAAgB0sB,EAAenvB,MAAf,kBAEnBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cACzC5V,GAAgB0sB,EAAenvB,MAAf,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACzC7V,GAAgB0sB,EAAenvB,MAAf,sBAEnBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC7C7V,GAAgB0sB,EAAenvB,MAAf,sBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC3C9V,GAAgB0sB,EAAenvB,MAAf,wBAEnBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC/C9V,GAAgB0sB,EAAenvB,MAAf,wBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASA,EACTxe,KAAMA,IAGN,yBAAK5E,MAAO,CACX0V,UAAU,UAGX,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASqD,EACT7hB,KAAM4hB,UC3UPzY,GAAmBC,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAcnE8hB,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAK7ChH,GAAgB,CAClB3O,KAAM,GACTmlB,OAAQ,GACR1iB,YAAa,GACb2iB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAoTE4Q,GAvSK,SAAC,GAAqF,IAAnFzQ,EAAkF,EAAlFA,sBAAuBC,EAA2D,EAA3DA,yBAA0B+P,EAAiC,EAAjCA,QAASP,EAAwB,EAAxBA,WAAwB,EAE5DjnB,EAAe,GAAI,UAFyC,mBAE9FmuB,EAF8F,KAEjFC,EAFiF,OAGrEzqB,oBAAS,GAH4D,mBAG9F2M,EAH8F,KAGpFF,EAHoF,OAI7DzM,oBAAS,GAJoD,mBAI9F2kB,EAJ8F,KAIhFC,EAJgF,OAK9E5kB,mBAAS,IALqE,mBAK9F7M,EAL8F,KAKzFwe,EALyF,OAM7E3R,mBAAS,IANoE,mBAMjG+U,EANiG,KAM1FC,EAN0F,KAQ/FjY,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACOuuB,EAAkB,CACtCz7B,WAAY,CACRE,aAAc,CACVoB,GAAI0M,EAAO1M,KAGnB2D,KAAM,CACFjG,KAAMgP,EAAOhP,KAAK8nB,OAClBrlB,YAAauM,EAAOvM,YACpB4iB,UAAWrW,EAAOqW,UAClBE,gBAAiBvW,EAAOuW,gBACxBE,SAAUtgB,EAAKtD,KAAK,KAIpBmmB,GAAI,CACf3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUsB,EAAOllB,KAAK,KACtB7B,KAAMgP,EAAOmW,OAAO2C,OACpBrlB,YAAauM,EAAOoW,kBArBA,QACXsX,EADW,SA2BqB,OAArBA,EAAU72B,QA5EF4P,OA6ErB4I,EA5ER7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,cACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BA2EvC2f,EAAW,CAAC,CACRhzB,GAAIo6B,EAAS,KAAW,GACxBl6B,IAAKk6B,EAAS,KAAW,GACzB18B,KAAM08B,EAAS,MAAY,GAC3Bj6B,YAAai6B,EAAS,aAAmB,KAJnC,oBAKL7G,KACL5mB,EAAQiZ,YACRpC,GAAyB,IAGzB9D,KAIJ/S,EAAQC,eAAc,GA5CL,iCAjDO,IAACuG,IAiDR,OAAH,wDAiDZ4S,EAAe,SAACpY,GAClB6V,GAAyB,IA0B7B,OACI,kBAAC,IAAD,CACIzW,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIvP,MAAO,CACH2hB,IAAK,QAET9e,MAAM,cACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SAC5B6G,cAAe,CACdhZ,QAAST,EACT0Z,SAAU,WAGG,kBAAChqB,EAAD,CACbI,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLC,YAAa,YACbH,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgB8sB,EAAYvvB,MAAZ,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgB8sB,EAAYvvB,MAAZ,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,0DACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgB8sB,EAAYvvB,MAAZ,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgB8sB,EAAYvvB,MAAZ,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAKlB,kBAAC,GAAD,CACCpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACUzC,KAAK,cACLS,YAAa,cACrCX,QAAU6P,EAAQlN,aAAegN,EAAOhN,cACrCiN,GAAgB8sB,EAAYvvB,MAAZ,kBAEnBlN,YAAc4P,EAAQlN,aAAegN,EAAOhN,cACzCiN,GAAgB8sB,EAAYvvB,MAAZ,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,iBACNE,MAAOsP,EAAOoW,cACd3kB,YAAa,iDACbT,KAAK,gBACLF,QAAU6P,EAAQyV,eAAiB3V,EAAO2V,gBACvC1V,GAAgB8sB,EAAYvvB,MAAZ,oBAEnBlN,YAAc4P,EAAQyV,eAAiB3V,EAAO2V,gBAC3C1V,GAAgB8sB,EAAYvvB,MAAZ,oBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBAKzB,kBAACxQ,EAAD,CACQI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACnC3V,GAAgB8sB,EAAYvvB,MAAZ,gBAEnBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACvC3V,GAAgB8sB,EAAYvvB,MAAZ,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACxQ,EAAD,CACCI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACrC5V,GAAgB8sB,EAAYvvB,MAAZ,kBAEnBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cACzC5V,GAAgB8sB,EAAYvvB,MAAZ,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACzC7V,GAAgB8sB,EAAYvvB,MAAZ,sBAEnBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC7C7V,GAAgB8sB,EAAYvvB,MAAZ,sBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC3C9V,GAAgB8sB,EAAYvvB,MAAZ,wBAEnBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC/C9V,GAAgB8sB,EAAYvvB,MAAZ,wBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASA,EACTxe,KAAMA,IAGN,yBAAK5E,MAAO,CACX0V,UAAU,UAGX,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASqD,EACT7hB,KAAM4hB,KAKW,kBAAC,GAAD,CACIvI,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SC9R1CpC,IAXiB/N,MAAaC,MAAM,CAC3CxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAUtCqc,KAAxBD,QACA+N,IADwB9N,KAAhBC,YACG2P,IAAX9B,QAIFC,GAAU,SAAC,GAAiC,IAA/BnoB,EAA8B,EAA9BA,KAAMmzB,EAAwB,EAAxBA,WAAYrkB,EAAY,EAAZA,MAAY,EAClBe,oBAAS,GADS,mBACzCuM,EADyC,KAChCC,EADgC,OAEUxM,oBAAS,GAFnB,mBAEzCuY,EAFyC,KAElBC,EAFkB,OAGDnc,EAAe,GAAI,aAHlB,mBAGzBknB,GAHyB,WAK1C7gB,EAAUC,eAGV6gB,EAAe,uCAAG,WAAOlzB,GAAP,iBAAA4L,EAAA,sEACIqnB,EAAqB,CAC/Cv0B,WAAY,CACXE,aAAc,CACboB,SAJoB,QACjBmzB,EADiB,SAYqB,OAAxBA,EAAa5vB,SAvDF4P,EAwDN,cAvD1BD,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,cACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAqDpC+f,EAAavzB,EAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAKU,KAAOA,KACnDgzB,EAAWI,IAfW,iCA3CO,IAACjgB,IA2CR,OAAH,sDAiCrB,OACC,oCACC,kBAAC,KAAD,CAMCyD,KAAK,QAEL8D,WAAY7a,GAGZ,kBAAC,GAAD,CACCiB,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACP,oCAEC,wBACCpN,QAAS,WACRwE,EAAQzQ,KAAR,qBAA2BqZ,EAAOhb,KAElCkoB,EAAyBlN,IAE1B/c,MAAO,CACN0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGR/R,OAQL,kBAAC,GAAD,CACChB,MAAM,cACNga,UAAU,cACV5a,IAAI,KACJrC,UAAU,yBAKX,kBAAC,GAAD,CACCiD,MAAM,UACNga,UAAU,eACV5a,IAAI,KACJrC,UAAU,yBAIXgR,GAAS,gBAAgBF,IAExB,kBAAC,GAAD,CAEA9Q,UAAU,uBACViD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACR,kBAAC,KAAD,CAAOpE,KAAK,UACX,uBAAGvC,KAAK,MACP,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,kBAC9B,0BAAMjD,UAAU,WAAW+P,QAAS,WACnCsO,GAAW,GACXgM,EAAyBlN,KAEzB,kBAACyN,GAAA,EAAD,SAOH,kBAAC,KAAD,CACC7H,UAAW,kBAAMsS,EAAgBlY,EAAOhb,KACxCc,MAAM,qBAAgBkf,OAAO,MAAMa,WAAW,MAC9C,0BACChjB,UAAU,4BAEV,kBAAC4iB,GAAA,EAAD,aAgBJwH,GAAyB,kBAACoS,GAAD,CACzB9G,QAAS1zB,EACTmzB,WAAYA,EACZ2G,eAAgB1d,EAChB2d,kBAAmB1d,EACnB2d,cAAe5R,MAwIFxY,gBALO,SAAA3E,GAAK,MAAK,CAC9B6D,MAAO7D,EAAM2D,eAIyB,KAAzBgB,EA5HD,SAAC,GAAqB,IAApBd,EAAmB,EAAnBA,MAAmB,EAGNe,mBAAS,IAHH,mBAG7B6jB,EAH6B,KAGpBP,EAHoB,OAKGjnB,EAAe,GAAI,WALtB,mBAK7BggB,EAL6B,KAKnBC,EALmB,KAQpCtgB,qBAAU,YACI,uCAAG,4BAAAE,EAAA,sEACIogB,EAAmB,CACrCttB,WAAW,CACVC,OAAQ,CACNiU,SAAU,QACVC,eAAgB,SALL,OACThQ,EADS,OAUfmwB,EAAWnwB,GAVI,2CAAH,qDAYbwe,KACE,IAtBiC,MA0BKtV,EAAe,GAAI,UA1BxB,gCA2BsB2D,oBAAS,IA3B/B,mBA2B7B6T,EA3B6B,KA2BNC,EA3BM,KAyDpC,OACC,oCAEC,yBAAK3lB,UAAU,yBACd,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,+CACd,wBAAIA,UAAU,uCAAd,QAKA,kBAAC,GAAD,CACCqrB,aAAa,EACbrrB,UAAU,qBACVM,YAAY,gBACZb,SAAU,SAAAqQ,GAAC,OAvBI,SAACvQ,GACrB,GAAI2uB,EAASlsB,KAAKtB,OAAS,EAAG,CAC7B,IAAMk1B,EAAa1H,EAASlsB,KAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBACvFqc,EAAWS,IAoBQtK,CAAaxb,EAAEzE,OAAO9L,WAItCyR,GAAS,gBAAgBF,IACzB,kBAAC,IAAD,CAEA9Q,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJxC,YAYF,yBAAK3lB,UAAU,uCACbkuB,EAAS9gB,MAAQsoB,EAAQh1B,OAAS,GAAK,kBAAC,GAAD,CACxCoQ,MAAOA,EACNqkB,WAAYA,EACZnzB,KAAM0zB,IACNxH,EAAS/gB,WAAa,kBAACoe,GAAD,MAGtB2C,EAAS9gB,QAAUsoB,EAAQh1B,OAAS,IACpC,yBAAKN,MAAO,CACX0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,gBAAgBO,MAAOmR,KAAMK,4BAMpD,kBAACooB,GAAD,CACC/G,QAASA,EACTP,WAAYA,EACZzP,sBAAuBA,EACvBC,yBAA0BA,QCpVxBxX,GAAmBC,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAcnE8hB,GAAwB,SAACvM,GAC3BD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAK7ChH,GAAgB,CAClB3O,KAAM,GACTmlB,OAAQ,GACR1iB,YAAa,GACb2iB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAiUEsW,GAnTG,SAAC,GAAkF,IAAhFC,EAA+E,EAA/EA,eAAgBC,EAA+D,EAA/DA,kBAAmBC,EAA4C,EAA5CA,cAAcU,EAA8B,EAA9BA,iBAA8B,EAC5CxuB,EAAe,GAAI,aADyB,mBACzF+tB,EADyF,KACzEC,EADyE,OAEzErqB,mBAAS,IAFgE,mBAEzF7M,EAFyF,KAEpFwe,EAFoF,OAGrE3R,mBAAS,IAH4D,mBAGzF+U,EAHyF,KAGlFC,EAHkF,KAM1FjY,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACUmuB,EAA0B,CACjDr7B,WAAY,CACRE,aAAc,CACVoB,GAAI0M,EAAO1M,KAGnB2D,KAAM,CACFjG,KAAMgP,EAAOhP,KACbyC,YAAauM,EAAOvM,YACpB4iB,UAAWrW,EAAOqW,UAClBE,gBAAiBvW,EAAOuW,gBACxBE,SAAUtgB,EAAKtD,KAAK,KAEpBmmB,GAAI,CACf3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUsB,EAAOllB,KAAK,KACtB7B,KAAMgP,EAAOmW,OAAO2C,OACpBrlB,YAAauM,EAAOoW,kBAnBA,QACXkX,EADW,SA0B2B,OAAxBA,EAAaz2B,QAC7Bg3B,EAAiB,CACbv6B,GAAG0M,EAAO1M,GACVE,IAAIwM,EAAO1M,GACXtC,KAAMgP,EAAOhP,KACbyC,YAAauM,EAAOvM,cAExBlB,QAAQC,IAAI,uBAAuB86B,GAjFd7mB,OAkFrB4I,EAjFR7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,cACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BA+EhDumB,GAAkB,IAcTla,KAGJ/S,EAAQC,eAAc,GApDL,iCAhDO,IAACuG,IAgDR,OAAH,wDAwDZ4S,EAAe,SAACpY,GAClBisB,GAAkB,IAiCtB,OALA36B,QAAQC,IAAI,gBAAgB26B,GAMxB,kBAAC,IAAD,CACI9sB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACNA,GADM,GAENwtB,EAFM,GAGJA,GAAiBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAAK,CAC3DykB,YAAa6W,EAAa,IACvBA,EAAa,GAAO9W,WACpB8W,EAAa,GAAO9W,UACvBG,kBAAmB2W,EAAa,IAAWA,EAAa,GAAO5W,iBAAmB4W,EAAa,GAAO5W,gBACtGJ,OAAQgX,EAAa,IAAUA,EAAa,GAAOn8B,MAAQm8B,EAAa,GAAOn8B,KAC/EolB,cAAe+W,EAAa,IAAUA,EAAa,GAAO15B,aAAe05B,EAAa,GAAO15B,gBAIpG,gBACG+M,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACCvP,MAAO,CACxB2hB,IAAK,QAGe9e,MAAM,WACNmb,QAAS0d,EACT9Z,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SAC5B6G,cAAe,CACdhZ,QAAST,EACT0Z,SAAU,WAGkB,kBAAChqB,EAAD,CAC5BI,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLC,YAAa,YACbH,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgB0sB,EAAenvB,MAAf,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgB0sB,EAAenvB,MAAf,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,0DACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgB0sB,EAAenvB,MAAf,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgB0sB,EAAenvB,MAAf,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAKlB,kBAAC,GAAD,CACCpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACUzC,KAAK,cACLS,YAAa,cACrCX,QAAU6P,EAAQlN,aAAegN,EAAOhN,cACrCiN,GAAgB0sB,EAAenvB,MAAf,kBAEnBlN,YAAc4P,EAAQlN,aAAegN,EAAOhN,cACzCiN,GAAgB0sB,EAAenvB,MAAf,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,iBACNE,MAAOsP,EAAOoW,cACd3kB,YAAa,iDACbT,KAAK,gBACLF,QAAU6P,EAAQyV,eAAiB3V,EAAO2V,gBACvC1V,GAAgB0sB,EAAenvB,MAAf,oBAEnBlN,YAAc4P,EAAQyV,eAAiB3V,EAAO2V,gBAC3C1V,GAAgB0sB,EAAenvB,MAAf,oBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBAKzB,kBAACxQ,EAAD,CACQI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACnC3V,GAAgB0sB,EAAenvB,MAAf,gBAEnBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACvC3V,GAAgB0sB,EAAenvB,MAAf,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACxQ,EAAD,CACCI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACrC5V,GAAgB0sB,EAAenvB,MAAf,kBAEnBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cACzC5V,GAAgB0sB,EAAenvB,MAAf,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACzC7V,GAAgB0sB,EAAenvB,MAAf,sBAEnBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC7C7V,GAAgB0sB,EAAenvB,MAAf,sBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC3C9V,GAAgB0sB,EAAenvB,MAAf,wBAEnBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC/C9V,GAAgB0sB,EAAenvB,MAAf,wBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASA,EACTxe,KAAMA,IAGN,yBAAK5E,MAAO,CACX0V,UAAU,UAGX,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASqD,EACT7hB,KAAM4hB,UChULzK,GAAwBC,KAAxBD,OAkRSvK,IAlRewK,KAAhBC,YACG2P,IAAX9B,OAiRStY,aALO,SAAA3E,GAAK,MAAK,CAC9B6D,MAAO7D,EAAM2D,eAIyB,KAAzBgB,EA1QM,SAAC,GAAoB,IAAnBd,EAAkB,EAAlBA,MAAkB,EACQ5C,EAAe,GAAI,aAD3B,mBAChCyuB,EADgC,KAChBC,EADgB,OAEY1uB,EAAe,GAAI,eAF/B,mBAEhC2uB,EAFgC,KAEdC,EAFc,OAGKjrB,oBAAS,GAHd,mBAGhCiqB,EAHgC,KAGhBC,EAHgB,OAIElqB,mBAAS,IAJX,mBAIhCmqB,EAJgC,KAIlBU,EAJkB,KAOjC57B,EAASurB,eACT9X,EAAUC,eACVogB,EAAQ9zB,EAAM,GAgDpB,OA9CA+M,qBAAU,YAEc,uCAAG,4BAAAE,EAAA,sEACS6uB,EAAqB,CAC7C/7B,WAAY,CACRE,aAAc,CACVoB,GAAIyyB,MAJG,QACbmI,EADa,UAWf37B,QAAQC,IAAI,eAAe07B,GAE3BL,EAAiBK,IAbF,2CAAH,qDAiBpB7F,KAED,CAACtC,IAEJ/mB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACb+uB,EAAuB,CACzBj8B,WAAY,CACRE,aAAc,CACVoB,GAAIyyB,MAJG,2CAAH,qDAUpBoI,KAED,CAACpI,IAKJxzB,QAAQC,IAAI,mBAAoBw7B,GAEhCz7B,QAAQC,IAAI,cAAeP,GAIvB,yBAAKd,UAAU,wBACX,yBAAKA,UAAU,iCACX,0CAIC28B,EAAevvB,MAAQ4uB,GAAkBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAC1E,oCACI,kBAACu8B,GAAD,CACInB,eAAgBA,EAChBC,kBAAmBA,EACnBC,cAAeA,EACfU,iBAAkBA,IAIxC1rB,GAAS,gBAAgBF,IACxB,kBAAC,IAAD,CACef,QAAS,kBAAMgsB,GAAkB,IACjCz8B,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAHrB,UAaK,kBAAC,KAAD,CACI0C,UAAW,CAAEzP,KAAM,GACnB7N,QAAS2sB,EAAexvB,WACvBwvB,EAAevvB,MAAQ4uB,KAAmBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,IAC3E,kBAAC,KAAD,CAAO4B,YAAY,eAAeO,MAAOmR,KAAMK,yBAGlDsoB,EAAevvB,MAAQ4uB,GAAkBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAC1E,yBAAKV,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACKg8B,EAAa,MAElB,4BACKA,EAAa,aAEjBA,EAAa,KACV,mCAEI,8BACKA,EAAa,SAW1C,yBAAKh8B,UAAU,iCACX,yCAIJ,yBAAKA,UAAU,8BACV68B,EAAiB1vB,WAAa,kBAACoe,GAAD,MAC9BsR,EAAiBzvB,QAAUyvB,EAAiB76B,KAAKtB,OAAS,IACvD,yBAAKN,MAAO,CACR0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,kCAAkCO,MAAOmR,KAAMK,0BAIzEwoB,EAAiBzvB,MAAQyvB,EAAiB76B,MAAQ66B,EAAiB76B,KAAKtB,OAAS,GAC9E,oCACI,kBAAC,KAAD,CACIN,MAAO,CACHmtB,WAAY,OACZltB,aAAc,iBACdmtB,SAAU,SACVvb,UAAW,+FAOf8G,KAAK,QAEL8D,WAAYggB,EAAiB76B,KAC7B8a,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACHoV,MAAO,qBAMnB,kBAAC,GAAD,CACIvS,MAAM,GACNga,UAAU,QACV5a,IAAI,KACJ2P,MAAO,OAEPhS,UAAU,uBAEVkd,OAAQ,SAACza,EAAO0a,GAAR,OACJ,oCACI,yBACIpN,QAAS,WACLwE,EAAQzQ,KAAR,yBAA+BqZ,EAAOhb,MAE1CiJ,IAAK3I,EAAOU,IAAI,YAAY/C,MAAO,CAC/B6T,OAAQ,OACRjC,MAAO,OACP0Y,UAAW,UACXrqB,aAAc,MACd2V,OAAQ,iBAU5B,kBAAC,GAAD,CACI/S,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACJ,oCACI,wBACIpN,QAAS,WACLwE,EAAQzQ,KAAR,yBAA+BqZ,EAAOhb,MAE1C/B,MAAO,CACH0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGX/R,OASjB,kBAAC,GAAD,CACIhB,MAAM,cACNga,UAAU,aACV5a,IAAI,KACJrC,UAAU,yBAKd,kBAAC,GAAD,CACIiD,MAAM,QACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,yBAKd,kBAAC,GAAD,CACIiD,MAAM,YACNga,UAAU,YACV5a,IAAI,KACJrC,UAAU,yBAKd,kBAAC,GAAD,CACIiD,MAAM,UACNga,UAAU,UACV5a,IAAI,KACJrC,UAAU,iCC5K3B6tB,GA3GF,SAAC,GAGA,IAFVgE,EAES,EAFTA,cACAD,EACS,EADTA,WACS,EACqB/f,mBAAS,IAD9B,mBACF9F,EADE,KACOkiB,EADP,OAEoCpc,mBAAS,IAF7C,mBAEFqhB,EAFE,KAEcC,EAFd,OAG8BjlB,EAAe,GAAI,eAHjD,mBAGFggB,EAHE,KAGQC,EAHR,KAKTtgB,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACaogB,EAAmB,CACxCttB,WAAY,CACRC,OAAQ,CACJmqB,eAAe,MAJf,QACNuD,EADM,SAUMA,EAAW9tB,OAAS,IAE5B+tB,EAAaD,EAAWvtB,KAAI,SAACiH,GAC/B,OAAOA,EAAIrI,QAEfouB,EAAWQ,IAfH,2CAAH,qDAoBbjL,KACD,IAIH3V,qBAAU,WACN,GAAG+jB,GAAcA,EAAWlxB,OAAS,EAAE,CACnCU,QAAQC,IAAI,mBACZ,IAAM67B,EAAmBtL,EAAW3wB,KAAI,SAAAQ,GAAI,OAAIA,EAAK5B,QACrDszB,EAAmB+J,MAEzB,CAACtL,IAEHxwB,QAAQC,IAAI,8BAA8BuwB,GAiC1C,OACI,oCAEI,kBAAC,KAAD,CAAU5hB,QAASke,EAAS/gB,WACvB+gB,EAAS9gB,MAAQ8gB,EAASlsB,KAAKtB,OAAS,GAAK,kBAAC,KAAD,CAC1C4R,KAAK,WACLhS,YAAY,kBACZf,MAAO2zB,EACPzzB,SApCK,SAAC4zB,GAKlB,GAJAF,EAAmBE,GAEnBjyB,QAAQC,IAAI,mBAAoBgyB,GAE5BnF,EAAS9gB,MAAQ8gB,EAASlsB,KAAKtB,OAAS,GAAK2yB,EAAY3yB,OAAS,EAAG,CACrE,IAAM4tB,EAAsB+E,EAAYpyB,KAAI,SAACQ,GACzC,IAAM8sB,EAAmBL,EAASlsB,KAAKof,MACnC,SAAC/a,GAAD,OAASA,EAAIxG,KAAKiZ,gBAAkBrX,EAAKqX,iBAE7C,GAAIyV,EACA,OAAOA,KAGfntB,QAAQC,IAAI,sBAAuBitB,GACnCuD,EAAcvD,QAGduD,EAAc,KAmBNzxB,MAAO,CAAE4R,MAAO,SAEfjG,EAAQiU,QAAO,SAAAsT,GAAC,OAAKJ,EAAe/xB,SAASmyB,MAAIryB,KAAI,SAAAQ,GAAI,OACtD,kBAAC,KAAOwV,OAAR,CAAe5U,IAAKZ,EAAMlC,MAAOkC,GAC5BA,OAIZysB,EAAS9gB,MAAQ8gB,EAASlsB,QAAUksB,EAASlsB,KAAKtB,OAAS,IACxD,yBAAKN,MAAO,CACR2V,WAAY,SAEZ,kBAAC,GAAD,CAAO9S,MAAM,mBAAmBgR,OAAQ,UCvDjD6gB,GApCY,SAAC,GAGd,IAFV/D,EAES,EAFTA,eACAF,EACS,EADTA,YAEA,OACI,yBACIzwB,MAAO,CAEH20B,cAAe,QAEnB/0B,UAAU,6CACV,yBAAKA,UAAU,qDACV6wB,GAAeA,EAAYnwB,OAAS,GAAKmwB,EAAY5vB,KAAI,SAAAQ,GACtD,OAAO,kBAACuzB,GAAD,CACHjE,eAAgBA,EAChBF,YAAaA,EACb2C,UAAW/xB,EAAKW,IAChBmD,SAAU9D,EAAK8D,SACf9D,KAAMA,EACN2wB,UAAW3wB,EAAK2wB,iBAIrBvB,EAAYnwB,OAAS,IACpB,yBAAKN,MAAO,CACR2V,WAAY,SAEZ,kBAAC,GAAD,CAAO9S,MAAM,mBAAmBgR,OAAQ,UCL1D9F,GAAmBC,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAcnE8hB,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAK7ChH,GAAgB,CAClB,KAAQ,GACR,KAAQ,GACR,aAAgB,KAChB,OAAU,GACV,WAAc,GACd,gBAAmB,GACnB,cAAgB,EAChB,aAAgB,IAsmBL2nB,GAzlBK,SAAC,GAA2F,IAAzFzQ,EAAwF,EAAxFA,sBAAuBC,EAAiE,EAAjEA,yBAAyBzjB,EAAwC,EAAxCA,SAAUw6B,EAA8B,EAA9BA,iBAA8B,EAEvDxuB,EAAe,GAAI,gBAFoC,mBAEpGivB,EAFoG,KAEpFC,EAFoF,OAGtDlvB,EAAe,GAAI,gBAHmC,mBAGpGmvB,EAHoG,KAGjFC,EAHiF,OAI3EzrB,oBAAS,GAJkE,mBAIpG2M,EAJoG,KAI1FF,EAJ0F,OAKnEzM,oBAAS,GAL0D,mBAKpG2kB,EALoG,KAKtFC,EALsF,OAMnE5kB,mBAAS,IAN0D,mBAMpGiV,EANoG,KAMtFC,EANsF,OAOvElV,mBAAS,IAP8D,mBAOpG+f,EAPoG,KAOxFC,EAPwF,OAQrEhgB,mBAAS,IAR4D,mBAQpGgf,EARoG,KAQvFE,EARuF,OAS/Dlf,mBAAS,IATsD,mBASpG0rB,EAToG,aAU7D1rB,mBAAS,KAVoD,mBAUpG2rB,EAVoG,KAUnFC,EAVmF,KAa3G5vB,qBAAU,YAEgB,uCAAG,sBAAAE,EAAA,sEACfuvB,EAAwB,CAC1Bz8B,WAAY,CACRE,aAAc,CACVoB,GAAID,EAASC,OAJJ,2CAAH,qDAUtB6vB,KAED,CAAC9vB,IAGJ2L,qBAAU,WACN,GAAIwvB,EAAkBr7B,MAAQxB,OAAOC,KAAK48B,EAAkBr7B,MAAMtB,OAAS,EAAG,CAE1E,IAAM8K,EAAS6xB,EAAkBr7B,KAAKa,MAClC2I,GAAUA,EAAO9K,OAAS,GAC1B4d,EAAY9S,GAGZ6xB,EAAkBr7B,KAAKS,OAAS46B,EAAkBr7B,KAAKS,MAAvB,KAEhC6b,EAAY,CAAC+e,EAAkBr7B,KAAKS,QACpCskB,EAAgBsW,EAAkBr7B,KAAKS,MAAvB,QAIzB,CAAC46B,EAAkBr7B,OAGtB6L,qBAAU,WAEF2Q,GAAYA,EAAS,IAAMA,EAAS9d,OAAS,GAEzComB,IAAiBtI,EAAS,GAAGrc,IAC7B4kB,EAAgBvI,EAAS,GAAGrc,MAKrC,CAACqc,IAOJ,IAAM5P,EAAY,uCAAG,WAAOC,EAAaC,GAApB,mBAAAf,EAAA,6DAGjB2Z,EAAYlJ,EAAWA,EAASvd,KAAI,SAAA4B,GACzC,OAAOA,EAAMV,MACH,GAECyF,EAAkBipB,EAAYnwB,OAAS,EAAImwB,EAAY5vB,KAAI,SAAAqD,GAC7D,MAAO,CACHlC,IAAKkC,EAAQlC,IACbgwB,UAAW9tB,EAAQ8tB,UACnB7sB,SAAUjB,EAAQiB,aAErB,GAbY,SA2BO63B,EAA0B,CAC9Cv8B,WAAY,CACRE,aAAc,CACVoB,GAAI0M,EAAO1M,KAGnB2D,KAAM,CACFjG,KAAMgP,EAAOhP,KAAK8nB,OAClBpgB,KAAMsH,EAAOtH,KACbC,aAAcqH,EAAOrH,aACrBO,OAAQ8G,EAAO9G,OACfD,WAAY+G,EAAO/G,WAEnBF,gBAAiBA,EAEjBnF,MAAOqkB,GAAgBY,EAAU,GAAKA,EAAU,GAAK,MA1C5C,QA2BX6U,EA3BW,SA+CqB,OAArBA,EAAU72B,QAvJF4P,OAwJrB4I,EAvJR7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,iBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAqJvCmQ,GAAyB,GAEzB+W,EAAiB,eACtBx6B,EADqB,GAGrBq6B,IAIKztB,EAAQiZ,aAGRlG,KAIJ/S,EAAQC,eAAc,GAjEL,iCAxGO,IAACuG,IAwGR,OAAH,wDAsEZ4S,EAAe,SAACpY,GAClB6V,GAAyB,IAIvB3W,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOhP,OAASoP,GAOzBpB,qBAAU,WACN,GAAI3L,GAAY1B,OAAOC,KAAKyB,GAAUxB,OAAS,EAAG,CAE9C,IAAM8K,EAAStJ,EAASW,MACpB2I,GAAUA,EAAO9K,OAAS,GAC1B4d,EAAY9S,GAGZtJ,EAASO,OAASP,EAASO,MAAT,KAElB6b,EAAY,CAACpc,EAASO,QACtBskB,EAAgB7kB,EAASO,MAAT,QAGzB,CAACP,IAKJ2L,qBAAU,WACN,IAAKsvB,EAAc,UAAe,CAC9B,IAAMrwB,EAAQqwB,EAAc,MAC5B,GAAIrwB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAIrDF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACjCF,OAAOqO,OAAO/B,EAAK,OACnB,IACHnJ,SAAQ,SAACkoB,EAAKC,GACjB,GAAmB,kBAARD,EACPhK,GAAsBgK,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACpBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACThK,GAAsBgK,aAQ/C,CAACsR,IAGJtvB,qBAAU,WACN,GACIwvB,EAAkBjwB,MAAQiwB,EAAiB,MAC5C78B,OAAOC,KAAK48B,EAAiB,MAAU38B,OAAS,GACxB28B,EAAiB,KAAjB,gBAA6C38B,OAAS,EAAE,CAC/E,IAAMkxB,EAAayL,EAAiB,KAAjB,gBAA6Cp8B,KAAI,SAAAQ,GAAI,OAAIA,KAC5EowB,EAAcD,GACd,IAAMf,EAAcwM,EAAiB,KAAjB,gBAA6Cp8B,KAAI,SAAAQ,GACjE,OAAO,eACAA,EADP,CAEIW,IAAKX,EAAKW,IACVgwB,UAAW3wB,EAAK2wB,UAChB7sB,SAAU9D,EAAK8D,cAGxBwrB,EAAeF,MAIpB,CAACwM,IAEHj8B,QAAQC,IAAI,wBAAwBg8B,GAEpCxvB,qBAAU,WAEN,GAAI+jB,EAAWlxB,OAAS,GACpB,GAAIkxB,EAAWlxB,OAASmwB,EAAYnwB,OAAQ,CACxC,IAAM0xB,EAAYR,EAAWA,EAAWlxB,OAAS,GAA/B,QAA6CA,OAAS,GAAKkxB,EAAWA,EAAWlxB,OAAS,GAA/B,QAA6C,GAA7C,IAC7EU,QAAQC,IAAI,YAAa+wB,GAEzBrB,EAAe,GAAD,oBAAKF,GAAL,gBACPe,EAAWA,EAAWlxB,OAAS,GADxB,CAEV0B,IAAKwvB,EAAWA,EAAWlxB,OAAS,GAA/B,GACL0xB,UAAWA,EACX7sB,SAAU,YAKb,GAAIqsB,EAAWlxB,OAASmwB,EAAYnwB,OAAQ,CAC7CU,QAAQC,IAAI,aAAcuwB,GAC1BxwB,QAAQC,IAAI,cAAewvB,GAE3B,IAAM6B,EAAiB7B,EAAY7Q,QAAO,SAAAve,GACtC,IAAIkxB,GAAS,EAMb,OALAf,EAAWjuB,SAAQ,SAAAW,GACXA,EAAQnC,KAAOV,EAAKW,MACpBuwB,GAAS,MAGVA,KAEX5B,EAAe2B,SAMnB3B,EAAe,MAKpB,CAACa,IAIJ/jB,qBAAU,WAEN,GAAI0vB,EAAe78B,OAAS,GACxB,GAAI68B,EAAe78B,OAAS88B,EAAgB98B,OAAQ,CAChD,IAAM0xB,EAAYmL,EAAeA,EAAe78B,OAAS,GAAvC,QAAqDA,OAAS,GAAK68B,EAAeA,EAAe78B,OAAS,GAAvC,QAAqD,GAArD,IACrFU,QAAQC,IAAI,YAAa+wB,GAEzBqL,EAAmB,GAAD,oBAAKD,GAAL,gBACXD,EAAeA,EAAe78B,OAAS,GAD5B,CAEd0B,IAAKm7B,EAAeA,EAAe78B,OAAS,GAAvC,GACL0xB,UAAWA,EACX7sB,SAAU,YAKb,GAAIg4B,EAAe78B,OAAS88B,EAAgB98B,OAAQ,CACrDU,QAAQC,IAAI,iBAAkBk8B,GAC9Bn8B,QAAQC,IAAI,cAAewvB,GAE3B,IAAM6B,EAAiB8K,EAAgBxd,QAAO,SAAAve,GAC1C,IAAIkxB,GAAS,EAMb,OALA4K,EAAe55B,SAAQ,SAAAW,GACfA,EAAQnC,KAAOV,EAAKW,MACpBuwB,GAAS,MAGVA,KAEX8K,EAAmB/K,SAMvB+K,EAAmB,MAKxB,CAACF,IAgBJ,OACI,kBAAC,IAAD,CACIruB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,GACctM,KAG1B,gBACGmN,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIqC,MAAO,OACP5R,MAAO,CACH2hB,IAAK,QAET9e,MAAM,cACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,KAIhD,yBAAKjP,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC3B0P,GAAgB4tB,EAAerwB,MAAf,WAEtBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAC/B0P,GAAgB4tB,EAAerwB,MAAf,WACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,YAI5B,yBAAKzP,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,OACNE,MAAOsP,EAAOtH,KACd1H,KAAK,OACLF,QAAU6P,EAAQjI,MAAQ+H,EAAO/H,OAC3BgI,GAAgB4tB,EAAerwB,MAAf,WAEtBlN,YAAc4P,EAAQjI,MAAQ+H,EAAO/H,OAC/BgI,GAAgB4tB,EAAerwB,MAAf,WACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,aAOhC,kBAACxQ,EAAD,CACII,MAAM,gBACNE,MAAOsP,EAAOrH,aACd3H,KAAK,eACLF,QAAU6P,EAAQhI,cAAgB8H,EAAO9H,eACnC+H,GAAgB4tB,EAAerwB,MAAf,mBAEtBlN,YAAc4P,EAAQhI,cAAgB8H,EAAO9H,eACvC+H,GAAgB4tB,EAAerwB,MAAf,mBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,mBAMxB,yBAAKzP,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,kBACNE,MAAOsP,EAAO9G,OACdlI,KAAK,SACLF,QAAU6P,EAAQzH,QAAUuH,EAAOvH,SAC7BwH,GAAgB4tB,EAAerwB,MAAf,aAEtBlN,YAAc4P,EAAQzH,QAAUuH,EAAOvH,SACjCwH,GAAgB4tB,EAAerwB,MAAf,aACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,cAI5B,yBAAKzP,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,uBACNE,MAAOsP,EAAO/G,WACdjI,KAAK,aACLF,QAAU6P,EAAQ1H,YAAcwH,EAAOxH,aACjCyH,GAAgB4tB,EAAerwB,MAAf,iBAEtBlN,YAAc4P,EAAQ1H,YAAcwH,EAAOxH,aACrCyH,GAAgB4tB,EAAerwB,MAAf,iBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,mBAerD,yBAAKzP,UAAU,gCAEdI,MAAO,CACN6a,aAAc,SAGf,wBAAIjb,UAAU,mBAAd,UAKD,yBAAKA,UAAU,gCACbwe,GAEAA,EAAS9d,OAAS,GAAK8d,EAASvd,KAAI,SAAC4B,EAAO4T,GAC3C,OACC,yBAAKzW,UAAU,sCACd,yBACCA,UAAU,kDACV+P,QAAS,kBAAMgX,EAAgBlkB,EAAMV,MAErC,yBAAKiJ,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGnC,0BACC4M,QAAS,kBA9KS,SAAC5N,GAExB,IAAMknB,EAAY7K,GAAYA,EAASwB,QAAO,SAAAnd,GAC1C,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GAwKQC,CAAmBzmB,EAAMV,KACxCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,QAIAoE,IAAiBjkB,EAAMV,KAInB2kB,GAA0B,IAAVrQ,IAHpB,0BAAMzW,UAAU,4CACf,kBAAC2iB,GAAA,EAAD,WAkBJnE,KAEAA,GAAcA,GAAYA,EAAS9d,OAAS,GAiBzC,GAhBH,oCACA,kBAAC,KAAD,CACDuC,MAAO,iBAEP,yBACC8M,QAAS,WACR0mB,GAAgB,IAEjBz2B,UAAU,4CACV,kBAACupB,GAAA,EAAD,MACA,0BAAMvpB,UAAU,iDACf,kBAAC6kB,GAAA,EAAD,WAiBiB,wBAAI7kB,UAAU,mBAAd,oBAIA,kBAAC09B,GAAD,CACI7L,cAAeA,EACfD,WAAYA,IAGhB,yBAAKxxB,MAAO,CACR0V,UAAW,UAGf,wBAAI9V,UAAU,mBAAd,6BAIA,kBAAC29B,GAAD,CACI9M,YAAaA,EACbE,eAAgBA,KA8BxB,kBAAC,GAAD,CACI1S,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCrbnCwX,IAhNiB3Z,KAAxBD,OAAwBC,KAAhBC,YACG2P,IAAX9B,OAOe,SAAC5V,GAAkB,IAAD,EACUpG,EAAe,GAAI,gBAD7B,mBAC9ByuB,EAD8B,KACdC,EADc,OAEc1uB,EAAe,GAAI,eAFjC,mBAE9B2uB,EAF8B,aAGOhrB,oBAAS,IAHhB,mBAG9BiqB,EAH8B,KAGdC,EAHc,OAIIlqB,mBAAS,IAJb,mBAI9BmqB,EAJ8B,KAIhBU,EAJgB,KAM/B57B,EAASurB,eAETuI,GADUpgB,eACF1T,EAAM,IAkCpB,OAhCA+M,qBAAU,YAEc,uCAAG,4BAAAE,EAAA,sEACD6uB,EAAqB,CACnC/7B,WAAY,CACRE,aAAc,CACVoB,GAAIyyB,MAJG,QACbhoB,EADa,SAYf8vB,EAAiB9vB,GAZF,2CAAH,qDAgBpBsqB,KAED,CAACtC,IAOJxzB,QAAQC,IAAI,eAAgBs7B,GAE5Bv7B,QAAQC,IAAI,cAAeP,GAIvB,yBAAKd,UAAU,wBACX,yBAAKA,UAAU,iCACX,6CAIC28B,EAAevvB,MAAQ4uB,GAAkBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAC1E,oCACI,kBAACk9B,GAAD,CACIlY,sBAAuBoW,EACvBnW,yBAA0BoW,EAC1B75B,SAAU85B,EACVU,iBAAkBA,IAEtB,kBAAC,IAAD,CACI3sB,QAAS,kBAAMgsB,GAAkB,IACjCz8B,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAHV,UAUZ,kBAAC,KAAD,CACI0C,UAAW,CAAEzP,KAAM,GACnB7N,QAAS2sB,EAAexvB,WACvBwvB,EAAevvB,MAAQ4uB,KAAmBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,IAC3E,kBAAC,KAAD,CAAO4B,YAAY,kBAAkBO,MAAOmR,KAAMK,yBAGrDsoB,EAAevvB,MAAQ4uB,GAAkBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAC1E,yBAAKV,UAAU,gCACX,yBAAKA,UAAU,+CACX,yBAAKoL,IAAK4wB,EAAa,OAAaA,EAAa,MAAb,MAAiC74B,IAAI,MAE7E,yBAAKnD,UAAU,qCACX,4BACKg8B,EAAa,MAElB,4BACKA,EAAa,aAEjBA,EAAa,MACV,oCAEI,8BACKA,EAAa,OAOzBA,EAAa,QACV,qCAEI,8BACKA,EAAa,SAOzBA,EAAa,WACV,0CAEI,8BACCtlB,IAAOslB,EAAa,WAAehwB,OAAO,6BAQlDgwB,EAAa,SACV,wCAEI,8BACCtlB,IAAOslB,EAAa,SAAahwB,OAAO,gCAWjE,yBAAKhM,UAAU,iCACX,iDAIJ,yBAAKA,UAAU,8BACV68B,EAAiB1vB,WAAa,kBAACoe,GAAD,MAC9BoR,EAAevvB,MAAQ4uB,GAAiBA,EAAa,mBAAyBA,EAAa,gBAAoBt7B,OAAS,IACrH,yBAAKN,MAAO,CACR0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,qCAAqCO,MAAOmR,KAAMK,0BAK5EsoB,EAAevvB,MAAQ4uB,GAAiBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GACzE,oCACKs7B,EAAa,iBAAuBA,EAAa,gBAAoBt7B,OAAS,GAC3Es7B,EAAa,gBAAoB/6B,KAAI,SAAAqD,GACjC,OACI,kBAAC,GAAD,CAAgBkvB,UAAWlvB,EAAO,cC5JhE6J,GAAmBC,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAcnE8hB,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAK7ChH,GAAgB,CAClB,KAAQ,GACR,KAAQ,GACR,aAAgB,KAChB,OAAU,GACV,WAAc,GACd,gBAAmB,GACnB,cAAgB,EAChB,aAAgB,IA2mBL2nB,GA7lBK,SAAC,GAA+F,IAA7FzQ,EAA4F,EAA5FA,sBAAuBC,EAAqE,EAArEA,yBAA0B+P,EAA2C,EAA3CA,QAASP,EAAkC,EAAlCA,WAAYjzB,EAAsB,EAAtBA,SAAsB,EAE3DgM,EAAe,GAAI,gBAFwC,mBAExGivB,EAFwG,KAExFC,EAFwF,OAG1DlvB,EAAe,GAAI,gBAHuC,mBAGxGmvB,EAHwG,KAGrFC,EAHqF,OAI/EzrB,oBAAS,GAJsE,mBAIxG2M,EAJwG,KAI9FF,EAJ8F,OAKvEzM,oBAAS,GAL8D,mBAKxG2kB,EALwG,KAK1FC,EAL0F,OAMvE5kB,mBAAS,IAN8D,mBAMxGiV,EANwG,KAM1FC,EAN0F,OAO3ElV,mBAAS,IAPkE,mBAOxG+f,EAPwG,KAO5FC,EAP4F,OAQzEhgB,mBAAS,IARgE,mBAQxGgf,EARwG,KAQ3FE,EAR2F,OASnElf,mBAAS,IAT0D,mBASxG0rB,EATwG,aAUjE1rB,mBAAS,KAVwD,mBAUxG2rB,EAVwG,KAUvFC,EAVuF,KAa/G5vB,qBAAU,YAEgB,uCAAG,sBAAAE,EAAA,sEACfuvB,EAAwB,CAC1Bz8B,WAAY,CACRE,aAAc,CACVoB,GAAID,EAASC,OAJJ,2CAAH,qDAUtB6vB,KAED,CAAC9vB,IAGJ2L,qBAAU,WACN,GAAIwvB,EAAkBr7B,MAAQxB,OAAOC,KAAK48B,EAAkBr7B,MAAMtB,OAAS,EAAG,CAE1E,IAAM8K,EAAS6xB,EAAkBr7B,KAAKa,MAClC2I,GAAUA,EAAO9K,OAAS,GAC1B4d,EAAY9S,GAGZ6xB,EAAkBr7B,KAAKS,OAAS46B,EAAkBr7B,KAAKS,MAAvB,KAEhC6b,EAAY,CAAC+e,EAAkBr7B,KAAKS,QACpCskB,EAAgBsW,EAAkBr7B,KAAKS,MAAvB,QAIzB,CAAC46B,EAAkBr7B,OAGtB6L,qBAAU,WAEF2Q,GAAYA,EAAS,IAAMA,EAAS9d,OAAS,GAEzComB,IAAiBtI,EAAS,GAAGrc,IAC7B4kB,EAAgBvI,EAAS,GAAGrc,MAKrC,CAACqc,IAOJ,IAAM5P,EAAY,uCAAG,WAAOC,EAAaC,GAApB,yBAAAf,EAAA,6DAGjB2Z,EAAYlJ,EAAWA,EAASvd,KAAI,SAAA4B,GACzC,OAAOA,EAAMV,MACH,GAECyF,EAAkBipB,EAAYnwB,OAAS,EAAImwB,EAAY5vB,KAAI,SAAAqD,GAC7D,MAAO,CACHlC,IAAKkC,EAAQlC,IACbgwB,UAAW9tB,EAAQ8tB,UACnB7sB,SAAUjB,EAAQiB,aAErB,GAbY,SA2BO63B,EAA0B,CAC9Cv8B,WAAY,CACRE,aAAc,CACVoB,GAAI0M,EAAO1M,KAGnB2D,KAAM,CACFjG,KAAMgP,EAAOhP,KAAK8nB,OAClBpgB,KAAMsH,EAAOtH,KACbC,aAAcqH,EAAOrH,aACrBO,OAAQ8G,EAAO9G,OACfD,WAAY+G,EAAO/G,WAEnBF,gBAAiBA,EAEjBnF,MAAOqkB,GAAgBY,EAAU,GAAKA,EAAU,GAAK,MA1C5C,QA2BX6U,EA3BW,SA+CqB,OAArBA,EAAU72B,QAxJF4P,OAyJrB4I,EAxJR7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,iBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAsJvCmQ,GAAyB,GAM5BlP,EAJyB,WAC9B,OAAOif,EAAQz0B,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQgN,EAAO1M,IAGtC+4B,GAGRxZ,EAAclhB,OAAOmhB,OAAO,GAAI+T,EAAQjf,GAA1BjW,OAAA,IAAAA,CAAA,GAAuC27B,eACrDC,EAZ2C,uBAYvB1G,EAAQ9zB,MAAM,EAAG6U,IAZM,CAYEiL,GAZF,aAYkBgU,EAAQ9zB,MAAM6U,EAAQ,KACzF0e,EAAWiH,GAEFttB,EAAQiZ,aAGRlG,KAIJ/S,EAAQC,eAAc,GArEL,iCAzGO,IAACuG,IAyGR,OAAH,wDA0EZ4S,EAAe,SAACpY,GAClB6V,GAAyB,IAIvB3W,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOhP,OAASoP,GAOzBpB,qBAAU,WACN,GAAI3L,GAAY1B,OAAOC,KAAKyB,GAAUxB,OAAS,EAAG,CAE9C,IAAM8K,EAAStJ,EAASW,MACpB2I,GAAUA,EAAO9K,OAAS,GAC1B4d,EAAY9S,GAGZtJ,EAASO,OAASP,EAASO,MAAT,KAElB6b,EAAY,CAACpc,EAASO,QACtBskB,EAAgB7kB,EAASO,MAAT,QAGzB,CAACP,IAKJ2L,qBAAU,WACN,IAAKsvB,EAAc,UAAe,CAC9B,IAAMrwB,EAAQqwB,EAAc,MAC5B,GAAIrwB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAIrDF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACjCF,OAAOqO,OAAO/B,EAAK,OACnB,IACHnJ,SAAQ,SAACkoB,EAAKC,GACjB,GAAmB,kBAARD,EACPhK,GAAsBgK,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACpBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACThK,GAAsBgK,aAQ/C,CAACsR,IAGJtvB,qBAAU,WACN,GACIwvB,EAAkBjwB,MAAQiwB,EAAiB,MAC5C78B,OAAOC,KAAK48B,EAAiB,MAAU38B,OAAS,GACxB28B,EAAiB,KAAjB,gBAA6C38B,OAAS,EAAE,CAC/E,IAAMkxB,EAAayL,EAAiB,KAAjB,gBAA6Cp8B,KAAI,SAAAQ,GAAI,OAAIA,KAC5EowB,EAAcD,GACd,IAAMf,EAAcwM,EAAiB,KAAjB,gBAA6Cp8B,KAAI,SAAAQ,GACjE,OAAO,eACAA,EADP,CAEIW,IAAKX,EAAKW,IACVgwB,UAAW3wB,EAAK2wB,UAChB7sB,SAAU9D,EAAK8D,cAGxBwrB,EAAeF,MAIpB,CAACwM,IAEHj8B,QAAQC,IAAI,wBAAwBg8B,GAEpCxvB,qBAAU,WAEN,GAAI+jB,EAAWlxB,OAAS,GACpB,GAAIkxB,EAAWlxB,OAASmwB,EAAYnwB,OAAQ,CACxC,IAAM0xB,EAAYR,EAAWA,EAAWlxB,OAAS,GAA/B,QAA6CA,OAAS,GAAKkxB,EAAWA,EAAWlxB,OAAS,GAA/B,QAA6C,GAA7C,IAC7EU,QAAQC,IAAI,YAAa+wB,GAEzBrB,EAAe,GAAD,oBAAKF,GAAL,gBACPe,EAAWA,EAAWlxB,OAAS,GADxB,CAEV0B,IAAKwvB,EAAWA,EAAWlxB,OAAS,GAA/B,GACL0xB,UAAWA,EACX7sB,SAAU,YAKb,GAAIqsB,EAAWlxB,OAASmwB,EAAYnwB,OAAQ,CAC7CU,QAAQC,IAAI,aAAcuwB,GAC1BxwB,QAAQC,IAAI,cAAewvB,GAE3B,IAAM6B,EAAiB7B,EAAY7Q,QAAO,SAAAve,GACtC,IAAIkxB,GAAS,EAMb,OALAf,EAAWjuB,SAAQ,SAAAW,GACXA,EAAQnC,KAAOV,EAAKW,MACpBuwB,GAAS,MAGVA,KAEX5B,EAAe2B,SAMnB3B,EAAe,MAKpB,CAACa,IAIJ/jB,qBAAU,WAEN,GAAI0vB,EAAe78B,OAAS,GACxB,GAAI68B,EAAe78B,OAAS88B,EAAgB98B,OAAQ,CAChD,IAAM0xB,EAAYmL,EAAeA,EAAe78B,OAAS,GAAvC,QAAqDA,OAAS,GAAK68B,EAAeA,EAAe78B,OAAS,GAAvC,QAAqD,GAArD,IACrFU,QAAQC,IAAI,YAAa+wB,GAEzBqL,EAAmB,GAAD,oBAAKD,GAAL,gBACXD,EAAeA,EAAe78B,OAAS,GAD5B,CAEd0B,IAAKm7B,EAAeA,EAAe78B,OAAS,GAAvC,GACL0xB,UAAWA,EACX7sB,SAAU,YAKb,GAAIg4B,EAAe78B,OAAS88B,EAAgB98B,OAAQ,CACrDU,QAAQC,IAAI,iBAAkBk8B,GAC9Bn8B,QAAQC,IAAI,cAAewvB,GAE3B,IAAM6B,EAAiB8K,EAAgBxd,QAAO,SAAAve,GAC1C,IAAIkxB,GAAS,EAMb,OALA4K,EAAe55B,SAAQ,SAAAW,GACfA,EAAQnC,KAAOV,EAAKW,MACpBuwB,GAAS,MAGVA,KAEX8K,EAAmB/K,SAMvB+K,EAAmB,MAKxB,CAACF,IAgBJ,OACI,kBAAC,IAAD,CACIruB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,GACctM,KAG1B,gBACGmN,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIqC,MAAO,OACP5R,MAAO,CACH2hB,IAAK,QAET9e,MAAM,cACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,KAIhD,yBAAKjP,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC3B0P,GAAgB4tB,EAAerwB,MAAf,WAEtBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAC/B0P,GAAgB4tB,EAAerwB,MAAf,WACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,YAI5B,yBAAKzP,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,OACNE,MAAOsP,EAAOtH,KACd1H,KAAK,OACLF,QAAU6P,EAAQjI,MAAQ+H,EAAO/H,OAC3BgI,GAAgB4tB,EAAerwB,MAAf,WAEtBlN,YAAc4P,EAAQjI,MAAQ+H,EAAO/H,OAC/BgI,GAAgB4tB,EAAerwB,MAAf,WACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,aAOhC,kBAACxQ,EAAD,CACII,MAAM,gBACNE,MAAOsP,EAAOrH,aACd3H,KAAK,eACLF,QAAU6P,EAAQhI,cAAgB8H,EAAO9H,eACnC+H,GAAgB4tB,EAAerwB,MAAf,mBAEtBlN,YAAc4P,EAAQhI,cAAgB8H,EAAO9H,eACvC+H,GAAgB4tB,EAAerwB,MAAf,mBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,mBAMxB,yBAAKzP,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,kBACNE,MAAOsP,EAAO9G,OACdlI,KAAK,SACLF,QAAU6P,EAAQzH,QAAUuH,EAAOvH,SAC7BwH,GAAgB4tB,EAAerwB,MAAf,aAEtBlN,YAAc4P,EAAQzH,QAAUuH,EAAOvH,SACjCwH,GAAgB4tB,EAAerwB,MAAf,aACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,cAI5B,yBAAKzP,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,uBACNE,MAAOsP,EAAO/G,WACdjI,KAAK,aACLF,QAAU6P,EAAQ1H,YAAcwH,EAAOxH,aACjCyH,GAAgB4tB,EAAerwB,MAAf,iBAEtBlN,YAAc4P,EAAQ1H,YAAcwH,EAAOxH,aACrCyH,GAAgB4tB,EAAerwB,MAAf,iBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,mBAerD,yBAAKzP,UAAU,gCAEdI,MAAO,CACN6a,aAAc,SAGf,wBAAIjb,UAAU,mBAAd,UAKD,yBAAKA,UAAU,gCACbwe,GAEAA,EAAS9d,OAAS,GAAK8d,EAASvd,KAAI,SAAC4B,EAAO4T,GAC3C,OACC,yBAAKzW,UAAU,sCACd,yBACCA,UAAU,kDACV+P,QAAS,kBAAMgX,EAAgBlkB,EAAMV,MAErC,yBAAKiJ,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGnC,0BACC4M,QAAS,kBA9KS,SAAC5N,GAExB,IAAMknB,EAAY7K,GAAYA,EAASwB,QAAO,SAAAnd,GAC1C,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GAwKQC,CAAmBzmB,EAAMV,KACxCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,QAIAoE,IAAiBjkB,EAAMV,KAInB2kB,GAA0B,IAAVrQ,IAHpB,0BAAMzW,UAAU,4CACf,kBAAC2iB,GAAA,EAAD,WAkBJnE,KAEAA,GAAcA,GAAYA,EAAS9d,OAAS,GAiBzC,GAhBH,oCACA,kBAAC,KAAD,CACDuC,MAAO,iBAEP,yBACC8M,QAAS,WACR0mB,GAAgB,IAEjBz2B,UAAU,4CACV,kBAACupB,GAAA,EAAD,MACA,0BAAMvpB,UAAU,iDACf,kBAAC6kB,GAAA,EAAD,WAiBiB,wBAAI7kB,UAAU,mBAAd,oBAIA,kBAAC09B,GAAD,CACI7L,cAAeA,EACfD,WAAYA,IAGhB,yBAAKxxB,MAAO,CACR0V,UAAW,UAGf,wBAAI9V,UAAU,mBAAd,6BAIA,kBAAC29B,GAAD,CACI9M,YAAaA,EACbE,eAAgBA,KA8BxB,kBAAC,GAAD,CACI1S,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCloB5CpQ,GAAmBC,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAcnE8hB,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAK7ChH,GAAgB,CAClB,KAAQ,GACR,KAAQ,GACR,aAAgB,KAChB,OAAU,GACV,WAAc,GACd,gBAAmB,GACnB,cAAgB,EAChB,aAAgB,IA4gBL2nB,GA/fK,SAAC,GAAqF,IAAnFzQ,EAAkF,EAAlFA,sBAAuBC,EAA2D,EAA3DA,yBAA0B+P,EAAiC,EAAjCA,QAASP,EAAwB,EAAxBA,WAAwB,EAEjDjnB,EAAe,GAAI,aAF8B,mBAE9FivB,EAF8F,KAE9EC,EAF8E,OAGrEvrB,oBAAS,GAH4D,mBAG9F2M,EAH8F,KAGpFF,EAHoF,OAI7DzM,oBAAS,GAJoD,mBAI9F2kB,EAJ8F,KAIhFC,EAJgF,OAK7D5kB,mBAAS,IALoD,mBAK9FiV,EAL8F,KAKhFC,EALgF,OAMjElV,mBAAS,IANwD,mBAM9F+f,EAN8F,KAMlFC,EANkF,OAO/DhgB,mBAAS,IAPsD,mBAO9Fgf,EAP8F,KAOjFE,EAPiF,OAQzDlf,mBAAS,IARgD,mBAQ9F0rB,EAR8F,aASvD1rB,mBAAS,KAT8C,mBAS9F2rB,EAT8F,KAS7EC,EAT6E,KAa/F7uB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,mBAAAf,EAAA,6DAGjB2Z,EAAYlJ,EAAWA,EAASvd,KAAI,SAAA4B,GACzC,OAAOA,EAAMV,MACH,GAECyF,EAAkBipB,EAAYnwB,OAAS,EAAImwB,EAAY5vB,KAAI,SAAAqD,GAC7D,MAAO,CACHlC,IAAKkC,EAAQlC,IACbgwB,UAAW9tB,EAAQ8tB,UACnB7sB,SAAUjB,EAAQiB,aAErB,GAbY,SAyBO63B,EAA0B,CAC9Cv8B,WAAY,CACRE,aAAc,CACVoB,GAAI0M,EAAO1M,KAGnB2D,KAAM,CACFjG,KAAMgP,EAAOhP,KAAK8nB,OAClBpgB,KAAMsH,EAAOtH,KACbC,aAAcqH,EAAOrH,aACrBO,OAAQ8G,EAAO9G,OACfD,WAAY+G,EAAO/G,WAEnBF,gBAAiBA,EAEjBnF,MAAOqkB,GAAgBY,EAAU,GAAKA,EAAU,GAAK,MAxC5C,QAyBX6U,EAzBW,SA6CqB,OAArBA,EAAU72B,QAjGF4P,OAkGrB4I,EAjGR7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,iBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BA+FvCmQ,GAAyB,GAEzBwP,EAAW,CAAC,eAELoH,EAFG,CAGNp6B,GAAIo6B,EAAS,KAAW,GACxBl6B,IAAKk6B,EAAS,KAAW,GACzB18B,KAAM08B,EAAS,MAAY,MALrB,oBAML7G,KAEL5mB,EAAQiZ,aAGRlG,KAIJ/S,EAAQC,eAAc,GAhEL,iCApDO,IAACuG,IAoDR,OAAH,wDAqEZ4S,EAAe,SAACpY,GAClB6V,GAAyB,IAIvB3W,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOhP,OAASoP,GASzBpB,qBAAU,WACN,IAAKsvB,EAAc,UAAe,CAC9B,IAAMrwB,EAAQqwB,EAAc,MAC5B,GAAIrwB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAIrDF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACjCF,OAAOqO,OAAO/B,EAAK,OACnB,IACHnJ,SAAQ,SAACkoB,EAAKC,GACjB,GAAmB,kBAARD,EACPhK,GAAsBgK,QAErB,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACpBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACThK,GAAsBgK,aAQ/C,CAACsR,IAMJtvB,qBAAU,WAEN,GAAI+jB,EAAWlxB,OAAS,GACpB,GAAIkxB,EAAWlxB,OAASmwB,EAAYnwB,OAAQ,CACxC,IAAM0xB,EAAYR,EAAWA,EAAWlxB,OAAS,GAA/B,QAA6CA,OAAS,GAAKkxB,EAAWA,EAAWlxB,OAAS,GAA/B,QAA6C,GAA7C,IAC7EU,QAAQC,IAAI,YAAa+wB,GAEzBrB,EAAe,GAAD,oBAAKF,GAAL,gBACPe,EAAWA,EAAWlxB,OAAS,GADxB,CAEV0B,IAAKwvB,EAAWA,EAAWlxB,OAAS,GAA/B,GACL0xB,UAAWA,EACX7sB,SAAU,YAKb,GAAIqsB,EAAWlxB,OAASmwB,EAAYnwB,OAAQ,CAC7CU,QAAQC,IAAI,aAAcuwB,GAC1BxwB,QAAQC,IAAI,cAAewvB,GAE3B,IAAM6B,EAAiB7B,EAAY7Q,QAAO,SAAAve,GACtC,IAAIkxB,GAAS,EAMb,OALAf,EAAWjuB,SAAQ,SAAAW,GACXA,EAAQnC,KAAOV,EAAKW,MACpBuwB,GAAS,MAGVA,KAEX5B,EAAe2B,SAMnB3B,EAAe,MAKpB,CAACa,IAIJ/jB,qBAAU,WAEN,GAAI0vB,EAAe78B,OAAS,GACxB,GAAI68B,EAAe78B,OAAS88B,EAAgB98B,OAAQ,CAChD,IAAM0xB,EAAYmL,EAAeA,EAAe78B,OAAS,GAAvC,QAAqDA,OAAS,GAAK68B,EAAeA,EAAe78B,OAAS,GAAvC,QAAqD,GAArD,IACrFU,QAAQC,IAAI,YAAa+wB,GAEzBqL,EAAmB,GAAD,oBAAKD,GAAL,gBACXD,EAAeA,EAAe78B,OAAS,GAD5B,CAEd0B,IAAKm7B,EAAeA,EAAe78B,OAAS,GAAvC,GACL0xB,UAAWA,EACX7sB,SAAU,YAKb,GAAIg4B,EAAe78B,OAAS88B,EAAgB98B,OAAQ,CACrDU,QAAQC,IAAI,iBAAkBk8B,GAC9Bn8B,QAAQC,IAAI,cAAewvB,GAE3B,IAAM6B,EAAiB8K,EAAgBxd,QAAO,SAAAve,GAC1C,IAAIkxB,GAAS,EAMb,OALA4K,EAAe55B,SAAQ,SAAAW,GACfA,EAAQnC,KAAOV,EAAKW,MACpBuwB,GAAS,MAGVA,KAEX8K,EAAmB/K,SAMvB+K,EAAmB,MAKxB,CAACF,IAgBJ,OACI,kBAAC,IAAD,CACIruB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIqC,MAAO,OACP5R,MAAO,CACH2hB,IAAK,QAET9e,MAAM,iBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,KAIhD,yBAAKjP,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC3B0P,GAAgB4tB,EAAerwB,MAAf,WAEtBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAC/B0P,GAAgB4tB,EAAerwB,MAAf,WACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,YAI5B,yBAAKzP,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,OACNE,MAAOsP,EAAOtH,KACd1H,KAAK,OACLF,QAAU6P,EAAQjI,MAAQ+H,EAAO/H,OAC3BgI,GAAgB4tB,EAAerwB,MAAf,WAEtBlN,YAAc4P,EAAQjI,MAAQ+H,EAAO/H,OAC/BgI,GAAgB4tB,EAAerwB,MAAf,WACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,aAOhC,kBAACxQ,EAAD,CACII,MAAM,gBACNE,MAAOsP,EAAOrH,aACd3H,KAAK,eACLF,QAAU6P,EAAQhI,cAAgB8H,EAAO9H,eACnC+H,GAAgB4tB,EAAerwB,MAAf,mBAEtBlN,YAAc4P,EAAQhI,cAAgB8H,EAAO9H,eACvC+H,GAAgB4tB,EAAerwB,MAAf,mBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,mBAMxB,yBAAKzP,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,kBACNE,MAAOsP,EAAO9G,OACdlI,KAAK,SACLF,QAAU6P,EAAQzH,QAAUuH,EAAOvH,SAC7BwH,GAAgB4tB,EAAerwB,MAAf,aAEtBlN,YAAc4P,EAAQzH,QAAUuH,EAAOvH,SACjCwH,GAAgB4tB,EAAerwB,MAAf,aACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,cAI5B,yBAAKzP,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,uBACNE,MAAOsP,EAAO/G,WACdjI,KAAK,aACLF,QAAU6P,EAAQ1H,YAAcwH,EAAOxH,aACjCyH,GAAgB4tB,EAAerwB,MAAf,iBAEtBlN,YAAc4P,EAAQ1H,YAAcwH,EAAOxH,aACrCyH,GAAgB4tB,EAAerwB,MAAf,iBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,mBAerD,yBAAKzP,UAAU,gCAEdI,MAAO,CACN6a,aAAc,SAGf,wBAAIjb,UAAU,mBAAd,UAKD,yBAAKA,UAAU,gCACbwe,GAEAA,EAAS9d,OAAS,GAAK8d,EAASvd,KAAI,SAAC4B,EAAO4T,GAC3C,OACC,yBAAKzW,UAAU,sCACd,yBACCA,UAAU,kDACV+P,QAAS,kBAAMgX,EAAgBlkB,EAAMV,MAErC,yBAAKiJ,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGnC,0BACC4M,QAAS,kBA9KS,SAAC5N,GAExB,IAAMknB,EAAY7K,GAAYA,EAASwB,QAAO,SAAAnd,GAC1C,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GAwKQC,CAAmBzmB,EAAMV,KACxCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,QAIAoE,IAAiBjkB,EAAMV,KAInB2kB,GAA0B,IAAVrQ,IAHpB,0BAAMzW,UAAU,4CACf,kBAAC2iB,GAAA,EAAD,WAkBJnE,KAEAA,GAAcA,GAAYA,EAAS9d,OAAS,GAiBzC,GAhBH,oCACA,kBAAC,KAAD,CACDuC,MAAO,iBAEP,yBACC8M,QAAS,WACR0mB,GAAgB,IAEjBz2B,UAAU,4CACV,kBAACupB,GAAA,EAAD,MACA,0BAAMvpB,UAAU,iDACf,kBAAC6kB,GAAA,EAAD,WAiBiB,wBAAI7kB,UAAU,mBAAd,oBAIA,kBAAC09B,GAAD,CACI7L,cAAeA,EACfD,WAAYA,IAGhB,yBAAKxxB,MAAO,CACR0V,UAAW,UAGf,wBAAI9V,UAAU,mBAAd,6BAIA,kBAAC29B,GAAD,CACI9M,YAAaA,EACbE,eAAgBA,KA8BxB,kBAAC,GAAD,CACI1S,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCngB1CpC,IAXiB/N,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAUzCqc,KAAxBD,QACA+N,IADwB9N,KAAhBC,YACG2P,IAAX9B,QAIFC,GAAU,SAAC,GAA0B,IAAxBnoB,EAAuB,EAAvBA,KAAMmzB,EAAiB,EAAjBA,WAAiB,EACRtjB,oBAAS,GADD,mBAC/BuM,EAD+B,KACtBC,EADsB,OAEoBxM,oBAAS,GAF7B,mBAE/BuY,EAF+B,KAERC,EAFQ,OAGSnc,EAAe,GAAI,gBAH5B,mBAGfknB,GAHe,WAKhC7gB,EAAUC,eAGV6gB,EAAe,uCAAG,WAAOlzB,GAAP,iBAAA4L,EAAA,sEACOqnB,EAAqB,CAC5Cv0B,WAAY,CACRE,aAAc,CACVoB,SAJQ,QACdmzB,EADc,SAUwB,OAAxBA,EAAa5vB,SArDR4P,EAsDG,iBArDhCD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,iBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAmDjC+f,EAAavzB,EAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAKU,KAAOA,KACnDgzB,EAAWI,IAbK,iCA3CI,IAACjgB,IA2CL,OAAH,sDA6BrB,OACI,oCACI,kBAAC,KAAD,CAMIyD,KAAK,QAEL8D,WAAY7a,GAIR,kBAAC,GAAD,CACAiB,MAAM,GACNga,UAAU,QACV5a,IAAI,KACJ2P,MAAO,OACPhS,UAAU,uBACVkd,OAAQ,SAACza,EAAO0a,GAAR,OACJ,oCACA,yBACIpN,QAAS,WACTwE,EAAQzQ,KAAR,wBAA8BqZ,EAAOhb,KACrCkoB,EAAyBlN,IAEzB/R,IAAK3I,EAAOU,IAAI,YAAY/C,MAAO,CACnC6T,OAAQ,OACRjC,MAAO,OACP0Y,UAAW,UACXrqB,aAAc,MACd2V,OAAQ,iBAOpB,kBAAC,GAAD,CACI/S,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACJ,oCAEI,wBACIpN,QAAS,WACLwE,EAAQzQ,KAAR,wBAA8BqZ,EAAOhb,KAErCkoB,EAAyBlN,IAE7B/c,MAAO,CACH0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAEX/R,OAQjB,kBAAC,GAAD,CACIhB,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,yBAKd,kBAAC,GAAD,CACIiD,MAAM,WACNga,UAAU,SACV5a,IAAI,KACJrC,UAAU,yBAcd,kBAAC,GAAD,CACIiD,MAAM,iBACNga,UAAU,uBACV5a,IAAI,KACJrC,UAAU,yBAYd,kBAAC,GAAD,CACIgS,MAAO,IACP/O,MAAM,aACNga,UAAU,YACV5a,IAAI,KACJrC,UAAU,uBAEVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACJ,oCAEI,wBACI/c,MAAO,CACH0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,UACRO,SAAU,SAGTtS,GAAQyS,IAAOzS,GAAM+H,OAAO,6BAUjD,kBAAC,GAAD,CACKgG,MAAO,IACR/O,MAAM,WACNga,UAAU,UACV5a,IAAI,KACJrC,UAAU,uBAEVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACJ,oCAEI,wBACI/c,MAAO,CACH0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAEP/R,GAAQyS,IAAOzS,GAAM+H,OAAO,6BAQjD,kBAAC,GAAD,CAEIhM,UAAU,uBACViD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACJ,kBAAC,KAAD,CAAOpE,KAAK,UACR,uBAAGvC,KAAK,MACJ,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,eAC3B,0BAAMjD,UAAU,WAAW+P,QAAS,WAChCsO,GAAW,GACXgM,EAAyBlN,KAEzB,kBAACyN,GAAA,EAAD,SAOZ,kBAAC,KAAD,CACI7H,UAAW,kBAAMsS,EAAgBlY,EAAOhb,KACxCc,MAAM,qBAAgBkf,OAAO,MAAMa,WAAW,MAC9C,0BACIhjB,UAAU,4BAEV,kBAAC4iB,GAAA,EAAD,aAavBwH,GAAyB,kBAACyT,GAAD,CACtBnI,QAAS1zB,EACTmzB,WAAYA,EACZxP,yBAA0BtH,EAC1BqH,sBAAuBtH,EACvBlc,SAAUkoB,MAqHX0T,GA3GI,SAAC,GAAgB,qBAGFjsB,mBAAS,IAHR,mBAGxB6jB,EAHwB,KAGfP,EAHe,OAKQjnB,EAAe,GAAI,cAL3B,mBAKxBggB,EALwB,KAKdC,EALc,KAQ/BtgB,qBAAU,YACO,uCAAG,4BAAAE,EAAA,sEACOogB,EAAmB,CAClCttB,WAAW,CACPC,OAAQ,CACNiU,SAAU,QACVC,eAAgB,SALd,OACNhQ,EADM,OAUZmwB,EAAWnwB,GAVC,2CAAH,qDAYbwe,KACD,IAGHpiB,QAAQC,IAAI,aAAc6sB,GAzBK,MA2B2Brc,oBAAS,GA3BpC,mBA2BxB6T,EA3BwB,KA2BDC,EA3BC,KAsD/B,OACI,oCAEI,yBAAK3lB,UAAU,yBACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uCAAd,WAIA,kBAAC,GAAD,CACIqrB,aAAa,EACbrrB,UAAU,qBACVM,YAAY,kBACZb,SAAU,SAAAqQ,GAAC,OAtBd,SAACvQ,GAClB,GAAI2uB,EAASlsB,KAAKtB,OAAS,EAAG,CAC1B,IAAMk1B,EAAa1H,EAASlsB,KAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBACvFqc,EAAWS,IAmBoBtK,CAAaxb,EAAEzE,OAAO9L,WAG7C,kBAAC,IAAD,CAEIS,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJ5C,YASJ,yBAAK3lB,UAAU,uCACVkuB,EAAS9gB,MAAQsoB,EAAQh1B,OAAS,GAAK,kBAAC,GAAD,CACpCy0B,WAAYA,EACZnzB,KAAM0zB,IACTxH,EAAS/gB,WAAa,kBAACoe,GAAD,MAGtB2C,EAAS9gB,QAAUsoB,EAAQh1B,OAAS,IACjC,yBAAKN,MAAO,CACR0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,kBAAkBO,MAAOmR,KAAMK,4BAMlE,kBAAC0pB,GAAD,CACIrI,QAASA,EACTP,WAAYA,EACZzP,sBAAuBA,EACvBC,yBAA0BA,MClZlC1O,GAAWC,KAAXD,OAIF9I,GAAmBC,MAAaC,MAAM,CAC3CvH,UAAWsH,MACT/O,MAAM,cACNF,WACAY,IAAI,EAAG,+CACTgH,SAAUqH,MACR/O,MAAM,YACNF,WACAY,IAAI,EAAG,8CACToH,MAAOiH,MACLjP,SAAS,sCACT6+B,IAAI,GAAI,uCACVzvB,SAAUH,MACR/O,MAAM,YACNF,WACAY,IAAI,EAAG,4CACTqH,SAAUgH,MACR/O,MAAM,kBACNF,WACAY,IAAI,EAAG,mDAETmH,MAAOkH,MAAa/O,MAAM,SAAS6H,MAAM,gCAMpCsH,GAAgB,CACrBrH,MAAO,GACPD,MAAO,GACPJ,UAAW,GACXC,SAAU,GACVK,SAAU,GACVC,SAAU,GACV42B,QAAS,GACT1vB,SAAU,IAaLsT,GAAwB,SAACvM,GAC9BD,KAAavI,MAAM,CAClBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAkb9BiQ,GAtaQ,SAAC,GAA+F,IAA7FC,EAA4F,EAA5FA,sBAAuBC,EAAqE,EAArEA,yBAA0BuY,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,gBAA6B,EAElEjwB,EAAe,GAAI,eAF+C,mBAE9GkwB,EAF8G,KAE5FC,EAF4F,OAG7DxsB,mBAAS,IAHoD,mBAG9GysB,EAH8G,KAGxFC,EAHwF,OAInE1sB,mBAAS,IAJ0D,mBAI9G2sB,EAJ8G,KAI3FC,EAJ2F,OAMzE5sB,mBAAS,IANgE,mBAM9G6sB,EAN8G,KAM9FC,EAN8F,OAO/E9sB,mBAAS,IAPsE,mBAO9G+sB,EAP8G,KAOjGC,EAPiG,OASlE3wB,EAClD,GACA,eAXoH,mBAS9G4wB,EAT8G,KAS5FC,EAT4F,OAcxE7wB,EAAe,GAAI,YAdqD,mBAc9G8wB,EAd8G,KAc/FC,EAd+F,OAgB/EptB,mBAAS,IAhBsE,gCAiBrFA,mBAAS,KAjB4E,mBAsB/GjD,GAtB+G,UAsBnG,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEAESswB,EAAuB,CAEnDv4B,KAAM,CACLqB,MAAO0H,EAAO1H,MACdD,MAAO2H,EAAO3H,MACdqH,SAAUM,EAAON,SACjBnH,SAAUyH,EAAOzH,SACjBC,SAAUwH,EAAOxH,SACjBP,UAAW+H,EAAO/H,UAClBC,SAAU8H,EAAO9H,SACjBC,QAASs3B,EACTr3B,KAAMu3B,KAbY,QAEdU,EAFc,SAmB4B,OAA1BA,EAAex5B,QAlEN4P,OAmE9B4I,EAlEF7I,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,oBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAiE1C2oB,EAAgB,CAAC,aAChBh8B,GAAI+8B,EAAc,KAAW,GAC7B78B,IAAK68B,EAAc,KAAW,GAC9Br/B,KAAMq/B,EAAc,UAAgB,IAAMA,EAAc,UAErDA,IALW,oBAMVhB,KACLvY,GAAyB,GACzB7W,EAAQiZ,aAGRlG,KAKD/S,EAAQC,eAAc,GAtCF,iCA/CU,IAACuG,IA+CX,OAAH,yDA2CZ6pB,EAAe,SAAC5/B,GACrBk/B,EAAqBl/B,IAGhB6/B,EAAkB,SAAC7/B,GACxBg/B,EAAwBh/B,IAGzBsO,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACSgxB,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe3+B,OAAS,IAEvCg+B,EAAiBW,EAAep+B,KAAI,SAAC+F,GAC1C,MAAO,CACNzH,MAAOyH,EAAQnH,KACfA,KAAMmH,EAAQnH,SAGhB8+B,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACE,IAGHzxB,qBAAU,YACM,uCAAG,8BAAAE,EAAA,sEACSkxB,EAAoB,CAC7Cp+B,WAAY,CACXE,aAAc,CACbiG,QAASs3B,MAJK,QACXiB,EADW,SAUEA,EAAY7+B,OAAS,IAEjCk+B,EAAcW,EAAYt+B,KAAI,SAACgG,GACpC,MAAO,CACN1H,MAAO0H,EAAKpH,KACZA,KAAMoH,EAAKpH,SAGbg/B,EAAeD,IAlBC,2CAAH,qDAsBfY,KACE,CAAClB,IAKJ,IAAMpW,EAAe,SAACpY,GACrB6V,GAAyB,IAIpB3W,EAA4B,SAACH,EAAQI,GAC1C,QAAKA,GACHJ,EAAO/H,WACP+H,EAAO9H,UACP8H,EAAON,UACPM,EAAO1H,OACP0H,EAAOzH,WAaV,OALAhG,QAAQC,IAAI,gBAAiB29B,GAM5B,kBAAC,IAAD,CACC9vB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCvP,MAAO,CACN2hB,IAAK,QAKNG,UAAW,CACVrS,OAAQ,IACRwG,QAAS,QAEVpT,MAAM,mBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACdhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,KAK7C,yBAAKjP,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,aACNE,MAAOsP,EAAO/H,UACdjH,KAAK,YACLF,QAAU6P,EAAQ1I,WAAawI,EAAOxI,YACnCyI,GAAgB6uB,EAAiBtxB,MAAjB,gBAEnBlN,YAAc4P,EAAQ1I,WAAawI,EAAOxI,YACvCyI,GAAgB6uB,EAAiBtxB,MAAjB,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,iBAInB,yBAAKzP,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,YACNE,MAAOsP,EAAO9H,SACdlH,KAAK,WACLF,QAAU6P,EAAQzI,UAAYuI,EAAOvI,WAClCwI,GAAgB6uB,EAAiBtxB,MAAjB,eAEnBlN,YAAc4P,EAAQzI,UAAYuI,EAAOvI,WACtCwI,GAAgB6uB,EAAiBtxB,MAAjB,eACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,iBAYpB,yBAAKzP,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,QACNE,MAAOsP,EAAO1H,MACdtH,KAAK,QACLF,QAAU6P,EAAQrI,OAASmI,EAAOnI,QAC/BoI,GAAgB6uB,EAAiBtxB,MAAjB,YAEnBlN,YAAc4P,EAAQrI,OAASmI,EAAOnI,QACnCoI,GAAgB6uB,EAAiBtxB,MAAjB,YACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAInB,yBAAKzP,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,QACNE,MAAOsP,EAAO3H,MACdrH,KAAK,QACLF,QAAU6P,EAAQtI,OAASoI,EAAOpI,QAC/BqI,GAAgB6uB,EAAiBtxB,MAAjB,YAEnBlN,YAAc4P,EAAQtI,OAASoI,EAAOpI,QACnCqI,GAAgB6uB,EAAiBtxB,MAAjB,YACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,cAcpB,yBAAKrP,MAAO,CACX6V,YAAa,SAEb,kBAAChX,EAAD,CACCI,MAAM,WACNC,KAAK,WACLC,MAAOsP,EAAON,SACd1O,KAAK,WACLF,QAAU6P,EAAQjB,UAAYe,EAAOf,WAClCgB,GAAgB6uB,EAAiBtxB,MAAjB,eAEnBlN,YAAc4P,EAAQjB,UAAYe,EAAOf,WACtCgB,GAAgB6uB,EAAiBtxB,MAAjB,eACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,gBAKnB,yBAAKzP,UAAU,mBACd,yBAAKA,UAAU,yBACd,wBAAIA,UAAU,mBAAd,WAKA,kBAAC,IAAKC,KAAN,CACCC,eAAiBk+B,EAAiBtxB,MAAjB,cAA8C,QAAU,GACzE3M,KAAMi+B,EAAiBtxB,MAAjB,eAGN,kBAAC,KAAD,CACC2yB,gBAAiB,kBAAC,KAAD,CAAOn9B,YAAY,mBAAmBO,MAAOmR,KAAMK,yBACpEoE,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,mBACZoY,iBAAiB,WACjBjZ,SAAU2/B,EACVzmB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IAE9FgmB,EAAiB1xB,MACjB0xB,EAAiB98B,KAAKtB,OAAS,GAC/Bg+B,EAAez9B,KAAI,SAAC4X,GACnB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAUjD,yBAAKG,UAAU,yBACd,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,IAAKC,KAAN,CAECC,eAAiBk+B,EAAiBtxB,MAAjB,WAA2C,QAAU,GACtE3M,KAAMi+B,EAAiBtxB,MAAjB,YAGN,kBAAC,KAAD,CACC9M,UAAU,kBACVy/B,gBAAiB,kBAAC,KAAD,CAAOn9B,YAAY,yBAAyBO,MAAOmR,KAAMK,yBAC1EoE,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,gBACZoY,iBAAiB,WACjBjZ,SAAU0/B,EACVxmB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IAE9FkmB,EAAc5xB,MACd4xB,EAAch9B,KAAKtB,OAAS,GAC5Bk+B,EAAY39B,KAAI,SAAC4X,GAChB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,aAQlD,yBAAKO,MAAO,CACX0V,UAAW,UAKZ,yBAAK9V,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAOzH,SACdvH,KAAK,WACLF,QAAU6P,EAAQpI,UAAYkI,EAAOlI,WAClCmI,GAAgB6uB,EAAiBtxB,MAAjB,eAEnBlN,YAAc4P,EAAQpI,UAAYkI,EAAOlI,WACtCmI,GAAgB6uB,EAAiBtxB,MAAjB,eACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,gBAInB,yBAAKzP,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,YACNE,MAAOsP,EAAOxH,SACdxH,KAAK,WACLF,QAAU6P,EAAQnI,UAAYiI,EAAOjI,WAClCkI,GAAgB6uB,EAAiBtxB,MAAjB,eAEnBlN,YAAc4P,EAAQnI,UAAYiI,EAAOjI,WACtCkI,GAAgB6uB,EAAiBtxB,MAAjB,eACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,uBChenBwH,GAAWC,KAAXD,OAGF9I,GAAmBC,MAAaC,MAAM,IAoCpCwT,GAAwB,SAACvM,GAChCD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAmb/BqmB,GAjaG,SAAC,GAA6E,IAA3ElzB,EAA0E,EAA1EA,SAAU0V,EAAgE,EAAhEA,WAAYD,EAAoD,EAApDA,QAAS8f,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,gBAA6B,EACrCjwB,EAAe,GAAI,kBADkB,mBACvFwxB,EADuF,KAClEC,EADkE,OAIvC9tB,mBAAS,IAJ8B,mBAIvFysB,EAJuF,KAIlEC,EAJkE,OAK1C1sB,mBAAS,IALiC,mBAKpF2sB,EALoF,KAKlEC,EALkE,OAOhD5sB,mBAAS,IAPuC,mBAOpF6sB,EAPoF,KAOrEC,EAPqE,OAQtD9sB,mBAAS,IAR6C,mBAQpF+sB,EARoF,KAQxEC,EARwE,OAUxC3wB,EAC/C,GACA,eAZuF,mBAUpF4wB,EAVoF,KAUlEC,EAVkE,OAe5C7wB,EAAe,GAAI,YAfyB,mBAelF8wB,EAfkF,KAenEC,EAfmE,OAiBnDptB,mBAAS,IAjB0C,gCAkBzDA,mBAAS,KAlBgD,mBAuBxFjD,GAvBwF,UAuB5E,uCAAG,WAAOC,EAAcC,GAArB,qBAAAf,EAAA,sEACa4xB,EAA0B,CAC3D9+B,WAAY,CACXE,aAAc,CACZoB,GAAI0M,EAAO1M,KAGd2D,KAAM,CACLqB,MAAO0H,EAAO1H,MACLD,MAAO2H,EAAO3H,MACdqH,SAAUM,EAAON,SACjBnH,SAAUyH,EAAOzH,SACjBC,SAAUwH,EAAOxH,SACjBP,UAAW+H,EAAO/H,UAClBC,SAAU8H,EAAO9H,SACjBC,QAASs3B,GAAwB31B,EAAS3B,QAC1CC,KAAMu3B,GAAqB71B,EAAS1B,QAhB1B,QACb24B,EADa,SAsBmC,OAA7BA,EAAkBl6B,QA5Eb4P,OA6E7B4I,EA5EH7I,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,mBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BA+ElCiB,EAJc,WACrB,OAAOynB,EAAaj9B,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQ8G,EAASxG,IAG3C+4B,GAGRxZ,EAAclhB,OAAOmhB,OAAO,GAAIuc,EAAaznB,GAA/BjW,OAAA,IAAAA,CAAA,GAA4Co/B,EAA5C,CACrB//B,KAAM+/B,EAAkB94B,UAAY,IAAM84B,EAAkB74B,YAErDq1B,EAbkD,uBAa9B8B,EAAat8B,MAAM,EAAG6U,IAbQ,CAaAiL,GAbA,aAagBwc,EAAat8B,MAAM6U,EAAQ,KACnG0nB,EAAgB/B,GAChB/d,GAAW,IAGbwD,KAGC/S,EAAQC,eAAc,GA3CL,iCAtDU,IAACuG,IAsDX,OAAH,yDAiDT6pB,EAAe,SAAC5/B,GAClBk/B,EAAqBl/B,IAGnB6/B,EAAkB,SAAC7/B,GACrBg/B,EAAwBh/B,IAG/BsO,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACSgxB,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe3+B,OAAS,IAEvCg+B,EAAiBW,EAAep+B,KAAI,SAAC+F,GAC1C,MAAO,CACNzH,MAAOyH,EAAQnH,KACfA,KAAMmH,EAAQnH,SAGhB8+B,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACK,IAGHzxB,qBAAU,YACG,uCAAG,8BAAAE,EAAA,sEACSkxB,EAAoB,CACjCp+B,WAAY,CACRE,aAAc,CACZiG,QAASs3B,MAJX,QACXiB,EADW,SAUEA,EAAY7+B,OAAS,IAEjCk+B,EAAcW,EAAYt+B,KAAI,SAACgG,GACpC,MAAO,CACN1H,MAAO0H,EAAKpH,KACZA,KAAMoH,EAAKpH,SAGbg/B,EAAeD,IAlBC,2CAAH,qDAsBfY,KACK,CAAClB,IAKPzwB,qBAAU,WACT,IAAK6xB,EAAmB,UAAe,CACrC,IAAM5yB,EAAQ4yB,EAAmB,MACjC,GAAI5yB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EAC1DoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACtCF,OAAOqO,OAAO/B,EAAK,OACnB,IACInJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACZhK,GAAsBgK,QACd,GAAmB,kBAARA,EAAkB,CACrC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACfhK,GAAsBgK,WAQpB6T,EAAmB,WAAiBl/B,OAAOC,KAAKi/B,EAAoB19B,MAAMtB,OAAS,GAClFg/B,EAAmB,KAAnB,SAUF,CAACA,IAON,IAAMxX,EAAe,SAACpY,GACfuO,GAAW,IAgBlB,OACC,kBAAC,IAAD,CACAnP,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACP7F,KAGL,gBACC0G,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACA,kBAAC,KAAD,CACA1M,MAAM,gBACNmb,QAASA,EACT4D,KAAM,SAAClS,GAAD,OAAalB,EAAakB,IAChCmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACfhZ,QAAST,EACT0Z,SAAU,UAGV/G,UAAW,CACErS,OAAQ,IACRwG,QAAS,SAGnB,yBAAKrW,UAAU,mBACZ,yBAAKA,UAAU,yBACf,kBAACf,EAAD,CACHI,MAAM,aACNE,MAAOsP,EAAO/H,UACdjH,KAAK,YACLF,QAAU6P,EAAQ1I,WAAawI,EAAOxI,YACpCyI,GAAgBmwB,EAAoB5yB,MAApB,gBAElBlN,YAAc4P,EAAQ1I,WAAawI,EAAOxI,YACvCyI,GAAgBmwB,EAAoB5yB,MAApB,gBACnBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,iBAIb,yBAAKzP,UAAU,yBACf,kBAACf,EAAD,CACHI,MAAM,YACNE,MAAOsP,EAAO9H,SACdlH,KAAK,WACLF,QAAU6P,EAAQzI,UAAYuI,EAAOvI,WACnCwI,GAAgBmwB,EAAoB5yB,MAApB,eAElBlN,YAAc4P,EAAQzI,UAAYuI,EAAOvI,WACtCwI,GAAgBmwB,EAAoB5yB,MAApB,eACnBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,iBAYV,yBAAKzP,UAAU,mBAClB,yBAAKA,UAAU,yBACf,kBAACf,EAAD,CACHI,MAAM,QACNE,MAAOsP,EAAO1H,MACdtH,KAAK,QACLF,QAAU6P,EAAQrI,OAASmI,EAAOnI,QAChCoI,GAAgBmwB,EAAoB5yB,MAApB,YAElBlN,YAAc4P,EAAQrI,OAASmI,EAAOnI,QACnCoI,GAAgBmwB,EAAoB5yB,MAApB,YACnBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,aAIb,yBAAKzP,UAAU,yBACf,kBAACf,EAAD,CACHI,MAAM,QACNE,MAAOsP,EAAO3H,MACdrH,KAAK,QACLF,QAAU6P,EAAQtI,OAASoI,EAAOpI,QAChCqI,GAAgBmwB,EAAoB5yB,MAApB,YAElBlN,YAAc4P,EAAQtI,OAASoI,EAAOpI,QACnCqI,GAAgBmwB,EAAoB5yB,MAApB,YACnBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,cActB,yBAAKzP,UAAU,mBACN,yBAAKA,UAAU,yBACf,wBAAIA,UAAU,mBAAd,WAGA,kBAAC,KAAD,CACNyY,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,mBACZoY,iBAAiB,WACjBlZ,aAAcmJ,GAAYA,EAAS3B,QACnCvH,SAAU2/B,EACVzmB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IAE9FgmB,EAAiB1xB,MACjB0xB,EAAiB98B,KAAKtB,OAAS,GAC/Bg+B,EAAez9B,KAAI,SAAC4X,GACnB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,WAIxC,yBAAKG,UAAU,yBACf,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,KAAD,CACNR,aAAcmJ,GAAYA,EAAS1B,KACnCwR,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,gBACZoY,iBAAiB,WACjBjZ,SAAU0/B,EACVxmB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IAE9FkmB,EAAc5xB,MACd4xB,EAAch9B,KAAKtB,OAAS,GAC5Bk+B,EAAY39B,KAAI,SAAC4X,GAChB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAOrC,yBAAKO,MAAO,CACR0V,UAAW,UAKf,yBAAK9V,UAAU,mBAClB,yBAAKA,UAAU,yBACf,kBAACf,EAAD,CACHI,MAAM,UACNE,MAAOsP,EAAOzH,SACdvH,KAAK,WACLF,QAAU6P,EAAQpI,UAAYkI,EAAOlI,WACnCmI,GAAgBmwB,EAAoB5yB,MAApB,eAElBlN,YAAc4P,EAAQpI,UAAYkI,EAAOlI,WACtCmI,GAAgBmwB,EAAoB5yB,MAApB,eACnBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,gBAIb,yBAAKzP,UAAU,yBACf,kBAACf,EAAD,CACHI,MAAM,YACNE,MAAOsP,EAAOxH,SACdxH,KAAK,WACLF,QAAU6P,EAAQnI,UAAYiI,EAAOjI,WACnCkI,GAAgBmwB,EAAoB5yB,MAApB,eAElBlN,YAAc4P,EAAQnI,UAAYiI,EAAOjI,WACtCkI,GAAgBmwB,EAAoB5yB,MAApB,eACnBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,uBCtbd0M,GAAwBC,KAAxBD,OACA+N,IADwB9N,KAAhBC,YACGpd,IAAXirB,QAEAjT,GAAWC,KAAXD,OAuBFkT,GAAU,SAAC,GAA6C,IAA3CnoB,EAA0C,EAA1CA,KAAMm8B,EAAoC,EAApCA,gBAAoC,EAC7BtsB,oBAAS,GADoB,mBACpDuM,EADoD,KAC3CC,EAD2C,OAEDxM,oBAAS,GAFR,mBAEpDuY,EAFoD,KAE7BC,EAF6B,KAIrD9V,EAAUC,eAJ2C,EAMFtG,EACvD,GACA,kBARyD,mBAM/B2xB,GAN+B,WAUrDC,EAAoB,uCAAG,WAAO39B,GAAP,iBAAA4L,EAAA,sEACK8xB,EAA0B,CACxDh/B,WAAY,CACVE,aAAc,CACZoB,SAJqB,QACrB49B,EADqB,SAU2B,OAA7BA,EAAkBr6B,SAzCd4P,EA0CH,mBAzC5BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,cACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAuCnCwqB,EAAkBh+B,EAAKge,QAAO,SAACve,GAAD,OAAUA,EAAKU,KAAOA,KAC1Dg8B,EAAgB6B,IAbS,iCA/BC,IAAC1qB,IA+BF,OAAH,sDAiB1B,OACE,oCACE,kBAAC,KAAD,CAMEyD,KAAK,QAEL8D,WAAY7a,GAEZ,kBAAC,GAAD,CACEiB,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,0BAAgCqZ,EAAOhb,KAEvCkoB,EAAyBlN,IAE3B/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAMT,kBAAC,GAAD,CACEhB,MAAM,QACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,yBAUZ,kBAAC,GAAD,CACEiD,MAAM,SACNga,UAAU,aACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,aAIT3P,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAMT,kBAAC,GAAD,CACEhB,MAAM,QACNga,UAAU,aACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,cACNga,UAAU,kBACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEgS,MAAO,IACP/O,MAAM,UACNga,UAAU,UACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,4BAAK9U,GAAQyS,IAAOzS,GAAM+H,OAAO,6BA+BvC,kBAAC,GAAD,CACEhM,UAAU,uBACViD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGvC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,iBAC7B,0BACEjD,UAAU,WACV+P,QAAS,WACPsO,GAAW,GACXgM,EAAyBlN,KAG3B,kBAACyN,GAAA,EAAD,SAKN,kBAAC,KAAD,CACE7H,UAAW,kBAAM+c,EAAqB3iB,EAAOhb,KAC7Cc,MAAM,qBACNkf,OAAO,MACPa,WAAW,MAEX,0BAAMhjB,UAAU,4BACd,kBAAC4iB,GAAA,EAAD,aAQXwH,GACC,kBAAC,GAAD,CACE8T,aAAcl8B,EACdm8B,gBAAiBA,EACjB9f,WAAYA,EACZD,QAASA,EACTzV,SAAUyhB,MAsMLU,iBA3LM,SAAC,GAAuB,EAArBvW,QAAsB,IAAD,EACH1C,mBAAS,IADN,mBACpCqsB,EADoC,KACtBC,EADsB,OAGMjwB,EAC/C,GACA,gBALyC,mBAGpC+xB,EAHoC,KAGrBC,EAHqB,OAOiBruB,mBAAS,IAP1B,mBAOpCsuB,EAPoC,KAOZC,EAPY,KAS3Ch/B,QAAQC,IAAI,eAAgB68B,GAE5BrwB,qBAAU,YACU,uCAAG,8BAAAE,EAAA,6DACbsyB,EAAmB,WACvB,OAAQF,GACN,IAAK,WACH,MAAO,CACLprB,SAAU,QACVC,eAAgB,MAGpB,IAAK,iBACH,MAAO,CACLD,SAAU,aACVC,eAAgB,MAGpB,IAAK,gBACH,MAAO,CACLD,SAAU,aACVC,eAAgB,KAIpB,IAAK,iBACH,MAAO,CACLD,SAAU,aACVC,eAAgB,MAIpB,IAAK,gBACH,MAAO,CACLD,SAAU,aACVC,eAAgB,KAIpB,QACE,MAAO,CACLD,SAAU,QACVC,eAAgB,QAvCL,SA2CKkrB,EAAwB,CAC9Cr/B,WAAY,CACVC,OAAQu/B,OA7CO,OA2CbC,EA3Ca,OAiDnBnC,EAAgBmC,GAjDG,2CAAH,qDAmDlBC,KACC,CAACJ,IAEJ,IAlE2C,EA2EetuB,oBAAS,GA3ExB,mBA2EpC6T,EA3EoC,KA2EbC,EA3Ea,KA0G3C,OACE,oCAIE,yBAAK3lB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,aAEA,kBAAC,GAAD,CACEqrB,aAAa,EACbrrB,UAAU,qBACVM,YAAY,oBACZquB,SAAU,SAACpvB,GAAD,OAtDD,SAACA,GACpB,GAAI0gC,EAAcj+B,KAAKtB,OAAS,EAAG,CACjC,IAAMs/B,EAAkBC,EAAcj+B,KAAKge,QAAO,SAACve,GAAD,OAChDA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBAEzCqlB,EAAgB6B,IAiDa1U,CAAa/rB,OAKtC,6BACE,kBAAC,KAAD,CACEa,MAAO,CACLC,aAAc,OACdmV,MAAO,UACPS,YAAa,OACbjE,MAAO,SAET1R,YAAY,gBACZoY,iBAAiB,WACjBjZ,SAjCsB,SAACF,GACjC6gC,EAA0B7gC,IAiChBC,aAAc,WACdgZ,UAAU,GA1DO,CAC3B,CACE3Y,KAAM,YACNN,MAAO,YAET,CACEM,KAAM,2BACNN,MAAO,kBAET,CACEM,KAAM,2BACNN,MAAO,iBAET,CACEM,KAAM,2BACNN,MAAO,kBAET,CACEM,KAAM,2BACNN,MAAO,kBAyCuB0B,KAAI,SAAC4X,GACzB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,UAIhD,kBAAC,IAAD,CAEEG,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJ1C,aAWJ,yBAAK3lB,UAAU,uCASf,yBAAKA,UAAU,uCACZigC,EAAc7yB,MAAQ8wB,EAAax9B,OAAS,GAC3C,kBAAC,GAAD,CAASy9B,gBAAiBA,EAAiBn8B,KAAMk8B,IAElD+B,EAAc9yB,WAAa,kBAACoe,GAAD,MAC3B0U,EAAc7yB,QAAU8wB,EAAax9B,OAAS,IAC7C,kBAAC,GAAD,CAAOuC,MAAM,wBAKlBg9B,EAAc7yB,MACb,kBAACozB,GAAD,CACErC,gBAAiBA,EACjBzY,sBAAuBA,EACvBC,yBAA0BA,EAC1BuY,aAAc+B,EAAcj+B,WCnb9BiV,GAAWC,KAAXD,OAGF9I,GAAmBC,MAAaC,MAAM,CACxCvH,UAAWsH,MACN/O,MAAM,aACNF,WACAY,IAAI,EAAG,+CACZgH,SAAUqH,MACL/O,MAAM,YACNF,WACAY,IAAI,EAAG,6CACZoH,MAAOiH,MACFjP,SAAS,sCACT6+B,IAAI,GAAI,uCACb52B,SAAUgH,MACL/O,MAAM,kBACNF,WACAY,IAAI,EAAG,mDAEZmH,MAAOkH,MAAa/O,MAAM,SAAS6H,MAAM,gCAevC2a,GAAwB,SAACvM,GAC3BD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAyXpCqmB,GAvWG,SAAC,GAAqE,IAAnElzB,EAAkE,EAAlEA,SAAU0V,EAAwD,EAAxDA,WAAYD,EAA4C,EAA5CA,QAASqiB,EAAmC,EAAnCA,sBAAmC,EAC1BvyB,EAAe,GAAI,kBADO,mBAC5EwxB,EAD4E,KACvDC,EADuD,OAI3B9tB,mBAAS,IAJkB,mBAI5EysB,EAJ4E,KAItDC,EAJsD,OAKjC1sB,mBAAS,IALwB,mBAK5E2sB,EAL4E,KAKzDC,EALyD,OAOvC5sB,mBAAS,IAP8B,mBAO5E6sB,EAP4E,KAO5DC,EAP4D,OAQ7C9sB,mBAAS,IARoC,mBAQ5E+sB,EAR4E,KAQ/DC,EAR+D,OAUhC3wB,EAC/C,GACA,eAZ+E,mBAU5E4wB,EAV4E,KAU1DC,EAV0D,OAetC7wB,EAAe,GAAI,YAfmB,mBAe5E8wB,EAf4E,KAe7DC,EAf6D,KAqB7ErwB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACe4xB,EAA0B,CACtD9+B,WAAY,CACRE,aAAc,CACVoB,GAAI0M,EAAO1M,KAGnB2D,KAAM,CACFqB,MAAO0H,EAAO1H,MACdD,MAAO2H,EAAO3H,MACdqH,SAAUM,EAAON,SACjBnH,SAAUyH,EAAOzH,SACjBC,SAAUwH,EAAOxH,SACjBP,UAAW+H,EAAO/H,UAClBC,SAAU8H,EAAO9H,SACjBC,QAASs3B,GAAwB31B,EAAS3B,QAC1CC,KAAMu3B,GAAqB71B,EAAS1B,QAhB3B,QACX24B,EADW,SAsBqC,OAA7BA,EAAkBl6B,QA1ElB4P,OA2ErB4I,EA1ER7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,mBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BA0EvCirB,EAAsB,eAEfb,EAFc,CAGjB//B,KAAM+/B,EAAkB94B,UAAY,IAAM84B,EAAkB74B,YAGhEsX,GAAW,IAIXwD,KAGJ/S,EAAQC,eAAc,GAvCL,iCApDO,IAACuG,IAoDR,OAAH,wDA4CZ6pB,EAAe,SAAC5/B,GAClBk/B,EAAqBl/B,IAGnB6/B,EAAkB,SAAC7/B,GACrBg/B,EAAwBh/B,IAG5BsO,qBAAU,YACY,uCAAG,8BAAAE,EAAA,sEACYgxB,EAAuB,IADnC,QACXM,EADW,SAIKA,EAAe3+B,OAAS,IAEpCg+B,EAAiBW,EAAep+B,KAAI,SAAC+F,GACvC,MAAO,CACHzH,MAAOyH,EAAQnH,KACfA,KAAMmH,EAAQnH,SAGtB8+B,EAAkBD,IAZL,2CAAH,qDAgBlBY,KACD,IAGHzxB,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACYkxB,EAAoB,CAC1Cp+B,WAAY,CACRE,aAAc,CACViG,QAASs3B,MAJP,QACRiB,EADQ,SAUKA,EAAY7+B,OAAS,IAE9Bk+B,EAAcW,EAAYt+B,KAAI,SAACgG,GACjC,MAAO,CACH1H,MAAO0H,EAAKpH,KACZA,KAAMoH,EAAKpH,SAGnBg/B,EAAeD,IAlBL,2CAAH,qDAsBfY,KACD,CAAClB,IAGJ,IAAMpW,EAAe,SAACpY,GAClBuO,GAAW,IAKTrP,EAA4B,SAACH,EAAQI,GACvC,QAAKA,GACAJ,EAAO/H,WACP+H,EAAO9H,UACP8H,EAAO1H,OACP0H,EAAOzH,WAMhB,OACI,kBAAC,IAAD,CACI8H,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJ7F,KAGR,gBACG0G,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACI1M,MAAM,gBACNmb,QAASA,EACT4D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,IAEhDiT,UAAW,CACPrS,OAAQ,IACRwG,QAAS,SAGb,yBAAKrW,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,aACNE,MAAOsP,EAAO/H,UACdjH,KAAK,YACLF,QAAU6P,EAAQ1I,WAAawI,EAAOxI,YAChCyI,GAAgBmwB,EAAoB5yB,MAApB,gBAEtBlN,YAAc4P,EAAQ1I,WAAawI,EAAOxI,YACpCyI,GAAgBmwB,EAAoB5yB,MAApB,gBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,iBAI5B,yBAAKzP,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,YACNE,MAAOsP,EAAO9H,SACdlH,KAAK,WACLF,QAAU6P,EAAQzI,UAAYuI,EAAOvI,WAC/BwI,GAAgBmwB,EAAoB5yB,MAApB,eAEtBlN,YAAc4P,EAAQzI,UAAYuI,EAAOvI,WACnCwI,GAAgBmwB,EAAoB5yB,MAApB,eACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,iBAYhC,yBAAKzP,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,QACNE,MAAOsP,EAAO1H,MACdtH,KAAK,QACLF,QAAU6P,EAAQrI,OAASmI,EAAOnI,QAC5BoI,GAAgBmwB,EAAoB5yB,MAApB,YAEtBlN,YAAc4P,EAAQrI,OAASmI,EAAOnI,QAChCoI,GAAgBmwB,EAAoB5yB,MAApB,YACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,aAI5B,yBAAKzP,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,QACNE,MAAOsP,EAAO3H,MACdrH,KAAK,QACLF,QAAU6P,EAAQtI,OAASoI,EAAOpI,QAC5BqI,GAAgBmwB,EAAoB5yB,MAApB,YAEtBlN,YAAc4P,EAAQtI,OAASoI,EAAOpI,QAChCqI,GAAgBmwB,EAAoB5yB,MAApB,YACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,cAchC,yBAAKzP,UAAU,mBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,mBAAd,WAGA,kBAAC,KAAD,CACIyY,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,mBACZoY,iBAAiB,WACjBlZ,aAAcmJ,GAAYA,EAAS3B,QACnCvH,SAAU2/B,EACVzmB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IAE9FgmB,EAAiB1xB,MACd0xB,EAAiB98B,KAAKtB,OAAS,GAC/Bg+B,EAAez9B,KAAI,SAAC4X,GAChB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,WAI5D,yBAAKG,UAAU,yBACX,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,KAAD,CACIR,aAAcmJ,GAAYA,EAAS1B,KACnCwR,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,gBACZoY,iBAAiB,WACjBjZ,SAAU0/B,EACVxmB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IAE9FkmB,EAAc5xB,MACX4xB,EAAch9B,KAAKtB,OAAS,GAC5Bk+B,EAAY39B,KAAI,SAAC4X,GACb,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAOhE,yBAAKO,MAAO,CACR0V,UAAW,UAKf,yBAAK9V,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,UACNE,MAAOsP,EAAOzH,SACdvH,KAAK,WACLF,QAAU6P,EAAQpI,UAAYkI,EAAOlI,WAC/BmI,GAAgBmwB,EAAoB5yB,MAApB,eAEtBlN,YAAc4P,EAAQpI,UAAYkI,EAAOlI,WACnCmI,GAAgBmwB,EAAoB5yB,MAApB,eACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,gBAI5B,yBAAKzP,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,wBACNE,MAAOsP,EAAOxH,SACdxH,KAAK,WACLF,QAAU6P,EAAQnI,UAAYiI,EAAOjI,WAC/BkI,GAAgBmwB,EAAoB5yB,MAApB,eAEtBlN,YAAc4P,EAAQnI,UAAYiI,EAAOjI,WACnCkI,GAAgBmwB,EAAoB5yB,MAApB,eACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,uBC1XpD0M,GAAwBC,KAAxBD,OA0VO4Z,IA1ViB3Z,KAAhBC,YACG2P,IAAX9B,OAMe,SAAC5V,GAAkB,IAAD,EACoBpG,EAAe,GAAI,kBADvC,mBAC9BwyB,EAD8B,KACTC,EADS,OAEUzyB,EAAe,GAAI,wBAF7B,mBAE9B0yB,EAF8B,KAEdC,EAFc,OAGOhvB,oBAAS,GAHhB,mBAG9BiqB,EAH8B,KAGdC,EAHc,OAIclqB,mBAAS,IAJvB,mBAI9BivB,EAJ8B,KAIXL,EAJW,KAQrCr/B,QAAQC,IAAI,qBAAqBy/B,GACjC,IAAMhgC,EAASurB,eACT9X,EAAUC,eACV3J,EAAa/J,EAAM,GAkDzB,OAhDA+M,qBAAU,YAEiB,uCAAG,4BAAAE,EAAA,sEACc4yB,EAA0B,CAC1D9/B,WAAY,CACRE,aAAc,CACVoB,GAAI0I,MAJM,QAChBk2B,EADgB,SAYlBN,EAAsBM,GAG1B3/B,QAAQC,IAAI,wBAAwB0/B,GAfd,2CAAH,qDAkBvBC,KAED,CAACn2B,IAIJgD,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACX8yB,EAAqB,CACvBhgC,WAAY,CACRC,OAAQ,CACJ+J,WAAYA,MAJP,2CAAH,qDAUlBo2B,KAED,CAACp2B,IAKJzJ,QAAQC,IAAI,qBAAsBy/B,GAK9B,yBAAK9gC,UAAU,wBACX,yBAAKA,UAAU,iCACX,+CAIC0gC,EAAoBtzB,MAAQ0zB,GAAuBtgC,OAAOC,KAAKqgC,GAAoBpgC,OAAS,GACzF,oCACI,kBAACwgC,GAAD,CACI9iB,QAAS0d,EACTzd,WAAY0d,EACZpzB,SAAUm4B,EACVL,sBAAuBA,IAE3B,kBAAC,IAAD,CACI1wB,QAAS,kBAAMgsB,GAAkB,IACjCz8B,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAHV,UAUZ,kBAAC,KAAD,CACI0C,UAAW,CAAEzP,KAAM,GACnB7N,QAAS0wB,EAAoBvzB,WAC5BuzB,EAAoBtzB,MAAQ0zB,KAAwBtgC,OAAOC,KAAKqgC,GAAoBpgC,OAAS,IAC1F,kBAAC,KAAD,CAAO4B,YAAY,oBAAoBO,MAAOmR,KAAMK,yBAGvDqsB,EAAoBtzB,MAAQ0zB,GAAuBtgC,OAAOC,KAAKqgC,GAAoBpgC,OAAS,GACzF,yBAAKV,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACK8gC,EAAkB,MAEvB,4BACKA,EAAkB,aAGtBA,EAAkB,SACf,uCAEI,8BACKA,EAAkB,UAM9BA,EAAkB,MACf,oCAEI,8BACKA,EAAkB,OAO9BA,EAAkB,UACf,uCAEI,8BACKA,EAAkB,WAM9BA,EAAkB,OACf,qCAEI,8BACKA,EAAkB,QAK7BA,EAAkB,OAChB,qCAEI,8BACKA,EAAkB,WAW/C,yBAAK9gC,UAAU,iCACX,uCAIJ,yBAAKA,UAAU,8BACV4gC,EAAezzB,WAAa,kBAACoe,GAAD,MAC5BqV,EAAexzB,QAAUwzB,EAAe5+B,KAAKtB,OAAS,IACnD,yBAAKN,MAAO,CACR0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,sCAAsCO,MAAOmR,KAAMK,0BAI7EusB,EAAexzB,MAAQwzB,EAAe5+B,MAAQ4+B,EAAe5+B,KAAKtB,OAAS,GACxE,oCACI,kBAAC,KAAD,CACIN,MAAO,CACHmtB,WAAY,OACZltB,aAAc,iBACdmtB,SAAU,SACVvb,UAAW,+FAOf8G,KAAK,QAEL8D,WAAY+jB,EAAe5+B,KAC3B8a,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACHoV,MAAO,qBAUvC,kBAAC,GAAD,CACEvS,MAAM,OACNga,UAAU,YACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCAEE,wBACEpN,QAAS,WAEPwE,EAAQzQ,KAAR,uBAA6BqZ,EAAOhb,MAEtC/B,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YARZ,IAWI/R,OAQd,kBAAC,GAAD,CACMhB,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCAEE,wBACEpN,QAAS,WAEPwE,EAAQzQ,KAAR,uBAA6BqZ,EAAOhb,MAEtC/B,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAYT,kBAAC,GAAD,CACGhB,MAAM,WACNga,UAAU,eACV5a,IAAI,KACJrC,UAAU,yBAMX,kBAAC,GAAD,CACCiD,MAAM,UACNga,UAAU,eACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACP,oCAEE,wBAEE/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,SAGNvR,GAAQyS,IAAOzS,GAAM+H,OAAO,6BASjC,kBAAC,GAAD,CACE/I,MAAM,cACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,yBAMhB,kBAAC,GAAD,CACEgS,MAAO,IACR/O,MAAM,SACNga,UAAU,SACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACP,oCAEC,uBAAG3G,KAAK,MACP,0BACApW,MAAO,CACLmW,SAAS,SAGRtS,cC5UTkY,GAAWC,KAAXD,OACA+N,GAAWjrB,IAAXirB,OAwBFC,GAAU,SAAC,GAAiD,IAA/CnoB,EAA8C,EAA9CA,KAAMq0B,EAAwC,EAAxCA,aAAcvlB,EAA0B,EAA1BA,MAA0B,EACLe,oBAAS,GADJ,mBACjCwY,GADiC,aAEdnc,EAC/C,GACA,cAJ6D,mBAEvCizB,GAFuC,WAOzD5sB,EAAUC,eAEV4sB,EAAgB,uCAAG,WAAOj/B,GAAP,iBAAA4L,EAAA,sEACKozB,EAAsB,CAChDtgC,WAAY,CACVE,aAAc,CACZoB,SAJiB,QACjBk/B,EADiB,SAUuB,OAAzBA,EAAc37B,SAzCN4P,EA0CH,eAzC5BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,eACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAuCnC+hB,EAAev1B,EAAKge,QAAO,SAACve,GAAD,OAAUA,EAAKU,KAAOA,KACvDk0B,EAAakB,IAbQ,iCA/BK,IAACjiB,IA+BN,OAAH,sDAiBtB,OACE,oCACE,kBAAC,KAAD,CAMEyD,KAAK,QAEL8D,WAAY7a,GAEZ,kBAAC,GAAD,CACEiB,MAAM,GACNga,UAAU,QACV5a,IAAI,KACJ2P,MAAO,QACPhS,UAAU,uBACVkd,OAAQ,SAACza,EAAO0a,GAAR,OACN,oCACE,yBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,sBAA4BqZ,EAAOhb,MAGrCiJ,IAAK3I,EACLU,IAAI,YACJ/C,MAAO,CACL6T,OAAQ,OACRjC,MAAO,OACP0Y,UAAW,UACXrqB,aAAc,MACd2V,OAAQ,iBAMlB,kBAAC,GAAD,CACE/S,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,WAEPwE,EAAQzQ,KAAR,sBAA4BqZ,EAAOhb,MAErC/B,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAMT,kBAAC,GAAD,CACEhB,MAAM,gBACNga,UAAU,eACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACE/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,SAGRvR,GAAQyS,IAAOzS,GAAM+H,OAAO,6BAMrC,kBAAC,GAAD,CACE/I,MAAM,UACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACE/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,SAGRvR,GAAQyS,IAAOzS,GAAM+H,OAAO,6BAiCpCgF,GAAS,WAAYF,IACpB,kBAAC,GAAD,CACE9Q,UAAU,uBACViD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGvC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,aAC7B,0BACEjD,UAAU,WACV+P,QAAS,WACPwE,EAAQzQ,KAAR,2BAAiCqZ,EAAOhb,KACxCkoB,EAAyBlN,KAG3B,kBAACyN,GAAA,EAAD,SAKN,kBAAC,KAAD,CACE7H,UAAW,kBAAMqe,EAAiBjkB,EAAOhb,KACzCc,MAAM,qBACNkf,OAAO,MACPa,WAAW,MAEX,0BAAMhjB,UAAU,4BACd,kBAAC4iB,GAAA,EAAD,eAgHLhR,gBALS,SAAC3E,GAAD,MAAY,CAClC6D,MAAO7D,EAAM2D,eAIyB,KAAzBgB,EAhGE,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EACLe,mBAAS,IADJ,mBAC9ByvB,EAD8B,KACpBC,EADoB,OAEIrzB,EAAe,GAAI,YAFvB,mBAE9BszB,EAF8B,KAEnBC,EAFmB,KAIrCrgC,QAAQC,IAAI,aAAcigC,GAC1B,IAAM/sB,EAAUC,eAEhB3G,qBAAU,YACM,uCAAG,4BAAAE,EAAA,sEACK0zB,EAAoB,CACtC5gC,WAAY,CACVC,OAAQ,CACNiU,SAAU,QACVC,eAAgB,SALP,OACT0sB,EADS,OAUfH,EAAYG,GAVG,2CAAH,qDAYdC,KACC,IAWH,OACE,oCACE,yBAAK3hC,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,SAEA,kBAAC,GAAD,CACEqrB,aAAa,EACbrrB,UAAU,qBACVM,YAAY,iBACZquB,SAAU,SAACpvB,GAAD,OApBD,SAACA,GACpB,GAAIiiC,EAAUx/B,KAAKtB,OAAS,EAAG,CAC7B,IAAM62B,EAAeiK,EAAUx/B,KAAKge,QAAO,SAACve,GAAD,OACzCA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBAEzCyoB,EAAYhK,IAeiBjM,CAAa/rB,OAIrCyR,GAAS,WAAYF,IACpB,kBAAC,IAAD,CAEE9Q,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAMwE,EAAQzQ,KAAK,qBAJ9B,YAWJ,yBAAK9D,UAAU,uCASf,yBAAKA,UAAU,uCACZwhC,EAAUp0B,MAAQk0B,EAAS5gC,OAAS,GACnC,kBAAC,GAAD,CAASoQ,MAAOA,EAAOulB,aAAckL,EAAav/B,KAAMs/B,IAEzDE,EAAUr0B,WAAa,kBAACoe,GAAD,MACvBiW,EAAUp0B,QAAUk0B,EAAS5gC,OAAS,IACrC,yBACEN,MAAO,CACL0V,UAAW,UAGb,kBAAC,KAAD,CACExT,YAAY,gBACZO,MAAOmR,KAAMK,gC,qBChHdzC,IA9KiBwK,KAAxBD,OAAwBC,KAAhBC,YACG2P,IAAX9B,OA6KOtY,aALS,SAAC3E,GAAD,MAAY,CAClC6D,MAAO7D,EAAM2D,eAIyB,KAAzBgB,EAvKQ,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EACQ5C,EACjD,GACA,eAHyC,mBACpC2uB,EADoC,KAClBC,EADkB,OAKCjrB,oBAAS,GALV,gCAMI3D,EAC7C,GACA,eARyC,mBAMpCyuB,EANoC,KAMpBC,EANoB,OAUD/qB,mBAAS,IAVR,mBAUpCmqB,EAVoC,KAUrBU,EAVqB,KAYrC57B,EAASurB,eACT9X,EAAUC,eACVogB,EAAQ9zB,EAAM,GAyCpB,OAvCA+M,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACM6uB,EAAqB,CAC9C/7B,WAAY,CACVE,aAAc,CACZoB,GAAIyyB,MAJW,QACfmI,EADe,UAWnB37B,QAAQC,IAAI,eAAgB07B,GAE5BL,EAAiBK,IAbE,2CAAH,qDAiBpB7F,KACC,CAACtC,IAEJ/mB,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACf+uB,EAAuB,CAC3Bj8B,WAAY,CACVE,aAAc,CACZoB,GAAIyyB,MAJW,2CAAH,qDAUpBoI,KACC,CAACpI,IAEJxzB,QAAQC,IAAI,mBAAoBw7B,GAEhCz7B,QAAQC,IAAI,cAAeP,GAGzB,yBAAKd,UAAU,wBACb,yBAAKA,UAAU,iCACb,2CAEC28B,EAAevvB,MACd4uB,GACAx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAClC,oCAQGsQ,GAAS,WAAYF,IACpB,kBAAC,IAAD,CACEf,QAAS,WACPwE,EAAQzQ,KAAR,2BAAiCk4B,EAAa,OAEhD18B,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OALR,UAaV,kBAAC,KAAD,CAAU0C,UAAW,CAAEzP,KAAM,GAAK7N,QAAS2sB,EAAexvB,WACvDwvB,EAAevvB,MACd4uB,KACEx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,IACpC,kBAAC,KAAD,CACE4B,YAAY,gBACZO,MAAOmR,KAAMK,yBAIlBsoB,EAAevvB,MACd4uB,GACAx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAClC,oCACE,yBAAKV,UAAU,gCACb,yBAAKA,UAAU,+CACb,yBACEoL,IACE4wB,EAAa,OAAaA,EAAa,MAAb,MAE5B74B,IAAI,MAGR,yBAAKnD,UAAU,qCACb,4BAAKg8B,EAAa,MACjBA,EAAa,KACZ,mCAEE,8BAAOA,EAAa,MAIvBA,EAAa,cACZ,6CAEE,8BACGA,EAAa,cACZtlB,IAAOslB,EAAa,cAAkBhwB,OACpC,0BAMTgwB,EAAa,OACZ,uCAEE,8BACGA,EAAa,OACZtlB,IAAOslB,EAAa,OAAWhwB,OAC7B,4BAQd,yBAAKhM,UAAU,iCACb,wCAGF,yBACEA,UAAU,+BACVI,MAAO,CACL8T,QAAS,UAGV0tB,KAAgB5F,EAAa,iB,UCrJxCna,IAXa3K,KAAXD,OACS4qB,KAATC,KAUsB,SAACxsB,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAACumB,GAAA,EAAD,CAAoB/oB,MAAO,CAAEoV,MAAO,0BAIxCrH,GAAmBC,MAAaC,MAAM,IAEtCG,GAAgB,CACpB3O,KAAM,GACNmlB,OAAQ,GACR+c,QAAS,GACTC,UAAW,GACX9c,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ3kB,IAAK,IA2fQqhC,GAveI,SAAC,GAAe,qBACU/zB,EAAe,GAAI,WAD9B,mBACzBg0B,EADyB,KACXC,EADW,OAEFtwB,mBAAS,oCAFP,mBAEzBkwB,EAFyB,KAEhBK,EAFgB,OAGEvwB,mBAAS,qHAHX,mBAGzBmwB,EAHyB,KAGdK,EAHc,OAIAxwB,oBAAS,GAJT,mBAIzB2M,EAJyB,KAIfF,EAJe,OAKQzM,oBAAS,GALjB,mBAKzB2kB,EALyB,KAKXC,EALW,OAMQ5kB,mBAAS,IANjB,mBAMXkV,GANW,aAORlV,mBAAS,IAPD,mBAOzB7M,EAPyB,KAOnBwe,EAPmB,OAQJ3R,mBAAS,IARL,mBAQzB+U,EARyB,KAQjBC,EARiB,KAU1Byb,EAAmB,uCAAG,WAAOzzB,EAAaC,GAApB,eAAAf,EAAA,sEACAo0B,EAAmB,CAC3Cr8B,KAAM,CACJjG,KAAMgP,EAAOhP,KACbkiC,QAASA,EACTnhC,IAAKiO,EAAOhP,KACZ4C,MAAO+b,EAAWA,EAAS,IAAMA,EAAS,GAAGrc,GAAK,GAClD+iB,UAAWrW,EAAOqW,UAClBE,gBAAiBvW,EAAOuW,gBACxBE,SAAUtgB,EAAKtD,KAAK,KAEpBmmB,GAAI,CACF3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUsB,EAAOllB,KAAK,KACtB7B,KAAMgP,EAAOmW,OAAO2C,OACpBoa,QAASC,MAhBW,QACpBO,EADoB,SAsBgB,OAAvBA,EAAY78B,QAE7BqhB,EAAgB,IAChBF,EAAU,IACVrD,EAAQ,IACR4e,EAAW,IACXC,EAAa,IACb5L,IACAnY,EAAY,IACZxP,EAAQiZ,aAERlG,GAAsB,8CAGxB/S,EAAQC,eAAc,GApCI,2CAAH,wDA2GzB,OAlDAlB,qBAAU,WACR,IAAKq0B,EAAY,UAAe,CAC9B,IAAMp1B,EAAQo1B,EAAY,MAC1B,GAAIp1B,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EACvDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,UA3IN,IAACvW,GAoJ1B4sB,EAAY,WACb1hC,OAAOC,KAAKyhC,EAAalgC,MAAMtB,OAAS,GAED,OAAnCwhC,EAAY,KAAZ,SAvJuB5sB,EAwJD,4BAvJ9BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,eACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,iCA8J1C,CAAC0sB,IAEJ9gC,QAAQC,IAAI,aAAcmd,GAGxB,kBAAC,IAAD,CACEtP,SAAU,SAACL,EAAQC,GAAT,OAAqBwzB,EAAoBzzB,EAAQC,IAC3DX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,yBAAK3P,UAAU,uBACb,wBAAIA,UAAU,gCAAd,gBAEA,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLC,YAAY,sBACZH,QACG6P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GAAgB2yB,EAAap1B,MAAb,WAEpBlN,YACG4P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GAAgB2yB,EAAap1B,MAAb,WAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,YAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,WACNE,MAAOsP,EAAOmW,OACdllB,YAAa,8BACbD,KAAK,SACLF,QACG6P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GAAgB2yB,EAAap1B,MAAb,aAEpBlN,YACG4P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GAAgB2yB,EAAap1B,MAAb,aAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,eAMxB,kBAACxQ,EAAD,CACEI,MAAM,MACNE,MAAOsP,EAAOjO,IACdf,KAAK,MACLF,QACG6P,EAAQ5O,KAAO0O,EAAO1O,MACrB2O,GAAgB2yB,EAAap1B,MAAb,UAEpBlN,YACG4P,EAAQ5O,KAAO0O,EAAO1O,MACrB2O,GAAgB2yB,EAAap1B,MAAb,UAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,UAIpB,wBAAIzP,UAAU,mBAAd,aAEA,yBAAKA,UAAU,gCACZwe,GAECA,EAAS9d,OAAS,GAClB8d,EAASvd,KAAI,SAAC4B,EAAO4T,GACnB,OACE,yBAAKzW,UAAU,sCACb,yBACEA,UAAU,kDACV+P,QAAS,kBAAMgX,EAAgBlkB,EAAMV,MAErC,yBAAKiJ,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACE4M,QAAS,kBApKN,SAAC5N,GAE1B,IAAMknB,EACJ7K,GACAA,EAASwB,QAAO,SAACnd,GACf,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GA4JyBC,CAAmBzmB,EAAMV,KACxCnC,UAAU,6CAEV,kBAAC0iB,GAAA,EAAD,WAMTlE,GACEA,EAAS,IACR,kBAAC,KAAD,CAASvb,MAAO,iBACd,yBACE8M,QAAS,WACP0mB,GAAgB,IAElBz2B,UAAU,4CAKV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACd,kBAAC6kB,GAAA,EAAD,SAMR,kBAAC,KAAD,CAAS5hB,MAAO,iBACd,yBACE8M,QAAS,WACP0mB,GAAgB,IAElBz2B,UAAU,4CAKV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACd,kBAAC6kB,GAAA,EAAD,UAOV,uBACEzkB,MAAO,CACLoV,MAAO,UACPM,UAAW,UAGZosB,EAAap1B,MAAb,cAGL,yBAAK9M,UAAU,6BACb,wBAAIA,UAAU,mBAAd,WAEA,kBAAC,KAAD,CACE6yB,OAAQC,KACR9wB,KAAM+/B,EACNhP,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpBoP,EAAWpgC,IAEbqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,MAI1B,yBACEzyB,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,cAEA,kBAAC,KAAD,CACE6yB,OAAQC,KACR9wB,KAAMggC,EACNjP,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpBqP,EAAargC,IAEfqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,OAK5B,yBACEzyB,MAAO,CACL0V,UAAW,UAIf,yBAAK9V,UAAU,+BACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAOsP,EAAOqW,UACdrlB,KAAK,YACLF,QACG6P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GACA2yB,EAAap1B,MAAb,gBAEJlN,YACG4P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GACA2yB,EAAap1B,MAAb,gBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,0DACbD,KAAK,cACLF,QACG6P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACA2yB,EAAap1B,MAAb,kBAEJlN,YACG4P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACA2yB,EAAap1B,MAAb,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,oBAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAAC,GAAD,CACEX,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QACG6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACA2yB,EAAap1B,MAAb,sBAEJlN,YACG4P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACA2yB,EAAap1B,MAAb,sBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,uBAItB,yBAAKzP,UAAU,yBACb,kBAAC,GAAD,CACEX,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QACG6P,EAAQ6V,mBAAqB/V,EAAO+V,oBACnC9V,GACA2yB,EAAap1B,MAAb,wBAEJlN,YACG4P,EAAQ6V,mBAAqB/V,EAAO+V,oBACnC9V,GACA2yB,EAAap1B,MAAb,wBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,0BAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEEwjB,QAASA,EACTxe,KAAMA,KAGV,yBAAKhF,UAAU,yBACb,wBAAIA,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEEwjB,QAASqD,EACT7hB,KAAM4hB,OAMd,yBACExmB,MAAO,CACL0V,UAAW,UAIf,kBAAC,IAAD,CACE9F,QAASkyB,EAAa/0B,UACtB4C,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClC9P,UAAU,8BAHZ,gBASF,kBAAC,GAAD,CACEqe,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SC7gB5BL,IAHahH,KAAXD,OACS4qB,KAATC,KAEwB,SAACxsB,GAC/BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,eACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,gCAIzCqM,GAAwB,SAACvM,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAACumB,GAAA,EAAD,CAAoB/oB,MAAO,CAAEoV,MAAO,yBAIxCrH,GAAmBC,MAAaC,MAAM,IAEtCG,GAAgB,CACpB3O,KAAM,GACNmlB,OAAQ,GACR+c,QAAS,GACTC,UAAW,GACX9c,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ3kB,IAAK,IAupBQqhC,GAnoBI,SAAC,GAAe,qBACU/zB,EAAe,GAAI,cAD9B,mBACzBg0B,EADyB,KACXC,EADW,OAEFtwB,mBAAS,IAFP,mBAEzBkwB,EAFyB,KAEhBK,EAFgB,OAGEvwB,mBAAS,IAHX,mBAGzBmwB,EAHyB,KAGdK,EAHc,OAIAxwB,oBAAS,GAJT,mBAIzB2M,EAJyB,KAIfF,EAJe,OAKQzM,oBAAS,GALjB,mBAKzB2kB,EALyB,KAKXC,EALW,OAMQ5kB,mBAAS,IANjB,mBAMzBiV,EANyB,KAMXC,EANW,OAORlV,mBAAS,IAPD,mBAOzB7M,EAPyB,KAOnBwe,EAPmB,OAQJ3R,mBAAS,IARL,mBAQzB+U,EARyB,KAQjBC,EARiB,OAUe3Y,EAC7C,GACA,cAZ8B,mBAUT0uB,GAVS,aAcU/qB,mBAAS,IAdnB,mBAczBmqB,EAdyB,KAcVU,EAdU,OAkB5BxuB,EAAe,GAAI,6BAlBS,mBAiB9BiZ,GAjB8B,cAsB5BjZ,EAAe,GAAI,6BAtBS,qBAqB9BgZ,IArB8B,aAyB1B0N,GADSvI,eACK,GAEpBxe,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACM6uB,EAAqB,CAC9C/7B,WAAY,CACVE,aAAc,CACZoB,GAAIyyB,OAJW,QACfmI,EADe,UAWnB37B,QAAQC,IAAI,eAAgB07B,GAE5BL,EAAiBK,IAbE,2CAAH,qDAiBpB7F,KACC,CAACtC,KAEJ/mB,qBAAU,WACJmuB,GAAiBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GACnDs7B,EAAcv5B,OAASu5B,EAAcv5B,MAAd,KAEzB6b,EAAY,CAAC0d,EAAcv5B,QAC3BskB,EAAgBiV,EAAcv5B,MAAd,OAGnB,CAACu5B,IAEJnuB,qBAAU,WACJmuB,GAAiBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,IACvD0hC,EAAWpG,EAAa,SAAe,IACvCqG,EACErG,EAAa,IAAUA,EAAa,GAAb,QACnBA,EAAa,GAAb,QACA,OAGP,CAACA,IAEJ,IAAMsG,GAAmB,uCAAG,WAAOzzB,EAAaC,GAApB,eAAAf,EAAA,sEACAo0B,EAAmB,CAC3CthC,WAAY,CACVE,aAAc,CACZoB,GAAI65B,EAAc55B,MAGtB0D,KAAM,CACJjG,KAAMgP,EAAOhP,KACbkiC,QAASA,EACTnhC,IAAKiO,EAAOhP,KACZ4C,MAAO+b,EAAWA,EAAS,IAAMA,EAAS,GAAGrc,GAAK,GAClD+iB,UAAWrW,EAAOqW,UAClBE,gBAAiBvW,EAAOuW,gBACxBE,SAAUtgB,GAAQA,EAAKtE,OAAS,EAAIsE,EAAKtD,KAAK,KAAO,GACrDmmB,GAAI,CACF3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUsB,GAAUA,EAAOlmB,OAAS,EAAIkmB,EAAOllB,KAAK,KAAO,GAC3D7B,KAAMgP,EAAOmW,OAAO2C,OACpBoa,QAASC,MApBW,QACpBO,EADoB,SA0BgB,OAAvBA,EAAY78B,QAW7Bmc,GAAsB,8CAGxB/S,EAAQC,eAAc,GAxCI,2CAAH,wDA6DnBsY,GAAwB,uCAAG,WAAOxkB,GAAP,eAAAkL,EAAA,sEACJoZ,EAAqC,CAC9DtmB,WAAY,CACVE,aAAc,CACZwmB,QAAS1kB,EAAMV,GACfqlB,WAAY,OACZ3gB,OAAQm1B,EAAc75B,OANG,QACzBslB,EADyB,SAYa,OAAxBA,EAAa/hB,OAC/BwY,GAAwB,qBAexB2D,GAAsB,mDA5BO,2CAAH,sDAgC9BhU,qBAAU,WAEJ2Q,GAAYA,EAAS,IAAMA,EAAS9d,OAAS,GAC3ComB,IAAiBtI,EAAS,GAAGrc,KAC/B4kB,EAAgBvI,EAAS,GAAGrc,IAC5BklB,GAAyB7I,EAAS,OAGrC,CAACA,IAEJ3Q,qBAAU,WACR,IAAKq0B,EAAY,UAAe,CAC9B,IAAMp1B,EAAQo1B,EAAY,MAC1B,GAAIp1B,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EACvDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,WAS/BqW,EAAY,WACb1hC,OAAOC,KAAKyhC,EAAalgC,MAAMtB,OAAS,GAED,OAAnCwhC,EAAY,KAAZ,QACFhkB,GAAwB,+BAU3B,CAACgkB,IAEJr0B,qBAAU,WACR,GAAImuB,GAAiBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,EAAG,CAC1D,IAAM4kB,EACJ0W,EAAc1W,UAAY0W,EAAc1W,SAAStkB,MAAM,KAEzDI,QAAQC,IAAI,gBAAiBikB,GAE7B,IAAMC,EACJyW,EAAcnU,IACdmU,EAAcnU,GAAd,UACAmU,EAAcnU,GAAd,SAA6B7mB,MAAM,KACrCwiB,EAAQ8B,GAAY,IACpBuB,EAAUtB,GAAc,OAEzB,IAEH,IAAM+B,GAAuB,uCAAG,WAAOnlB,GAAP,SAAA4L,EAAA,6DAC9B3M,QAAQC,IAAI,OAAQc,GACpBf,QAAQC,IAAI,QAAS26B,GAFS,SAGxB9U,GAAqC,CACzCrmB,WAAY,CACVE,aAAc,CACZwmB,QAASplB,EACTqlB,WAAY,OACZ3gB,OAAQm1B,EAAc75B,OARE,2CAAH,sDAc7B,OACE,kBAAC,IAAD,CACE+M,SAAU,SAACL,EAAQC,GAAT,OAAqBwzB,GAAoBzzB,EAAQC,IAC3DX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,GAERwtB,EAFQ,GAGPA,GACFx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAAK,CACvCykB,YACE6W,EAAa,IACbA,EAAa,GAAO9W,WACpB8W,EAAa,GAAO9W,UACtBG,kBACE2W,EAAa,IACbA,EAAa,GAAO5W,iBACpB4W,EAAa,GAAO5W,gBACtBJ,OACEgX,EAAa,IACbA,EAAa,GAAOn8B,MACpBm8B,EAAa,GAAOn8B,KACtBolB,cACE+W,EAAa,IACbA,EAAa,GAAO15B,aACpB05B,EAAa,GAAO15B,gBAI3B,gBACC+M,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,yBAAK3P,UAAU,uBACb,wBAAIA,UAAU,gCAAd,aAEA,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLC,YAAY,sBACZH,QACG6P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GAAgB2yB,EAAap1B,MAAb,WAEpBlN,YACG4P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GAAgB2yB,EAAap1B,MAAb,WAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,YAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,WACNE,MAAOsP,EAAOmW,OACdllB,YAAa,8BACbD,KAAK,SACLF,QACG6P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GAAgB2yB,EAAap1B,MAAb,aAEpBlN,YACG4P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GAAgB2yB,EAAap1B,MAAb,aAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,eAMxB,kBAACxQ,EAAD,CACEI,MAAM,MACNE,MAAOsP,EAAOjO,IACdf,KAAK,MACLF,QACG6P,EAAQ5O,KAAO0O,EAAO1O,MACrB2O,GAAgB2yB,EAAap1B,MAAb,UAEpBlN,YACG4P,EAAQ5O,KAAO0O,EAAO1O,MACrB2O,GAAgB2yB,EAAap1B,MAAb,UAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,UAIpB,wBAAIzP,UAAU,mBAAd,aAEA,yBAAKA,UAAU,gCACZg8B,GAAiBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GACpD,oCACG8d,GAECA,EAAS9d,OAAS,GAClB8d,EAASvd,KAAI,SAAC4B,EAAO4T,GACnB,OACE,yBAAKzW,UAAU,sCACb,yBACEA,UAAU,kDACV+P,QAAS,WACPgX,EAAgBlkB,EAAMV,MAIxB,yBAAKiJ,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACE4M,QAAS,YArQV,SAAC5N,GAE1B,IAAMknB,EACJ7K,GACAA,EAASwB,QAAO,SAACnd,GACf,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GA8PgBC,CAAmBzmB,EAAMV,IACzBmlB,GAAwBzkB,EAAMV,KAEhCnC,UAAU,6CAEV,kBAAC0iB,GAAA,EAAD,QAGDoE,IAAiBjkB,EAAMV,KAKrB2kB,GACS,IAAVrQ,IALA,0BAAMzW,UAAU,4CACd,kBAAC2iB,GAAA,EAAD,WAcVnE,KAEDA,GAAcA,GAAYA,EAAS9d,OAAS,GAiB3C,GAhBA,oCACE,kBAAC,KAAD,CAASuC,MAAO,iBACd,yBACE8M,QAAS,WACP0mB,GAAgB,IAElBz2B,UAAU,4CAEV,kBAACupB,GAAA,EAAD,MACA,0BAAMvpB,UAAU,iDACd,kBAAC6kB,GAAA,EAAD,YAYhB,uBACEzkB,MAAO,CACLoV,MAAO,UACPM,UAAW,UAGZosB,EAAap1B,MAAb,cAGL,yBAAK9M,UAAU,6BACb,wBAAIA,UAAU,mBAAd,WAEA,kBAAC,KAAD,CACE6yB,OAAQC,KACR9wB,KAAM+/B,EACNhP,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpBoP,EAAWpgC,IAEbqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,MAI1B,yBACEzyB,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,cAEA,kBAAC,KAAD,CACE6yB,OAAQC,KACR9wB,KAAMggC,EACNjP,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpBqP,EAAargC,IAEfqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,OAK5B,yBACEzyB,MAAO,CACL0V,UAAW,UAIf,yBAAK9V,UAAU,+BACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAOsP,EAAOqW,UACdrlB,KAAK,YACLF,QACG6P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GACA2yB,EAAap1B,MAAb,gBAEJlN,YACG4P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GACA2yB,EAAap1B,MAAb,gBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,0DACbD,KAAK,cACLF,QACG6P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACA2yB,EAAap1B,MAAb,kBAEJlN,YACG4P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACA2yB,EAAap1B,MAAb,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,oBAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAAC,GAAD,CACEX,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QACG6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACA2yB,EAAap1B,MAAb,sBAEJlN,YACG4P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACA2yB,EAAap1B,MAAb,sBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,uBAItB,yBAAKzP,UAAU,yBACb,kBAAC,GAAD,CACEX,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QACG6P,EAAQ6V,mBAAqB/V,EAAO+V,oBACnC9V,GACA2yB,EAAap1B,MAAb,wBAEJlN,YACG4P,EAAQ6V,mBAAqB/V,EAAO+V,oBACnC9V,GACA2yB,EAAap1B,MAAb,wBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,0BAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEEwjB,QAASA,EACTxe,KAAMA,KAGV,yBAAKhF,UAAU,yBACb,wBAAIA,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEEwjB,QAASqD,EACT7hB,KAAM4hB,OAMd,yBACExmB,MAAO,CACL0V,UAAW,UAIf,kBAAC,IAAD,CACE9F,QAASkyB,EAAa/0B,UACtB4C,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClC9P,UAAU,8BAHZ,gBASF,kBAAC,GAAD,CACEqe,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCxtB5BpQ,GAAmBC,MAAaC,MAAM,CAC3CxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,wCACrEuC,YAAa8L,MAAa/O,MAAM,eAAeF,SAAS,6BAsH1C08B,GAzGG,SAAC,GAA8C,IAA5C35B,EAA2C,EAA3CA,SAAUmc,EAAiC,EAAjCA,WAAYD,EAAqB,EAArBA,QAAqB,EACNlQ,EAAe,GAAI,kBADb,mBACxDs0B,EADwD,KACnCtG,EADmC,KAGzDttB,EAAY,uCAAG,WAAOC,EAAcC,GAArB,SAAAf,EAAA,sEACamuB,EAA0B,CAC3Dr7B,WAAY,CACXE,aAAc,CACZoB,GAAI0M,EAAO1M,KAGd2D,KAAM,CACLjG,KAAMgP,EAAOhP,KACbyC,YAAauM,EAAOvM,eATD,cAanBwM,EAAQC,eAAc,GAbH,2CAAH,wDAiBZmZ,EAAe,SAACpY,GACfuO,GAAW,IAKVrP,EAA4B,SAACH,EAAOI,GAC3C,QAAIJ,EAAOhP,MAASgP,EAAOvM,aAAgB2M,IAM5C,OACC,kBAAC,IAAD,CACAC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPtM,KAGL,gBACCmN,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACA,kBAAC,KAAD,CACA1M,MAAM,aACNmb,QAASA,EACT4D,KAAM,SAAClS,GAAD,OAAalB,EAAakB,IAChCmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACfhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,KAG7C,kBAAChQ,EAAD,CACII,MAAM,QACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC/B0P,GAAgBizB,EAAoB11B,MAApB,WAElBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgBizB,EAAoB11B,MAApB,WACnBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,WAGjB,kBAAC,GAAD,CACCpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACdzC,KAAK,cACLF,QAAU6P,EAAQlN,aAAegN,EAAOhN,cACtCiN,GAAgBizB,EAAoB11B,MAApB,kBAElBlN,YAAc4P,EAAQlN,aAAegN,EAAOhN,cACzCiN,GAAgBizB,EAAoB11B,MAApB,kBACnBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,wBCwBPgzB,G,6MAvIbx1B,MAAQ,CACNjI,KAAM,GACNke,cAAc,EACdC,WAAY,GACZC,gBAAiB,EACjBC,eAAgB,I,EAGlBC,YAAc,SAAAC,GACZ,IAAMve,EAAO,EAAKiI,MAAMjI,KAAKgb,QAAO,SAAA9X,GAAG,OAAIA,IAAQqb,KACnD,EAAKG,SAAS,CAAE1e,U,EAGlBye,UAAY,WACV,EAAKC,SAAS,CAAER,cAAc,IAAQ,kBAAM,EAAKtK,MAAM+K,Y,EAGzDC,kBAAoB,SAAA9T,GAClB,EAAK4T,SAAS,CAAEP,WAAYrT,EAAEzE,OAAO9L,S,EAGvCskB,mBAAqB,WAAO,IAClBV,EAAe,EAAKlW,MAApBkW,WACFne,EAAS,EAAKiI,MAAdjI,KACFme,IAA4C,IAA9Bne,EAAKnD,QAAQshB,KAC7Bne,EAAI,uBAAOA,GAAP,CAAame,KAEnB,EAAKO,SAAS,CACZ1e,OACAke,cAAc,EACdC,WAAY,M,EAIhBW,sBAAwB,SAAAhU,GACtB,EAAK4T,SAAS,CAAEL,eAAgBvT,EAAEzE,OAAO9L,S,EAG3CwkB,uBAAyB,WACvB,EAAKL,UAAS,YAA+C,IAA5C1e,EAA2C,EAA3CA,KAAMoe,EAAqC,EAArCA,eAAgBC,EAAqB,EAArBA,eAC/BW,EAAO,aAAOhf,GAGpB,OAFAgf,EAAQZ,GAAkBC,EAEnB,CACLre,KAAMgf,EACNZ,gBAAiB,EACjBC,eAAgB,Q,EAKtBY,aAAe,SAAArL,GACb,EAAKA,MAAQA,G,EAGfsL,iBAAmB,SAAAtL,GACjB,EAAKuL,UAAYvL,G,yEAGT,IAAD,SACoE9M,KAAKmB,MAAxEjI,EADD,EACCA,KAAMke,EADP,EACOA,aAAcC,EADrB,EACqBA,WAAYC,EADjC,EACiCA,eAAgBC,EADjD,EACiDA,eACxD,OACE,oCACGre,EAAK/D,KAAI,SAACiH,EAAKuO,GACd,GAAI2M,IAAmB3M,EACrB,OACE,kBAAC,IAAD,CACE2N,IAAK,EAAKF,iBACV7hB,IAAK6F,EACL6Q,KAAK,QACL/Y,UAAU,YACVT,MAAO8jB,EACP5jB,SAAU,EAAKqkB,sBACfO,OAAQ,EAAKN,uBACbO,aAAc,EAAKP,yBAKzB,IAAMQ,EAAYrc,EAAIxH,OAAS,GAEzB8jB,EACJ,kBAAC,KAAD,CACExkB,UAAU,WACVqC,IAAK6F,EACLuc,SAAoB,IAAVhO,EACViO,QAAS,kBAAM,EAAKpB,YAAYpb,KAEhC,0BACEyc,cAAe,SAAA7U,GACC,IAAV2G,IACF,EAAKiN,SAAS,CAAEN,eAAgB3M,EAAO4M,eAAgBnb,IAAO,WAC5D,EAAKic,UAAUR,WAEjB7T,EAAE8U,oBAILL,EAAS,UAAMrc,EAAItG,MAAM,EAAG,IAAnB,OAA8BsG,IAI9C,OAAOqc,EACL,kBAAC,KAAD,CAASthB,MAAOiF,EAAK7F,IAAK6F,GACvBsc,GAGHA,KAGHtB,GACC,kBAAC,IAAD,CACA9iB,MAAO,CACLyP,OAAQ,UAERuU,IAAKtY,KAAKmY,aACV3kB,KAAK,OACLyZ,KAAK,QACL/Y,UAAU,YACVT,MAAO4jB,EACP1jB,SAAUqM,KAAK8X,kBACfS,OAAQvY,KAAK+X,mBACbS,aAAcxY,KAAK+X,sBAGrBX,GACA,kBAAC,KAAD,CAAKljB,UAAU,gBAAgB+P,QAASjE,KAAK2X,WAC3C,kBAACoB,GAAA,EAAD,MADF,mB,GA/HqBC,IAAMC,WCkC/B5W,GAAmBC,MAAaC,MAAM,CAC3CxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,wCACrEuC,YAAa8L,MAAa/O,MAAM,eAAeF,SAAS,6BAInDqP,GAAgB,CACrB3O,KAAM,GACNyC,YAAa,IAIN6Z,GAAwBC,KAAxBD,OACA+N,IADwB9N,KAAhBC,YACG2P,IAAX9B,QAIFC,GAAU,SAAC,GAAY,IAAXnoB,EAAU,EAAVA,KAAU,EACK6P,oBAAS,GADd,mBACjBuM,EADiB,KACTC,EADS,OAE8BxM,oBAAS,GAFvC,mBAEpBuY,EAFoB,KAEEC,EAFF,OAGuBnc,EAAe,GAAI,aAH1C,mBAGDknB,GAHC,WAMrB7K,EAAoB,uCAAG,WAAOpoB,GAAP,SAAA4L,EAAA,sEACKqnB,EAAqB,CAC9Cv0B,WAAY,CACVE,aAAc,CACZoB,SAJgB,yDAAH,sDAsBvB,OACI,oCACC,kBAAC,KAAD,CAMD4W,KAAK,QAEL8D,WAAY7a,GAGV,kBAAC,GAAD,CACCiB,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,yBAIrB,kBAAC,GAAD,CACWiD,MAAM,cACNga,UAAU,cACV5a,IAAI,KACJrC,UAAU,yBAGb,kBAAC,GAAD,CAEAA,UAAU,uBACRiD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UAET,kBAAC,KAAD,CAAS7C,UAAU,MAAMjT,MAAM,kBAChC,0BAAMjD,UAAU,WAAW+P,QAAS,WAClCsO,GAAW,GACXgM,EAAyBlN,KAE3B,kBAACyN,GAAA,EAAD,QAOA,kBAAC,KAAD,CAAS1U,UAAU,MAAMjT,MAAM,cAGhC,0BACAjD,UAAU,2BACV+P,QAAS,kBAAMwa,EAAqBpN,EAAOhb,MAE3C,kBAACygB,GAAA,EAAD,aAcVwH,GAA2B,kBAAC,GAAD,CAC1B/L,WAAYA,EACZD,QAASA,EACTlc,SAAUkoB,MA8MCsY,GAlLO,SAAC,GAAiB,eACvC,IAAMxU,EAAW3gB,EAAS,GAAI,GAAI,YAAa,CAC9C1M,WAAY,CACVC,OAAQ,CACTmqB,eAAe,MAJqB,EASqB/c,EAAe,GAAI,kBATxC,mBAS7Bs0B,EAT6B,KASRtG,EATQ,OAUqBrqB,oBAAS,GAV9B,mBAc9BjD,GAd8B,UAclB,uCAAG,WAAOC,EAAcC,GAArB,SAAAf,EAAA,sEACUmuB,EAA0B,CACxDr7B,WAAY,CACXE,aAAc,CACfoB,GAAI0M,EAAO1M,KAGX2D,KAAM,CACLjG,KAAMgP,EAAOhP,KACbyC,YAAauM,EAAOvM,eATD,cAatBwM,EAAQC,eAAc,GAbA,2CAAH,yDAoBbC,EAA4B,SAACH,EAAOI,GACxC,QAAIJ,EAAOhP,MAASgP,EAAOvM,aAAgB2M,IAkB9C,OACC,yBAAKjP,UAAU,yBAAyBI,MAAO,CAAEiW,QAAS,sBAAuBmjB,UAAW,MAC3F,yBAAKx5B,UAAU,mCACd,wBAAIA,UAAU,yBAAd,kBAED,yBAAKA,UAAU,8DACd,yBAAKA,UAAU,4CACf,kBAAC,IAAD,CACFkP,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACD,kBAAC1Q,EAAD,CACII,MAAM,QACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC/B0P,GAAgBizB,EAAoB11B,MAApB,WAElBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgBizB,EAAoB11B,MAApB,WACnBrN,SAAU,SAACqQ,GACXT,EAAaS,GACbL,EAAgB,WAIhB,yBAAKrP,MAAO,CACX0V,UAAW,SAIb,wBAAI9V,UAAU,mBAAd,WAED,kBAAC2iC,GAAD,MACG,kBAAC,IAAD,CACAviC,MAAO,CACN8T,QAAS,QACT4B,UAAW,QAEZxW,KAAK,UACLyQ,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCpQ,SAAUsP,EAA0BH,EAAOI,GAC3Ce,QAAST,GART,eAmBS,yBAAKvP,UAAU,6CAE3B,yBAAKA,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,+CAMf,kBAAC,GAAD,CACEqrB,aAAa,EACbrrB,UAAU,qBACZM,YAAY,sBACZquB,SAAU,SAAApvB,GAAK,OAAI6B,QAAQC,IAAI9B,QAe7B,yBAAKS,UAAU,uCAWxB,yBAAKA,UAAU,uCACbkuB,EAAS9gB,MAAQ8gB,EAASlsB,KAAKtB,OAAS,GAAK,kBAAC,GAAD,CAASsB,KAAMksB,EAASlsB,OACrEksB,EAAS/gB,WAAa,kBAACoe,GAAD,Y,kFC3UrBqX,IAFa1rB,KAAXD,O,oLAGI,IAAD,EACwDnL,KAAKwI,MAA5DuuB,EADD,EACCA,iBAAkBC,EADnB,EACmBA,qBAAsBC,EADzC,EACyCA,WAEhD,OACE,oCACE,yBAAK3e,IAAK2e,EAAY/iC,UAAU,oBAC9B,2BACEgS,MAAM,OACNE,OAAQ,EACR8wB,YAAa,EACbC,YAAa,EACbtY,MAAM,SACN3qB,UAAU,YACVkjC,QAAQ,QAER,+BACE,4BACE,wBAAIjvB,OAAQ,MAEd,4BACE,4BACE,2BACEjC,MAAO,IACPE,OAAQ,EACR8wB,YAAa,EACbC,YAAa,EACbtY,MAAM,SACN3qB,UAAU,YACVkjC,QAAQ,UACR9iC,MAAO,CAAEC,aAAc,kBAEvB,+BACE,4BACE,4BACE,2BACE2R,MAAO,IACPE,OAAQ,EACR8wB,YAAa,EACbC,YAAa,EACbtY,MAAM,SACN3qB,UAAU,eAEV,+BACE,4BACE,4BACE,2BACEgS,MAAO,OACPE,OAAQ,EACR8wB,YAAa,EACbC,YAAa,EACbtY,MAAM,OACN3qB,UAAU,MACVI,MAAO,CACL+iC,aAAc,iBACdC,cAAe,OACfnoB,aAAc,SAGhB,2BACE7a,MAAO,CACL6a,aAAc,SAGhB,4BACE,wBACE7a,MAAO,CACLmW,SAAU,GACVf,MAAO,UAEP6tB,WAAY,IACZC,cAAe,MACfhtB,UAAW,SAGb,0BACElW,MAAO,CACL8T,QAAS,eACTqC,SAAU,OACVO,WAAY,MACZtB,MAAO,SALX,cAUA,0BACEpV,MAAO,CACL8T,QAAS,QACT4B,UAAW,OACXS,SAAU,OACVO,WAAY,MACZtB,MAAO,SAGRqtB,EAAiB7gC,KAAjB,MAEH,0BACE5B,MAAO,CACL8T,QAAS,QACT4B,UAAW,OACXS,SAAU,OACVO,WAAY,MACZtB,MAAO,SAGRqtB,EAAiB7gC,KAAjB,SAEH,0BACE5B,MAAO,CACL8T,QAAS,QACT4B,UAAW,OACXS,SAAU,OACVO,WAAY,MACZtB,MAAO,SAGRqtB,EAAiB7gC,KAAjB,OAEH,0BACE5B,MAAO,CACL8T,QAAS,QACT4B,UAAW,OACXS,SAAU,OACVO,WAAY,MACZtB,MAAO,OACPyF,aAAc,SAGf4nB,EAAiB7gC,KAAjB,QAIL,wBACE5B,MAAO,CACLkjC,cAAe,OAEjB3Y,MAAM,SAEL,IACD,yBACEvf,IAAG,UAAK1I,EAAOiK,QAAZ,oBACHqF,MAAO,IACPiC,OAAQ,IACR9Q,IAAI,OACJ+O,OAAQ,QAMlB,2BACEF,MAAO,OACPE,OAAQ,EACR8wB,YAAa,EACbC,YAAa,EACbtY,MAAM,OACN3qB,UAAU,OAEV,+BACE,wBAAIA,UAAU,iBACZ,wBAAIiU,OAAQ,MAEd,4BACE,wBAAIA,OAAQ,KAEd,6BACA,6BACA,4BACE,wBACE7T,MAAO,CACLmW,SAAU,GACVf,MAAO,UAEP6tB,WAAY,IACZC,cAAe,MACfhtB,UAAW,SAGb,0BACElW,MAAO,CACL8T,QAAS,eACTqC,SAAU,OACVO,WAAY,MACZtB,MAAO,SALX,YAUA,0BACEpV,MAAO,CACL8T,QAAS,QACT4B,UAAW,OACXS,SAAU,OACVO,WAAY,MACZtB,MAAO,SAGRstB,EAAqB11B,MACpB01B,EAAqB9gC,MACrBxB,OAAOC,KACLqiC,EAAqB9gC,MACrBtB,OAAS,GACXoiC,EAAqB9gC,KAArB,cAIJ,0BACE5B,MAAO,CACL8T,QAAS,QACT4B,UAAW,OACXS,SAAU,OACVO,WAAY,MACZtB,MAAO,SAGRstB,EAAqB11B,MACpB01B,EAAqB9gC,MACrBxB,OAAOC,KACLqiC,EAAqB9gC,MACrBtB,OAAS,GACXoiC,EAAqB9gC,KAArB,SAIJ,0BACE5B,MAAO,CACL8T,QAAS,QACT4B,UAAW,OACXS,SAAU,OACVO,WAAY,MACZtB,MAAO,SAGRstB,EAAqB11B,MACpB01B,EAAqB9gC,MACrBxB,OAAOC,KACLqiC,EAAqB9gC,MACrBtB,OAAS,GACXoiC,EAAqB9gC,KAArB,OAIJ,0BACE5B,MAAO,CACL8T,QAAS,QACT4B,UAAW,OACXS,SAAU,OACVO,WAAY,MACZtB,MAAO,SAGRstB,EAAqB11B,MACpB01B,EAAqB9gC,MACrBxB,OAAOC,KACLqiC,EAAqB9gC,MACrBtB,OAAS,GACXoiC,EAAqB9gC,KAArB,QAMN,wBACE5B,MAAO,CACLmW,SAAU,GACVf,MAAO,UAEP6tB,WAAY,IACZC,cAAe,MACfhtB,UAAW,UAGb,wCAVF,KAWGusB,EAAiB7gC,KAAjB,UACD,6BACA,8BACG6gC,EAAiB7gC,KAAjB,cAGC0U,IACEmsB,EAAiB7gC,KAAjB,cAGAgK,OAAO,yCAkB5C62B,EAAiB7gC,MAChB6gC,EAAiB7gC,KAAjB,UACA6gC,EAAiB7gC,KAAjB,SAAkCtB,OAAS,GACzC,2BACEsR,MAAM,OACNE,OAAQ,EACR8wB,YAAa,EACbC,YAAa,EACbtY,MAAM,SACN3qB,UAAU,YACVkjC,QAAQ,QAER,+BACE,4BACE,4BACE,2BACElxB,MAAO,IACPE,OAAQ,EACR8wB,YAAa,EACbC,YAAa,EACbtY,MAAM,SACN3qB,UAAU,YACVkjC,QAAQ,WAER,+BACE,6BACA,wBAAIljC,UAAU,gBACZ,wBAAIiU,OAAQ,MAEd,wBAAIjU,UAAU,iBACZ,wBAAIiU,OAAQ,MAEd,4BACE,4BACE,2BACEjC,MAAO,IACPE,OAAQ,EACR8wB,YAAa,EACbC,YAAa,EACbtY,MAAM,SACN3qB,UAAU,eAEV,+BACE,wBACEI,MAAO,CACLgW,gBAAiB,SAGnB,wBACEhW,MAAO,CACLmW,SAAU,GACVf,MAAO,UACPsB,WAAY,SACZusB,WAAY,IACZC,cAAe,MACfjtB,QAAS,oBAEXrE,MAAM,MACN2Y,MAAM,QAVR,QAcA,wBACEvqB,MAAO,CACLmW,SAAU,GACVf,MAAO,UACPsB,WAAY,SACZusB,WAAY,IACZC,cAAe,UAEjB3Y,MAAM,QARR,YAYA,wBACEvqB,MAAO,CACLmW,SAAU,GACVf,MAAO,UACPsB,WAAY,SACZusB,WAAY,IACZC,cAAe,UAEjB3Y,MAAM,QARR,cAYA,wBACEvqB,MAAO,CACLmW,SAAU,GACVf,MAAO,UACPsB,WAAY,SACZusB,WAAY,IACZC,cAAe,UAEjB3Y,MAAM,UAMTkY,EAAiB7gC,KAAjB,SAAkCf,KACjC,SAACQ,GACC,OACE,oCACE,4BACE,wBACEwS,OAAQ,EACR7T,MAAO,CACLsV,WAAY,WAEd6tB,QAAS,KAGb,4BACE,wBAAItvB,OAAQ,GAAIsvB,QAAS,KAE3B,4BACE,wBACEvxB,MAAM,MACN5R,MAAO,CACLmW,SAAU,GACVf,MAAO,UACP6tB,WAAY,IACZC,cAAe,MACfjtB,QAAS,UAEXrW,UAAU,WAETyB,EAAK5B,MAGR,wBACEO,MAAO,CACLmW,SAAU,GACVf,MAAO,UACP6tB,WAAY,IACZC,cAAe,MACfjtB,QAAS,UAEXsU,MAAM,QAELlpB,EAAK8D,UAER,wBACEnF,MAAO,CACLmW,SAAU,GACVf,MAAO,UACP6tB,WAAY,IACZC,cAAe,MACfjtB,QAAS,UAEXsU,MAAM,QAELlpB,EAAK+hC,WAGR,wBACEpjC,MAAO,CACLmW,SAAU,GAEVf,MAAO,UACP6tB,WAAY,IACZC,cAAe,MACfjtB,QAAS,UAEXsU,MAAM,QAELlpB,EAAK8D,SAAW9D,EAAK+hC,gBAOlC,4BACE,wBACEvvB,OAAQ,EACRsvB,QAAS,EACTnjC,MAAO,CACL+iC,aAAc,yBAQ5B,4BACE,wBAAIlvB,OAAQ,YAS9B,2BACEjC,MAAM,OACNE,OAAQ,EACR8wB,YAAa,EACbC,YAAa,EACbtY,MAAM,SACN3qB,UAAU,YACVkjC,QAAQ,QAER,+BACE,4BACE,4BACE,2BACElxB,MAAO,IACPE,OAAQ,EACR8wB,YAAa,EACbC,YAAa,EACbtY,MAAM,SACN3qB,UAAU,YACVkjC,QAAQ,WAER,2BACE9iC,MAAO,CACL6a,aAAc,SAGhB,4BACE,4BAEE,2BACE7a,MAAO,CACL6a,aAAc,OACdnF,UAAW,QAEb9D,MAAO,IACPE,OAAQ,EACR8wB,YAAa,EACbC,YAAa,EACbtY,MAAM,SACN3qB,UAAU,eAEV,+BACE,4BACE,wBACEI,MAAO,CACLmW,SAAU,GACVf,MAAO,UACP6tB,WAAY,IACZC,cAAe,MACfhtB,UAAW,UANf,eAWA,wBACElW,MAAO,CACLmW,SAAU,GACVf,MAAO,UACP6tB,WAAY,IACZC,cAAe,MACfhtB,UAAW,QACXmtB,WAAY,SACZ3sB,WAAY,MACZmE,aAAc,OAEhBjJ,MAAO,IAEN6wB,EAAiB7gC,KAAjB,QAGL,4BACE,wBACE5B,MAAO,CACLmW,SAAU,GACVf,MAAO,UACP6tB,WAAY,IACZC,cAAe,MACfhtB,UAAW,UANf,uBAWA,wBACElW,MAAO,CACLmW,SAAU,GACVf,MAAO,UACP6tB,WAAY,IACZC,cAAe,MACfhtB,UAAW,UAGZusB,EAAiB7gC,MAClB6gC,EAAiB7gC,KAAjB,MAAiC,KAE7B6gC,EAAiB7gC,MAGX,IAFN6gC,EAAiB7gC,KAAjB,eAFA,OACA,WAME6gC,EAAiB7gC,MACjB6gC,EAAiB7gC,KAAjB,kBAIV,4BACE,wBACE5B,MAAO,CACLmW,SAAU,GACVf,MAAO,OACP6tB,WAAY,IACZC,cAAe,MACfhtB,UAAW,UAGb,gEAEF,wBACElW,MAAO,CACLmW,SAAU,GACVf,MAAO,OACP6tB,WAAY,IACZC,cAAe,MACfhtB,UAAW,UAGb,gCACGusB,EAAiB7gC,KAAjB,MACC6gC,EAAiB7gC,KAAjB,gBACA,qB,GAnnBP8iB,IAAMC,YAkwBtB2e,GA3HM,SAAC,GAAyC,IAAvCvhC,EAAsC,EAAtCA,GAAIwhC,EAAkC,EAAlCA,eAAgBC,EAAkB,EAAlBA,YAAkB,EACT11B,EACjD,GACA,eAH0D,mBACrD20B,EADqD,KACnCgB,EADmC,KAKtDC,EAAeC,mBAEf3f,EAAMU,IAAMkf,YAP0C,EAcE91B,EAC5D,GACA,yBAhB0D,mBAcrD40B,EAdqD,KAc/BmB,EAd+B,KAmB5Dp2B,qBAAU,YACa,uCAAG,sBAAAE,EAAA,sEACWk2B,EAA8B,IADzC,yDAAH,qDAIrBC,KACC,IAEHr2B,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACf81B,EAAuB,CAC3BhjC,WAAY,CACVE,aAAc,CACZoB,SAJe,2CAAH,qDAUpBgiC,KACC,CAAChiC,IAEJf,QAAQC,IAAI,mBAAoBwhC,GAMhC,OACE,kBAAC,KAAD,CACE5/B,MAAM,UACNmb,QAASwlB,EACT1hB,UAAW,CACTrS,OAAQ,IACRwG,QAAS,QAEXjW,MAAO,CACL2hB,IAAK,QAEPE,SAAU,kBAAM0hB,GAAe,IAC/B3xB,MAAO,OACPmQ,OAAO,QACPH,KAAM,WAjBRoiB,OAAOC,SAkBLC,QAAQ,GAEPzB,EAAiB11B,WAAa,kBAAC,KAAD,MAC9B01B,EAAiB7gC,MAAQxB,OAAOC,KAAKoiC,EAAiB7gC,MAAMtB,OAAS,GACpE,oCACE,yBACEN,MAAO,CACL8T,QAAS,OACTlC,MAAO,OACPmC,eAAgB,WAChBkC,QAAS,wBAGX,kBAAC,KAAD,CACEkuB,UAAWngB,EACXxI,EAAG,GACHF,EAAG,GACHuO,SAAQ,gBAAW4Y,EAAiB7gC,KAAjB,UAAX,YACR+J,QAAS,CACP4N,YAAa,QAGd,gBAAG6qB,EAAH,EAAGA,MAAH,OACC,kBAAC,IAAD,CACEpkC,MAAO,CACL6V,YAAa,QAEflG,QAASy0B,EAETxkC,UAAU,6BACV4C,KAAM,kBAAC6hC,GAAA,EAAD,OAPR,sBAaJ,kBAAC,KAAD,CACEC,cAAc,gBACdC,QAAS,kBACP,kBAAC,IAAD,CAEE3kC,UAAU,6BACV4C,KAAM,kBAACgiC,GAAA,EAAD,OAHR,UAQF7C,QAAS,kBAAM+B,EAAae,YAGhC,kBAAC,GAAD,CACEzgB,IAAK0f,EACLf,WAAY3e,EACZ0e,qBAAsBA,EACtBD,iBAAkBA,OC3oBftP,GArHa,SAAC,GAKf,IAJVC,EAIS,EAJTA,UACAjuB,EAGS,EAHTA,SACA9D,EAES,EAFTA,KACA2wB,EACS,EADTA,UACS,EAGwClkB,EAC7C,GACA,qBALK,mBAGFihB,EAHE,KAGkBsE,EAHlB,OAOqB5hB,mBAAS,IAP9B,mBAOO6hB,GAPP,aAQyB7hB,oBAAS,GARlC,mBAQS8hB,GART,aASiC9hB,mBAAS,IAT1C,mBASF+hB,EATE,aAU6C/hB,mBAASugB,IAVtD,6BAuCT,OAzBAvkB,qBAAU,WACN8lB,GAAa,GACS,uCAAG,4BAAA5lB,EAAA,sEACC0lB,EAAmB,CACrC5yB,WAAY,CACRE,aAAc,CACVoB,GAAIqxB,MAJK,OACflvB,EADe,OAUrBovB,EAAWpvB,GACXqvB,GAAa,GAXQ,2CAAH,oDAatBK,KACD,IAQH5yB,QAAQC,IAAI,gBAAiBuyB,GAEzB,oCAEI,kBAAC,KAAD,CAAU5jB,QAASmf,EAAmBhiB,WACjCgiB,EAAmBntB,MAAQxB,OAAOC,KAAK0uB,EAAmBntB,MAAMtB,OAAS,GACtE,yBAAKV,UAAU,YAAYqC,IAAK,IAG5B,yBAEI+I,IAAK+jB,EAAmBntB,KAAnB,OAAoCmtB,EAAmBntB,KAAnB,YACzCmB,IAAI,MACJ/C,MAAO,CACH4V,OAAQ,aAGhB,yBAAKhW,UAAU,kBACX,4BAGKmvB,EAAmBntB,KAAnB,MAEL,0CAEgBuD,GAEhB,4BAEK9D,EAAI,gBC7E7BwV,GAAWC,KAAXD,OAGF9I,GAAmBC,MAAaC,MAAM,IA2BtCwT,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAACumB,GAAA,EAAD,CAAoB/oB,MAAO,CAAEoV,MAAO,yBA0cnCqmB,GA7bG,SAAC,GAAuE,IAArElzB,EAAoE,EAApEA,SAAU0V,EAA0D,EAA1DA,WAAYD,EAA8C,EAA9CA,QAAS0mB,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,UAAuB,EAClC72B,EAAe,GAAI,eADe,mBAC9E82B,EAD8E,KAC5DC,EAD4D,KAGrF7jC,QAAQC,IAAI,cAAesH,GAH0D,MAK7BkJ,mBAAS,IALoB,mBAK9EysB,EAL8E,KAKxDC,EALwD,OAMnC1sB,mBAAS,IAN0B,mBAM9E2sB,EAN8E,KAM3DC,EAN2D,OAQzC5sB,mBAAS,IARgC,mBAQ9E6sB,EAR8E,KAQ9DC,EAR8D,OAS/C9sB,mBAAS,IATsC,mBAS9E+sB,EAT8E,KASjEC,EATiE,OAWlC3wB,EAC/C,GACA,eAbiF,mBAW9E4wB,EAX8E,KAW5DC,EAX4D,OAgBxC7wB,EAAe,GAAI,YAhBqB,mBAgB9E8wB,EAhB8E,KAgB/DC,EAhB+D,OAkB/CptB,mBAAS,IAlBsC,gCAmBrDA,mBAAS,KAnB4C,gCAoB/CA,oBAAS,IApBsC,mBAoB9E+xB,EApB8E,KAoBjED,EApBiE,KAwB/E/0B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAf,EAAA,6DAEjB3M,QAAQC,IAAI,SAAUsH,GAFL,SAIUs8B,EAAuB,CAC9CpkC,WAAY,CACRE,aAAc,CACVoB,GAAIwG,EAASxG,KAGrB2D,KAAM,CACFgF,eAAgB,CACZ3D,MAAO0H,EAAO1H,MACdD,MAAO2H,EAAO3H,MACdE,SAAUyH,EAAOzH,SACjBC,SAAUwH,EAAOxH,SACjBP,UAAW+H,EAAO/H,UAClBC,SAAU8H,EAAO9H,SACjBE,KAAMu3B,GAAqB71B,EAAQ,eAAR,KAC3B3B,QAASs3B,GAAwB31B,EAAQ,eAAR,SAErCjC,SAAUiC,EAASjC,SACnBmE,WAAYlC,EAASkC,cAtBZ,QAIXq6B,EAJW,SA4B2B,OAAxBA,EAAax/B,QA9ER4P,OA+ErB4I,EA9ER7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,cACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAiFjCiB,EAJgB,WAClB,OAAOsuB,EAAU9jC,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQ8G,EAASxG,IAG7C+4B,GAGRxZ,EAAclhB,OAAOmhB,OAAO,GAAIojB,EAAUtuB,GAA5BjW,OAAA,IAAAA,CAAA,GAAyC0kC,IACvDC,EAXwC,uBAWjBJ,EAAUnjC,MAAM,EAAG6U,IAXF,CAWUiL,GAXV,aAW0BqjB,EAAUnjC,MAAM6U,EAAQ,KAChGquB,EAAaK,IAIbtjB,KAGJ/S,EAAQC,eAAc,GACtBsP,GAAW,GAhDM,iCAlDO,IAAC/I,IAkDR,OAAH,wDAqDZ6pB,GAAe,SAAC5/B,GAClBk/B,EAAqBl/B,IAGnB6/B,GAAkB,SAAC7/B,GACrBg/B,EAAwBh/B,IAG5BsO,qBAAU,YACY,uCAAG,8BAAAE,EAAA,sEACYgxB,EAAuB,IADnC,QACXM,EADW,SAIKA,EAAe3+B,OAAS,IAEpCg+B,EAAiBW,EAAep+B,KAAI,SAAC+F,GACvC,MAAO,CACHzH,MAAOyH,EAAQnH,KACfA,KAAMmH,EAAQnH,SAGtB8+B,EAAkBD,IAZL,2CAAH,qDAgBlBY,KACD,IAGHzxB,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACYkxB,EAAoB,CAC1Cp+B,WAAY,CACRE,aAAc,CACViG,QAASs3B,MAJP,QACRiB,EADQ,SAUKA,EAAY7+B,OAAS,IAE9Bk+B,EAAcW,EAAYt+B,KAAI,SAACgG,GACjC,MAAO,CACH1H,MAAO0H,EAAKpH,KACZA,KAAMoH,EAAKpH,SAGnBg/B,EAAeD,IAlBL,2CAAH,qDAsBfY,KACD,CAAClB,IAQJ,IAAMpW,GAAe,SAACpY,GAClBuO,GAAW,IAef,OACI,kBAAC,IAAD,CACInP,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJ7F,EAASmC,eAAiBnC,EAASmC,eAAiB,MAG5D,gBACGuE,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACI1M,MAAM,eACNmb,QAASA,EACT4D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,UAGd/G,UAAW,CACPrS,OAAQ,IACRwG,QAAS,QAEbrE,MAAO,QAIP,yBAAKhS,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,aACNE,MAAOsP,EAAO/H,UACdjH,KAAK,YACLF,QAAU6P,EAAQ1I,WAAawI,EAAOxI,YAChCyI,GAAgBy1B,EAAiBl4B,MAAjB,gBAEtBlN,YAAc4P,EAAQ1I,WAAawI,EAAOxI,YACpCyI,GAAgBy1B,EAAiBl4B,MAAjB,gBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,iBAI5B,yBAAKzP,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,YACNE,MAAOsP,EAAO9H,SACdlH,KAAK,WACLF,QAAU6P,EAAQzI,UAAYuI,EAAOvI,WAC/BwI,GAAgBy1B,EAAiBl4B,MAAjB,eAEtBlN,YAAc4P,EAAQzI,UAAYuI,EAAOvI,WACnCwI,GAAgBy1B,EAAiBl4B,MAAjB,eACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,iBAYhC,yBAAKzP,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,QACNE,MAAOsP,EAAO1H,MACdtH,KAAK,QACLF,QAAU6P,EAAQrI,OAASmI,EAAOnI,QAC5BoI,GAAgBy1B,EAAiBl4B,MAAjB,YAEtBlN,YAAc4P,EAAQrI,OAASmI,EAAOnI,QAChCoI,GAAgBy1B,EAAiBl4B,MAAjB,YACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,aAI5B,yBAAKzP,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,QACNE,MAAOsP,EAAO3H,MACdrH,KAAK,QACLF,QAAU6P,EAAQtI,OAASoI,EAAOpI,QAC5BqI,GAAgBy1B,EAAiBl4B,MAAjB,YAEtBlN,YAAc4P,EAAQtI,OAASoI,EAAOpI,QAChCqI,GAAgBy1B,EAAiBl4B,MAAjB,YACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,cAOhC,yBAAKzP,UAAU,mBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,mBAAd,WAKA,kBAAC,IAAKC,KAAN,CACIC,eAAiB8kC,EAAiBl4B,MAAjB,cAA8C,QAAU,GACzE3M,KAAM6kC,EAAiBl4B,MAAjB,eAGN,kBAAC,KAAD,CACItN,aAAcqP,EAAO7H,QACrBy4B,gBAAiB,kBAAC,KAAD,CAAOn9B,YAAY,mBAAmBO,MAAOmR,KAAMK,yBACpEoE,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,mBACZoY,iBAAiB,WACjBjZ,SAAU2/B,GACVzmB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IAE9FgmB,EAAiB1xB,MACd0xB,EAAiB98B,KAAKtB,OAAS,GAC/Bg+B,EAAez9B,KAAI,SAAC4X,GAChB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAUhE,yBAAKG,UAAU,yBACX,wBAAIA,UAAU,mBAAd,QAGA,kBAAC,IAAKC,KAAN,CAEIC,eAAiB8kC,EAAiBl4B,MAAjB,WAA2C,QAAU,GACtE3M,KAAM6kC,EAAiBl4B,MAAjB,YAGN,kBAAC,KAAD,CACItN,aAAcqP,EAAO5H,KACrBjH,UAAU,kBACVy/B,gBAAiB,kBAAC,KAAD,CAAOn9B,YAAY,yBAAyBO,MAAOmR,KAAMK,yBAC1EoE,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,gBACZoY,iBAAiB,WACjBjZ,SAAU0/B,GACVxmB,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IAE9FkmB,EAAc5xB,MACX4xB,EAAch9B,KAAKtB,OAAS,GAC5Bk+B,EAAY39B,KAAI,SAAC4X,GACb,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,aAQpE,yBAAKO,MAAO,CACR0V,UAAW,UAKf,yBAAK9V,UAAU,mBACX,yBAAKA,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,UACNE,MAAOsP,EAAOzH,SACdvH,KAAK,WACLF,QAAU6P,EAAQpI,UAAYkI,EAAOlI,WAC/BmI,GAAgBy1B,EAAiBl4B,MAAjB,eAEtBlN,YAAc4P,EAAQpI,UAAYkI,EAAOlI,WACnCmI,GAAgBy1B,EAAiBl4B,MAAjB,eACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,gBAI5B,yBAAKzP,UAAU,yBACX,kBAACf,EAAD,CACII,MAAM,YACNE,MAAOsP,EAAOxH,SACdxH,KAAK,WACLF,QAAU6P,EAAQnI,UAAYiI,EAAOjI,WAC/BkI,GAAgBy1B,EAAiBl4B,MAAjB,eAEtBlN,YAAc4P,EAAQnI,UAAYiI,EAAOjI,WACnCkI,GAAgBy1B,EAAiBl4B,MAAjB,eACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,iBAOhC,yBAAKrP,MAAO,CACR0V,UAAW,UAKNnN,EAASjC,UAAYiC,EAASjC,SAAShG,OAAS,GAC7C,wBAAIV,UAAU,mBAAd,YAMX2I,EAASjC,UAAYiC,EAASjC,SAAShG,OAAS,GAAK,oCAEjDiI,EAASjC,SAASzF,KAAI,SAAAQ,GACnC,OAAO,kBAAC,GAAD,CACH+xB,UAAW/xB,EAAKW,IAChBmD,SAAU9D,EAAK8D,SACf9D,KAAMA,EACN2wB,UAAW3wB,EAAK2wB,gBAOZ,yBAAKhyB,MAAO,CACR0V,UAAW,UAEvB,kBAAC,IAAD,CACA/F,QAAS,kBAAM4zB,GAAe,IAC9B3jC,UAAU,8BAFV,oBAQR,yBAAKI,MAAO,CACQ6a,aAAc,UAGlC,kBAAC,GAAD,CACA9Y,GAAIwG,EAASxG,GACbwhC,eAAgBA,EACfC,YAAaA,UC1blBznB,GAAwBC,KAAxBD,OACA+N,IADwB9N,KAAhBC,YACGpd,IAAXirB,QACA/S,GAAgBC,KAAhBD,YAEF+G,GAA0B,SAAC5I,GAC/BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,cACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAYvCyB,GAAWC,KAAXD,OAQFkT,GAAU,SAAC,GAAiD,IAA/CnoB,EAA8C,EAA9CA,KAAM8iC,EAAwC,EAAxCA,aAAch0B,EAA0B,EAA1BA,MAA0B,EACjCe,oBAAS,GADwB,mBACxDuM,EADwD,KAC/CC,EAD+C,OAELxM,oBAAS,GAFJ,mBAExDuY,EAFwD,KAEjCC,EAFiC,OAGZnc,EACjD,GACA,eAL6D,gCAOAA,EAC7D,GACA,sBAT6D,mBAOhCysB,GAPgC,WAYzDpmB,EAAUC,eAmBVsmB,EAAuB,uCAAG,WAAO3d,EAAQhb,EAAI44B,GAAnB,qBAAAhtB,EAAA,sEACK4sB,EAA6B,CAC9D95B,WAAY,CACVC,OAAQ,CACNskC,eAAgBrK,GAElBh6B,aAAc,CACZoB,SAPwB,QACxB84B,EADwB,SAa8B,OAAhCA,EAAqBv1B,QAC/CwY,GAAwB,wBAMlBzH,EAJgB,WACpB,OAAOzU,EAAKf,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQM,GAG/B+4B,GACd95B,QAAQC,IAAI,WAAY8b,EAAQ1G,GAG1BiL,EAAclhB,OAAOmhB,OAAO,GAAI3f,EAAKyU,GAAQ,CAAE/Q,OAAQq1B,IACvDI,EAZ0D,uBAa3Dn5B,EAAKJ,MAAM,EAAG6U,IAb6C,CAc9DiL,GAd8D,aAe3D1f,EAAKJ,MAAM6U,EAAQ,KAExBrV,QAAQC,IAAI,kBAAmB85B,EAAiB,QAAS2J,GACzDA,EAAa3J,KA9EY7lB,EAiFvB,sDAhFND,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBA2Cb,iCA/CJ,IAACF,IA+CG,OAAH,0DA4F7B,OACE,oCACE,kBAAC,KAAD,CAMEyD,KAAK,QAEL8D,WAAY7a,GAEZ,kBAAC,GAAD,CACEiB,MAAM,OACNga,UAAU,YACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,WAEPwE,EAAQzQ,KAAR,uBAA6BqZ,EAAOhb,KACpCkoB,EAAyBlN,IAE3B/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YATZ,IAYI/R,OAMV,kBAAC,GAAD,CACEhB,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,WAEPwE,EAAQzQ,KAAR,uBAA6BqZ,EAAOhb,KACpCkoB,EAAyBlN,IAE3B/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAMT,kBAAC,GAAD,CACEhB,MAAM,WACNga,UAAU,eACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,UACNga,UAAU,eACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACE/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,SAGRvR,GAAQyS,IAAOzS,GAAM+H,OAAO,6BAMrC,kBAAC,GAAD,CACE/I,MAAM,cACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACE2qB,MAAM,QACN1nB,MAAM,SACNga,UAAU,SACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACGnM,GAAS,YAAaF,GACrB,kBAAC,KAAD,CACEqF,QAAS,kBA9JF,SAACgH,EAAQhb,GAC9B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAKlC,KAAN,CACE8P,QAAS,kBAAM+qB,EAAwB3d,EAAQhb,EAAI,YACnDE,IAAI,IACJO,KAAM,kBAAC+f,GAAA,EAAD,OAHR,WAQA,kBAAC,IAAK1iB,KAAN,CACE8P,QAAS,kBAAM+qB,EAAwB3d,EAAQhb,EAAI,eACnDE,IAAI,IACJO,KAAM,kBAAC+f,GAAA,EAAD,OAHR,cAQA,kBAAC,IAAK1iB,KAAN,CACE8P,QAAS,kBAAM+qB,EAAwB3d,EAAQhb,EAAI,oBACnDE,IAAI,IACJO,KAAM,kBAAC+f,GAAA,EAAD,OAHR,qBAQA,kBAAC,IAAK1iB,KAAN,CACE8P,QAAS,kBAAM+qB,EAAwB3d,EAAQhb,EAAI,aACnDE,IAAI,IACJO,KAAM,kBAAC+f,GAAA,EAAD,OAHR,aAQA,kBAAC,IAAK1iB,KAAN,CACE8P,QAAS,kBAAM+qB,EAAwB3d,EAAQhb,EAAI,WACnDE,IAAI,IACJO,KAAM,kBAAC+f,GAAA,EAAD,OAHR,WA2HyByY,CAAeje,EAAQA,EAAOhb,KAC7C+T,UAAU,eAEV,uBAAGM,KAAK,MACN,0BAEEpW,MAAO,CACLmW,SAAU,SAGXtS,EACD,0BACE7D,MAAO,CACL2V,WAAY,MACZQ,SAAU,SAGZ,kBAAC8kB,GAAA,EAAD,UAMR,uBAAG7kB,KAAK,MACN,0BAEEpW,MAAO,CACLmW,SAAU,SAGXtS,EACD,0BACE7D,MAAO,CACL2V,WAAY,MACZQ,SAAU,iBA6D3B6T,GACC,kBAAC,GAAD,CACE/L,WAAYA,EACZD,QAASA,EACTzV,SAAUyhB,EACV2a,UAAW/iC,EACX8iC,aAAcA,MA+UTlzB,gBALS,SAAC3E,GAAD,MAAY,CAClC6D,MAAO7D,EAAM2D,eAIyB,KAAzBgB,EAnUM,SAAC,GAA+B,IAA7B2C,EAA4B,EAA5BA,QAASzD,EAAmB,EAAnBA,MAAmB,EAChBe,mBAAS,IADO,mBAC3CkzB,EAD2C,KAChCD,EADgC,OAGP52B,EAAe,GAAI,aAHZ,mBAG3Cm3B,EAH2C,KAG/BxE,EAH+B,OAIUhvB,mBAAS,IAJnB,mBAI3CsuB,EAJ2C,KAInBC,EAJmB,OAKYvuB,mBAAS,IALrB,mBAK3CyzB,EAL2C,KAKlBC,EALkB,OAOhB1zB,mBAAS,IAPO,mBAO3CtL,EAP2C,KAOhCmR,EAPgC,OAQpB7F,mBAAS,IARW,mBAQ3CrL,EAR2C,KAQlCmR,EARkC,KAqBlDvW,QAAQC,IAAI,aAAcgkC,GAE1Bx3B,qBAAU,YACO,uCAAG,4BAAAE,EAAA,sEACM8yB,EAAqB,CACzChgC,WAAY,CACVC,OAAQ,CACNiU,SAAU,QACVC,eAAgB,KAChBwwB,YAC6B,QAA3BrF,EAAmC,GAAKA,EAC1ClrB,YAAa,IACbgD,eAAgB1R,EAChB2R,aAAc1R,EACd8+B,wBAAyBA,MAXf,OACVG,EADU,OAgBhBX,EAAaW,GAhBG,2CAAH,qDAkBfC,KACC,CAACvF,EAAwB55B,EAAWC,EAAS8+B,IA3CE,MA6CdzzB,mBAAS,IA7CK,mBA6C3C8zB,EA7C2C,KA6C/BC,EA7C+B,OA8CL13B,EAAe,GAAI,cA9Cd,mBA8C9B23B,GA9C8B,WAgDlDh4B,qBAAU,YACQ,uCAAG,8BAAAE,EAAA,sEACK83B,EAAsB,CAC1ChlC,WAAY,CACVC,OAAQ,CACNiU,SAAU,QACVC,eAAgB,SALL,QACXywB,EADW,SAWFA,EAAQ/kC,OAAS,IAExBolC,EAAoBL,EAAQxkC,KAAI,SAACQ,GACrC,MAAO,CACL5B,KAAM4B,EAAK5B,KACXN,MAAOkC,EAAK5B,SAIhB+lC,EAAcE,IApBC,2CAAH,qDAuBhBC,KACC,IAEH3kC,QAAQC,IAAI,eAAgBskC,GAI5B,IAyEM3jC,EAlBA+iC,GAAaA,EAAUrkC,OAAS,EAClBqkC,EAAU9jC,KAAI,SAACQ,GAC7B,MAAO,CACLwI,UAAWxI,EAAKwI,UAChBpK,KAAM4B,EAAK5B,KACXyK,aAAc7I,EAAK6I,aACnBG,aAAchJ,EAAKgJ,aACfiM,IAAOjV,EAAKukC,aAAah6B,OAAO,wBAChC,GACJi6B,OAAQxkC,EAAKiE,OACbwE,MAAOzI,EAAKyI,UAKJ,GAKhB,OACE,oCAIE,yBAAKlK,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,UAEA,kBAAC,GAAD,CACEqrB,aAAa,EACbrrB,UAAU,qBACVM,YAAY,kBACZquB,SAAU,SAACpvB,GAAD,OAzFD,SAACA,GACpB,GAAI8lC,EAAWrjC,KAAKtB,OAAS,EAAG,CAC9B,IAAMwlC,EAAeb,EAAWrjC,KAAKge,QAAO,SAACve,GAAD,OAC1CA,EAAK5B,KAAKsB,SAAS5B,MAErBulC,EAAaoB,IAoFgB5a,CAAa/rB,OAKtC,yBACEa,MAAO,CACL8T,QAAS,OACTE,WAAY,WAGb2wB,GAAaA,EAAUrkC,OAAS,GAC/B,oCACE,yBACEN,MAAO,CACL8T,QAAS,OACTE,WAAY,SACZ6B,YAAa,SAGf,kBAAC,WAAD,CACEgU,SAAU,aACVjoB,KAAMA,EACNsK,QAnEF,CACd,CAAEjN,MAAO,aAAcgD,IAAK,aAC5B,CAAEhD,MAAO,OAAQgD,IAAK,QACtB,CAAEhD,MAAO,WAAYgD,IAAK,gBAC1B,CAAEhD,MAAO,UAAWgD,IAAK,gBACzB,CAAEhD,MAAO,cAAegD,IAAK,SAC7B,CAAEhD,MAAO,SAAUgD,IAAK,YA0DV,iBAOA,0BACEjC,MAAO,CACLoV,MAAO,UACPO,WAAY,SAGd,kBAACowB,GAAA,EAAD,SAMPn1B,GAAS,YAAaF,IACrB,kBAAC,IAAD,CAEE9Q,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAMwE,EAAQzQ,KAAK,sBAJ9B,aAYN,yBACE1D,MAAO,CACL0V,UAAW,QAEb9V,UAAU,iCAEV,8BAEA,6BACE,kBAAC,GAAD,CACEI,MAAO,CACL4R,MAAO,IACPwD,MAAO,WAET/V,SAhOwB,SAACqQ,GACnC1O,QAAQC,IAAI,YAAaqV,IAAO5G,EAAE,IAAI9D,UACtC5K,QAAQC,IAAI,UAAWqV,IAAO5G,EAAE,IAAI9D,UACpC,IAAMzF,EAAY,IAAI8R,KAAK3B,IAAO5G,EAAE,IAAI9D,UAClCxF,EAAU,IAAI6R,KAAK3B,IAAO5G,EAAE,IAAI9D,UAEtC0L,EAAanR,GAEboR,EAAWnR,IAyND0T,OAAQ,OACR1B,UAAU,IAGXmtB,GAAcA,EAAWjlC,OAAS,GACjC,oCACE,kBAAC,KAAD,CACE+X,YAAU,EACVrY,MAAO,CACLC,aAAc,OACdmV,MAAO,UACPxD,MAAO,QACPiE,YAAa,QAEf3V,YAAY,kBACZoY,iBAAiB,WACjBjZ,SA/JmB,SAACF,GAClCgmC,EAA2BhmC,IAgKbiZ,UAAU,EACVG,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOtV,SACJuV,cACAjX,QAAQ+W,EAAME,gBAAkB,IAGpC6sB,EAAW1kC,KAAI,SAAC4X,GACf,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,WAMpD,kBAAC,KAAD,CACEO,MAAO,CAAEC,aAAc,OAAQmV,MAAO,UAAWxD,MAAO,SACxD1R,YAAY,gBACZoY,iBAAiB,WACjBjZ,SAvLsB,SAACF,GACjC6gC,EAA0B7gC,IAuLhBC,aAAc,MACdgZ,UAAU,GAjLO,CAC3B,CACE3Y,KAAM,MACNN,MAAO,OAET,CACEM,KAAM,UACNN,MAAO,WAET,CACEM,KAAM,aACNN,MAAO,cAET,CACEM,KAAM,oBACNN,MAAO,mBAGT,CACEM,KAAM,YACNN,MAAO,YAET,CACEM,KAAM,SACNN,MAAO,WA2JuB0B,KAAI,SAAC4X,GACzB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAMpD,yBAAKG,UAAU,uCASf,yBAAKA,UAAU,uCACZqlC,EAAWj4B,MAAQ23B,EAAUrkC,OAAS,GACrC,kBAAC,GAAD,CACEoQ,MAAOA,EACPg0B,aAAcA,EACd9iC,KAAM+iC,IAGTM,EAAWl4B,WAAa,kBAACoe,GAAD,MAExB8Z,EAAWj4B,QAAU23B,EAAUrkC,OAAS,IACvC,kBAAC,GAAD,CAAOuC,MAAM,yB,kDCjpBVmjC,mBA1CY,SAAC,GAGd,IAFVrV,EAES,EAFTA,eACAF,EACS,EADTA,YAEA,OACI,yBACIzwB,MAAO,CAEH20B,cAAe,QAEnB/0B,UAAU,6CACJ,wBAAIA,UAAU,kCAChB,8BACI,kBAACqmC,GAAA,EAAD,OAFF,kBAMN,yBAAKrmC,UAAU,qDACV6wB,GAAeA,EAAYnwB,OAAS,GAAKmwB,EAAY5vB,KAAI,SAAAQ,GACtD,OAAO,kBAACuzB,GAAD,CACHjE,eAAgBA,EAChBF,YAAaA,EACb2C,UAAW/xB,EAAKW,IAChBmD,SAAU9D,EAAK8D,SACf9D,KAAMA,EACN2wB,UAAW3wB,EAAK2wB,iBAIrBvB,EAAYnwB,OAAS,IACpB,yBAAKN,MAAO,CACR2V,WAAY,SAEZ,kBAAC,GAAD,CAAO9S,MAAM,mBAAmBgR,OAAQ,YCxCxDgD,GAAWC,KAAXD,OAoFO+X,GAlFA,SAAC,GAAuD,IAArDsX,EAAoD,EAApDA,cAAeC,EAAqC,EAArCA,wBAAqC,EACpC10B,mBAAS,IAD2B,mBAC3D9F,EAD2D,KAClDkiB,EADkD,OAEpBpc,mBAAS,IAFW,mBAE1Cud,GAF0C,aAGzBlhB,EAAe,GAAI,gBAHM,mBAG3DmhB,EAH2D,KAG/ClB,EAH+C,KAyDlE,OA5BAtgB,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACaogB,EAAmB,CAC1CttB,WAAW,CACPC,OAAQ,CACNiU,SAAU,QACVC,eAAgB,SALZ,QACRsa,EADQ,SAWMA,EAAa5uB,OAAS,IAEhC6uB,EAAeD,EAAaruB,KAAI,SAAC8D,GACnC,OAAO,eACAA,EADP,CAEIxF,MAAOwF,EAAM5C,GACbtC,KAAK,GAAD,OAAKkF,EAAM+B,UAAX,YAAwB/B,EAAMgC,eAG1CknB,EAAWsB,IApBD,2CAAH,qDAwBfC,KACD,IAGC,kBAAC,KAAD,CAAUxf,QAASqf,EAAWliB,WAC1B,kBAAC,KAAD,CACIsL,YAAU,EACVM,KAAK,SACL3Y,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,oBACZoY,iBAAiB,WACjBjZ,SA5DZ,SAAkBoZ,GACd,GAAI9M,GAAWA,EAAQrL,OAAS,EAAG,CAC/B,IAAM8lC,EAAez6B,EAAQqV,MAAK,SAAA3f,GAAI,OAAIA,EAAKlC,QAAUsZ,KACrD2tB,GACAD,EAAwBC,GAGhCpX,EAAmBvW,GACnBytB,EAAcztB,IAqDN4W,QA7CZ,aA8CYpL,OAlDZ,aAmDYsK,SA3CZ,SAAkBe,KA4CN/W,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IAE9FuW,EAAWjiB,MACRiiB,EAAWrtB,KAAKtB,OAAS,GACzBqL,EAAQ9K,KAAI,SAAC4X,GACT,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YCHrDumC,mBAvEF,SAAC,GAIA,IAHVvU,EAGS,EAHTA,cAEA4U,GACS,EAFT7U,WAES,EADT6U,kBACS,EACqB50B,mBAAS,IAD9B,mBACF9F,EADE,KACOkiB,EADP,OAEoCpc,mBAAS,IAF7C,mBAEFqhB,EAFE,KAEcC,EAFd,KAKTtlB,qBAAU,WACN,GAAI44B,EAAiBr5B,MAAQq5B,EAAiBzkC,MAASykC,EAAiBzkC,KAAKtB,OAAS,EAAG,CAErF,IAAMgmC,EAAiBD,EAAiBzkC,KAAKf,KAAI,SAACqD,GAC9C,OAAOA,EAAQzE,QAEnBouB,EAAWyY,MAGhB,CAACD,IA8BJ,OACI,oCACI,kBAAC,KAAD,CAAUz2B,QAASy2B,EAAiBt5B,WAC/Bs5B,EAAiBr5B,MAAQq5B,EAAiBzkC,KAAKtB,OAAS,GAAK,kBAAC,KAAD,CAC1D4R,KAAK,WACLhS,YAAY,kBACZf,MAAO2zB,EACPzzB,SAjCK,SAAC4zB,GAKlB,GAJAF,EAAmBE,GAEnBjyB,QAAQC,IAAI,mBAAoBgyB,GAE5BoT,EAAiBr5B,MAAQq5B,EAAiBzkC,KAAKtB,OAAS,GAAK2yB,EAAY3yB,OAAS,EAAG,CACrF,IAAM4tB,EAAsB+E,EAAYpyB,KAAI,SAACQ,GACzC,IAAM8sB,EAAmBkY,EAAiBzkC,KAAKof,MAC3C,SAAC/a,GAAD,OAASA,EAAIxG,KAAKiZ,gBAAkBrX,EAAKqX,iBAE7C,GAAIyV,EACA,OAAOA,KAGfntB,QAAQC,IAAI,sBAAuBitB,GACnCuD,EAAcvD,QAGduD,EAAc,KAgBNzxB,MAAO,CAAE4R,MAAO,SAEfjG,EAAQiU,QAAO,SAAAsT,GAAC,OAAKJ,EAAe/xB,SAASmyB,MAAIryB,KAAI,SAAAQ,GAAI,OACtD,kBAAC,KAAOwV,OAAR,CAAe5U,IAAKZ,EAAMlC,MAAOkC,GAC5BA,YCnBrBwV,GAAWC,KAAXD,OACA6qB,GAASD,KAATC,KAUFjgB,GAAwB,SAACvM,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAACumB,GAAA,EAAD,CAAoB/oB,MAAO,CAAEoV,MAAO,yBAIxCrH,GAAmBC,MAAaC,MAAM,IAEtCG,GAAgB,CACpBrH,MAAO,GACPD,MAAO,GACPJ,UAAW,GACXC,SAAU,GACVK,SAAU,GACVC,SAAU,GACV42B,QAAS,GACT0I,eAAgB,GAChB3/B,QAAS,GACTC,KAAM,IAGF2/B,GAAQ,CACZ,CACE3jC,MAAO,oBACP8+B,QAAS,IAGX,CACE9+B,MAAO,oBAET,CACEA,MAAO,gBACP8+B,QAAS,KAmkCE8E,GA7jCK,SAAC,GAAe,qBACQ34B,EAAe,GAAI,YAD5B,mBAC1B44B,EAD0B,KACXC,EADW,OAEuBl1B,mBAAS,IAFhC,mBAE1BysB,EAF0B,KAEJC,EAFI,OAGiB1sB,mBAAS,IAH1B,mBAG1B2sB,EAH0B,KAGPC,EAHO,OAIG5sB,mBAAS,IAJZ,mBAI1BhH,EAJ0B,KAIdy7B,EAJc,OAKuBz0B,mBAAS,IALhC,mBAK1Bm1B,EAL0B,KAKJT,EALI,OAOW10B,mBAAS,IAPpB,mBAO1B6sB,EAP0B,KAOVC,EAPU,OAQK9sB,mBAAS,IARd,mBAQ1B+sB,EAR0B,KAQbC,EARa,OAUkB3wB,EACjD,GACA,eAZ+B,mBAU1B4wB,EAV0B,KAURC,EAVQ,OAeY7wB,EAAe,GAAI,YAf/B,mBAe1B8wB,EAf0B,KAeXC,EAfW,OAiBHptB,mBAAS,GAjBN,mBAiB1BgzB,EAjB0B,KAiBjBoC,EAjBiB,QAkBGp1B,mBAAS,IAlBZ,qBAkB1B+f,GAlB0B,MAkBdC,GAlBc,SAmBKhgB,mBAAS,IAnBd,qBAmB1Bgf,GAnB0B,MAmBbE,GAnBa,SAqBkB7iB,EACjD,GACA,eAvB+B,qBAqB1Bu4B,GArB0B,MAqBRjL,GArBQ,SAyBoBttB,EACnD,GACA,gBA3B+B,qBAyB1Bg5B,GAzB0B,MAyBPhH,GAzBO,SA8BwBhyB,EACvD,GACA,qBAhC+B,qBA8BLi5B,IA9BK,gBAmCmBt1B,mBAAS,IAnC5B,qBAmC1Bu1B,GAnC0B,MAmCNC,GAnCM,SAoCWx1B,mBAAS,IApCpB,qBAoCVy1B,IApCU,gBAqCuBz1B,mBAAS,IArChC,qBAqC1B01B,GArC0B,MAqCJC,GArCI,MAuCjC35B,qBAAU,WACJm5B,GAAwBxmC,OAAOC,KAAKumC,GAAsBtmC,OAAS,IACrE+9B,EAAqBuI,EAAoB,MACzCzI,EAAwByI,EAAoB,YAE7C,CAACA,IAEJ,IAAMS,GAAyB,SAAChC,GAC9B,QAAKA,GAKP53B,qBAAU,YAC6B,uCAAG,4BAAAE,EAAA,sEACJo5B,GAA0B,CAC1DtmC,WAAY,CACVE,aAAc,CACZ2mC,SAAUlJ,MAJsB,OAChCmJ,EADgC,OAStCH,GAAwBG,GATc,2CAAH,qDAYrCC,GACAxmC,QAAQC,IAAI,oBAAqBm9B,KAChC,CAACA,IAqBJ3wB,qBAAU,WACR,GACE45B,GACEF,GAAqB7mC,OAAS,GAAK6mC,IAErC,CACA,IAEMM,EAFkBN,GAEenmB,MACrC,SAAChY,EAAQqN,GAAT,OAAmB,IAAMA,KAEvBoxB,IACFR,GAAsBQ,EAAc,MACpCP,GAAkBO,OAGrB,CAACN,KAEJ15B,qBAAU,YACS,uCAAG,sBAAAE,EAAA,sEACWytB,GAAuB,CAClD36B,WAAY,CACVC,OAAQ,CACNiU,SAAU,QACVC,eAAgB,KAChB2gB,YAAa,cAND,yDAAH,qDAYjB8F,KACC,IAEH5tB,qBAAU,YACU,uCAAG,sBAAAE,EAAA,sEACWmyB,GAAwB,IADnC,yDAAH,qDAGlBK,KACC,IAEH,IAUMuH,GAAoB,uCAAG,WAAOj5B,EAAaC,GAApB,iBAAAf,EAAA,6DACrBrH,EACJmqB,IAAeA,GAAYnwB,OAAS,EAChCmwB,GAAY5vB,KAAI,SAACQ,GACf,MAAO,CACL6C,QAAS7C,EAAKW,IACdmD,SAAU9D,EAAK8D,SACf6sB,UAAW3wB,EAAK2wB,cAGpB,GAVqB,SAYD2U,EAAiB,CACzCjhC,KAAM,CACJkE,gBAAiB,CACf7C,MAAO0H,EAAO1H,MACdD,MAAO2H,EAAO3H,MACdE,SAAUyH,EAAOzH,SACjBC,SAAUwH,EAAOxH,SACjBP,UAAW+H,EAAO/H,UAClBC,SAAU8H,EAAO9H,SACjBE,KAAMu3B,GAAqBwI,EAAoB,KAC/ChgC,QAASs3B,GAAwB0I,EAAoB,SAEvD3hC,MAAOqB,EACPqhC,SAAUX,GACVv8B,WAAYA,KA1BW,QAYrB03B,EAZqB,SAgCe,OAAvBA,EAAY78B,QAG7BoJ,EAAQiZ,YAERkf,EAAW,GACXpV,GAAc,IACdd,GAAe,IACfuV,EAAc,IACd7H,EAAqB,IACrBF,EAAwB,IACxB8I,GAAsB,IACtBC,GAAkB,IAClBE,GAAwB,IACxBjB,EAAwB,KAExB1kB,GAAsB,+CAGxB/S,EAAQC,eAAc,GAnDK,2CAAH,wDAsD1BlB,qBAAU,WACR,IAAKi5B,EAAa,UAAe,CAC/B,IAAMh6B,EAAQg6B,EAAa,MAC3B,GAAIh6B,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EACvDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,UAxQN,IAACvW,GAiR1BwxB,EAAa,WACdtmC,OAAOC,KAAKqmC,EAAc9kC,MAAMtB,OAAS,GAED,OAApComC,EAAa,KAAb,SApRuBxxB,EAqRD,6BApR9BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,gBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,iCA2R1C,CAACsxB,IAEJ,IAAM3H,GAAe,SAAC5/B,GACpBk/B,EAAqBl/B,IAGjB6/B,GAAkB,SAAC7/B,GACvBg/B,EAAwBh/B,IAG1BsO,qBAAU,YACU,uCAAG,8BAAAE,EAAA,sEACUgxB,EAAuB,IADjC,QACbM,EADa,SAIGA,EAAe3+B,OAAS,IAEtCg+B,EAAiBW,EAAep+B,KAAI,SAAC+F,GACzC,MAAO,CACLzH,MAAOyH,EAAQ7E,GACftC,KAAMmH,EAAQnH,SAGlB8+B,EAAkBD,IAZD,2CAAH,qDAgBlBY,KACC,IAEHzxB,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACUkxB,EAAoB,CAC5Cp+B,WAAY,CACVE,aAAc,CACZiG,QAASs3B,MAJC,QACViB,EADU,SAUGA,EAAY7+B,OAAS,IAEhCk+B,EAAcW,EAAYt+B,KAAI,SAACgG,GACnC,MAAO,CACL1H,MAAO0H,EAAKpH,KACZA,KAAMoH,EAAKpH,SAGfg/B,EAAeD,IAlBD,2CAAH,qDAsBfY,KACC,CAAClB,IAoDJ,OAzCAzwB,qBAAU,WACR,GAAI+jB,IAAcA,GAAWlxB,OAAS,GAAKmwB,IACzC,GAAIe,GAAWlxB,OAASmwB,GAAYnwB,OAAQ,CAC1C,IAAM0xB,EACJR,GAAWA,GAAWlxB,OAAS,GAA/B,SACAkxB,GAAWA,GAAWlxB,OAAS,GAA/B,QAA6CA,OAAS,GACtDkxB,GAAWA,GAAWlxB,OAAS,GAA/B,QAA6C,GAA7C,IAEFqwB,GAAe,GAAD,oBACTF,IADS,gBAGPe,GAAWA,GAAWlxB,OAAS,GAHxB,CAIV0B,IAAKwvB,GAAWA,GAAWlxB,OAAS,GAA/B,GACL0xB,UAAWA,EACX7sB,SAAU,YAGT,GAAIqsB,GAAWlxB,OAASmwB,GAAYnwB,OAAQ,CACjDU,QAAQC,IAAI,aAAcuwB,IAC1BxwB,QAAQC,IAAI,cAAewvB,IAE3B,IAAM6B,EAAiB7B,GAAY7Q,QAAO,SAACve,GACzC,IAAIkxB,GAAS,EAMb,OALAf,GAAWjuB,SAAQ,SAACW,GACdA,EAAQnC,KAAOV,EAAKW,MACtBuwB,GAAS,MAGNA,KAET5B,GAAe2B,SAGjB3B,GAAe,MAGhB,CAACa,KAGJxwB,QAAQC,IAAI,uBAAwB2lC,GAGlC,kBAAC,IAAD,CACE93B,SAAU,SAACL,EAAQC,GAAT,OAAqBg5B,GAAqBj5B,EAAQC,IAC5DX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,GAAP,GAAyBw4B,KAErC,gBACC33B,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,yBAAK3P,UAAU,qBACb,6CACA,yBAAKA,UAAU,gCACb,kBAAC,KAAD,CAAO6kC,QAASA,GACb+B,GAAM3lC,KAAI,SAACQ,GAAD,OACT,kBAAC,GAAD,CAAMY,IAAKZ,EAAKwB,MAAOA,MAAOxB,EAAKwB,YAI1B,IAAZ4hC,GACC,yBAAK7kC,UAAU,mDACb,yBAAKA,UAAU,wDACb,wBAAII,MAAO,GAAIJ,UAAU,kCACvB,8BACE,kBAACsT,GAAA,EAAD,OAFJ,0BAOA,yBACElT,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,YACA,kBAACgoC,GAAD,CACEd,kBAAmBA,GACnBX,wBAAyBA,EACzBD,cAAeA,IAEjB,yBACElmC,MAAO,CACL0V,UAAW,UAGf,wBAAI9V,UAAU,mBAAd,YACA,kBAACioC,GAAD,CACExB,iBAAkBA,GAClB7U,WAAYA,GACZC,cAAeA,MAGnB,yBAAK7xB,UAAU,yDACb,kBAAC,GAAD,CACE+wB,eAAgBA,GAChBF,YAAaA,OAMR,IAAZgU,GACC,yBAAK7kC,UAAU,wCACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAOsP,EAAO/H,UACdjH,KAAK,YACLF,QACG6P,EAAQ1I,WAAawI,EAAOxI,YAC3ByI,GACAu3B,EAAch6B,MAAd,gBAEJlN,YACG4P,EAAQ1I,WAAawI,EAAOxI,YAC3ByI,GACAu3B,EAAch6B,MAAd,gBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,YACNE,MAAOsP,EAAO9H,SACdlH,KAAK,WACLF,QACG6P,EAAQzI,UAAYuI,EAAOvI,WAC1BwI,GACAu3B,EAAch6B,MAAd,eAEJlN,YACG4P,EAAQzI,UAAYuI,EAAOvI,WAC1BwI,GACAu3B,EAAch6B,MAAd,eAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,iBAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAOsP,EAAO1H,MACdtH,KAAK,QACLF,QACG6P,EAAQrI,OAASmI,EAAOnI,QACvBoI,GACAu3B,EAAch6B,MAAd,YAEJlN,YACG4P,EAAQrI,OAASmI,EAAOnI,QACvBoI,GACAu3B,EAAch6B,MAAd,YAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAOsP,EAAO3H,MACdrH,KAAK,QACLF,QACG6P,EAAQtI,OAASoI,EAAOpI,QACvBqI,GACAu3B,EAAch6B,MAAd,YAEJlN,YACG4P,EAAQtI,OAASoI,EAAOpI,QACvBqI,GACAu3B,EAAch6B,MAAd,YAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,cAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,mBAAd,WAEA,kBAAC,IAAKC,KAAN,CACEC,eACE4mC,EAAch6B,MAAd,cAA0C,QAAU,GAEtD3M,KAAM2mC,EAAch6B,MAAd,eAGN,kBAAC,KAAD,CACEtN,aAAcqP,EAAO7H,QACrBy4B,gBACE,kBAAC,KAAD,CACEn9B,YAAY,mBACZO,MAAOmR,KAAMK,yBAGjBoE,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,mBACZoY,iBAAiB,WACjBjZ,SAAU2/B,GACVzmB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOtV,SACJuV,cACAjX,QAAQ+W,EAAME,gBAAkB,IAGpCgmB,EAAiB1xB,MAChB0xB,EAAiB98B,KAAKtB,OAAS,GAC/Bg+B,EAAez9B,KAAI,SAAC4X,GAClB,OACE,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OACnBsZ,EAAOhZ,YAOtB,yBAAKG,UAAU,yBACb,wBAAIA,UAAU,mBAAd,QACA,kBAAC,IAAKC,KAAN,CAEEC,eACE4mC,EAAch6B,MAAd,WAAuC,QAAU,GAEnD3M,KAAM2mC,EAAch6B,MAAd,YAEN,kBAAC,KAAD,CACEtN,aAAcqP,EAAO5H,KACrBjH,UAAU,kBACVy/B,gBACE,kBAAC,KAAD,CACEn9B,YAAY,yBACZO,MAAOmR,KAAMK,yBAGjBoE,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,gBACZoY,iBAAiB,WACjBjZ,SAAU0/B,GACVxmB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOtV,SACJuV,cACAjX,QAAQ+W,EAAME,gBAAkB,IAGpCkmB,EAAc5xB,MACb4xB,EAAch9B,KAAKtB,OAAS,GAC5Bk+B,EAAY39B,KAAI,SAAC4X,GACf,OACE,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OACnBsZ,EAAOhZ,aASxB,yBACEO,MAAO,CACL0V,UAAW,UAIf,yBAAK9V,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,UACNE,MAAOsP,EAAOzH,SACdvH,KAAK,WACLF,QACG6P,EAAQpI,UAAYkI,EAAOlI,WAC1BmI,GACAu3B,EAAch6B,MAAd,eAEJlN,YACG4P,EAAQpI,UAAYkI,EAAOlI,WAC1BmI,GACAu3B,EAAch6B,MAAd,eAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,gBAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,YACNE,MAAOsP,EAAOxH,SACdxH,KAAK,WACLF,QACG6P,EAAQnI,UAAYiI,EAAOjI,WAC1BkI,GACAu3B,EAAch6B,MAAd,eAEJlN,YACG4P,EAAQnI,UAAYiI,EAAOjI,WAC1BkI,GACAu3B,EAAch6B,MAAd,eAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAQf,KAAZo1B,GACC,yBAAK7kC,UAAU,wCACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAOsP,EAAO/H,UACdjH,KAAK,YACLF,QACG6P,EAAQ1I,WAAawI,EAAOxI,YAC3ByI,GACAu3B,EAAch6B,MAAd,gBAEJlN,YACG4P,EAAQ1I,WAAawI,EAAOxI,YAC3ByI,GACAu3B,EAAch6B,MAAd,gBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,YACNE,MAAOsP,EAAO9H,SACdlH,KAAK,WACLF,QACG6P,EAAQzI,UAAYuI,EAAOvI,WAC1BwI,GACAu3B,EAAch6B,MAAd,eAEJlN,YACG4P,EAAQzI,UAAYuI,EAAOvI,WAC1BwI,GACAu3B,EAAch6B,MAAd,eAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,iBAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAOsP,EAAO1H,MACdtH,KAAK,QACLF,QACG6P,EAAQrI,OAASmI,EAAOnI,QACvBoI,GACAu3B,EAAch6B,MAAd,YAEJlN,YACG4P,EAAQrI,OAASmI,EAAOnI,QACvBoI,GACAu3B,EAAch6B,MAAd,YAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAOsP,EAAO3H,MACdrH,KAAK,QACLF,QACG6P,EAAQtI,OAASoI,EAAOpI,QACvBqI,GACAu3B,EAAch6B,MAAd,YAEJlN,YACG4P,EAAQtI,OAASoI,EAAOpI,QACvBqI,GACAu3B,EAAch6B,MAAd,YAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,cAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,mBAAd,WAEA,kBAAC,IAAKC,KAAN,CACEC,eACE4mC,EAAch6B,MAAd,cAA0C,QAAU,GAEtD3M,KAAM2mC,EAAch6B,MAAd,eAGN,kBAAC,KAAD,CACEtN,aAAc,UACdigC,gBACE,kBAAC,KAAD,CACEn9B,YAAY,mBACZO,MAAOmR,KAAMK,yBAGjBoE,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,mBACZoY,iBAAiB,WACjBjZ,SAAU2/B,GACVzmB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOtV,SACJuV,cACAjX,QAAQ+W,EAAME,gBAAkB,IAGpCgmB,EAAiB1xB,MAChB0xB,EAAiB98B,KAAKtB,OAAS,GAC/Bg+B,EAAez9B,KAAI,SAAC4X,GAClB,OACE,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OACnBsZ,EAAOhZ,YAOtB,yBAAKG,UAAU,yBACb,wBAAIA,UAAU,mBAAd,QACA,kBAAC,IAAKC,KAAN,CAEEC,eACE4mC,EAAch6B,MAAd,WAAuC,QAAU,GAEnD3M,KAAM2mC,EAAch6B,MAAd,YAEN,kBAAC,KAAD,CACEtN,aAAc,QACdQ,UAAU,kBACVy/B,gBACE,kBAAC,KAAD,CACEn9B,YAAY,yBACZO,MAAOmR,KAAMK,yBAGjBoE,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,gBACZoY,iBAAiB,WACjBjZ,SAAU0/B,GACVxmB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOtV,SACJuV,cACAjX,QAAQ+W,EAAME,gBAAkB,IAGpCkmB,EAAc5xB,MACb4xB,EAAch9B,KAAKtB,OAAS,GAC5Bk+B,EAAY39B,KAAI,SAAC4X,GACf,OACE,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OACnBsZ,EAAOhZ,aASxB,yBACEO,MAAO,CACL0V,UAAW,UAIf,yBAAK9V,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,UACNE,MAAOsP,EAAOzH,SACdvH,KAAK,WACLF,QACG6P,EAAQpI,UAAYkI,EAAOlI,WAC1BmI,GACAu3B,EAAch6B,MAAd,eAEJlN,YACG4P,EAAQpI,UAAYkI,EAAOlI,WAC1BmI,GACAu3B,EAAch6B,MAAd,eAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,gBAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,wBACNE,MAAOsP,EAAOxH,SACdxH,KAAK,WACLF,QACG6P,EAAQnI,UAAYiI,EAAOjI,WAC1BkI,GACAu3B,EAAch6B,MAAd,eAEJlN,YACG4P,EAAQnI,UAAYiI,EAAOjI,WAC1BkI,GACAu3B,EAAch6B,MAAd,eAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAQf,IAAZo1B,GACC,yBACEzkC,MAAO,CACL8T,QAAS,OACTC,eAAgB,SAChB2B,UAAW,OACX1B,WAAY,SACZ2gB,cAAe,WAGjB,kBAAC,GAAD,CACEhE,eAAgBA,GAChBF,YAAaA,KAGf,yBACEzwB,MAAO,CACL8T,QAAS,OACT6gB,cAAe,SACf5gB,eAAgB,SAChBC,WAAY,WAGd,wBACEhU,MAAO,CACL0V,UAAW,OACX5B,QAAS,eACToC,UAAW,UAEbtW,UAAU,kCAEV,8BACE,kBAAC+S,EAAA,EAAD,OATJ,yBAWyByrB,EAXzB,KAcC+I,IAAwBA,GAAqB7mC,OAAS,EACrD,oCACE,kBAAC,WAAMwnC,MAAP,CACE9nC,MAAO,CACL8T,QAAS,OACTC,eAAgB,SAChBg0B,SAAU,QAEZ5oC,MAAO6nC,GACP5nC,aAAc4nC,GACdvnC,KAAK,cAEJ0nC,GAAqBtmC,KAAI,SAACmnC,GACzB,OACE,yBACEr4B,QAAS,kBA71BF,SAACxQ,GAGpC,GAFA8nC,GAAsB9nC,GAGpBkoC,GACEF,GAAqB7mC,OAAS,GAAK6mC,IAErC,CACA,IAEMM,EAFkBN,GAEenmB,MACrC,SAAChY,GAAD,OAAYA,EAAM,MAAY7J,KAE5BsoC,GACFP,GAAkBO,IAg1BQQ,CACED,EAAmBhmC,MAGvBpC,UAAU,gCAEV,yBAAKA,UAAU,uCACb,kBAAC,WAAD,CAAOT,MAAO6oC,EAAmBhmC,OAEnC,yBAAKpC,UAAU,sCACb,4BAAKooC,EAAmBvoC,MACxB,4BACE,8BACE,kBAACkT,EAAA,EAAD,OAEDq1B,EAAmB/+B,gBAEtB,4BACE,8BACE,kBAACi/B,GAAA,EAAD,OAEDF,EAAmBvjC,aASlC,oCACE,wBACEzE,MAAO,CACLkW,UAAW,SACXd,MAAO,OACPM,UAAW,SAJf,wBAaN,yBACE1V,MAAO,CACL8T,QAAS,OACT4B,UAAW,OACXmF,aAAc,SAGhB,kBAAC,IAAD,CACEjL,QAAS82B,EAAc35B,UACvB/M,MAAO,CACL0V,UAAW,OACXC,WAAY,QAEd/V,UAAU,kCACV+P,QAAS,SAACD,GAAD,OAAYlB,EAAakB,KAPpC,cAUE,kBAACy4B,GAAA,EAAD,SAMR,yBACEnoC,MAAO,CACL8T,QAAS,OACTC,eAAgB,kBAGjB0wB,EAAU,GACT,kBAAC,IAAD,CACEzkC,MAAO,CAAE6V,YAAa,OAAQH,UAAW,QAEzC9V,UAAU,6BACVV,KAAK,UACLyQ,QAAS,WA12BzBk3B,EADmBpC,EAAU,KA62Bb,kBAAC2D,GAAA,EAAD,MAPF,aAWD3D,EAAU+B,GAAMlmC,OAAS,GACxB,oCACE,6BACE,kBAAC,IAAD,CACEN,MAAO,CACL0V,UAAW,QAEb9V,UAAU,6BACVV,KAAK,UACLyQ,QAAS,WAELk3B,EADc,IAAZpC,EACS,EAj4BhBA,EAAU,KAy3BX,OAeE,kBAAC0D,GAAA,EAAD,iB,UCjmClBp6B,IAHa+I,KAAXD,OAGiB7I,MAAaC,MAAM,KAgBtCwT,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAACumB,GAAA,EAAD,CAAoB/oB,MAAO,CAAEoV,MAAO,yBAK5ChH,GAAgB,CAClBi6B,QAAS,GACTC,KAAM,IA4HK7M,GAjHG,SAAC,GAAuF,IAArFlzB,EAAoF,EAApFA,SAAUozB,EAA0E,EAA1EA,kBAAmBD,EAAuD,EAAvDA,eAAgB6M,EAAuC,EAAvCA,cAAeC,EAAwB,EAAxBA,WAAwB,EAClD16B,EAAe,GAAI,gBAD+B,mBAC9F82B,EAD8F,KAC5EC,EAD4E,KAG/Fr2B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,6DACjB3M,QAAQC,IAAI,cAAcwN,GADT,SAGUo2B,EAAuB,CAC9Cn/B,KAAM,CACF4iC,KAAM75B,EAAO65B,KACbD,QAAS55B,EAAO45B,QAChB1+B,MAAOpB,EAASxG,MAPP,QAGX+iC,EAHW,SAc2B,OAAxBA,EAAax/B,QAlDR4P,EAmDG,mBAlDhCD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,gBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAiDvCmzB,EAAc,CAAC,eAAIzD,IAAN,oBAAuB0D,KACpC7M,GAAkB,IAGlBla,KAGJ/S,EAAQC,eAAc,GAxBL,iCApCO,IAACuG,IAoCR,OAAH,wDA6BZ4S,EAAe,SAACpY,GAClBisB,GAAkB,IAGtB,OACI,kBAAC,IAAD,CACI7sB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACI1M,MAAM,iBACNmb,QAAS0d,EACT9Z,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,UAGd/G,UAAW,CACPrS,OAAQ,IACRwG,QAAS,SAGb,kBAAC,GAAD,CACIwH,KAAM,EAC9Bxe,MAAM,OACNE,MAAOsP,EAAO65B,KACd7oC,KAAK,OACLF,QAAU6P,EAAQk5B,MAAQp5B,EAAOo5B,OAC9Bn5B,GAAgBy1B,EAAiBl4B,MAAjB,WAEnBlN,YAAc4P,EAAQk5B,MAAQp5B,EAAOo5B,OAClCn5B,GAAgBy1B,EAAiBl4B,MAAjB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAGG,kBAAC,GAAD,CACIoO,KAAM,EAC9Bxe,MAAM,UACNE,MAAOsP,EAAO45B,QACd5oC,KAAK,UACLF,QAAU6P,EAAQi5B,SAAWn5B,EAAOm5B,UACjCl5B,GAAgBy1B,EAAiBl4B,MAAjB,cAEnBlN,YAAc4P,EAAQi5B,SAAWn5B,EAAOm5B,UACrCl5B,GAAgBy1B,EAAiBl4B,MAAjB,cACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBC5InBtB,IAHa+I,KAAXD,OAGiB7I,MAAaC,MAAM,KAgBtCwT,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAACumB,GAAA,EAAD,CAAoB/oB,MAAO,CAAEoV,MAAO,yBAK5ChH,GAAgB,CAClBi6B,QAAS,GACTC,KAAM,IA2IK7M,GA/HG,SAAC,GAAkG,IAAhGlzB,EAA+F,EAA/FA,SAAUozB,EAAqF,EAArFA,kBAAmBD,EAAkE,EAAlEA,eAAgB6M,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,WAAWC,EAAwB,EAAxBA,WAAwB,EAC7D36B,EAAe,GAAI,mBAD0C,mBACzG82B,EADyG,KACvFC,EADuF,KAG1Gr2B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAf,EAAA,6DACjB3M,QAAQC,IAAI,cAAcwN,GADT,SAGUo2B,EAAuB,CAC9CpkC,WAAY,CACRE,aAAc,CACVoB,GAAI0mC,EAAWzmC,MAGvB0D,KAAM,CACF4iC,KAAM75B,EAAO65B,KACbD,QAAS55B,EAAO45B,QAChB1+B,MAAOpB,EAASxG,MAZP,QAGX+iC,EAHW,SAmB2B,OAAxBA,EAAax/B,QAxDR4P,OAyDrB4I,EAxDR7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,qBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BA0D1CiB,EAJyB,WAC9B,OAAOmyB,EAAW3nC,KAAI,SAAAQ,GAAI,OAAIA,EAAKW,OAAKP,QAAQgnC,EAAWzmC,KAG9C84B,GAGRxZ,EAAclhB,OAAOmhB,OAAO,GAAIinB,EAAWnyB,GAA7BjW,OAAA,IAAAA,CAAA,GAA0C0kC,EAA1C,CAAwD9iC,IAAKymC,EAAWzmC,OACtFg6B,EAViD,uBAU7BwM,EAAWhnC,MAAM,EAAG6U,IAVS,CAUDiL,GAVC,aAUeknB,EAAWhnC,MAAM6U,EAAQ,KAC/FkyB,EAAcvM,GACLL,GAAkB,IAIlBla,KAGJ/S,EAAQC,eAAc,GAtCL,iCArCO,IAACuG,IAqCR,OAAH,wDA2CZ4S,EAAe,SAACpY,GAClBisB,GAAkB,IAGtB,OACI,kBAAC,IAAD,CACI7sB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,GACcq6B,KAG1B,gBACGx5B,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACI1M,MAAM,oBACNmb,QAAS0d,EACT9Z,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,UAGd/G,UAAW,CACPrS,OAAQ,IACRwG,QAAS,SAGb,kBAAC,GAAD,CACIwH,KAAM,EAC9Bxe,MAAM,OACNE,MAAOsP,EAAO65B,KACd7oC,KAAK,OACLF,QAAU6P,EAAQk5B,MAAQp5B,EAAOo5B,OAC9Bn5B,GAAgBy1B,EAAiBl4B,MAAjB,WAEnBlN,YAAc4P,EAAQk5B,MAAQp5B,EAAOo5B,OAClCn5B,GAAgBy1B,EAAiBl4B,MAAjB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAGG,kBAAC,GAAD,CACIoO,KAAM,EAC9Bxe,MAAM,UACNE,MAAOsP,EAAO45B,QACd5oC,KAAK,UACLF,QAAU6P,EAAQi5B,SAAWn5B,EAAOm5B,UACjCl5B,GAAgBy1B,EAAiBl4B,MAAjB,cAEnBlN,YAAc4P,EAAQi5B,SAAWn5B,EAAOm5B,UACrCl5B,GAAgBy1B,EAAiBl4B,MAAjB,cACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBC1HjB0M,GAAwBC,KAAxBD,OAiiBOvK,IAjiBiBwK,KAAhBC,YACG2P,IAAX9B,OAgiBOtY,aALS,SAAC3E,GAAD,MAAY,CAClC6D,MAAO7D,EAAM2D,eAIyB,KAAzBgB,EA1gBQ,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EACI5C,EAC7C,GACA,eAHyC,mBACpCyuB,EADoC,KACpBC,EADoB,OAKkB1uB,EAC3D,GACA,gBAPyC,mBAKpC46B,EALoC,KAKbC,EALa,OASQ76B,EACjD,GACA,eAXyC,mBASlB4uB,GATkB,aAagB5uB,EACzD,GACA,mBAfyC,mBAad86B,GAbc,aAiBCn3B,oBAAS,GAjBV,mBAiBpCiqB,EAjBoC,KAiBpBC,EAjBoB,OAkBGlqB,mBAAS,IAlBZ,mBAkBpCo3B,EAlBoC,KAkBnBC,EAlBmB,OAmBGr3B,oBAAS,GAnBZ,mBAmBpCs3B,EAnBoC,KAmBnBC,EAnBmB,OAoBDv3B,oBAAS,GApBR,mBAoBpCw3B,EApBoC,KAoBrBC,EApBqB,KAsB3CloC,QAAQC,IAAI,wBAAyBynC,GAErC,IAAMhoC,EAASurB,eACT9X,EAAUC,eACVogB,EAAQ9zB,EAAM,GA1BuB,EA2BP+Q,mBAAS,IA3BF,mBA2BpC+2B,EA3BoC,KA2BxBD,EA3BwB,KA6B3C96B,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACf6uB,EAAqB,CACzB/7B,WAAY,CACVE,aAAc,CACZoB,GAAIyyB,MAJW,uBASImU,EAA4B,CACnDloC,WAAY,CACVE,aAAc,CACZoB,GAAIyyB,MAZW,QASfgU,EATe,SAoBnBD,EAAcC,GApBK,2CAAH,qDAuBpB1R,KACC,CAACtC,IAEJxzB,QAAQC,IAAI,mBAAoBs7B,GAEhC9uB,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACf+uB,EAAuB,CAC3Bj8B,WAAY,CACVE,aAAc,CACZoB,GAAIyyB,MAJW,2CAAH,qDAUpBoI,KACC,CAACpI,IAEJxzB,QAAQC,IAAI,mBAAoBs7B,GAEhCv7B,QAAQC,IAAI,cAAeP,GAE3B,IAAMyoC,EAAqB,uCAAG,WAAOpnC,GAAP,iBAAA4L,EAAA,sEACVi7B,EAA2B,CAC3CnoC,WAAY,CACVE,aAAc,CACZoB,GAAIA,MAJkB,QACtByK,EADsB,SAUF,OAAfA,EAAIlH,SACP8jC,EACJZ,GAAcA,EAAW5oB,QAAO,SAACve,GAAD,OAAUA,EAAKW,MAAQD,KACzDwmC,EAAca,GA7Gal0B,EA8GH,sBA7G5BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,gBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BA4Ff,iCAhGA,IAACF,IAgGD,OAAH,sDAuB3B,OALAlU,QAAQC,IACN,kCACAs7B,EAAe36B,KAAf,UAIA,yBAAKhC,UAAU,wBACb,kBAACypC,GAAD,CACEd,cAAeA,EACfC,WAAYA,EACZ9M,eAAgBqN,EAChBpN,kBAAmBqN,EACnBzgC,SAAUg0B,EAAe36B,KACzB6mC,WAAYI,IAEd,yBAAKjpC,UAAU,iCACb,4CAEC28B,EAAevvB,MACduvB,EAAe36B,MACfxB,OAAOC,KAAKk8B,EAAe36B,MAAMtB,OAAS,GACxC,oCACE,6BACE,kBAAC,GAAD,CACEijC,eAAgB2F,EAChB1F,YAAayF,EACblnC,GAAIw6B,EAAc,KAAd,KAEN,kBAAC+M,GAAD,CACEf,cAAeA,EACfC,WAAYA,EACZ9M,eAAgBA,EAChBC,kBAAmBA,EACnBpzB,SAAUg0B,EAAe36B,OAE3B,kBAAC,IAAD,CACE+N,QAAS,kBAAMu5B,GAAiB,IAChChqC,KAAK,OACLsD,KAAM,kBAAC+mC,GAAA,EAAD,OAHR,oBAQC34B,GAAS,YAAaF,IACrB,oCACE,kBAAC,IAAD,CACEf,QAAS,kBAAMgsB,GAAkB,IACjCz8B,KAAK,OACLsD,KAAM,kBAACiiB,GAAA,EAAD,OAHR,gBAad,kBAAC,KAAD,CAAUyI,UAAW,CAAEzP,KAAM,GAAK7N,QAAS2sB,EAAexvB,WACvDwvB,EAAevvB,MACduvB,EAAe36B,QACbxB,OAAOC,KAAKk8B,EAAe36B,MAAMtB,OAAS,IAC1C,kBAAC,KAAD,CACE4B,YAAY,iBACZO,MAAOmR,KAAMK,yBAIlBsoB,EAAevvB,MACduvB,EAAe36B,MACfxB,OAAOC,KAAKk8B,EAAe36B,MAAMtB,OAAS,GACxC,oCACE,yBACEN,MAAO,CACL8T,QAAS,SAGX,yBACE9T,MAAO,CACLwpC,KAAM,EACN3zB,YAAa,QAEfjW,UAAU,gCAEV,yBAAKA,UAAU,qCACb,4BAAK28B,EAAe36B,KAAf,MACL,4BAAK26B,EAAe36B,KAAf,aACJ26B,EAAe36B,KAAf,KACC,mCAEE,8BAAO26B,EAAe36B,KAAf,MAIV26B,EAAc,KAAd,SACC,uCAEE,8BAAOA,EAAc,KAAd,UAIVA,EAAc,KAAd,MACC,oCAEE,8BAAOA,EAAc,KAAd,OAIVA,EAAc,KAAd,UACC,uCAEE,8BAAOA,EAAc,KAAd,WAIVA,EAAc,KAAd,OACC,qCAEE,8BAAOA,EAAc,KAAd,QAIVA,EAAc,KAAd,OACC,qCAEE,8BAAOA,EAAc,KAAd,QAIVA,EAAc,KAAd,eACC,8CAEE,8BAAOA,EAAc,KAAd,gBAIVA,EAAc,KAAd,eACC,8CAEE,8BAAOA,EAAc,KAAd,gBAIVA,EAAc,KAAd,QACC,4CAEE,8BAAOA,EAAc,KAAd,SAcVA,EAAc,KAAd,cACC,iDAEE,wCACMA,EAAc,KAAd,aADN,aACiDA,EAAc,KAAd,uBADjD,aACsGA,EAAc,KAAd,uBAKzGA,EAAc,KAAd,OACC,iDAEE,wCAAUA,EAAc,KAAd,WAMlB,yBACEv8B,MAAO,CACLwP,SAAU,MACVi6B,SAAU,OAEZ7pC,UAAU,gCAEV,yBACEI,MAAO,CACL4R,MAAO,QAEThS,UAAU,qCAEV,qCAEA,yBACEI,MAAO,CACL4R,MAAO,SAGR82B,EAAsB17B,MACrBw7B,GACAA,EAAWloC,OAAS,GACpBkoC,EAAW3nC,KAAI,SAAC6oC,GACd,OACE,yBAAK9pC,UAAU,iBACb,yBAAKA,UAAU,yBAIb,0BACEA,UAAU,6BACV+P,QAAS,WACPm5B,EAAmBY,GACnBV,GAAmB,KAGrB,kBAACxe,GAAA,EAAD,OAEF,0BACE5qB,UAAU,+BACV+P,QAAS,kBACPw5B,EAAsBO,EAAS1nC,OAGjC,kBAACwgB,GAAA,EAAD,QAGJ,4BACE,uCADF,WAEOknB,EAASpB,OAGfoB,EAASrB,SACR,oCACE,4BACE,2CADF,WAGOqB,EAASrB,eAQ3BK,EAAsB17B,MACrBw7B,KACEpoC,OAAOC,KAAKmoC,GAAYloC,OAAS,IACjC,oCACE,yBACEN,MAAO,CACL4R,MAAO,OACPnC,OAAQ,UACRqE,QAAS,OACTC,eAAgB,WAGlB,kBAAC,KAAD,CACE7R,YAAY,iBACZO,MAAOmR,KAAMK,8BAS7B,iCAMTsoB,EAAevvB,MACduvB,EAAe36B,MACfxB,OAAOC,KAAKk8B,EAAe36B,MAAMtB,OAAS,GACxC,oCACE,yBAAKV,UAAU,iCACb,0CAKR,yBAAKA,UAAU,8BACZ28B,EAAevvB,MACduvB,EAAe36B,MACfxB,OAAOC,KAAKk8B,EAAe36B,MAAMtB,OAAS,GAC1Ci8B,EAAe36B,KAAf,YACE26B,EAAe36B,KAAf,SAAgCtB,OAAS,IACzC,yBACEN,MAAO,CACL0V,UAAW,UAGb,kBAAC,KAAD,CACExT,YAAY,oCACZO,MAAOmR,KAAMK,0BAKpBsoB,EAAevvB,MACduvB,EAAe36B,MACfxB,OAAOC,KAAKk8B,EAAe36B,MAAMtB,OAAS,GAC1Ci8B,EAAe36B,KAAf,UACA26B,EAAe36B,KAAf,SAAgCtB,OAAS,GACvC,oCACE,kBAAC,KAAD,CACEN,MAAO,CACLmtB,WAAY,OACZltB,aAAc,iBACdmtB,SAAU,SACVvb,UACE,+FAEJ8G,KAAK,QACL8D,WAAY8f,EAAe36B,KAAf,SACZ8a,YAAa,OACbC,YAAa,SAACC,GACZ,MAAO,CACL5c,MAAO,CACLoV,MAAO,qBAKb,kBAAC,GAAD,CACEvS,MAAM,GACNga,UAAU,QACV5a,IAAI,KACJ2P,MAAO,OACPhS,UAAU,uBACVkd,OAAQ,SAACza,EAAO0a,GAAR,OACN,oCACE,yBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,yBAA+BqZ,EAAOhb,MAExCiJ,IAAK3I,EACLU,IAAI,YACJ/C,MAAO,CACL6T,OAAQ,OACRjC,MAAO,OACP0Y,UAAW,UACXrqB,aAAc,MACd2V,OAAQ,iBAOlB,kBAAC,GAAD,CACE/S,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,yBAA+BqZ,EAAOhb,MAExC/B,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAMT,kBAAC,GAAD,CACEhB,MAAM,QACNga,UAAU,UACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACE/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,EAAO,UAAY,oBAM5B,kBAAC,GAAD,CACEhB,MAAM,aACNga,UAAU,YACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,WACNga,UAAU,WACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,cACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,iCCjftBsY,IAxCapB,KAAXD,OAEwBmF,KAAxBD,OAAwBC,KAAhBC,YAsBD,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QAGS,IAAIhE,MACaE,aAGjBwxB,GAAsB,SAAChgC,GAAD,gBAC5BA,GAD4B,OACpBuO,KAGFhB,GAAyB,CAClCpF,OAAQ,EACR7R,aAAc,MACdkW,SAAU,GACVtE,UAAW,oCA6IAqK,GAtII,SAAChI,GACAE,eAAhB,IADiC,EAGyCtG,EAAe,GAAI,sBAH5D,mBAG1BiM,EAH0B,KAGCC,EAHD,OAICvI,mBAAS,IAJV,mBAI1BwI,EAJ0B,KAIfC,EAJe,KAmCjC,OA5BAzM,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMqM,EAAqC,CAC9DvZ,WAAY,CACRC,OAAQ,CACJkX,WAAY,iBALD,QAEjBuC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGFpZ,QAAQC,IAAI,4BAA4B8Y,GAOpC,yBAAKna,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,0CAGA,+DAMR,yBAAKA,UAAU,gCACdma,EAA0BhN,WACvB,oCACA,yBAAK/M,MAAO,CACR8T,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXvE,OAAO,YAEX,kBAAC,KAAD,CACAkJ,KAAK,YAQHoB,EAA0B/M,MAAQiN,GAAaA,EAAU3Z,OAAS,GAC5D,kBAAC,KAAD,CAAqBsR,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAWjS,KAAMqY,EAAW9D,SAAU,IAClC,8BACI,oCAAgBpU,GAAG,eAAe6W,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,aACTC,cAAeqwB,KAEhB,kBAAC,KAAD,CAEIpwB,YAAY,OACZ3H,MAAO,GACP4H,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI7D,QAAQ,EACR8D,aAAcxC,GACdyC,UAAW,SAACxa,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACI4Z,QAAQ,QACR5Z,KAAK,QACLP,KAAK,QACL0a,KAAK,yBAOhBG,EAA0B/M,QAAU+M,EAA0BnY,KAAKtB,OAAS,IACzE,yBAAKN,MAAO,CACR0V,UAAW,SAEX,kBAAC,KAAD,CAAOxT,YAAW,0BAA6BO,MAAOmR,KAAMK,2BAO5E,yBAAKrU,UAAU,kCACX,4BACI,8BACI,kBAACkc,GAAA,EAAD,OAFR,wBC1JN8tB,IAxBa9yB,KAAXD,OAEwBmF,KAAxBD,OAAwBC,KAAhBC,YAsBF,CACV,MACA,MACA,MACA,OACA,MACA,OACA,QAIS4tB,GAAqB,SAAClgC,GAAD,OAC9BigC,GAAMjgC,EAAQ,IAMLuN,GAAyB,CAClCpF,OAAQ,EACR7R,aAAc,MACdkW,SAAU,GACVtE,UAAW,oCA6IAqK,GAtII,SAAChI,GACAE,eAAhB,IADiC,EAGyCtG,EAAe,GAAI,sBAH5D,mBAG1BiM,EAH0B,KAGCC,EAHD,OAICvI,mBAAS,IAJV,mBAI1BwI,EAJ0B,KAIfC,EAJe,KAmCjC,OA5BAzM,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMqM,EAAqC,CAC9DvZ,WAAY,CACRC,OAAQ,CACJkX,WAAY,gBALD,QAEjBuC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGFpZ,QAAQC,IAAI,4BAA4B8Y,GAOpC,yBAAKna,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,yCAGA,8DAMR,yBAAKA,UAAU,gCACdma,EAA0BhN,WACvB,oCACA,yBAAK/M,MAAO,CACR8T,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXvE,OAAO,YAEX,kBAAC,KAAD,CACAkJ,KAAK,YAQhBoB,EAA0B/M,MAAQiN,GAAaA,EAAU3Z,OAAS,GAC/C,kBAAC,KAAD,CAAqBsR,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAWjS,KAAMqY,EAAW9D,SAAU,IAClC,8BACI,oCAAgBpU,GAAG,eAAe6W,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,YACTC,cAAeuwB,KAEhB,kBAAC,KAAD,CAEItwB,YAAY,OACZ3H,MAAO,GACP4H,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI7D,QAAQ,EACR8D,aAAcxC,GACdyC,UAAW,SAACxa,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACI4Z,QAAQ,QACR5Z,KAAK,QACLP,KAAK,QACL0a,KAAK,yBAOhBG,EAA0B/M,QAAU+M,EAA0BnY,KAAKtB,OAAS,IACzE,yBAAKN,MAAO,CACR0V,UAAW,SAEX,kBAAC,KAAD,CAAOxT,YAAW,0BAA6BO,MAAOmR,KAAMK,2BAO5E,yBAAKrU,UAAU,kCACX,4BACI,8BACI,kBAACkc,GAAA,EAAD,OAFR,wBCvIC5E,IAtCMJ,KAAXD,OAEwBmF,KAAxBD,OAAwBC,KAAhBC,YAoCsB,CAClCnK,OAAQ,EACR7R,aAAc,MACdkW,SAAU,GACVtE,UAAW,qCAwIAqK,GApII,SAAChI,GACAE,eAAhB,IADiC,EAGyCtG,EAAe,GAAI,sBAH5D,mBAG1BiM,EAH0B,KAGCC,EAHD,OAICvI,mBAAS,IAJV,mBAI1BwI,EAJ0B,KAIfC,EAJe,KAiCjC,OA1BAzM,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMqM,EAAqC,CAC9DvZ,WAAY,CACRC,OAAQ,CACJkX,WAAY,WALD,QAEjBuC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGFpZ,QAAQC,IAAI,4BAA4B8Y,GAKpC,yBAAKna,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,uCAGA,sDAMR,yBAAKA,UAAU,gCACdma,EAA0BhN,WACvB,oCACA,yBAAK/M,MAAO,CACR8T,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXvE,OAAO,YAEX,kBAAC,KAAD,CACAkJ,KAAK,YAQHoB,EAA0B/M,MAAQiN,GAAaA,EAAU3Z,OAAS,GAC5D,kBAAC,KAAD,CAAqBsR,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAWjS,KAAMqY,EAAW9D,SAAU,IAClC,8BACI,oCAAgBpU,GAAG,eAAe6W,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,SAGV,kBAAC,KAAD,CAEIE,YAAY,OACZ3H,MAAO,GACP4H,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI7D,QAAQ,EACR8D,aAAcxC,GACdyC,UAAW,SAACxa,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACI4Z,QAAQ,QACR5Z,KAAK,QACLP,KAAK,QACL0a,KAAK,yBAOhBG,EAA0B/M,QAAU+M,EAA0BnY,KAAKtB,OAAS,IACzE,yBAAKN,MAAO,CACR0V,UAAW,SAEX,kBAAC,KAAD,CAAOxT,YAAW,qBAAwBO,MAAOmR,KAAMK,2BAOvE,yBAAKrU,UAAU,kCACX,4BACI,8BACI,kBAACkc,GAAA,EAAD,OAFR,wBC9ICguB,IAtBMhzB,KAAXD,OAEwBmF,KAAxBD,OAAwBC,KAAhBC,YAoBgB,SAACtS,GAAD,gBACzBA,EADyB,QAInBuN,GAAyB,CAClCpF,OAAQ,EACR7R,aAAc,MACdkW,SAAU,GACVtE,UAAW,oCA4IAqK,GAvII,SAAChI,GACAE,eAAhB,IADiC,EAGyCtG,EAAe,GAAI,sBAH5D,mBAG1BiM,EAH0B,KAGCC,EAHD,OAICvI,mBAAS,IAJV,mBAI1BwI,EAJ0B,KAIfC,EAJe,KAmCjC,OA5BAzM,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMqM,EAAqC,CAC9DvZ,WAAY,CACRC,OAAQ,CACJkX,WAAY,WALD,QAEjBuC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGFpZ,QAAQC,IAAI,4BAA4B8Y,GAOpC,yBAAKna,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,uCAGA,uDAOR,yBAAKA,UAAU,gCACdma,EAA0BhN,WACvB,oCACA,yBAAK/M,MAAO,CACR8T,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXvE,OAAO,YAEX,kBAAC,KAAD,CACAkJ,KAAK,YAQHoB,EAA0B/M,MAAQiN,GAAaA,EAAU3Z,OAAS,GAC5D,kBAAC,KAAD,CAAqBsR,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAWjS,KAAMqY,EAAW9D,SAAU,IAClC,8BACI,oCAAgBpU,GAAG,eAAe6W,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,OACTC,cAAewwB,KAEhB,kBAAC,KAAD,CAEIvwB,YAAY,OACZ3H,MAAO,GACP4H,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI7D,QAAQ,EACR8D,aAAcxC,GACdyC,UAAW,SAACxa,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACI4Z,QAAQ,QACR5Z,KAAK,QACLP,KAAK,QACL0a,KAAK,yBAOhBG,EAA0B/M,QAAU+M,EAA0BnY,KAAKtB,OAAS,IACzE,yBAAKN,MAAO,CACR0V,UAAW,SAEX,kBAAC,KAAD,CAAOxT,YAAW,sBAAyBO,MAAOmR,KAAMK,2BAOxE,yBAAKrU,UAAU,kCACX,4BACI,8BACI,kBAACkc,GAAA,EAAD,OAFR,wBCrIN7E,IAvBaH,KAAXD,OAEwBmF,KAAxBD,OAAwBC,KAAhBC,YAqBD,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QAIS0tB,GAAsB,SAAChgC,GAAD,gBAC/BsN,GAAOtN,EAAQ,KAINuN,GAAyB,CAClCpF,OAAQ,EACR7R,aAAc,MACdkW,SAAU,GACVtE,UAAW,oCA+IAqK,GAxII,SAAChI,GACAE,eAAhB,IADiC,EAGyCtG,EAAe,GAAI,sBAH5D,mBAG1BiM,EAH0B,KAGCC,EAHD,OAICvI,mBAAS,IAJV,mBAI1BwI,EAJ0B,KAIfC,EAJe,KAqCjC,OA5BAzM,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMqM,EAAqC,CAC9DvZ,WAAY,CACRC,OAAQ,CACJkX,WAAY,YALD,QAEjBuC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGFpZ,QAAQC,IAAI,iCAAiC8Y,GAOzC,yBAAKna,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,wCAGA,uDAMR,yBAAKA,UAAU,gCACdma,EAA0BhN,WACvB,oCACA,yBAAK/M,MAAO,CACR8T,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXvE,OAAO,YAEX,kBAAC,KAAD,CACAkJ,KAAK,YAQHoB,EAA0B/M,MAAQiN,GAAaA,EAAU3Z,OAAS,GAC5D,kBAAC,KAAD,CAAqBsR,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAWjS,KAAMqY,EAAW9D,SAAU,IAClC,8BACI,oCAAgBpU,GAAG,eAAe6W,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,QACTC,cAAeqwB,KAEhB,kBAAC,KAAD,CAEIpwB,YAAY,OACZ3H,MAAO,GACP4H,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI7D,QAAQ,EACR8D,aAAcxC,GACdyC,UAAW,SAACxa,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACI4Z,QAAQ,QACR5Z,KAAK,QACLP,KAAK,QACL0a,KAAK,yBAOhBG,EAA0B/M,QAAU+M,EAA0BnY,KAAKtB,OAAS,IACzE,yBAAKN,MAAO,CACR0V,UAAW,SAEX,kBAAC,KAAD,CAAOxT,YAAW,4BAA+BO,MAAOmR,KAAMK,2BAO9E,yBAAKrU,UAAU,kCACX,4BACI,8BACI,kBAACkc,GAAA,EAAD,OAFR,wBCvIC5E,IA1CMJ,KAAXD,OAEwBmF,KAAxBD,OAAwBC,KAAhBC,YAwCsB,CAClCnK,OAAQ,EACR7R,aAAc,MACdkW,SAAU,GACVtE,UAAW,qCA6IAqK,GAtII,SAAChI,GACAE,eAAhB,IADiC,EAGyCtG,EAAe,GAAI,sBAH5D,mBAG1BiM,EAH0B,KAGCC,EAHD,OAICvI,mBAAS,IAJV,mBAI1BwI,EAJ0B,KAIfC,EAJe,KAmCjC,OA5BAzM,qBAAU,YACkB,uCAAG,4BAAAE,EAAA,sEAEMqM,EAAqC,CAC9DvZ,WAAY,CACRC,OAAQ,CACJkX,WAAY,WALD,QAEjBuC,EAFiB,SAavBD,EAAaC,GAbU,2CAAH,qDAiBrBC,KAEL,IAGFpZ,QAAQC,IAAI,4BAA4B8Y,GAOpC,yBAAKna,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,uCAGA,sDAMR,yBAAKA,UAAU,gCACdma,EAA0BhN,WACvB,oCACA,yBAAK/M,MAAO,CACR8T,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXvE,OAAO,YAEX,kBAAC,KAAD,CACAkJ,KAAK,YAQHoB,EAA0B/M,MAAQiN,GAAaA,EAAU3Z,OAAS,GAC5D,kBAAC,KAAD,CAAqBsR,MAAM,OAAOiC,OAAQ,KAC1C,kBAAC,KAAD,CAAWjS,KAAMqY,EAAW9D,SAAU,IAClC,8BACI,oCAAgBpU,GAAG,eAAe6W,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACtD,0BAAMC,OAAO,KAAKC,UAAU,YAC5B,0BAAMD,OAAO,OAAOC,UAAU,gBAGtC,kBAAC,KAAD,CACIC,UAAU,EACVC,gBAAgB,MAChBC,OAAO,YAEX,kBAAC,KAAD,CACCC,QAAS,SAGV,kBAAC,KAAD,CAEIE,YAAY,OACZ3H,MAAO,GACP4H,UAAU,EACVC,UAAU,IAEd,kBAAC,KAAD,CACI7D,QAAQ,EACR8D,aAAcxC,GACdyC,UAAW,SAACxa,EAAOM,GAAR,MAAiB,CAAC,GAAD,OAAIN,GAAJ,UAAgBM,OAEhD,kBAAC,KAAD,CACI4Z,QAAQ,QACR5Z,KAAK,QACLP,KAAK,QACL0a,KAAK,yBAOhBG,EAA0B/M,QAAU+M,EAA0BnY,KAAKtB,OAAS,IACzE,yBAAKN,MAAO,CACR0V,UAAW,SAEX,kBAAC,KAAD,CAAOxT,YAAW,0BAA6BO,MAAOmR,KAAMK,2BAO5E,yBAAKrU,UAAU,kCACX,4BACI,8BACI,kBAACkc,GAAA,EAAD,OAFR,uBC3KJC,IAFWjF,KAAXD,OAEwBmF,KAAxBD,QAoNOguB,IApNiB/tB,KAAhBC,YA4Ca,SAAC/H,GACVE,eAAhB,IAD2C,EAG+BtG,EAAe,GAAI,sBAHlD,mBAGpCiM,EAHoC,KAGTC,EAHS,OAITvI,mBAAS,IAJA,mBAIpCwI,EAJoC,KAIzBC,EAJyB,KA2C3C,OApCAzM,qBAAU,YACkB,uCAAG,8BAAAE,EAAA,sEAEMqM,EAAqC,CAC9DvZ,WAAY,CACRC,OAAQ,CACJkX,WAAY,qBALD,QAEjBuC,EAFiB,SAWJA,EAAc7Z,OAAS,GAEjC2Z,EAAYE,EAActZ,KAAI,SAAAQ,GAChC,OAAO,eACAA,EADP,CAEI5B,KAAM4B,EAAI,gBAAsBjB,OAAOC,KAAKgB,EAAI,gBAAoBf,OAAS,EAAIe,EAAI,eAAJ,KAAiC,mBAI7H6Y,EAAaD,IAGbC,EAAa,IAvBU,2CAAH,qDA2BrBE,KAEL,IAGFpZ,QAAQC,IAAI,4BAA4B8Y,GAKpC,yBAAKna,UAAU,qCACf,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,iDACX,kDAGA,iEAMR,yBAAKA,UAAU,gCACdma,EAA0BhN,WACvB,oCACA,yBAAK/M,MAAO,CACR8T,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXvE,OAAO,YAEX,kBAAC,KAAD,CACAkJ,KAAK,YAQHoB,EAA0B/M,MAAQiN,GAAaA,EAAU3Z,OAAS,GAC/D,oCAEA,kBAAC,KAAD,CACAic,WAAY,CAAEC,gBAAiB,GACpBxc,MAAO,GAOP2Y,KAAK,QAEL8D,WAAYxC,EACZyC,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACHoV,MAAO,qBAQnB,kBAAC,GAAD,CACIvS,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACJ,oCACG,uBAAG3G,KAAK,MACR,wBACKzG,QAAS,aAGT3P,MAAO,CACH0W,WAAY,IACZtB,MAAO,OACP4H,cAAc,YACdpH,OAAQ,YAEX/R,GAAI,gBAOrB,kBAAC,GAAD,CACIhB,MAAM,QACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,2BAWzBma,EAA0B/M,QAAU+M,EAA0BnY,KAAKtB,OAAS,IACzE,yBAAKN,MAAO,CACR0V,UAAW,SAEX,kBAAC,KAAD,CAAOxT,YAAW,qBAAwBO,MAAOmR,KAAMK,2BAOvE,yBAAKrU,UAAU,kCACX,4BACI,8BACI,kBAACkc,GAAA,EAAD,OAFR,yBClPGkuB,GCsCE,SAAC91B,GAAkB,IAAD,EAC+CpG,EAAe,GAAI,8BADlE,mBACMoP,GADN,aAEiDpP,EAAe,GAAI,8BAFpE,mBAEOqP,GAFP,aAG0BrP,EAAe,GAAI,8BAH7C,mBAGNsP,GAHM,WA2ClC,OApCA3P,qBAAU,YAEc,uCAAG,sBAAAE,EAAA,sEACnByP,EAA6B,IADV,2CAAH,qDAIvBC,KACE,IAIH5P,qBAAU,YACiB,uCAAG,sBAAAE,EAAA,sEACtBuP,EAAsC,CAC3Cxc,OAAQ,YAFmB,2CAAH,qDAK1B4c,KACC,IAIF7P,qBAAU,YACkB,uCAAG,sBAAAE,EAAA,sEACvBwP,EAAuC,CAC5Czc,OAAQ,aAFoB,2CAAH,qDAK3B6c,KACC,IAQD,yBAAK3d,UAAU,qBACd,yBAAKA,UAAU,2BACd,kBAAC,GAAD,MACA,kBAACqqC,GAAD,MACA,kBAACC,GAAD,OAGD,yBAAKtqC,UAAU,2BACd,kBAACuqC,GAAD,MACA,kBAACC,GAAD,OAGD,yBAAKxqC,UAAU,2BACd,kBAACyqC,GAAD,MACA,kBAACC,GAAD,SCnFWC,GARW,SAACr2B,GACvB,OACI,mD,UCkLO2jB,GAtKE,SAAC,GAAgD,IAA9C2S,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,cAAoB,EAGTj5B,mBAAS,CACzD5O,MAAO6nC,EAAc7nC,MACrBoI,OAAQy/B,EAAcz/B,OACtBpH,KAAM6mC,EAAc7mC,KACpBpB,MAAOioC,EAAcjoC,QAPoC,mBAGtDkoC,EAHsD,KAGlCC,EAHkC,OAU7Bn5B,mBAAS,IAVoB,mBAUtD2M,EAVsD,KAU5CF,EAV4C,OAWrBzM,oBAAS,GAXY,mBAWtD2kB,EAXsD,KAWxCC,EAXwC,KAavDwU,EAA6B,SAACn7B,GAChC,IAAMjQ,EAAOiQ,EAAEzE,OAAOxL,KAChBN,EAAQuQ,EAAEzE,OAAO9L,MAEvByrC,EAAsB,eACfD,EADc,gBAEhBlrC,EAAON,MAIhBsO,qBAAU,WACN,GAAI2Q,EAAS9d,OAAS,EAAG,CACrB,IAAM2oB,EAAY7K,EAASvd,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAC5C6oC,EAAsB,eACfD,EADc,CAEjBloC,MAAM,aAAKwmB,WAIf2hB,EAAsB,eACfD,EADc,CAEjBloC,MAAO,QAIhB,CAAC2b,IAEJ3Q,qBAAU,WACN,IAIM4I,EAHKo0B,EAAU5pC,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQipC,EAAc3oC,IAK1Duf,EAAclhB,OAAOmhB,OAAO,GAAIkpB,EAAUp0B,GAA5BjW,OAAA,IAAAA,CAAA,GAAyCuqC,IACvDG,EAAmB,uBAAOL,EAAUjpC,MAAM,EAAG6U,IAA1B,CAAkCiL,GAAlC,aAAkDmpB,EAAUjpC,MAAM6U,EAAQ,KACnGm0B,EAAaM,KAEd,CAACH,IAuBJ,OACI,oCAGI,yBAAK/qC,UAAU,iCACX,kBAACizB,GAAD,CACI5zB,MAAM,QACNE,MAAOwrC,EAAmB9nC,MAC1BpD,KAAK,QACLJ,SAAUwrC,IAEd,kBAAChY,GAAD,CACI5zB,MAAM,OACNE,MAAOwrC,EAAmB9mC,KAC1BpE,KAAK,OACLJ,SAAUwrC,IAGd,kBAAChY,GAAD,CACI5zB,MAAM,SACNE,MAAOwrC,EAAmB1/B,OAC1BxL,KAAK,SACLJ,SAAUwrC,IAId,wBAAIjrC,UAAU,yBAAd,UACA,yBAAKI,MAAO,CACR6a,aAAc,UAGlB,yBAAKjb,UAAU,gCACVwe,GAEGA,EAAS9d,OAAS,GAAK8d,EAASvd,KAAI,SAAC4B,EAAO4T,GACxC,OACI,yBAAKzW,UAAU,+EACX,yBACIA,UAAU,mDAEV,yBAAKoL,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACI4M,QAAS,kBAzDlB,SAAC5N,GAExB,IAAMknB,EAAY7K,GAAYA,EAASwB,QAAO,SAAAnd,GAC1C,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GAmDmCC,CAAmBzmB,EAAMV,KACxCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,WAOpB,kBAAC,KAAD,CACIzf,MAAO,iBAEP,yBACI8M,QAAS,WACL0mB,GAAgB,IAEpBz2B,UAAU,2FAIV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACZ,kBAAC6kB,GAAA,EAAD,WAUpB,kBAAC,GAAD,CACIxG,WAAYoY,EACZrY,QAASoY,EACThY,SAAUA,EACVF,YAAaA,EACbC,sBAAsB,MC/IhCpQ,GAAmBC,MAAaC,MAAM,CAC1C88B,UAAW/8B,MACR/O,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAWN8hB,GAAwB,SAACvM,GAC7BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAACumB,GAAA,EAAD,CAAoB/oB,MAAO,CAAEoV,MAAO,yBAIxChH,GAAgB,CACpB28B,UAAW,GACX9lC,MAAO,IA8MM8wB,GApMK,SAAC,GAKP,IAJZzQ,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAylB,EAEW,EAFXA,cACAC,EACW,EADXA,iBACW,EAC0Cn9B,EACnD,GACA,gBAHS,mBACJo9B,EADI,KACeC,EADf,OAKqB15B,oBAAS,GAL9B,gCAMuBA,mBAAS,KANhC,mBAMJg5B,EANI,KAMOD,EANP,KAQLh8B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACWw9B,EAAwB,CACpDzlC,KAAM,CACJqlC,UAAWt8B,EAAOs8B,UAClB9lC,MAAOwlC,KAJQ,QACbW,EADa,SAS+B,OAA3BA,EAAgB9lC,QAlDV4P,OAmD3B4I,EAlDJ7I,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,oBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAgDzC61B,EAAiB,GAAD,oBACXD,GADW,cAGZjpC,GAAIqpC,EAAe,KAAW,GAC9BnpC,IAAKmpC,EAAe,KAAW,GAC/BL,UAAWK,EAAe,WAAiB,IAExCA,MAGP18B,EAAQiZ,YACR6iB,EAAa,IACbjlB,GAAyB,IAEzB9D,KAGF/S,EAAQC,eAAc,GA5BH,iCAzCS,IAACuG,IAyCV,OAAH,wDA+BlBzH,qBAAU,WACR,IAAKy9B,EAAiB,UAAe,CACnC,IAAMx+B,EAAQw+B,EAAiB,MAC/B,GAAIx+B,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAEzDF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,aAOjC,CAACyf,IAEJ,IAAMpjB,EAAe,SAACpY,GACpB6V,GAAyB,IAGrB3W,EAA4B,SAACH,EAAQI,GACzC,OAAKJ,EAAOs8B,WAMRM,EAAyB,WAC7Bb,EAAa,GAAD,oBACPC,GADO,CAEV,CACE5nC,MAAO,GACPoI,OAAQ,GACRpH,KAAM,GACNpB,MAAO,GACPV,GAAG,GAAD,OAAK0oC,EAAUnqC,aAKvB,OACE,kBAAC,IAAD,CACEwO,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEvP,MAAO,CACL2hB,IAAK,QAEP9e,MAAM,oBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,IAEtCmD,MAAO,OACPkQ,UAAW,CACTrS,OAAQ,IACRwG,QAAS,SAGX,kBAACpX,EAAD,CACEI,MAAM,OACNE,MAAOsP,EAAOs8B,UACdtrC,KAAK,YACLF,QACG6P,EAAQ27B,WAAa77B,EAAO67B,YAC3B57B,GAAgB+7B,EAAkBx+B,MAAlB,WAEpBlN,YACG4P,EAAQ27B,WAAa77B,EAAO67B,YAC3B57B,GAAgB+7B,EAAkBx+B,MAAlB,WAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,gBAGpB,yBACErP,MAAO,CACL0V,UAAW,UAGf,wBAAI9V,UAAU,mBAAd,YAEA,yBAAKA,UAAU,2BACZ6qC,EAAU5pC,KAAI,SAACyqC,GACd,OACE,kBAACC,GAAD,CACEb,cAAeY,EACfb,UAAWA,EACXD,aAAcA,OAKpB,kBAAC,IAAD,CACE7xB,KAAK,QACLhJ,QAAS07B,EACTrrC,MAAO,CACL4R,MAAO,QACPwnB,UAAW,QACX1jB,UAAW,MACXzV,aAAc,OAEhBf,KAAK,SACLsD,KAAM,kBAACiiB,GAAA,EAAD,OAVR,kBAgBF,yBACEzkB,MAAO,CACL0V,UAAW,gB,UC7BZmiB,GA3ME,SAAC,GAA0F,EAAxFoT,iBAAwF,EAAtED,cAAuE,IAAxD3pC,EAAuD,EAAvDA,KAAM0H,EAAiD,EAAjDA,UAAUyiC,EAAuC,EAAvCA,gBAAiBC,EAAsB,EAAtBA,gBAAsB,EAEpDh6B,mBAAS,CACzD5O,MAAOxB,EAAKwB,MACZoI,OAAQ5J,EAAK4J,OACbpH,KAAMxC,EAAKwC,KACXpB,MAAOpB,EAAKoB,QANwF,mBAEjGkoC,EAFiG,KAE7EC,EAF6E,KAUxG5pC,QAAQC,IAAI,qBAAqB0pC,GACjC3pC,QAAQC,IAAI,gBAAgBI,GAX4E,MA2BxEoQ,mBAAS,IA3B+D,mBA2BjG2M,EA3BiG,KA2BvFF,EA3BuF,OA4BhEzM,oBAAS,GA5BuD,mBA4BjG2kB,EA5BiG,KA4BnFC,EA5BmF,KA8BlGwU,EAA6B,SAACn7B,GAChC,IAAMjQ,EAAOiQ,EAAEzE,OAAOxL,KAChBN,EAAQuQ,EAAEzE,OAAO9L,MAEvByrC,EAAsB,eACfD,EADc,gBAEhBlrC,EAAON,MAShBsO,qBAAU,WACF2Q,EAAS9d,OAAS,GAClBsqC,EAAsB,eACfD,EADc,CAGjBloC,MAAM,aAAK,IAAIipC,IAAJ,uBAAYf,EAAmBloC,OAA/B,aAAyC2b,WAU7D,CAACA,IAKJ3Q,qBAAU,WAEHpM,GAAQA,EAAKoB,OAASpB,EAAKoB,MAAMnC,OAAS,GACzC4d,EAAY7c,EAAKoB,SAGvB,IA2BF,OACI,oCACI,yBACIzC,MAAO,CACH4R,MAAO,OACPC,UAAW,QAEfjS,UAAU,iCACV,kBAACizB,GAAD,CACI5zB,MAAM,QACNE,MAAOwrC,EAAmB9nC,MAC1BpD,KAAK,QACLJ,SAAUwrC,IAEd,kBAAChY,GAAD,CACI5zB,MAAM,OACNE,MAAOwrC,EAAmB9mC,KAC1BpE,KAAK,OACLJ,SAAUwrC,IAGd,kBAAChY,GAAD,CACI5zB,MAAM,SACNE,MAAOwrC,EAAmB1/B,OAC1BxL,KAAK,SACLJ,SAAUwrC,IAId,wBAAIjrC,UAAU,yBAAd,UACA,yBAAKI,MAAO,CACR6a,aAAc,UAIlB,yBAAKjb,UAAU,gCACV+qC,EAAmBloC,OAEhBkoC,EAAmBloC,MAAMnC,OAAS,GAAKqqC,EAAmBloC,MAAM5B,KAAI,SAAC4B,EAAO4T,GACxE,OACI,yBAAKzW,UAAU,+EACX,yBACIA,UAAU,mDAEV,yBAAKoL,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACI4M,QAAS,kBAxElB,SAAC5N,GAExB,IAAMknB,EAAY0hB,EAAmBloC,OAASkoC,EAAmBloC,MAAMnC,OAAS,GAAKqqC,EAAmBloC,MAAMmd,QAAO,SAAAnd,GACjH,OAAOA,EAAMV,KAAOA,KAGxB6oC,EAAsB,eACfD,EADc,CAEjBloC,MAAM,aAAKwmB,MAGf/K,EAAY+K,GA6DmCC,CAAmBzmB,EAAMV,KACxCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,WAOpB,kBAAC,KAAD,CACIzf,MAAO,iBAEP,yBACI8M,QAAS,WACL0mB,GAAgB,IAEpBz2B,UAAU,2FAIV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACZ,kBAAC6kB,GAAA,EAAD,UAMhB,kBAAC,IAAD,CACAzkB,MAAO,CACH0V,UAAW,QAEXlT,KAAM,kBAACmpC,GAAA,EAAD,MAChB/rC,UAAU,6BACV+P,QAAS,WA7FX67B,EAAgBnqC,EAAK0H,EAAU4hC,KAgG1Bc,EAAkB,YAAc,SAIjC,kBAAC,GAAD,CACIxtB,WAAYoY,EACZrY,QAASoY,EACThY,SAAUA,EACVF,YAAaA,EACbC,sBAAsB,MCSvB4X,IA3MU/nB,MAAaC,MAAM,CAC1C88B,UAAW/8B,MACR/O,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAiCQ,SAAC,GAOP,IANZ2lB,EAMW,EANXA,sBACAC,EAKW,EALXA,yBAGAqmB,GAEW,EAJXZ,cAIW,EAHXC,iBAGW,EAFXW,6BACAC,EACW,EADXA,YACW,EACyCp6B,mBAAS,CAC3D5O,MAAO,GACPoI,OAAQ,GACRpH,KAAM,GACNpB,MAAO,KALE,mBACJkoC,EADI,KACgBC,EADhB,OAQqBn5B,mBAAS,IAR9B,mBAQJ2M,EARI,KAQMF,EARN,OAS6BzM,oBAAS,GATtC,mBASJ2kB,EATI,KASUC,EATV,KAWLwU,EAA6B,SAACn7B,GAClC,IAAMjQ,EAAOiQ,EAAEzE,OAAOxL,KAChBN,EAAQuQ,EAAEzE,OAAO9L,MAEvByrC,EAAsB,eACjBD,EADgB,gBAElBlrC,EAAON,MAeZsO,qBAAU,WACR,GAAI2Q,EAAS9d,OAAS,EAAG,CACvB,IAAM2oB,EAAY7K,EAASvd,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAC9C6oC,EAAsB,eACjBD,EADgB,CAEnBloC,MAAM,aAAKwmB,WAGb2hB,EAAsB,eACjBD,EADgB,CAEnBloC,MAAO,QAGV,CAAC2b,IAiBJ,OACE,oCACE,kBAAC,KAAD,CACEpe,MAAO,CACL2hB,IAAK,QAEPgH,gBAAgB,EAChB9lB,MAAM,yBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAZXk8B,EAA4BjB,EAAoBkB,IAa5ChqB,SAnDe,SAACnS,GACpB6V,GAAyB,IAmDrBxD,OAAO,MACP6G,cAAe,CACbC,SAAU,UAEZjX,MAAO,QACPkQ,UAAW,CACTrS,OAAQ,IACRwG,QAAS,SAGX,kBAACpX,EAAD,CACEI,MAAM,QACNE,MAAOwrC,EAAmB9nC,MAC1BpD,KAAK,QACLJ,SAAUwrC,IAEZ,kBAAChsC,EAAD,CACEI,MAAM,OACNE,MAAOwrC,EAAmB9mC,KAC1BpE,KAAK,OACLJ,SAAUwrC,IAGZ,kBAAChsC,EAAD,CACEI,MAAM,SACNE,MAAOwrC,EAAmB1/B,OAC1BxL,KAAK,SACLJ,SAAUwrC,IAGZ,wBAAIjrC,UAAU,yBAAd,UAEA,yBAAKA,UAAU,gCACZwe,GAECA,EAAS9d,OAAS,GAClB8d,EAASvd,KAAI,SAAC4B,EAAO4T,GACnB,OACE,yBAAKzW,UAAU,sCACb,yBAAKA,UAAU,mDACb,yBAAKoL,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACE4M,QAAS,kBAtEA,SAAC5N,GAE1B,IAAMknB,EACJ7K,GACAA,EAASwB,QAAO,SAACnd,GACf,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GA8DmBC,CAAmBzmB,EAAMV,KACxCnC,UAAU,6CAEV,kBAAC0iB,GAAA,EAAD,WAMV,kBAAC,KAAD,CAASzf,MAAO,iBACd,yBACE8M,QAAS,WACP0mB,GAAgB,IAElBz2B,UAAU,4CAKV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACd,kBAAC6kB,GAAA,EAAD,UAMR,kBAAC,GAAD,CACExG,WAAYoY,EACZrY,QAASoY,EACThY,SAAUA,EACVF,YAAaA,EACbC,sBAAsB,QC9LxB2tB,GAAUC,KAAVD,MACAhiB,GAAWjrB,IAAXirB,OAEFhM,GAA0B,SAAC5I,GAC/BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,oBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAIzCqM,GAAwB,SAACvM,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAmB/C,IAAM42B,GAAW,SAACC,EAA2BljC,EAAWhH,GAAvC,OACf,yBACE/B,MAAO,CACL8T,QAAS,SAGX,kBAAC,KAAD,CAASgC,UAAU,MAAMjT,MAAM,kBAC7B,uBAAGuT,KAAK,MACN,kBAACoU,GAAA,EAAD,CACE7a,QAAS,SAACzH,SAQhB,yBACElI,MAAO,CACL2V,WAAY,UAGhB,uBACES,KAAK,KACLpW,MAAO,CACLoV,MAAO,qBAGT,kBAAC,KAAD,CACEuN,UAAW,kBAAMspB,EAA0BlqC,EAAIgH,IAC/ClG,MAAM,qBACNkf,OAAO,MACPa,WAAW,MAEX,kBAACJ,GAAA,EAAD,CACE7S,QAAS,SAACzH,GAERA,EAAMgkC,yBAQZC,GAAmB,SACvBC,EACAC,EACAtqC,EACAuqC,GAJuB,OAMvB,yBACEtsC,MAAO,CACL8T,QAAS,SAGX,kBAAC,KAAD,CAASgC,UAAU,MAAMjT,MAAM,0BAC7B,uBAAGuT,KAAK,MACN,kBAACqO,GAAA,EAAD,CACE9U,QAAS,SAACzH,GAGRkkC,GAAe,GACfE,EAAevqC,QAMvB,yBACE/B,MAAO,CACL2V,WAAY,UAGhB,kBAAC,KAAD,CAASG,UAAU,MAAMjT,MAAM,kBAC7B,uBAAGuT,KAAK,MACN,kBAACoU,GAAA,EAAD,CACE7a,QAAS,SAACzH,SAQhB,yBACElI,MAAO,CACL2V,WAAY,UAGhB,uBACES,KAAK,KACLpW,MAAO,CACLoV,MAAO,qBAGT,kBAAC,KAAD,CACEuN,UAAW,kBAAM0pB,EAAsBtqC,IACvCc,MAAM,qBACNkf,OAAO,MACPa,WAAW,MAEX,kBAACJ,GAAA,EAAD,CACE7S,QAAS,SAACzH,GAERA,EAAMgkC,yBA2aHvnB,GAnaG,SAACzQ,GAAW,IAAD,EACGzC,oBAAS,GADZ,gCAEaA,oBAAS,IAFtB,mBAEpB86B,EAFoB,KAENC,EAFM,OAGW/6B,oBAAS,GAHpB,mBAGpBg7B,EAHoB,KAGPL,EAHO,OAIW36B,mBAAS,IAJpB,mBAIpBo6B,EAJoB,KAIPS,EAJO,OAMwBx+B,EACjD,GACA,iBARyB,mBAMpB4+B,EANoB,KAMJC,EANI,OAUgC7+B,EACzD,GACA,mBAZyB,mBAUE8+B,GAVF,aAcgC9+B,EACzD,GACA,mBAhByB,mBAcpB++B,EAdoB,KAcEC,EAdF,OAmBer7B,mBAAS,IAnBxB,mBAmBpBu5B,EAnBoB,KAmBLC,EAnBK,KAqB3Bx9B,qBAAU,YACW,uCAAG,4BAAAE,EAAA,sEACKg/B,EAAyB,CAChDlsC,WAAY,CACVC,OAAQ,CACNqsC,YAAY,MAJE,OACdjkC,EADc,OASpBmiC,EAAiBniC,GATG,2CAAH,qDAWnBkkC,KACC,IAEHhsC,QAAQC,IAAI,iBAAkB+pC,GAE9B,IASMqB,EAAqB,uCAAG,WAAOtqC,GAAP,iBAAA4L,EAAA,sEACKi/B,EAA2B,CAC1DnsC,WAAY,CACVE,aAAc,CACZoB,SAJsB,QACtBkrC,EADsB,SAU4B,OAA9BA,EAAmB3nC,QAC3CwY,GAAwB,qBAClBovB,EAAmBlC,EAAcprB,QAAO,SAACve,GAAD,OAAUA,EAAKU,KAAOA,KACpEkpC,EAAiBiC,IAEjBzrB,GAAsB,yCAfI,2CAAH,sDAkCrB+pB,EAAe,uCAAG,WAAOnqC,EAAM0H,EAAW4hC,GAAxB,mCAAAh9B,EAAA,6DAKhBw/B,EAA6B,WACjC,OAAOpkC,EAAU9D,MAAMpE,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQJ,EAAKU,KAGvDqrC,EARuB,WAC3B,OAAOpC,EAAcnqC,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQsH,EAAUhH,IAOzCsrC,GAEjBC,EAAYH,IAEZI,EACJ5C,EAAmBloC,MAAMnC,OAAS,EAAlC,eAESqqC,EAFT,CAGMloC,MACEkoC,EAAmBloC,MAAMnC,OAAS,EAC9BqqC,EAAmBloC,MAAM5B,KAAI,SAAC6B,GAAD,OAASA,EAAIX,MAC1C,KAER4oC,EAEA6C,EACJzkC,EAAU9D,MAAM3E,OAAS,EACrByI,EAAU9D,MAAMpE,KAAI,SAAC6pC,GACnB,OAAO,eACFA,EADL,CAEEjoC,MACEioC,EAAcjoC,OAASioC,EAAcjoC,MAAMnC,OAAS,EAChDoqC,EAAcjoC,MAAM5B,KAAI,SAAC4sC,GAAD,OAAaA,EAAO,IAAU,MACtD,QAGV,GAEAC,EArCgB,uBAsCjB3kC,EAAU9D,MAAMzD,MAAM,EAAG8rC,IAtCR,CAuCpB3C,GAvCoB,aAwCjB5hC,EAAU9D,MAAMzD,MAAM8rC,EAAY,KAGvCtsC,QAAQC,IAAI,2BAA4BysC,GAElCC,EA7CgB,uBA8CjBH,EAAehsC,MAAM,EAAG8rC,IA9CP,CA+CpBC,GA/CoB,aAgDjBC,EAAehsC,MAAM8rC,EAAY,KAGhCM,EAAyBxtC,OAAOmhB,OACpC,GACAypB,EAAcoC,GAFehtC,OAAA,IAAAA,CAAA,GAIxB2I,EAJwB,CAK3B9D,MAAO0oC,KAILrsB,EAAclhB,OAAOmhB,OAAO,GAAIypB,EAAcoC,GAAhChtC,OAAA,IAAAA,CAAA,GACf2I,EADe,CAElB9D,MAAOyoC,KAGH5C,EAjEgB,uBAkEjBE,EAAcxpC,MAAM,EAAG4rC,IAlEN,CAmEpB9rB,GAnEoB,aAoEjB0pB,EAAcxpC,MAAM4rC,EAAiB,KApEpB,UAuEWN,EAA2B,CAC1DrsC,WAAY,CACVE,aAAc,CACZoB,GAAIgH,EAAUhH,KAGlB2D,KAAK,eACAkoC,EADD,CAEF7C,UAAWzpB,EAAY7hB,SA/EL,SAuEhBouC,EAvEgB,SAoFkC,OAA9BA,EAAmBvoC,QAC3CwY,GAAwB,qBACxBmtB,EAAiBH,IAEjBrpB,KAxFoB,4CAAH,0DA4FfwqB,EAAyB,uCAAG,WAAOlqC,EAAIgH,GAAX,2BAAA4E,EAAA,6DAK1Bw/B,EAA6B,WACjC,OAAOpkC,EAAU9D,MAAMpE,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQM,IAGlDqrC,EARuB,WAC3B,OAAOpC,EAAcnqC,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQsH,EAAUhH,IAOzCsrC,GAEjBC,EAAYH,IAEZO,EAb0B,uBAc3B3kC,EAAU9D,MAAMzD,MAAM,EAAG8rC,IAdE,aAe3BvkC,EAAU9D,MAAMzD,MAAM8rC,EAAY,KAGjChsB,EAAclhB,OAAOmhB,OAAO,GAAIypB,EAAcoC,GAAhChtC,OAAA,IAAAA,CAAA,GACf2I,EADe,CAElB9D,MAAOyoC,KAGH5C,EAvB0B,uBAwB3BE,EAAcxpC,MAAM,EAAG4rC,IAxBI,CAyB9B9rB,GAzB8B,aA0B3B0pB,EAAcxpC,MAAM4rC,EAAiB,KA1BV,SA6BCN,EAA2B,CAC1DrsC,WAAY,CACVE,aAAc,CACZoB,GAAIgH,EAAUhH,KAGlB2D,KAAK,eACA4b,EADD,CAEFypB,UAAWzpB,EAAY7hB,SArCK,QA6B1BouC,EA7B0B,SA0CwB,OAA9BA,EAAmBvoC,QAC3CwY,GAAwB,0BACxBmtB,EAAiBH,IAEjBrpB,KA9C8B,4CAAH,wDAkDzBmqB,EAA2B,uCAAG,WAAOjB,EAAoB5oC,GAA3B,uBAAA4L,EAAA,6DAK5By/B,EAJuB,WAC3B,OAAOpC,EAAcnqC,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQM,GAG/BsrC,GAEjBK,EAP4B,uBAQ7B1C,EAAcoC,GAAgBnoC,OARD,CAShC0lC,IAGIrpB,EAAclhB,OAAOmhB,OAAO,GAAIypB,EAAcoC,GAAhChtC,OAAA,IAAAA,CAAA,GACf4qC,EAAcoC,GADC,CAElBnoC,MAAOyoC,KAGH5C,EAjB4B,uBAkB7BE,EAAcxpC,MAAM,EAAG4rC,IAlBM,CAmBhC9rB,GAnBgC,aAoB7B0pB,EAAcxpC,MAAM4rC,EAAiB,KApBR,SAuBDN,EAA2B,CAC1DrsC,WAAY,CACVE,aAAc,CACZoB,GAAIA,IAGR2D,KAAK,eACA4b,EADD,CAEFypB,UAAWzpB,EAAY7hB,SA/BO,QAuB5BouC,EAvB4B,SAoCsB,OAA9BA,EAAmBvoC,QAC3CwY,GAAwB,wBACxBmtB,EAAiBH,GACjBsB,GAAe,IAEf3qB,KAzCgC,2CAAH,wDA6CjC,OACE,oCACE,yBAAK7hB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,cAEA,kBAAC,GAAD,CACEqrB,aAAa,EACbrrB,UAAU,qBACVM,YAAY,sBACZquB,SAAU,SAACpvB,GAAD,OAjPD,SAACA,GACpB,GAAIutC,EAAe9qC,KAAKtB,OAAS,EAAG,CAClC,IAAM4sC,EAAmBR,EAAe9qC,KAAKge,QAAO,SAACve,GAAD,OAClDA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBAEzCuyB,EAAiBiC,IA4OYhiB,CAAa/rB,OAGtC,kBAAC,IAAD,CAEES,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM68B,GAAgB,KAJjC,YAUF,yBAAK5sC,UAAU,uCAEf,yBAAKA,UAAU,uCACZ8sC,EAAe3/B,WAAa,kBAACoe,GAAD,MAE5BuhB,EAAe1/B,QAAUg+B,EAAc1qC,OAAS,IAC/C,yBACEN,MAAO,CACL0V,UAAW,SAGb,kBAAC,GAAD,CAAO7S,MAAM,wBAIhB6pC,EAAe1/B,MAAQg+B,EAAc1qC,OAAS,GAC7C,yBAAKV,UAAU,2BACZorC,EAAcnqC,KAAI,SAACkI,GAElB,OADA/H,QAAQC,IAAI,eAEV,yBAAKrB,UAAU,gCACb,kBAAC,KAAD,CACEkuC,WAAW,EACX11B,UAAU,EACV21B,mBAAmB,OACnBC,WAAY,gBAAGC,EAAH,EAAGA,SAAH,OACV,kBAAC9F,GAAA,EAAD,CAAoB+F,OAAQD,EAAW,GAAK,KAE9CruC,UAAU,iCAEV,kBAACksC,GAAD,CACEqC,OAAQplC,EAAUtJ,KAClBwC,IAAI,IACJrC,UAAU,6BACVwuC,MAAOjC,GACLC,EACAC,EACAtjC,EAAUhH,GACVuqC,IAGF,yBAAK1sC,UAAU,kCACZmJ,EAAU9D,OACT8D,EAAU9D,MAAM3E,OAAS,GACzByI,EAAU9D,MAAMpE,KAAI,SAACQ,GACnB,OACE,yBAAKzB,UAAU,qCACb,kBAAC,KAAD,CACEkuC,WAAW,EACX11B,UAAU,EACV21B,mBAAmB,OACnBC,WAAY,gBAAGC,EAAH,EAAGA,SAAH,OACV,kBAAC9F,GAAA,EAAD,CACE+F,OAAQD,EAAW,GAAK,KAG5BruC,UAAU,iCAEV,kBAACksC,GAAD,CACEqC,OAAQ9sC,EAAKwB,OAAS,GACtBZ,IAAI,IACJrC,UAAU,6BACVwuC,MAAOpC,GACLC,EACAljC,EACA1H,EAAKU,KAGP,kBAACssC,GAAD,CACEpD,iBAAkBA,EAClBD,cAAeA,EACf3pC,KAAMA,EACN0H,UAAWA,EACXyiC,gBAAiBA,EACjBC,gBACEoB,EAAqB9/B,oBASlChE,EAAU9D,MAAM3E,OAAS,IAC1B,kBAAC,GAAD,CAAOuC,MAAM,4BAanC,kBAACyrC,GAAD,CACEhpB,sBAAuBinB,EACvBhnB,yBAA0BinB,EAC1BvB,iBAAkBA,EAClBD,cAAeA,IAEjB,kBAACuD,GAAD,CACEjpB,sBAAuBmnB,EACvBlnB,yBAA0B6mB,EAC1BnB,iBAAkBA,EAClBD,cAAeA,EACfY,4BAA6BA,EAC7BC,YAAaA,IAGf,kBAAC,KAAD,CACEhpC,MAAM,0BACNmb,SAAS,EACT4D,KA/UgB,SAAClS,GACrB88B,GAAgB,IA+UZ3qB,SA5UoB,SAACnS,GACzB88B,GAAgB,IA4UZtI,OAAQ,KACRniB,OAAO,QAEP,kBAACljB,EAAD,CAAYI,MAAM,4B,UC7iBlBye,GAAYC,KAAZD,QASFI,GAA0B,SAAC5I,GAC7BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,gBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAK7CqM,GAAwB,SAACvM,GAC3BD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAqWpC2gB,GA9UK,SAAC,GAAyF,IAAvFzQ,EAAsF,EAAtFA,sBAAuBC,EAA+D,EAA/DA,yBAA0BipB,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,aAA0B,EAE5D3gC,EAAe,GAAI,WAAY,QAF6B,mBAElG4gC,EAFkG,KAEnFC,EAFmF,OAGzEl9B,oBAAS,GAHgE,mBAGxFyM,GAHwF,aAIjEzM,oBAAS,GAJwD,mBAIlG2kB,EAJkG,KAIpFC,EAJoF,OAKzD5kB,mBAAS,IALgD,mBAKlG8M,EALkG,KAKhFD,EALgF,OAM3C7M,oBAAS,GANkC,mBAMlG4M,EANkG,aAO7C5M,mBAAS,KAPoC,mBAO1Em9B,GAP0E,aAQzEn9B,mBAAS,IARgE,mBAQlG+M,EARkG,KAQxFC,EARwF,OASvEhN,oBAAS,GAT8D,mBASlGiN,EATkG,KASvFC,EATuF,OAU1DlN,oBAAS,GAViD,mBAUlG2U,EAVkG,KAUjFC,EAViF,OAWzE5U,mBAAS,IAXgE,mBAWlGyU,EAXkG,KAWxFC,EAXwF,OAYjF1U,mBAAS,IAZwE,mBAYlGhS,EAZkG,KAY5FovC,EAZ4F,QAa/Dp9B,mBAAS,IAbsD,qBAalGq9B,GAbkG,MAanFC,GAbmF,MAmBnGvgC,GAAY,uCAAG,8BAAAb,EAAA,6DACjBgR,GAAa,GAEPqB,EAAW,IAAIC,SACrBzB,EAASjb,SAAQ,SAAA2c,GACbF,EAASG,OAAO,SAAUD,EAAMA,EAAKzgB,SAEzCugB,EAASG,OAAO,OAAQ1gB,GACxBugB,EAASG,OAAO,YAAa2uB,IARZ,SAWSH,EAAoB,CAC1CjpC,KAAMsa,IAZO,OAWXgvB,EAXW,OAgBjBrwB,GAAa,GAETqwB,GAAsC,OAAvBA,EAAY1pC,QAE3BmpC,EAAa,GAAD,oBAAKD,GAAL,cACRzsC,GAAIitC,EAAW,KAAW,GAC1B/sC,IAAK+sC,EAAW,KAAW,GAC3BvvC,KAAMuvC,EAAW,MAAY,GAC7BzsC,UAAWysC,EAAW,WAAiB,GACvCC,KAAMD,EAAW,MAAY,GAC7BpsC,MAAOosC,EAAW,OAAa,IAE5BA,MAGPvwB,EAAY,IACZE,GAAa,GACbb,GAAwB,mBACxByH,GAAyB,GACzBspB,EAAQ,IACRD,EAA0B,IAK1BrpB,GAAyB,IAGzB9D,GAAsB,6CA5CT,4CAAH,qDAmGZlB,GAAc,CAEhBE,SAAU,SAAAP,GACNzB,GAAY,SAAAiC,GACR,IAAMrK,EAAQmI,EAAS/c,QAAQye,GACzBS,EAAcnC,EAAShd,QAE7B,OADAmf,EAAYC,OAAOvK,EAAO,GACnBsK,MAIfE,aAAc,SAAAX,GAIV,OAHAzB,GAAY,SAAAiC,GACR,MAAM,GAAN,oBAAWlC,GAAX,CAAqB0B,QAElB,GAEX1B,YAwFJ,IAAMiK,GACF,6BACKrC,EAAkB,kBAACsC,GAAA,EAAD,MAAsB,kBAACjE,GAAA,EAAD,MACzC,yBAAK7kB,UAAU,mBAAf,WAIR,OACI,oCACI,kBAAC,KAAD,CACII,MAAO,CACH2hB,IAAK,QAET9e,MAAM,gBACNmb,QAASsH,EACT1D,KAAMpT,GACNqT,SAxKS,SAACnS,GAClB6V,GAAyB,IAwKjBxD,OAAO,eACP6G,cAAe,CACXhZ,QAAS8O,EACTmK,SAAU,SACVvpB,WAvKRovC,EAAc3hC,WA0KV+U,UAAW,CACPrS,OAAQ,IACRwG,QAAS,SAIb,kBAACpX,EAAD,CACII,MAAM,OACNE,MAAOM,EACPA,KAAK,OACLJ,SAAU,SAACqQ,GAAD,OAAYm/B,EAAQn/B,EAAEzE,OAAO9L,QACvCI,QAASmvC,EAAchiC,MAAd,WAETlN,YAAakvC,EAAchiC,MAAd,aAGjB,yBAAK1M,MAAO,CACR0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,aACA,kBAAC,KAAD,CACIH,KAAK,SACLyiB,SAAS,eACTtiB,UAAU,kBACVopB,gBAAgB,EAChBnI,aAzEhB,SAAsBX,GAiBlB,MAhBiC,eAAdA,EAAKhhB,MAAuC,cAAdghB,EAAKhhB,MAElDgW,KAAQxI,MAAM,qCAEHwT,EAAKvH,KAAO,KAAO,KAAO,GAErCzD,KAAQxI,MAAM,gCAbtB,SAAmBhK,EAAKslB,GACpB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAc3lB,GAcrB4lB,CAAUpI,GAAM,SAAAgG,GACZC,EAAYD,GACZ6oB,GAAiB7uB,GACjBmG,GAAoB,OAGjB,GAyDK7F,UAAU,GAET0F,EAAW,yBAAKlb,IAAKkb,EAAUnjB,IAAI,SAAS/C,MAAO,CAAE4R,MAAO,UAAe6W,IAKhF,yBAAKzoB,MAAO,CACR0V,UAAW,SAEf,wBAAI9V,UAAU,mBAAd,uBAKA,kBAAC,GAAD,eACI4gB,UAAU,EACV5gB,UAAU,qBACVsiB,SAAS,UACTliB,MAAO,CACHsV,WAAY,SAEZiL,IAEJ,uBAAG3gB,UAAU,wBACT,kBAACsvC,GAAA,EAAD,OAEJ,uBAAGtvC,UAAU,mBAAb,6CACA,uBAAGA,UAAU,mBAAb,2GAMH8uC,EAAchiC,MAAd,cACG,uBAAG1M,MAAO,CACNoV,MAAO,2BACPs5B,EAAchiC,MAAd,eASZ,kBAAC,GAAD,CACIuR,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbC,sBAAsB,EACtBG,oBAAqBA,EACrBD,wBAAyBA,EACzBE,iBAAkBA,MCnY1BuL,GAAWjrB,IAAXirB,OAIFhM,GAA0B,SAAC5I,GAChCD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,cACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAKtCqM,GAAwB,SAACvM,GAChCD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAyO/BsV,iBA/NM,SAAC,GAAqB,EAApBvW,QAAqB,IAAD,EAEN1C,mBAAS,IAFH,mBAEhC+8B,EAFgC,KAEtBC,EAFsB,OAII3gC,EAAe,GAAI,aAJvB,mBAIhCqhC,EAJgC,KAIpBC,EAJoB,OAKYthC,EAAe,GAAI,eAL/B,mBAKduhC,GALc,aAMkBvhC,EAAe,GAAI,eANrC,mBAMRwhC,GANQ,WAUvC7hC,qBAAU,YACM,uCAAG,4BAAAE,EAAA,sEACKyhC,EAAqB,IAD1B,OACVG,EADU,OAGhBd,EAAac,GAHG,2CAAH,qDAKfC,KACC,IAjBqC,MAuBgB/9B,oBAAS,GAvBzB,mBAuBlC6T,EAvBkC,KAuBZC,EAvBY,KAsCnCkqB,EAAiB,uCAAG,WAAO1tC,GAAP,eAAA4L,EAAA,sEACK0hC,EAAuB,CAClD5uC,WAAY,CACVE,aAAc,CACZoB,SAJkB,QAClB2tC,EADkB,SAUqB,OAA1BA,EAAepqC,OAClCwY,GAAwB,mBAIxB2D,GAAsB,qDAfE,2CAAH,sDAsBjBkuB,EAAiB,uCAAG,WAAO5tC,GAAP,iBAAA4L,EAAA,sEACK2hC,EAAuB,CAClD7uC,WAAY,CACVE,aAAc,CACZoB,SAJkB,QAClB6tC,EADkB,SAUqB,OAA1BA,EAAetqC,QAClCwY,GAAwB,iBAClB+xB,EAAgBrB,EAAU5uB,QAAO,SAAAve,GAAI,OAAIA,EAAKU,KAAOA,KAC3D0sC,EAAaoB,IAGfpuB,GAAsB,yCAhBI,2CAAH,sDAuBxB,OACC,oCAIE,yBAAK7hB,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,UAMA,kBAAC,GAAD,CACEqrB,aAAa,EACbrrB,UAAU,qBACZM,YAAY,kBACZquB,SAAU,SAAApvB,GAAK,OA5EF,SAACA,GACpB,GAAGgwC,EAAWvtC,KAAKtB,OAAS,EAAG,CAC7B,IAAMuvC,EAAeV,EAAWvtC,KAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAK5B,KAAKsB,SAAS5B,MACvEsvC,EAAaoB,IAyEU3kB,CAAa/rB,OAI9B,kBAAC,IAAD,CAEFS,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJtC,YAWA,yBAAK3lB,UAAU,uCAMxB,yBAAKA,UAAU,uCACTuvC,EAAWniC,MAAQwhC,EAAUluC,OAAS,GAE5C,yBAAKV,UAAU,4CAEP4uC,EAAU3tC,KAAI,SAAAgI,GACb,OACE,yBAAKjJ,UAAU,iDAIX,yBAAKA,UAAU,qDACf,yBACEmD,IAAI,YACJiI,IAAKnC,EAAMtG,aAGf,yBAAK3C,UAAU,sDACb,gCAAMiJ,EAAMpJ,KAAZ,KAEA,yBACEO,MAAO,CACL8T,QAAS,OACTC,eAAgB,kBAGlB,kBAAC,KAAD,CAAS+B,UAAU,MAAMjT,MAAM,qBAC/B,kBAAC,IAAD,CAED8V,KAAK,QACL/Y,UAAU,6BACV4C,KAAM,kBAAC+f,GAAA,EAAD,MACN5S,QAAS,kBAAM8/B,EAAkB5mC,EAAM9G,MAEtC,0BAAM/B,MAAO,CACXmW,SAAS,SADX,gBAaA,kBAAC,KAAD,CAASL,UAAU,MAAMjT,MAAM,gBAC/B,kBAAC,KAAD,CAEL8f,UAAW,kBAAMgtB,EAAkB9mC,EAAM9G,KACzCc,MAAM,qBAAgBkf,OAAO,MAAMa,WAAW,MAElD,kBAAC,IAAD,CACajK,KAAK,QACLzZ,KAAK,OACL4wC,QAAQ,EACRttC,KAAM,kBAACggB,GAAA,EAAD,iBAoBrB2sB,EAAWpiC,WAAa,kBAACoe,GAAD,MAExBgkB,EAAWniC,QAAUwhC,EAAUluC,OAAS,IACzC,kBAAC,GAAD,CAAOuC,MAAM,qBAQhBssC,EAAWniC,MACZ,kBAAC+iC,GAAD,CACMzqB,sBAAuBA,EACvBC,yBAA0BA,EAC1BipB,UAAWW,EAAWvtC,KACtB6sC,aAAcA,QC1PTuB,GARD,SAAC97B,GACX,OACI,uCCAO+7B,GAJC,SAAC/7B,GAChB,OAAO,yCC2BFuN,IAfmBzT,MAAaC,MAAM,CAC1CpL,MAAOmL,MAAa/O,MAAM,SAASF,SAAS,+BAC5CmxC,WAAYliC,MACT/O,MAAM,eACNF,SAAS,kCAWgB,SAACmW,GAC7BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,0BAIzChH,GAAgB,CACpBvL,MAAO,GACPstC,UAAW,GACXD,WAAY,GACZE,WAAY,IAqNCC,GAhNQ,SAAC,GAAe,qBAIjCviC,EAAe,GAAI,sBAJa,mBAElCwiC,EAFkC,KAGlCC,EAHkC,OAKgBziC,EAClD,GACA,gBAPkC,mBAK7B0iC,EAL6B,KAKVC,EALU,KAUpChjC,qBAAU,YACa,uCAAG,sBAAAE,EAAA,sEACQ8iC,EAAuB,IAD/B,yDAAH,qDAKrB3M,KACC,CAACwM,IAIJ,IAAM9hC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACU4iC,EAA8B,CACzD7qC,KAAM,CACJ7C,MAAO4L,EAAO5L,MACdstC,UAAW1hC,EAAO0hC,UAClBD,WAAYzhC,EAAOyhC,WACnBE,WAAY3hC,EAAO2hC,cANJ,QACbM,EADa,SAW6B,OAA1BA,EAAeprC,QAzDR4P,OA0D3B4I,EAzDJ7I,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,oBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAiEzC1G,EAAQiZ,aAERlG,KAGF/S,EAAQC,eAAc,GA5BH,iCA9CS,IAACuG,IA8CV,OAAH,wDA+BZtG,EAA4B,SAACH,EAAQI,GACzC,QAAKJ,EAAO5L,OAAU4L,EAAOyhC,YAAerhC,IAiB9C,OACE,kBAAC,IAAD,CACEC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDM,oBAAoB,EACpBZ,cAbAoiC,EAAkB5uC,MAClBxB,OAAOC,KAAKmwC,EAAkB5uC,MAAMtB,OAAS,EAEtC,eAAKkwC,EAAkB5uC,MAEvBwM,KAUN,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,yBAAK3P,UAAU,2BACb,yBAAKA,UAAU,gCACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAOsP,EAAO5L,MACdpD,KAAK,QACLF,QACG6P,EAAQvM,OAASqM,EAAOrM,QACvBsM,GACAmhC,EAAwB5jC,MAAxB,YAEJlN,YACG4P,EAAQvM,OAASqM,EAAOrM,QACvBsM,GACAmhC,EAAwB5jC,MAAxB,YAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKzP,UAAU,gCACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAOsP,EAAO0hC,UACd1wC,KAAK,YACLF,QACG6P,EAAQ+gC,WAAajhC,EAAOihC,YAC3BhhC,GACAmhC,EAAwB5jC,MAAxB,gBAEJlN,YACG4P,EAAQ+gC,WAAajhC,EAAOihC,YAC3BhhC,GACAmhC,EAAwB5jC,MAAxB,gBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKzP,UAAU,qCACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAOsP,EAAO2hC,WACd3wC,KAAK,aACLF,QACG6P,EAAQghC,YAAclhC,EAAOkhC,aAC5BjhC,GACAmhC,EAAwB5jC,MAAxB,iBAEJlN,YACG4P,EAAQghC,YAAclhC,EAAOkhC,aAC5BjhC,GACAmhC,EAAwB5jC,MAAxB,iBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAKtB,yBACEzP,UAAU,+BACVI,MAAO,CACL2V,WAAY,SAGd,kBAAC9W,EAAD,CACEI,MAAM,cACNE,MAAOsP,EAAOyhC,WACdzwC,KAAK,aACLF,QACG6P,EAAQ8gC,YAAchhC,EAAOghC,aAC5B/gC,GACAmhC,EAAwB5jC,MAAxB,iBAEJlN,YACG4P,EAAQ8gC,YAAchhC,EAAOghC,aAC5B/gC,GACAmhC,EAAwB5jC,MAAxB,iBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,mBAMxB,yBACErP,MAAO,CACL0V,UAAW,UAIf,kBAAC,IAAD,CACE/F,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAAST,EACT7P,SAAUsP,EAA0BH,EAAQI,GAC5CjP,UAAU,8BAJZ,qBASA,yBACEI,MAAO,CACL6a,aAAc,eCvOtB9M,GAAmBC,MAAaC,MAAM,CAC1C0iC,aAAc3iC,MACX/O,MAAM,SACNF,SAAS,+BAWR0iB,GAAwB,SAACvM,GAC7BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAIzChH,GAAgB,CACpBuiC,aAAc,GACdjoC,QAAS,GACT3B,MAAO,GACPD,MAAO,GACP8pC,eAAgB,IAsOHP,GAjOQ,SAAC,GAAe,qBAIjCviC,EAAe,GAAI,yBAJa,mBAElC+iC,EAFkC,KAGlCC,EAHkC,OAK0BhjC,EAC5D,GACA,yBAPkC,mBAK7BijC,EAL6B,KAKPlN,EALO,KAUpCp2B,qBAAU,YACa,uCAAG,sBAAAE,EAAA,sEACQk2B,EAA8B,IADtC,yDAAH,qDAKrBC,KACC,CAAC+M,IAEJ,IAAMriC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACYmjC,EAAiC,CAC9DprC,KAAM,CACJirC,aAAcliC,EAAOkiC,aACrBjoC,QAAS+F,EAAO/F,QAChB3B,MAAO0H,EAAO1H,MACdD,MAAO2H,EAAO3H,MACd8pC,eAAgBniC,EAAOmiC,kBAPR,QACbI,EADa,SAYiC,OAA5BA,EAAiB1rC,QAzDZ4P,OA0D3B4I,EAzDJ7I,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAiEzC1G,EAAQiZ,aAERlG,KAGF/S,EAAQC,eAAc,GA7BH,iCA7CS,IAACuG,IA6CV,OAAH,wDAgCZtG,EAA4B,SAACH,EAAQI,GACzC,OAAKJ,EAAOkiC,eAAiB9hC,GAiB/B,OACE,kBAAC,IAAD,CACEC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBiB,oBAAoB,EACpBZ,cAdA2iC,EAAqBnvC,MACrBxB,OAAOC,KAAK0wC,EAAqBnvC,MAAMtB,OAAS,EAEzC,eAAKywC,EAAqBnvC,MAE1BwM,KAWN,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,yBAAK3P,UAAU,2BACb,yBAAKA,UAAU,gCACb,kBAACf,EAAD,CACEI,MAAM,eACNE,MAAOsP,EAAOkiC,aACdlxC,KAAK,eACLF,QACG6P,EAAQuhC,cAAgBzhC,EAAOyhC,eAC9BxhC,GACA0hC,EAAyBnkC,MAAzB,mBAEJlN,YACG4P,EAAQuhC,cAAgBzhC,EAAOyhC,eAC9BxhC,GACA0hC,EAAyBnkC,MAAzB,mBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,oBAItB,yBAAKzP,UAAU,gCACb,kBAACf,EAAD,CACEI,MAAM,eACNE,MAAOsP,EAAO1H,MACdtH,KAAK,QACLF,QACG6P,EAAQrI,OAASmI,EAAOnI,QACvBoI,GACA0hC,EAAyBnkC,MAAzB,YAEJlN,YACG4P,EAAQrI,OAASmI,EAAOnI,QACvBoI,GACA0hC,EAAyBnkC,MAAzB,YAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKzP,UAAU,gCACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAOsP,EAAO3H,MACdrH,KAAK,QACLF,QACG6P,EAAQtI,OAASoI,EAAOpI,QACvBqI,GACA0hC,EAAyBnkC,MAAzB,YAEJlN,YACG4P,EAAQtI,OAASoI,EAAOpI,QACvBqI,GACA0hC,EAAyBnkC,MAAzB,YAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAKtB,yBAAKzP,UAAU,gCACb,kBAACf,EAAD,CACEI,MAAM,kBACNE,MAAOsP,EAAOmiC,eACdnxC,KAAK,iBACLF,QACG6P,EAAQwhC,gBAAkB1hC,EAAO0hC,iBAChCzhC,GACA0hC,EAAyBnkC,MAAzB,qBAEJlN,YACG4P,EAAQwhC,gBAAkB1hC,EAAO0hC,iBAChCzhC,GACA0hC,EAAyBnkC,MAAzB,qBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,sBAKtB,yBAAKzP,UAAU,qCACb,kBAAC,GAAD,CACEX,MAAM,UACNE,MAAOsP,EAAO/F,QACdjJ,KAAK,UACLF,QACG6P,EAAQ1G,SAAWwG,EAAOxG,UACzByG,GACA0hC,EAAyBnkC,MAAzB,cAEJlN,YACG4P,EAAQ1G,SAAWwG,EAAOxG,UACzByG,GACA0hC,EAAyBnkC,MAAzB,cAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,gBAMxB,yBACErP,MAAO,CACL0V,UAAW,UAIf,kBAAC,IAAD,CACE/F,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAAST,EACT7P,SAAUsP,EAA0BH,EAAQI,GAC5CjP,UAAU,8BAJZ,uBASA,yBACEI,MAAO,CACL6a,aAAc,eC7NtB4G,IArBmBzT,MAAaC,MAAM,CACxCpL,MAAOmL,MACF/O,MAAM,SACNF,SAAS,+BACdmxC,WAAYliC,MACP/O,MAAM,eACNF,SAAS,kCAeY,SAACmW,GAC3BD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,0BAK7ChH,GAAgB,CAClB0W,UAAW,GACXI,SAAU,GACVF,gBAAiB,IAoMNisB,GA1LO,SAAC,GAAgB,qBAE8BnjC,EAAe,GAAI,iBAFlD,mBAE3BwiC,EAF2B,KAEFC,EAFE,OAGkBziC,EAAe,GAAI,cAHrC,mBAG3B0iC,EAH2B,KAGRC,EAHQ,KAOlChjC,qBAAU,YACe,uCAAG,sBAAAE,EAAA,sEACU8iC,EAAuB,IADjC,yDAAH,qDAIrB3M,KACD,CAACwM,IAKJ,IAAM9hC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEAGY4iC,EAA8B,CACvD7qC,KAAM,CACFof,UAAWrW,EAAOqW,UAClBI,SAAUzW,EAAOyW,SACjBF,gBAAiBvW,EAAOuW,mBAPf,QAGX0rB,EAHW,SAY+B,OAA1BA,EAAeprC,QA7DZ4P,OA8DrB4I,EA7DR7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,oBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAsEvC1G,EAAQiZ,aAGRlG,KAMJ/S,EAAQC,eAAc,GAlCL,iCAjDO,IAACuG,IAiDR,OAAH,wDAiElB,OACI,kBAAC,IAAD,CACIpG,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDM,oBAAoB,EACpBZ,cAfAoiC,EAAkB5uC,MAAQxB,OAAOC,KAAKmwC,EAAkB5uC,MAAMtB,OAAS,EAChE,eAAKkwC,EAAkB5uC,MAGvBwM,KAeN,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,yBAAK3P,UAAU,2BACX,yBAAKA,UAAU,gCACX,kBAACf,EAAD,CACII,MAAM,aACNE,MAAOsP,EAAOqW,UACdrlB,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YAChC3V,GAAgBmhC,EAAwB5jC,MAAxB,gBAEtBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACpC3V,GAAgBmhC,EAAwB5jC,MAAxB,gBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,iBAI5B,yBAAKzP,UAAU,gCACX,kBAACf,EAAD,CACII,MAAM,YACNE,MAAOsP,EAAOyW,SACdzlB,KAAK,WACLF,QAAU6P,EAAQ8V,UAAYhW,EAAOgW,WAC/B/V,GAAgBmhC,EAAwB5jC,MAAxB,eAEtBlN,YAAc4P,EAAQ8V,UAAYhW,EAAOgW,WACnC/V,GAAgBmhC,EAAwB5jC,MAAxB,eACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,gBAI5B,yBAAKzP,UAAU,qCACf,kBAAC,GAAD,CACQX,MAAM,mBACNE,MAAOsP,EAAOuW,gBACdvlB,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACtC7V,GAAgBmhC,EAAwB5jC,MAAxB,sBAEtBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC1C7V,GAAgBmhC,EAAwB5jC,MAAxB,sBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,wBAShC,yBAAKrP,MAAO,CACR0V,UAAW,UAGf,kBAAC,IAAD,CAEI/F,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAAST,EAETvP,UAAU,8BALd,mBAUA,yBAAKI,MAAO,CACR6a,aAAc,eC9LpC4G,IA1BmBzT,MAAaC,MAAM,CACxCijC,YAAaljC,MACZ/O,MAAM,gBACNF,WACAY,IAAI,EAAG,gDACVwxC,aAAcnjC,MACX/O,MAAM,wBACNF,WACAY,IAAI,EAAG,wDACPyxC,MACC,CAACpjC,IAAQ,eAAgB,MACzB,qDAewB,SAACkH,GAC3BD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,0BAK7ChH,GAAgB,CAClB3O,KAAM,GACNsH,MAAO,GACPD,MAAO,GACPuqC,QAAS,GACTljC,SAAS,GACT+iC,YAAa,GACbC,aAAc,IA8PHG,GApPa,SAAC,GAAgB,qBAEwBxjC,EAAe,GAAI,yBAF5C,mBAEjCwiC,EAFiC,KAERC,EAFQ,OAGYziC,EAAe,GAAI,sBAH/B,mBAGjC0iC,EAHiC,KAGdC,EAHc,KAOxChjC,qBAAU,YACe,uCAAG,sBAAAE,EAAA,sEACU8iC,EAAuB,IADjC,yDAAH,qDAIrB3M,KACD,CAACwM,IAIJtvC,QAAQC,IAAI,oBAAoBuvC,GAIhC,IAAMhiC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEAGY4iC,EAA8B,CACvD7qC,KAAM,CACFjG,KAAMgP,EAAOhP,KACbsH,MAAO0H,EAAO1H,MACdD,MAAO2H,EAAO3H,MACdqH,SAAUM,EAAON,SACjBkjC,QAAS5iC,EAAOyiC,YAChBK,cAAe9iC,EAAO0iC,gBAVb,QAGXT,EAHW,SAe+B,OAA1BA,EAAeprC,QAvEZ4P,OAwErB4I,EAvER7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,oBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAgFvC1G,EAAQiZ,aAGRlG,KAMJ/S,EAAQC,eAAc,GArCL,iCAxDO,IAACuG,IAwDR,OAAH,wDAsDlB,OACI,kBAAC,IAAD,CACIpG,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDM,oBAAoB,EACpBZ,cAbAoiC,EAAkB5uC,MAAQxB,OAAOC,KAAKmwC,EAAkB5uC,MAAMtB,OAAS,EAChE,eAAKkwC,EAAkB5uC,MAGvBwM,KAaN,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCAEI,yBAAK3P,UAAU,2BACX,yBAAKA,UAAU,gCACX,kBAACf,EAAD,CACIK,KAAK,OACLD,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC3B0P,GAAgBmhC,EAAwB5jC,MAAxB,WAEtBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAC/B0P,GAAgBmhC,EAAwB5jC,MAAxB,WACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,YAI5B,yBAAKzP,UAAU,gCACX,kBAACf,EAAD,CACIK,KAAK,OACLD,MAAM,QACNE,MAAOsP,EAAO1H,MACdtH,KAAK,QACLF,QAAU6P,EAAQrI,OAASmI,EAAOnI,QAC5BoI,GAAgBmhC,EAAwB5jC,MAAxB,YAEtBlN,YAAc4P,EAAQrI,OAASmI,EAAOnI,QAChCoI,GAAgBmhC,EAAwB5jC,MAAxB,YACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,cAMhC,yBAAKrP,MAAO,CACR4R,MAAO,MACP4/B,aAAc,SAEL,kBAAC3yC,EAAD,CACDK,KAAK,OACLD,MAAM,QACNE,MAAOsP,EAAO3H,MACdrH,KAAK,QACLF,QAAU6P,EAAQtI,OAASoI,EAAOpI,QAC5BqI,GAAgBmhC,EAAwB5jC,MAAxB,YAEtBlN,YAAc4P,EAAQtI,OAASoI,EAAOpI,QAChCqI,GAAgBmhC,EAAwB5jC,MAAxB,YACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,aAMhC,yBAAKrP,MAAO,CACR4R,MAAO,MACP4/B,aAAc,SAEN,kBAAC3yC,EAAD,CACAK,KAAK,WACLD,MAAM,0DACNE,MAAOsP,EAAON,SACd1O,KAAK,WACLF,QAAU6P,EAAQjB,UAAYe,EAAOf,WAC/BgB,GAAgBmhC,EAAwB5jC,MAAxB,eAEtBlN,YAAc4P,EAAQjB,UAAYe,EAAOf,WACnCgB,GAAgBmhC,EAAwB5jC,MAAxB,eACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,gBAMhC,yBAAKzP,UAAU,2BACX,yBAAKA,UAAU,gCACX,kBAACf,EAAD,CACIK,KAAK,WACLD,MAAM,eACNE,MAAOsP,EAAOyiC,YACdzxC,KAAK,cACLF,QAAU6P,EAAQ8hC,aAAehiC,EAAOgiC,cAClC/hC,GAAgBmhC,EAAwB5jC,MAAxB,kBAEtBlN,YAAc4P,EAAQ8hC,aAAehiC,EAAOgiC,cACtC/hC,GAAgBmhC,EAAwB5jC,MAAxB,kBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,mBAI5B,yBAAKzP,UAAU,gCACX,kBAACf,EAAD,CACIK,KAAK,WACLD,MAAM,uBACNE,MAAOsP,EAAO0iC,aACd1xC,KAAK,eACLF,QAAU6P,EAAQ+hC,cAAgBjiC,EAAOiiC,eACnChiC,GAAgBmhC,EAAwB5jC,MAAxB,mBAEtBlN,YAAc4P,EAAQ+hC,cAAgBjiC,EAAOiiC,eACvChiC,GAAgBmhC,EAAwB5jC,MAAxB,mBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,qBAOhC,yBAAKrP,MAAO,CACR0V,UAAW,UAGf,kBAAC,IAAD,CAEI/F,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAAST,EAETvP,UAAU,8BALd,sBAUA,yBAAKI,MAAO,CACR6a,aAAc,eCrQlC+C,IAJiB5P,MAAaC,MAAM,CAC3CxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAGlDke,KAAZD,SAEFE,GAA0B,SAAC5I,GAChCD,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,gBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAKvCqM,GAAwB,SAACvM,GAC9BD,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAwV9Bq8B,GAjUE,SAAC,GAAwF,EAAtFnsB,sBAAsF,EAA/DC,yBAA+D,EAArCyQ,UAAqC,EAA1BC,aAA2B,IAAD,EAEvCnoB,EAAe,GAAI,wBAAwB,QAFJ,mBAE3E4jC,GAF2E,aAIzEjgC,mBAAS,GAAD,OAAInP,EAAOiK,QAAX,qBAJiE,mBAIlG2Z,EAJkG,KAIxFC,EAJwF,OAK1D1U,oBAAS,GALiD,mBAKlG2U,EALkG,KAKjFC,EALiF,OAQjE5U,mBAAS,GAAD,OAAInP,EAAOiK,QAAX,iBARyD,mBAQlGolC,EARkG,KAQpFC,EARoF,OASnEngC,oBAAS,GAT0D,mBASlGogC,EATkG,KASrFC,EATqF,OAc3ErgC,mBAAS,GAAD,OAAInP,EAAOiK,QAAX,yBAdmE,mBAclGwlC,EAdkG,KAczFC,EAdyF,OAe7DvgC,oBAAS,GAfoD,mBAelGwgC,EAfkG,KAelFC,EAfkF,KAiBzG,SAAS5pB,EAAU5lB,EAAKslB,GACvB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAc3lB,GAmItB,IAAM+lB,EACL,6BACErC,EAAkB,kBAACsC,GAAA,EAAD,MAAsB,kBAACjE,GAAA,EAAD,MACzC,yBAAK7kB,UAAU,mBAAf,WAOIuyC,EACL,6BACEN,EAAc,kBAACnpB,GAAA,EAAD,MAAsB,kBAACjE,GAAA,EAAD,MACrC,yBAAK7kB,UAAU,mBAAf,WAKIwyC,EACL,6BACEH,EAAiB,kBAACvpB,GAAA,EAAD,MAAsB,kBAACjE,GAAA,EAAD,MACxC,yBAAK7kB,UAAU,mBAAf,WAOF,OACC,oCACC,yBAAKA,UAAU,qBAEd,kBAAC,KAAD,CAAMoiB,iBAAiB,KACtB,kBAAC,GAAD,CAASC,IAAI,YAAYhgB,IAAI,KAC5B,kBAACowC,GAAD,OAED,kBAAC,GAAD,CAASpwB,IAAI,YAAYhgB,IAAI,KAC5B,yBAAKjC,MAAO,CACX8T,QAAS,OACTE,WAAY,SAAS0B,UAAW,SAIhC,yBAAK1V,MAAO,CACX6V,YAAa,SAEX,yBAAKjW,UAAU,iCACjB,wBAAIA,UAAU,mBAAd,UACA,kBAAC,KAAD,CACCkW,UAAU,OAAOjT,MAAO,0BACxB,uBAAGuT,KAAK,OACP,kBAAC2S,GAAA,EAAD,SAKH,kBAAC,KAAD,CACC/oB,MAAO,CACNC,aAAc,OAEfR,KAAK,SACLyiB,SAAS,eACTtiB,UAAU,kBACVopB,gBAAgB,EAChBnI,aA/LP,SAAsBX,GAqCrB,MApCiC,eAAdA,EAAKhhB,MAAuC,cAAdghB,EAAKhhB,MAErDgW,KAAQxI,MAAM,qCAEAwT,EAAKvH,KAAO,KAAO,KAAO,GAExCzD,KAAQxI,MAAM,gCAIf4b,EAAUpI,GAAM,SAAAgG,GACfC,EAAYD,GACI,uCAAI,8BAAAvY,EAAA,6DACbqS,EAAW,IAAIC,UACZE,OAAO,OAAOD,GAFJ,SAKDwxB,EAAiC,CAClDhsC,KAAMsa,IANY,QAKbxT,EALa,SAUM,OAAfA,EAAIlH,OACbwY,GAAwB,sBAGxB2D,GAAsB,mDAdJ,2CAAJ,oDAoBhB8G,GACAlC,GAAoB,OAGd,GA2JD7F,UAAU,GAET0F,EAAW,yBACZosB,QAAS,kBAAMnsB,EAAY,KAC3Bnb,IAAKkb,EAAUnjB,IAAI,SAAS/C,MAAO,CAAE4R,MAAO,UAAe6W,IAI5D,yBAAKzoB,MAAO,CACX6V,YAAa,SAEX,yBAAKjW,UAAU,iCACjB,wBAAIA,UAAU,mBAAd,UACA,kBAAC,KAAD,CACCkW,UAAU,OAAOjT,MAAO,qBACxB,uBAAGuT,KAAK,OACP,kBAAC2S,GAAA,EAAD,SAKH,kBAAC,KAAD,CACC/oB,MAAO,CACNC,aAAc,OAEfR,KAAK,SACLyiB,SAAS,eACTtiB,UAAU,kBACVopB,gBAAgB,EAChBnI,aAnLP,SAA0BX,GAqCzB,MApCiC,eAAdA,EAAKhhB,MAAuC,cAAdghB,EAAKhhB,MAErDgW,KAAQxI,MAAM,qCAEAwT,EAAKvH,KAAO,KAAO,KAAO,GAExCzD,KAAQxI,MAAM,gCAIf4b,EAAUpI,GAAM,SAAAgG,GACf0rB,EAAgB1rB,GACA,uCAAI,8BAAAvY,EAAA,6DACbqS,EAAW,IAAIC,UACZE,OAAO,OAAOD,GAFJ,SAKDwxB,EAAiC,CAClDhsC,KAAMsa,IANY,QAKbxT,EALa,SAUM,OAAfA,EAAIlH,OACbwY,GAAwB,sBAGxB2D,GAAsB,mDAdJ,2CAAJ,oDAoBhB8G,GACAupB,GAAe,OAGT,GAgJDtxB,UAAU,GAETmxB,EAAe,yBACfW,QAAS,kBAAMV,EAAgB,KAC/B5mC,IAAK2mC,EAAc5uC,IAAI,SAAS/C,MAAO,CAAE4R,MAAO,UAAeugC,IAOjE,yBAAKnyC,MAAO,CACX6V,YAAa,SAEX,yBAAKjW,UAAU,iCACjB,wBAAIA,UAAU,mBAAd,cACA,kBAAC,KAAD,CACCkW,UAAU,OAAOjT,MAAO,yBACxB,uBAAGuT,KAAK,OACP,kBAAC2S,GAAA,EAAD,SAKH,kBAAC,KAAD,CACC/oB,MAAO,CACNC,aAAc,OAEfR,KAAK,SACLyiB,SAAS,eACTtiB,UAAU,kBACVopB,gBAAgB,EAChBnI,aA1KP,SAA6BX,GAqC5B,MApCiC,eAAdA,EAAKhhB,MAAuC,cAAdghB,EAAKhhB,MAErDgW,KAAQxI,MAAM,qCAEAwT,EAAKvH,KAAO,KAAO,KAAO,GAExCzD,KAAQxI,MAAM,gCAIf4b,EAAUpI,GAAM,SAAAgG,GACf8rB,EAAW9rB,GACK,uCAAI,8BAAAvY,EAAA,6DACbqS,EAAW,IAAIC,UACZE,OAAO,UAAUD,GAFP,SAKDwxB,EAAiC,CAClDhsC,KAAMsa,IANY,QAKbxT,EALa,SAUM,OAAfA,EAAIlH,OACbwY,GAAwB,qBAGxB2D,GAAsB,kDAdJ,2CAAJ,oDAoBhB8G,GACA2pB,GAAkB,OAGZ,GAsID1xB,UAAU,GAETuxB,EAAU,yBACXO,QAAS,kBAAMN,EAAW,KAE1BhnC,IAAK+mC,EAAShvC,IAAI,SAAS/C,MAAO,CAAE4R,MAAO,UAAewgC,KAM5D,yBAAKpyC,MAAO,CACX6a,aAAc,WAIhB,kBAAC,GAAD,CAASoH,IAAI,WAAWhgB,IAAI,KAC3B,kBAACswC,GAAD,OAMD,kBAAC,GAAD,CAAStwB,IAAI,sBAAsBhgB,IAAI,KAEtC,kBAACuwC,GAAD,OAGD,kBAAC,GAAD,CAASvwB,IAAI,qBAAqBhgB,IAAI,KACrC,kBAAC,GAAD,WCtQSwwC,GAzGQ,SAAC,GAIV,IAHZC,EAGW,EAHXA,mBACAC,EAEW,EAFXA,sBACAC,EACW,EADXA,mBAEMC,EAA6B,SAACnjC,GAAO,IAAD,EAClCjQ,EAAOiQ,EAAEzE,OAAOxL,KAChBN,EAAQuQ,EAAEzE,OAAO9L,MAEjB2zC,EAAY,eACbJ,GADa,oBAEfjzC,EAAON,GAFQ,oBAGZuzC,EAAmB3wC,IAHP,IAYZsU,EALGu8B,EACJ/xC,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MACnBN,QAAQixC,EAAmB3wC,IAK1B+xB,EAAmB,uBACpB8e,EAAmBpxC,MAAM,EAAG6U,IADR,CAEvBy8B,GAFuB,aAGpBF,EAAmBpxC,MAAM6U,EAAQ,KAEtCs8B,EAAsB7e,IAwBxB,OACE,yBACE9zB,MAAO,CACL8T,QAAS,OACTE,WAAY,SACZpC,MAAO,SAGT,yBACE5R,MAAO,CACL4R,MAAO,MACPiE,YAAa,SAGf,kBAAChX,EAAD,CACEc,IAAK,EACLT,KAAK,SACLF,YAAY,gBACZG,MAAOuzC,EAAmBtrC,aAC1B3H,KAAK,eACLJ,SAAUwzC,KAGd,yBACE7yC,MAAO,CACL4R,MAAO,MACPiE,YAAa,SAGf,kBAAChX,EAAD,CACEc,IAAK,EACLT,KAAK,SACLF,YAAY,SACZG,MAAOuzC,EAAmBtpC,OAC1B3J,KAAK,SACLJ,SAAUwzC,KAGd,yBACEljC,QAAS,kBA5De,WAC5B3O,QAAQC,IAAI,8BAA+ByxC,GAC3C1xC,QAAQC,IAAI,gCAAiC2xC,GAE7C,IAMMv8B,EALGu8B,EACJ/xC,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MACnBN,QAAQixC,EAAmB3wC,IAK1B+xB,EAAmB,uBACpB8e,EAAmBpxC,MAAM,EAAG6U,IADR,aAEpBu8B,EAAmBpxC,MAAM6U,EAAQ,KAEtCs8B,EAAsB,aAAI7e,IAE1B9yB,QAAQC,IAAI,iCAAkC6yB,GA0C3Bif,IACf/yC,MAAO,CACL4R,MAAO,KACPiJ,aAAc,OACd1E,SAAU,OACVP,OAAQ,YAGV,kBAAC0M,GAAA,EAAD,SCvFAzL,GAAWC,KAAXD,OAEFiH,GAA0B,SAAC5I,GAC/BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,mBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAIzCqM,GAAwB,SAACvM,GAC7BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAIzCrH,GAAmBC,MAAaC,MAAM,IAEtCG,GAAgB,CACpB3O,KAAM,GACNwJ,eAAgB,GAChBxE,KAAM,IAmcOuuC,GAzbM,SAAC,GAKR,IAJZ1tB,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAggB,EAEW,EAFXA,WACAC,EACW,EADXA,cACW,EACiC13B,EAAe,GAAI,aADpD,mBACJmlC,EADI,KACYC,EADZ,OAE6CzhC,mBAAS,IAFtD,mBAEJysB,EAFI,KAEkBC,EAFlB,OAGuC1sB,mBAAS,IAHhD,mBAGJ2sB,EAHI,KAGeC,EAHf,OAKiC5sB,mBAAS,IAL1C,mBAKJ6sB,EALI,KAKYC,EALZ,OAM2B9sB,mBAAS,IANpC,mBAMJ+sB,EANI,KAMSC,EANT,OAQwC3wB,EACjD,GACA,eAVS,mBAQJ4wB,EARI,KAQcC,EARd,OAakC7wB,EAAe,GAAI,YAbrD,mBAaJ8wB,EAbI,KAaWC,EAbX,OAe2BptB,mBAAS,IAfpC,gCAgBqBA,mBAAS,KAhB9B,gCAkByCA,mBAAS,CAC3D,CACErK,aAAc,GACdgC,OAAQ,GACRrH,GAAG,GAAD,OAAK4Y,KAAKw4B,MAAM,IAAyB,IAAhBx4B,KAAKy4B,eAtBzB,mBAkBJR,EAlBI,KAkBgBD,EAlBhB,KA0BLnkC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,+BAAAf,EAAA,2DAGfilC,EAAmBtyC,OAAS,GAHb,iBAMjB,IAFM8I,EAAS,GAJE,4BAMjB,EAAiBwpC,EAAjB,+CAASvxC,EAA4B,QACE,KAAjC+H,EAAO/H,EAAI,eAA+C,KAAnBA,EAAI,SAC7C+H,EAAO/H,EAAI,cAAoBA,EAAI,QARtB,wPAYU6xC,EAAkB,CAC3CxtC,KAAM,CACJjG,KAAMgP,EAAOhP,KACbwJ,eAAgBwF,EAAOxF,eACvBxE,KAAMgK,EAAOhK,KACbmC,QAASs3B,EACTr3B,KAAMu3B,EACNh1B,YAnBa,SAYX07B,EAZW,SAwB2B,OAAxBA,EAAax/B,QAC/BwY,KAEA0nB,EAAc,CAAC,aAEXzjC,GAAI+iC,EAAY,IAAU,GAC1B7iC,IAAK6iC,EAAY,IAAU,GAC3BrlC,KAAMqlC,EAAY,MAAY,IAE3BA,IANM,oBAQRS,KAELhgB,GAAyB,GACzB7W,EAAQiZ,aAERlG,KAxCe,yCA2CUyxB,EAAkB,CAC3CxtC,KAAM,CACJjG,KAAMgP,EAAOhP,KACbwJ,eAAgBwF,EAAOxF,eACvBxE,KAAMgK,EAAOhK,KACbmC,QAASs3B,EACTr3B,KAAMu3B,EACNh1B,OAAQ,MAlDK,SA2CX07B,EA3CW,SAuD2B,OAAxBA,EAAax/B,QAC/BwY,KAEA0nB,EAAc,GAAD,oBACRD,GADQ,cAGTxjC,GAAI+iC,EAAY,IAAU,GAC1B7iC,IAAK6iC,EAAY,IAAU,GAC3BrlC,KAAMqlC,EAAY,MAAY,IAE3BA,MAGPvf,GAAyB,GACzB7W,EAAQiZ,aAERlG,KAvEe,QA2EnB/S,EAAQC,eAAc,GA3EH,2EAAH,wDA8EZowB,EAAe,SAAC5/B,GACpBk/B,EAAqBl/B,IAGjB6/B,EAAkB,SAAC7/B,GACvBg/B,EAAwBh/B,IAG1BsO,qBAAU,YACU,uCAAG,8BAAAE,EAAA,sEACUgxB,EAAuB,IADjC,QACbM,EADa,SAIGA,EAAe3+B,OAAS,IAEtCg+B,EAAiBW,EAAep+B,KAAI,SAAC+F,GACzC,MAAO,CACLzH,MAAOyH,EAAQnH,KACfA,KAAMmH,EAAQnH,SAGlB8+B,EAAkBD,IAZD,2CAAH,qDAgBlBY,KACC,IAEHzxB,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACUkxB,EAAoB,CAC5Cp+B,WAAY,CACVE,aAAc,CACZiG,QAASs3B,MAJC,QACViB,EADU,SAUGA,EAAY7+B,OAAS,IAEhCk+B,EAAcW,EAAYt+B,KAAI,SAACgG,GACnC,MAAO,CACL1H,MAAO0H,EAAKpH,KACZA,KAAMoH,EAAKpH,SAGfg/B,EAAeD,IAlBD,2CAAH,qDAsBfY,KACC,CAAClB,IAEJzwB,qBAAU,WACR,IAAKwlC,EAAc,UAAe,CAChC,IAAMvmC,EAAQumC,EAAc,MAC5B,GAAIvmC,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EACvDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,WAS/BwnB,EAAc,WACf7yC,OAAOC,KAAK4yC,EAAerxC,MAAMtB,OAAS,GAEtC2yC,EAAc,KAAd,SAUL,CAACA,IAEJ,IAAMnrB,GAAe,SAACpY,GACpB6V,GAAyB,IAU3BvkB,QAAQC,IAAI,+BAAgC2xC,GAE5C,IAAMS,GAA0B,WAC9BV,EAAsB,GAAD,oBAChBC,GADgB,CAEnB,CACExrC,aAAc,GACdgC,OAAQ,GACRrH,GAAG,GAAD,OAAK4Y,KAAKw4B,MAAM,IAAyB,IAAhBx4B,KAAKy4B,gBAKtC,OACE,kBAAC,IAAD,CACEtkC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEvP,MAAO,CACL2hB,IAAK,QAEPG,UAAW,CACTrS,OAAQ,IACRwG,QAAS,QAEXpT,MAAM,iBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,WAIZ,yBAAKjpB,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QACG6P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GAAgB8jC,EAAevmC,MAAf,WAEpBlN,YACG4P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GAAgB8jC,EAAevmC,MAAf,WAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,YAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,mBACNE,MAAOsP,EAAOxF,eACdxJ,KAAK,iBACLF,QACG6P,EAAQnG,gBAAkBiG,EAAOjG,iBAChCkG,GACA8jC,EAAevmC,MAAf,qBAEJlN,YACG4P,EAAQnG,gBAAkBiG,EAAOjG,iBAChCkG,GACA8jC,EAAevmC,MAAf,qBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,uBAMxB,yBACErP,MAAO,CACL6V,YAAa,SAGf,kBAAChX,EAAD,CACEI,MAAM,OACNE,MAAOsP,EAAOhK,KACdhF,KAAK,OACLF,QACG6P,EAAQ3K,MAAQyK,EAAOzK,OACtB0K,GAAgB8jC,EAAevmC,MAAf,WAEpBlN,YACG4P,EAAQ3K,MAAQyK,EAAOzK,OACtB0K,GAAgB8jC,EAAevmC,MAAf,WAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,YAKtB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,mBAAd,WACA,kBAAC,KAAD,CACEy/B,gBACE,kBAAC,KAAD,CACEn9B,YAAY,mBACZO,MAAOmR,KAAMK,yBAGjBoE,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,mBACZoY,iBAAiB,WACjBjZ,SAAU2/B,EACVzmB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOtV,SACJuV,cACAjX,QAAQ+W,EAAME,gBAAkB,IAGpCgmB,EAAiB1xB,MAChB0xB,EAAiB98B,KAAKtB,OAAS,GAC/Bg+B,EAAez9B,KAAI,SAAC4X,GAClB,OACE,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,WAK/C,yBAAKG,UAAU,yBACb,wBAAIA,UAAU,mBAAd,QACA,kBAAC,KAAD,CACEy/B,gBACE,kBAAC,KAAD,CACEn9B,YAAY,yBACZO,MAAOmR,KAAMK,yBAGjB/B,KAAK,WACLmG,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,gBACZoY,iBAAiB,WACjBjZ,SAAU0/B,EACVxmB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOtV,SACJuV,cACAjX,QAAQ+W,EAAME,gBAAkB,IAGpCkmB,EAAc5xB,MACb4xB,EAAch9B,KAAKtB,OAAS,GAC5Bk+B,EAAY39B,KAAI,SAAC4X,GACf,OACE,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAOjD,yBACEO,MAAO,CACL0V,UAAW,UAGf,wBAAI9V,UAAU,mBAAd,oBAECgzC,EAAmB/xC,KAAI,SAAC6xC,GAEvB,OADA1xC,QAAQC,IAAI,4BAA6ByxC,GAEvC,kBAAC,GAAD,CACEA,mBAAoBA,EACpBE,mBAAoBA,EACpBD,sBAAuBA,OAK7B,yBACE3yC,MAAO,CACL0V,UAAW,SAGf,kBAAC,IAAD,CACEiD,KAAK,SACLhJ,QAAS0jC,GACTn0C,KAAK,SACLsD,KAAM,kBAACiiB,GAAA,EAAD,OAJR,oBCpeJ5N,GAAWC,KAAXD,OAEF9I,GAAmBC,MAAaC,MAAM,IAuBtCwT,GAAwB,SAACvM,GAC7BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAibhCqmB,GAraG,SAAC,GAML,IALZlzB,EAKW,EALXA,SACA0V,EAIW,EAJXA,WACAD,EAGW,EAHXA,QACAwnB,EAEW,EAFXA,cACAD,EACW,EADXA,WACW,EAC0Cz3B,EACnD,GACA,gBAHS,mBACJwlC,EADI,KACeC,EADf,KAMXvyC,QAAQC,IAAI,iBAAkBsH,GANnB,MAQ6CkJ,mBAAS,IARtD,mBAQJysB,EARI,KAQkBC,EARlB,OASuC1sB,mBAAS,IAThD,mBASJ2sB,EATI,KASeC,EATf,OAWiC5sB,mBAAS,IAX1C,mBAWJ6sB,EAXI,KAWYC,EAXZ,OAY2B9sB,mBAAS,IAZpC,mBAYJ+sB,EAZI,KAYSC,EAZT,OAcwC3wB,EACjD,GACA,eAhBS,mBAcJ4wB,EAdI,KAccC,EAdd,OAmBkC7wB,EAAe,GAAI,YAnBrD,mBAmBJ8wB,EAnBI,KAmBWC,EAnBX,OAqB2BptB,mBAAS,IArBpC,gCAsBqBA,mBAAS,KAtB9B,gCAwByCA,mBAAS,KAxBlD,mBAwBJmhC,EAxBI,KAwBgBD,EAxBhB,KA0BXllC,qBAAU,WACR,GAAIlF,EAASa,QAAUhJ,OAAOC,KAAKkI,EAASa,QAAQ9I,OAAS,EAAG,CAC9D,IAAMkzC,EAAqC,GACxBpzC,OAAOC,KAAKkI,EAASa,QAC7B7F,SAAQ,SAACkwC,GAClBD,EAAmC9vC,KAAK,CACtC0D,aAAcqsC,EACdrqC,OAAQb,EAASa,OAAOqqC,GACxB1xC,GAAG,GAAD,OAAK4Y,KAAKw4B,MAAM,IAAyB,IAAhBx4B,KAAKy4B,gBAGpCT,EAAsBa,MAEvB,CAACjrC,IAEJvH,QAAQC,IAAI,oBAAqBsH,EAASa,QAE1C,IAAMoF,EAAY,uCAAG,WAAOC,EAAaC,GAApB,mCAAAf,EAAA,yDAEbvE,EAAS,KAEXwpC,EAAmBtyC,OAAS,GAJb,iBAKjB,IALiB,4BAKjB,EAAiBsyC,EAAjB,+CAASvxC,EAA4B,QACE,KAAjC+H,EAAO/H,EAAI,eAA+C,KAAnBA,EAAI,SAC7C+H,EAAO/H,EAAI,cAAoBA,EAAI,QAPtB,wPAWQkyC,EAAwB,CACjD9yC,WAAY,CACVE,aAAc,CACZoB,GAAIwG,EAASxG,KAGjB2D,KAAM,CACJjG,KAAMgP,EAAOhP,KACbwJ,eAAgBwF,EAAOxF,eACvBxE,KAAMgK,EAAOhK,KACbmC,QAASs3B,GAAwB31B,EAAS3B,QAC1CC,KAAMu3B,GAAqB71B,EAAS1B,KACpCuC,YAvBe,SAWb07B,EAXa,SA4ByB,OAAxBA,EAAax/B,QArGJ4P,OAsG3B4I,EArGJ7I,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,kBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAwGnCiB,EAJgB,WACpB,OAAOkvB,EAAW1kC,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQ8G,EAASxG,IAG9C+4B,GAGRxZ,EAAclhB,OAAOmhB,OAAO,GAAIgkB,EAAWlvB,GAA7BjW,OAAA,IAAAA,CAAA,GAEf0kC,IAECC,EAd0C,uBAe3CQ,EAAW/jC,MAAM,EAAG6U,IAfuB,CAgB9CiL,GAhB8C,aAiB3CikB,EAAW/jC,MAAM6U,EAAQ,KAE9BmvB,EAAcT,GACd9mB,GAAW,IAEXwD,KAGF/S,EAAQC,eAAc,GArDH,kCAzES,IAACuG,IAyEV,sCAAH,wDAwDlBzH,qBAAU,WACR,IAAK6lC,EAAiB,UAAe,CACnC,IAAM5mC,EAAQ4mC,EAAiB,MAC/B,GAAI5mC,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EACvDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,WAS/B6nB,EAAiB,WAClBlzC,OAAOC,KAAKizC,EAAkB1xC,MAAMtB,OAAS,GAEzCgzC,EAAiB,KAAjB,SAUL,CAACA,IAEJ,IAAMvU,EAAe,SAAC5/B,GACpBk/B,EAAqBl/B,IAGjB6/B,GAAkB,SAAC7/B,GACvBg/B,EAAwBh/B,IAG1BsO,qBAAU,YACU,uCAAG,8BAAAE,EAAA,sEACUgxB,EAAuB,IADjC,QACbM,EADa,SAIGA,EAAe3+B,OAAS,IAEtCg+B,EAAiBW,EAAep+B,KAAI,SAAC+F,GACzC,MAAO,CACLzH,MAAOyH,EAAQnH,KACfA,KAAMmH,EAAQnH,SAGlB8+B,EAAkBD,IAZD,2CAAH,qDAgBlBY,KACC,IAEHzxB,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACUkxB,EAAoB,CAC5Cp+B,WAAY,CACVE,aAAc,CACZiG,QAASs3B,MAJC,QACViB,EADU,SAUGA,EAAY7+B,OAAS,IAEhCk+B,EAAcW,EAAYt+B,KAAI,SAACgG,GACnC,MAAO,CACL1H,MAAO0H,EAAKpH,KACZA,KAAMoH,EAAKpH,SAGfg/B,EAAeD,IAlBD,2CAAH,qDAsBfY,KACC,CAAClB,IAEJ,IAAMpW,GAAe,SAACpY,GACpBuO,GAAW,IAUPo1B,GAA0B,WAC9BV,EAAsB,GAAD,oBAChBC,GADgB,CAEnB,CACExrC,aAAc,GACdgC,OAAQ,GACRrH,GAAG,GAAD,OAAK4Y,KAAKw4B,MAAM,IAAyB,IAAhBx4B,KAAKy4B,gBAKtC,OACE,kBAAC,IAAD,CACEtkC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAO7F,KAEnB,gBACC0G,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACE1M,MAAM,cACNmb,QAASA,EACT4D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,UAGZ/G,UAAW,CACTrS,OAAQ,IACRwG,QAAS,SAGX,yBAAKrW,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QACG6P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GAAgBmkC,EAAkB5mC,MAAlB,WAEpBlN,YACG4P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GAAgBmkC,EAAkB5mC,MAAlB,WAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,YAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,mBACNE,MAAOsP,EAAOxF,eACdxJ,KAAK,iBACLF,QACG6P,EAAQnG,gBAAkBiG,EAAOjG,iBAChCkG,GACAmkC,EAAkB5mC,MAAlB,qBAEJlN,YACG4P,EAAQnG,gBAAkBiG,EAAOjG,iBAChCkG,GACAmkC,EAAkB5mC,MAAlB,qBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,uBAMxB,yBACErP,MAAO,CACL6V,YAAa,SAGf,kBAAChX,EAAD,CACEI,MAAM,OACNE,MAAOsP,EAAOhK,KACdhF,KAAK,OACLF,QACG6P,EAAQ3K,MAAQyK,EAAOzK,OACtB0K,GAAgBmkC,EAAkB5mC,MAAlB,WAEpBlN,YACG4P,EAAQ3K,MAAQyK,EAAOzK,OACtB0K,GAAgBmkC,EAAkB5mC,MAAlB,WAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,YAKtB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,mBAAd,WACA,kBAAC,KAAD,CACEyY,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,mBACZoY,iBAAiB,WACjBlZ,aAAcmJ,GAAYA,EAAS3B,QACnCvH,SAAU2/B,GACVzmB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOtV,SACJuV,cACAjX,QAAQ+W,EAAME,gBAAkB,IAGpCgmB,EAAiB1xB,MAChB0xB,EAAiB98B,KAAKtB,OAAS,GAC/Bg+B,EAAez9B,KAAI,SAAC4X,GAClB,OACE,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,WAK/C,yBAAKG,UAAU,yBACb,wBAAIA,UAAU,mBAAd,QACA,kBAAC,KAAD,CACEyY,YAAU,EACVrY,MAAO,CAAE4R,MAAO,QAChB1R,YAAY,gBACZoY,iBAAiB,WACjBlZ,aAAcmJ,GAAYA,EAAS1B,KACnCxH,SAAU0/B,EACVxmB,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOtV,SACJuV,cACAjX,QAAQ+W,EAAME,gBAAkB,IAGpCkmB,EAAc5xB,MACb4xB,EAAch9B,KAAKtB,OAAS,GAC5Bk+B,EAAY39B,KAAI,SAAC4X,GACf,OACE,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAOjD,yBACEO,MAAO,CACL0V,UAAW,UAGf,wBAAI9V,UAAU,mBAAd,oBAECgzC,EAAmB/xC,KAAI,SAAC6xC,GAEvB,OADA1xC,QAAQC,IAAI,4BAA6ByxC,GAEvC,kBAAC,GAAD,CACEA,mBAAoBA,EACpBE,mBAAoBA,EACpBD,sBAAuBA,OAK7B,yBACE3yC,MAAO,CACL0V,UAAW,SAGf,kBAAC,IAAD,CACEiD,KAAK,SACLhJ,QAAS0jC,GACTn0C,KAAK,SACLsD,KAAM,kBAACiiB,GAAA,EAAD,OAJR,oBCpbJ1I,GAAwBC,KAAxBD,OACA+N,IADwB9N,KAAhBC,YACGpd,IAAXirB,QAgCFC,GAAU,SAAC,GAA+C,IAA9CnoB,EAA6C,EAA7CA,KAAK4jC,EAAwC,EAAxCA,cAAe90B,EAAyB,EAAzBA,MAAyB,EAC9Be,oBAAS,GADqB,mBACpDuM,EADoD,KAC5CC,EAD4C,OAEFxM,oBAAS,GAFP,mBAEpDuY,EAFoD,KAE9BC,EAF8B,OAGPnc,EAAe,GAAI,gBAHZ,mBAGjC4lC,GAHiC,WAMnDC,EAAkB,uCAAG,WAAO5xC,GAAP,iBAAA4L,EAAA,sEACK+lC,EAAuB,CACnDjzC,WAAY,CACVE,aAAc,CACZoB,SAJmB,QACnB6xC,EADmB,SAUoB,OAA3BA,EAAgBtuC,SA5CT4P,EA6CJ,iBA5C5BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,iBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BA0CnCy+B,EAAiBjyC,EAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAKU,KAAOA,KACvDyjC,EAAcqO,IAbc,iCAlCD,IAAC3+B,IAkCA,OAAH,sDAmB1B,OACI,oCACA,kBAAC,KAAD,CAMAyD,KAAK,QAEL8D,WAAY7a,GAGV,kBAAC,GAAD,CACCiB,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,yBAKrB,kBAAC,GAAD,CACWiD,MAAM,mBACNga,UAAU,iBACV5a,IAAI,KACJrC,UAAU,yBAOrB,kBAAC,GAAD,CACWiD,MAAM,UACNga,UAAU,cACV5a,IAAI,KACJrC,UAAU,yBAKrB,kBAAC,GAAD,CACWiD,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,yBAIrB,kBAAC,GAAD,CACWiD,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,yBAKrB,kBAAC,GAAD,CACWiD,MAAM,SACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,yBAiCpBgR,GAAS,eAAeF,IAChB,kBAAC,GAAD,CAEI9Q,UAAU,uBACRiD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UAEZ,uBAAGvC,KAAK,MACL,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,eAChC,0BAAMjD,UAAU,WAAW+P,QAAS,WAClCsO,GAAW,GACXgM,EAAyBlN,KAE3B,kBAACyN,GAAA,EAAD,SAQC,kBAAC,KAAD,CAEA7H,UAAW,kBAAMgxB,EAAmB52B,EAAOhb,KAC3Cc,MAAM,qBAAgBkf,OAAO,MAAMa,WAAW,MAElD,0BACEhjB,UAAU,4BAEV,kBAAC4iB,GAAA,EAAD,aAkBbwH,GAA2B,kBAAC,GAAD,CAC5B/L,WAAYA,EACZD,QAASA,EACTzV,SAAUyhB,EACVub,WAAY3jC,EACZ4jC,cAAeA,MA8IJh0B,gBALS,SAAA3E,GAAK,MAAK,CAChC6D,MAAO7D,EAAM2D,eAIyB,KAAzBgB,EA9HM,SAAC,GAAoB,IAAnBd,EAAkB,EAAlBA,MAAkB,EAEFe,mBAAS,IAFP,mBAE9B8zB,EAF8B,KAEnBC,EAFmB,OAIQ13B,EAAe,GAAI,cAJ3B,mBAI9BgmC,EAJ8B,KAIjBrO,EAJiB,KAOrCh4B,qBAAU,YACO,uCAAG,4BAAAE,EAAA,sEACK83B,EAAsB,CAC3ChlC,WAAY,CACVC,OAAQ,CACNiU,SAAU,QACVC,eAAgB,SALJ,OACXywB,EADW,OAUjBG,EAAcH,GAVG,2CAAH,qDAYhBM,KACC,IArBmC,MAwBkBl0B,oBAAS,GAxB3B,mBAwBhC6T,EAxBgC,KAwBVC,EAxBU,KA0BvCvkB,QAAQC,IAAI,cAAc6yC,GAa3B,OACC,oCAIE,yBAAKl0C,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,WAKA,kBAAC,GAAD,CACEqrB,aAAa,EACbrrB,UAAU,qBACZM,YAAY,mBACZquB,SAAU,SAAApvB,GAAK,OA7BF,SAACA,GACpB,GAAG20C,EAAYlyC,KAAKtB,OAAS,EAAG,CAC9B,IAAMk1B,EAAase,EAAYlyC,KAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBAC1F8sB,EAAchQ,IA0BStK,CAAa/rB,OAK/ByR,GAAS,eAAeF,IAEpB,kBAAC,IAAD,CAEA9Q,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJxC,YAcH,yBAAK3lB,UAAU,uCAWxB,yBAAKA,UAAU,uCACTk0C,EAAY9mC,MAAQu4B,EAAWjlC,OAAS,GAAK,kBAAC,GAAD,CAC9CoQ,MAAOA,EACP80B,cAAeA,EACf5jC,KAAM2jC,IACLuO,EAAY/mC,WAAa,kBAACoe,GAAD,MAEzB2oB,EAAY9mC,QAAUu4B,EAAWjlC,OAAS,IACjD,kBAAC,GAAD,CAAOuC,MAAM,sBAOdixC,EAAY9mC,MACT,kBAAC,GAAD,CACMsY,sBAAuBA,EACvBC,yBAA0BA,EAC1BggB,WAAYuO,EAAYlyC,KACxB4jC,cAAeA,Q,UC9TnBz3B,GAAmBC,MAAaC,MAAM,IAUtCwT,GAAwB,SAACvM,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAqBvCyB,GAAWC,KAAXD,OA8tBOk9B,GA1tBO,SAAC,GAAe,qBAIhCjmC,EAAe,GAAI,uBAJY,mBAEjCkmC,EAFiC,KAGjCC,EAHiC,OAQ/BnmC,EAAe,GAAI,gBARY,mBAMjComC,EANiC,KAOjCC,EAPiC,OAUW1iC,oBAAS,GAVpB,mBAU5B2iC,EAV4B,KAUXC,EAVW,OAWS5iC,oBAAS,GAXlB,mBAW5B6iC,EAX4B,KAWZC,EAXY,OAYe9iC,mBAAS,IAZxB,mBAY5B+iC,EAZ4B,KAYTC,EAZS,OAaPhjC,mBAAS,IAbF,mBAa5BzF,EAb4B,KAapB0oC,EAboB,OAcHjjC,mBAAS,IAdN,mBAc5BkjC,EAd4B,KAclBC,EAdkB,KAgBnC5zC,QAAQC,IAAI,6BAA8B+yC,GAE1CvmC,qBAAU,YACmB,uCAAG,4BAAAE,EAAA,sEACVsmC,EAAiC,IADvB,QACtBznC,EADsB,UAK1BioC,EAAqBjoC,GACrB6nC,EAAmB7nC,EAAG,gBACtBkoC,EAAUloC,EAAG,QACbooC,EAAYpoC,EAAG,WARW,2CAAH,qDAW3BqoC,KACC,IAEH7zC,QAAQC,IAAI,6BAA8B+K,GAE1C,IAAMwC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACKwmC,EAA8B,CACpDzuC,KAAM,CACJlF,IAAKiO,EAAOjO,IACZm0C,SAAUA,EACV3oC,OAAQA,EACR8oC,eAAgBV,EAChBW,WAAY,CACVhtC,UAAW,CACT9F,IAAKwM,EAAOumC,aACZC,aAAcX,EACdY,UAAWzmC,EAAOymC,WAEpBrxC,KAAM,CACJ5B,IAAKwM,EAAO0mC,SAEdC,KAAM,CACJnzC,IAAKwM,EAAO4mC,QACZl2C,MAAOsP,EAAO6mC,WAEhBR,eAAgB,CACd5mC,SAAU,CACRjM,IAAKwM,EAAO8mC,YACZp2C,MAAOsP,EAAO+mC,eAEhBrnC,SAAU,CACRlM,IAAKwM,EAAOgnC,YACZt2C,MAAOsP,EAAOinC,gBAGlBC,WAAY,CACVC,QAASnnC,EAAOonC,uBA/BL,QACb1Z,EADa,SAsCFA,EAAU72B,OAK3BoJ,EAAQC,eAAc,GA3CH,2CAAH,wDAuDlBlB,qBAAU,WACR,IAAKymC,EAAuB,UAAe,CACzC,IAAMxnC,EAAQwnC,EAAuB,MACrC,GAAIxnC,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EACvDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,UAtJN,IAACvW,GA+J1Bg/B,EAAuB,WACxB9zC,OAAOC,KAAK6zC,EAAwBtyC,MAAMtB,OAAS,GAED,OAA9C4zC,EAAuB,KAAvB,SAlKuBh/B,EAmKD,wBAlK9BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,cACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,iCAyK1C,CAAC8+B,IAEJ,IAAM4B,EAA4B,SAACpmC,GACjC2kC,EAAmB3kC,EAAEzE,OAAO4c,UAGxBkuB,EAAmB,CACvB,CACEt2C,KAAM,OACNN,MAAO,QAET,CACEM,KAAM,QACNN,MAAO,UAIL62C,EAAgB,CACpB,CACEv2C,KAAM,MACNN,MAAO,OAET,CACEM,KAAM,OACNN,MAAO,SAIL82C,EAAqB,SAAC92C,GAC1B6B,QAAQC,IAAI,gBAAiB9B,GAC7Bu1C,EAAUv1C,IAGN+2C,EAAuB,SAAC/2C,GAC5By1C,EAAYz1C,IAoBd,OACE,kBAAC,IAAD,CACE2P,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAvBK,CACpB5N,IAAK,GACLm0C,SAAU,GACV3oC,OAAQ,GACR+oC,WAAY,GACZC,aAAc,GACdE,UAAW,GACXC,QAAS,GACTE,QAAS,GACTC,UAAW,GACXC,YAAa,GACbC,cAAe,GACfC,YAAa,GACbC,cAAe,GACfG,kBAAmB,IASJ,GAERrB,EAFQ,GAGPA,GACFp0C,OAAOC,KAAKm0C,GAAmBl0C,OAAS,GAAK,CAC3C00C,aACER,EAAiB,YACjBA,EAAiB,WAAezsC,WAChCysC,EAAiB,WAAezsC,UAAU9F,IAC5CizC,UACEV,EAAiB,YACjBA,EAAiB,WAAezsC,WAChCysC,EAAiB,WAAezsC,UAAUmtC,UAC5CC,QACEX,EAAiB,YACjBA,EAAiB,WAAe3wC,MAChC2wC,EAAiB,WAAe3wC,KAAK5B,IACvCozC,QACEb,EAAiB,YACjBA,EAAiB,WAAeY,MAChCZ,EAAiB,WAAeY,KAAKnzC,IACvCqzC,UACEd,EAAiB,YACjBA,EAAiB,WAAeY,MAChCZ,EAAiB,WAAeY,KAAKj2C,MACvCo2C,YACEf,EAAiB,YACjBA,EAAiB,WAAeM,gBAChCN,EAAiB,WAAeM,eAAe5mC,UAC/CsmC,EAAiB,WAAeM,eAAe5mC,SAASjM,IAC1DuzC,cACEhB,EAAiB,YACjBA,EAAiB,WAAeM,gBAChCN,EAAiB,WAAeM,eAAe5mC,UAC/CsmC,EAAiB,WAAeM,eAAe5mC,SAAS/O,MAC1Ds2C,YACEjB,EAAiB,YACjBA,EAAiB,WAAeM,gBAChCN,EAAiB,WAAeM,eAAe3mC,UAC/CqmC,EAAiB,WAAeM,eAAe3mC,SAASlM,IAC1DyzC,cACElB,EAAiB,YACjBA,EAAiB,WAAeM,gBAChCN,EAAiB,WAAeM,eAAe3mC,UAC/CqmC,EAAiB,WAAeM,eAAe3mC,SAAShP,MAC1D02C,kBACErB,EAAiB,YACjBA,EAAiB,WAAemB,YAChCnB,EAAiB,WAAemB,WAAWC,YAIlD,gBACC3mC,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,yBACEvP,MAAO,CACL8T,QAAS,OACTC,eAAgB,kBAGlB,yBACE/T,MAAO,CACL4R,MAAO,QAGT,kBAAC/S,EAAD,CACEI,MAAM,MACNE,MAAOsP,EAAOjO,IACdf,KAAK,MACLF,QACG6P,EAAQ5O,KAAO0O,EAAO1O,MACrB2O,GACA+kC,EAAwBxnC,MAAxB,UAEJlN,YACG4P,EAAQ5O,KAAO0O,EAAO1O,MACrB2O,GACA+kC,EAAwBxnC,MAAxB,UAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,WAItB,yBACErP,MAAO,CACL4R,MAAO,QAGT,wBAAIhS,UAAU,mBAAd,YACA,kBAAC,KAAD,CACEyY,YAAU,EACVrY,MAAO,CAAE4R,MAAO,OAAQ3R,aAAc,OACtCC,YAAY,oBACZd,aAAcu1C,EACdx1C,MAAOw1C,EACPt1C,SAAU62C,GAETH,EAAiBl1C,KAAI,SAAC4X,GACrB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YAMpD,yBACEO,MAAO,CACL8T,QAAS,OACTC,eAAgB,kBAGlB,yBACE/T,MAAO,CACL4R,MAAO,QAGT,wBAAIhS,UAAU,mBAAd,UAEA,kBAAC,KAAD,CACEP,SAAU42C,EACV59B,YAAU,EACVrY,MAAO,CAAE4R,MAAO,OAAQ3R,aAAc,OACtCC,YAAY,kBACZd,aAAc4M,EACd7M,MAAO6M,GAENgqC,EAAcn1C,KAAI,SAAC4X,GAClB,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,WAIlD,yBACEO,MAAO,CACL4R,MAAO,UAKb,yBACE5R,MAAO,CACL0V,UAAW,UAGf,wBAAI1V,MAAO,GAAIJ,UAAU,kCAAzB,cAIA,wBAAIA,UAAU,mBAAd,aACA,yBACEI,MAAO,CACL8T,QAAS,OACTC,eAAgB,gBAChBC,WAAY,WAGd,yBACEhU,MAAO,CACL4R,MAAO,QAGT,kBAACihB,GAAD,CACE5zB,MAAM,MACNE,MAAOsP,EAAOumC,aACdv1C,KAAK,eACLF,QACG6P,EAAQ4lC,cAAgB9lC,EAAO8lC,eAC9B7lC,GACA+kC,EAAwBxnC,MAAxB,mBAEJlN,YACG4P,EAAQ4lC,cAAgB9lC,EAAO8lC,eAC9B7lC,GACA+kC,EAAwBxnC,MAAxB,mBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,oBAKtB,yBACErP,MAAO,CACL4R,MAAO,MACP+D,WAAY,SAGd,kBAAC,KAAD,CACExW,MAAOm1C,EACPj1C,SAAU,SAACqQ,GAAD,OAAO6kC,EAAkB7kC,EAAEzE,OAAO4c,WAE5C,0BAAMjoB,UAAU,sBAAhB,mBAIJ,yBACEI,MAAO,CACL4R,MAAO,QAGR0iC,GACC,kBAACzhB,GAAD,CACE5zB,MAAM,YACNE,MAAOsP,EAAOymC,UACdz1C,KAAK,YACLF,QACG6P,EAAQ8lC,WAAahmC,EAAOgmC,YAC3B/lC,GACA+kC,EAAwBxnC,MAAxB,gBAEJlN,YACG4P,EAAQ8lC,WAAahmC,EAAOgmC,YAC3B/lC,GACA+kC,EAAwBxnC,MAAxB,gBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAO1B,wBAAIzP,UAAU,mBAAd,QACA,kBAACizB,GAAD,CACE5zB,MAAM,YACNE,MAAOsP,EAAO0mC,QACd11C,KAAK,UACLF,QACG6P,EAAQ+lC,SAAWjmC,EAAOimC,UACzBhmC,GACA+kC,EAAwBxnC,MAAxB,cAEJlN,YACG4P,EAAQ+lC,SAAWjmC,EAAOimC,UACzBhmC,GACA+kC,EAAwBxnC,MAAxB,cAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,cAIpB,yBACErP,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,QACA,yBACEI,MAAO,CACL8T,QAAS,OACTC,eAAgB,gBAChBC,WAAY,WAGd,yBACEhU,MAAO,CACL4R,MAAO,QAGT,kBAACihB,GAAD,CACE5zB,MAAM,MACNE,MAAOsP,EAAO4mC,QACd51C,KAAK,UACLF,QACG6P,EAAQimC,SAAWnmC,EAAOmmC,UACzBlmC,GACA+kC,EAAwBxnC,MAAxB,cAEJlN,YACG4P,EAAQimC,SAAWnmC,EAAOmmC,UACzBlmC,GACA+kC,EAAwBxnC,MAAxB,cAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,eAItB,yBACErP,MAAO,CACL4R,MAAO,QAGT,kBAACihB,GAAD,CACE5zB,MAAM,QACNE,MAAOsP,EAAO6mC,UACd71C,KAAK,YACLF,QACG6P,EAAQkmC,WAAapmC,EAAOomC,YAC3BnmC,GACA+kC,EAAwBxnC,MAAxB,gBAEJlN,YACG4P,EAAQkmC,WAAapmC,EAAOomC,YAC3BnmC,GACA+kC,EAAwBxnC,MAAxB,gBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAMxB,yBACErP,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,YACA,yBACEI,MAAO,CACL8T,QAAS,OACTC,eAAgB,gBAChBC,WAAY,WAGd,yBACEhU,MAAO,CACL4R,MAAO,QAGT,kBAACihB,GAAD,CACE5zB,MAAM,MACNE,MAAOsP,EAAO8mC,YACd91C,KAAK,cACLF,QACG6P,EAAQmmC,aAAermC,EAAOqmC,cAC7BpmC,GACA+kC,EAAwBxnC,MAAxB,kBAEJlN,YACG4P,EAAQmmC,aAAermC,EAAOqmC,cAC7BpmC,GACA+kC,EAAwBxnC,MAAxB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,mBAItB,yBACErP,MAAO,CACL4R,MAAO,QAGT,kBAACihB,GAAD,CACE5zB,MAAM,QACNE,MAAOsP,EAAO+mC,cACd/1C,KAAK,gBACLF,QACG6P,EAAQomC,eAAiBtmC,EAAOsmC,gBAC/BrmC,GACA+kC,EAAwBxnC,MAAxB,oBAEJlN,YACG4P,EAAQomC,eAAiBtmC,EAAOsmC,gBAC/BrmC,GACA+kC,EAAwBxnC,MAAxB,oBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,sBAMxB,yBACErP,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,YACA,yBACEI,MAAO,CACL8T,QAAS,OACTC,eAAgB,gBAChBC,WAAY,WAGd,yBACEhU,MAAO,CACL4R,MAAO,QAGT,kBAACihB,GAAD,CACE5zB,MAAM,MACNE,MAAOsP,EAAOgnC,YACdh2C,KAAK,cACLF,QACG6P,EAAQqmC,aAAevmC,EAAOumC,cAC7BtmC,GACA+kC,EAAwBxnC,MAAxB,kBAEJlN,YACG4P,EAAQqmC,aAAevmC,EAAOumC,cAC7BtmC,GACA+kC,EAAwBxnC,MAAxB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,mBAItB,yBACErP,MAAO,CACL4R,MAAO,QAGT,kBAACihB,GAAD,CACE5zB,MAAM,QACNE,MAAOsP,EAAOinC,cACdj2C,KAAK,gBACLF,QACG6P,EAAQsmC,eAAiBxmC,EAAOwmC,gBAC/BvmC,GACA+kC,EAAwBxnC,MAAxB,oBAEJlN,YACG4P,EAAQsmC,eAAiBxmC,EAAOwmC,gBAC/BvmC,GACA+kC,EAAwBxnC,MAAxB,oBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,sBAMxB,yBACErP,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,cACA,yBACEI,MAAO,CACL8T,QAAS,OACTC,eAAgB,gBAChBC,WAAY,WAGd,yBACEhU,MAAO,CACL4R,MAAO,QAGT,kBAACihB,GAAD,CACE5zB,MAAM,WACNE,MAAOsP,EAAOonC,kBACdp2C,KAAK,oBACLF,QACG6P,EAAQymC,mBAAqB3mC,EAAO2mC,oBACnC1mC,GACA+kC,EAAwBxnC,MAAxB,wBAEJlN,YACG4P,EAAQymC,mBAAqB3mC,EAAO2mC,oBACnC1mC,GACA+kC,EAAwBxnC,MAAxB,wBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,yBAItB,yBACErP,MAAO,CACL4R,MAAO,UAKb,kBAAC,KAAD,CACEzS,MAAOi1C,EACP/0C,SAAUy2C,GAEV,0BAAMl2C,UAAU,sBAAhB,mBAGF,yBACEI,MAAO,CACL0V,UAAW,UAGf,yBACE1V,MAAO,CACL8T,QAAS,QACT+G,aAAc,OACdnF,UAAW,SAGb,kBAAC,IAAD,CACE/F,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAASskC,EAAwBnnC,UACjCnN,UAAU,8BAHZ,kCC5uBJge,IAPiB5P,MAAaC,MAAM,CAC1CxO,KAAMuO,MACH/O,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAGQke,KAAZD,SAUF6D,GAAwB,SAACvM,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAgXhC2gB,GAlWK,SAAC,GAAoC,IAAlC/X,EAAiC,EAAjCA,QAASm4B,EAAwB,EAAxBA,WAAwB,EACIroC,EACxD,GACA,4BAHoD,mBAC/CsoC,EAD+C,KAC5BC,EAD4B,OAQlDvoC,EAAe,GAAI,+BAR+B,gCAUtB2D,mBAAS,CACvCzJ,QAAS,GACTtC,KAAM,MAZ8C,mBAU/C6C,EAV+C,KAUrC+tC,EAVqC,OAe5B7kC,mBAAS,CACjCzJ,QAAS,GACTtC,KAAM,KAjB8C,mBAe/C6wC,EAf+C,KAexCC,EAfwC,KAoBhDhoC,EAAY,uCAAG,4BAAAb,EAAA,sEACgC0oC,EACjD,CACE3wC,KAAM,CACJwC,MAAO,cACPK,SAAS,eACJA,GAELguC,MAAM,eACDA,MATQ,QACbE,EADa,SAoB+B,OAAhDA,EAAqCnxC,QAlEV4P,OAoE3B4I,EAnEJ7I,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,gCACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAiEzC+gC,GAAW,IAEX10B,KAzBiB,iCA9CS,IAACvM,IA8CV,OAAH,qDA6BlBzH,qBAAU,YACkB,uCAAG,sBAAAE,EAAA,sEACT0oC,EAA6B,CAC7C51C,WAAY,CACVE,aAAc,CACZ+1C,UAAW,kBAJU,yDAAH,qDAW1BC,KACC,IAMH,OACE,kBAAC,KAAD,CACE/kC,MAAO,OACP5R,MAAO,CACL2hB,IAAK,QAEP9e,MAAM,8BACNmb,QAASA,EACT4D,KAAM,SAAClS,GAAD,OAAYlB,KAClBqT,SAbiB,SAACnS,GACpBymC,GAAW,IAaTp0B,OAAO,SACP6G,cAAe,CACbhZ,QAASwmC,EAAkBrpC,UAC3B8b,SAAU,UAGZ/G,UAAW,CACTrS,OAAQ,OACRwG,QAAS,QAEXiuB,QAAQ,GAER,kBAAC,KAAD,CAAMliB,iBAAiB,KACrB,kBAAC,GAAD,CAASC,IAAI,WAAWhgB,IAAI,KAC1B,yBACEjC,MAAO,CACL8T,QAAS,SAGX,yBACE9T,MAAO,CACL4R,MAAO,QAGT,kBAAC/S,EAAD,CACEI,MAAM,UACNE,MAAOoJ,EAASP,QAChBvI,KAAK,UACLJ,SAAU,SAACqQ,GACT4mC,EAAY,eACP/tC,EADM,CAETP,QAAS0H,EAAEzE,OAAO9L,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACE6yB,OAAQC,KACR9wB,KAAM2G,EAAS7C,KACfitB,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpB0jB,EAAY,eACP/tC,EADM,CAET7C,KAAM9D,MAGVqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,MAI1B,yBACEzyB,MAAO,CACL8T,QAAS,QACT+G,aAAc,OACdnF,UAAW,SAGb,kBAAC,IAAD,CACE/F,QAASnB,EACToB,QAASwmC,EAAkBrpC,UAC3BnN,UAAU,8BAHZ,qBAUJ,yBACEI,MAAO,CACL4R,MAAO,MACPglC,UAAW,OACXthC,WAAY,UACZK,WAAY,OACZM,QAAS,OACThW,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLmW,SAAU,SAFd,iFAQA,wBACEnW,MAAO,CACLiW,QAAS,SAGX,wBACEjW,MAAO,CACLmW,SAAU,OACV0E,aAAc,OACdooB,WAAY,IACZvsB,WAAY,MAGd,uBACE1W,MAAO,CACLC,aAAc,OACd+V,gBAAiB,OACjBC,QAAS,aAJb,sBAQK,IAhBP,cAmBA,wBACEjW,MAAO,CACLmW,SAAU,OACV8sB,WAAY,EACZvsB,WAAY,MAGd,uBACE1W,MAAO,CACLC,aAAc,OACd+V,gBAAiB,OACjBC,QAAS,aAJb,mCAQK,IAfP,2BAuBR,kBAAC,GAAD,CAASgM,IAAI,QAAQhgB,IAAI,KACvB,yBACEjC,MAAO,CACL8T,QAAS,SAGX,yBACE9T,MAAO,CACL4R,MAAO,QAGT,kBAAC/S,EAAD,CACEI,MAAM,UACNE,MAAOo3C,EAAMvuC,QACbvI,KAAK,UACLJ,SAAU,SAACqQ,GACT8mC,EAAS,eACJD,EADG,CAENvuC,QAAS0H,EAAEzE,OAAO9L,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACE6yB,OAAQC,KACR9wB,KAAM20C,EAAM7wC,KACZitB,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpB4jB,EAAS,eACJD,EADG,CAEN7wC,KAAM9D,MAGVqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,MAI1B,yBACEzyB,MAAO,CACL8T,QAAS,QACT+G,aAAc,OACdnF,UAAW,SAGb,kBAAC,IAAD,CACE/F,QAASnB,EACToB,QAASwmC,EAAkBrpC,UAC3BnN,UAAU,8BAHZ,qBASJ,yBACEI,MAAO,CACL4R,MAAO,MACPglC,UAAW,OACXthC,WAAY,UACZK,WAAY,OACZM,QAAS,OACThW,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLmW,SAAU,SAFd,iFAQA,wBACEnW,MAAO,CACLiW,QAAS,SAGX,wBACEjW,MAAO,CACLmW,SAAU,OACV0E,aAAc,OACdooB,WAAY,IACZvsB,WAAY,MAGd,uBACE1W,MAAO,CACLC,aAAc,OACd+V,gBAAiB,OACjBC,QAAS,aAJb,sBAQK,IAhBP,cAmBA,wBACEjW,MAAO,CACLmW,SAAU,OACV8sB,WAAY,EACZvsB,WAAY,MAGd,uBACE1W,MAAO,CACLC,aAAc,OACd+V,gBAAiB,OACjBC,QAAS,aAJb,mCAQK,IAfP,8BCtWR2H,IAJiB5P,MAAaC,MAAM,IAIxB4P,KAAZD,SAUF6D,GAAwB,SAACvM,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAiXhC2gB,GAnWK,SAAC,GAAoC,IAAlC/X,EAAiC,EAAjCA,QAASm4B,EAAwB,EAAxBA,WAAwB,EACIroC,EACxD,GACA,4BAHoD,mBAC/CsoC,EAD+C,KAC5BC,EAD4B,OAQlDvoC,EAAe,GAAI,+BAR+B,gCAUtB2D,mBAAS,CACvCzJ,QAAS,GACTtC,KAAM,MAZ8C,mBAU/C6C,EAV+C,KAUrC+tC,EAVqC,OAe5B7kC,mBAAS,CACjCzJ,QAAS,GACTtC,KAAM,KAjB8C,mBAe/C6wC,EAf+C,KAexCC,EAfwC,KAoBhDhoC,EAAY,uCAAG,4BAAAb,EAAA,sEACgC0oC,EACjD,CACE3wC,KAAM,CACJwC,MAAO,cACPK,SAAS,eACJA,GAELguC,MAAM,eACDA,MATQ,QACbE,EADa,SAoB+B,OAAhDA,EAAqCnxC,QAlEV4P,OAoE3B4I,EAnEJ7I,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,gCACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAiEzC+gC,GAAW,IAEX10B,KAzBiB,iCA9CS,IAACvM,IA8CV,OAAH,qDA6BlBzH,qBAAU,YACkB,uCAAG,sBAAAE,EAAA,sEACT0oC,EAA6B,CAC7C51C,WAAY,CACVE,aAAc,CACZ+1C,UAAW,kBAJU,yDAAH,qDAW1BC,KACC,IAMH,OACE,kBAAC,KAAD,CACE/kC,MAAO,OACP5R,MAAO,CACL2hB,IAAK,QAEP9e,MAAM,wBACNmb,QAASA,EACT4D,KAAM,SAAClS,GAAD,OAAYlB,KAClBqT,SAbiB,SAACnS,GACpBymC,GAAW,IAaTp0B,OAAO,SACP6G,cAAe,CACbhZ,QAASwmC,EAAkBrpC,UAC3B8b,SAAU,UAGZ/G,UAAW,CACTrS,OAAQ,OACRwG,QAAS,QAEXiuB,QAAQ,GAER,kBAAC,KAAD,CAAMliB,iBAAiB,KACrB,kBAAC,GAAD,CAASC,IAAI,WAAWhgB,IAAI,KAC1B,yBACEjC,MAAO,CACL8T,QAAS,SAGX,yBACE9T,MAAO,CACL4R,MAAO,QAGT,kBAAC/S,EAAD,CACEI,MAAM,UACNE,MAAOoJ,EAASP,QAChBvI,KAAK,UACLJ,SAAU,SAACqQ,GACT4mC,EAAY,eACP/tC,EADM,CAETP,QAAS0H,EAAEzE,OAAO9L,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACE6yB,OAAQC,KACR9wB,KAAM2G,EAAS7C,KACfitB,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpB0jB,EAAY,eACP/tC,EADM,CAET7C,KAAM9D,MAGVqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,MAI1B,yBACEzyB,MAAO,CACL8T,QAAS,QACT+G,aAAc,OACdnF,UAAW,SAGb,kBAAC,IAAD,CACE/F,QAASnB,EACToB,QAASwmC,EAAkBrpC,UAC3BnN,UAAU,8BAHZ,qBAUJ,yBACEI,MAAO,CACL4R,MAAO,MACPglC,UAAW,OACXthC,WAAY,UACZK,WAAY,OACZM,QAAS,OACThW,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLmW,SAAU,SAFd,iFAQA,wBACEnW,MAAO,CACLiW,QAAS,SAGX,wBACEjW,MAAO,CACLmW,SAAU,OACV0E,aAAc,OACdooB,WAAY,IACZvsB,WAAY,MAGd,uBACE1W,MAAO,CACLC,aAAc,OACd+V,gBAAiB,OACjBC,QAAS,aAJb,sBAQK,IAhBP,cAmBA,wBACEjW,MAAO,CACLmW,SAAU,OACV8sB,WAAY,EACZvsB,WAAY,MAGd,uBACE1W,MAAO,CACLC,aAAc,OACd+V,gBAAiB,OACjBC,QAAS,aAJb,mCAQK,IAfP,2BAuBR,kBAAC,GAAD,CAASgM,IAAI,QAAQhgB,IAAI,KACvB,yBACEjC,MAAO,CACL8T,QAAS,SAGX,yBACE9T,MAAO,CACL4R,MAAO,QAGT,kBAAC/S,EAAD,CACEI,MAAM,UACNE,MAAOo3C,EAAMvuC,QACbvI,KAAK,UACLJ,SAAU,SAACqQ,GACT8mC,EAAS,eACJD,EADG,CAENvuC,QAAS0H,EAAEzE,OAAO9L,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACE6yB,OAAQC,KACR9wB,KAAM20C,EAAM7wC,KACZitB,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpB4jB,EAAS,eACJD,EADG,CAEN7wC,KAAM9D,MAGVqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,MAI1B,yBACEzyB,MAAO,CACL8T,QAAS,QACT+G,aAAc,OACdnF,UAAW,SAGb,kBAAC,IAAD,CACE/F,QAASnB,EACToB,QAASwmC,EAAkBrpC,UAC3BnN,UAAU,8BAHZ,qBAUJ,yBACEI,MAAO,CACL4R,MAAO,MACPglC,UAAW,OACXthC,WAAY,UACZK,WAAY,OACZM,QAAS,OACThW,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLmW,SAAU,SAFd,iFAQA,wBACEnW,MAAO,CACLiW,QAAS,SAGX,wBACEjW,MAAO,CACLmW,SAAU,OACV0E,aAAc,OACdooB,WAAY,IACZvsB,WAAY,MAGd,uBACE1W,MAAO,CACLC,aAAc,OACd+V,gBAAiB,OACjBC,QAAS,aAJb,sBAQK,IAhBP,cAmBA,wBACEjW,MAAO,CACLmW,SAAU,OACV8sB,WAAY,EACZvsB,WAAY,MAGd,uBACE1W,MAAO,CACLC,aAAc,OACd+V,gBAAiB,OACjBC,QAAS,aAJb,mCAQK,IAfP,8BCjWR2H,IAPiB5P,MAAaC,MAAM,CAC1CxO,KAAMuO,MACH/O,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAGQke,KAAZD,SAUF6D,GAAwB,SAACvM,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAgXhC2gB,GAlWK,SAAC,GAAoC,IAAlC/X,EAAiC,EAAjCA,QAASm4B,EAAwB,EAAxBA,WAAwB,EACIroC,EACxD,GACA,4BAHoD,mBAC/CsoC,EAD+C,KAC5BC,EAD4B,OAQlDvoC,EAAe,GAAI,+BAR+B,gCAUtB2D,mBAAS,CACvCzJ,QAAS,GACTtC,KAAM,MAZ8C,mBAU/C6C,EAV+C,KAUrC+tC,EAVqC,OAe5B7kC,mBAAS,CACjCzJ,QAAS,GACTtC,KAAM,KAjB8C,mBAe/C6wC,EAf+C,KAexCC,EAfwC,KAoBhDhoC,EAAY,uCAAG,4BAAAb,EAAA,sEACgC0oC,EACjD,CACE3wC,KAAM,CACJwC,MAAO,QACPK,SAAS,eACJA,GAELguC,MAAM,eACDA,MATQ,QACbE,EADa,SAoB+B,OAAhDA,EAAqCnxC,QAlEV4P,OAoE3B4I,EAnEJ7I,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,gCACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAiEzC+gC,GAAW,IAEX10B,KAzBiB,iCA9CS,IAACvM,IA8CV,OAAH,qDA6BlBzH,qBAAU,YACkB,uCAAG,sBAAAE,EAAA,sEACT0oC,EAA6B,CAC7C51C,WAAY,CACVE,aAAc,CACZ+1C,UAAW,YAJU,yDAAH,qDAW1BC,KACC,IAMH,OACE,kBAAC,KAAD,CACE/kC,MAAO,OACP5R,MAAO,CACL2hB,IAAK,QAEP9e,MAAM,uBACNmb,QAASA,EACT4D,KAAM,SAAClS,GAAD,OAAYlB,KAClBqT,SAbiB,SAACnS,GACpBymC,GAAW,IAaTp0B,OAAO,SACP6G,cAAe,CACbhZ,QAASwmC,EAAkBrpC,UAC3B8b,SAAU,UAGZ/G,UAAW,CACTrS,OAAQ,OACRwG,QAAS,QAEXiuB,QAAQ,GAER,kBAAC,KAAD,CAAMliB,iBAAiB,KACrB,kBAAC,GAAD,CAASC,IAAI,WAAWhgB,IAAI,KAC1B,yBACEjC,MAAO,CACL8T,QAAS,SAGX,yBACE9T,MAAO,CACL4R,MAAO,QAGT,kBAAC/S,EAAD,CACEI,MAAM,UACNE,MAAOoJ,EAASP,QAChBvI,KAAK,UACLJ,SAAU,SAACqQ,GACT4mC,EAAY,eACP/tC,EADM,CAETP,QAAS0H,EAAEzE,OAAO9L,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACE6yB,OAAQC,KACR9wB,KAAM2G,EAAS7C,KACfitB,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpB0jB,EAAY,eACP/tC,EADM,CAET7C,KAAM9D,MAGVqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,MAI1B,yBACEzyB,MAAO,CACL8T,QAAS,QACT+G,aAAc,OACdnF,UAAW,SAGb,kBAAC,IAAD,CACE/F,QAASnB,EACToB,QAASwmC,EAAkBrpC,UAC3BnN,UAAU,8BAHZ,qBAUJ,yBACEI,MAAO,CACL4R,MAAO,MACPglC,UAAW,OACXthC,WAAY,UACZK,WAAY,OACZM,QAAS,OACThW,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLmW,SAAU,SAFd,iFAQA,wBACEnW,MAAO,CACLiW,QAAS,SAGX,wBACEjW,MAAO,CACLmW,SAAU,OACV0E,aAAc,OACdooB,WAAY,IACZvsB,WAAY,MAGd,uBACE1W,MAAO,CACLC,aAAc,OACd+V,gBAAiB,OACjBC,QAAS,aAJb,sBAQK,IAhBP,cAmBA,wBACEjW,MAAO,CACLmW,SAAU,OACV8sB,WAAY,EACZvsB,WAAY,MAGd,uBACE1W,MAAO,CACLC,aAAc,OACd+V,gBAAiB,OACjBC,QAAS,aAJb,mCAQK,IAfP,2BAuBR,kBAAC,GAAD,CAASgM,IAAI,QAAQhgB,IAAI,KACvB,yBACEjC,MAAO,CACL8T,QAAS,SAGX,yBACE9T,MAAO,CACL4R,MAAO,QAGT,kBAAC/S,EAAD,CACEI,MAAM,UACNE,MAAOo3C,EAAMvuC,QACbvI,KAAK,UACLJ,SAAU,SAACqQ,GACT8mC,EAAS,eACJD,EADG,CAENvuC,QAAS0H,EAAEzE,OAAO9L,YAKxB,wBAAIS,UAAU,mBAAd,QAEA,kBAAC,KAAD,CACE6yB,OAAQC,KACR9wB,KAAM20C,EAAM7wC,KACZitB,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpB4jB,EAAS,eACJD,EADG,CAEN7wC,KAAM9D,MAGVqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,MAI1B,yBACEzyB,MAAO,CACL8T,QAAS,QACT+G,aAAc,OACdnF,UAAW,SAGb,kBAAC,IAAD,CACE/F,QAASnB,EACToB,QAASwmC,EAAkBrpC,UAC3BnN,UAAU,8BAHZ,qBASJ,yBACEI,MAAO,CACL4R,MAAO,MACPglC,UAAW,OACXthC,WAAY,UACZK,WAAY,OACZM,QAAS,OACThW,aAAc,QAGhB,gDACA,uBACED,MAAO,CACLmW,SAAU,SAFd,iFAQA,wBACEnW,MAAO,CACLiW,QAAS,SAGX,wBACEjW,MAAO,CACLmW,SAAU,OACV0E,aAAc,OACdooB,WAAY,IACZvsB,WAAY,MAGd,uBACE1W,MAAO,CACLC,aAAc,OACd+V,gBAAiB,OACjBC,QAAS,aAJb,sBAQK,IAhBP,cAmBA,wBACEjW,MAAO,CACLmW,SAAU,OACV8sB,WAAY,EACZvsB,WAAY,MAGd,uBACE1W,MAAO,CACLC,aAAc,OACd+V,gBAAiB,OACjBC,QAAS,aAJb,mCAQK,IAfP,8BCxVVwL,IAfmBzT,MAAaC,MAAM,CAC1CxO,KAAMuO,MACH/O,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAWkB,SAACuV,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,0BAoThCyhC,GA9SY,SAAC,GAAe,qBAIrC/oC,EAAe,GAAI,2BAJiB,mBAEtCgpC,EAFsC,KAGtCC,EAHsC,OAQpCjpC,EAAe,GAAI,oBARiB,mBAMtCkpC,EANsC,KAOtCC,EAPsC,OAUUxlC,oBAAS,GAVnB,mBAUjCylC,EAViC,KAUbC,EAVa,OAWgB1lC,oBAAS,GAXzB,mBAWjC2lC,EAXiC,KAWVC,EAXU,OAYF5lC,oBAAS,GAZP,mBAYjC6lC,EAZiC,KAYnBC,EAZmB,OAaU9lC,oBAAS,GAbnB,mBAajC+lC,EAbiC,KAabC,EAba,OAcIhmC,oBAAS,GAdb,mBAcjCimC,EAdiC,KAchBC,EAdgB,OAekBlmC,oBAAS,GAf3B,mBAejCmmC,EAfiC,KAeVC,EAfU,OAiBQpmC,oBAAS,GAjBjB,mBAiBjCqmC,EAjBiC,KAiBfC,EAjBe,OAkBJtmC,oBAAS,GAlBL,mBAkBjCumC,EAlBiC,KAkBrBC,EAlBqB,OAmBQxmC,oBAAS,GAnBjB,mBAmBjCymC,EAnBiC,KAmBfC,EAnBe,OAoBE1mC,mBAAS,IApBX,oBAoBjC2mC,GApBiC,MAoBlBC,GApBkB,MAsBxCr3C,QAAQC,IAAI,qBAAsBi2C,GAClCl2C,QAAQC,IAAI,wBAAyBm2C,GAErC3pC,qBAAU,YACuB,uCAAG,4BAAAE,EAAA,sEACdopC,EAAqC,IADvB,QAC1BvqC,EAD0B,UAI9B6rC,GAAiBD,IACjBjB,EAAoB3qC,EAAG,YAAH,OACpB6qC,EAAuB7qC,EAAG,YAAH,MACvBqrC,EAAyBrrC,EAAG,YAAH,MACzBirC,EAAoBjrC,EAAG,YAAH,OACpB+qC,EAAc/qC,EAAG,MAAH,OACdmrC,EAAiBnrC,EAAG,MAAH,OAVa,2CAAH,qDAa/B8rC,KACC,IAEHt3C,QAAQC,IAAI,iCAAkC61C,GAE9C,IAAMyB,GAAqB,uCAAG,4BAAA5qC,EAAA,sEACKspC,EAAkC,CACjEvxC,KAAM,CACJ8yC,YAAa,CACXjC,MAAOW,EACPuB,KAAMrB,GAERztC,MAAO,CACL4sC,MAAOe,EACPmB,KAAMf,GAERgB,YAAa,CACXnC,MAAOiB,EACPiB,KAAMb,MAbgB,QACtBe,EADsB,SAmB4B,OAA9BA,EAAmBrzC,QAjFhB4P,EAkFH,kCAjF5BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,cACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAgFzCqM,GACE,iEAvBwB,iCA9DA,IAACvM,IA8DD,OAAH,qDA4B3B,OACE,oCACE,yBACElV,MAAO,CACL8T,QAAS,OACT6gB,cAAe,WAGjB,yBAAK30B,MAAO,IACV,yBACEA,MAAO,CACL8T,QAAS,OACTE,WAAY,WAGd,yBACEhU,MAAO,CACL6V,YAAa,OACbH,UAAW,SAGb,wBAAI9V,UAAU,sBAAd,iBAEF,kBAAC,IAAD,CACEA,UAAU,oBACV+P,QAAS,kBAAMooC,GAAoB,IACnC74C,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAJR,uBASF,yBACExqB,MAAO,CACL0V,UAAW,UAGf,yBACE1V,MAAO,CACL8T,QAAS,OACT4B,UAAW,SAGb,yBACE1V,MAAO,CACL6V,YAAa,SAGf,kBAAC,KAAD,CACEgS,QAASqvB,EACTpuB,eAAgBouB,EAChB73C,SAAU,SAACqQ,GAAD,OAAOynC,EAAoBznC,EAAEzE,OAAO4c,WAE9C,0BAAMjoB,UAAU,2BAAhB,WAGJ,yBAAKI,MAAO,IACV,kBAAC,KAAD,CACE6nB,QAASuvB,EACTtuB,eAAgBsuB,EAChB/3C,SAAU,SAACqQ,GAAD,OAAO2nC,EAAuB3nC,EAAEzE,OAAO4c,WAEjD,0BAAMjoB,UAAU,2BAAhB,gBAMR,6BACE,yBACEI,MAAO,CACL8T,QAAS,OACTE,WAAY,SACZ0B,UAAW,SAGb,yBACE1V,MAAO,CACL6V,YAAa,OACbH,UAAW,SAGb,wBAAI9V,UAAU,sBAAd,UAEF,kBAAC,IAAD,CACEA,UAAU,oBACV+P,QAAS,kBAAMsoC,GAAc,IAC7B/4C,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAJR,uBAUF,yBACExqB,MAAO,CACL0V,UAAW,SAIf,yBACE1V,MAAO,CACL8T,QAAS,OACT4B,UAAW,SAGb,yBACE1V,MAAO,CACL6V,YAAa,SAGf,kBAAC,KAAD,CACEgS,QAASyvB,EACTxuB,eAAgBwuB,EAChBj4C,SAAU,SAACqQ,GAAD,OAAO6nC,EAAc7nC,EAAEzE,OAAO4c,WAExC,0BAAMjoB,UAAU,2BAAhB,WAGJ,yBAAKI,MAAO,IACV,kBAAC,KAAD,CACE6nB,QAAS6vB,EACT5uB,eAAgB4uB,EAChBr4C,SAAU,SAACqQ,GAAD,OAAOioC,EAAiBjoC,EAAEzE,OAAO4c,WAE3C,0BAAMjoB,UAAU,2BAAhB,gBAMR,6BACE,yBACEI,MAAO,CACL8T,QAAS,OACTE,WAAY,SACZ0B,UAAW,SAGb,yBACE1V,MAAO,CACL6V,YAAa,OACbH,UAAW,SAGb,wBAAI9V,UAAU,sBAAd,iBAEF,kBAAC,IAAD,CACEA,UAAU,oBACV+P,QAAS,kBAAMwoC,GAAoB,IACnCj5C,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAJR,uBASF,yBACExqB,MAAO,CACL0V,UAAW,UAGf,yBACE1V,MAAO,CACL8T,QAAS,OACT4B,UAAW,SAGb,yBACE1V,MAAO,CACL6V,YAAa,SAGf,kBAAC,KAAD,CACEgS,QAAS2vB,EACT1uB,eAAgB0uB,EAChBn4C,SAAU,SAACqQ,GAAD,OAAO+nC,EAAoB/nC,EAAEzE,OAAO4c,WAE9C,0BAAMjoB,UAAU,2BAAhB,WAGJ,yBAAKI,MAAO,IACV,kBAAC,KAAD,CACE6nB,QAAS+vB,EACT9uB,eAAgB8uB,EAChBv4C,SAAU,SAACqQ,GAAD,OAAOmoC,EAAyBnoC,EAAEzE,OAAO4c,WAEnD,0BAAMjoB,UAAU,2BAAhB,cAIJ,yBAAKI,MAAO,QAKlB,yBACEA,MAAO,CACL0V,UAAW,UAIf,kBAAC,IAAD,CACE/F,QAAS,SAACD,GAAD,OAAY6oC,MACrB3oC,QAASonC,EAAqCjqC,UAC9CnN,UAAU,8BAHZ,iCAQA,yBACEI,MAAO,CACL0V,UAAW,SAIf,kBAACkjC,GAAD,CACE56B,QAAS85B,EACT3B,WAAY4B,IAGd,kBAACc,GAAD,CACE76B,QAASk6B,EACT/B,WAAYgC,IAGd,kBAACW,GAAD,CAAwB96B,QAASg6B,EAAY7B,WAAY8B,M,UCxTzDx2B,IAVmBzT,MAAaC,MAAM,IAUd,SAACiH,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,0BA6IhC2jC,GAlIY,SAAC,GAAe,qBACoBjrC,EAC3D,GACA,iBAHsC,mBACjCkrC,EADiC,KACTC,EADS,OAMhBxnC,mBAAS,IANO,mBAMjC5N,EANiC,KAM3Bq1C,EAN2B,OAONznC,mBAAS,IAPH,mBAOjC1J,EAPiC,KAOtBoxC,EAPsB,KAaxC,IAAMC,EAAa,uCAAG,4BAAAzrC,EAAA,sEACIsrC,EAA2B,CACjDvzC,KAAM,CACJqC,UAAWA,EACXlE,KAAMA,KAJU,QACds4B,EADc,SASkB,OAArBA,EAAU72B,SACzB4zC,EAAQ,IACRC,EAAa,IA/CcjkC,EAgDH,YA/C5BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,cACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAgCvB,iCApCQ,IAACF,IAoCT,OAAH,qDA2DnB,OAzCAzH,qBAAU,WACR,IAAKurC,EAAsB,UAAe,CACxC,IAAMtsC,EAAQssC,EAAsB,MACpC,GAAItsC,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EACvDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,WAS/ButB,EAAsB,WACvB54C,OAAOC,KAAK24C,EAAuBp3C,MAAMtB,SAM1C,CAAC04C,IAGF,yBACEh5C,MAAO,CACL4R,MAAO,UAGT,wBAAIhS,UAAU,mBAAd,aAEA,kBAAC,KAAD,CACEI,MAAO,CACL6T,OAAQ,OACR5T,aAAc,MACdquB,YAAa,kBACb1c,MAAO,QAETM,KAAK,OACL7S,SA/EN,SAAsBF,GACpBg6C,EAAah6C,IA+ETk6C,gBAAiB,CAAC,OAGpB,yBACEr5C,MAAO,CACL0V,UAAW,UAGf,kBAAC,GAAD,CACEzW,MAAM,OACNE,MAAO0E,EACPpE,KAAK,OACLJ,SAAU,SAACqQ,GACTwpC,EAAQxpC,EAAEzE,OAAO9L,UAIrB,kBAAC,IAAD,CACEa,MAAO,CACL0V,UAAW,QAEb/F,QAASypC,EACTxpC,QAASopC,EAAuBjsC,UAGhCnN,UAAU,iBARZ,OAUO,IACL,0BACEI,MAAO,CACL2V,WAAY,SAGb,IACD,kBAAC2jC,GAAA,EAAD,U,UCpEKC,GA5GW,SAAC,GAAuC,IAArCx3C,EAAoC,EAApCA,GAAIy3C,EAAgC,EAAhCA,mBAAgC,EACR1rC,EACrD,GACA,iBAH6D,mBACxD2rC,EADwD,KACnCC,EADmC,KAsB/D,OAhBAjsC,qBAAU,YACmB,uCAAG,sBAAAE,EAAA,sEACV+rC,EAAwB,CACxCj5C,WAAY,CACVE,aAAc,CACZoB,GAAIA,MAJkB,yDAAH,qDAU3B8yC,KACC,IAEH7zC,QAAQC,IAAI,sBAAuBw4C,GAGjC,oCACGA,EAAoB1sC,WACnB,oCACE,yBACE/M,MAAO,CACL4R,MAAO,OACPkC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZvE,OAAQ,YAGV,kBAAC,KAAD,CAAMkJ,KAAK,YAKhB8gC,EAAoBzsC,OAASysC,EAAoB73C,KAChD,oCACE,yBACE5B,MAAO,CACL0V,UAAW,UAGb,kBAAC,KAAD,CACExT,YAAY,eACZO,MAAOmR,KAAMK,2BAKnB,IAGDwlC,EAAoBzsC,OACrBysC,EAAoB73C,MAClBxB,OAAOC,KAAKo5C,EAAoB73C,MAAMtB,OAAS,EAc/C,GAbA,oCACE,yBACEN,MAAO,CACL0V,UAAW,UAGb,kBAAC,KAAD,CACExT,YAAY,eACZO,MAAOmR,KAAMK,2BAQpBwlC,EAAoBzsC,MACnBysC,EAAoB73C,MACpBxB,OAAOC,KAAKo5C,EAAoB73C,MAAMtB,OAAS,GAC7C,oCACE,yBAAKV,UAAU,qBACb,yBACE+P,QAAS,kBAAM6pC,EAAmB,KAClC55C,UAAU,8BAEV,kBAAC+5C,GAAA,EAAD,OAEF,yBAAK/5C,UAAU,6BACb,8BAAO65C,EAAmB,KAAnB,OACP,4BAAKA,EAAmB,KAAnB,WACL,4BACGA,EAAmB,KAAnB,MACCnjC,IAAOmjC,EAAmB,KAAnB,MAAqC7tC,OAC1C,0BAIR,yBAAKhM,UAAU,2BACZ65C,EAAmB,KAAnB,MACCA,EAAmB,KAAnB,UCNHG,GAhGD,SAAC1lC,GAAkB,IAAD,EACuBpG,EACnD,GACA,kBAH4B,mBACvB+rC,EADuB,KACJH,EADI,OAKgBjoC,mBAAS,IALzB,mBAKvBqoC,EALuB,KAKNN,EALM,KAyB9B,OAlBA/rC,qBAAU,YACmB,uCAAG,sBAAAE,EAAA,sEACV+rC,EAAwB,CACxCj5C,WAAY,CACVC,OAAQ,CACNq5C,WAAY,IACZC,cAAe,OACfplC,eAAgB,SANM,yDAAH,qDAY3BigC,KACC,IAEH7zC,QAAQC,IAAI,oBAAqB44C,GAG/B,oCACGA,EAAkB9sC,WACjB,oCACE,yBACE/M,MAAO,CACL4R,MAAO,OACPkC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZvE,OAAQ,YAGV,kBAAC,KAAD,CAAMkJ,KAAK,YAKhBkhC,EAAkB7sC,MACjB6sC,EAAkBj4C,MAClBi4C,EAAkBj4C,KAAKtB,OAAS,GAC9B,oCACE,yBAAKV,UAAU,2BACXk6C,GACA,oCACGD,EAAkB7sC,MACjB6sC,EAAkBj4C,MAClBi4C,EAAkBj4C,KAAKtB,OAAS,GAC9B,oCACGu5C,EAAkBj4C,KAAKf,KAAI,SAACQ,GAC3B,OACE,yBACEsO,QAAS,kBAAM6pC,EAAmBn4C,EAAKU,KACvCnC,UAAU,gCAEV,yBAAKA,UAAU,qCACb,8CAAayB,EAAK0G,YAClB,wCAAU1G,EAAK6G,SAGjB,4BACG7G,EAAKwC,MACJxC,EAAKwC,KAAKo2C,UAAU,EAAG,KAAO,SAElC,4BACG54C,EAAKoD,MACJ6R,IAAOjV,EAAKoD,MAAMmH,OAAO,uBAU5CkuC,GACC,oCACE,kBAAC,GAAD,CACEN,mBAAoBA,EACpBz3C,GAAI+3C,S,UCtEhBl8B,GAAYC,KAAZD,QA8DOs8B,GA1DH,SAAChmC,GACX,OACE,oCACE,yBAAKtU,UAAU,qBACb,kBAAC,KAAD,CAAMoiB,iBAAiB,KACrB,kBAAC,GAAD,CACEC,IACE,8BACE,kBAACitB,GAAA,EAAD,MADF,SAKFjtC,IAAI,KAEJ,kBAAC,GAAD,OAGF,kBAAC,GAAD,CACEggB,IACE,8BACE,kBAACk4B,GAAA,EAAD,MADF,eAKFl4C,IAAI,KAEJ,kBAAC,GAAD,OAGF,kBAAC,GAAD,CACEggB,IACE,8BACE,kBAACzO,GAAA,EAAD,MADF,iBAKFvR,IAAI,KAEJ,kBAAC,GAAD,OAGF,kBAAC,GAAD,CACEggB,IACE,8BACE,kBAACzO,GAAA,EAAD,MADF,sBAKFvR,IAAI,KAEJ,kBAAC,GAAD,WChFGm4C,MC8BTrsC,GAAmBC,MAAaC,MAAM,IActCwT,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAK7ChH,GAAgB,CAClB,UAAa,GACb,SAAY,GACZ,KAAQ,GACR,WAAa,GACb,KAAO,GACP,aAAe,GACf,aAAgB,IA8VL2lC,GAtVO,SAAC,GAAiB,qBAEmCjmC,EAAe,GAAI,yBAFvD,mBAE5BkmC,EAF4B,KAEAC,EAFA,OAG8BnmC,EAAe,GAAI,sBAHjD,mBAG5BomC,EAH4B,KAGHC,EAHG,OAKU1iC,oBAAS,GALnB,mBAK5B2iC,EAL4B,KAKZC,EALY,OAMc5iC,mBAAS,IANvB,mBAM5B+iC,EAN4B,KAMVC,EANU,KAUnChnC,qBAAU,YACmB,uCAAG,4BAAAE,EAAA,sEACRsmC,EAAiC,IADzB,QACpBznC,EADoB,UAKxBioC,EAAqBjoC,GACrB6nC,EAAmB7nC,EAAG,iBANE,2CAAH,qDAS3BqoC,KACC,IAGH7zC,QAAQC,IAAI,6BAA6B+yC,GAEzC,IAAMxlC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACOwmC,EAA8B,CAClDzuC,KAAM,CACF,UAAa+I,EAAO4rC,UAAU9yB,OAC9B,SAAY9Y,EAAO6rC,SAAS/yB,OAC5B,KAAQ9Y,EAAO8rC,KAAKhzB,OACpB,WAAa9Y,EAAO+rC,WAAWjzB,OAC/B,KAAO9Y,EAAOgsC,KACd,eAAkBrG,EAClB,aAAe3lC,EAAOisC,aAAanzB,OACnC,aAAgB9Y,EAAOksC,aAAapzB,UAV3B,QACX4U,EADW,SAeAA,EAAU72B,OAQ3BoJ,EAAQC,eAAc,GAvBL,2CAAH,wDAuCrBlB,qBAAU,WACT,IAAKymC,EAAuB,UAAe,CAC1C,IAAMxnC,EAAQwnC,EAAuB,MACrC,GAAIxnC,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EAExDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eASVtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACpCF,OAAOqO,OAAO/B,EAAK,OACnB,IACGnJ,SAAQ,SAACkoB,EAAKC,GACpB,GAAmB,kBAARD,EACVhK,GAAsBgK,QAGlB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACvBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACZhK,GAAsBgK,UA9HE,IAACvW,GAwI7Bg/B,EAAuB,WACxB9zC,OAAOC,KAAK6zC,EAAwBtyC,MAAMtB,OAAS,GAED,OAA9C4zC,EAAuB,KAAvB,SA3I0Bh/B,EA4IO,8BA3IpCD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,cACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,iCAkJ/C,CAAC8+B,IAID,IAAM4B,EAA4B,SAACpmC,GAC/B2kC,EAAmB3kC,EAAEzE,OAAO4c,UAKhC,OACI,kBAAC,IAAD,CACI/Y,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,GACcomC,KAG1B,gBACGvlC,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCAEsB,yBAAKvP,MAAO,CAC1C8T,QAAS,OACTC,eAAgB,kBAEhB,yBAAK/T,MAAO,CACX4R,MAAO,QAEN,kBAAC/S,EAAD,CACsCI,MAAM,aACNE,MAAOsP,EAAO4rC,UACd56C,KAAK,YACLF,QAAU6P,EAAQirC,WAAanrC,EAAOmrC,YAChClrC,GAAgB+kC,EAAwBxnC,MAAxB,gBAEtBlN,YAAc4P,EAAQirC,WAAanrC,EAAOmrC,YACpClrC,GAAgB+kC,EAAwBxnC,MAAxB,gBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,iBAI5D,yBAAKrP,MAAO,CACX4R,MAAO,QAGgC,kBAAC/S,EAAD,CACAI,MAAM,YACNE,MAAOsP,EAAO6rC,SACd76C,KAAK,WACLF,QAAU6P,EAAQkrC,UAAYprC,EAAOorC,WAC/BnrC,GAAgB+kC,EAAwBxnC,MAAxB,eAEtBlN,YAAc4P,EAAQkrC,UAAYprC,EAAOorC,WACnCnrC,GAAgB+kC,EAAwBxnC,MAAxB,eACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,iBAO5B,yBAAKrP,MAAO,CAC5C8T,QAAS,OACTC,eAAgB,kBAEhB,yBAAK/T,MAAO,CACX4R,MAAO,QAEkC,kBAAC/S,EAAD,CACFI,MAAM,OACNE,MAAOsP,EAAO8rC,KACd96C,KAAK,OACLF,QAAU6P,EAAQmrC,MAAQrrC,EAAOqrC,OAC3BprC,GAAgB+kC,EAAwBxnC,MAAxB,WAEtBlN,YAAc4P,EAAQmrC,MAAQrrC,EAAOqrC,OAC/BprC,GAAgB+kC,EAAwBxnC,MAAxB,WACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,YAM5D,yBAAKrP,MAAO,CACX4R,MAAO,QAGgC,kBAAC/S,EAAD,CACAI,MAAM,aACNE,MAAOsP,EAAO+rC,WACd/6C,KAAK,aACLF,QAAU6P,EAAQorC,YAActrC,EAAOsrC,aACjCrrC,GAAgB+kC,EAAwBxnC,MAAxB,iBAEtBlN,YAAc4P,EAAQorC,YAActrC,EAAOsrC,aACrCrrC,GAAgB+kC,EAAwBxnC,MAAxB,iBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,mBAQ5B,yBAAKrP,MAAO,CAC5C8T,QAAS,OACTC,eAAgB,kBAEhB,yBAAK/T,MAAO,CACX4R,MAAO,QAEN,kBAAC/S,EAAD,CACsCI,MAAM,gBACNE,MAAOsP,EAAOisC,aACdj7C,KAAK,eACLF,QAAU6P,EAAQsrC,cAAgBxrC,EAAOwrC,eACnCvrC,GAAgB+kC,EAAwBxnC,MAAxB,mBAEtBlN,YAAc4P,EAAQsrC,cAAgBxrC,EAAOwrC,eACvCvrC,GAAgB+kC,EAAwBxnC,MAAxB,mBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,oBAI5D,yBAAKrP,MAAO,CACX4R,MAAO,QAGgC,kBAAC/S,EAAD,CACAI,MAAM,gBACNE,MAAOsP,EAAOksC,aACdl7C,KAAK,eACLF,QAAU6P,EAAQurC,cAAgBzrC,EAAOyrC,eACnCxrC,GAAgB+kC,EAAwBxnC,MAAxB,mBAEtBlN,YAAc4P,EAAQurC,cAAgBzrC,EAAOyrC,eACvCxrC,GAAgB+kC,EAAwBxnC,MAAxB,mBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,qBAO5B,yBAAKrP,MAAO,CAC3C4R,MAAO,QAE8B,kBAAC/S,EAAD,CACGK,KAAK,SACND,MAAM,OACNE,MAAOsP,EAAOgsC,KACdh7C,KAAK,OACLF,QAAU6P,EAAQqrC,MAAQvrC,EAAOurC,OAC3BtrC,GAAgB+kC,EAAwBxnC,MAAxB,WAEtBlN,YAAc4P,EAAQqrC,MAAQvrC,EAAOurC,OAC/BtrC,GAAgB+kC,EAAwBxnC,MAAxB,WACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,YAM5B,kBAAC,KAAD,CACAlQ,MAAOi1C,EACN/0C,SAAUy2C,GACH,0BAAMl2C,UAAU,sBAAhB,mBAQpD,yBAAKI,MAAO,CACR0V,UAAU,UAEwB,yBAAK1V,MAAO,CACR8T,QAAQ,QACR+G,aAAa,OACbnF,UAAU,SAGd,kBAAC,IAAD,CAEE/F,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAASskC,EAAwBnnC,UACjCnN,UAAU,8BAJZ,oCCpW9Bge,IALiB5P,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAIrDke,KAAZD,SAaF6D,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAiVpC2gB,GA/TK,SAAC,GAAoC,IAAlC/X,EAAiC,EAAjCA,QAASm4B,EAAwB,EAAxBA,WAAwB,EAEMroC,EAAe,GAAI,8BAFzB,mBAE7CsoC,EAF6C,KAE1BC,EAF0B,OAG8BvoC,EAAe,GAAI,iCAHjD,gCAMpB2D,mBAAS,CACrCzJ,QAAQ,GACRtC,KAAK,MAR2C,mBAM7C6C,EAN6C,KAMnC+tC,EANmC,OAW1B7kC,mBAAS,CAC/BzJ,QAAQ,GACRtC,KAAK,KAb2C,mBAW7C6wC,EAX6C,KAWtCC,EAXsC,KAgB9ChoC,EAAY,uCAAG,4BAAAb,EAAA,sEACkC0oC,EAA6B,CAC5E3wC,KAAM,CACF,MAAS,cACT,SAAW,eACJ6C,GAEP,MAAQ,eACDguC,MARE,QACXE,EADW,SAe2E,OAAhDA,EAAqCnxC,QA9DxD4P,OA+DrB4I,EA9DR7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,gCACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BA4DvC+gC,GAAW,IAGX10B,KApBa,iCA/CO,IAACvM,IA+CR,OAAH,qDAyBlBzH,qBAAU,YACoB,uCAAG,sBAAAE,EAAA,sEACP0oC,EAA6B,CAC3C51C,WAAY,CACRE,aAAc,CACV+1C,UAAW,kBAJE,yDAAH,qDAW1BC,KAEF,IASF,OACI,kBAAC,KAAD,CACA/kC,MAAO,OACP5R,MAAO,CACH2hB,IAAK,QAET9e,MAAM,8BACNmb,QAASA,EACT4D,KAAM,SAAClS,GAAD,OAAYlB,KAClBqT,SAfiB,SAACnS,GAClBymC,GAAW,IAeXp0B,OAAO,SACP6G,cAAe,CACXhZ,QAASwmC,EAAkBrpC,UAC3B8b,SAAU,UAGd/G,UAAW,CACPrS,OAAQ,OACRwG,QAAS,QAEbiuB,QAAQ,GAEX,kBAAC,KAAD,CAAMliB,iBAAiB,KACvB,kBAAC,GAAD,CAASC,IAAI,WAAWhgB,IAAI,KAEzB,yBAAKjC,MAAO,CACR8T,QAAQ,SAGR,yBAAK9T,MAAO,CACR4R,MAAM,QAEV,kBAAC/S,EAAD,CACAI,MAAM,UACNE,MAAOoJ,EAASP,QAChBvI,KAAK,UACLJ,SAAU,SAACqQ,GACP4mC,EAAY,eACL/tC,EADI,CAEPP,QAAS0H,EAAEzE,OAAO9L,YAK1B,wBAAIS,UAAU,mBAAd,QAKJ,kBAAC,KAAD,CACA6yB,OAAQC,KACR9wB,KAAM2G,EAAS7C,KACfitB,OAAQ,SAAAF,GAEJzxB,QAAQC,IAAI,0BAA2BwxB,IAE3CpzB,SAAU,SAAC6I,EAAOuqB,GACd,IAAM7wB,EAAO6wB,EAAOG,UACpB0jB,EAAY,eACL/tC,EADI,CAEP7C,KAAM9D,MAGdqiB,OAAQ,SAAC/b,EAAOuqB,GACZzxB,QAAQC,IAAI,QAASwxB,IAEzBpD,QAAS,SAACnnB,EAAOuqB,GACbzxB,QAAQC,IAAI,SAAUwxB,MAIlC,yBAAKzyB,MAAO,CAC8B8T,QAAQ,QACR+G,aAAa,OACbnF,UAAU,SAEd,kBAAC,IAAD,CACE/F,QAASnB,EACToB,QAASwmC,EAAkBrpC,UAC3BnN,UAAU,8BAHZ,qBAW1B,yBAAKI,MAAO,CACR4R,MAAM,MACNglC,UAAU,OACVthC,WAAW,UACXK,WAAW,OACXM,QAAQ,OACRhW,aAAa,QAEb,gDACA,uBAAGD,MAAO,CACNmW,SAAS,SADb,iFAKA,wBAAInW,MAAO,CACPiW,QAAQ,SAER,wBAAIjW,MAAO,CACPmW,SAAS,OACT0E,aAAa,OACbooB,WAAW,IACXvsB,WAAW,MACZ,uBAAG1W,MAAO,CACTC,aAAa,OACb+V,gBAAgB,OAChBC,QAAQ,aAHT,sBALH,eAUA,wBACAjW,MAAO,CACHmW,SAAS,OACT8sB,WAAW,EACXvsB,WAAW,MAEd,uBACD1W,MAAO,CACHC,aAAa,OACb+V,gBAAgB,OAChBC,QAAQ,aAJX,mCAND,4BAoBhB,kBAAC,GAAD,CAASgM,IAAI,QAAQhgB,IAAI,KAEzB,yBAAKjC,MAAO,CACR8T,QAAQ,SAER,yBAAK9T,MAAO,CACR4R,MAAO,QAGnB,kBAAC/S,EAAD,CACYI,MAAM,UACNE,MAAOo3C,EAAMvuC,QACbvI,KAAK,UACLJ,SAAU,SAACqQ,GACP8mC,EAAS,eACFD,EADC,CAEJvuC,QAAS0H,EAAEzE,OAAO9L,YAKtC,wBAAIS,UAAU,mBAAd,QAKA,kBAAC,KAAD,CACA6yB,OAAQC,KACR9wB,KAAM20C,EAAM7wC,KACZitB,OAAQ,SAAAF,GAEJzxB,QAAQC,IAAI,0BAA2BwxB,IAE3CpzB,SAAU,SAAC6I,EAAOuqB,GACd,IAAM7wB,EAAO6wB,EAAOG,UACpB4jB,EAAS,eACFD,EADC,CAEJ7wC,KAAM9D,MAGdqiB,OAAQ,SAAC/b,EAAOuqB,GACZzxB,QAAQC,IAAI,QAASwxB,IAEzBpD,QAAS,SAACnnB,EAAOuqB,GACbzxB,QAAQC,IAAI,SAAUwxB,MAK1B,yBAAKzyB,MAAO,CACA8T,QAAQ,QACR+G,aAAa,OACbnF,UAAU,SAEd,kBAAC,IAAD,CACA/F,QAASnB,EACToB,QAASwmC,EAAkBrpC,UAC3BnN,UAAU,8BAHV,qBAWA,yBAAKI,MAAO,CACJ4R,MAAM,MACNglC,UAAU,OACVthC,WAAW,UACXK,WAAW,OACXM,QAAQ,OACRhW,aAAa,QAEb,gDACA,uBAAGD,MAAO,CACNmW,SAAS,SADb,iFAKA,wBAAInW,MAAO,CACPiW,QAAQ,SAER,wBAAIjW,MAAO,CACPmW,SAAS,OACT0E,aAAa,OACbooB,WAAW,IACXvsB,WAAW,MACZ,uBAAG1W,MAAO,CACTC,aAAa,OACb+V,gBAAgB,OAChBC,QAAQ,aAHT,sBALH,eAUA,wBACAjW,MAAO,CACHmW,SAAS,OACT8sB,WAAW,EACXvsB,WAAW,MAEd,uBACD1W,MAAO,CACHC,aAAa,OACb+V,gBAAgB,OAChBC,QAAQ,aAJX,mCAND,+BCpUZ2H,IALiB5P,MAAaC,MAAM,IAKxB4P,KAAZD,SAaF6D,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAiVpC2gB,GA/TK,SAAC,GAAoC,IAAlC/X,EAAiC,EAAjCA,QAASm4B,EAAwB,EAAxBA,WAAwB,EAEMroC,EAAe,GAAI,8BAFzB,mBAE7CsoC,EAF6C,KAE1BC,EAF0B,OAIpB5kC,mBAAS,CACrCzJ,QAAQ,GACRtC,KAAK,KAN2C,mBAI7C6C,EAJ6C,KAInC+tC,EAJmC,OAS1B7kC,mBAAS,CAC/BzJ,QAAQ,GACRtC,KAAK,KAX2C,mBAS7C6wC,EAT6C,KAStCC,EATsC,KAgB9ChoC,EAAY,uCAAG,4BAAAb,EAAA,sEACkC0oC,EAA6B,CAC5E3wC,KAAM,CACF,MAAS,cACT,SAAW,eACJ6C,GAEP,MAAQ,eACDguC,MARE,QACXE,EADW,SAe2E,OAAhDA,EAAqCnxC,QA9DxD4P,OA+DrB4I,EA9DR7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,gCACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BA4DvC+gC,GAAW,IAGX10B,KApBa,iCA/CO,IAACvM,IA+CR,OAAH,qDAyBlBzH,qBAAU,YACoB,uCAAG,sBAAAE,EAAA,sEACP0oC,EAA6B,CAC3C51C,WAAY,CACRE,aAAc,CACV+1C,UAAW,kBAJE,yDAAH,qDAW1BC,KAEF,IASF,OACI,kBAAC,KAAD,CACA/kC,MAAO,OACP5R,MAAO,CACH2hB,IAAK,QAET9e,MAAM,wBACNmb,QAASA,EACT4D,KAAM,SAAClS,GAAD,OAAYlB,KAClBqT,SAfiB,SAACnS,GAClBymC,GAAW,IAeXp0B,OAAO,SACP6G,cAAe,CACXhZ,QAASwmC,EAAkBrpC,UAC3B8b,SAAU,UAGd/G,UAAW,CACPrS,OAAQ,OACRwG,QAAS,QAEbiuB,QAAQ,GAEX,kBAAC,KAAD,CAAMliB,iBAAiB,KACvB,kBAAC,GAAD,CAASC,IAAI,WAAWhgB,IAAI,KAEzB,yBAAKjC,MAAO,CACR8T,QAAQ,SAGR,yBAAK9T,MAAO,CACR4R,MAAM,QAEV,kBAAC/S,EAAD,CACAI,MAAM,UACNE,MAAOoJ,EAASP,QAChBvI,KAAK,UACLJ,SAAU,SAACqQ,GACP4mC,EAAY,eACL/tC,EADI,CAEPP,QAAS0H,EAAEzE,OAAO9L,YAK1B,wBAAIS,UAAU,mBAAd,QAKJ,kBAAC,KAAD,CACA6yB,OAAQC,KACR9wB,KAAM2G,EAAS7C,KACfitB,OAAQ,SAAAF,GAEJzxB,QAAQC,IAAI,0BAA2BwxB,IAE3CpzB,SAAU,SAAC6I,EAAOuqB,GACd,IAAM7wB,EAAO6wB,EAAOG,UACpB0jB,EAAY,eACL/tC,EADI,CAEP7C,KAAM9D,MAGdqiB,OAAQ,SAAC/b,EAAOuqB,GACZzxB,QAAQC,IAAI,QAASwxB,IAEzBpD,QAAS,SAACnnB,EAAOuqB,GACbzxB,QAAQC,IAAI,SAAUwxB,MAKE,yBAAKzyB,MAAO,CACN8T,QAAQ,QACR+G,aAAa,OACbnF,UAAU,SAEd,kBAAC,IAAD,CACE/F,QAASnB,EACToB,QAASwmC,EAAkBrpC,UAC3BnN,UAAU,8BAHZ,qBAW1B,yBAAKI,MAAO,CACR4R,MAAM,MACNglC,UAAU,OACVthC,WAAW,UACXK,WAAW,OACXM,QAAQ,OACRhW,aAAa,QAEb,gDACA,uBAAGD,MAAO,CACNmW,SAAS,SADb,iFAKA,wBAAInW,MAAO,CACPiW,QAAQ,SAER,wBAAIjW,MAAO,CACPmW,SAAS,OACT0E,aAAa,OACbooB,WAAW,IACXvsB,WAAW,MACZ,uBAAG1W,MAAO,CACTC,aAAa,OACb+V,gBAAgB,OAChBC,QAAQ,aAHT,sBALH,eAUA,wBACAjW,MAAO,CACHmW,SAAS,OACT8sB,WAAW,EACXvsB,WAAW,MAEd,uBACD1W,MAAO,CACHC,aAAa,OACb+V,gBAAgB,OAChBC,QAAQ,aAJX,mCAND,4BAoBhB,kBAAC,GAAD,CAASgM,IAAI,QAAQhgB,IAAI,KAET,yBAAKjC,MAAO,CACR8T,QAAS,SAIT,yBAAK9T,MAAO,CACR4R,MAAO,QAEhC,kBAAC/S,EAAD,CACyBI,MAAM,UACNE,MAAOo3C,EAAMvuC,QACbvI,KAAK,UACLJ,SAAU,SAACqQ,GACP8mC,EAAS,eACFD,EADC,CAEJvuC,QAAS0H,EAAEzE,OAAO9L,YAK9B,wBAAIS,UAAU,mBAAd,QAKQ,kBAAC,KAAD,CACA6yB,OAAQC,KACR9wB,KAAM20C,EAAM7wC,KACZitB,OAAQ,SAAAF,GAEJzxB,QAAQC,IAAI,0BAA2BwxB,IAE3CpzB,SAAU,SAAC6I,EAAOuqB,GACd,IAAM7wB,EAAO6wB,EAAOG,UACpB4jB,EAAS,eACFD,EADC,CAEJ7wC,KAAM9D,MAGdqiB,OAAQ,SAAC/b,EAAOuqB,GACZzxB,QAAQC,IAAI,QAASwxB,IAEzBpD,QAAS,SAACnnB,EAAOuqB,GACbzxB,QAAQC,IAAI,SAAUwxB,MAKtB,yBAAKzyB,MAAO,CACN8T,QAAQ,QACR+G,aAAa,OACbnF,UAAU,SAEd,kBAAC,IAAD,CACE/F,QAASnB,EACToB,QAASwmC,EAAkBrpC,UAC3BnN,UAAU,8BAHZ,qBAUd,yBAAKI,MAAO,CACpB4R,MAAM,MACNglC,UAAU,OACVthC,WAAW,UACXK,WAAW,OACXM,QAAQ,OACRhW,aAAa,QAEb,gDACA,uBAAGD,MAAO,CACNmW,SAAS,SADb,iFAKA,wBAAInW,MAAO,CACPiW,QAAQ,SAER,wBAAIjW,MAAO,CACPmW,SAAS,OACT0E,aAAa,OACbooB,WAAW,IACXvsB,WAAW,MACZ,uBAAG1W,MAAO,CACTC,aAAa,OACb+V,gBAAgB,OAChBC,QAAQ,aAHT,sBALH,eAUA,wBACAjW,MAAO,CACHmW,SAAS,OACT8sB,WAAW,EACXvsB,WAAW,MAEd,uBACD1W,MAAO,CACHC,aAAa,OACb+V,gBAAgB,OAChBC,QAAQ,aAJX,mCAND,+BCvUZ2H,IALiB5P,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAIrDke,KAAZD,SAaF6D,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAkVpC2gB,GAhUK,SAAC,GAAoC,IAAlC/X,EAAiC,EAAjCA,QAASm4B,EAAwB,EAAxBA,WAAwB,EAEMroC,EAAe,GAAI,8BAFzB,mBAE7CsoC,EAF6C,KAE1BC,EAF0B,OAG8BvoC,EAAe,GAAI,iCAHjD,gCAMpB2D,mBAAS,CACrCzJ,QAAQ,GACRtC,KAAK,MAR2C,mBAM7C6C,EAN6C,KAMnC+tC,EANmC,OAW1B7kC,mBAAS,CAC/BzJ,QAAQ,GACRtC,KAAK,KAb2C,mBAW7C6wC,EAX6C,KAWtCC,EAXsC,KAgB9ChoC,EAAY,uCAAG,4BAAAb,EAAA,sEACkC0oC,EAA6B,CAC5E3wC,KAAM,CACF,MAAS,QACT,SAAW,eACJ6C,GAEP,MAAQ,eACDguC,MARE,QACXE,EADW,SAe2E,OAAhDA,EAAqCnxC,QA9DxD4P,OA+DrB4I,EA9DR7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,gCACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BA4DvC+gC,GAAW,IAGX10B,KApBa,iCA/CO,IAACvM,IA+CR,OAAH,qDAyBlBzH,qBAAU,YACoB,uCAAG,sBAAAE,EAAA,sEACP0oC,EAA6B,CAC3C51C,WAAY,CACRE,aAAc,CACV+1C,UAAW,YAJE,yDAAH,qDAW1BC,KAEF,IASF,OACI,kBAAC,KAAD,CACA/kC,MAAO,OACP5R,MAAO,CACH2hB,IAAK,QAET9e,MAAM,uBACNmb,QAASA,EACT4D,KAAM,SAAClS,GAAD,OAAYlB,KAClBqT,SAfiB,SAACnS,GAClBymC,GAAW,IAeXp0B,OAAO,SACP6G,cAAe,CACXhZ,QAASwmC,EAAkBrpC,UAC3B8b,SAAU,UAGd/G,UAAW,CACPrS,OAAQ,OACRwG,QAAS,QAEbiuB,QAAQ,GAEX,kBAAC,KAAD,CAAMliB,iBAAiB,KACvB,kBAAC,GAAD,CAASC,IAAI,WAAWhgB,IAAI,KAEzB,yBAAKjC,MAAO,CACR8T,QAAQ,SAGR,yBAAK9T,MAAO,CACR4R,MAAM,QAEV,kBAAC/S,EAAD,CACAI,MAAM,UACNE,MAAOoJ,EAASP,QAChBvI,KAAK,UACLJ,SAAU,SAACqQ,GACP4mC,EAAY,eACL/tC,EADI,CAEPP,QAAS0H,EAAEzE,OAAO9L,YAK1B,wBAAIS,UAAU,mBAAd,QAKJ,kBAAC,KAAD,CACA6yB,OAAQC,KACR9wB,KAAM2G,EAAS7C,KACfitB,OAAQ,SAAAF,GAEJzxB,QAAQC,IAAI,0BAA2BwxB,IAE3CpzB,SAAU,SAAC6I,EAAOuqB,GACd,IAAM7wB,EAAO6wB,EAAOG,UACpB0jB,EAAY,eACL/tC,EADI,CAEP7C,KAAM9D,MAGdqiB,OAAQ,SAAC/b,EAAOuqB,GACZzxB,QAAQC,IAAI,QAASwxB,IAEzBpD,QAAS,SAACnnB,EAAOuqB,GACbzxB,QAAQC,IAAI,SAAUwxB,MAIlC,yBAAKzyB,MAAO,CAC8B8T,QAAQ,QACR+G,aAAa,OACbnF,UAAU,SAEd,kBAAC,IAAD,CACE/F,QAASnB,EACToB,QAASwmC,EAAkBrpC,UAC3BnN,UAAU,8BAHZ,qBAW1B,yBAAKI,MAAO,CACR4R,MAAM,MACNglC,UAAU,OACVthC,WAAW,UACXK,WAAW,OACXM,QAAQ,OACRhW,aAAa,QAEb,gDACA,uBAAGD,MAAO,CACNmW,SAAS,SADb,iFAKA,wBAAInW,MAAO,CACPiW,QAAQ,SAER,wBAAIjW,MAAO,CACPmW,SAAS,OACT0E,aAAa,OACbooB,WAAW,IACXvsB,WAAW,MACZ,uBAAG1W,MAAO,CACTC,aAAa,OACb+V,gBAAgB,OAChBC,QAAQ,aAHT,sBALH,eAUA,wBACAjW,MAAO,CACHmW,SAAS,OACT8sB,WAAW,EACXvsB,WAAW,MAEd,uBACD1W,MAAO,CACHC,aAAa,OACb+V,gBAAgB,OAChBC,QAAQ,aAJX,mCAND,4BAoBhB,kBAAC,GAAD,CAASgM,IAAI,QAAQhgB,IAAI,KAEzB,yBAAKjC,MAAO,CACR8T,QAAQ,SAER,yBAAK9T,MAAO,CACR4R,MAAO,QAGnB,kBAAC/S,EAAD,CACYI,MAAM,UACNE,MAAOo3C,EAAMvuC,QACbvI,KAAK,UACLJ,SAAU,SAACqQ,GACP8mC,EAAS,eACFD,EADC,CAEJvuC,QAAS0H,EAAEzE,OAAO9L,YAKtC,wBAAIS,UAAU,mBAAd,QAKA,kBAAC,KAAD,CACA6yB,OAAQC,KACR9wB,KAAM20C,EAAM7wC,KACZitB,OAAQ,SAAAF,GAEJzxB,QAAQC,IAAI,0BAA2BwxB,IAE3CpzB,SAAU,SAAC6I,EAAOuqB,GACd,IAAM7wB,EAAO6wB,EAAOG,UACpB4jB,EAAS,eACFD,EADC,CAEJ7wC,KAAM9D,MAGdqiB,OAAQ,SAAC/b,EAAOuqB,GACZzxB,QAAQC,IAAI,QAASwxB,IAEzBpD,QAAS,SAACnnB,EAAOuqB,GACbzxB,QAAQC,IAAI,SAAUwxB,MAK1B,yBAAKzyB,MAAO,CACA8T,QAAQ,QACR+G,aAAa,OACbnF,UAAU,SAEd,kBAAC,IAAD,CACA/F,QAASnB,EACToB,QAASwmC,EAAkBrpC,UAC3BnN,UAAU,8BAHV,qBAWA,yBAAKI,MAAO,CACJ4R,MAAM,MACNglC,UAAU,OACVthC,WAAW,UACXK,WAAW,OACXM,QAAQ,OACRhW,aAAa,QAEb,gDACA,uBAAGD,MAAO,CACNmW,SAAS,SADb,iFAKA,wBAAInW,MAAO,CACPiW,QAAQ,SAER,wBAAIjW,MAAO,CACPmW,SAAS,OACT0E,aAAa,OACbooB,WAAW,IACXvsB,WAAW,MACZ,uBAAG1W,MAAO,CACTC,aAAa,OACb+V,gBAAgB,OAChBC,QAAQ,aAHT,sBALH,eAUA,wBACAjW,MAAO,CACHmW,SAAS,OACT8sB,WAAW,EACXvsB,WAAW,MAEd,uBACD1W,MAAO,CACHC,aAAa,OACb+V,gBAAgB,OAChBC,QAAQ,aAJX,mCAND,+BC1TdwL,IAfmBzT,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAc3C,SAACuV,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,0BAwVpCyhC,GA5UY,SAAC,GAAiB,qBAEsC/oC,EAAe,GAAI,6BAF1D,mBAEjCgpC,EAFiC,KAEDC,EAFC,OAG0CjpC,EAAe,GAAI,sBAH7D,mBAGjCkpC,EAHiC,KAGKC,EAHL,OAMSxlC,oBAAS,GANlB,mBAMjCylC,EANiC,KAMdC,EANc,OAOe1lC,oBAAS,GAPxB,mBAOjC2lC,EAPiC,KAOXC,EAPW,OAQH5lC,oBAAS,GARN,mBAQjC6lC,EARiC,KAQpBC,EARoB,OASS9lC,oBAAS,GATlB,mBASjC+lC,EATiC,KASdC,EATc,OAUGhmC,oBAAS,GAVZ,mBAUjCimC,EAViC,KAUjBC,EAViB,OAWiBlmC,oBAAS,GAX1B,mBAWjCmmC,EAXiC,KAWXC,EAXW,OAcQpmC,oBAAS,GAdjB,mBAcjCqmC,EAdiC,KAcfC,EAde,OAeJtmC,oBAAS,GAfL,mBAejCumC,EAfiC,KAerBC,EAfqB,OAgBQxmC,oBAAS,GAhBjB,mBAgBjCymC,EAhBiC,KAgBfC,EAhBe,OAiBC1mC,mBAAS,IAjBV,oBAiBjC2mC,GAjBiC,MAiBnBC,GAjBmB,MAoBxCr3C,QAAQC,IAAI,qBAAqBi2C,GACjCl2C,QAAQC,IAAI,wBAAwBm2C,GAGpC3pC,qBAAU,YAEyB,uCAAG,4BAAAE,EAAA,sEACZopC,EAAqC,IADzB,QACxBvqC,EADwB,UAI1B6rC,GAAiBD,IACjBjB,EAAoB3qC,EAAG,YAAH,OACpB6qC,EAAuB7qC,EAAG,YAAH,MACvBqrC,EAAyBrrC,EAAG,YAAH,MACzBirC,EAAoBjrC,EAAG,YAAH,OACpB+qC,EAAc/qC,EAAG,MAAH,OACdmrC,EAAiBnrC,EAAG,MAAH,OAVS,2CAAH,qDAa/B8rC,KACF,IAGFt3C,QAAQC,IAAI,iCAAiC61C,GAE7C,IAAMyB,GAAqB,uCAAG,4BAAA5qC,EAAA,sEACOspC,EAAkC,CAC/DvxC,KAAM,CACF8yC,YAAa,CACTjC,MAAOW,EACPuB,KAAMrB,GAEVztC,MAAO,CACH4sC,MAAOe,EACPmB,KAAMf,GAEVgB,YAAc,CACV,MAASlB,EACT,KAAQI,MAbM,QACpBe,EADoB,SAmB8B,OAA9BA,EAAmBrzC,QAzFpB4P,EA0FG,oCAzFhCD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,cACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAyFvCqM,GAAsB,mEAvBA,iCAtEF,IAACvM,IAsEC,OAAH,qDA6B3B,OACI,oCACwB,yBAAKlV,MAAO,CACR8T,QAAQ,OACR6gB,cAAc,WAElB,yBAAK30B,MAAO,IAGR,yBAAKA,MAAO,CACI8T,QAAQ,OACRE,WAAW,WAEf,yBAAKhU,MAAO,CACR6V,YAAY,OACZH,UAAU,SAEd,wBAAI9V,UAAU,sBAAd,iBAIC,kBAAC,IAAD,CACAA,UAAU,oBACP+P,QAAS,kBAAMooC,GAAoB,IACnC74C,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAJT,uBASP,yBAAKxqB,MAAO,CACN0V,UAAU,UAElB,yBAAK1V,MAAO,CACJ8T,QAAS,OACT4B,UAAU,SAE9C,yBAAK1V,MAAO,CACgC6V,YAAY,SAIjB,kBAAC,KAAD,CACAgS,QAASqvB,EACTpuB,eAAgBouB,EACf73C,SAAU,SAACqQ,GAAD,OAAOynC,EAAoBznC,EAAEzE,OAAO4c,WAE9C,0BAAMjoB,UAAU,2BAAhB,WAKxC,yBAAKI,MAAO,IAGwB,kBAAC,KAAD,CACE6nB,QAASuvB,EACTtuB,eAAgBsuB,EAClB/3C,SAAU,SAACqQ,GAAD,OAAO2nC,EAAuB3nC,EAAEzE,OAAO4c,WAE7C,0BAAMjoB,UAAU,2BAAhB,gBAWhB,6BAGA,yBAAKI,MAAO,CACI8T,QAAQ,OACRE,WAAW,SACX0B,UAAU,SAEd,yBAAK1V,MAAO,CACR6V,YAAY,OACZH,UAAU,SAEd,wBAAI9V,UAAU,sBAAd,UAIC,kBAAC,IAAD,CACAA,UAAU,oBACP+P,QAAS,kBAAMsoC,GAAc,IAC7B/4C,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAJT,uBAWZ,yBAAKxqB,MAAO,CACD0V,UAAU,SAGlB,yBAAK1V,MAAO,CACJ8T,QAAS,OACT4B,UAAU,SAG9C,yBAAK1V,MAAO,CACgC6V,YAAY,SAIjB,kBAAC,KAAD,CACGgS,QAASyvB,EACTxuB,eAAgBwuB,EAClBj4C,SAAU,SAACqQ,GAAD,OAAO6nC,EAAc7nC,EAAEzE,OAAO4c,WAExC,0BAAMjoB,UAAU,2BAAhB,WAKxC,yBAAKI,MAAO,IAGwB,kBAAC,KAAD,CACE6nB,QAAS6vB,EACT5uB,eAAgB4uB,EAClBr4C,SAAU,SAACqQ,GAAD,OAAOioC,EAAiBjoC,EAAEzE,OAAO4c,WAEvC,0BAAMjoB,UAAU,2BAAhB,gBAaJ,6BACA,yBAAKI,MAAO,CACR8T,QAAQ,OACRE,WAAW,SACX0B,UAAU,SAEd,yBAAK1V,MAAO,CACR6V,YAAY,OACZH,UAAU,SAEnB,wBAAI9V,UAAU,sBAAd,iBAIM,kBAAC,IAAD,CACAA,UAAU,oBACP+P,QAAS,kBAAMwoC,GAAoB,IACnCj5C,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAJT,uBASL,yBAAKxqB,MAAO,CACR0V,UAAU,UAElB,yBAAK1V,MAAO,CACJ8T,QAAS,OACT4B,UAAU,SAE9C,yBAAK1V,MAAO,CACgC6V,YAAY,SAIjB,kBAAC,KAAD,CACCgS,QAAS2vB,EACT1uB,eAAgB0uB,EAChBn4C,SAAU,SAACqQ,GAAD,OAAO+nC,EAAoB/nC,EAAEzE,OAAO4c,WAE9C,0BAAMjoB,UAAU,2BAAhB,WAKxC,yBAAKI,MAAO,IAGwB,kBAAC,KAAD,CACC6nB,QAAS+vB,EACT9uB,eAAgB8uB,EACjBv4C,SAAU,SAACqQ,GAAD,OAAOmoC,EAAyBnoC,EAAEzE,OAAO4c,WAE/C,0BAAMjoB,UAAU,2BAAhB,cAOJ,yBAAKI,MAAO,QAexD,yBAAKA,MAAO,CACgC0V,UAAU,UAGtD,kBAAC,IAAD,CAEwC/F,QAAS,SAACD,GAAD,OAAY6oC,MACrB3oC,QAASonC,EAAqCjqC,UAC9CnN,UAAU,8BAJlD,mCAUwC,yBAAKI,MAAO,CACR0V,UAAU,SAKlD,kBAAC,GAAD,CACAsI,QAAS85B,EACT3B,WAAY4B,IAGpB,kBAAC,GAAD,CACQ/5B,QAASk6B,EACT/B,WAAYgC,IAIZ,kBAAC,GAAD,CACAn6B,QAASg6B,EACT7B,WAAY8B,MCpWdlqC,GAAmBC,MAAaC,MAAM,IActCwT,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAK7ChH,GAAgB,CAClB,UAAa,GACb,QAAW,IAoNA2qC,GA5MY,SAAC,GAAiB,qBAEoBjrC,EAAe,GAAI,mBAFxC,mBAEjCkrC,EAFiC,KAETC,EAFS,OAIjBxnC,mBAAS,IAJQ,mBAIjCxJ,EAJiC,KAI5B2yC,EAJ4B,KAOlCpsC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACOsrC,EAA2B,CAC/CvzC,KAAM,CACF,UAAa+I,EAAO1G,UAAUwf,OAC9B,QAAW9Y,EAAOzG,QAAQuf,OAC1Btf,KAAOA,KALE,QACXk0B,EADW,SAUqB,OAArBA,EAAU72B,SACvBs1C,EAAQ,IACRlsC,EAAQiZ,YA/CazS,EAgDG,cA/ChCD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,cACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAkD3C1G,EAAQC,eAAc,GAnBL,iCAnCO,IAACuG,IAmCR,OAAH,wDAgFlB,OAzDHzH,qBAAU,WACT,IAAKurC,EAAsB,UAAe,CACzC,IAAMtsC,EAAQssC,EAAsB,MACpC,GAAItsC,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EAExDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eASVtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACpCF,OAAOqO,OAAO/B,EAAK,OACnB,IACGnJ,SAAQ,SAACkoB,EAAKC,GACpB,GAAmB,kBAARD,EACVhK,GAAsBgK,QAGlB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACvBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACZhK,GAAsBgK,WAU1ButB,EAAsB,WACvB54C,OAAOC,KAAK24C,EAAuBp3C,MAAMtB,SAMxC,CAAC04C,IAaG,kBAAC,IAAD,CACIlqC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OAEAC,GANH,EAKGN,QALH,EAMGM,cACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCAEsB,yBAAKvP,MAAO,CAC1C8T,QAAS,OACTC,eAAgB,kBAEhB,yBAAK/T,MAAO,CACX4R,MAAO,QAEN,kBAAC/S,EAAD,CACsCI,MAAM,KACNE,MAAOsP,EAAO1G,UACdtI,KAAK,YACLF,QAAU6P,EAAQrH,WAAamH,EAAOnH,YAChCoH,GAAgB6pC,EAAuBtsC,MAAvB,gBAEtBlN,YAAc4P,EAAQrH,WAAamH,EAAOnH,YACpCoH,GAAgB6pC,EAAuBtsC,MAAvB,gBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,iBAI5D,yBAAKrP,MAAO,CACX4R,MAAO,QAGgC,kBAAC/S,EAAD,CACAI,MAAM,UACNE,MAAOsP,EAAOzG,QACdvI,KAAK,UACLF,QAAU6P,EAAQpH,SAAWkH,EAAOlH,UAC9BmH,GAAgB6pC,EAAuBtsC,MAAvB,cAEtBlN,YAAc4P,EAAQpH,SAAWkH,EAAOlH,UAClCmH,GAAgB6pC,EAAuBtsC,MAAvB,cACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,gBAS5D,wBAAIzP,UAAU,mBAAd,QAKJ,kBAAC,KAAD,CACA6yB,OAAQC,KACR9wB,KAAMqG,EACN0qB,OAAQ,SAAAF,GAEJzxB,QAAQC,IAAI,0BAA2BwxB,IAE3CpzB,SAAU,SAAC6I,EAAOuqB,GACd,IAAM7wB,EAAO6wB,EAAOG,UACpBgoB,EAAQh5C,IAEZqiB,OAAQ,SAAC/b,EAAOuqB,GACZzxB,QAAQC,IAAI,QAASwxB,IAEzBpD,QAAS,SAACnnB,EAAOuqB,GACbzxB,QAAQC,IAAI,SAAUwxB,MAKK,yBAAKzyB,MAAO,CACR0V,UAAU,UAEX,kBAAC,IAAD,CAEE/F,QAAS,SAACD,GAAD,OAAYlB,EAAakB,IAClCE,QAASopC,EAAuBjsC,UAChCnN,UAAU,8BAJZ,QAUH,yBAAKI,MAAO,CACR0V,UAAU,eCjLtC6jC,GAxEW,SAAC,GAAuC,IAArCx3C,EAAoC,EAApCA,GAAIy3C,EAAgC,EAAhCA,mBAAgC,EACR1rC,EACrD,GACA,mBAH6D,mBACxD2rC,EADwD,KACnCC,EADmC,KAsB/D,OAhBAjsC,qBAAU,YACmB,uCAAG,sBAAAE,EAAA,sEACV+rC,EAAwB,CACxCj5C,WAAY,CACVE,aAAc,CACZoB,GAAIA,MAJkB,yDAAH,qDAU3B8yC,KACC,IAEH7zC,QAAQC,IAAI,sBAAuBw4C,GAGjC,oCACGA,EAAoB1sC,WACnB,oCACE,yBACE/M,MAAO,CACL4R,MAAO,OACPkC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZvE,OAAQ,YAGV,kBAAC,KAAD,CAAMkJ,KAAK,YAKhB8gC,EAAoBzsC,MACnBysC,EAAoB73C,MACpBxB,OAAOC,KAAKo5C,EAAoB73C,MAAMtB,OAAS,GAC7C,oCACE,yBAAKV,UAAU,qBACb,yBACE+P,QAAS,kBAAM6pC,EAAmB,KAClC55C,UAAU,8BAEV,kBAAC+5C,GAAA,EAAD,OAEF,yBAAK/5C,UAAU,6BACb,8BAAO65C,EAAmB,KAAnB,SACP,4BAAKA,EAAmB,KAAnB,WACL,4BACGA,EAAmB,KAAnB,MACCnjC,IAAOmjC,EAAmB,KAAnB,MAAqC7tC,OAC1C,6BAIR,yBAAKhM,UAAU,2BACZ65C,EAAmB,KAAnB,MACCjY,KAAgBiY,EAAmB,KAAnB,WCmCnBG,GAnGD,SAAC1lC,GAAkB,IAAD,EACyBpG,EAAe,GAAI,mBAD5C,mBACrB+rC,EADqB,KACFH,EADE,OAEiBjoC,mBAAS,IAF1B,mBAErBqoC,EAFqB,KAELN,EAFK,KAuB5B,OAlBA/rC,qBAAU,YACmB,uCAAG,sBAAAE,EAAA,sEACR+rC,EAAwB,CACtCj5C,WAAY,CACRC,OAAQ,CACNq5C,WAAY,QAJI,yDAAH,qDAW3BlF,KACC,IAGH7zC,QAAQC,IAAI,oBAAoB44C,GAG5B,oCACKA,EAAkB9sC,WACf,oCAGR,yBAAK/M,MAAO,CACR4R,MAAO,OACPkC,QAAQ,OACRC,eAAe,SACfC,WAAW,SACXvE,OAAO,YAEN,kBAAC,KAAD,CAAMkJ,KAAK,YAQvBkhC,EAAkB7sC,MAAQ6sC,EAAkBj4C,MAAQi4C,EAAkBj4C,KAAKtB,OAAS,GACjF,oCAEA,yBAAKV,UAAU,2BAELk6C,GACE,oCACMD,EAAkB7sC,MAAQ6sC,EAAkBj4C,MAAQi4C,EAAkBj4C,KAAKtB,OAAS,GAC9F,oCACCu5C,EAAkBj4C,KAAKf,KAAI,SAAAQ,GACxB,OACI,yBACAsO,QAAS,kBAAM6pC,EAAmBn4C,EAAKU,KACvCnC,UAAU,gCACV,yBAAKA,UAAU,qCACX,8CACSyB,EAAK0G,YAEhB,wCACI1G,EAAK2G,WAIX,4BACCw5B,KAAgBngC,EAAK4G,KAAKgyC,UAAU,EAAG,KAAO,UAE/C,4BACC54C,EAAKoD,MAAQ6R,IAAOjV,EAAKoD,MAAMmH,OAAO,uBAW9CkuC,GACG,oCACA,kBAAC,GAAD,CACAN,mBAAoBA,EACpBz3C,GAAI+3C,SCtEZl8B,GAAYC,KAAZD,QAoEOs8B,GA5DH,SAAChmC,GACT,OACI,oCACI,yBAAKtU,UAAU,qBAEX,kBAAC,KAAD,CAAMoiB,iBAAiB,KACvB,kBAAC,GAAD,CACIC,IACI,8BACA,kBAACitB,GAAA,EAAD,MADA,SAKXjtC,IAAI,KACO,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAEAggB,IACI,8BACA,kBAACk4B,GAAA,EAAD,MADA,iBAIFl4C,IAAI,KACF,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CACCggB,IACG,8BACA,kBAACzO,GAAA,EAAD,MADA,kBAMLvR,IAAI,KACC,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAEAggB,IACI,8BACA,kBAACzO,GAAA,EAAD,MADA,wBAKHvR,IAAI,KACD,kBAAC,GAAD,WCgDT44C,IAhHI7pC,IAAXC,OAIiB,SAACiD,GACxB,IAAMC,EAAUC,eADyB,EAGsBtG,EAC7D,GACA,0BALuC,mBAGlCuG,EAHkC,KAGTC,EAHS,KAazC7G,qBAAU,YACgB,uCAAG,sBAAAE,EAAA,sEACnB2G,EAA4B,CAChC7T,WAAY,CACVC,OAAQ,CACNmU,YAAa,QAJM,2CAAH,qDAUxBC,KACC,IAEH9T,QAAQC,IAAI,0BAA2BoT,GAEvC,IAAMgB,EAAW,CACf9M,SAAU,kBAAC2K,GAAA,EAAD,MACVvJ,MAAO,kBAACoJ,GAAA,EAAD,OAmET,OACE,oCACE,yBAAKnT,UAAU,oBACb,wBAAIA,UAAU,6BAAd,gBAlEAyU,EAAwBtH,UAExB,yBACE/M,MAAO,CACL6T,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ0B,UAAW,UAGb,kBAAC,KAAD,OAKJrB,EAAwBrH,MACxBqH,EAAwBzS,OACvByS,EAAwBzS,KAAK,GAG5B,yBACE5B,MAAO,CACL6T,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZ0B,UAAW,UAGb,kBAAC,GAAD,CAAO7S,MAAM,2BAMjB,yBAAKjD,UAAU,iCACZyU,EAAwBrH,MACvBqH,EAAwBzS,KAAK,IAC7ByS,EAAwBzS,KAAKf,KAAI,SAACQ,EAAMgV,GACtC,OACE,yBACE1G,QAAS,kBAAMwE,EAAQzQ,KAAR,iBAAuBrC,EAAKnC,KAA5B,YAAoCmC,EAAKW,OACxDpC,UAAU,uCAEV,0BAAMA,UAAU,4CACbyV,EAAShU,EAAI,OAEhB,yBAAKzB,UAAU,4CACb,4BAAKyB,EAAKuC,SACV,4BAAKvC,EAAKwC,MACV,4BACGxC,EAAKuB,OACJ0T,IAAOjV,EAAKuB,OAAOgJ,OAAO,mC,oBC7CjCkvC,GAhEQ,SAAC,GAA+D,IAA9DC,EAA6D,EAA7DA,YAAYC,EAAiD,EAAjDA,eAAeC,EAAkC,EAAlCA,aAAkC,IAArB77C,oBAAqB,MAAR,GAAQ,IAE7CqS,oBAAS,GAFoC,mBAE3EypC,EAF2E,KAE/DC,EAF+D,OAGnD1pC,oBAAS,GAH0C,mBAG3E2pC,EAH2E,KAGlEC,EAHkE,KAoBlF,OAFEr6C,QAAQC,IAAI,eAAe7B,GAGzB,oCACA,yBACAY,MAAO,CACH+iC,aAAa,iBACbloB,aAAa,QAEhBjb,UAAU,6BACH,kBAAC,KAAD,CACII,MAAO,CACH6a,aAAa,QAEjBygC,cAAeJ,EACf77C,SAtBW,SAAAqQ,GACvBsrC,EAAetrC,EAAEzE,OAAO4c,QAAUozB,EAAe,IACjDE,GAAe,GACfE,EAAY3rC,EAAEzE,OAAO4c,UAoBTA,QAASuzB,GANb,gBAWR,kBAAC,KAAStT,MAAV,CACA9nC,MAAO,CAAE4R,MAAO,QACfzS,MAAO47C,EACP37C,aAAcA,EACdC,SAtCY,SAAA07C,GACbC,EAAeD,GACfI,IAAiBJ,EAAYz6C,QAAUy6C,EAAYz6C,OAAS26C,EAAa36C,QACzE+6C,EAAYN,EAAYz6C,SAAW26C,EAAa36C,UAoClD,kBAAC,KAAD,KACC26C,EAAap6C,KAAI,SAAA06C,GACd,OACE,kBAAC,KAAD,CACAv7C,MAAO,CACH6a,aAAa,QAEjB2gC,KAAM,GACN,kBAAC,KAAD,CAAUr8C,MAAOo8C,GACZA,WCjDX/qC,GAAcC,GAAc,GAAdA,CAAA,gBCXY,gCDYJ,SAAC5D,EAAOC,GAEhC,OADoBA,EAAOG,YEXlBwuC,GAAkB,SAAC/qC,GAAD,MAAY,CACvCxR,KDH4B,+BCI5B+N,QAASyD,ICIEZ,GHUAU,GIOTzC,GAAmBC,MAAaC,MAAM,IA4BtCwT,GAAwB,SAACvM,GAC9BD,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAKvC6lC,GAAe,CACpB,eAAgB,gBACb,cAAe,eACf,WAAY,YACZ,UAAW,WACX,UAAW,WACX,YACA,WACA,YAAa,cAsSX3pC,GAAoB,CACtBX,UAAWY,EAAiBZ,UAC5B8qC,gBAAiBC,EAAsBD,iBAU1BjqC,gBAPS,SAAA3E,GAAK,MAAK,CAChC6D,MAAO7D,EAAM2D,YACbvE,YAAaY,EAAMZ,eAKmBqF,GAAzBE,EAjSC,SAAC,GAAsG,IAApG1P,EAAmG,EAAnGA,SAAUmc,EAAyF,EAAzFA,WAAYD,EAA6E,EAA7EA,QAASsX,EAAoE,EAApEA,QAASP,EAA2D,EAA3DA,WAA2D,KAA/CpkB,UAA+C,EAApCD,MAAoC,EAA7B+qC,gBACtC3tC,EAAe,GAAI,oBADgD,mBAChH+tB,EADgH,KAChGC,EADgG,OAEtErqB,mBAAS3P,EAAS+O,MAAQ/O,EAAS+O,KAAKvQ,OAA/B,aAA4CwB,EAAS+O,MAAO,IAFC,mBAEhH8qC,EAFgH,KAE9FC,EAF8F,KAKjHptC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,yBAAAf,EAAA,6DACpB3M,QAAQC,IAAI,cAAcwN,GAGtBiC,EAJgB,aAIJirC,GACsB,KAA7BA,EAAkBr7C,QACjBoQ,EAAMmrC,QAAQ,cANJ,SAUO/f,EAA0B,CACpDr7B,WAAY,CACXE,aAAc,CACboB,GAAID,EAASE,MAGf0D,KAAM,CACLjG,KAAMgP,EAAOhP,KACbq8C,OAAQprC,EACI3J,MAAO0H,EAAO1H,MACdoH,SAAUM,EAAON,SACjB4tC,UAAWttC,EAAOutC,wBArBZ,QAUdjgB,EAVc,SA0BwB,OAAxBA,EAAaz2B,QA1EF4P,OA2E9B4I,EA1EF7I,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,gBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAwE1C6I,GAAW,GAEL6c,EAAgB,WACrB,OAAOxF,EAAQz0B,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQK,EAASE,MAGtDhB,QAAQC,IAAI,eAAe86B,GAUrB1lB,EAAQykB,IAGRxZ,EAAclhB,OAAOmhB,OAAO,GAAI+T,EAAQjf,GAA1BjW,OAAA,IAAAA,CAAA,GAAuC27B,IACrDC,EAtB2C,uBAsBvB1G,EAAQ9zB,MAAM,EAAG6U,IAtBM,CAsBEiL,GAtBF,aAsBkBgU,EAAQ9zB,MAAM6U,EAAQ,KACzFrV,QAAQC,IAAI,gBAAgB+6B,GAC5BjH,EAAWiH,GAEXttB,EAAQiZ,aAIRlG,KAGD/S,EAAQC,eAAc,GA3DF,iCAhDU,IAACuG,IAgDX,OAAH,wDA+DZ4S,EAAe,SAACpY,GACrBuO,GAAW,IAkEZ,OA3DAxQ,qBAAU,WACT,IAAKouB,EAAc,UAAe,CACjC,IAAMnvB,EAAQmvB,EAAc,MAC5B,GAAInvB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EAExDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eASVtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACpCF,OAAOqO,OAAO/B,EAAK,OACnB,IACGnJ,SAAQ,SAACkoB,EAAKC,GACpB,GAAmB,kBAARD,EACVhK,GAAsBgK,QAGlB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACvBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACZhK,GAAsBgK,WAU1BoQ,EAAc,WACfz7B,OAAOC,KAAKw7B,EAAej6B,MAAMtB,OAAS,GAEtCu7B,EAAc,KAAd,SAWH,CAACA,IAQH,kBAAC,IAAD,CACC/sB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPtM,KAGL,gBACAmN,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OAEAC,GANA,EAKAN,QALA,EAMAM,cACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACCvO,QAAQC,IAAI,SAASiO,GACrB,kBAAC,KAAD,CACCrM,MAAM,aACNmb,QAASA,EACT4D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACdhZ,QAAST,EACT0Z,SAAU,WAGX,kBAAChqB,EAAD,CACCI,MAAM,QACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgB0sB,EAAenvB,MAAf,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgB0sB,EAAenvB,MAAf,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAKlB,wBAAIzP,UAAU,mBAAd,uBAIA,kBAAC,GAAD,CACAR,aAAc0C,EAAS+O,KACFoqC,aAAcA,GACdF,YAAaY,EACbX,eAAgBY,IAKtC,yBAAK57C,MAAO,CACX0V,UAAW,OACXmF,aAAc,SAEd,yBAAK7a,MAAO,CACX+iC,aAAa,iBACbloB,aAAc,OACdnF,UAAW,SAEZ,wBAAI9V,UAAU,mBAAd,qDAMA,kBAACf,EAAD,CACyBI,MAAM,QACNE,MAAOsP,EAAO1H,MACdtH,KAAK,QACLF,QAAU6P,EAAQrI,OAASmI,EAAOnI,QAC5BoI,GAAgB0sB,EAAenvB,MAAf,YAEtBlN,YAAc4P,EAAQrI,OAASmI,EAAOnI,QAChCoI,GAAgB0sB,EAAenvB,MAAf,YACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,YAQzB,kBAACxQ,EAAD,CACKI,MAAM,WACNE,MAAOsP,EAAON,SACd1O,KAAK,WACLP,KAAK,WACLK,QAAU6P,EAAQjB,UAAYe,EAAOf,WAC/BgB,GAAgB0sB,EAAenvB,MAAf,eAEtBlN,YAAc4P,EAAQjB,UAAYe,EAAOf,WACnCgB,GAAgB0sB,EAAenvB,MAAf,eACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,eAKxB,kBAACxQ,EAAD,CACII,MAAM,mBACNE,MAAOsP,EAAOutC,qBACdv8C,KAAK,uBACLP,KAAK,WACLK,QAAU6P,EAAQ4sC,sBAAwB9sC,EAAO8sC,uBAC3C7sC,GAAgB0sB,EAAenvB,MAAf,gBAEtBlN,YAAc4P,EAAQ4sC,sBAAwB9sC,EAAO8sC,uBAC/C7sC,GAAgB0sB,EAAenvB,MAAf,gBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,oCC7T9CtB,GAAmBC,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,wCACrEoH,MAAOiH,MACNjP,SAAS,sCACT6+B,IAAI,GAAI,uCACVzvB,SAAUH,MACR/O,MAAM,YACNF,WACHi9C,qBAAsBhuC,MACnB/O,MAAM,oBACNF,WACAqyC,MAAM,CAACpjC,IAAQ,YAAa,MAAO,0BAclCyT,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAK7ChH,GAAgB,CAClB3O,KAAM,GACNsH,MAAO,GACPD,MAAO,GACPqH,SAAU,GACV6tC,qBAAsB,GACtBF,OAAQ,IAINb,GAAe,CACjB,eAAgB,gBAChB,cAAe,eACf,WAAY,YACZ,UAAW,WACX,UAAW,WACX,YACA,WACA,YAAa,cAuRFgB,GA3QU,SAAC,GAAqF,IAAnF32B,EAAkF,EAAlFA,sBAAuBC,EAA2D,EAA3DA,yBAA0B+P,EAAiC,EAAjCA,QAASP,EAAwB,EAAxBA,WAAwB,EAEjEjnB,EAAe,GAAI,qBAF8C,mBAEnGmuB,EAFmG,KAEtFC,EAFsF,OAG1EzqB,oBAAS,GAHiE,mBAGnG2M,EAHmG,KAGzFF,EAHyF,OAIlEzM,oBAAS,GAJyD,mBAInG2kB,EAJmG,KAIrFC,EAJqF,OAKzD5kB,mBAAS,IALgD,mBAKnGkqC,EALmG,KAKjFC,EALiF,KAQpGptC,EAAY,uCAAG,WAAOC,EAAaC,GAApB,iBAAAf,EAAA,6DACb+C,EADa,aACDirC,GACgB,KAA7BA,EAAkBr7C,QACjBoQ,EAAMmrC,QAAQ,cAHD,SAKO3f,EAAkB,CACtCx2B,KAAM,CACFjG,KAAMgP,EAAOhP,KAAK8nB,OAClBzgB,MAAO2H,EAAO3H,MAAMygB,OACpBxgB,MAAO0H,EAAO1H,MACdoH,SAAUM,EAAON,SACjB4tC,UAAWttC,EAAOutC,qBAClBF,OAAQprC,KAZC,QAKXyrB,EALW,SAgBqB,OAArBA,EAAU72B,QAGvByvB,EAAW,GAAD,oBAAKO,GAAL,gBAEH6G,EAFG,CAGNp6B,GAAIo6B,EAAS,IAAU,GACvBl6B,IAAKk6B,EAAS,IAAU,GACxB18B,KAAM08B,EAAS,MAAY,QAE/BztB,EAAQiZ,YACRpC,GAAyB,IAGzB9D,KAIJ/S,EAAQC,eAAc,GAlCL,2CAAH,wDAsClBlB,qBAAU,WACZ,IAAKwuB,EAAW,UAAe,CAC9B,IAAMvvB,EAAQuvB,EAAW,MACzB,GAAIvvB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EACxDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAQVtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACpCF,OAAOqO,OAAO/B,EAAK,OACnB,IACGnJ,SAAQ,SAACkoB,EAAKC,GACpB,GAAmB,kBAARD,EACVhK,GAAsBgK,QAGlB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACvBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACZhK,GAAsBgK,UAxHE,IAACvW,GAkI7B+mB,EAAW,WACZ77B,OAAOC,KAAK47B,EAAYr6B,MAAMtB,OAAS,GAED,OAAlC27B,EAAW,KAAX,SArI0B/mB,EAsIL,6BArIxBD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,gBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,iCA4I5C,CAAC6mB,IAIJ,IAAMnU,EAAe,SAACpY,GAClB6V,GAAyB,IAIvB3W,EAA4B,SAACH,EAAQI,GACvC,QAAKJ,EAAOhP,MAASgP,EAAO1H,OAAU0H,EAAON,UAAaM,EAAOutC,sBAAyBntC,IAO9F,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIvP,MAAO,CACH2hB,IAAK,QAET9e,MAAM,qBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,KAGhD,kBAAChQ,EAAD,CACII,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC3B0P,GAAgB8sB,EAAYvvB,MAAZ,WAEtBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAC/B0P,GAAgB8sB,EAAYvvB,MAAZ,WACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,WAKxB,kBAACxQ,EAAD,CACII,MAAM,QACNE,MAAOsP,EAAO1H,MACdtH,KAAK,QACLF,QAAU6P,EAAQrI,OAASmI,EAAOnI,QAC5BoI,GAAgB8sB,EAAYvvB,MAAZ,YAEtBlN,YAAc4P,EAAQrI,OAASmI,EAAOnI,QAChCoI,GAAgB8sB,EAAYvvB,MAAZ,YACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,YAKxB,kBAACxQ,EAAD,CACII,MAAM,QACNE,MAAOsP,EAAO3H,MACdrH,KAAK,QACLF,QAAU6P,EAAQtI,OAASoI,EAAOpI,QAC5BqI,GAAgB8sB,EAAYvvB,MAAZ,YAEtBlN,YAAc4P,EAAQtI,OAASoI,EAAOpI,QAChCqI,GAAgB8sB,EAAYvvB,MAAZ,YACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,YAKzB,kBAACxQ,EAAD,CACKI,MAAM,WACNE,MAAOsP,EAAON,SACd1O,KAAK,WACLP,KAAK,WACLK,QAAU6P,EAAQjB,UAAYe,EAAOf,WAC/BgB,GAAgB8sB,EAAYvvB,MAAZ,eAEtBlN,YAAc4P,EAAQjB,UAAYe,EAAOf,WACnCgB,GAAgB8sB,EAAYvvB,MAAZ,eACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,eAKxB,kBAACxQ,EAAD,CACII,MAAM,mBACNE,MAAOsP,EAAOutC,qBACdv8C,KAAK,uBACLP,KAAK,WACLK,QAAU6P,EAAQ4sC,sBAAwB9sC,EAAO8sC,uBAC3C7sC,GAAgB8sB,EAAYvvB,MAAZ,2BAEtBlN,YAAc4P,EAAQ4sC,sBAAwB9sC,EAAO8sC,uBAC/C7sC,GAAgB8sB,EAAYvvB,MAAZ,gBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,2BAIpB,wBAAIzP,UAAU,mBAAd,uBAIJ,kBAAC,GAAD,CACAq7C,aAAcA,GACdF,YAAaY,EACbX,eAAgBY,KAMpB,kBAAC,GAAD,CACI39B,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SC/S5CL,GAA0B,SAAC5I,GAChCD,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,gBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAKvCqM,GAAwB,SAACvM,GAC9BD,KAAavI,MAAM,CAClBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAiBrC2G,IAXiB/N,MAAaC,MAAM,CAC3CxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAUtCqc,KAAxBD,QACA+N,IADwB9N,KAAhBC,YACG2P,IAAX9B,QAIFC,GAAU,SAAC,GAAiC,IAA/BnoB,EAA8B,EAA9BA,KAAMmzB,EAAwB,EAAxBA,WAAYrkB,EAAY,EAAZA,MAAY,EAClBe,oBAAS,GADS,mBACzCuM,EADyC,KAChCC,EADgC,OAEUxM,oBAAS,GAFnB,mBAEzCuY,EAFyC,KAElBC,EAFkB,OAGDnc,EAAe,GAAI,eAHlB,mBAGzCouC,EAHyC,KAGzBlnB,EAHyB,KAOhDvnB,qBAAU,WACT,IAAKyuC,EAAc,UAAe,CAChC,IAAMxvC,EAAQwvC,EAAc,MAC5B,GAAIxvC,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EAC1DoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACtCF,OAAOqO,OAAO/B,EAAK,OACnB,IACInJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACZhK,GAAsBgK,QACd,GAAmB,kBAARA,EAAkB,CACrC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACfhK,GAAsBgK,WAStBywB,EAAc,WACf97C,OAAOC,KAAK67C,EAAet6C,MAAMtB,OAAS,GAED,OAArC47C,EAAc,KAAd,QACLp+B,GAAwB,oBAUrB,CAACo+B,IAGU9nC,eAAhB,IAGM6gB,EAAe,uCAAG,WAAOlzB,GAAP,iBAAA4L,EAAA,sEACIqnB,EAAqB,CAC/Cv0B,WAAY,CACXE,aAAc,CACboB,SAJoB,QACjBmzB,EADiB,SAWqB,OAAxBA,EAAa5vB,SAE1B6vB,EAAavzB,EAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAKW,MAAQD,KACpDgzB,EAAWI,IAdW,2CAAH,sDA8BrB,OACC,oCACC,kBAAC,KAAD,CAMCxc,KAAK,QAEL8D,WAAY7a,GAGZ,kBAAC,GAAD,CACCiB,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACP,oCAEC,wBACCpN,QAAS,WAGRsa,EAAyBlN,IAE1B/c,MAAO,CACN0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGR/R,OAQL,kBAAC,GAAD,CACChB,MAAM,QACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,yBAKX,kBAAC,GAAD,CACCiD,MAAM,QACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,yBAIX,kBAAC,GAAD,CACCgS,MAAO,IACP/O,MAAM,QACNga,UAAU,OACV5a,IAAI,OACJrC,UAAU,uBACVkd,OAAQ,SAAAlY,GAAI,OACX,oCACCA,GAAQA,EAAKtE,OAAS,GAAKsE,EAAK/D,KAAI,SAACiH,GAAD,OACpC,kBAAC,KAAD,CACA9H,MAAO,CACNC,aAAa,MACb4a,aAAc,OAEfzF,MAAM,OAAOnT,IAAK6F,GACjBA,UAWP8I,GAAS,aAAaF,IAEf,kBAAC,GAAD,CAEA9Q,UAAU,uBACViD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACP,kBAAC,KAAD,CAAOpE,KAAK,UACX,uBAAGvC,KAAK,MACP,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,cAC9B,0BAAMjD,UAAU,WAAW+P,QAAS,WACnCsO,GAAW,GACXgM,EAAyBlN,KAEzB,kBAACyN,GAAA,EAAD,SAOH,kBAAC,KAAD,CACC7H,UAAW,kBAAMsS,EAAgBlY,EAAO/a,MACxCa,MAAM,qBAAgBkf,OAAO,MAAMa,WAAW,MAC9C,0BACChjB,UAAU,4BAEV,kBAAC4iB,GAAA,EAAD,aAeRwH,GAAyB,kBAAC,GAAD,CACzBsL,QAAS1zB,EACTmzB,WAAYA,EACZ9W,WAAYA,EACZD,QAASA,EACTlc,SAAUkoB,MAiKGxY,gBANS,SAAA3E,GAAK,MAAK,CAChC6D,MAAO7D,EAAM2D,eAKyB,KAAzBgB,EArJD,SAAC,GAAsB,IAApBd,EAAmB,EAAnBA,MAAmB,EAGPe,mBAAS,IAHF,mBAG9B6jB,EAH8B,KAGrBP,EAHqB,OAKEjnB,EAAe,GAAI,aALrB,mBAK9BggB,EAL8B,KAKpBC,EALoB,KAQrCtgB,qBAAU,YACI,uCAAG,4BAAAE,EAAA,sEACIogB,EAAmB,IADvB,OACTnpB,EADS,OAGfmwB,EAAWnwB,GAHI,2CAAH,qDAKbwe,KACE,IAfkC,MAmBItV,EAAe,GAAI,UAnBvB,gCAoBqB2D,oBAAS,IApB9B,mBAoB9B6T,EApB8B,KAoBPC,EApBO,KAgFrC,OADAvkB,QAAQC,IAAI,iBAAiB6sB,GAE5B,oCAEC,yBAAKluB,UAAU,yBACd,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,+CACd,wBAAIA,UAAU,uCAAd,UAKA,kBAAC,GAAD,CACCqrB,aAAa,EACbrrB,UAAU,qBACVM,YAAY,kBACZquB,SAAU,SAAApvB,GAAK,OAzBA,SAACA,GACrB,GAAI2uB,EAASlsB,KAAKtB,OAAS,EAAG,CAC7B,IAAMk1B,EAAa1H,EAASlsB,KAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBACvFqc,EAAWS,IAsBYtK,CAAa/rB,OAIjCyR,GAAS,aAAaF,IACvB,kBAAC,IAAD,CAEA9Q,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJxC,YAYD,yBAAK3lB,UAAU,uCACbkuB,EAAS9gB,MAAQsoB,EAAQh1B,OAAS,GAAK,kBAAC,GAAD,CACxCoQ,MAAOA,EACNqkB,WAAYA,EACZnzB,KAAM0zB,IACNxH,EAAS/gB,WAAa,kBAACoe,GAAD,MAGtB2C,EAAS9gB,QAAUsoB,EAAQh1B,OAAS,IACpC,yBAAKN,MAAO,CACX0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,iBAAiBO,MAAOmR,KAAMK,4BAMrD,kBAACkoC,GAAD,CACC7mB,QAASA,EACTP,WAAYA,EACZzP,sBAAuBA,EACvBC,yBAA0BA,QClbxBxX,GAAmBC,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,wCACrEuC,YAAa8L,MAAa/O,MAAM,eAAeF,SAAS,6BActD0iB,GAAwB,SAACvM,GAC3BD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBA8IpCqmB,GAlIG,SAAC,GAAkF,IAAhFC,EAA+E,EAA/EA,eAAgBC,EAA+D,EAA/DA,kBAAmBC,EAA4C,EAA5CA,cAAcU,EAA8B,EAA9BA,iBAA8B,EAC5CxuB,EAAe,GAAI,aADyB,mBACzF+tB,EADyF,KACzEC,EADyE,KAG1FttB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACUmuB,EAA0B,CACjDr7B,WAAY,CACRE,aAAc,CACVoB,GAAI0M,EAAO1M,KAGnB2D,KAAM,CACFjG,KAAMgP,EAAOhP,KACbyC,YAAauM,EAAOvM,eATX,QACX65B,EADW,SAc2B,OAAxBA,EAAaz2B,QAC7Bg3B,EAAiB,CACbv6B,GAAG0M,EAAO1M,GACVE,IAAIwM,EAAO1M,GACXtC,KAAMgP,EAAOhP,KACbyC,YAAauM,EAAOvM,cA/CHgT,OAiDrB4I,EAhDR7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,gBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BA2DvCqM,KAGJ/S,EAAQC,eAAc,GACtBgtB,GAAkB,GAvCD,iCA5BO,IAACzmB,IA4BR,OAAH,wDA2CZ4S,EAAe,SAACpY,GAClBisB,GAAkB,IAIhB/sB,EAA4B,SAACH,EAAQI,GACvC,QAAKJ,EAAOhP,MAASgP,EAAOvM,aAAgB2M,IAMhD,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJwtB,KAGR,gBACG3sB,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACI1M,MAAM,aACNmb,QAAS0d,EACT9Z,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,KAGhD,kBAAChQ,EAAD,CACII,MAAM,QACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC3B0P,GAAgB0sB,EAAenvB,MAAf,WAEtBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAC/B0P,GAAgB0sB,EAAenvB,MAAf,WACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,WAGxB,kBAAC,GAAD,CACIpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACdzC,KAAK,cACLF,QAAU6P,EAAQlN,aAAegN,EAAOhN,cAClCiN,GAAgB0sB,EAAenvB,MAAf,kBAEtBlN,YAAc4P,EAAQlN,aAAegN,EAAOhN,cACtCiN,GAAgB0sB,EAAenvB,MAAf,kBACtBrN,SAAU,SAACqQ,GACPT,EAAaS,GACbL,EAAgB,wBCRrCsmB,IA7HiB3Z,KAAxBD,OAAwBC,KAAhBC,YACG2P,IAAX9B,OAOe,SAAC5V,GAAkB,IAAD,EACUpG,EAAe,GAAI,eAD7B,mBAC9ByuB,EAD8B,KACdC,EADc,OAEc1uB,EAAe,GAAI,eAFjC,mBAE9B2uB,EAF8B,KAEZC,EAFY,OAGOjrB,oBAAS,GAHhB,mBAG9BiqB,EAH8B,KAGdC,EAHc,OAIIlqB,mBAAS,IAJb,mBAI9BmqB,EAJ8B,KAIhBU,EAJgB,KAO/B57B,EAASurB,eAETuI,GADUpgB,eACF1T,EAAM,IAgDpB,OA9CA+M,qBAAU,YAEc,uCAAG,4BAAAE,EAAA,sEACS6uB,EAAqB,CAC7C/7B,WAAY,CACRE,aAAc,CACVoB,GAAIyyB,MAJG,QACbmI,EADa,UAWf37B,QAAQC,IAAI,eAAe07B,GAE3BL,EAAiBK,IAbF,2CAAH,qDAiBpB7F,KAED,CAACtC,IAEJ/mB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACb+uB,EAAuB,CACzBj8B,WAAY,CACRE,aAAc,CACVoB,GAAIyyB,MAJG,2CAAH,qDAUpBoI,KAED,CAACpI,IAKJxzB,QAAQC,IAAI,mBAAoBw7B,GAEhCz7B,QAAQC,IAAI,cAAeP,GAIvB,yBAAKd,UAAU,wBACX,yBAAKA,UAAU,iCACX,4CAIC28B,EAAevvB,MAAQ4uB,GAAkBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAC1E,oCACI,kBAAC87C,GAAD,CACI1gB,eAAgBA,EAChBC,kBAAmBA,EACnBC,cAAeA,EACfU,iBAAkBA,IAEtB,kBAAC,IAAD,CACI3sB,QAAS,kBAAMgsB,GAAkB,IACjCz8B,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAHV,UAUZ,kBAAC,KAAD,CACI0C,UAAW,CAAEzP,KAAM,GACnB7N,QAAS2sB,EAAexvB,WACvBwvB,EAAevvB,MAAQ4uB,KAAmBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,IAC3E,kBAAC,KAAD,CAAO4B,YAAY,iBAAiBO,MAAOmR,KAAMK,yBAGpDsoB,EAAevvB,MAAQ4uB,GAAkBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAC1E,yBAAKV,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACKg8B,EAAa,MAElB,4BACKA,EAAa,aAEjBA,EAAa,KACV,mCAEI,8BACKA,EAAa,YCzH9CrO,GAAiBC,KAAjBD,aACAzD,GAAWjrB,IAAXirB,OAgOO2D,GAvNF,SAAC,GAKA,IAJZC,EAIW,EAJXA,UACAC,EAGW,EAHXA,gBACAC,EAEW,EAFXA,aAEW,EACmBnc,mBAAS,IAD5B,mBACJ9F,EADI,KACKkiB,EADL,OAEkCpc,mBAAS,IAF3C,gCAG4B3D,EAAe,GAAI,gBAH/C,mBAGJggB,EAHI,KAGMC,EAHN,OAI2Btc,mBAAS,IAJpC,mBAIJuc,EAJI,KAISC,EAJT,KAyBXxgB,qBAAU,WACR,GAAIqgB,EAAS9gB,MAAQ8gB,EAASlsB,KAAKtB,OAAS,GAAKstB,EAAattB,OAAS,EAAG,CACxE,IAAM4tB,EAAsBN,EAAa/sB,KAAI,SAACQ,GAC5C,IAAM8sB,EAAmBL,EAASlsB,KAAKof,MACrC,SAAC/a,GAAD,OAASA,EAAIlE,KAAOV,KAEtB,GAAI8sB,EACF,OAAOA,EAAiB1uB,QAG5BkuB,EAAgBO,MAEjB,CAACJ,IAIJrgB,qBAAU,YACK,uCAAG,8BAAAE,EAAA,sEACWogB,EAAmB,CAC1CttB,WAAY,CACVC,OAAQ,CACNmqB,eAAe,MAJP,QACRuD,EADQ,SAUIA,EAAW9tB,OAAS,IAE9B+tB,EAAaD,EAAWvtB,KAAI,SAACiH,GACjC,OAAOA,EAAIrI,QAEbouB,EAAWQ,IAfC,2CAAH,qDAoBbjL,KACC,IAiDH,OAJApiB,QAAQC,IAAI,eAAgB2sB,GAK1B,oCAEGE,EAAS/gB,WACR,yBAAK/M,MAAO,CACViW,QAAS,SACTrE,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,OAMH8Z,EAAS9gB,QAAU8gB,EAASlsB,KAAKtB,OAAS,IACzC,yBAAKN,MAAO,CACV4R,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,GAAD,CAAOnR,MAAM,eAAegR,OAAQ,OAoBvCia,EAAS9gB,MAAQ8gB,EAASlsB,KAAKtB,OAAS,GAAKqL,EAAQrL,OAAS,GAC7D,oCACE,yBAAKV,UAAU,8CACb,kBAAC,GAAD,CACEgS,MAAO,MACP5R,MAAO,CACL6T,OAAQ,OACR5T,aAAc,iBACdquB,YAAa,mBAEf3V,KAAK,SACLzY,YAAY,WACZquB,SAAU,SAACpvB,GAAD,OAAW6B,QAAQC,IAAI9B,IACjCE,SArFW,SAACqQ,GAGtB,GAFAue,EAAeve,EAAEzE,OAAO9L,OAED,KAAnBuQ,EAAEzE,OAAO9L,OACX,GAAI2uB,EAASlsB,MAAQksB,EAASlsB,KAAKtB,OAAS,EAAG,CAE7C,IAAMkuB,EAAgBV,EAASlsB,KAAKf,KAAI,SAACoF,GAAD,OAASA,EAAIxG,QACrDouB,EAAWW,QAER,CACL,IAAMC,EACJ9iB,EAAQrL,OAAS,EACbqL,EAAQiU,QAAO,SAACnH,GAChB,OAAOA,EAAOC,cAAc3X,SAASitB,EAAYtV,kBAEjD,GAENmV,EAAWY,QAwEN9iB,EAAQ9K,KAAI,SAAAiH,GAAG,OACd,oCACE,kBAAC,GAAD,CACE7F,IAAK6F,EACL+f,QAAS+F,EAAansB,QAAQqG,IAAQ,EACtCzI,SAAU,SAAAwoB,GAAO,OA7KV,SAAC/f,EAAK+f,GACzB,IAAM6G,EAAmB7G,EAAO,uBAAO+F,GAAP,CAAqB9lB,IAAO8lB,EAAahO,QAAO,SAAA+O,GAAC,OAAIA,IAAM7mB,KAG3F,GAFA6lB,EAAgBe,GAEZZ,EAAS9gB,MAAQ8gB,EAASlsB,KAAKtB,OAAS,GAAKouB,EAAiBpuB,OAAS,EAAG,CAC5E,IAAM4tB,EAAsBQ,EAAiB7tB,KAAI,SAACQ,GAChD,IAAM8sB,EAAmBL,EAASlsB,KAAKof,MACrC,SAAC/a,GAAD,OAASA,EAAIxG,KAAKiZ,gBAAkBrX,EAAKqX,iBAE3C,GAAIyV,EACF,OAAOA,EAAiBpsB,MAG5B2rB,EAAUQ,IAgKqBjf,CAAanH,EAAK+f,KAEtC/f,UCxMTgiB,GAAWjrB,IAAXirB,OAwJOyF,GA7II,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,eAAgBC,EAAiD,EAAjDA,gBAAiBC,EAAgC,EAAhCA,mBAAgC,EACxDje,mBAAS,IAD+C,mBAC/E9F,EAD+E,KACtEkiB,EADsE,OAEhDpc,mBAAS,IAFuC,mBAE/Euc,EAF+E,KAElEC,EAFkE,OAIrCngB,EAAe,GAAI,0BAJkB,mBAI/E6c,EAJ+E,KAIhEC,EAJgE,KAOtFnd,qBAAU,YACU,uCAAG,4BAAAE,EAAA,sEACSid,EAAwB,IADjC,QACf+E,EADe,SAIEA,EAAgBrvB,OAAS,GAE/CutB,EAAW8B,GANS,2CAAH,qDAUnB3E,KACE,IAsCH,OAJAhqB,QAAQC,IAAI,gBAAiB0pB,GAC7B3pB,QAAQC,IAAI,aAAc0K,GAIzB,yBAAK/L,UAAU,oCAEb+qB,EAAc5d,WACd,yBAAK/M,MAAO,CACXiW,QAAS,SACTrE,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,OAKD2W,EAAc3d,QAAU2d,EAAc/oB,KAAKtB,OAAS,IACpD,yBAAKN,MAAO,CACX4R,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,GAAD,CAAOnR,MAAM,oBAAoBgR,OAAQ,OAI1C8W,EAAc3d,MAAQ2d,EAAc/oB,KAAKtB,OAAS,GAAKqL,EAAQrL,OAAS,GACxE,oCACC,yBAAKV,UAAU,8CACd,kBAAC,GAAD,CACCgS,MAAO,OACP5R,MAAO,CACN6T,OAAQ,OACR5T,aAAc,iBACdquB,YAAa,mBAEd3V,KAAK,SACLzY,YAAY,kBACZquB,SAAU,SAACpvB,GAAD,OAAW6B,QAAQC,IAAI9B,IACjCE,SAnEiB,SAACqQ,GAGvB,GAFAue,EAAeve,EAAEzE,OAAO9L,OAED,KAAnBuQ,EAAEzE,OAAO9L,OACZ,GAAIwrB,EAAc/oB,MAAQ+oB,EAAc/oB,KAAKtB,OAAS,EAAG,CAExD,IAAMkuB,EAAgB7D,EAAc/oB,KAAKf,KAAI,SAACoF,GAAD,OAASA,EAAIxG,QAC1DouB,EAAWW,QAEN,CACN,IAAMC,EACL9iB,EAAQrL,OAAS,EACdqL,EAAQiU,QAAO,SAACnH,GACjB,OAAOA,EAAOC,cAAc3X,SAASitB,EAAYtV,kBAEhD,GAEJmV,EAAWY,QAsDT,yBAAKzuB,MAAO,IAGV2L,EAAQrL,OAAS,GACjB,kBAAC,KAAD,CACCsvB,WAAS,EACTC,YAAaJ,EACbK,SAzFU,SAACC,EAAcC,KA0FzBC,QArFS,SAACJ,EAAaG,GAC7B,IAAME,EAAaL,EAAYhI,SAAW,GAC1C2H,EAAeU,GACfR,EAAmBQ,IAmFbC,SAAUxkB,EACVykB,kBAAkB,EAClBC,eAAe,QCtBR5C,GA3GF,SAAC,GAGA,IAFVgE,EAES,EAFTA,cACAD,EACS,EADTA,WACS,EACqB/f,mBAAS,IAD9B,mBACF9F,EADE,KACOkiB,EADP,OAEoCpc,mBAAS,IAF7C,mBAEFqhB,EAFE,KAEcC,EAFd,OAG8BjlB,EAAe,GAAI,eAHjD,mBAGFggB,EAHE,KAGQC,EAHR,KAKTtgB,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACaogB,EAAmB,CACxCttB,WAAY,CACRC,OAAQ,CACJmqB,eAAe,MAJf,QACNuD,EADM,SAUMA,EAAW9tB,OAAS,IAE5B+tB,EAAaD,EAAWvtB,KAAI,SAACiH,GAC/B,OAAOA,EAAIrI,QAEfouB,EAAWQ,IAfH,2CAAH,qDAoBbjL,KACD,IAIH3V,qBAAU,WACN,GAAG+jB,GAAcA,EAAWlxB,OAAS,EAAE,CACnCU,QAAQC,IAAI,mBACZ,IAAM67B,EAAmBtL,EAAW3wB,KAAI,SAAAQ,GAAI,OAAIA,EAAK5B,QACrDszB,EAAmB+J,MAEzB,CAACtL,IAEHxwB,QAAQC,IAAI,8BAA8BuwB,GAiC1C,OACI,oCAEI,kBAAC,KAAD,CAAU5hB,QAASke,EAAS/gB,WACvB+gB,EAAS9gB,MAAQ8gB,EAASlsB,KAAKtB,OAAS,GAAK,kBAAC,KAAD,CAC1C4R,KAAK,WACLhS,YAAY,kBACZf,MAAO2zB,EACPzzB,SApCK,SAAC4zB,GAKlB,GAJAF,EAAmBE,GAEnBjyB,QAAQC,IAAI,mBAAoBgyB,GAE5BnF,EAAS9gB,MAAQ8gB,EAASlsB,KAAKtB,OAAS,GAAK2yB,EAAY3yB,OAAS,EAAG,CACrE,IAAM4tB,EAAsB+E,EAAYpyB,KAAI,SAACQ,GACzC,IAAM8sB,EAAmBL,EAASlsB,KAAKof,MACnC,SAAC/a,GAAD,OAASA,EAAIxG,KAAKiZ,gBAAkBrX,EAAKqX,iBAE7C,GAAIyV,EACA,OAAOA,KAGfntB,QAAQC,IAAI,sBAAuBitB,GACnCuD,EAAcvD,QAGduD,EAAc,KAmBNzxB,MAAO,CAAE4R,MAAO,SAEfjG,EAAQiU,QAAO,SAAAsT,GAAC,OAAKJ,EAAe/xB,SAASmyB,MAAIryB,KAAI,SAAAQ,GAAI,OACtD,kBAAC,KAAOwV,OAAR,CAAe5U,IAAKZ,EAAMlC,MAAOkC,GAC5BA,OAIZysB,EAAS9gB,MAAQ8gB,EAASlsB,QAAUksB,EAASlsB,KAAKtB,OAAS,IACxD,yBAAKN,MAAO,CACR2V,WAAY,SAEZ,kBAAC,GAAD,CAAO9S,MAAM,mBAAmBgR,OAAQ,UCvDjD6gB,GApCY,SAAC,GAGd,IAFV/D,EAES,EAFTA,eACAF,EACS,EADTA,YAEA,OACI,yBACIzwB,MAAO,CAEH20B,cAAe,QAEnB/0B,UAAU,6CACV,yBAAKA,UAAU,qDACV6wB,GAAeA,EAAYnwB,OAAS,GAAKmwB,EAAY5vB,KAAI,SAAAQ,GACtD,OAAO,kBAACuzB,GAAD,CACHjE,eAAgBA,EAChBF,YAAaA,EACb2C,UAAW/xB,EAAKW,IAChBmD,SAAU9D,EAAK8D,SACf9D,KAAMA,EACN2wB,UAAW3wB,EAAK2wB,iBAIrBvB,EAAYnwB,OAAS,IACpB,yBAAKN,MAAO,CACR2V,WAAY,SAEZ,kBAAC,GAAD,CAAO9S,MAAM,mBAAmBgR,OAAQ,UCE1D9F,IAFc8P,KAAZD,QAEiB5P,MAAaC,MAAM,CAC1CxO,KAAMuO,MACH/O,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,2CAGNyO,GAAgB,CACpB3O,KAAM,GACNe,IAAK,GACLmF,gBAAiB,GACjBC,YAAa,GACbC,YAAa,GACbH,KAAM,GACNkf,OAAQ,GACRy3B,OAAQ,GACRC,kBAAmB,GACnBC,cAAe,GACfC,cAAe,GACf13B,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAwrCCoL,GA7qCO,SAAC,GAMT,IALZjL,EAKW,EALXA,sBACAC,EAIW,EAJXA,yBACaiL,EAGF,EAHXC,YACgBC,EAEL,EAFXC,eACAC,EACW,EADXA,kBACW,EAEsC9iB,EAC/C,GACA,cAJS,mBAEJ4jB,EAFI,KAEaC,EAFb,OAM4C7jB,EACrD,GACA,cARS,mBAMJihB,EANI,KAMgB+B,EANhB,OAUmBrf,oBAAS,GAV5B,mBAUJuM,EAVI,KAUKC,EAVL,OAWqBxM,oBAAS,GAX9B,mBAWJ2M,EAXI,KAWMF,EAXN,OAYqCzM,oBAAS,GAZ9C,mBAYc6M,GAZd,aAamD7M,oBAAS,GAb5D,mBAaJ4M,EAbI,KAaqB+M,EAbrB,OAc6C3Z,oBAAS,GAdtD,mBAcJ0M,EAdI,KAckBkN,EAdlB,OAe2B5Z,mBAAS,IAfpC,mBAeJsf,EAfI,KAeSvB,EAfT,OAgBiB/d,mBAAS,IAhB1B,mBAgBJuf,EAhBI,KAgBItD,EAhBJ,OAiBmBjc,mBAAS,IAjB5B,mBAiBKod,GAjBL,aAkBmBpd,mBAAS,IAlB5B,oBAkBJlN,GAlBI,MAkBK0sB,GAlBL,SAmB6Bxf,mBAAS,IAnBtC,qBAmBJiV,GAnBI,MAmBUC,GAnBV,SAoBmClV,mBAAS,IApB5C,qBAoBJge,GApBI,MAoBaC,GApBb,SAqB6Bje,mBAAS,IArBtC,qBAqBJmc,GArBI,MAqBUD,GArBV,SAsBalc,mBAAS,IAtBtB,qBAsBJ/L,GAtBI,MAsBE+2C,GAtBF,SAuBiBhrC,mBAAS,IAvB1B,qBAuBJ4qC,GAvBI,MAuBIK,GAvBJ,SAwByBjrC,mBAAS,IAxBlC,qBAwBJ+f,GAxBI,MAwBQC,GAxBR,SAyB2BhgB,mBAAS,IAzBpC,qBAyBJgf,GAzBI,MAyBSE,GAzBT,SA0BqBlf,mBAAS,IA1B9B,qBA0BJyT,GA1BI,MA0BMoM,GA1BN,SA2ByB7f,mBAAS,IA3BlC,qBA2BJ0T,GA3BI,MA2BQoM,GA3BR,SA+BoEzjB,EAAe,GAAI,6BA/BvF,qBA+B4B8Y,IA/B5B,gBAgCgE9Y,EAAe,GAAI,2BAhCnF,qBAgC0B+Y,IAhC1B,gBAiCwE/Y,EAAe,GAAI,+BAjC3F,qCAkCoEA,EAAe,GAAI,8BAlCvF,qBAkC4BgZ,IAlC5B,gBAmCoEhZ,EAAe,GAAI,6BAnCvF,qBAmC4BiZ,IAnC5B,aAuCX/lB,QAAQC,IAAI,cAAc8tB,GAC1BthB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACjBmjB,EAAyB,CAC7BrwB,WAAY,CACVE,aAAc,CACZoB,GAAI6uB,EAAkB7uB,IAExBrB,OAAQ,CACNqsC,WAAY,MAPK,2CAAH,qDAatBnb,KACC,CAAChB,IAKJnjB,qBAAU,WACR,GAAIshB,EAAmBntB,MAAQxB,OAAOC,KAAK0uB,EAAmBntB,MAAMtB,OAAS,EAAG,CAE9E,IAAM8K,EAAS2jB,EAAmBntB,KAAKa,MACtCukB,EAAY,GAMhB,GAJI5b,GAAUA,EAAO9K,OAAS,IAC7B0mB,EAAY5b,GAGT2jB,EAAmBntB,KAAKS,OAAS0sB,EAAmBntB,KAAKS,MAAxB,GACrB+I,EAAO4V,MAAK,SAAA3f,GAAI,OAAIA,EAAKU,KAAOgtB,EAAmBntB,KAAKS,MAAxB,QAE9C2kB,EAAS,CAAI+H,EAAmBntB,KAAKS,OAA5B,oBAAsC2kB,KAGhDL,GAAgBoI,EAAmBntB,KAAKS,MAAxB,IAIZ6b,EAAY8I,MAIjB,CAAC+H,EAAmBntB,OAGvB6L,qBAAU,WAEF2Q,GAAYA,EAAS,IAAMA,EAAS9d,OAAS,GAEzComB,KAAiBtI,EAAS,GAAGrc,KAC7B4kB,GAAgBvI,EAAS,GAAGrc,IAC5BklB,GAAyB7I,EAAS,OAK3C,CAACA,IAGJpd,QAAQC,IAAI,eAAemd,GAGzB,IAAM8I,GAAuB,uCAAG,WAAMnlB,GAAN,SAAA4L,EAAA,sEACtBmZ,GAAqC,CACvCrmB,WAAY,CACRE,aAAc,CACVwmB,QAASplB,EACTqlB,WAAY,OACZ3gB,OAAQmqB,EAAkB7uB,OANV,2CAAH,sDAcvBklB,GAAwB,uCAAG,WAAMxkB,GAAN,eAAAkL,EAAA,sEAEFoZ,GAAqC,CAC5DtmB,WAAY,CACRE,aAAc,CACVwmB,QAAS1kB,EAAMV,GACfqlB,WAAY,OACZ3gB,OAAQmqB,EAAkB7uB,OAPT,QAEvBslB,EAFuB,SAce,OAAxBA,EAAa/hB,OAC7BwY,GAAwB,qBAGxB2D,GAAsB,mDAlBG,2CAAH,sDA2C9BhU,qBAAU,WAgBR,GAfImjB,GAAqBA,EAAkBjsB,MACzCkqB,EAAW+B,EAAkBjsB,MAAlB,IAEXkqB,EAAW,IAGX+B,GACAA,EAAkBhsB,MAClBgsB,EAAkBhsB,KAAKtE,OAAS,EAGhCqtB,GAAgBiD,EAAkBhsB,MAElC+oB,GAAgB,IAGhBiD,GACAA,EAAkB9uB,UAClB8uB,EAAkB9uB,SAASxB,OAAS,EACpC,CACA,IAAMkyB,EAAc5B,EAAkB9uB,SACtC4tB,GAAmB8C,QAEnB9C,GAAmB,MAEpB,CAACkB,IAKJnjB,qBAAU,WACR,GACIshB,EAAmB/hB,MAAQ+hB,EAAkB,MAC9C3uB,OAAOC,KAAK0uB,EAAkB,MAAUzuB,OAAS,GACxByuB,EAAkB,KAAlB,iBAA+CzuB,OAAS,EAAE,CAClF,IAAMkxB,EAAazC,EAAkB,KAAlB,iBAA+CluB,KAAI,SAAAQ,GAAI,OAAIA,KAC9EowB,GAAcD,GACd,IAAMf,EAAc1B,EAAkB,KAAlB,iBAA+CluB,KAAI,SAAAQ,GACnE,OAAO,eACAA,EADP,CAEIW,IAAKX,EAAKW,IACVgwB,UAAW3wB,EAAK2wB,UAChB7sB,SAAU9D,EAAK8D,cAGxBwrB,GAAeF,MAIpB,CAAC1B,IAEH/tB,QAAQC,IAAI,wBAAwB8tB,GAEpCthB,qBAAU,WAEN,GAAI+jB,GAAWlxB,OAAS,GACpB,GAAIkxB,GAAWlxB,OAASmwB,GAAYnwB,OAAQ,CACxC,IAAM0xB,EAAYR,GAAWA,GAAWlxB,OAAS,GAA/B,QAA6CA,OAAS,GAAKkxB,GAAWA,GAAWlxB,OAAS,GAA/B,QAA6C,GAA7C,IAC7EU,QAAQC,IAAI,YAAa+wB,GAEzBrB,GAAe,GAAD,oBAAKF,IAAL,gBACPe,GAAWA,GAAWlxB,OAAS,GADxB,CAEV0B,IAAKwvB,GAAWA,GAAWlxB,OAAS,GAA/B,GACL0xB,UAAWA,EACX7sB,SAAU,YAKb,GAAIqsB,GAAWlxB,OAASmwB,GAAYnwB,OAAQ,CAC7CU,QAAQC,IAAI,aAAcuwB,IAC1BxwB,QAAQC,IAAI,cAAewvB,IAE3B,IAAM6B,EAAiB7B,GAAY7Q,QAAO,SAAAve,GACtC,IAAIkxB,GAAS,EAMb,OALAf,GAAWjuB,SAAQ,SAAAW,GACXA,EAAQnC,KAAOV,EAAKW,MACpBuwB,GAAS,MAGVA,KAEX5B,GAAe2B,SAMnB3B,GAAe,MAKpB,CAACa,KAKF,IAAMhjB,GAAY,uCAAG,WAAOC,EAAaC,GAApB,2BAAAf,EAAA,yDAEb2Z,EACJlJ,GAAYA,EAAS,GAEjBA,EAASvd,KAAI,SAAC4B,GACZ,OAAOA,EAAMV,MAEf,GAEAuE,EACJmqB,GAAYnwB,OAAS,EACjBmwB,GAAY5vB,KAAI,SAACqD,GACf,MAAO,CACLlC,IAAKkC,EAAQlC,IACbgwB,UAAW9tB,EAAQ8tB,UACnB7sB,SAAUjB,EAAQiB,aAGtB,KAGEyrB,GAAqBxwB,OAAOC,KAAKuwB,GAAmBtwB,OAAS,GAtBlD,oBAuBPknB,EAAyB,GAG5BF,GAAaA,EAAUhnB,OAAS,GACjCgnB,EAAU/jB,SAAQ,SAAA4jB,GACbyJ,GAAqBA,EAAiB,QACnCA,EAAiB,MAAU7vB,SAASomB,IACtCK,EAAuB9jB,KAAKyjB,SAO1BK,EAAuB,IAAMA,EAAuBlnB,OAAS,GArC1D,iCAsCGsmB,GAAqC,CACvCnmB,WAAY,CACRE,aAAc,CACVymB,WAAY,OACZ3gB,OAAQmqB,EAAkB7uB,KAGlC2D,KAAM,CACFjD,MAAO+kB,KA9CZ,oCAkDEA,EAAuB,IAAMA,EAAuBlnB,OAAS,GAlD/D,kCAmDGumB,GAAmC,CACrCpmB,WAAY,CACRE,aAAc,CACVwmB,QAASK,EAAuB,GAAGzlB,GACnCqlB,WAAY,OACZ3gB,OAAQmqB,EAAkB7uB,OAxDnC,yBAiES4vB,EAAsB,CAChDlxB,WAAY,CACVE,aAAc,CACZoB,GAAI6uB,EAAkB7uB,KAG1B2D,KAAM,CACJjG,KAAMgP,EAAOhP,KAAK8nB,OAClBzlB,SAAU2tB,GACV7qB,KAAMosB,EACNvuB,MAAO6kB,EACP5hB,KAAMA,GACNI,iBAAkBQ,EAClBX,gBAAiB8I,EAAO9I,gBACxBC,YAAa6I,EAAO7I,YACpBC,YAAa4I,EAAO5I,YACpBif,UAAWrW,EAAOqW,UAClBE,gBAAiBvW,EAAOuW,gBACxBE,SAAUA,IAAYA,GAAS5kB,OAAS,EAAI4kB,GAAS5jB,KAAK,KAAO,GAEjEmmB,GAAI,CACF3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SACEC,IAAcA,GAAW7kB,OAAS,EAAI6kB,GAAW7jB,KAAK,KAAO,GAC/D7B,KAAMgP,EAAOmW,OAAO2C,OACpB5hB,gBAAiB8I,EAAO6tC,kBACxB52C,KAAM22C,GACNz2C,YAAa6I,EAAO8tC,cACpB12C,YAAa4I,EAAO+tC,kBA9FP,QAiEbrqB,EAjEa,OAmGnBnxB,QAAQC,IAAI,gBAAiBkxB,GAGzBA,GAA0C,OAAzBA,EAAc7sB,SACjCwY,GAAwB,kBAMlBzH,EAJgB,WACpB,OAAOma,EAAW3vB,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQmvB,EAAkB7uB,IAGvD+4B,GAGRxZ,EAAclhB,OAAOmhB,OAAO,GAAIiP,EAAWna,GAA7BjW,OAAA,IAAAA,CAAA,GACf+xB,EADe,CAElBpwB,GAAIowB,EAAa,IAAU,GAC3BlwB,IAAKkwB,EAAa,IAAU,GAC5B1yB,KAAMgP,EAAOhP,KAAK8nB,QAAU,GAC5BllB,MAAO8vB,EAAa,MAAb,OAAmC,MAEtC6J,EAjB4C,uBAkB7CxL,EAAWhvB,MAAM,EAAG6U,IAlByB,CAmBhDiL,GAnBgD,aAoB7CkP,EAAWhvB,MAAM6U,EAAQ,KAE9Bqa,EAAcsL,GAEdzW,GAAyB,GAGzBrH,EAAY,IACZyI,GAAgB,IAChBsK,GAAW,IACXvD,EAAU,IACVC,GAAgB,IAChBkB,EAAW,IACXW,EAAe,IACfE,GAAmB,IACnBhhB,EAAQiZ,aAKVjZ,EAAQC,eAAc,GA9IH,4CAAH,wDAiJlBlB,qBAAU,WACR,IAAKikB,EAAe,UAAe,CACjC,IAAMhlB,EAAQglB,EAAe,MAC7B,GAAIhlB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAEzDF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,aAOjC,CAACiG,IAIJ,IAAM5J,GAAe,SAACpY,GACpB6V,GAAyB,GACzBrH,GAAY,GACZyI,GAAgB,IAChBsK,GAAW,IACXvD,EAAU,IACVC,GAAgB,IAChBkB,EAAW,IACXW,EAAe,IACfE,GAAmB,KAuBrB,OAnBAjiB,qBAAU,WACR,GAAImjB,GAAqBxwB,OAAOC,KAAKuwB,GAAmBtwB,OAAS,EAAG,CAClE,IAAM4kB,EACJ0L,EAAkB1L,UAAY0L,EAAkB1L,SAAStkB,MAAM,KAEjEI,QAAQC,IAAI,gBAAiBikB,GAE7B,IAAMC,EACJyL,EAAkBnJ,IAClBmJ,EAAkBnJ,GAAlB,UACAmJ,EAAkBnJ,GAAlB,SAAiC7mB,MAAM,KACzC0wB,GAAYpM,GAAY,IACxBqM,GAAcpM,GAAc,OAE7B,IAEHnkB,QAAQC,IAAI,kBAAmB8tB,GAC/B/tB,QAAQC,IAAI,iBAAkB2vB,GAG5B,kBAAC,IAAD,CACE9hB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,kBAGNwiB,EAHM,GAIL7B,EAAkB,MACpB3uB,OAAOC,KAAK0uB,EAAkB,MAAUzuB,OAAS,GACjDyuB,EAAkB,KAAlB,IAAoC,CAClChK,YAAagK,EAAkB,KAAlB,GAAiCjK,UAC9CG,kBACE8J,EAAkB,KAAlB,GAAiC/J,gBACnCJ,OAAQmK,EAAkB,KAAlB,GAAiCtvB,KACzCyyB,SAAUnD,EAAkB,KAAlB,GAAiCzqB,KAC3CugB,cAAekK,EAAkB,KAAlB,GAAiC7sB,iBAKvD,gBACC+M,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEvP,MAAO,CACL2hB,IAAK,QAEPG,UAAW,CACTrS,OAAQ,EACRwG,QAAS,GAEXrE,MAAO,OACP/O,MAAM,cACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,WAGZ,6BAASjpB,UAAU,2BACjB,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wCACb,kDAEA,yBACEA,UACE6O,EAAOhP,MAAQgP,EAAOhP,KAAKa,OAAS,EAChC,mBACA,aAGN,kBAAC6U,GAAA,EAAD,QAGJ,yBAAKvV,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,OACNS,YAAY,YACZP,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QACG6P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GACAuiB,EAAgBhlB,MAAhB,WAEJlN,YACG4P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GACAuiB,EAAgBhlB,MAAhB,WAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACxQ,EAAD,CACEI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,0DACbD,KAAK,SACLF,QACG6P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GACAuiB,EAAgBhlB,MAAhB,aAEJlN,YACG4P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GACAuiB,EAAgBhlB,MAAhB,aAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAACxQ,EAAD,CACEI,MAAM,mBACNE,MAAOsP,EAAO9I,gBACdjG,YAAY,SACZD,KAAK,kBACLF,QACG6P,EAAQzJ,iBAAmBuJ,EAAOvJ,kBACjCwJ,GACAuiB,EAAgBhlB,MAAhB,sBAEJlN,YACG4P,EAAQzJ,iBAAmBuJ,EAAOvJ,kBACjCwJ,GACAuiB,EAAgBhlB,MAAhB,sBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAACxQ,EAAD,CACEI,MAAM,sBACNE,MAAOsP,EAAO6tC,kBACd58C,YAAa,8CACbD,KAAK,oBACLF,QACG6P,EAAQktC,mBACPptC,EAAOotC,oBACPntC,GACAuiB,EAAgBhlB,MAAhB,wBAEJlN,YACG4P,EAAQktC,mBACPptC,EAAOotC,oBACPntC,GACAuiB,EAAgBhlB,MAAhB,wBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,kBAACxQ,EAAD,CACEI,MAAM,eACNS,YAAa,SACbP,MAAOsP,EAAO5I,YACdpG,KAAK,cACLF,QACG6P,EAAQvJ,aAAeqJ,EAAOrJ,cAC7BsJ,GACAuiB,EAAgBhlB,MAAhB,kBAEJlN,YACG4P,EAAQvJ,aAAeqJ,EAAOrJ,cAC7BsJ,GACAuiB,EAAgBhlB,MAAhB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAACxQ,EAAD,CACEI,MAAM,kBACNS,YAAa,8CACbP,MAAOsP,EAAO+tC,cACd/8C,KAAK,gBACLF,QACG6P,EAAQotC,eAAiBttC,EAAOstC,gBAC/BrtC,GACAuiB,EAAgBhlB,MAAhB,oBAEJlN,YACG4P,EAAQotC,eAAiBttC,EAAOstC,gBAC/BrtC,GACAuiB,EAAgBhlB,MAAhB,oBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACxQ,EAAD,CACEI,MAAM,eACNE,MAAOsP,EAAO7I,YACdnG,KAAK,cACLF,QACG6P,EAAQxJ,aAAesJ,EAAOtJ,cAC7BuJ,GACAuiB,EAAgBhlB,MAAhB,kBAEJlN,YACG4P,EAAQxJ,aAAesJ,EAAOtJ,cAC7BuJ,GACAuiB,EAAgBhlB,MAAhB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAACxQ,EAAD,CACEI,MAAM,kBACNE,MAAOsP,EAAO8tC,cACd98C,KAAK,gBACLF,QACG6P,EAAQmtC,eAAiBrtC,EAAOqtC,gBAC/BptC,GACAuiB,EAAgBhlB,MAAhB,oBAEJlN,YACG4P,EAAQmtC,eAAiBrtC,EAAOqtC,gBAC/BptC,GACAuiB,EAAgBhlB,MAAhB,oBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACxQ,EAAD,CACEI,MAAM,MACNE,MAAOsP,EAAOjO,IACdf,KAAK,MACLF,QACG6P,EAAQ5O,KAAO0O,EAAO1O,MACrB2O,GAAgBuiB,EAAgBhlB,MAAhB,UAEpBlN,YACG4P,EAAQ5O,KAAO0O,EAAO1O,MACrB2O,GAAgBuiB,EAAgBhlB,MAAhB,UAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,UAIpB,wBAAIzP,UAAU,mBAAd,QAEA,yBACEI,MAAO,CACL4R,MAAO,OACPpC,SAAU,SAGZ,kBAAC,KAAD,CACEijB,OAAQC,KACR9wB,KAAM8D,GACNitB,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpB6pB,GAAQ76C,IAEVqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,OAK5B,yBACEzyB,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,WAEA,yBACEI,MAAO,CACL4R,MAAO,OACPpC,SAAU,SAGZ,kBAAC,KAAD,CACEijB,OAAQC,KACR9wB,KAAMy6C,GACN1pB,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpB8pB,GAAU96C,IAEZqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,OA8B5B,yBACEzyB,MAAO,CACL6a,aAAc,YAwCtB,yBAAKjb,UAAU,kCACb,yBAAKA,UAAU,wCACb,wCAEA,yBACEA,UACE2E,IAAWA,GAAQjE,OAAS,EACxB,mBACA,aAGN,kBAAC6U,GAAA,EAAD,QAIJ,yBAAKvV,UAAU,sCACb,wBAAIA,UAAU,mBAAd,YACA,kBAAC,GAAD,CACE6xB,cAAeA,GACfD,WAAYA,KAGd,yBACExxB,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,oBAEA,kBAAC,GAAD,CACE6wB,YAAaA,GACbE,eAAgBA,OAOtB,yBAAK/wB,UAAU,kCAE/B,yBAAKA,UAAU,wCACX,qCAIA,kBAAC,KAAD,CACIkW,UAAU,OAAOjT,MAAO,uFACxB,uBAAGuT,KAAK,OACJ,kBAAC2S,GAAA,EAAD,SAKZ,yBAC4C/oB,MAAO,CACHiW,QAAS,QAEbrW,UAAU,gCACTmvB,EAAmBhiB,WAChB,yBAAK/M,MAAO,CACRiW,QAAS,WAET,kBAAC,KAAD,OAGP8Y,EAAmB/hB,MAChB,oCACKoR,GAEGA,EAAS9d,OAAS,GAAK8d,EAASvd,KAAI,SAAC4B,EAAO4T,GACxC,OACI,yBAAKzW,UAAU,sCACX,yBACIA,UAAU,kDACV+P,QAAS,WACLgX,GAAgBlkB,EAAMV,IACtBklB,GAAyBxkB,KAG7B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACI4M,QAAS,YAtxBpD,SAAC5N,GAExB,IAAMknB,EAAY7K,GAAYA,EAASwB,QAAO,SAAAnd,GAC1C,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GAixB0DC,CAAmBzmB,EAAMV,IACzBmlB,GAAwBzkB,EAAMV,KAIlCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,QAIHoE,KAAiBjkB,EAAMV,KAInB2kB,IAA0B,IAAVrQ,IAHjB,0BAAMzW,UAAU,4CACZ,kBAAC2iB,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACI1f,MAAO,iBAEP,yBACI8M,QAAS,WACLsO,GAAW,GACXoN,GAAwB,GACxBD,GAA2B,IAE/BxrB,UAAU,4CAIV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACZ,kBAAC6kB,GAAA,EAAD,YAUhD,yBAAK7kB,UAAU,kCACb,yBAAKA,UAAU,wCACb,yCAEA,kBAAC,KAAD,CACEkW,UAAU,OACVjT,MACE,sFAGF,uBAAGuT,KAAK,OACN,kBAAC2S,GAAA,EAAD,SAIN,yBAAKnpB,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QACG6P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GACAuiB,EAAgBhlB,MAAhB,gBAEJlN,YACG4P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GACAuiB,EAAgBhlB,MAAhB,gBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACxQ,EAAD,CACEI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QACG6P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACAuiB,EAAgBhlB,MAAhB,kBAEJlN,YACG4P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACAuiB,EAAgBhlB,MAAhB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACEpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QACG6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACAuiB,EAAgBhlB,MAAhB,sBAEJlN,YACG4P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACAuiB,EAAgBhlB,MAAhB,sBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACEpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QACG6P,EAAQ6V,mBACP/V,EAAO+V,oBACP9V,GACAuiB,EAAgBhlB,MAAhB,wBAEJlN,YACG4P,EAAQ6V,mBACP/V,EAAO+V,oBACP9V,GACAuiB,EAAgBhlB,MAAhB,wBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEEwjB,QAASkO,GACT1sB,KAAMsgB,KAGR,yBACEllB,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEEwjB,QAASmO,GACT3sB,KAAMugB,QAKd,yBAAKvlB,UAAU,kCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,iDAEA,kBAAC,KAAD,CACEwV,MAAM,MACN4I,QACE0T,EAAgBhlB,MAAhB,kBACEqkB,EAAYzwB,OAAS,GAEzBwV,UAAU,OACVjT,MAAO,gCAEP,yBACEjD,UACImxB,EAAYzwB,OAAS,GACtBoxB,EAAgBhlB,MAAhB,eAEGglB,EAAgBhlB,MAAhB,eACA,kBACA,mBAHA,aAMN,kBAACyI,GAAA,EAAD,SAIN,yBAAKvV,UAAU,mDACb,kBAAC,GAAD,CACE8vB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,OAMxB,yBAAK5vB,UAAU,gCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,4CAEF,yBAAKA,UAAU,mDACb,kBAAC,GAAD,CACE+tB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,UASzB,kBAAC,GAAD,CACEzP,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,SCxsC5BpQ,IAFc8P,KAAZD,QAEiB5P,MAAaC,MAAM,CAC1CxO,KAAMuO,MACH/O,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,2CAGNyO,GAAgB,CACpB3O,KAAM,GACNe,IAAK,GACLmF,gBAAiB,GACjBC,YAAa,GACbC,YAAa,GACbH,KAAM,GACNkf,OAAQ,GACRy3B,OAAQ,GACRC,kBAAmB,GACnBC,cAAe,GACfC,cAAe,GACf13B,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAi8BCoL,GAv7BO,SAAC,GAKT,IAJZjL,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACaiL,EAEF,EAFXC,YACgBC,EACL,EADXC,eACW,EACsC7iB,EAC/C,GACA,WAHS,mBACJ4jB,EADI,KACaC,EADb,OAKmBlgB,oBAAS,GAL5B,mBAKJuM,EALI,KAKKC,EALL,OAMqBxM,oBAAS,GAN9B,mBAMJ2M,EANI,KAMMF,EANN,OAOqCzM,oBAAS,GAP9C,mBAOc6M,GAPd,aAQmD7M,oBAAS,GAR5D,mBAQJ4M,EARI,KAQqB+M,EARrB,OAS6C3Z,oBAAS,GATtD,mBASJ0M,EATI,KASkBkN,EATlB,OAU2B5Z,mBAAS,IAVpC,mBAUJsf,EAVI,KAUSvB,EAVT,OAWiB/d,mBAAS,IAX1B,mBAWJuf,EAXI,KAWItD,EAXJ,OAYmBjc,mBAAS,IAZ5B,mBAYJqd,EAZI,KAYKD,EAZL,OAamBpd,mBAAS,IAb5B,mBAaJlN,EAbI,KAaK0sB,EAbL,OAc6Bxf,mBAAS,IAdtC,oBAcJiV,GAdI,MAcUC,GAdV,SAemClV,mBAAS,IAf5C,qBAeJge,GAfI,MAeaC,GAfb,SAgB6Bje,mBAAS,IAhBtC,qBAgBJmc,GAhBI,MAgBUD,GAhBV,SAiBkBlc,mBAAS,IAjB3B,qCAkBkBA,mBAAS,KAlB3B,qCAmB2BA,mBAAS,KAnBpC,qCAoBaA,mBAAS,KApBtB,qBAoBJ/L,GApBI,MAoBE+2C,GApBF,SAqBiBhrC,mBAAS,IArB1B,qBAqBJ4qC,GArBI,MAqBIK,GArBJ,SAsByBjrC,mBAAS,IAtBlC,qBAsBJ+f,GAtBI,MAsBQC,GAtBR,SAuB2BhgB,mBAAS,IAvBpC,qBAuBJgf,GAvBI,MAuBSE,GAvBT,SAwB+Blf,mBAAS,4CAxBxC,qCAyBqBA,mBAAS,KAzB9B,qBAyBJyT,GAzBI,MAyBMoM,GAzBN,SA0ByB7f,mBAAS,IA1BlC,qBA0BJ0T,GA1BI,MA0BQoM,GA1BR,SA4Be9f,mBAAS,CACjCogB,QAAS,KACTC,MAAO,OA9BE,qBAqCLtjB,IArCK,YAqCO,uCAAG,WAAOC,EAAaC,GAApB,mBAAAf,EAAA,6DAEb2Z,EAAYlJ,EACdA,EAASvd,KAAI,SAAC4B,GACZ,OAAOA,EAAMV,MAEf,GAEEuE,EACJmqB,GAAYnwB,OAAS,EACjBmwB,GAAY5vB,KAAI,SAACqD,GACf,MAAO,CACLlC,IAAKkC,EAAQlC,IACbgwB,UAAW9tB,EAAQ8tB,UACnB7sB,SAAUjB,EAAQiB,aAGtB,GAjBa,SAmBSwsB,EAAsB,CAChDjsB,KAAM,CACJjG,KAAMgP,EAAOhP,KAAK8nB,OAClBzlB,SAAUivB,EACVnsB,KAAMosB,EACNrsB,MAAO,CAACmqB,GACRrsB,MAAO6kB,EACP5hB,KAAMA,GACNI,iBAAkBQ,EAClBX,gBAAiB8I,EAAO9I,gBACxBC,YAAa6I,EAAO7I,YACpBC,YAAa4I,EAAO5I,YACpBif,UAAWrW,EAAOqW,UAClBE,gBAAiBvW,EAAOuW,gBACxByC,GAAI,CACF3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUC,GAAW7jB,KAAK,KAC1B7B,KAAMgP,EAAOmW,OAAO2C,OACpB5hB,gBAAiB8I,EAAO6tC,kBACxB52C,KAAM+I,EAAO4tC,OACbz2C,YAAa6I,EAAO8tC,cACpB12C,YAAa4I,EAAO+tC,kBAzCP,QAmBbrqB,EAnBa,SA+C2B,OAAzBA,EAAc7sB,SACjCwY,GAAwB,kBAExB4S,EAAc,CAAC,eAGRyB,EAHM,CAITpwB,GAAIowB,EAAa,KAAW,GAC5BlwB,IAAKkwB,EAAa,KAAW,MALpB,oBASR3B,KAKLtS,EAAY,IACZyI,GAAgB,IAChBsK,EAAW,IACXvD,EAAU,IACVC,GAAgB,IAChBkB,EAAW,IACXW,EAAe,IACfE,GAAmB,IACnBhhB,EAAQiZ,YAERpC,GAAyB,IAK3B7W,EAAQC,eAAc,GA/EH,2CAAH,yDAkFlBlB,qBAAU,WACR,IAAKikB,EAAe,UAAe,CACjC,IAAMhlB,EAAQglB,EAAe,MAC7B,GAAIhlB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAEzDF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,aAOjC,CAACiG,IAEJjkB,qBAAU,WACR,GAAI+jB,GAAWlxB,OAAS,GACtB,GAAIkxB,GAAWlxB,OAASmwB,GAAYnwB,OAAQ,CAC1C,IAAM0xB,EACJR,GAAWA,GAAWlxB,OAAS,GAA/B,QAA6CA,OAAS,GACtDkxB,GAAWA,GAAWlxB,OAAS,GAA/B,QAA6C,GAA7C,IACFU,QAAQC,IAAI,YAAa+wB,GAEzBrB,GAAe,GAAD,oBACTF,IADS,gBAGPe,GAAWA,GAAWlxB,OAAS,GAHxB,CAIV0B,IAAKwvB,GAAWA,GAAWlxB,OAAS,GAA/B,GACL0xB,UAAWA,EACX7sB,SAAU,YAGT,GAAIqsB,GAAWlxB,OAASmwB,GAAYnwB,OAAQ,CACjDU,QAAQC,IAAI,aAAcuwB,IAC1BxwB,QAAQC,IAAI,cAAewvB,IAE3B,IAAM6B,EAAiB7B,GAAY7Q,QAAO,SAACve,GACzC,IAAIkxB,GAAS,EAMb,OALAf,GAAWjuB,SAAQ,SAACW,GACdA,EAAQnC,KAAOV,EAAKW,MACtBuwB,GAAS,MAGNA,KAET5B,GAAe2B,SAGjB3B,GAAe,MAGhB,CAACa,KAEJ,IAAM1J,GAAe,SAACpY,GACpB6V,GAAyB,IA2E3B,OACE,kBAAC,IAAD,CACEzW,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEvP,MAAO,CACL2hB,IAAK,QAEPG,UAAW,CACTrS,OAAQ,EACRwG,QAAS,GAEXrE,MAAO,OACP/O,MAAM,iBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,WAGZ,6BAASjpB,UAAU,2BACjB,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wCACb,kDAEA,yBACEA,UACE6O,EAAOhP,MAAQgP,EAAOhP,KAAKa,OAAS,EAChC,mBACA,aAGN,kBAAC6U,GAAA,EAAD,QAGJ,yBAAKvV,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,OACNS,YAAY,YACZP,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QACG6P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GACAuiB,EAAgBhlB,MAAhB,WAEJlN,YACG4P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GACAuiB,EAAgBhlB,MAAhB,WAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACxQ,EAAD,CACEI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,0DACbD,KAAK,SACLF,QACG6P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GACAuiB,EAAgBhlB,MAAhB,aAEJlN,YACG4P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GACAuiB,EAAgBhlB,MAAhB,aAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAACxQ,EAAD,CACEI,MAAM,mBACNE,MAAOsP,EAAO9I,gBACdjG,YAAY,SACZD,KAAK,kBACLF,QACG6P,EAAQzJ,iBAAmBuJ,EAAOvJ,kBACjCwJ,GACAuiB,EAAgBhlB,MAAhB,sBAEJlN,YACG4P,EAAQzJ,iBAAmBuJ,EAAOvJ,kBACjCwJ,GACAuiB,EAAgBhlB,MAAhB,sBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAACxQ,EAAD,CACEI,MAAM,sBACNE,MAAOsP,EAAO6tC,kBACd58C,YAAa,8CACbD,KAAK,oBACLF,QACG6P,EAAQktC,mBACPptC,EAAOotC,oBACPntC,GACAuiB,EAAgBhlB,MAAhB,wBAEJlN,YACG4P,EAAQktC,mBACPptC,EAAOotC,oBACPntC,GACAuiB,EAAgBhlB,MAAhB,wBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,kBAACxQ,EAAD,CACEI,MAAM,eACNS,YAAa,SACbP,MAAOsP,EAAO5I,YACdpG,KAAK,cACLF,QACG6P,EAAQvJ,aAAeqJ,EAAOrJ,cAC7BsJ,GACAuiB,EAAgBhlB,MAAhB,kBAEJlN,YACG4P,EAAQvJ,aAAeqJ,EAAOrJ,cAC7BsJ,GACAuiB,EAAgBhlB,MAAhB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAACxQ,EAAD,CACEI,MAAM,kBACNS,YAAa,8CACbP,MAAOsP,EAAO+tC,cACd/8C,KAAK,gBACLF,QACG6P,EAAQotC,eAAiBttC,EAAOstC,gBAC/BrtC,GACAuiB,EAAgBhlB,MAAhB,oBAEJlN,YACG4P,EAAQotC,eAAiBttC,EAAOstC,gBAC/BrtC,GACAuiB,EAAgBhlB,MAAhB,oBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACxQ,EAAD,CACEI,MAAM,eACNE,MAAOsP,EAAO7I,YACdnG,KAAK,cACLF,QACG6P,EAAQxJ,aAAesJ,EAAOtJ,cAC7BuJ,GACAuiB,EAAgBhlB,MAAhB,kBAEJlN,YACG4P,EAAQxJ,aAAesJ,EAAOtJ,cAC7BuJ,GACAuiB,EAAgBhlB,MAAhB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAACxQ,EAAD,CACEI,MAAM,kBACNE,MAAOsP,EAAO8tC,cACd98C,KAAK,gBACLF,QACG6P,EAAQmtC,eAAiBrtC,EAAOqtC,gBAC/BptC,GACAuiB,EAAgBhlB,MAAhB,oBAEJlN,YACG4P,EAAQmtC,eAAiBrtC,EAAOqtC,gBAC/BptC,GACAuiB,EAAgBhlB,MAAhB,oBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACxQ,EAAD,CACEI,MAAM,MACNE,MAAOsP,EAAOjO,IACdf,KAAK,MACLF,QACG6P,EAAQ5O,KAAO0O,EAAO1O,MACrB2O,GAAgBuiB,EAAgBhlB,MAAhB,UAEpBlN,YACG4P,EAAQ5O,KAAO0O,EAAO1O,MACrB2O,GAAgBuiB,EAAgBhlB,MAAhB,UAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,UAIpB,wBAAIzP,UAAU,mBAAd,QAEA,yBACEI,MAAO,CACL4R,MAAO,OACPpC,SAAU,SAGZ,kBAAC,KAAD,CACEijB,OAAQC,KACR9wB,KAAM8D,GACNitB,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpB6pB,GAAQ76C,IAEVqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,OAK5B,yBACEzyB,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,WAEA,yBACEI,MAAO,CACL4R,MAAO,OACPpC,SAAU,SAGZ,kBAAC,KAAD,CACEijB,OAAQC,KACR9wB,KAAMy6C,GACN1pB,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpB8pB,GAAU96C,IAEZqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,OA8B5B,yBACEzyB,MAAO,CACL6a,aAAc,YAwCtB,yBAAKjb,UAAU,kCACb,yBAAKA,UAAU,wCACb,wCAEA,yBACEA,UACE2E,GAAWA,EAAQjE,OAAS,EACxB,mBACA,aAGN,kBAAC6U,GAAA,EAAD,QAIJ,yBAAKvV,UAAU,sCACb,wBAAIA,UAAU,mBAAd,YACA,kBAAC,GAAD,CACE6xB,cAAeA,GACfD,WAAYA,KAGd,yBACExxB,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,oBAEA,kBAAC,GAAD,CACE6wB,YAAaA,GACbE,eAAgBA,OAKtB,yBAAK/wB,UAAU,kCACb,yBAAKA,UAAU,wCACb,qCAEA,kBAAC,KAAD,CACEkW,UAAU,OACVjT,MACE,uFAGF,uBAAGuT,KAAK,OACN,kBAAC2S,GAAA,EAAD,SAIN,yBAAKnpB,UAAU,sCACb,yBAAKA,UAAU,gCACZwe,GAECA,EAAS9d,OAAS,GAClB8d,EAASvd,KAAI,SAAC4B,EAAO4T,GACnB,OACE,yBAAKzW,UAAU,sCACb,yBACEA,UAAU,kDACV+P,QAAS,kBAAMgX,GAAgBlkB,EAAMV,MAErC,yBAAKiJ,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGpC,0BACE4M,QAAS,kBAzfZ,SAAC5N,GAE1B,IAAMknB,EACJ7K,GACAA,EAASwB,QAAO,SAACnd,GACf,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GAif+BC,CAAmBzmB,EAAMV,KACxCnC,UAAU,6CAEV,kBAAC0iB,GAAA,EAAD,QAGDoE,KAAiBjkB,EAAMV,KAKrB2kB,IACS,IAAVrQ,IALA,0BAAMzW,UAAU,4CACd,kBAAC2iB,GAAA,EAAD,WAcZ,kBAAC,KAAD,CAAS1f,MAAO,iBACd,yBACE8M,QAAS,WACPsO,GAAW,GACXoN,GAAwB,GACxBD,GAA2B,IAE7BxrB,UAAU,4CAKV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACd,kBAAC6kB,GAAA,EAAD,YAQZ,yBAAK7kB,UAAU,kCACb,yBAAKA,UAAU,wCACb,yCAEA,kBAAC,KAAD,CACEkW,UAAU,OACVjT,MACE,sFAGF,uBAAGuT,KAAK,OACN,kBAAC2S,GAAA,EAAD,SAIN,yBAAKnpB,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QACG6P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GACAuiB,EAAgBhlB,MAAhB,gBAEJlN,YACG4P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GACAuiB,EAAgBhlB,MAAhB,gBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACxQ,EAAD,CACEI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QACG6P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACAuiB,EAAgBhlB,MAAhB,kBAEJlN,YACG4P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACAuiB,EAAgBhlB,MAAhB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACEpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QACG6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACAuiB,EAAgBhlB,MAAhB,sBAEJlN,YACG4P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACAuiB,EAAgBhlB,MAAhB,sBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACEpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QACG6P,EAAQ6V,mBACP/V,EAAO+V,oBACP9V,GACAuiB,EAAgBhlB,MAAhB,wBAEJlN,YACG4P,EAAQ6V,mBACP/V,EAAO+V,oBACP9V,GACAuiB,EAAgBhlB,MAAhB,wBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEEwjB,QAASkO,GACT1sB,KAAMsgB,KAGR,yBACEllB,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEEwjB,QAASmO,GACT3sB,KAAMugB,QAKd,yBAAKvlB,UAAU,kCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,iDAEA,kBAAC,KAAD,CACEwV,MAAM,MACN4I,QACE0T,EAAgBhlB,MAAhB,kBACEqkB,EAAYzwB,OAAS,GAEzBwV,UAAU,OACVjT,MAAO,gCAEP,yBACEjD,UACImxB,EAAYzwB,OAAS,GACtBoxB,EAAgBhlB,MAAhB,eAEGglB,EAAgBhlB,MAAhB,eACA,kBACA,mBAHA,aAMN,kBAACyI,GAAA,EAAD,SAIN,yBAAKvV,UAAU,mDACb,kBAAC,GAAD,CACE8vB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,OAMxB,yBAAK5vB,UAAU,gCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,4CAEF,yBAAKA,UAAU,mDACb,kBAAC,GAAD,CACE+tB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,UASzB,kBAAC,GAAD,CACEzP,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,SC17B1BpC,IAXiB/N,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAUzCqc,KAAxBD,QACA+N,IADwB9N,KAAhBC,YACG2P,IAAX9B,QAIFC,GAAU,SAAC,GAA0B,IAAxBnoB,EAAuB,EAAvBA,KAAMmzB,EAAiB,EAAjBA,WAAiB,EACRtjB,oBAAS,GADD,mBAC/BuM,EAD+B,KACtBC,EADsB,OAEoBxM,oBAAS,GAF7B,mBAE/BuY,EAF+B,KAERC,EAFQ,OAGSnc,EAAe,GAAI,cAH5B,mBAGfknB,GAHe,WAKhC7gB,EAAUC,eAGV6gB,EAAe,uCAAG,WAAOlzB,GAAP,iBAAA4L,EAAA,sEACOqnB,EAAqB,CAC5Cv0B,WAAY,CACRE,aAAc,CACVoB,SAJQ,QACdmzB,EADc,SAYwB,OAAxBA,EAAa5vB,SArDR4P,EAsDG,iBArDhCD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,iBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAmDjC+f,EAAavzB,EAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAKU,KAAOA,KACnDgzB,EAAWI,IAfK,iCAzCI,IAACjgB,IAyCL,OAAH,sDAiCrB,OACI,oCACI,kBAAC,KAAD,CAMIyD,KAAK,QAEL8D,WAAY7a,GAGZ,kBAAC,GAAD,CACIiB,MAAM,GACNga,UAAU,QACV5a,IAAI,KACJ2P,MAAO,OAEPhS,UAAU,uBAEVkd,OAAQ,SAACza,EAAO0a,GAAR,OACJ,oCACI,yBACIpN,QAAS,WACLwE,EAAQzQ,KAAR,uBAA6BqZ,EAAOhb,KACpCkoB,EAAyBlN,IAE7B/R,IAAK3I,EAAOU,IAAI,YAAY/C,MAAO,CAC/B6T,OAAQ,OACRjC,MAAO,OACP0Y,UAAW,UACXrqB,aAAc,MACd2V,OAAQ,iBAM5B,kBAAC,GAAD,CACI/S,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACJ,oCAEI,wBACIpN,QAAS,WACLwE,EAAQzQ,KAAR,uBAA6BqZ,EAAOhb,KAEpCkoB,EAAyBlN,IAE7B/c,MAAO,CACH0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAEX/R,OAUjB,kBAAC,GAAD,CACIhB,MAAM,mBACNga,UAAU,kBACV5a,IAAI,KACJrC,UAAU,yBAKd,kBAAC,GAAD,CACIiD,MAAM,eACNga,UAAU,cACV5a,IAAI,KACJrC,UAAU,yBAId,kBAAC,GAAD,CACIiD,MAAM,SACNga,UAAU,cACV5a,IAAI,KACJrC,UAAU,yBAMb,kBAAC,GAAD,CACGA,UAAU,uBACViD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACJ,kBAAC,KAAD,CAAOpE,KAAK,UACR,uBAAGvC,KAAK,MACJ,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,eAC3B,0BAAMjD,UAAU,WAAW+P,QAAS,WAChCsO,GAAW,GACXgM,EAAyBlN,KAEzB,kBAACyN,GAAA,EAAD,SAOZ,kBAAC,KAAD,CACI7H,UAAW,kBAAMsS,EAAgBlY,EAAOhb,KACxCc,MAAM,qBAAgBkf,OAAO,MAAMa,WAAW,MAC9C,0BACIhjB,UAAU,4BAEV,kBAAC4iB,GAAA,EAAD,aAavBwH,GAAyB,kBAAC,GAAD,CAErByG,YAAa7uB,EACb+uB,eAAgBoE,EACjBxP,yBAA0BtH,EAC1BqH,sBAAuBtH,EACvB4S,kBAAmB5G,MAwHpBqL,GA7GC,SAAC,GAAgB,qBAGC5jB,mBAAS,IAHX,mBAGrB6jB,EAHqB,KAGZP,EAHY,OAKWjnB,EAAe,GAAI,YAL9B,mBAKrBggB,EALqB,KAKXC,EALW,KAS5B/sB,QAAQC,IAAI,eAAe6sB,GAG3BrgB,qBAAU,YACO,uCAAG,4BAAAE,EAAA,sEACOogB,EAAmB,CAClCttB,WAAW,CACtBC,OAAQ,CACNiU,SAAU,QACVC,eAAgB,SALC,OACNhQ,EADM,OAUZmwB,EAAWnwB,GAVC,2CAAH,qDAYbwe,KACD,IA1ByB,MA8B8B3R,oBAAS,GA9BvC,mBA8BrB6T,EA9BqB,KA8BEC,EA9BF,KAyD5B,OACI,oCACI,yBAAK3lB,UAAU,yBACX,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,+CACX,wBAAIA,UAAU,uCAAd,WAGA,kBAAC,GAAD,CACIqrB,aAAa,EACbrrB,UAAU,qBACVM,YAAY,mBACZquB,SAAU,SAAApvB,GAAK,OApBlB,SAACA,GAClB,GAAI2uB,EAASlsB,KAAKtB,OAAS,EAAG,CAC1B,IAAMk1B,EAAa1H,EAASlsB,KAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBACvFqc,EAAWS,IAiBwBtK,CAAa/rB,OAGxC,kBAAC,IAAD,CAEIS,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJ5C,YASJ,yBAAK3lB,UAAU,uCACVkuB,EAAS9gB,MAAQsoB,EAAQh1B,OAAS,GAAK,kBAAC,GAAD,CACpCy0B,WAAYA,EACZnzB,KAAM0zB,IACTxH,EAAS/gB,WAAa,kBAACoe,GAAD,MAGtB2C,EAAS9gB,QAAUsoB,EAAQh1B,OAAS,IACjC,yBAAKN,MAAO,CACR0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,kBAAkBO,MAAOmR,KAAMK,4BAMlE,kBAAC,GAAD,CACIwc,YAAa6E,EACb3E,eAAgBoE,EAChBzP,sBAAuBA,EACvBC,yBAA0BA,MClUpCxX,IAFc8P,KAAZD,QAEiB5P,MAAaC,MAAM,CAC1CxO,KAAMuO,MACH/O,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,2CAGNyO,GAAgB,CACpB3O,KAAM,GACNe,IAAK,GACLmF,gBAAiB,GACjBC,YAAa,GACbC,YAAa,GACbH,KAAM,GACNkf,OAAQ,GACRy3B,OAAQ,GACRC,kBAAmB,GACnBC,cAAe,GACfC,cAAe,GACf13B,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IA2qCCoL,GAjqCO,SAAC,GAKT,IAJZjL,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAqL,EAEW,EAFXA,kBACA+rB,EACW,EADXA,kBACW,EAEsC7uC,EAC/C,GACA,cAJS,mBAEJ4jB,EAFI,KAEaC,EAFb,OAM4C7jB,EACrD,GACA,cARS,mBAMJihB,EANI,KAMgB+B,EANhB,OAUmBrf,oBAAS,GAV5B,mBAUJuM,EAVI,KAUKC,EAVL,OAWqBxM,oBAAS,GAX9B,mBAWJ2M,EAXI,KAWMF,EAXN,OAYqCzM,oBAAS,GAZ9C,mBAYc6M,GAZd,aAamD7M,oBAAS,GAb5D,mBAaJ4M,EAbI,KAaqB+M,EAbrB,OAc6C3Z,oBAAS,GAdtD,mBAcJ0M,EAdI,KAckBkN,EAdlB,OAe2B5Z,mBAAS,IAfpC,mBAeJsf,EAfI,KAeSvB,EAfT,OAgBiB/d,mBAAS,IAhB1B,mBAgBJuf,EAhBI,KAgBItD,EAhBJ,OAiBmBjc,mBAAS,IAjB5B,mBAiBKod,GAjBL,aAkBmBpd,mBAAS,IAlB5B,mBAkBJlN,GAlBI,KAkBK0sB,GAlBL,QAmB6Bxf,mBAAS,IAnBtC,qBAmBJiV,GAnBI,MAmBUC,GAnBV,SAoBmClV,mBAAS,IApB5C,qBAoBJge,GApBI,MAoBaC,GApBb,SAqB6Bje,mBAAS,IArBtC,qBAqBJmc,GArBI,MAqBUD,GArBV,SAsBalc,mBAAS,IAtBtB,qBAsBJ/L,GAtBI,MAsBE+2C,GAtBF,SAuBiBhrC,mBAAS,IAvB1B,qBAuBJ4qC,GAvBI,MAuBIK,GAvBJ,SAwByBjrC,mBAAS,IAxBlC,qBAwBJ+f,GAxBI,MAwBQC,GAxBR,SAyB2BhgB,mBAAS,IAzBpC,qBAyBJgf,GAzBI,MAyBSE,GAzBT,SA0BqBlf,mBAAS,IA1B9B,qBA0BJyT,GA1BI,MA0BMoM,GA1BN,SA2ByB7f,mBAAS,IA3BlC,qBA2BJ0T,GA3BI,MA2BQoM,GA3BR,SA+BoEzjB,EAAe,GAAI,6BA/BvF,qBA+B4B8Y,IA/B5B,gBAgCgE9Y,EAAe,GAAI,2BAhCnF,qBAgC0B+Y,IAhC1B,gBAiCwE/Y,EAAe,GAAI,+BAjC3F,qCAkCoEA,EAAe,GAAI,8BAlCvF,qBAkC4BgZ,IAlC5B,gBAmCoEhZ,EAAe,GAAI,6BAnCvF,qBAmC4BiZ,IAnC5B,aAuCX/lB,QAAQC,IAAI,cAAc8tB,GAC1BthB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACjBmjB,EAAyB,CAC7BrwB,WAAY,CACVE,aAAc,CACZoB,GAAI6uB,EAAkB7uB,IAExBrB,OAAQ,CACNqsC,WAAY,MAPK,2CAAH,qDAatBnb,KACC,CAAChB,IAKJnjB,qBAAU,WACR,GAAIshB,EAAmBntB,MAAQxB,OAAOC,KAAK0uB,EAAmBntB,MAAMtB,OAAS,EAAG,CAG9E,IAAM8K,EAAS2jB,EAAmBntB,KAAKa,MACtCukB,EAAY,GAMhB,GAJI5b,GAAUA,EAAO9K,OAAS,IAC7B0mB,EAAY5b,GAGT2jB,EAAmBntB,KAAKS,OAAS0sB,EAAmBntB,KAAKS,MAAxB,GACrB+I,EAAO4V,MAAK,SAAA3f,GAAI,OAAIA,EAAKU,KAAOgtB,EAAmBntB,KAAKS,MAAxB,QAE9C2kB,EAAS,CAAI+H,EAAmBntB,KAAKS,OAA5B,oBAAsC2kB,KAGhDL,GAAgBoI,EAAmBntB,KAAKS,MAAxB,IAIhB6b,EAAY8I,MAIb,CAAC+H,EAAmBntB,OAGvB6L,qBAAU,WAEF2Q,GAAYA,EAAS,IAAMA,EAAS9d,OAAS,GAEzComB,KAAiBtI,EAAS,GAAGrc,KAC7B4kB,GAAgBvI,EAAS,GAAGrc,IAC5BklB,GAAyB7I,EAAS,OAK3C,CAACA,IAGJpd,QAAQC,IAAI,eAAemd,GAGzB,IAAM8I,GAAuB,uCAAG,WAAMnlB,GAAN,SAAA4L,EAAA,sEACtBmZ,GAAqC,CACvCrmB,WAAY,CACRE,aAAc,CACVwmB,QAASplB,EACTqlB,WAAY,OACZ3gB,OAAQmqB,EAAkB7uB,OANV,2CAAH,sDAcvBklB,GAAwB,uCAAG,WAAMxkB,GAAN,eAAAkL,EAAA,sEAEFoZ,GAAqC,CAC5DtmB,WAAY,CACRE,aAAc,CACVwmB,QAAS1kB,EAAMV,GACfqlB,WAAY,OACZ3gB,OAAQmqB,EAAkB7uB,OAPT,QAEvBslB,EAFuB,SAce,OAAxBA,EAAa/hB,OAC7BwY,GAAwB,qBAGxB2D,GAAsB,mDAlBG,2CAAH,sDA2C9BhU,qBAAU,WAgBR,GAfImjB,GAAqBA,EAAkBjsB,MACzCkqB,EAAW+B,EAAkBjsB,MAAlB,IAEXkqB,EAAW,IAGX+B,GACAA,EAAkBhsB,MAClBgsB,EAAkBhsB,KAAKtE,OAAS,EAGhCqtB,GAAgBiD,EAAkBhsB,MAElC+oB,GAAgB,IAGhBiD,GACAA,EAAkB9uB,UAClB8uB,EAAkB9uB,SAASxB,OAAS,EACpC,CACEU,QAAQC,IAAI,oBAAoB2vB,EAAkB9uB,UACpD,IAAM0wB,EAAc5B,EAAkB9uB,SACtC4tB,GAAmB8C,QAEnB9C,GAAmB,MAEpB,CAACkB,IAKJnjB,qBAAU,WACR,GACIshB,EAAmB/hB,MAAQ+hB,EAAkB,MAC9C3uB,OAAOC,KAAK0uB,EAAkB,MAAUzuB,OAAS,GACxByuB,EAAkB,KAAlB,iBAA+CzuB,OAAS,EAAE,CAClF,IAAMkxB,EAAazC,EAAkB,KAAlB,iBAA+CluB,KAAI,SAAAQ,GAAI,OAAIA,KAC9EowB,GAAcD,GACd,IAAMf,EAAc1B,EAAkB,KAAlB,iBAA+CluB,KAAI,SAAAQ,GACnE,OAAO,eACAA,EADP,CAEIW,IAAKX,EAAKW,IACVgwB,UAAW3wB,EAAK2wB,UAChB7sB,SAAU9D,EAAK8D,cAGxBwrB,GAAeF,MAIpB,CAAC1B,IAEH/tB,QAAQC,IAAI,wBAAwB8tB,GAEpCthB,qBAAU,WAEN,GAAI+jB,GAAWlxB,OAAS,GACpB,GAAIkxB,GAAWlxB,OAASmwB,GAAYnwB,OAAQ,CACxC,IAAM0xB,EAAYR,GAAWA,GAAWlxB,OAAS,GAA/B,QAA6CA,OAAS,GAAKkxB,GAAWA,GAAWlxB,OAAS,GAA/B,QAA6C,GAA7C,IAC7EU,QAAQC,IAAI,YAAa+wB,GAEzBrB,GAAe,GAAD,oBAAKF,IAAL,gBACPe,GAAWA,GAAWlxB,OAAS,GADxB,CAEV0B,IAAKwvB,GAAWA,GAAWlxB,OAAS,GAA/B,GACL0xB,UAAWA,EACX7sB,SAAU,YAKb,GAAIqsB,GAAWlxB,OAASmwB,GAAYnwB,OAAQ,CAC7CU,QAAQC,IAAI,aAAcuwB,IAC1BxwB,QAAQC,IAAI,cAAewvB,IAE3B,IAAM6B,EAAiB7B,GAAY7Q,QAAO,SAAAve,GACtC,IAAIkxB,GAAS,EAMb,OALAf,GAAWjuB,SAAQ,SAAAW,GACXA,EAAQnC,KAAOV,EAAKW,MACpBuwB,GAAS,MAGVA,KAEX5B,GAAe2B,SAMnB3B,GAAe,MAKpB,CAACa,KAKF,IAAMhjB,GAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAf,EAAA,yDAEb2Z,EACJlJ,GAAYA,EAAS,GAEjBA,EAASvd,KAAI,SAAC4B,GACZ,OAAOA,EAAMV,MAEf,GAEAuE,EACJmqB,GAAYnwB,OAAS,EACjBmwB,GAAY5vB,KAAI,SAACqD,GACf,MAAO,CACLlC,IAAKkC,EAAQlC,IACbgwB,UAAW9tB,EAAQ8tB,UACnB7sB,SAAUjB,EAAQiB,aAGtB,KAGEyrB,GAAqBxwB,OAAOC,KAAKuwB,GAAmBtwB,OAAS,GAtBlD,oBAuBPknB,EAAyB,GAG5BF,GAAaA,EAAUhnB,OAAS,GACjCgnB,EAAU/jB,SAAQ,SAAA4jB,GACbyJ,GAAqBA,EAAiB,QACnCA,EAAiB,MAAU7vB,SAASomB,IACtCK,EAAuB9jB,KAAKyjB,SAO1BK,EAAuB,IAAMA,EAAuBlnB,OAAS,GArC1D,iCAsCGsmB,GAAqC,CACvCnmB,WAAY,CACRE,aAAc,CACVymB,WAAY,OACZ3gB,OAAQmqB,EAAkB7uB,KAGlC2D,KAAM,CACFjD,MAAO+kB,KA9CZ,oCAkDEA,EAAuB,IAAMA,EAAuBlnB,OAAS,GAlD/D,kCAmDGumB,GAAmC,CACrCpmB,WAAY,CACRE,aAAc,CACVwmB,QAASK,EAAuB,GAAGzlB,GACnCqlB,WAAY,OACZ3gB,OAAQmqB,EAAkB7uB,OAxDnC,yBAiES4vB,EAAsB,CAChDlxB,WAAY,CACVE,aAAc,CACZoB,GAAI6uB,EAAkB7uB,KAG1B2D,KAAM,CACJjG,KAAMgP,EAAOhP,KAAK8nB,OAClBzlB,SAAU2tB,GACV7qB,KAAMosB,EACNvuB,MAAO6kB,EACP5hB,KAAMA,GACNI,iBAAkBQ,EAClBX,gBAAiB8I,EAAO9I,gBACxBC,YAAa6I,EAAO7I,YACpBC,YAAa4I,EAAO5I,YACpBif,UAAWrW,EAAOqW,UAClBE,gBAAiBvW,EAAOuW,gBACxBE,SAAUA,IAAYA,GAAS5kB,OAAS,EAAI4kB,GAAS5jB,KAAK,KAAO,GAEjEmmB,GAAI,CACF3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SACEC,IAAcA,GAAW7kB,OAAS,EAAI6kB,GAAW7jB,KAAK,KAAO,GAC/D7B,KAAMgP,EAAOmW,OAAO2C,OACpB5hB,gBAAiB8I,EAAO6tC,kBACxB52C,KAAM22C,GACNz2C,YAAa6I,EAAO8tC,cACpB12C,YAAa4I,EAAO+tC,kBA9FP,QAiEbrqB,EAjEa,OAmGnBnxB,QAAQC,IAAI,gBAAiBkxB,GAGzBA,GAA0C,OAAzBA,EAAc7sB,SACjCwY,GAAwB,kBAExB6+B,EAAkB,eACbxqB,EADY,CAEfpwB,GAAIowB,EAAa,IAAU,GAC3BlwB,IAAKkwB,EAAa,IAAU,GAC5B1yB,KAAMgP,EAAOhP,KAAK8nB,QAAU,GAC5BllB,MAAO8vB,EAAa,MAAb,OAAmC,MAG5C5M,GAAyB,GAGzBrH,EAAY,IACZyI,GAAgB,IAChBsK,GAAW,IACXvD,EAAU,IACVC,GAAgB,IAChBkB,EAAW,IACXW,EAAe,IACfE,GAAmB,IACnBhhB,EAAQiZ,aAKVjZ,EAAQC,eAAc,GAjIH,4CAAH,wDAoIlBlB,qBAAU,WACR,IAAKikB,EAAe,UAAe,CACjC,IAAMhlB,EAAQglB,EAAe,MAC7B,GAAIhlB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAEzDF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,aAOjC,CAACiG,IAIJ,IAAM5J,GAAe,SAACpY,GACpB6V,GAAyB,GACzBrH,GAAY,GACZyI,GAAgB,IAChBsK,GAAW,IACXvD,EAAU,IACVC,GAAgB,IAChBkB,EAAW,IACXW,EAAe,IACfE,GAAmB,KAuBrB,OAnBAjiB,qBAAU,WACR,GAAImjB,GAAqBxwB,OAAOC,KAAKuwB,GAAmBtwB,OAAS,EAAG,CAClE,IAAM4kB,EACJ0L,EAAkB1L,UAAY0L,EAAkB1L,SAAStkB,MAAM,KAEjEI,QAAQC,IAAI,gBAAiBikB,GAE7B,IAAMC,EACJyL,EAAkBnJ,IAClBmJ,EAAkBnJ,GAAlB,UACAmJ,EAAkBnJ,GAAlB,SAAiC7mB,MAAM,KACzC0wB,GAAYpM,GAAY,IACxBqM,GAAcpM,GAAc,OAE7B,IAEHnkB,QAAQC,IAAI,kBAAmB8tB,GAC/B/tB,QAAQC,IAAI,iBAAkB2vB,GAG5B,kBAAC,IAAD,CACE9hB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACRA,GADQ,kBAGNwiB,EAHM,GAIL7B,EAAkB,MACpB3uB,OAAOC,KAAK0uB,EAAkB,MAAUzuB,OAAS,GACjDyuB,EAAkB,KAAlB,IAAoC,CAClChK,YAAagK,EAAkB,KAAlB,GAAiCjK,UAC9CG,kBACE8J,EAAkB,KAAlB,GAAiC/J,gBACnCJ,OAAQmK,EAAkB,KAAlB,GAAiCtvB,KACzCyyB,SAAUnD,EAAkB,KAAlB,GAAiCzqB,KAC3CugB,cAAekK,EAAkB,KAAlB,GAAiC7sB,iBAKvD,gBACC+M,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEvP,MAAO,CACL2hB,IAAK,QAEPG,UAAW,CACTrS,OAAQ,EACRwG,QAAS,GAEXrE,MAAO,OACP/O,MAAM,cACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,WAGZ,6BAASjpB,UAAU,2BACjB,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,wCACb,kDAEA,yBACEA,UACE6O,EAAOhP,MAAQgP,EAAOhP,KAAKa,OAAS,EAChC,mBACA,aAGN,kBAAC6U,GAAA,EAAD,QAGJ,yBAAKvV,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,OACNS,YAAY,YACZP,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QACG6P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GACAuiB,EAAgBhlB,MAAhB,WAEJlN,YACG4P,EAAQ3P,MAAQyP,EAAOzP,OACtB0P,GACAuiB,EAAgBhlB,MAAhB,WAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,WAIpB,kBAACxQ,EAAD,CACEI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,0DACbD,KAAK,SACLF,QACG6P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GACAuiB,EAAgBhlB,MAAhB,aAEJlN,YACG4P,EAAQwV,QAAU1V,EAAO0V,SACxBzV,GACAuiB,EAAgBhlB,MAAhB,aAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAACxQ,EAAD,CACEI,MAAM,mBACNE,MAAOsP,EAAO9I,gBACdjG,YAAY,SACZD,KAAK,kBACLF,QACG6P,EAAQzJ,iBAAmBuJ,EAAOvJ,kBACjCwJ,GACAuiB,EAAgBhlB,MAAhB,sBAEJlN,YACG4P,EAAQzJ,iBAAmBuJ,EAAOvJ,kBACjCwJ,GACAuiB,EAAgBhlB,MAAhB,sBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAACxQ,EAAD,CACEI,MAAM,sBACNE,MAAOsP,EAAO6tC,kBACd58C,YAAa,8CACbD,KAAK,oBACLF,QACG6P,EAAQktC,mBACPptC,EAAOotC,oBACPntC,GACAuiB,EAAgBhlB,MAAhB,wBAEJlN,YACG4P,EAAQktC,mBACPptC,EAAOotC,oBACPntC,GACAuiB,EAAgBhlB,MAAhB,wBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,kBAACxQ,EAAD,CACEI,MAAM,eACNS,YAAa,SACbP,MAAOsP,EAAO5I,YACdpG,KAAK,cACLF,QACG6P,EAAQvJ,aAAeqJ,EAAOrJ,cAC7BsJ,GACAuiB,EAAgBhlB,MAAhB,kBAEJlN,YACG4P,EAAQvJ,aAAeqJ,EAAOrJ,cAC7BsJ,GACAuiB,EAAgBhlB,MAAhB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAACxQ,EAAD,CACEI,MAAM,kBACNS,YAAa,8CACbP,MAAOsP,EAAO+tC,cACd/8C,KAAK,gBACLF,QACG6P,EAAQotC,eAAiBttC,EAAOstC,gBAC/BrtC,GACAuiB,EAAgBhlB,MAAhB,oBAEJlN,YACG4P,EAAQotC,eAAiBttC,EAAOstC,gBAC/BrtC,GACAuiB,EAAgBhlB,MAAhB,oBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACxQ,EAAD,CACEI,MAAM,eACNE,MAAOsP,EAAO7I,YACdnG,KAAK,cACLF,QACG6P,EAAQxJ,aAAesJ,EAAOtJ,cAC7BuJ,GACAuiB,EAAgBhlB,MAAhB,kBAEJlN,YACG4P,EAAQxJ,aAAesJ,EAAOtJ,cAC7BuJ,GACAuiB,EAAgBhlB,MAAhB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAACxQ,EAAD,CACEI,MAAM,kBACNE,MAAOsP,EAAO8tC,cACd98C,KAAK,gBACLF,QACG6P,EAAQmtC,eAAiBrtC,EAAOqtC,gBAC/BptC,GACAuiB,EAAgBhlB,MAAhB,oBAEJlN,YACG4P,EAAQmtC,eAAiBrtC,EAAOqtC,gBAC/BptC,GACAuiB,EAAgBhlB,MAAhB,oBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,oBAIpB,kBAACxQ,EAAD,CACEI,MAAM,MACNE,MAAOsP,EAAOjO,IACdf,KAAK,MACLF,QACG6P,EAAQ5O,KAAO0O,EAAO1O,MACrB2O,GAAgBuiB,EAAgBhlB,MAAhB,UAEpBlN,YACG4P,EAAQ5O,KAAO0O,EAAO1O,MACrB2O,GAAgBuiB,EAAgBhlB,MAAhB,UAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,UAIpB,wBAAIzP,UAAU,mBAAd,QAEA,yBACEI,MAAO,CACL4R,MAAO,OACPpC,SAAU,SAGZ,kBAAC,KAAD,CACEijB,OAAQC,KACR9wB,KAAM8D,GACNitB,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpB6pB,GAAQ76C,IAEVqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,OAK5B,yBACEzyB,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,WAEA,yBACEI,MAAO,CACL4R,MAAO,OACPpC,SAAU,SAGZ,kBAAC,KAAD,CACEijB,OAAQC,KACR9wB,KAAMy6C,GACN1pB,OAAQ,SAACF,GAEPzxB,QAAQC,IAAI,0BAA2BwxB,IAEzCpzB,SAAU,SAAC6I,EAAOuqB,GAChB,IAAM7wB,EAAO6wB,EAAOG,UACpB8pB,GAAU96C,IAEZqiB,OAAQ,SAAC/b,EAAOuqB,GACdzxB,QAAQC,IAAI,QAASwxB,IAEvBpD,QAAS,SAACnnB,EAAOuqB,GACfzxB,QAAQC,IAAI,SAAUwxB,OA8B5B,yBACEzyB,MAAO,CACL6a,aAAc,YAwCtB,yBAAKjb,UAAU,kCACb,yBAAKA,UAAU,wCACb,wCAEA,yBACEA,UACE2E,IAAWA,GAAQjE,OAAS,EACxB,mBACA,aAGN,kBAAC6U,GAAA,EAAD,QAIJ,yBAAKvV,UAAU,sCACb,wBAAIA,UAAU,mBAAd,YACA,kBAAC,GAAD,CACE6xB,cAAeA,GACfD,WAAYA,KAGd,yBACExxB,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,oBAEA,kBAAC,GAAD,CACE6wB,YAAaA,GACbE,eAAgBA,OAOtB,yBAAK/wB,UAAU,kCAE/B,yBAAKA,UAAU,wCACX,qCAIA,kBAAC,KAAD,CACIkW,UAAU,OAAOjT,MAAO,uFACxB,uBAAGuT,KAAK,OACJ,kBAAC2S,GAAA,EAAD,SAKZ,yBAC4C/oB,MAAO,CACHiW,QAAS,QAEbrW,UAAU,gCACTmvB,EAAmBhiB,WAChB,yBAAK/M,MAAO,CACRiW,QAAS,WAET,kBAAC,KAAD,OAGP8Y,EAAmB/hB,MAChB,oCACKoR,GAEGA,EAAS9d,OAAS,GAAK8d,EAASvd,KAAI,SAAC4B,EAAO4T,GACxC,OACI,yBAAKzW,UAAU,sCACX,yBACIA,UAAU,kDACV+P,QAAS,WACLgX,GAAgBlkB,EAAMV,IACtBklB,GAAyBxkB,KAG7B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACI4M,QAAS,YA1wBpD,SAAC5N,GAExB,IAAMknB,EAAY7K,GAAYA,EAASwB,QAAO,SAAAnd,GAC1C,OAAOA,EAAMV,KAAOA,KAGxBmc,EAAY+K,GAqwB0DC,CAAmBzmB,EAAMV,IACzBmlB,GAAwBzkB,EAAMV,KAIlCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,QAIHoE,KAAiBjkB,EAAMV,KAInB2kB,IAA0B,IAAVrQ,IAHjB,0BAAMzW,UAAU,4CACZ,kBAAC2iB,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACI1f,MAAO,iBAEP,yBACI8M,QAAS,WACLsO,GAAW,GACXoN,GAAwB,GACxBD,GAA2B,IAE/BxrB,UAAU,4CAIV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACZ,kBAAC6kB,GAAA,EAAD,YAUhD,yBAAK7kB,UAAU,kCACb,yBAAKA,UAAU,wCACb,yCAEA,kBAAC,KAAD,CACEkW,UAAU,OACVjT,MACE,sFAGF,uBAAGuT,KAAK,OACN,kBAAC2S,GAAA,EAAD,SAIN,yBAAKnpB,UAAU,sCACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QACG6P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GACAuiB,EAAgBhlB,MAAhB,gBAEJlN,YACG4P,EAAQ0V,WAAa5V,EAAO4V,YAC3B3V,GACAuiB,EAAgBhlB,MAAhB,gBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,gBAIpB,kBAACxQ,EAAD,CACEI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QACG6P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACAuiB,EAAgBhlB,MAAhB,kBAEJlN,YACG4P,EAAQ2V,aAAe7V,EAAO6V,cAC7B5V,GACAuiB,EAAgBhlB,MAAhB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAIpB,kBAAC,GAAD,CACEpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QACG6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACAuiB,EAAgBhlB,MAAhB,sBAEJlN,YACG4P,EAAQ4V,iBAAmB9V,EAAO8V,kBACjC7V,GACAuiB,EAAgBhlB,MAAhB,sBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,sBAIpB,kBAAC,GAAD,CACEpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QACG6P,EAAQ6V,mBACP/V,EAAO+V,oBACP9V,GACAuiB,EAAgBhlB,MAAhB,wBAEJlN,YACG4P,EAAQ6V,mBACP/V,EAAO+V,oBACP9V,GACAuiB,EAAgBhlB,MAAhB,wBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,wBAIpB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEEwjB,QAASkO,GACT1sB,KAAMsgB,KAGR,yBACEllB,MAAO,CACL0V,UAAW,UAIf,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEEwjB,QAASmO,GACT3sB,KAAMugB,QAKd,yBAAKvlB,UAAU,kCACb,yBAAKA,UAAU,qCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,iDAEA,kBAAC,KAAD,CACEwV,MAAM,MACN4I,QACE0T,EAAgBhlB,MAAhB,kBACEqkB,EAAYzwB,OAAS,GAEzBwV,UAAU,OACVjT,MAAO,gCAEP,yBACEjD,UACImxB,EAAYzwB,OAAS,GACtBoxB,EAAgBhlB,MAAhB,eAEGglB,EAAgBhlB,MAAhB,eACA,kBACA,mBAHA,aAMN,kBAACyI,GAAA,EAAD,SAIN,yBAAKvV,UAAU,mDACb,kBAAC,GAAD,CACE8vB,mBAAoBA,GACpBD,gBAAiBA,GACjBD,eAAgBA,OAMxB,yBAAK5vB,UAAU,gCACb,yBAAKA,UAAU,8CACb,yBAAKA,UAAU,qDACb,4CAEF,yBAAKA,UAAU,mDACb,kBAAC,GAAD,CACE+tB,gBAAiBA,GACjBC,aAAcA,GACdF,UAAWA,UASzB,kBAAC,GAAD,CACEzP,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,SC76BnBwX,IAnSiB3Z,KAAxBD,OAAwBC,KAAhBC,YACG2P,IAAX9B,OAOe,SAAC5V,GAAkB,IAAD,EACkBpG,EAAe,GAAI,cADrC,mBAC9BihB,EAD8B,KACV+B,EADU,OAEMrf,mBAAS,IAFf,mBAE9BmrC,EAF8B,KAEfD,EAFe,KAG/Bj8C,EAASurB,eACT9X,EAAUC,eACVgf,EAAY1yB,EAAM,GALa,EAOe+Q,oBAAS,GAPxB,mBAO9BmkB,EAP8B,KAOVC,EAPU,KAUrCpoB,qBAAU,YACgB,uCAAG,4BAAAE,EAAA,sEACHmjB,EAAyB,CACvCrwB,WAAY,CACRC,OAAQ,CACJm8C,YAAa,IACbC,QAAS,IACT/P,WAAY,KAEhBpsC,aAAc,CACVoB,GAAIqxB,MATK,QACf5mB,EADe,SAiBrBmwC,EAAkBnwC,GAjBG,2CAAH,qDAqBtBolB,KAED,CAACwB,IAKJpyB,QAAQC,IAAI,qBAAsB8tB,GAElC/tB,QAAQC,IAAI,cAAeP,GAE3B,IA+BMgsB,EAAMqC,EAAmB/hB,MAAQ4vC,GAAkBA,EAAc,MA/B5C,SAACjwB,GACxB,IAAKA,EAAK,GAAI,OAAO,EACrBA,EAAOA,EAAK9rB,KAAI,SAAAQ,GAAI,OAAIA,EAAKgB,SAC7B,IAAMuqB,EAAU,GAEZC,EAAa,EACbC,EAAe,EAqBnB,OAlBAH,EAAKppB,SAAQ,SAAClC,EAAMgV,GACZwW,EAAa,GACTD,EAAQE,GACRF,EAAQE,GAAR,uBAA4BF,EAAQE,IAApC,CAAmDzrB,IAElDurB,EAAQE,GAAgB,CAACzrB,GAE9BwrB,GAA0B,EAC1BC,GAA8B,IAI9BD,EAAa,EACbC,EAAe,EACf9rB,QAAQC,IAAI,aAAc4rB,OAI3BD,EAIwEG,CAAmB6vB,EAAc,OAAa,GAIjI,OADA57C,QAAQC,IAAI,kBAAmB8tB,GAE3B,yBAAKnvB,UAAU,wBAEX,yBAAKA,UAAU,iCACX,6CAICmvB,EAAmB/hB,MAAQ4vC,GAAmBx8C,OAAOC,KAAKu8C,GAAgBt8C,OAAS,GAChF,oCACK,kBAAC,GAAD,CAEGswB,kBAAmBgsB,EACnBt3B,sBAAuBsQ,EACvBrQ,yBAA0BsQ,EAC1B8mB,kBAAmBA,IAEtB,kBAAC,IAAD,CACGhtC,QAAS,kBAAMkmB,GAAsB,IACrC32B,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAHT,UAWb,kBAAC,KAAD,CACIyC,QAAM,EAACC,UAAW,CAAEzP,KAAM,GAC1B7N,QAASmf,EAAmBhiB,WAC3BgiB,EAAmB/hB,MAAQ4vC,KAAoBx8C,OAAOC,KAAKu8C,GAAgBt8C,OAAS,IACjF,kBAAC,KAAD,CAAO4B,YAAY,kBAAkBO,MAAOmR,KAAMK,yBAGrD8a,EAAmB/hB,MAAQ4vC,GAAmBx8C,OAAOC,KAAKu8C,GAAgBt8C,OAAS,GAChF,oCACI,yBAAKV,UAAU,gCACX,yBAAKA,UAAU,mGACX,yBAAKoL,IAAK4xC,EAAc,OAAaA,EAAc,MAAW75C,IAAI,MAEtE,yBAAKnD,UAAU,qCACX,4BACKg9C,EAAc,MAEnB,4BACKA,EAAc,OAEnB,4BACKA,EAAc,aAGlBA,EAAc,WACX,0CAEI,8BACKA,EAAc,MAM1BA,EAAc,SACX,wCAEI,8BACKA,EAAc,MAQ1BA,EAAc,KACX,mCAEI,8BACKA,EAAc,MAsB1BA,EAAc,WAAiBA,EAAc,UAAct8C,OAAS,GAChE,oCACG,0CAECs8C,EAAc,UAAc/7C,KAAI,SAAAoF,GAC7B,OACI,0BACI0J,QAAS,kBAAMwE,EAAQzQ,KAAR,gCAAsCuC,EAAIlE,OAExDkE,EAAIxG,aAWhCsvB,EAAmB/hB,MAChB4vC,GAAkBx8C,OAAOC,KAAKu8C,GAAgBt8C,OAAS,GACxDs8C,EAAc,UACbA,EAAc,SAAat8C,OAAS,GACpC,yBAAKV,UAAU,iCACX,yCAQR,yBAAKA,UAAU,8BACVmvB,EAAmB/hB,MAAQ4vC,GAAkBA,EAAc,YAAkBA,EAAc,SAAat8C,OAAS,IAC9G,yBAAKN,MAAO,CACR0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,qCAAqCO,MAAOmR,KAAMK,0BAI5E8a,EAAmB/hB,MAAQ4vC,GAAkBx8C,OAAOC,KAAKu8C,GAAgBt8C,OAAS,GAC/E,oCACKs8C,EAAc,UAAgBA,EAAc,SAAat8C,OAAS,GAC/Ds8C,EAAc,SAAa/7C,KAAI,SAAAqD,GAC3B,OACI,kBAAC,GAAD,CACIiB,SAAUjB,EAAQiB,SAClBiuB,UAAWlvB,EAAO,WAO7C04C,EAAc,OAAaA,EAAc,MAAUt8C,OAAS,GACzD,oCACI,yBAAKV,UAAU,iCACX,8CAKJ,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,kBACV8sB,GAAOtsB,OAAOC,KAAKqsB,GAAK7rB,KAAI,SAAA+b,GACzB,OACI,yBAAKhd,UAAU,qBACV8sB,EAAI9P,IAAW8P,EAAI9P,GAAQ/b,KAAI,SAAA6B,GAC5B,OAAO,yBAAKsI,IAAKtI,EAAK1C,MAAO,CACzB4R,MAAO,oBAcvC,yBAAK5R,MAAO,CACR6a,aAAc,gBC1Q5C9M,GAAmBC,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAcnE8hB,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAK7ChH,GAAgB,CAClB3O,KAAM,GACTmlB,OAAQ,GACR1iB,YAAa,GACb2iB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAuTE4Q,GAzSK,SAAC,GACyD,IADvDzQ,EACsD,EADtDA,sBACnBC,EAAyE,EAAzEA,yBAA0BqW,EAA+C,EAA/CA,cAAe7G,EAAgC,EAAhCA,WAAWO,EAAqB,EAArBA,QAAqB,EAEhCxnB,EAAe,GAAI,iBAFa,mBAElEmuB,EAFkE,KAErDC,EAFqD,OAGzCzqB,oBAAS,GAHgC,mBAGlE2M,EAHkE,KAGxDF,EAHwD,OAIjCzM,oBAAS,GAJwB,mBAIlE2kB,EAJkE,KAIpDC,EAJoD,OAKlD5kB,mBAAS,IALyC,mBAKlE7M,EALkE,KAK7Dwe,EAL6D,OAMjD3R,mBAAS,IANwC,mBAMrE+U,EANqE,KAM9DC,EAN8D,KAQnEjY,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAf,EAAA,sEACOuuB,EAAkB,CACtCz7B,WAAY,CACRE,aAAc,CACVoB,GAAI0M,EAAO1M,KAGnB2D,KAAM,CACFjG,KAAMgP,EAAOhP,KAAK8nB,OAClBrlB,YAAauM,EAAOvM,YACpB4iB,UAAWrW,EAAOqW,UAClBE,gBAAiBvW,EAAOuW,gBACxBE,SAAUtgB,EAAKtD,KAAK,KAIpBmmB,GAAI,CACf3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUsB,EAAOllB,KAAK,KACtB7B,KAAMgP,EAAOmW,OAAO2C,OACpBrlB,YAAauM,EAAOoW,kBArBA,QACXsX,EADW,SA2BqB,OAArBA,EAAU72B,QA9EF4P,OA+ErB4I,EA9ER7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,qBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAiF1CiB,EAJgB,WACrB,OAAOif,EAAQz0B,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQgN,EAAO1M,IAGtC+4B,GAGRxZ,EAAclhB,OAAOmhB,OAAO,GAAI+T,EAAQjf,GAA1BjW,OAAA,IAAAA,CAAA,GAAuCw7B,EAAvC,GAAwDO,IACtEH,EAX2C,uBAWvB1G,EAAQ9zB,MAAM,EAAG6U,IAXM,CAWEiL,GAXF,aAWkBgU,EAAQ9zB,MAAM6U,EAAQ,KACzF0e,EAAWiH,GAGFzW,GAAyB,GAGzB7W,EAAQiZ,aAGRlG,KAIJ/S,EAAQC,eAAc,GApDL,iCAnDO,IAACuG,IAmDR,OAAH,wDAyDZ4S,EAAe,SAACpY,GAClB6V,GAAyB,IAIvB3W,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOhP,OAASoP,GAazB,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,GACcwtB,KAG1B,gBACG3sB,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIvP,MAAO,CACH2hB,IAAK,QAET9e,MAAM,WACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,KAGvD,kBAAChQ,EAAD,CACbI,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLC,YAAa,YACbH,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgB8sB,EAAYvvB,MAAZ,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgB8sB,EAAYvvB,MAAZ,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,0DACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgB8sB,EAAYvvB,MAAZ,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgB8sB,EAAYvvB,MAAZ,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAKlB,kBAAC,GAAD,CACCpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACUzC,KAAK,cACLS,YAAa,cACrCX,QAAU6P,EAAQlN,aAAegN,EAAOhN,cACrCiN,GAAgB8sB,EAAYvvB,MAAZ,kBAEnBlN,YAAc4P,EAAQlN,aAAegN,EAAOhN,cACzCiN,GAAgB8sB,EAAYvvB,MAAZ,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,iBACNE,MAAOsP,EAAOoW,cACd3kB,YAAa,iDACbT,KAAK,gBACLF,QAAU6P,EAAQyV,eAAiB3V,EAAO2V,gBACvC1V,GAAgB8sB,EAAYvvB,MAAZ,oBAEnBlN,YAAc4P,EAAQyV,eAAiB3V,EAAO2V,gBAC3C1V,GAAgB8sB,EAAYvvB,MAAZ,oBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBAKzB,kBAACxQ,EAAD,CACQI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACnC3V,GAAgB8sB,EAAYvvB,MAAZ,gBAEnBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACvC3V,GAAgB8sB,EAAYvvB,MAAZ,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACxQ,EAAD,CACCI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACrC5V,GAAgB8sB,EAAYvvB,MAAZ,kBAEnBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cACzC5V,GAAgB8sB,EAAYvvB,MAAZ,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACzC7V,GAAgB8sB,EAAYvvB,MAAZ,sBAEnBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC7C7V,GAAgB8sB,EAAYvvB,MAAZ,sBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC3C9V,GAAgB8sB,EAAYvvB,MAAZ,wBAEnBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC/C9V,GAAgB8sB,EAAYvvB,MAAZ,wBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASA,EACTxe,KAAMA,IAGN,yBAAK5E,MAAO,CACX0V,UAAU,UAGX,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASqD,EACT7hB,KAAM4hB,KAKW,kBAAC,GAAD,CACIvI,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SC5U5CpQ,GAAmBC,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAcnE8hB,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAK7ChH,GAAgB,CAClB3O,KAAM,GACTmlB,OAAQ,GACR1iB,YAAa,GACb2iB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAyTE4Q,GA5SK,SAAC,GAAqF,IAAnFzQ,EAAkF,EAAlFA,sBAAuBC,EAA2D,EAA3DA,yBAA0B+P,EAAiC,EAAjCA,QAASP,EAAwB,EAAxBA,WAAwB,EAE5DjnB,EAAe,GAAI,cAFyC,mBAE9FmuB,EAF8F,KAEjFC,EAFiF,OAGrEzqB,oBAAS,GAH4D,mBAG9F2M,EAH8F,KAGpFF,EAHoF,OAI7DzM,oBAAS,GAJoD,mBAI9F2kB,EAJ8F,KAIhFC,EAJgF,OAK7D5kB,mBAAS,IALoD,gCAM9EA,mBAAS,KANqE,mBAM9F7M,EAN8F,KAMzFwe,EANyF,OAO7E3R,mBAAS,IAPoE,mBAOjG+U,EAPiG,KAO1FC,EAP0F,KAS/FjY,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACOuuB,EAAkB,CACtCz7B,WAAY,CACRE,aAAc,CACVoB,GAAI0M,EAAO1M,KAGnB2D,KAAM,CACFjG,KAAMgP,EAAOhP,KAAK8nB,OAClBrlB,YAAauM,EAAOvM,YACpB4iB,UAAWrW,EAAOqW,UAClBE,gBAAiBvW,EAAOuW,gBACxBE,SAAUtgB,EAAKtD,KAAK,KAIpBmmB,GAAI,CACf3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUsB,EAAOllB,KAAK,KACtB7B,KAAMgP,EAAOmW,OAAO2C,OACpBrlB,YAAauM,EAAOoW,kBArBA,QACXsX,EADW,SA2BqB,OAArBA,EAAU72B,QA7EF4P,OA8ErB4I,EA7ER7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,qBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BA2EvCmQ,GAAyB,GAEzBwP,EAAW,GAAD,oBAAKO,GAAL,gBAEf6G,EAFe,CAGNp6B,GAAIo6B,EAAS,KAAW,GACxBl6B,IAAKk6B,EAAS,KAAW,GACzB18B,KAAM08B,EAAS,MAAY,GAC3Bj6B,YAAai6B,EAAS,aAAmB,QAG7CztB,EAAQiZ,aAGRlG,KAIJ/S,EAAQC,eAAc,GA/CL,iCAlDO,IAACuG,IAkDR,OAAH,wDAoDZ4S,EAAe,SAACpY,GAClB6V,GAAyB,IAIvB3W,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOhP,OAASoP,GAqBzB,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIvP,MAAO,CACH2hB,IAAK,QAET9e,MAAM,mBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,KAGvD,kBAAChQ,EAAD,CACbI,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLC,YAAa,YACbH,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgB8sB,EAAYvvB,MAAZ,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgB8sB,EAAYvvB,MAAZ,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,0DACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgB8sB,EAAYvvB,MAAZ,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgB8sB,EAAYvvB,MAAZ,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAKlB,kBAAC,GAAD,CACCpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACUzC,KAAK,cACLS,YAAa,cACrCX,QAAU6P,EAAQlN,aAAegN,EAAOhN,cACrCiN,GAAgB8sB,EAAYvvB,MAAZ,kBAEnBlN,YAAc4P,EAAQlN,aAAegN,EAAOhN,cACzCiN,GAAgB8sB,EAAYvvB,MAAZ,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,iBACNE,MAAOsP,EAAOoW,cACd3kB,YAAa,iDACbT,KAAK,gBACLF,QAAU6P,EAAQyV,eAAiB3V,EAAO2V,gBACvC1V,GAAgB8sB,EAAYvvB,MAAZ,oBAEnBlN,YAAc4P,EAAQyV,eAAiB3V,EAAO2V,gBAC3C1V,GAAgB8sB,EAAYvvB,MAAZ,oBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBAKzB,kBAACxQ,EAAD,CACQI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACnC3V,GAAgB8sB,EAAYvvB,MAAZ,gBAEnBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACvC3V,GAAgB8sB,EAAYvvB,MAAZ,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACxQ,EAAD,CACCI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACrC5V,GAAgB8sB,EAAYvvB,MAAZ,kBAEnBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cACzC5V,GAAgB8sB,EAAYvvB,MAAZ,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACzC7V,GAAgB8sB,EAAYvvB,MAAZ,sBAEnBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC7C7V,GAAgB8sB,EAAYvvB,MAAZ,sBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC3C9V,GAAgB8sB,EAAYvvB,MAAZ,wBAEnBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC/C9V,GAAgB8sB,EAAYvvB,MAAZ,wBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASA,EACTxe,KAAMA,IAGN,yBAAK5E,MAAO,CACX0V,UAAU,UAGX,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASqD,EACT7hB,KAAM4hB,KAKW,kBAAC,GAAD,CACIvI,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCzS1CpC,IAXiB/N,MAAaC,MAAM,CAC3CxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAUtCqc,KAAxBD,QACA+N,IADwB9N,KAAhBC,YACG2P,IAAX9B,QAIFC,GAAU,SAAC,GAA0B,IAAxBnoB,EAAuB,EAAvBA,KAAMmzB,EAAiB,EAAjBA,WAAiB,EACXtjB,oBAAS,GADE,mBAClCuM,EADkC,KACzBC,EADyB,OAEiBxM,oBAAS,GAF1B,mBAElCuY,EAFkC,KAEXC,EAFW,OAGMnc,EAAe,GAAI,iBAHzB,mBAGlBknB,GAHkB,WAKnC7gB,EAAUC,eAGV6gB,EAAe,uCAAG,WAAOlzB,GAAP,iBAAA4L,EAAA,sEACIqnB,EAAqB,CAC/Cv0B,WAAY,CACXE,aAAc,CACboB,SAJoB,QACjBmzB,EADiB,SAYqB,OAAxBA,EAAa5vB,SAvDF4P,EAwDN,qBAvD1BD,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,qBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAqDpC+f,EAAavzB,EAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAKU,KAAOA,KACnDgzB,EAAWI,IAfW,iCA3CO,IAACjgB,IA2CR,OAAH,sDAgCrB,OACC,oCACC,kBAAC,KAAD,CAMCyD,KAAK,QAEL8D,WAAY7a,GAGZ,kBAAC,GAAD,CACCiB,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACP,oCACC,wBACCpN,QAAS,WACRwE,EAAQzQ,KAAR,2BAAiCqZ,EAAOhb,KAExCkoB,EAAyBlN,IAE1B/c,MAAO,CACN0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAER/R,OAML,kBAAC,GAAD,CACChB,MAAM,cACNga,UAAU,cACV5a,IAAI,KACJrC,UAAU,yBAIX,kBAAC,GAAD,CAECA,UAAU,uBACViD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACP,kBAAC,KAAD,CAAOpE,KAAK,UACX,uBAAGvC,KAAK,MACP,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,mBAC9B,0BAAMjD,UAAU,WAAW+P,QAAS,WACnCsO,GAAW,GACXgM,EAAyBlN,KAEzB,kBAACyN,GAAA,EAAD,SAOH,kBAAC,KAAD,CACC7H,UAAW,kBAAMsS,EAAgBlY,EAAOhb,KACxCc,MAAM,qBAAgBkf,OAAO,MAAMa,WAAW,MAC9C,0BACChjB,UAAU,4BAEV,kBAAC4iB,GAAA,EAAD,aAQLwH,GAAyB,kBAAC,GAAD,CACzBsL,QAAS1zB,EACTmzB,WAAYA,EACZxP,yBAA0BtH,EAC1BqH,sBAAuBtH,EACvB4d,cAAe5R,MA4FJqL,GAlFC,SAAC,GAAgB,qBAGF5jB,mBAAS,IAHR,mBAGxB6jB,EAHwB,KAGfP,EAHe,OAKQjnB,EAAe,GAAI,eAL3B,mBAKxBggB,EALwB,KAKdC,EALc,KAO/B/sB,QAAQC,IAAI,gBAAgB6sB,GAE5BrgB,qBAAU,YACI,uCAAG,4BAAAE,EAAA,sEACIogB,EAAmB,IADvB,OACTnpB,EADS,OAGfmwB,EAAWnwB,GAHI,2CAAH,qDAKbwe,KACE,IAhB4B,MAoB2B3R,oBAAS,GApBpC,mBAoBxB6T,EApBwB,KAoBDC,EApBC,KA6B/B,OACC,oCAEC,yBAAK3lB,UAAU,yBACd,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,+CACd,wBAAIA,UAAU,uCAAd,eAIA,kBAAC,GAAD,CACCqrB,aAAa,EACbrrB,UAAU,qBACVM,YAAY,uBACZquB,SAAU,SAAApvB,GAAK,OArBA,SAACA,GACrB,GAAI2uB,EAASlsB,KAAKtB,OAAS,EAAG,CAC7B,IAAMk1B,EAAa1H,EAASlsB,KAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBACvFqc,EAAWS,IAkBYtK,CAAa/rB,OAGlC,kBAAC,IAAD,CAECS,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJzC,YASD,yBAAK3lB,UAAU,uCACbkuB,EAAS9gB,MAAQsoB,EAAQh1B,OAAS,GAAK,kBAAC,GAAD,CACvCy0B,WAAYA,EACZnzB,KAAM0zB,IACNxH,EAAS/gB,WAAa,kBAACoe,GAAD,MAGtB2C,EAAS9gB,QAAUsoB,EAAQh1B,OAAS,IACpC,yBAAKN,MAAO,CACX0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,uBAAuBO,MAAOmR,KAAMK,4BAM3D,kBAAC,GAAD,CACCqhB,QAASA,EACTP,WAAYA,EACZzP,sBAAuBA,EACvBC,yBAA0BA,MC7PxBxX,GAAmBC,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAcnE8hB,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAK7ChH,GAAgB,CAClB3O,KAAM,GACTmlB,OAAQ,GACR1iB,YAAa,GACb2iB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAqTE4Q,GAxSK,SAAC,GACuD,IADrDzQ,EACoD,EADpDA,sBACnBC,EAAuE,EAAvEA,yBAA0B+W,EAA6C,EAA7CA,iBAAkBV,EAA2B,EAA3BA,cAA2B,EAE9B9tB,EAAe,GAAI,iBAFW,mBAEhEmuB,EAFgE,KAEnDC,EAFmD,OAGvCzqB,oBAAS,GAH8B,mBAGhE2M,EAHgE,KAGtDF,EAHsD,OAI/BzM,oBAAS,GAJsB,mBAIhE2kB,EAJgE,KAIlDC,EAJkD,OAKhD5kB,mBAAS,IALuC,mBAKhE7M,EALgE,KAK3Dwe,EAL2D,OAM/C3R,mBAAS,IANsC,mBAMnE+U,EANmE,KAM5DC,EAN4D,KAQjEjY,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACOuuB,EAAkB,CACtCz7B,WAAY,CACRE,aAAc,CACVoB,GAAI0M,EAAO1M,KAGnB2D,KAAM,CACFjG,KAAMgP,EAAOhP,KAAK8nB,OAClBrlB,YAAauM,EAAOvM,YACpB4iB,UAAWrW,EAAOqW,UAClBE,gBAAiBvW,EAAOuW,gBACxBE,SAAUtgB,EAAKtD,KAAK,KAIpBmmB,GAAI,CACf3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUsB,EAAOllB,KAAK,KACtB7B,KAAMgP,EAAOmW,OAAO2C,OACpBrlB,YAAauM,EAAOoW,kBArBA,QACXsX,EADW,SA2BqB,OAArBA,EAAU72B,QA7EF4P,OA8ErB4I,EA7ER7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,qBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BA2EvCmQ,GAAyB,GACzB+W,EAAiB,eACtBV,EADqB,GAGrBO,EAHqB,CAIZ18B,KAAM08B,EAAS,MAAY,GAC3Bj6B,YAAai6B,EAAS,aAAmB,MAI7CztB,EAAQiZ,aAGRlG,KAIJ/S,EAAQC,eAAc,GA9CL,iCAlDO,IAACuG,IAkDR,OAAH,wDAmDZ4S,EAAe,SAACpY,GAClB6V,GAAyB,IAIvB3W,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOhP,OAASoP,GAkBzB,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,GADI,GACcwtB,KAG1B,gBACG3sB,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIvP,MAAO,CACH2hB,IAAK,QAET9e,MAAM,WACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,KAGvD,kBAAChQ,EAAD,CACbI,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLC,YAAa,YACbH,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgB8sB,EAAYvvB,MAAZ,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgB8sB,EAAYvvB,MAAZ,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,0DACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgB8sB,EAAYvvB,MAAZ,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgB8sB,EAAYvvB,MAAZ,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAKlB,kBAAC,GAAD,CACCpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACUzC,KAAK,cACLS,YAAa,cACrCX,QAAU6P,EAAQlN,aAAegN,EAAOhN,cACrCiN,GAAgB8sB,EAAYvvB,MAAZ,kBAEnBlN,YAAc4P,EAAQlN,aAAegN,EAAOhN,cACzCiN,GAAgB8sB,EAAYvvB,MAAZ,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,iBACNE,MAAOsP,EAAOoW,cACd3kB,YAAa,iDACbT,KAAK,gBACLF,QAAU6P,EAAQyV,eAAiB3V,EAAO2V,gBACvC1V,GAAgB8sB,EAAYvvB,MAAZ,oBAEnBlN,YAAc4P,EAAQyV,eAAiB3V,EAAO2V,gBAC3C1V,GAAgB8sB,EAAYvvB,MAAZ,oBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBAKzB,kBAACxQ,EAAD,CACQI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACnC3V,GAAgB8sB,EAAYvvB,MAAZ,gBAEnBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACvC3V,GAAgB8sB,EAAYvvB,MAAZ,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACxQ,EAAD,CACCI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACrC5V,GAAgB8sB,EAAYvvB,MAAZ,kBAEnBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cACzC5V,GAAgB8sB,EAAYvvB,MAAZ,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACzC7V,GAAgB8sB,EAAYvvB,MAAZ,sBAEnBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC7C7V,GAAgB8sB,EAAYvvB,MAAZ,sBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC3C9V,GAAgB8sB,EAAYvvB,MAAZ,wBAEnBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC/C9V,GAAgB8sB,EAAYvvB,MAAZ,wBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASA,EACTxe,KAAMA,IAGN,yBAAK5E,MAAO,CACX0V,UAAU,UAGX,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASqD,EACT7hB,KAAM4hB,KAKW,kBAAC,GAAD,CACIvI,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SC9U1CpC,GAAwBC,KAAxBD,OAyQO4Z,IAzQiB3Z,KAAhBC,YACG2P,IAAX9B,OAOe,SAAC5V,GAAkB,IAAD,EACUpG,EAAe,GAAI,iBAD7B,mBAC9ByuB,EAD8B,KACdC,EADc,OAEc1uB,EAAe,GAAI,eAFjC,mBAE9B2uB,EAF8B,KAEZC,EAFY,OAGOjrB,oBAAS,GAHhB,mBAG9BiqB,EAH8B,KAGdC,EAHc,OAIIlqB,mBAAS,IAJb,mBAI9BmqB,EAJ8B,KAIhBU,EAJgB,KAQ/B57B,EAASurB,eACT9X,EAAUC,eACVogB,EAAQ9zB,EAAM,GAgDpB,OA9CA+M,qBAAU,YAEc,uCAAG,4BAAAE,EAAA,sEACS6uB,EAAqB,CAC7C/7B,WAAY,CACRE,aAAc,CACVoB,GAAIyyB,MAJG,QACbmI,EADa,UAWf37B,QAAQC,IAAI,eAAe07B,GAE3BL,EAAiBK,IAbF,2CAAH,qDAiBpB7F,KAED,CAACtC,IAEJ/mB,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sEACb+uB,EAAuB,CACzBj8B,WAAY,CACRE,aAAc,CACVoB,GAAIyyB,MAJG,2CAAH,qDAUpBoI,KAED,CAACpI,IAKJxzB,QAAQC,IAAI,mBAAoBw7B,GAEhCz7B,QAAQC,IAAI,cAAeP,GAIvB,yBAAKd,UAAU,wBACX,yBAAKA,UAAU,iCACX,iDAIC28B,EAAevvB,MAAQ4uB,GAAkBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAC1E,oCACI,kBAAC,GAAD,CACIglB,sBAAuBoW,EACvBnW,yBAA0BoW,EAC1BC,cAAeA,EACfU,iBAAkBA,IAEtB,kBAAC,IAAD,CACI3sB,QAAS,kBAAMgsB,GAAkB,IACjCz8B,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAHV,UAUZ,kBAAC,KAAD,CACI0C,UAAW,CAAEzP,KAAM,GACnB7N,QAAS2sB,EAAexvB,WACvBwvB,EAAevvB,MAAQ4uB,KAAmBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,IAC3E,kBAAC,KAAD,CAAO4B,YAAY,sBAAsBO,MAAOmR,KAAMK,yBAGzDsoB,EAAevvB,MAAQ4uB,GAAkBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAC1E,yBAAKV,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACKg8B,EAAa,MAElB,4BACKA,EAAa,aAEjBA,EAAa,KACV,mCAEI,8BACKA,EAAa,SAW1C,yBAAKh8B,UAAU,iCACX,wCAIJ,yBAAKA,UAAU,8BACV68B,EAAiB1vB,WAAa,kBAACoe,GAAD,MAE9BsR,EAAiBzvB,QAAUyvB,EAAiB76B,KAAKtB,OAAS,IACvD,yBAAKN,MAAO,CACR0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,mBAAmBO,MAAOmR,KAAMK,0BAI1DwoB,EAAiBzvB,MAAQyvB,EAAiB76B,MAAQ66B,EAAiB76B,KAAKtB,OAAS,GAC9E,oCACI,kBAAC,KAAD,CACIN,MAAO,CACHmtB,WAAY,OACZltB,aAAc,iBACdmtB,SAAU,SACVvb,UAAW,+FAOf8G,KAAK,QAEL8D,WAAYggB,EAAiB76B,KAC7B8a,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACHoV,MAAO,qBAMnB,kBAAC,GAAD,CACIvS,MAAM,GACNga,UAAU,QACV5a,IAAI,KACJ2P,MAAO,OAEPhS,UAAU,uBAEVkd,OAAQ,SAACza,EAAO0a,GAAR,OACJ,oCACI,yBACIpN,QAAS,WACLwE,EAAQzQ,KAAR,uBAA6BqZ,EAAOhb,MAExCiJ,IAAK3I,EAAOU,IAAI,YAAY/C,MAAO,CAC/B6T,OAAQ,OACRjC,MAAO,OACP0Y,UAAW,UACXrqB,aAAc,MACd2V,OAAQ,iBAU5B,kBAAC,GAAD,CACI/S,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACJ,oCACI,wBACIpN,QAAS,WACLwE,EAAQzQ,KAAR,uBAA6BqZ,EAAOhb,MAExC/B,MAAO,CACH0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGX/R,OASjB,kBAAC,GAAD,CACIhB,MAAM,cACNga,UAAU,aACV5a,IAAI,KACJrC,UAAU,yBAKd,kBAAC,GAAD,CACIiD,MAAM,QACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,yBAKd,kBAAC,GAAD,CACIiD,MAAM,YACNga,UAAU,YACV5a,IAAI,KACJrC,UAAU,yBAKd,kBAAC,GAAD,CACIiD,MAAM,UACNga,UAAU,UACV5a,IAAI,KACJrC,UAAU,+BClI3BijB,G,6MAjJbhW,MAAQ,CACNjI,KAAM,GACNke,cAAc,EACdC,WAAY,GACZC,gBAAiB,EACjBC,eAAgB,I,EAKlBC,YAAc,SAAAC,GAAe,IAAD,EACH,EAAKjP,OAE5BkP,EAH0B,EACnBA,SADmB,EACXxe,KACQgb,QAAO,SAAA9X,GAAG,OAAIA,IAAQqb,O,EAI/CE,UAAY,WACV,EAAKC,SAAS,CAAER,cAAc,IAAQ,kBAAM,EAAKtK,MAAM+K,Y,EAGzDC,kBAAoB,SAAA9T,GAClB,EAAK4T,SAAS,CAAEP,WAAYrT,EAAEzE,OAAO9L,S,EAGvCskB,mBAAqB,WACjBziB,QAAQC,IAAI,qBAAqB,EAAKiT,OADf,IAEjB6O,EAAe,EAAKlW,MAApBkW,WAFiB,EAGD,EAAK7O,MAAvBtP,EAHmB,EAGnBA,KAAMwe,EAHa,EAGbA,QACRL,GAAcne,IAAsC,IAA9BA,EAAKnD,QAAQshB,KACrCne,EAAI,uBAAOA,GAAP,CAAame,KAEnBK,EAAQxe,GACR,EAAK0e,SAAS,CACZR,cAAc,EACdC,WAAY,M,EAIhBW,sBAAwB,SAAAhU,GACtB,EAAK4T,SAAS,CAAEL,eAAgBvT,EAAEzE,OAAO9L,QACzC6B,QAAQC,IAAI,WAAWyO,EAAEzE,OAAO9L,Q,EAGlCwkB,uBAAyB,WACvB,EAAKL,UAAS,YAAwC,EAArCN,eAAqC,EAArBC,eAC/B,MAAO,CACLD,gBAAiB,EACjBC,eAAgB,OAIpB,IAAMW,EAAO,aAAO,EAAK1P,MAAMtP,MAC/Bgf,EAAQZ,gBAAkBC,eAC1B,EAAK/O,MAAMkP,QAAQQ,I,EAGrBC,aAAe,SAAArL,GACb,EAAKA,MAAQA,G,EAGfsL,iBAAmB,SAAAtL,GACjB,EAAKuL,UAAYvL,G,yEAKT,IAAD,SAC8D9M,KAAKmB,MAAlEiW,EADD,EACCA,aAAcC,EADf,EACeA,WAAYC,EAD3B,EAC2BA,eAAgBC,EAD3C,EAC2CA,eAD3C,EAEsBvX,KAAKwI,MAA1BhU,EAFD,EAECA,YAAY0E,EAFb,EAEaA,KAEpB,OACE,oCACGA,GAAQA,EAAKtE,OAAS,GAAKsE,EAAK/D,KAAI,SAACiH,EAAKuO,GACzC,GAAI2M,IAAmB3M,EACrB,OACE,kBAAC,IAAD,CACE2N,IAAK,EAAKF,iBACV7hB,IAAK6F,EACL6Q,KAAK,QACLzY,YAAaA,EACbN,UAAU,YACVT,MAAO8jB,EACP5jB,SAAU,EAAKqkB,sBACfO,OAAQ,EAAKN,uBACbO,aAAc,EAAKP,yBAKzB,IAAMQ,EAAYrc,EAAIxH,OAAS,GAEzB8jB,EACJ,kBAAC,KAAD,CACExkB,UAAU,WACVqC,IAAK6F,EACLuc,SAAoB,IAAVhO,EACViO,QAAS,kBAAM,EAAKpB,YAAYpb,KAEhC,0BACEyc,cAAe,SAAA7U,GACC,IAAV2G,IACF,EAAKiN,SAAS,CAAEN,eAAgB3M,EAAO4M,eAAgBnb,IAAO,WAC5D,EAAKic,UAAUR,WAEjB7T,EAAE8U,oBAILL,EAAS,UAAMrc,EAAItG,MAAM,EAAG,IAAnB,OAA8BsG,IAI9C,OAAOqc,EACL,kBAAC,KAAD,CAASthB,MAAOiF,EAAK7F,IAAK6F,GACvBsc,GAGHA,KAGHtB,GACC,kBAAC,IAAD,CACA9iB,MAAO,CACLyP,OAAQ,UAERuU,IAAKtY,KAAKmY,aACV3kB,KAAK,OACLyZ,KAAK,QACL/Y,UAAU,YACVT,MAAO4jB,EACP1jB,SAAUqM,KAAK8X,kBACfS,OAAQvY,KAAK+X,mBACbS,aAAcxY,KAAK+X,sBAGrBX,GACA,kBAAC,KAAD,CAAKljB,UAAU,yBAAyB+P,QAASjE,KAAK2X,WACpD,kBAACoB,GAAA,EAAD,MADF,mB,GAzIaC,IAAMC,WC+BvB5W,GAAmBC,MAAaC,MAAM,IAItC6P,GAA0B,SAAC5I,GAChCD,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,mBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAKvCqM,GAAwB,SAACvM,GAC9BD,KAAavI,MAAM,CAClBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAQvChH,GAAgB,CACrB3O,KAAM,GACNmlB,OAAQ,GACR1iB,YAAa,GACb2iB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1iB,MAAO,GACPjC,IAAK,GACL6B,MAAO,GACP+iB,aAAc,IA4tBAC,IAztBIvO,KAAXD,OAUe,SAAC,GAG4C,IAFhEyO,EAE+D,EAF/DA,sBACAC,EAC+D,EAD/DA,yBACAG,EAA+D,EAA/DA,mBAA+D,KAA3CD,gBAA2C,EAA1BD,aAEW1X,EAAe,GAAI,uBAFJ,mBAE3D6X,EAF2D,KAEzCC,EAFyC,OAGD9X,EAAe,GAAI,sBAHlB,gCAIaA,EAAe,GAAI,8BAJhC,mBAI3B8Y,GAJ2B,aAKY9Y,EAAe,GAAI,2BAL/B,mBAK1B+Y,GAL0B,aAMoB/Y,EAAe,GAAI,+BANvC,gCAOgBA,EAAe,GAAI,8BAPnC,mBAOxBgZ,GAPwB,aAQgBhZ,EAAe,GAAI,6BARnC,mBAQxBiZ,GARwB,aAUpCtV,oBAAS,GAV2B,mBAU3DuM,EAV2D,KAUlDC,EAVkD,OAWlBxM,oBAAS,GAXS,mBAWzC6M,GAXyC,aAYJ7M,oBAAS,GAZL,gCAaJA,oBAAS,IAbL,mBAa3D4M,EAb2D,KAalC+M,EAbkC,OAcV3Z,oBAAS,GAdC,mBAc3D0M,EAd2D,KAcrCkN,EAdqC,OAelB5Z,mBAAS,IAfS,mBAe3DuU,EAf2D,KAezCC,EAfyC,QAgBlCxU,mBAAS,IAhByB,qBAgBjD0U,IAhBiD,gBAiBnB1U,oBAAS,GAjBU,qBAiB3D2U,GAjB2D,gBAkBhC3U,mBAAS,KAlBuB,qBAkB3D6U,GAlB2D,gBAmB3C7U,mBAAS,KAnBkC,qBAmB3D7M,GAnB2D,MAmBtDwe,GAnBsD,SAoBvC3R,mBAAS,IApB8B,qBAoB3D+U,GApB2D,MAoBpDC,GApBoD,SAqBlChV,oBAAS,GArByB,qBAqB3D2M,GArB2D,MAqBjDF,GArBiD,SAsBvBzM,mBAAS,IAtBc,qBAsBxDiV,GAtBwD,MAsB1CC,GAtB0C,SAuBpBlV,mBAAS,IAvBW,qCAyBN3D,EAAe,GAAI,uBAzBb,qBAyBxD+d,GAzBwD,MAyBnCC,GAzBmC,MA4BlEre,qBAAU,YAEoB,uCAAG,sBAAAE,EAAA,sEACeme,GAA0B,CAC3DrrB,WAAY,CACRE,aAAc,CACVoB,GAAI2jB,EAAmB3jB,OAJb,yDAAH,qDAUvByqB,KAED,CAAC9G,IAGP1kB,QAAQC,IAAI,kBAAkB4qB,IAC9B7qB,QAAQC,IAAI,0BAA0Bmd,IAEtC3Q,qBAAU,WACT,GAAIoe,GAAoB7e,MAAQ6e,GAAoBjqB,MAAQxB,OAAOC,KAAKwrB,GAAoBjqB,MAAMtB,OAAS,EAAG,CAE7G,IAAM8K,EAASygB,GAAoBjqB,KAAKa,MACpCukB,EAAY,GAMhB,GAJI5b,GAAUA,EAAO9K,OAAS,IAC7B0mB,EAAY5b,GAGTygB,GAAoBjqB,KAAKS,OAASwpB,GAAoBjqB,KAAKS,MAAzB,GACtB+I,EAAO4V,MAAK,SAAA3f,GAAI,OAAIA,EAAKU,KAAO8pB,GAAoBjqB,KAAKS,MAAzB,QAE9C2kB,EAAS,CAAI6E,GAAoBjqB,KAAKS,OAA7B,oBAAuC2kB,KAGjDL,GAAgBkF,GAAoBjqB,KAAKS,MAAzB,IAIhB6b,GAAY8I,MAGZ,CAAC6E,GAAoBjqB,OAGxB6L,qBAAU,WAEL2Q,IAAYA,GAAS,IAAMA,GAAS9d,OAAS,GAE5ComB,KAAiBtI,GAAS,GAAGrc,KAChC4kB,GAAgBvI,GAAS,GAAGrc,IAC5BklB,GAAyB7I,GAAS,OAKlC,CAACA,KAMJ,IAAM5P,GAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAf,EAAA,yDAEd2Z,EAAYlJ,GAAWA,GAASvd,KAAI,SAAA4B,GACzC,OAAOA,EAAMV,MACT,IAECie,EAAW,IAAIC,UAEZE,OAAO,OAAQ1R,EAAOhP,KAAK8nB,QACpCvH,EAASG,OAAO,cAAe1R,EAAOvM,aACtC8d,EAASG,OAAO,QAAS/T,KAAKC,UAAUib,IACxCtH,EAASG,OAAO,QAASuG,IAAgBY,EAAU,GAAKA,EAAU,GAAK,IACvEtH,EAASG,OAAO,SAAU6F,GAC1BhG,EAASG,OAAO,eAAgB1R,EAAO2W,cAGvCpkB,QAAQC,IAAI,qBAAqBykB,GACjC1kB,QAAQC,IAAI,YAAYqmB,KAGpB5B,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,GApB/C,oBAqBbknB,EAAyB,GAE5BF,GAAaA,EAAUhnB,OAAS,GAClCgnB,EAAU/jB,SAAQ,SAAA4jB,GACdzB,GAAsBA,EAAkB,eACtCA,EAAkB,MAAU3kB,SAASomB,IACxCK,EAAuB9jB,KAAKyjB,SAOnBK,EAAuB,IAAMA,EAAuBlnB,OAAS,GAlCvD,kCAmCAsmB,EAAqC,CACvCnmB,WAAY,CACRE,aAAc,CACVymB,WAAY,eACZ3gB,OAAQif,EAAmB3jB,KAGnC2D,KAAM,CACFjD,MAAO+kB,KA3CT,qCA+CDA,EAAuB,IAAMA,EAAuBlnB,OAAS,GA/C5D,kCAgDAumB,EAAmC,CACrCpmB,WAAY,CACRE,aAAc,CACVwmB,QAASK,EAAuB,GAAGzlB,GACnCqlB,WAAY,eACZ3gB,OAAQif,EAAmB3jB,OArDjC,yBA8DS6jB,EAAuB,CAC1CnlB,WAAY,CACRE,aAAc,CACVoB,GAAI2jB,EAAmB3jB,KAG/B2D,KAAM,CACFjG,KAAMgP,EAAOhP,MAAQgP,EAAOhP,KAAK8nB,OACjCrlB,YAAauM,EAAOvM,YACpBO,MAAO6kB,EACPjlB,MAAOqkB,IAAgBY,EAAU,GAAKA,EAAU,GAAK,GACrDllB,OAAQ4jB,EACRxjB,KAAM8jB,GACNxB,UAAWrW,EAAOqW,UAC9BE,gBAAiBvW,EAAOuW,gBACxBI,aAAc3W,EAAO2W,aACTF,SAAWtgB,IAAQA,GAAKtE,OAAS,EAAKsE,GAAKtD,KAAK,KAAO,GACvDmmB,GAAI,CACA3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACvCC,SAAWsB,IAAUA,GAAOlmB,OAAS,EAAKkmB,GAAOllB,KAAK,KAAO,GAC9C7B,KAAMgP,EAAOmW,QAAUnW,EAAOmW,OAAO2C,OACrCrlB,YAAauM,EAAOoW,kBApFlB,SA8Dd6C,EA9Dc,SA0F4B,OAA1BA,EAAepiB,QACpCwY,GAAwB,qBACxByH,GAAyB,GAoBzB7W,EAAQiZ,YAERzJ,GAAY,IACZyI,GAAgB,IAChBV,EAAoB,IACpBE,GAAY,KAGZ1E,KAGD/S,EAAQC,eAAc,GA3HF,4CAAH,wDAgITuY,GAAuB,uCAAG,WAAMnlB,GAAN,SAAA4L,EAAA,sEACtBmZ,EAAqC,CACvCrmB,WAAY,CACRE,aAAc,CACVwmB,QAASplB,EACTqlB,WAAY,eACZ3gB,OAAQif,EAAmB3jB,OANX,2CAAH,sDAcvBklB,GAAwB,uCAAG,WAAMxkB,GAAN,eAAAkL,EAAA,sEAEFoZ,EAAqC,CAC5DtmB,WAAY,CACRE,aAAc,CACVwmB,QAAS1kB,EAAMV,GACfqlB,WAAY,eACZ3gB,OAAQif,EAAmB3jB,OAPV,QAEvBslB,EAFuB,SAce,OAAxBA,EAAa/hB,OAC7BwY,GAAwB,qBAgBxB2D,GAAsB,mDA/BG,2CAAH,sDAkD3BqG,GAAe,SAACpY,GACrB6V,GAAyB,IAkEzB,6BACEa,GAAkB,kBAACsC,GAAA,EAAD,MAAsB,kBAACjE,GAAA,EAAD,MACzC,yBAAK7kB,UAAU,mBAAf,WAmCF,OA7BA6N,qBAAU,WAEH,GAAGiY,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,EAAE,CAChE,IAAMkoB,EAAU9C,EAAmBljB,MAAQkjB,EAAmBljB,KAEvE2jB,GAAYqC,MAGT,IAEF/a,qBAAU,WAEN,GAAGiY,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,EAAE,CAChE,IAAM4kB,EAAWQ,EAAmBR,UAAYQ,EAAmBR,SAAStkB,MAAM,KAElFI,QAAQC,IAAI,gBAAgBikB,GAE5B,IAAMC,EAAaO,EAAmB+B,IAAM/B,EAAmB+B,GAAnB,UAAqC/B,EAAmB+B,GAAnB,SAAkC7mB,MAAM,KACzHwiB,GAAQ8B,GAAY,IACpBuB,GAAUtB,GAAc,OAG9B,IAGLnkB,QAAQC,IAAI,qBAAqB2D,IACjC5D,QAAQC,IAAI,qBAAqBykB,GACjC1kB,QAAQC,IAAI,WAAWmd,IAGtB,kBAAC,IAAD,CACCtP,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAEKA,GAFL,GAGOsX,EAHP,GAISA,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,GAAK,CACrEykB,YAAaW,EAAkB,IAC5BA,EAAkB,GAAOZ,WACzBY,EAAkB,GAAOZ,UAC5BG,kBAAmBS,EAAkB,IAAWA,EAAkB,GAAOV,iBAAmBU,EAAkB,GAAOV,gBACrHJ,OAAQc,EAAkB,IAAUA,EAAkB,GAAOjmB,MAAQimB,EAAkB,GAAOjmB,KAC9FolB,cAAea,EAAkB,IAAUA,EAAkB,GAAOxjB,aAAewjB,EAAkB,GAAOxjB,gBAKhI,gBACA+M,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OAEAC,GANA,EAKAN,QALA,EAMAM,cACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCvP,MAAO,CACN2hB,IAAK,QAEN9e,MAAM,gBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACdhZ,QAAST,EACT0Z,SAAU,WAGX,kBAAChqB,EAAD,CACCI,MAAM,OACNE,MAAOsP,EAAOhP,KACdC,YAAa,kBACbD,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgBwW,EAAiBjZ,MAAjB,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgBwW,EAAiBjZ,MAAjB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,wFACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgBwW,EAAiBjZ,MAAjB,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgBwW,EAAiBjZ,MAAjB,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAIlB,kBAAC,GAAD,CACCpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACdhC,YAAa,mBACbT,KAAK,cACLF,QAAU6P,EAAQlN,aAAegN,EAAOhN,cACrCiN,GAAgBwW,EAAiBjZ,MAAjB,kBAEnBlN,YAAc4P,EAAQlN,aAAegN,EAAOhN,cACzCiN,GAAgBwW,EAAiBjZ,MAAjB,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,iBACNE,MAAOsP,EAAOoW,cACd3kB,YAAa,yEACbT,KAAK,gBACLF,QAAU6P,EAAQyV,eAAiB3V,EAAO2V,gBACvC1V,GAAgBwW,EAAiBjZ,MAAjB,oBAEnBlN,YAAc4P,EAAQyV,eAAiB3V,EAAO2V,gBAC3C1V,GAAgBwW,EAAiBjZ,MAAjB,oBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBAMlB,yBACCrP,MAAO,CACN0V,UAAW,UAQf,yBAAK9V,UAAU,gCAEYI,MAAO,CACH6a,aAAc,SAGlB,wBAAIjb,UAAU,mBAAd,WAQzB,yBACqCI,MAAO,CACHiW,QAAS,QAEbrW,UAAU,gCACTisB,GAAoB9e,WACjB,yBAAK/M,MAAO,CACRiW,QAAS,WAET,kBAAC,KAAD,OAGP4V,GAAoB7e,MACjB,oCACKoR,IAEGA,GAAS9d,OAAS,GAAK8d,GAASvd,KAAI,SAAC4B,EAAO4T,GACxC,OACI,yBAAKzW,UAAU,sCACX,yBACIA,UAAU,kDACV+P,QAAS,WACLgX,GAAgBlkB,EAAMV,IACtBklB,GAAyBxkB,KAG7B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACI4M,QAAS,YA3RlD,SAAC5N,GAExB,IAAMknB,EAAY7K,IAAYA,GAASwB,QAAO,SAAAnd,GAC1C,OAAOA,EAAMV,KAAOA,KAGxBmc,GAAY+K,GAsRwDC,CAAmBzmB,EAAMV,IACzBmlB,GAAwBzkB,EAAMV,KAIlCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,QAIHoE,KAAiBjkB,EAAMV,KAInB2kB,IAA0B,IAAVrQ,IAHjB,0BAAMzW,UAAU,4CACZ,kBAAC2iB,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACI1f,MAAO,iBAEP,yBACI8M,QAAS,WACLsO,GAAW,GACXoN,GAAwB,GACxBD,GAA2B,IAE/BxrB,UAAU,4CAIV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACZ,kBAAC6kB,GAAA,EAAD,WASzD,kBAAC5lB,EAAD,CACCI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACnC3V,GAAgBwW,EAAiBjZ,MAAjB,gBAEnBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACvC3V,GAAgBwW,EAAiBjZ,MAAjB,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACxQ,EAAD,CACCI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACrC5V,GAAgBwW,EAAiBjZ,MAAjB,kBAEnBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cACzC5V,GAAgBwW,EAAiBjZ,MAAjB,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACzC7V,GAAgBwW,EAAiBjZ,MAAjB,sBAEnBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC7C7V,GAAgBwW,EAAiBjZ,MAAjB,sBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC3C9V,GAAgBwW,EAAiBjZ,MAAjB,wBAEnBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC/C9V,GAAgBwW,EAAiBjZ,MAAjB,wBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASA,GACTxe,KAAMA,KAGN,yBAAK5E,MAAO,CACX0V,UAAU,UAGX,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASqD,GACT7hB,KAAM4hB,MAKP,kBAAC,GAAD,CACCvI,WAAYA,EACZD,QAASA,EACTE,YAAaA,GACbE,SAAUA,GACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,UCzvBvBpQ,GAAmBC,MAAaC,MAAM,IAatCwT,GAAwB,SAACvM,GAC9BD,KAAavI,MAAM,CAClBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAQvChH,GAAgB,CACrB3O,KAAM,GACNmlB,OAAQ,GACR1iB,YAAa,GACb2iB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1iB,MAAO,GACPjC,IAAK,GACL6B,MAAO,GACP+iB,aAAc,MAukBAC,IApkBIvO,KAAXD,OASe,SAAC,GAA+F,IAA7FyO,EAA4F,EAA5FA,sBAAuBC,EAAqE,EAArEA,yBAA0BC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,gBAA6B,EAElE3X,EAAe,GAAI,kBAAkB,QAF6B,mBAE9G6X,EAF8G,KAE5FC,EAF4F,OAGvFnU,oBAAS,GAH8E,mBAG9GuM,EAH8G,KAGrGC,EAHqG,OAIrFxM,oBAAS,GAJ4E,mBAI9G2M,EAJ8G,KAIpGF,EAJoG,OAKrEzM,oBAAS,GAL4D,mBAK5F6M,GAL4F,aAMvD7M,oBAAS,GAN8C,mBAMrFsU,GANqF,aAOvDtU,oBAAS,GAP8C,mBAO9G4M,EAP8G,KAOrF+M,EAPqF,OAQ7D3Z,oBAAS,GARoD,mBAQ9G0M,EAR8G,KAQxFkN,EARwF,OAS7E5Z,mBAAS,IAToE,mBAS9GiV,EAT8G,KAShGC,EATgG,OAUrElV,mBAAS,IAV4D,mBAU9GuU,EAV8G,KAU5FC,EAV4F,OAWrFxU,mBAAS,IAX4E,mBAWpG0U,GAXoG,aAYtE1U,oBAAS,GAZ6D,mBAY9G2U,GAZ8G,cAanF3U,mBAAS,KAb0E,qCAc9FA,mBAAS,KAdqF,qBAc9G7M,GAd8G,MAczGwe,GAdyG,SAe1F3R,mBAAS,IAfiF,qBAe9G+U,GAf8G,MAevGC,GAfuG,MAkB/GjY,GAAY,uCAAG,WAAOC,EAAaC,GAApB,yBAAAf,EAAA,6DAEd2Z,EAAYlJ,EAAWA,EAASvd,KAAI,SAAA4B,GACzC,OAAOA,EAAMV,MACT,GAECie,EAAW,IAAIC,SAEfwH,EAAK,CACV3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACxBC,SAAUsB,GAAOllB,KAAK,KACtB7B,KAAMgP,EAAOmW,OAAO2C,OACpBrlB,YAAauM,EAAOoW,eAGrB7E,EAASG,OAAO,OAAQ1R,EAAOhP,KAAK8nB,QACpCvH,EAASG,OAAO,cAAe1R,EAAOvM,aACtC8d,EAASG,OAAO,QAAS/T,KAAKC,UAAUib,IACxCtH,EAASG,OAAO,QAASuG,GAAgBY,EAAU,GAAKA,EAAU,GAAK,IACvEtH,EAASG,OAAO,SAAU6F,GAE1BhG,EAASG,OAAO,YAAa1R,EAAOqW,WACpC9E,EAASG,OAAO,eAAgB1R,EAAO2W,cACvCpF,EAASG,OAAO,kBAAmB1R,EAAOuW,iBAC1ChF,EAASG,OAAO,WAAY1R,EAAOyW,UAI7BoG,EAASlf,KAAKC,UAAUob,IACxB8D,EAAa,IAAItL,UACZE,OAAO,KAAKmL,GAIvBtL,EAASG,OAAO,KAAMoL,EAAWC,IAAI,OAKrCxqB,QAAQC,IAAI,qBAAZ,eACI+e,IAzCgB,UA+CS4F,EAAuB,CACnDlgB,KAAMsa,IAhDa,QA+Cd0H,EA/Cc,OAoDpB1mB,QAAQC,IAAI,sBAAsBymB,GAE9BA,GAAkBA,EAAe,IAAMA,EAAe,GAAGjoB,MAvH9ByV,EAwHN,2BAvH1BD,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,0BACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAqH1CmQ,GAAyB,GAEzBE,EAAgB,CAAC,eAEbiC,EAAe,GAFJ,CAGd3lB,GAAI2lB,EAAe,GAAf,KAA4B,GAChCzlB,IAAKylB,EAAe,GAAf,KAA4B,GACjCjoB,KAAMioB,EAAe,GAAf,MAA6B,GACnCxlB,YAAawlB,EAAe,GAAf,aAAoC,GACjDrlB,MAAOqlB,EAAe,GAAGrlB,MAAlB,UACFC,EAAM,SADJ,OAENolB,EAAe,GAAGrlB,MAAQqlB,EAAe,GAAGrlB,MAAME,UAAY,IAE7D,MAXY,oBAYVijB,KAEL9W,EAAQiZ,YAERzJ,EAAY,IACZyI,EAAgB,IAChBV,EAAoB,IACpBF,GAA2B,GAC3BI,EAAY,KAGZ1E,KAMD/S,EAAQC,eAAc,GAvFF,kCAjEU,IAACuG,IAiEX,OAAH,wDA4FlBlU,QAAQC,IAAI,mBAAmB0kB,GAG/BlY,qBAAU,WACT,IAAKkY,EAAgB,UAAe,CACnC,IAAMjZ,EAAQiZ,EAAgB,MAC9B,GAAIjZ,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAI3DF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACpCF,OAAOqO,OAAO/B,EAAK,OACnB,IACGnJ,SAAQ,SAACkoB,EAAKC,GACpB,GAAmB,kBAARD,EACVhK,GAAsBgK,QAElB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACvBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACZhK,GAAsBgK,aAQ1B,CAAC9F,IAMJ,IAKMmC,GAAe,SAACpY,GACrB6V,GAAyB,IAuEzB,6BACEa,GAAkB,kBAACsC,GAAA,EAAD,MAAsB,kBAACjE,GAAA,EAAD,MACzC,yBAAK7kB,UAAU,mBAAf,WAMF,OACC,kBAAC,IAAD,CACCkP,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OAEAC,GANA,EAKAN,QALA,EAMAM,cACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCvP,MAAO,CACN2hB,IAAK,QAEN9e,MAAM,mBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACdhZ,QAAST,EACT0Z,SAAU,WAGX,kBAAChqB,EAAD,CACCI,MAAM,OACNE,MAAOsP,EAAOhP,KACdC,YAAa,kBACbD,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgBwW,EAAiBjZ,MAAjB,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgBwW,EAAiBjZ,MAAjB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,wFACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgBwW,EAAiBjZ,MAAjB,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgBwW,EAAiBjZ,MAAjB,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAIlB,kBAAC,GAAD,CACCpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACdhC,YAAa,mBACbT,KAAK,cACLF,QAAU6P,EAAQlN,aAAegN,EAAOhN,cACrCiN,GAAgBwW,EAAiBjZ,MAAjB,kBAEnBlN,YAAc4P,EAAQlN,aAAegN,EAAOhN,cACzCiN,GAAgBwW,EAAiBjZ,MAAjB,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,iBACNE,MAAOsP,EAAOoW,cACd3kB,YAAa,yEACbT,KAAK,gBACLF,QAAU6P,EAAQyV,eAAiB3V,EAAO2V,gBACvC1V,GAAgBwW,EAAiBjZ,MAAjB,oBAEnBlN,YAAc4P,EAAQyV,eAAiB3V,EAAO2V,gBAC3C1V,GAAgBwW,EAAiBjZ,MAAjB,oBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBAuBlB,yBACCrP,MAAO,CACN0V,UAAW,UA8Bb,yBACC1V,MAAO,CACN0V,UAAW,UAKb,yBAAK9V,UAAU,gCAAgCI,MAAO,CACrD6a,aAAc,SAEd,wBAAIjb,UAAU,mBAAd,UACA,kBAAC,KAAD,CACCkW,UAAU,OAAOjT,MAAO,uFACxB,uBAAGuT,KAAK,OACP,kBAAC2S,GAAA,EAAD,SAIH,yBAAKnpB,UAAU,gCACbwe,GAEAA,EAAS9d,OAAS,GAAK8d,EAASvd,KAAI,SAAC4B,EAAO4T,GAC3C,OACC,yBAAKzW,UAAU,sCACd,yBACCA,UAAU,kDACV+P,QAAS,kBAAMgX,EAAgBlkB,EAAMV,MAErC,yBAAKiJ,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGnC,0BACC4M,QAAS,kBA3PM,SAAC5N,GAE3B,IAAMknB,EAAY7K,GAAYA,EAASwB,QAAO,SAAAnd,GAC7C,OAAOA,EAAMV,KAAOA,KAGrBmc,EAAY+K,GAqPcC,CAAmBzmB,EAAMV,KACxCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,QAIAoE,IAAiBjkB,EAAMV,KAInB2kB,GAA0B,IAAVrQ,IAHpB,0BAAMzW,UAAU,4CACf,kBAAC2iB,GAAA,EAAD,WAcN,kBAAC,KAAD,CACC1f,MAAO,iBAEP,yBACC8M,QAAS,WACRsO,GAAW,GACXoN,GAAwB,GACxBD,GAA2B,IAE5BxrB,UAAU,4CAIV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACf,kBAAC6kB,GAAA,EAAD,UAOJ,kBAAC5lB,EAAD,CACCI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACnC3V,GAAgBwW,EAAiBjZ,MAAjB,gBAEnBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACvC3V,GAAgBwW,EAAiBjZ,MAAjB,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACxQ,EAAD,CACCI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACrC5V,GAAgBwW,EAAiBjZ,MAAjB,kBAEnBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cACzC5V,GAAgBwW,EAAiBjZ,MAAjB,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACzC7V,GAAgBwW,EAAiBjZ,MAAjB,sBAEnBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC7C7V,GAAgBwW,EAAiBjZ,MAAjB,sBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC3C9V,GAAgBwW,EAAiBjZ,MAAjB,wBAEnBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC/C9V,GAAgBwW,EAAiBjZ,MAAjB,wBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASA,GACTxe,KAAMA,KAGN,yBAAK5E,MAAO,CACX0V,UAAU,UAGX,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASqD,GACT7hB,KAAM4hB,MAKP,kBAAC,GAAD,CACCvI,WAAYA,EACZD,QAASA,EACTE,YAAaA,EACbE,SAAUA,EACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,UCtnBrBpC,GAAwBC,KAAxBD,OACA+N,IADwB9N,KAAhBC,YACGpd,IAAXirB,QA4BFC,GAAU,SAAC,GAAoD,IAAnDnoB,EAAkD,EAAlDA,KAAM6jB,EAA4C,EAA5CA,gBAAiBtR,EAA2B,EAA3BA,QAA2B,EACnC1C,oBAAS,GAD0B,mBACzDuM,EADyD,KACjDC,EADiD,OAEPxM,oBAAS,GAFF,mBAEzDuY,EAFyD,KAEnCC,EAFmC,OAGPnc,EAAe,GAAI,sBAHZ,mBAGpCoc,GAHoC,WAOxDC,EAAoB,uCAAG,WAAOpoB,GAAP,iBAAA4L,EAAA,sEACKuc,EAA0B,CACxDzpB,WAAY,CACVE,aAAc,CACZoB,SAJqB,QACrBqoB,EADqB,SAUsB,OAA7BA,EAAkB9kB,SA1Cb4P,EA2CJ,0BA1C5BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,sBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAwCnCiV,EAAmBzoB,EAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAKU,KAAOA,KACzD0jB,EAAgB4E,IAbc,iCAhCH,IAACnV,IAgCE,OAAH,sDAkB5B,OACI,oCACA,kBAAC,KAAD,CAMAyD,KAAK,QAEL8D,WAAY7a,GAER,kBAAC,GAAD,CACFiB,MAAM,GACLga,UAAU,QACT5a,IAAI,KACJ2P,MAAO,OAERhS,UAAU,uBAETkd,OAAQ,SAACza,EAAM0a,GAAP,OACJ,oCACA,yBAAK/R,IAAK3I,EACPsN,QAAS,WACRwE,EAAQzQ,KAAR,gCAAsCqZ,EAAOhb,KAE7CkoB,EAAyBlN,IAE7Bha,IAAI,YACJ/C,MAAO,CACH6T,OAAQ,OACRjC,MAAO,OACP0Y,UAAW,UACXrqB,aAAa,MACb2V,OAAQ,iBAKlB,kBAAC,GAAD,CACC/S,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACP,oCAEE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,gCAAsCqZ,EAAOhb,KAE7CkoB,EAAyBlN,IAE3B/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OA0BT,kBAAC,GAAD,CACGhB,MAAM,UACNga,UAAU,eACV5a,IAAI,KACJrC,UAAU,yBAgCb,kBAAC,GAAD,CAEAA,UAAU,uBACRiD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGvC,KAAK,MACP,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,iBAChC,0BAAMjD,UAAU,WAAW+P,QAAS,WAClCsO,GAAW,GACXgM,EAAyBlN,KAE3B,kBAACyN,GAAA,EAAD,SAOC,kBAAC,KAAD,CAEA7H,UAAW,kBAAMwH,EAAqBpN,EAAOhb,KAC7Cc,MAAM,qBAAgBkf,OAAO,MAAMa,WAAW,MAEnD,0BACGhjB,UAAU,4BAEV,kBAAC4iB,GAAA,EAAD,aAWRwH,GAA2B,kBAAC,GAAD,CAC5BvE,gBAAiBA,EACjBD,aAAc5jB,EACd2jB,yBAA0BtH,EAC1BqH,sBAAuBtH,EACvB0H,mBAAoBsE,MA0ITU,iBA/HM,SAAC,GAAsB,IAArBvW,EAAoB,EAApBA,QAAoB,EAEQrG,EAAe,GAAI,oBAF3B,mBAElC6c,EAFkC,KAEnBC,EAFmB,OAGFnZ,mBAAS,IAHP,mBAGlC+T,EAHkC,KAGrBC,EAHqB,KAMzChY,qBAAU,YACU,uCAAG,4BAAAE,EAAA,sEACKid,EAAwB,CAChDnqB,WAAY,CACVC,OAAQ,CACNmqB,eAAe,EACfC,mBAAmB,MALJ,OACdC,EADc,OAUpBtF,EAAgBsF,GAVI,2CAAH,qDAYnBC,KACC,IApBuC,MAwBgBvZ,oBAAS,GAxBzB,mBAwBlC6T,EAxBkC,KAwBZC,EAxBY,KAkD1C,OAFCvkB,QAAQC,IAAI,mBAAoB0pB,GAGhC,oCAIE,yBAAK/qB,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,qBAKA,kBAAC,GAAD,CACEqrB,aAAa,EACbrrB,UAAU,qBACZM,YAAY,6BACZquB,SAAU,SAAApvB,GAAK,OA/BF,SAACA,GACpB,GAAGwrB,EAAc/oB,KAAKtB,OAAS,EAAG,CAChC,IAAM+pB,EAAkBM,EAAc/oB,KAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBACjG+M,EAAgB4E,IA4BOa,CAAa/rB,OAG9B,kBAAC,IAAD,CAEFS,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJtC,YAUA,yBAAK3lB,UAAU,uCAWxB,yBAAKA,UAAU,uCACT+qB,EAAc3d,MAAQwY,EAAallB,OAAS,GAAK,kBAAC,GAAD,CAClD6T,QAASA,EACTsR,gBAAiBA,EACjB7jB,KAAM4jB,IACLmF,EAAc5d,WAAa,kBAACoe,GAAD,MAE3BR,EAAc3d,QAAUwY,EAAallB,OAAS,IACpD,yBAAKN,MAAO,CACX0V,UAAW,SAEX,kBAAC,GAAD,CAAO7S,MAAM,gCAOR8nB,EAAc3d,MACb,kBAAC+vC,GAAD,CACAz3B,sBAAuBA,EACvBC,yBAA0BA,EAC1BC,aAAcA,EACdC,gBAAiBA,QCzUrB1X,GAAmBC,MAAaC,MAAM,IAItC6P,GAA0B,SAAC5I,GAChCD,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,mBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAKvCqM,GAAwB,SAACvM,GAC9BD,KAAavI,MAAM,CAClBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAQvChH,GAAgB,CACrB3O,KAAM,GACNmlB,OAAQ,GACR1iB,YAAa,GACb2iB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,GACZ1iB,MAAO,GACPjC,IAAK,GACL6B,MAAO,GACP+iB,aAAc,IA4sBAC,IAzsBIvO,KAAXD,OASe,SAAC,GAGmC,IAFvDyO,EAEsD,EAFtDA,sBACAC,EACsD,EADtDA,yBACAG,EAAsD,EAAtDA,mBAAoBiG,EAAkC,EAAlCA,sBAAkC,EAEN7d,EAAe,GAAI,sBAFb,mBAElD6X,EAFkD,KAEhCC,EAFgC,OAGQ9X,EAAe,GAAI,sBAH3B,gCAIsBA,EAAe,GAAI,8BAJzC,mBAIlB8Y,GAJkB,aAKqB9Y,EAAe,GAAI,2BALxC,mBAKjB+Y,GALiB,aAM6B/Y,EAAe,GAAI,+BANhD,gCAOyBA,EAAe,GAAI,8BAP5C,mBAOfgZ,GAPe,aAQyBhZ,EAAe,GAAI,6BAR5C,mBAQfiZ,GARe,aAU3BtV,oBAAS,GAVkB,mBAUlDuM,EAVkD,KAUzCC,EAVyC,OAWTxM,oBAAS,GAXA,mBAWhC6M,GAXgC,aAYK7M,oBAAS,GAZd,gCAaKA,oBAAS,IAbd,mBAalD4M,EAbkD,KAazB+M,EAbyB,OAcD3Z,oBAAS,GAdR,mBAclD0M,EAdkD,KAc5BkN,EAd4B,OAeT5Z,mBAAS,IAfA,mBAelDuU,EAfkD,cAgBzBvU,mBAAS,KAhBgB,qBAgBxC0U,IAhBwC,gBAiBV1U,oBAAS,GAjBC,qBAiBlD2U,GAjBkD,gBAkBvB3U,mBAAS,KAlBc,qBAkBlD6U,GAlBkD,gBAmBlC7U,mBAAS,KAnByB,qBAmBlD7M,GAnBkD,MAmB7Cwe,GAnB6C,SAoB9B3R,mBAAS,IApBqB,qBAoBlD+U,GApBkD,MAoB3CC,GApB2C,SAqBzBhV,oBAAS,GArBgB,qBAqBlD2M,GArBkD,MAqBxCF,GArBwC,SAsBdzM,mBAAS,IAtBK,qBAsB/CiV,GAtB+C,MAsBjCC,GAtBiC,SAuBXlV,mBAAS,IAvBE,qCAyBG3D,EAAe,GAAI,uBAzBtB,qBAyB/C+d,GAzB+C,MAyB1BC,GAzB0B,MA4BzDre,qBAAU,YAEoB,uCAAG,sBAAAE,EAAA,sEACeme,GAA0B,CAC3DrrB,WAAY,CACRE,aAAc,CACVoB,GAAI2jB,EAAmB3jB,OAJb,yDAAH,qDAUvByqB,KAED,CAAC9G,IAGP1kB,QAAQC,IAAI,kBAAkB4qB,IAC9B7qB,QAAQC,IAAI,0BAA0Bmd,IAEtC3Q,qBAAU,WACT,GAAIoe,GAAoB7e,MAAQ6e,GAAoBjqB,MAAQxB,OAAOC,KAAKwrB,GAAoBjqB,MAAMtB,OAAS,EAAG,CAE7G,IAAM8K,EAASygB,GAAoBjqB,KAAKa,MACpCukB,EAAY,GAMhB,GAJI5b,GAAUA,EAAO9K,OAAS,IAC7B0mB,EAAY5b,GAGTygB,GAAoBjqB,KAAKS,OAASwpB,GAAoBjqB,KAAKS,MAAzB,GACtB+I,EAAO4V,MAAK,SAAA3f,GAAI,OAAIA,EAAKU,KAAO8pB,GAAoBjqB,KAAKS,MAAzB,QAE9C2kB,EAAS,CAAI6E,GAAoBjqB,KAAKS,OAA7B,oBAAuC2kB,KAGjDL,GAAgBkF,GAAoBjqB,KAAKS,MAAzB,IAIhB6b,GAAY8I,MAGZ,CAAC6E,GAAoBjqB,OAGxB6L,qBAAU,WAEL2Q,IAAYA,GAAS,IAAMA,GAAS9d,OAAS,GAE5ComB,KAAiBtI,GAAS,GAAGrc,KAChC4kB,GAAgBvI,GAAS,GAAGrc,IAC5BklB,GAAyB7I,GAAS,OAKlC,CAACA,KAMJ,IAAM5P,GAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAf,EAAA,yDAEd2Z,EAAYlJ,GAAWA,GAASvd,KAAI,SAAA4B,GACzC,OAAOA,EAAMV,MACT,IAECie,EAAW,IAAIC,UAEZE,OAAO,OAAQ1R,EAAOhP,KAAK8nB,QACpCvH,EAASG,OAAO,cAAe1R,EAAOvM,aACtC8d,EAASG,OAAO,QAAS/T,KAAKC,UAAUib,IACxCtH,EAASG,OAAO,QAASuG,IAAgBY,EAAU,GAAKA,EAAU,GAAK,IACvEtH,EAASG,OAAO,SAAU6F,GAC1BhG,EAASG,OAAO,eAAgB1R,EAAO2W,cAGvCpkB,QAAQC,IAAI,qBAAqBykB,GACjC1kB,QAAQC,IAAI,YAAYqmB,KAGpB5B,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,GApB/C,oBAqBbknB,EAAyB,GAE5BF,GAAaA,EAAUhnB,OAAS,GAClCgnB,EAAU/jB,SAAQ,SAAA4jB,GACdzB,GAAsBA,EAAkB,eACtCA,EAAkB,MAAU3kB,SAASomB,IACxCK,EAAuB9jB,KAAKyjB,SAOnBK,EAAuB,IAAMA,EAAuBlnB,OAAS,GAlCvD,kCAmCAsmB,EAAqC,CACvCnmB,WAAY,CACRE,aAAc,CACVymB,WAAY,eACZ3gB,OAAQif,EAAmB3jB,KAGnC2D,KAAM,CACFjD,MAAO+kB,KA3CT,qCA+CDA,EAAuB,IAAMA,EAAuBlnB,OAAS,GA/C5D,kCAgDAumB,EAAmC,CACrCpmB,WAAY,CACRE,aAAc,CACVwmB,QAASK,EAAuB,GAAGzlB,GACnCqlB,WAAY,eACZ3gB,OAAQif,EAAmB3jB,OArDjC,yBA8DS6jB,EAAuB,CAC1CnlB,WAAY,CACRE,aAAc,CACVoB,GAAI2jB,EAAmB3jB,KAG/B2D,KAAM,CACFjG,KAAMgP,EAAOhP,MAAQgP,EAAOhP,KAAK8nB,OACjCrlB,YAAauM,EAAOvM,YACpBO,MAAO6kB,EACPjlB,MAAOqkB,IAAgBY,EAAU,GAAKA,EAAU,GAAK,GACrDllB,OAAQ4jB,EACRxjB,KAAM8jB,GACNxB,UAAWrW,EAAOqW,UAC9BE,gBAAiBvW,EAAOuW,gBACxBI,aAAc3W,EAAO2W,aACTF,SAAWtgB,IAAQA,GAAKtE,OAAS,EAAKsE,GAAKtD,KAAK,KAAO,GACvDmmB,GAAI,CACA3C,UAAWrW,EAAOsW,YAClBC,gBAAiBvW,EAAOwW,kBACvCC,SAAWsB,IAAUA,GAAOlmB,OAAS,EAAKkmB,GAAOllB,KAAK,KAAO,GAC9C7B,KAAMgP,EAAOmW,QAAUnW,EAAOmW,OAAO2C,OACrCrlB,YAAauM,EAAOoW,kBApFlB,SA8Dd6C,EA9Dc,SA0F4B,OAA1BA,EAAepiB,QACpCwY,GAAwB,qBACxByH,GAAyB,GAEzBoG,EAAsB,eAClBjG,EADiB,GAGjBgC,IAGJhZ,EAAQiZ,aAKRlG,KAGD/S,EAAQC,eAAc,GA5GF,4CAAH,wDAiHTuY,GAAuB,uCAAG,WAAMnlB,GAAN,SAAA4L,EAAA,sEACtBmZ,EAAqC,CACvCrmB,WAAY,CACRE,aAAc,CACVwmB,QAASplB,EACTqlB,WAAY,eACZ3gB,OAAQif,EAAmB3jB,OANX,2CAAH,sDAcvBklB,GAAwB,uCAAG,WAAMxkB,GAAN,eAAAkL,EAAA,sEAEFoZ,EAAqC,CAC5DtmB,WAAY,CACRE,aAAc,CACVwmB,QAAS1kB,EAAMV,GACfqlB,WAAY,eACZ3gB,OAAQif,EAAmB3jB,OAPV,QAEvBslB,EAFuB,SAce,OAAxBA,EAAa/hB,OAC7BwY,GAAwB,qBAgBxB2D,GAAsB,mDA/BG,2CAAH,sDAkD3BqG,GAAe,SAACpY,GACrB6V,GAAyB,IAkEzB,6BACEa,GAAkB,kBAACsC,GAAA,EAAD,MAAsB,kBAACjE,GAAA,EAAD,MACzC,yBAAK7kB,UAAU,mBAAf,WAmCF,OA7BA6N,qBAAU,WAEH,GAAGiY,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,EAAE,CAChE,IAAMkoB,EAAU9C,EAAmBljB,MAAQkjB,EAAmBljB,KAEvE2jB,GAAYqC,MAGT,IAEF/a,qBAAU,WAEN,GAAGiY,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,EAAE,CAChE,IAAM4kB,EAAWQ,EAAmBR,UAAYQ,EAAmBR,SAAStkB,MAAM,KAElFI,QAAQC,IAAI,gBAAgBikB,GAE5B,IAAMC,EAAaO,EAAmB+B,IAAM/B,EAAmB+B,GAAnB,UAAqC/B,EAAmB+B,GAAnB,SAAkC7mB,MAAM,KACzHwiB,GAAQ8B,GAAY,IACpBuB,GAAUtB,GAAc,OAG9B,IAGLnkB,QAAQC,IAAI,qBAAqB2D,IACjC5D,QAAQC,IAAI,qBAAqBykB,GACjC1kB,QAAQC,IAAI,WAAWmd,IAGtB,kBAAC,IAAD,CACCtP,SAAU,SAACL,EAAQC,GAAT,OAAqBF,GAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAEKA,GAFL,GAGOsX,EAHP,GAISA,GAAsBtlB,OAAOC,KAAKqlB,GAAoBplB,OAAS,GAAK,CACrEykB,YAAaW,EAAkB,IAC5BA,EAAkB,GAAOZ,WACzBY,EAAkB,GAAOZ,UAC5BG,kBAAmBS,EAAkB,IAAWA,EAAkB,GAAOV,iBAAmBU,EAAkB,GAAOV,gBACrHJ,OAAQc,EAAkB,IAAUA,EAAkB,GAAOjmB,MAAQimB,EAAkB,GAAOjmB,KAC9FolB,cAAea,EAAkB,IAAUA,EAAkB,GAAOxjB,aAAewjB,EAAkB,GAAOxjB,gBAKhI,gBACA+M,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OAEAC,GANA,EAKAN,QALA,EAMAM,cACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCvP,MAAO,CACN2hB,IAAK,QAEN9e,MAAM,gBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,GACV/F,OAAO,SACP6G,cAAe,CACdhZ,QAAST,EACT0Z,SAAU,WAGX,kBAAChqB,EAAD,CACCI,MAAM,OACNE,MAAOsP,EAAOhP,KACdC,YAAa,kBACbD,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgBwW,EAAiBjZ,MAAjB,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgBwW,EAAiBjZ,MAAjB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,WAIlB,kBAACxQ,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAOmW,OACdllB,YAAa,wFACbD,KAAK,SACLF,QAAU6P,EAAQwV,QAAU1V,EAAO0V,SAChCzV,GAAgBwW,EAAiBjZ,MAAjB,aAEnBlN,YAAc4P,EAAQwV,QAAU1V,EAAO0V,SACpCzV,GAAgBwW,EAAiBjZ,MAAjB,aACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAIlB,kBAAC,GAAD,CACCpQ,MAAM,cACNE,MAAOsP,EAAOvM,YACdhC,YAAa,mBACbT,KAAK,cACLF,QAAU6P,EAAQlN,aAAegN,EAAOhN,cACrCiN,GAAgBwW,EAAiBjZ,MAAjB,kBAEnBlN,YAAc4P,EAAQlN,aAAegN,EAAOhN,cACzCiN,GAAgBwW,EAAiBjZ,MAAjB,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,iBACNE,MAAOsP,EAAOoW,cACd3kB,YAAa,yEACbT,KAAK,gBACLF,QAAU6P,EAAQyV,eAAiB3V,EAAO2V,gBACvC1V,GAAgBwW,EAAiBjZ,MAAjB,oBAEnBlN,YAAc4P,EAAQyV,eAAiB3V,EAAO2V,gBAC3C1V,GAAgBwW,EAAiBjZ,MAAjB,oBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBAMlB,yBACCrP,MAAO,CACN0V,UAAW,UAQf,yBAAK9V,UAAU,gCAEYI,MAAO,CACH6a,aAAc,SAGlB,wBAAIjb,UAAU,mBAAd,WAQzB,yBACqCI,MAAO,CACHiW,QAAS,QAEbrW,UAAU,gCACTisB,GAAoB9e,WACjB,yBAAK/M,MAAO,CACRiW,QAAS,WAET,kBAAC,KAAD,OAGP4V,GAAoB7e,MACjB,oCACKoR,IAEGA,GAAS9d,OAAS,GAAK8d,GAASvd,KAAI,SAAC4B,EAAO4T,GACxC,OACI,yBAAKzW,UAAU,sCACX,yBACIA,UAAU,kDACV+P,QAAS,WACLgX,GAAgBlkB,EAAMV,IACtBklB,GAAyBxkB,KAG7B,yBAAKuI,IAAKvI,EAAMJ,MAAOU,IAAKN,EAAMM,OAGtC,0BACI4M,QAAS,YA3RlD,SAAC5N,GAExB,IAAMknB,EAAY7K,IAAYA,GAASwB,QAAO,SAAAnd,GAC1C,OAAOA,EAAMV,KAAOA,KAGxBmc,GAAY+K,GAsRwDC,CAAmBzmB,EAAMV,IACzBmlB,GAAwBzkB,EAAMV,KAIlCnC,UAAU,6CACV,kBAAC0iB,GAAA,EAAD,QAIHoE,KAAiBjkB,EAAMV,KAInB2kB,IAA0B,IAAVrQ,IAHjB,0BAAMzW,UAAU,4CACZ,kBAAC2iB,GAAA,EAAD,WAcxB,kBAAC,KAAD,CACI1f,MAAO,iBAEP,yBACI8M,QAAS,WACLsO,GAAW,GACXoN,GAAwB,GACxBD,GAA2B,IAE/BxrB,UAAU,4CAIV,kBAACupB,GAAA,EAAD,MAIA,0BAAMvpB,UAAU,iDACZ,kBAAC6kB,GAAA,EAAD,WASzD,kBAAC5lB,EAAD,CACCI,MAAM,aACNE,MAAOsP,EAAOqW,UACdplB,YAAa,cACbD,KAAK,YACLF,QAAU6P,EAAQ0V,WAAa5V,EAAO4V,YACnC3V,GAAgBwW,EAAiBjZ,MAAjB,gBAEnBlN,YAAc4P,EAAQ0V,WAAa5V,EAAO4V,YACvC3V,GAAgBwW,EAAiBjZ,MAAjB,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,gBAIlB,kBAACxQ,EAAD,CACCI,MAAM,gBACNE,MAAOsP,EAAOsW,YACdrlB,YAAa,4DACbD,KAAK,cACLF,QAAU6P,EAAQ2V,aAAe7V,EAAO6V,cACrC5V,GAAgBwW,EAAiBjZ,MAAjB,kBAEnBlN,YAAc4P,EAAQ2V,aAAe7V,EAAO6V,cACzC5V,GAAgBwW,EAAiBjZ,MAAjB,kBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,kBAIlB,kBAAC,GAAD,CACCpQ,MAAM,mBACNE,MAAOsP,EAAOuW,gBACd9kB,YAAa,UACbT,KAAK,kBACLF,QAAU6P,EAAQ4V,iBAAmB9V,EAAO8V,kBACzC7V,GAAgBwW,EAAiBjZ,MAAjB,sBAEnBlN,YAAc4P,EAAQ4V,iBAAmB9V,EAAO8V,kBAC7C7V,GAAgBwW,EAAiBjZ,MAAjB,sBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,sBAIlB,kBAAC,GAAD,CACCpQ,MAAM,sBACNE,MAAOsP,EAAOwW,kBACd/kB,YAAa,2CACbT,KAAK,oBACLF,QAAU6P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC3C9V,GAAgBwW,EAAiBjZ,MAAjB,wBAEnBlN,YAAc4P,EAAQ6V,mBAAqB/V,EAAO+V,oBAC/C9V,GAAgBwW,EAAiBjZ,MAAjB,wBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,wBAIlB,wBAAIzP,UAAU,mBAAd,+BAIA,kBAAC,GAAD,CAEAwjB,QAASA,GACTxe,KAAMA,KAGN,yBAAK5E,MAAO,CACX0V,UAAU,UAGX,wBAAI9V,UAAU,mBAAd,wGAIA,kBAAC,GAAD,CAEAwjB,QAASqD,GACT7hB,KAAM4hB,MAKP,kBAAC,GAAD,CACCvI,WAAYA,EACZD,QAASA,EACTE,YAAaA,GACbE,SAAUA,GACVE,oBAAqBA,EACrBD,wBAAyBA,EACzBF,qBAAsBA,UCrvBrBpC,GAAwBC,KAAxBD,OA2WO4Z,IA3WiB3Z,KAAhBC,YACG2P,IAAX9B,OAOe,SAAC5V,GAAkB,IAAD,EACoBpG,EAAe,GAAI,sBADvC,mBAC9B+d,EAD8B,KACTC,EADS,OAEwBhe,EAAe,GAAI,oBAF3C,mBAE9Bie,EAF8B,KAEPC,EAFO,KAI/BtrB,EAASurB,eACT9X,EAAUC,eACV8X,EAAaxrB,EAAM,GANY,EAOiB+Q,oBAAS,GAP1B,mBAO9B0a,EAP8B,KAOTC,EAPS,OAQM3a,mBAAS,IARf,mBAQ9B4a,EAR8B,KAQfC,EARe,KAYrC7e,qBAAU,YAEiB,uCAAG,4BAAAE,EAAA,sEACeme,EAA0B,CAC3DrrB,WAAY,CACRE,aAAc,CACVoB,GAAImqB,MAJM,QAChBK,EADgB,SAYlBD,EAAkBC,GAZA,2CAAH,qDAkBvBC,KAED,CAACN,IAEJze,qBAAU,YAEmB,uCAAG,sBAAAE,EAAA,sEAClBqe,EAA4B,CAC9BvrB,WAAY,CACRE,aAAc,CACVoB,GAAImqB,MAJQ,2CAAH,qDAUzBO,KAED,CAACP,IAKJlrB,QAAQC,IAAI,qBAAsBorB,GAElCrrB,QAAQC,IAAI,cAAeP,GAG3B,IA+BMgsB,EAAMb,EAAoB7e,MAAQqf,GAAkBA,EAAc,MA/B7C,SAACM,GACxB,IAAKA,EAAK,GAAI,OAAO,EACrBA,EAAOA,EAAK9rB,KAAI,SAAAQ,GAAI,OAAIA,EAAKgB,SAC7B,IAAMuqB,EAAU,GAEZC,EAAa,EACbC,EAAe,EAqBnB,OAlBAH,EAAKppB,SAAQ,SAAClC,EAAMgV,GACZwW,EAAa,GACTD,EAAQE,GACRF,EAAQE,GAAR,uBAA4BF,EAAQE,IAApC,CAAmDzrB,IAElDurB,EAAQE,GAAgB,CAACzrB,GAE9BwrB,GAA0B,EAC1BC,GAA8B,IAI9BD,EAAa,EACbC,EAAe,EACf9rB,QAAQC,IAAI,aAAc4rB,OAI3BD,EAIyEG,CAAmBV,EAAc,OAAa,GAIlI,OACI,yBAAKzsB,UAAU,wBAEX,yBAAKA,UAAU,iCACX,sDAICisB,EAAoB7e,MAAQqf,GAAmBjsB,OAAOC,KAAKgsB,GAAgB/rB,OAAS,GACjF,oCACI,kBAAC,GAAD,CACIglB,sBAAuB6G,EACvB5G,yBAA0B6G,EAC1B1G,mBAAoB2G,EACpBV,sBAAuBW,IAI3B,kBAAC,IAAD,CACI3c,QAAS,kBAAMyc,GAAuB,IACtCltB,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAHV,UAWZ,kBAAC,KAAD,CACIyC,QAAM,EAACC,UAAW,CAAEzP,KAAM,GAC1B7N,QAASic,EAAoB9e,WAC5B8e,EAAoB7e,MAAQqf,KAAoBjsB,OAAOC,KAAKgsB,GAAgB/rB,OAAS,IAClF,kBAAC,KAAD,CAAO4B,YAAY,2BAA2BO,MAAOmR,KAAMK,yBAK9D4X,EAAoB7e,MAAQqf,GAAmBjsB,OAAOC,KAAKgsB,GAAgB/rB,OAAS,GACjF,oCACI,yBAAKV,UAAU,gCACX,yBAAKA,UAAU,oGACX,yBAAKoL,IAAKqhB,EAAc,OAAaA,EAAc,MAAd,MAAkCtpB,IAAI,MAE/E,yBAAKnD,UAAU,qCACX,4BACKysB,EAAc,MAEnB,4BACKA,EAAc,aAGlBA,EAAc,KACX,mCAEI,8BACKA,EAAc,QAUlCA,EAAc,MACX,oCACI,yBAAKzsB,UAAU,iCACX,qCAKJ,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,gGACX,yBAAKoL,IAAKqhB,EAAc,MAAYA,EAAc,KAAUtpB,IAAI,OAKxE,yBAAK/C,MAAO,CACR6a,aAAc,WAMzBwR,EAAc,OAAaA,EAAc,MAAU/rB,OAAS,GACzD,oCACI,yBAAKV,UAAU,iCACX,8CAKJ,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,kBACV8sB,GAAOtsB,OAAOC,KAAKqsB,GAAK7rB,KAAI,SAAA+b,GACzB,OACI,yBAAKhd,UAAU,qBACV8sB,EAAI9P,IAAW8P,EAAI9P,GAAQ/b,KAAI,SAAA6B,GAC5B,OAAO,yBACPK,IAAI,KACJiI,IAAKtI,EAAK1C,MAAO,CACb4R,MAAO,oBAcvC,yBAAK5R,MAAO,CACR6a,aAAc,aAYtC,yBAAKjb,UAAU,iCACX,wCAIJ,yBAAKA,UAAU,8BACVmsB,EAAsBhf,WAAa,kBAACoe,GAAD,MACnCY,EAAsB/e,QAAU+e,EAAsBnqB,KAAKtB,OAAS,IACjE,yBAAKN,MAAO,CACR0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,qCAAqCO,MAAOmR,KAAMK,0BAI5E8X,EAAsB/e,MAAQ+e,EAAsBnqB,MAAQmqB,EAAsBnqB,KAAKtB,OAAS,GAC7F,oCACI,kBAAC,KAAD,CACIN,MAAO,CACHmtB,WAAY,OACZltB,aAAc,iBACdmtB,SAAU,SACVvb,UAAW,+FAGf8G,KAAK,QACL8D,WAAYsP,EAAsBnqB,KAClC8a,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACHoV,MAAO,qBAO/B,kBAAC,GAAD,CACIvS,MAAM,GACNga,UAAU,QACV5a,IAAI,KACJ2P,MAAO,OAEPhS,UAAU,uBAEVkd,OAAQ,SAACza,EAAO0a,GAAR,OACJ,oCACI,yBACIpN,QAAS,WACLwE,EAAQzQ,KAAR,uBAA6BqZ,EAAOhb,MAExCiJ,IAAK3I,EAAOU,IAAI,YAAY/C,MAAO,CAC/B6T,OAAQ,OACRjC,MAAO,OACP0Y,UAAW,UACXrqB,aAAc,MACd2V,OAAQ,iBAM5B,kBAAC,GAAD,CACI/S,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACJ,oCAEI,wBACIpN,QAAS,WACLwE,EAAQzQ,KAAR,uBAA6BqZ,EAAOhb,MAGxC/B,MAAO,CACH0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAEX/R,OAUjB,kBAAC,GAAD,CACIhB,MAAM,mBACNga,UAAU,kBACV5a,IAAI,KACJrC,UAAU,yBAKd,kBAAC,GAAD,CACIiD,MAAM,eACNga,UAAU,cACV5a,IAAI,KACJrC,UAAU,yBAId,kBAAC,GAAD,CACIiD,MAAM,SACNga,UAAU,cACV5a,IAAI,KACJrC,UAAU,+BCnTfo9C,GA/Ca,SAAC,GAAmE,IAAjE39C,EAAgE,EAAhEA,SAAUJ,EAAsD,EAAtDA,MAAOg+C,EAA+C,EAA/CA,SAAU/8C,EAAqC,EAArCA,YAAasE,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAOzE,OACI,oCACI,wBAAI7E,UAAU,mBAAmBX,GAEhCg+C,EAAW,kBAAC,KAAD,eACRrxC,OAAO,sBACPhM,UAAU,iBACVM,YAAaA,EACbF,MAAO,CACH4R,MAAO,OACP0c,YAAa,QAIjBjvB,SAAUA,GACLoF,GAAQ,CACTrF,aAAckX,IAAO7R,MAIrB,kBAAC,KAAD,eAEIvE,YAAaA,EACbN,UAAU,iBACVI,MAAO,CACH4R,MAAO,OACP0c,YAAa,QAEjBjvB,SAAUA,GACLmF,GAAQ,CACTpF,aAAckX,IAAO9R,QAezBwS,KAAhBD,YC/BWD,KAAXD,O,IAEF9I,GAAmBC,MAAaC,MAAM,IAuBtCG,GAAgB,CACpB1H,UAAW,GACXC,SAAU,GACV+B,QAAS,GACTw0C,OAAQ,KACRC,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,IAAK,GACLv2C,MAAO,GACPD,MAAO,GACPy/B,eAAgB,GAChBX,YAAa,IAWTnkB,GAAwB,SAACvM,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAufhCiQ,GA5eQ,SAAC,GAKV,IAJZC,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAuY,EAEW,EAFXA,aACAC,EACW,EADXA,gBACW,EACwCjwB,EACjD,GACA,YAHS,mBACJkwB,EADI,KACcC,EADd,OAK6CxsB,mBAAS,IALtD,mBAKJysB,EALI,aAMuCzsB,mBAAS,KANhD,gCAQiCA,mBAAS,KAR1C,mBAQY8sB,GARZ,aAS2B9sB,mBAAS,IATpC,mBASSgtB,GATT,aAWwC3wB,EACjD,GACA,eAbS,mBAWc6wB,GAXd,aAgBkC7wB,EAAe,GAAI,YAhBrD,mBAgBJ8wB,EAhBI,KAgBWC,EAhBX,OAiBkBptB,mBAAS,IAjB3B,mBAiBJhN,EAjBI,KAiBE0sB,EAjBF,OAmB2B1f,mBAAS,IAnBpC,gCAoBqBA,mBAAS,KApB9B,mBAsBLjD,GAtBK,UAsBO,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACUswB,EAAuB,CAClDv4B,KAAM,CACJqB,MAAO0H,EAAO1H,MACdD,MAAO2H,EAAO3H,MACdqH,SAAUM,EAAON,SACjBzF,QAAS+F,EAAO/F,QAChBhC,UAAW+H,EAAO/H,UAClBC,SAAU8H,EAAO9H,SACjB4/B,eAAgB93B,EAAO83B,eACvB+W,IAAK7uC,EAAO6uC,IACZF,WAAY3uC,EAAO2uC,WACnBC,WAAY5uC,EAAO4uC,WACnBH,OAAQzuC,EAAOyuC,OACfC,YAAa1uC,EAAO0uC,YACpBvX,YAAanhC,KAfE,QACbq6B,EADa,SAoB6B,OAA1BA,EAAex5B,QAtER4P,OAuE3B4I,EAtEJ7I,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,gBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAqEzC2oB,EAAgB,CAAC,aAEbh8B,GAAI+8B,EAAc,KAAW,GAC7B78B,IAAK68B,EAAc,KAAW,IAE3BA,IALQ,oBAOVhB,KAGLvY,GAAyB,GACzB7W,EAAQiZ,aAERlG,KAGF/S,EAAQC,eAAc,GAvCH,iCAlDS,IAACuG,IAkDV,OAAH,yDA0ClBzH,qBAAU,WACR,IAAKuwB,EAAgB,UAAe,CAClC,IAAMtxB,EAAQsxB,EAAgB,MAC9B,GAAItxB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EACvDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,WAS/BuS,EAAgB,WACjB59B,OAAOC,KAAK29B,EAAiBp8B,MAAMtB,OAAS,GAExC09B,EAAgB,KAAhB,SAUL,CAACA,IAUJvwB,qBAAU,YACU,uCAAG,8BAAAE,EAAA,sEACUgxB,EAAuB,IADjC,QACbM,EADa,SAIGA,EAAe3+B,OAAS,IAEtCg+B,EAAiBW,EAAep+B,KAAI,SAAC+F,GACzC,MAAO,CACLzH,MAAOyH,EAAQnH,KACfA,KAAMmH,EAAQnH,SAGlB8+B,EAAkBD,IAZD,2CAAH,qDAgBlBY,KACC,IAEHzxB,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACUkxB,EAAoB,CAC5Cp+B,WAAY,CACVE,aAAc,CACZiG,QAASs3B,MAJC,QACViB,EADU,SAUGA,EAAY7+B,OAAS,IAEhCk+B,EAAcW,EAAYt+B,KAAI,SAACgG,GACnC,MAAO,CACL1H,MAAO0H,EAAKpH,KACZA,KAAMoH,EAAKpH,SAGfg/B,EAAeD,IAlBD,2CAAH,qDAsBfY,KACC,CAAClB,IAEJ,IAAMpW,EAAe,SAACpY,GACpB6V,GAAyB,IAiB3BvkB,QAAQC,IAAI,gBAAiB29B,GAC7B,IAAM2e,EAAmB,SAAC/4C,EAAMg5C,GAC9BrsB,EAAaqsB,IAGf,OACE,kBAAC,IAAD,CACE1uC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEvP,MAAO,CACL2hB,IAAK,QAEPG,UAAW,CACTrS,OAAQ,IACRwG,QAAS,QAEXpT,MAAM,gBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,WAIZ,yBAAKjpB,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAOsP,EAAO/H,UACdjH,KAAK,YACLF,QACG6P,EAAQ1I,WAAawI,EAAOxI,YAC3ByI,GACA6uB,EAAiBtxB,MAAjB,gBAEJlN,YACG4P,EAAQ1I,WAAawI,EAAOxI,YAC3ByI,GACA6uB,EAAiBtxB,MAAjB,gBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,YACNE,MAAOsP,EAAO9H,SACdlH,KAAK,WACLF,QACG6P,EAAQzI,UAAYuI,EAAOvI,WAC1BwI,GACA6uB,EAAiBtxB,MAAjB,eAEJlN,YACG4P,EAAQzI,UAAYuI,EAAOvI,WAC1BwI,GACA6uB,EAAiBtxB,MAAjB,eAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,iBAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAOsP,EAAO0uC,YACd19C,KAAK,cACLF,QACG6P,EAAQ+tC,aAAejuC,EAAOiuC,cAC7BhuC,GACA6uB,EAAiBtxB,MAAjB,kBAEJlN,YACG4P,EAAQ+tC,aAAejuC,EAAOiuC,cAC7BhuC,GACA6uB,EAAiBtxB,MAAjB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,mBAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEc,IAAK,EACLT,KAAM,SACND,MAAM,SACNE,MAAOsP,EAAOyuC,OACdz9C,KAAK,SACLF,QACG6P,EAAQ8tC,QAAUhuC,EAAOguC,SACxB/tC,GAAgB6uB,EAAiBtxB,MAAjB,aAEpBlN,YACG4P,EAAQ8tC,QAAUhuC,EAAOguC,SACxB/tC,GAAgB6uB,EAAiBtxB,MAAjB,aAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,eAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAOsP,EAAO1H,MACdtH,KAAK,QACLF,QACG6P,EAAQrI,OAASmI,EAAOnI,QACvBoI,GAAgB6uB,EAAiBtxB,MAAjB,YAEpBlN,YACG4P,EAAQrI,OAASmI,EAAOnI,QACvBoI,GAAgB6uB,EAAiBtxB,MAAjB,YAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,MACNE,MAAOsP,EAAO6uC,IACd79C,KAAK,MACLF,QACG6P,EAAQkuC,KAAOpuC,EAAOouC,MACrBnuC,GAAgB6uB,EAAiBtxB,MAAjB,UAEpBlN,YACG4P,EAAQkuC,KAAOpuC,EAAOouC,MACrBnuC,GAAgB6uB,EAAiBtxB,MAAjB,UAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,YAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAOsP,EAAO2uC,WACd39C,KAAK,aACLF,QACG6P,EAAQguC,YAAcluC,EAAOkuC,aAC5BjuC,GACA6uB,EAAiBtxB,MAAjB,iBAEJlN,YACG4P,EAAQguC,YAAcluC,EAAOkuC,aAC5BjuC,GACA6uB,EAAiBtxB,MAAjB,iBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAOsP,EAAO4uC,WACd59C,KAAK,aACLF,QACG6P,EAAQiuC,YAAcnuC,EAAOmuC,aAC5BluC,GACA6uB,EAAiBtxB,MAAjB,iBAEJlN,YACG4P,EAAQiuC,YAAcnuC,EAAOmuC,aAC5BluC,GACA6uB,EAAiBtxB,MAAjB,iBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,mBAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAOsP,EAAO3H,MACdrH,KAAK,QACLF,QACG6P,EAAQtI,OAASoI,EAAOpI,QACvBqI,GAAgB6uB,EAAiBtxB,MAAjB,YAEpBlN,YACG4P,EAAQtI,OAASoI,EAAOpI,QACvBqI,GAAgB6uB,EAAiBtxB,MAAjB,YAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAKtB,yBAAKzP,UAAU,yBACb,kBAACoX,GAAD,CACExS,KAAMC,EACNvE,YAAY,aACZjB,MAAM,eACNI,SAAUk+C,MAKhB,yBAAK39C,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,UACNE,MAAOsP,EAAO/F,QACdjJ,KAAK,UACLF,QACG6P,EAAQ1G,SAAWwG,EAAOxG,UACzByG,GACA6uB,EAAiBtxB,MAAjB,cAEJlN,YACG4P,EAAQ1G,SAAWwG,EAAOxG,UACzByG,GACA6uB,EAAiBtxB,MAAjB,cAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,eAKtB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,kBACNE,MAAOsP,EAAO83B,eACd9mC,KAAK,iBACLF,QACG6P,EAAQm3B,gBAAkBr3B,EAAOq3B,iBAChCp3B,GACA6uB,EAAiBtxB,MAAjB,qBAEJlN,YACG4P,EAAQm3B,gBAAkBr3B,EAAOq3B,iBAChCp3B,GACA6uB,EAAiBtxB,MAAjB,qBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,6BC5hB9BtB,IAFa+I,KAAXD,OAEiB7I,MAAaC,MAAM,KAuBtCG,GAAgB,CACpB1H,UAAW,GACXC,SAAU,GACV+B,QAAS,GACTw0C,OAAQ,KACRC,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,IAAK,GACLv2C,MAAO,GACPD,MAAO,GACPy/B,eAAgB,GAChBX,YAAa,IAWTnkB,GAAwB,SAACvM,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAkhBhCqoC,GAtgBQ,SAAC,GAMV,IALZn4B,EAKW,EALXA,sBACAC,EAIW,EAJXA,yBACAuY,EAGW,EAHXA,aACAC,EAEW,EAFXA,gBACAx1B,EACW,EADXA,SACW,EACwCuF,EACjD,GACA,eAHS,mBACJkwB,EADI,KACcC,EADd,OAK6CxsB,mBAAS,IALtD,mBAKJysB,EALI,aAMuCzsB,mBAAS,KANhD,gCAQiCA,mBAAS,KAR1C,mBAQY8sB,GARZ,aAS2B9sB,mBAAS,IATpC,mBASSgtB,GATT,aAWwC3wB,EACjD,GACA,eAbS,mBAWc6wB,GAXd,aAgBkC7wB,EAAe,GAAI,YAhBrD,mBAgBJ8wB,EAhBI,KAgBWC,EAhBX,OAiBkBptB,mBAAS,IAjB3B,mBAiBJhN,EAjBI,KAiBE0sB,EAjBF,KAmBX1jB,qBAAU,WACJlF,GAAYnI,OAAOC,KAAKkI,GAAUjI,OAAS,GAC7C6wB,EAAa5oB,EAAQ,eAEtB,CAACA,IAvBO,MAyB2BkJ,mBAAS,IAzBpC,gCA0BqBA,mBAAS,KA1B9B,mBA4BLjD,GA5BK,UA4BO,uCAAG,WAAOC,EAAaC,GAApB,qBAAAf,EAAA,sEACUswB,EAAuB,CAClDx9B,WAAY,CACVE,aAAc,CACZoB,GAAIwG,EAASxG,KAGjB2D,KAAM,CACJqB,MAAO0H,EAAO1H,MACdD,MAAO2H,EAAO3H,MACd4B,QAAS+F,EAAO/F,QAChBhC,UAAW+H,EAAO/H,UAClBC,SAAU8H,EAAO9H,SACjB4/B,eAAgB93B,EAAO83B,eACvB+W,IAAK7uC,EAAO6uC,IACZF,WAAY3uC,EAAO2uC,WACnBC,WAAY5uC,EAAO4uC,WACnBH,OAAQzuC,EAAOyuC,OACfC,YAAa1uC,EAAO0uC,YACpBvX,YAAanhC,KAnBE,QACbq6B,EADa,SAwB6B,OAA1BA,EAAex5B,QAlFR4P,OAmF3B4I,EAlFJ7I,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,gBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAiFzCpU,QAAQC,IAAI,kBAAmB69B,GAKzBzoB,EAJgB,WACpB,OAAOynB,EAAaj9B,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQ8G,EAASxG,IAGhD+4B,GAGRxZ,EAAclhB,OAAOmhB,OAAO,GAAIuc,EAAaznB,GAA/BjW,OAAA,IAAAA,CAAA,GACf0+B,EADe,CAElBr/B,KAAMq/B,EAAep4B,UAAY,IAAMo4B,EAAen4B,YAGxD3F,QAAQC,IAAI,6BAA8B69B,GAEpC9C,EAlB8C,uBAmB/C8B,EAAat8B,MAAM,EAAG6U,IAnByB,CAoBlDiL,GApBkD,aAqB/Cwc,EAAat8B,MAAM6U,EAAQ,KAGhCrV,QAAQC,IAAI,2BAA4B+6B,GAExC+B,EAAgB/B,GAEhBzW,GAAyB,GACzB7W,EAAQiZ,aAERlG,KAGF/S,EAAQC,eAAc,GA1DH,iCA1DS,IAACuG,IA0DV,OAAH,yDA6DlBzH,qBAAU,WACR,IAAKuwB,EAAgB,UAAe,CAClC,IAAMtxB,EAAQsxB,EAAgB,MAC9B,GAAItxB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EACvDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,WAS/BuS,EAAgB,WACjB59B,OAAOC,KAAK29B,EAAiBp8B,MAAMtB,OAAS,GAExC09B,EAAgB,KAAhB,SAUL,CAACA,IAUJvwB,qBAAU,YACU,uCAAG,8BAAAE,EAAA,sEACUgxB,EAAuB,IADjC,QACbM,EADa,SAIGA,EAAe3+B,OAAS,IAEtCg+B,EAAiBW,EAAep+B,KAAI,SAAC+F,GACzC,MAAO,CACLzH,MAAOyH,EAAQnH,KACfA,KAAMmH,EAAQnH,SAGlB8+B,EAAkBD,IAZD,2CAAH,qDAgBlBY,KACC,IAEHzxB,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACUkxB,EAAoB,CAC5Cp+B,WAAY,CACVE,aAAc,CACZiG,QAASs3B,MAJC,QACViB,EADU,SAUGA,EAAY7+B,OAAS,IAEhCk+B,EAAcW,EAAYt+B,KAAI,SAACgG,GACnC,MAAO,CACL1H,MAAO0H,EAAKpH,KACZA,KAAMoH,EAAKpH,SAGfg/B,EAAeD,IAlBD,2CAAH,qDAsBfY,KACC,CAAClB,IAEJ,IAAMpW,EAAe,SAACpY,GACpB6V,GAAyB,IAiB3BvkB,QAAQC,IAAI,gBAAiB29B,GAC7B,IAAM2e,EAAmB,SAAC/4C,EAAMg5C,GAC9BrsB,EAAaqsB,IAGf,OACE,kBAAC,IAAD,CACE1uC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,GAAP,GAAyB7F,KAErC,gBACC0G,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEvP,MAAO,CACL2hB,IAAK,QAEPG,UAAW,CACTrS,OAAQ,IACRwG,QAAS,QAEXpT,MAAM,gBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,WAIZ,yBAAKjpB,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAOsP,EAAO/H,UACdjH,KAAK,YACLF,QACG6P,EAAQ1I,WAAawI,EAAOxI,YAC3ByI,GACA6uB,EAAiBtxB,MAAjB,gBAEJlN,YACG4P,EAAQ1I,WAAawI,EAAOxI,YAC3ByI,GACA6uB,EAAiBtxB,MAAjB,gBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,YACNE,MAAOsP,EAAO9H,SACdlH,KAAK,WACLF,QACG6P,EAAQzI,UAAYuI,EAAOvI,WAC1BwI,GACA6uB,EAAiBtxB,MAAjB,eAEJlN,YACG4P,EAAQzI,UAAYuI,EAAOvI,WAC1BwI,GACA6uB,EAAiBtxB,MAAjB,eAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,iBAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAOsP,EAAO0uC,YACd19C,KAAK,cACLF,QACG6P,EAAQ+tC,aAAejuC,EAAOiuC,cAC7BhuC,GACA6uB,EAAiBtxB,MAAjB,kBAEJlN,YACG4P,EAAQ+tC,aAAejuC,EAAOiuC,cAC7BhuC,GACA6uB,EAAiBtxB,MAAjB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,mBAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEc,IAAK,EACLT,KAAM,SACND,MAAM,SACNE,MAAOsP,EAAOyuC,OACdz9C,KAAK,SACLF,QACG6P,EAAQ8tC,QAAUhuC,EAAOguC,SACxB/tC,GAAgB6uB,EAAiBtxB,MAAjB,aAEpBlN,YACG4P,EAAQ8tC,QAAUhuC,EAAOguC,SACxB/tC,GAAgB6uB,EAAiBtxB,MAAjB,aAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,eAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAOsP,EAAO1H,MACdtH,KAAK,QACLF,QACG6P,EAAQrI,OAASmI,EAAOnI,QACvBoI,GAAgB6uB,EAAiBtxB,MAAjB,YAEpBlN,YACG4P,EAAQrI,OAASmI,EAAOnI,QACvBoI,GAAgB6uB,EAAiBtxB,MAAjB,YAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,MACNE,MAAOsP,EAAO6uC,IACd79C,KAAK,MACLF,QACG6P,EAAQkuC,KAAOpuC,EAAOouC,MACrBnuC,GAAgB6uB,EAAiBtxB,MAAjB,UAEpBlN,YACG4P,EAAQkuC,KAAOpuC,EAAOouC,MACrBnuC,GAAgB6uB,EAAiBtxB,MAAjB,UAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,YAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAOsP,EAAO2uC,WACd39C,KAAK,aACLF,QACG6P,EAAQguC,YAAcluC,EAAOkuC,aAC5BjuC,GACA6uB,EAAiBtxB,MAAjB,iBAEJlN,YACG4P,EAAQguC,YAAcluC,EAAOkuC,aAC5BjuC,GACA6uB,EAAiBtxB,MAAjB,iBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAOsP,EAAO4uC,WACd59C,KAAK,aACLF,QACG6P,EAAQiuC,YAAcnuC,EAAOmuC,aAC5BluC,GACA6uB,EAAiBtxB,MAAjB,iBAEJlN,YACG4P,EAAQiuC,YAAcnuC,EAAOmuC,aAC5BluC,GACA6uB,EAAiBtxB,MAAjB,iBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,mBAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAOsP,EAAO3H,MACdrH,KAAK,QACLF,QACG6P,EAAQtI,OAASoI,EAAOpI,QACvBqI,GAAgB6uB,EAAiBtxB,MAAjB,YAEpBlN,YACG4P,EAAQtI,OAASoI,EAAOpI,QACvBqI,GAAgB6uB,EAAiBtxB,MAAjB,YAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAKtB,yBAAKzP,UAAU,yBACb,kBAACoX,GAAD,CACExS,KAAMC,EACNvE,YAAY,aACZjB,MAAM,eACNI,SAAUk+C,MAKhB,yBAAK39C,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,UACNE,MAAOsP,EAAO/F,QACdjJ,KAAK,UACLF,QACG6P,EAAQ1G,SAAWwG,EAAOxG,UACzByG,GACA6uB,EAAiBtxB,MAAjB,cAEJlN,YACG4P,EAAQ1G,SAAWwG,EAAOxG,UACzByG,GACA6uB,EAAiBtxB,MAAjB,cAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,eAKtB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,kBACNE,MAAOsP,EAAO83B,eACd9mC,KAAK,iBACLF,QACG6P,EAAQm3B,gBAAkBr3B,EAAOq3B,iBAChCp3B,GACA6uB,EAAiBtxB,MAAjB,qBAEJlN,YACG4P,EAAQm3B,gBAAkBr3B,EAAOq3B,iBAChCp3B,GACA6uB,EAAiBtxB,MAAjB,qBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,6BC5jB5B0M,GAAwBC,KAAxBD,OACA+N,IADwB9N,KAAhBC,YACGpd,IAAXirB,QAuBFC,GAAU,SAAC,GAA6C,IAA3CnoB,EAA0C,EAA1CA,KAAMm8B,EAAoC,EAApCA,gBAAoC,EAC7BtsB,oBAAS,GADoB,mBACpDuM,EADoD,KAC3CC,EAD2C,OAEDxM,oBAAS,GAFR,mBAEpDuY,EAFoD,KAE7BC,EAF6B,KAIrD9V,EAAUC,eAJ2C,EAMFtG,EACvD,GACA,eARyD,mBAM/B2xB,GAN+B,WAUrDC,EAAoB,uCAAG,WAAO39B,GAAP,iBAAA4L,EAAA,sEACK8xB,EAA0B,CACxDh/B,WAAY,CACVE,aAAc,CACZoB,SAJqB,QACrB49B,EADqB,SAU2B,OAA7BA,EAAkBr6B,SAzCd4P,EA0CH,iBAzC5BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,iBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAuCnCwqB,EAAkBh+B,EAAKge,QAAO,SAACve,GAAD,OAAUA,EAAKU,KAAOA,KAC1Dg8B,EAAgB6B,IAbS,iCA/BC,IAAC1qB,IA+BF,OAAH,sDAiB1B,OACE,oCACE,kBAAC,KAAD,CAMEyD,KAAK,QAEL8D,WAAY7a,GAEZ,kBAAC,GAAD,CACEiB,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,uBAA6BqZ,EAAOhb,KAEpCkoB,EAAyBlN,IAE3B/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAMT,kBAAC,GAAD,CACEhB,MAAM,QACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,cACNga,UAAU,cACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,SACNga,UAAU,SACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,SACNga,UAAU,cACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,4BAAK9U,GAAQyS,IAAOzS,GAAM+H,OAAO,6BA+BvC,kBAAC,GAAD,CACEhM,UAAU,uBACViD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGvC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,cAC7B,0BACEjD,UAAU,WACV+P,QAAS,WACPsO,GAAW,GACXgM,EAAyBlN,KAG3B,kBAACyN,GAAA,EAAD,SAKN,kBAAC,KAAD,CACE7H,UAAW,kBAAM+c,EAAqB3iB,EAAOhb,KAC7Cc,MAAM,qBACNkf,OAAO,MACPa,WAAW,MAEX,0BAAMhjB,UAAU,4BACd,kBAAC4iB,GAAA,EAAD,aAQXwH,GACC,kBAAC,GAAD,CACE8T,aAAcl8B,EACdm8B,gBAAiBA,EACjBxY,yBAA0BtH,EAC1BqH,sBAAuBtH,EACvBzV,SAAUyhB,MAoKLU,iBAzJM,SAAC,GAAuB,EAArBvW,QAAsB,IAAD,EACH1C,mBAAS,IADN,mBACpCqsB,EADoC,KACtBC,EADsB,OAGMjwB,EAC/C,GACA,aALyC,mBAGpC+xB,EAHoC,KAGrBC,EAHqB,KAQ3CryB,qBAAU,YACU,uCAAG,4BAAAE,EAAA,sEACKmyB,EAAwB,IAD7B,OACbI,EADa,OAGnBnC,EAAgBmC,GAHG,2CAAH,qDAKlBC,KACC,IAEH,IAjB2C,EA0Be1uB,oBAAS,GA1BxB,mBA0BpC6T,EA1BoC,KA0BbC,EA1Ba,KAwDrC3jB,EAjBAk8B,GAAgBA,EAAax9B,OAAS,EACxBw9B,EAAaj9B,KAAI,SAACQ,GAChC,MAAO,CACL5B,KAAM4B,EAAK5B,KACXsH,MAAO1F,EAAK0F,MACZo2C,YAAa97C,EAAK87C,YAClBD,OAAQ77C,EAAK67C,OACbtX,YAAavkC,EAAKukC,YACdtvB,IAAOjV,EAAKukC,aAAah6B,OAAO,wBAChC,OAKI,GAKhB,OACE,oCAIE,yBAAKhM,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,2CACb,wBAAIA,UAAU,uCAAd,UAEA,kBAAC,GAAD,CACEqrB,aAAa,EACbrrB,UAAU,qBACVM,YAAY,kBACZquB,SAAU,SAACpvB,GAAD,OAvDD,SAACA,GACpB,GAAI0gC,EAAcj+B,KAAKtB,OAAS,EAAG,CACjC,IAAMs/B,EAAkBC,EAAcj+B,KAAKge,QAAO,SAACve,GAAD,OAChDA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBAEzCqlB,EAAgB6B,IAkDa1U,CAAa/rB,OAKtC,yBACEa,MAAO,CACL8T,QAAS,OACTE,WAAY,WAGb8pB,GAAgBA,EAAax9B,OAAS,GACrC,oCACE,yBACEN,MAAO,CACL8T,QAAS,OACTE,WAAY,SACZ6B,YAAa,SAGf,kBAAC,WAAD,CACEgU,SAAU,iBACVjoB,KAAMA,EACNsK,QAjEF,CACd,CAAEjN,MAAO,OAAQgD,IAAK,QACtB,CAAEhD,MAAO,QAASgD,IAAK,SACvB,CAAEhD,MAAO,cAAegD,IAAK,eAC7B,CAAEhD,MAAO,SAAUgD,IAAK,UACxB,CAAEhD,MAAO,SAAUgD,IAAK,iBAyDV,iBAOA,0BACEjC,MAAO,CACLoV,MAAO,UACPO,WAAY,SAGd,kBAACowB,GAAA,EAAD,SAKR,kBAAC,IAAD,CAEEnmC,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJ1C,aAWJ,yBAAK3lB,UAAU,uCASf,yBAAKA,UAAU,uCACZigC,EAAc7yB,MAAQ8wB,EAAax9B,OAAS,GAC3C,kBAAC,GAAD,CAASy9B,gBAAiBA,EAAiBn8B,KAAMk8B,IAElD+B,EAAc9yB,WAAa,kBAACoe,GAAD,MAC3B0U,EAAc7yB,QAAU8wB,EAAax9B,OAAS,IAC7C,kBAAC,GAAD,CAAOuC,MAAM,qBAKlBg9B,EAAc7yB,MACb,kBAAC0wC,GAAD,CACE3f,gBAAiBA,EACjBzY,sBAAuBA,EACvBC,yBAA0BA,EAC1BuY,aAAc+B,EAAcj+B,WCtVhCmM,IAFa+I,KAAXD,OAEiB7I,MAAaC,MAAM,KAEtCG,GAAgB,CACpB1H,UAAW,GACXC,SAAU,GACV+B,QAAS,GACTw0C,OAAQ,KACRC,YAAa,GACbC,WAAY,GACZC,WAAY,GACZC,IAAK,GACLv2C,MAAO,GACPD,MAAO,GACPy/B,eAAgB,GAChBX,YAAa,IAWTnkB,GAAwB,SAACvM,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBA0fhCqoC,GA/eQ,SAAC,GAKV,IAJZn4B,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAhd,EAEW,EAFXA,SACAo1C,EACW,EADXA,YACW,EACwC7vC,EACjD,GACA,eAHS,mBACJkwB,EADI,KACcC,EADd,OAK6CxsB,mBAAS,IALtD,mBAKJysB,EALI,aAMuCzsB,mBAAS,KANhD,gCAQiCA,mBAAS,KAR1C,mBAQY8sB,GARZ,aAS2B9sB,mBAAS,IATpC,mBASSgtB,GATT,aAWwC3wB,EACjD,GACA,eAbS,mBAWc6wB,GAXd,aAgBkC7wB,EAAe,GAAI,YAhBrD,mBAgBJ8wB,EAhBI,KAgBWC,EAhBX,OAiBkBptB,mBAAS,IAjB3B,mBAiBJhN,EAjBI,KAiBE0sB,EAjBF,KAmBX1jB,qBAAU,WACJlF,GAAYnI,OAAOC,KAAKkI,GAAUjI,OAAS,GAC7C6wB,EAAa5oB,EAAQ,eAEtB,CAACA,IAEJ,IAAMiG,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACUswB,EAAuB,CAClDx9B,WAAY,CACVE,aAAc,CACZoB,GAAIwG,EAASxG,KAGjB2D,KAAM,CACJqB,MAAO0H,EAAO1H,MACdD,MAAO2H,EAAO3H,MACdqH,SAAUM,EAAON,SACjBzF,QAAS+F,EAAO/F,QAChBhC,UAAW+H,EAAO/H,UAClBC,SAAU8H,EAAO9H,SACjB4/B,eAAgB93B,EAAO83B,eACvB+W,IAAK7uC,EAAO6uC,IACZF,WAAY3uC,EAAO2uC,WACnBC,WAAY5uC,EAAO4uC,WACnBH,OAAQzuC,EAAOyuC,OACfC,YAAa1uC,EAAO0uC,YACpBvX,YAAanhC,KApBE,QACbq6B,EADa,SAyB6B,OAA1BA,EAAex5B,QA9ER4P,OA+E3B4I,EA9EJ7I,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,gBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BA6EzCuoC,EAAY,eACP7e,EADM,CAETr/B,KAAMq/B,EAAep4B,UAAY,IAAMo4B,EAAen4B,YAGxD4e,GAAyB,GACzB7W,EAAQiZ,aAERlG,KAGF/S,EAAQC,eAAc,GAvCH,iCArDS,IAACuG,IAqDV,OAAH,wDA0ClBzH,qBAAU,WACR,IAAKuwB,EAAgB,UAAe,CAClC,IAAMtxB,EAAQsxB,EAAgB,MAC9B,GAAItxB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EACvDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,WAS/BuS,EAAgB,WACjB59B,OAAOC,KAAK29B,EAAiBp8B,MAAMtB,OAAS,GAExC09B,EAAgB,KAAhB,SAUL,CAACA,IAUJvwB,qBAAU,YACU,uCAAG,8BAAAE,EAAA,sEACUgxB,EAAuB,IADjC,QACbM,EADa,SAIGA,EAAe3+B,OAAS,IAEtCg+B,EAAiBW,EAAep+B,KAAI,SAAC+F,GACzC,MAAO,CACLzH,MAAOyH,EAAQnH,KACfA,KAAMmH,EAAQnH,SAGlB8+B,EAAkBD,IAZD,2CAAH,qDAgBlBY,KACC,IAEHzxB,qBAAU,YACO,uCAAG,8BAAAE,EAAA,sEACUkxB,EAAoB,CAC5Cp+B,WAAY,CACVE,aAAc,CACZiG,QAASs3B,MAJC,QACViB,EADU,SAUGA,EAAY7+B,OAAS,IAEhCk+B,EAAcW,EAAYt+B,KAAI,SAACgG,GACnC,MAAO,CACL1H,MAAO0H,EAAKpH,KACZA,KAAMoH,EAAKpH,SAGfg/B,EAAeD,IAlBD,2CAAH,qDAsBfY,KACC,CAAClB,IAEJ,IAAMpW,EAAe,SAACpY,GACpB6V,GAAyB,IAiB3BvkB,QAAQC,IAAI,gBAAiB29B,GAC7B,IAAM2e,EAAmB,SAAC/4C,EAAMg5C,GAC9BrsB,EAAaqsB,IAGf,OACE,kBAAC,IAAD,CACE1uC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,GAAP,GAAyB7F,KAErC,gBACC0G,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEvP,MAAO,CACL2hB,IAAK,QAEPG,UAAW,CACTrS,OAAQ,IACRwG,QAAS,QAEXpT,MAAM,gBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,WAIZ,yBAAKjpB,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,aACNE,MAAOsP,EAAO/H,UACdjH,KAAK,YACLF,QACG6P,EAAQ1I,WAAawI,EAAOxI,YAC3ByI,GACA6uB,EAAiBtxB,MAAjB,gBAEJlN,YACG4P,EAAQ1I,WAAawI,EAAOxI,YAC3ByI,GACA6uB,EAAiBtxB,MAAjB,gBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,iBAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,YACNE,MAAOsP,EAAO9H,SACdlH,KAAK,WACLF,QACG6P,EAAQzI,UAAYuI,EAAOvI,WAC1BwI,GACA6uB,EAAiBtxB,MAAjB,eAEJlN,YACG4P,EAAQzI,UAAYuI,EAAOvI,WAC1BwI,GACA6uB,EAAiBtxB,MAAjB,eAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,iBAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAOsP,EAAO0uC,YACd19C,KAAK,cACLF,QACG6P,EAAQ+tC,aAAejuC,EAAOiuC,cAC7BhuC,GACA6uB,EAAiBtxB,MAAjB,kBAEJlN,YACG4P,EAAQ+tC,aAAejuC,EAAOiuC,cAC7BhuC,GACA6uB,EAAiBtxB,MAAjB,kBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,mBAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEc,IAAK,EACLT,KAAM,SACND,MAAM,SACNE,MAAOsP,EAAOyuC,OACdz9C,KAAK,SACLF,QACG6P,EAAQ8tC,QAAUhuC,EAAOguC,SACxB/tC,GAAgB6uB,EAAiBtxB,MAAjB,aAEpBlN,YACG4P,EAAQ8tC,QAAUhuC,EAAOguC,SACxB/tC,GAAgB6uB,EAAiBtxB,MAAjB,aAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,eAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAOsP,EAAO1H,MACdtH,KAAK,QACLF,QACG6P,EAAQrI,OAASmI,EAAOnI,QACvBoI,GAAgB6uB,EAAiBtxB,MAAjB,YAEpBlN,YACG4P,EAAQrI,OAASmI,EAAOnI,QACvBoI,GAAgB6uB,EAAiBtxB,MAAjB,YAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,MACNE,MAAOsP,EAAO6uC,IACd79C,KAAK,MACLF,QACG6P,EAAQkuC,KAAOpuC,EAAOouC,MACrBnuC,GAAgB6uB,EAAiBtxB,MAAjB,UAEpBlN,YACG4P,EAAQkuC,KAAOpuC,EAAOouC,MACrBnuC,GAAgB6uB,EAAiBtxB,MAAjB,UAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,YAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAOsP,EAAO2uC,WACd39C,KAAK,aACLF,QACG6P,EAAQguC,YAAcluC,EAAOkuC,aAC5BjuC,GACA6uB,EAAiBtxB,MAAjB,iBAEJlN,YACG4P,EAAQguC,YAAcluC,EAAOkuC,aAC5BjuC,GACA6uB,EAAiBtxB,MAAjB,iBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,kBAItB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,cACNE,MAAOsP,EAAO4uC,WACd59C,KAAK,aACLF,QACG6P,EAAQiuC,YAAcnuC,EAAOmuC,aAC5BluC,GACA6uB,EAAiBtxB,MAAjB,iBAEJlN,YACG4P,EAAQiuC,YAAcnuC,EAAOmuC,aAC5BluC,GACA6uB,EAAiBtxB,MAAjB,iBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,mBAMxB,yBAAKzP,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,QACNE,MAAOsP,EAAO3H,MACdrH,KAAK,QACLF,QACG6P,EAAQtI,OAASoI,EAAOpI,QACvBqI,GAAgB6uB,EAAiBtxB,MAAjB,YAEpBlN,YACG4P,EAAQtI,OAASoI,EAAOpI,QACvBqI,GAAgB6uB,EAAiBtxB,MAAjB,YAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAKtB,yBAAKzP,UAAU,yBACb,kBAACoX,GAAD,CACExS,KAAMC,EACNvE,YAAY,aACZjB,MAAM,eACNI,SAAUk+C,MAKhB,yBAAK39C,UAAU,mBACb,yBAAKA,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,UACNE,MAAOsP,EAAO/F,QACdjJ,KAAK,UACLF,QACG6P,EAAQ1G,SAAWwG,EAAOxG,UACzByG,GACA6uB,EAAiBtxB,MAAjB,cAEJlN,YACG4P,EAAQ1G,SAAWwG,EAAOxG,UACzByG,GACA6uB,EAAiBtxB,MAAjB,cAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,eAKtB,yBAAKzP,UAAU,yBACb,kBAACf,EAAD,CACEI,MAAM,kBACNE,MAAOsP,EAAO83B,eACd9mC,KAAK,iBACLF,QACG6P,EAAQm3B,gBAAkBr3B,EAAOq3B,iBAChCp3B,GACA6uB,EAAiBtxB,MAAjB,qBAEJlN,YACG4P,EAAQm3B,gBAAkBr3B,EAAOq3B,iBAChCp3B,GACA6uB,EAAiBtxB,MAAjB,qBAEJrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,6BCzOrBsmB,IAhSiB3Z,KAAxBD,OAAwBC,KAAhBC,YACG2P,IAAX9B,OAMe,SAAC5V,GAAkB,IAAD,EACQpG,EAC7C,GACA,eAHqC,mBAChCyuB,EADgC,KAChBC,EADgB,OAKY1uB,EACjD,GACA,eAPqC,mBAKhC2uB,EALgC,KAKdC,EALc,OASKjrB,oBAAS,GATd,mBAShCiqB,EATgC,KAShBC,EATgB,KAWjCj7B,EAASurB,eACTuI,EAAQ9zB,EAAM,GAZmB,EAaK+Q,mBAAS,IAbd,mBAahCmsC,EAbgC,KAahBC,EAbgB,KAsDvC,OAvCApwC,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACH6uB,EAAqB,CACrC/7B,WAAY,CACVE,aAAc,CACZoB,GAAIyyB,MAJW,QACfhoB,EADe,SAYnBqxC,EAAkBrxC,GAZC,2CAAH,qDAgBpBsqB,KACC,CAACtC,IAEJ/mB,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACf+uB,EAAuB,CAC3Bj8B,WAAY,CACVE,aAAc,CACZoB,GAAIyyB,MAJW,2CAAH,qDAUpBoI,KACC,CAACpI,IAEJxzB,QAAQC,IAAI,mBAAoBw7B,GAEhCz7B,QAAQC,IAAI,cAAeP,GAC3BM,QAAQC,IAAI,cAAes7B,GAGzB,yBAAK38B,UAAU,wBACb,yBAAKA,UAAU,iCACb,4CAEC28B,EAAevvB,MACd4wC,GACAx9C,OAAOC,KAAKu9C,GAAgBt9C,OAAS,GACnC,oCACE,kBAACw9C,GAAD,CACEx4B,sBAAuBoW,EACvBnW,yBAA0BoW,EAC1BpzB,SAAUq1C,EACVD,YAAaE,IAEf,kBAAC,IAAD,CACEluC,QAAS,kBAAMgsB,GAAkB,IACjCz8B,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAHR,UAUR,kBAAC,KAAD,CAAU0C,UAAW,CAAEzP,KAAM,GAAK7N,QAAS2sB,EAAexvB,WACvDwvB,EAAevvB,MACd4wC,KACEx9C,OAAOC,KAAKu9C,GAAgBt9C,OAAS,IACrC,kBAAC,KAAD,CACE4B,YAAY,kBACZO,MAAOmR,KAAMK,yBAIlBsoB,EAAevvB,MACd4wC,GACAx9C,OAAOC,KAAKu9C,GAAgBt9C,OAAS,GACnC,yBAAKV,UAAU,gCACb,yBAAKA,UAAU,qCACb,4BAAKg+C,EAAc,MACnB,4BAAKA,EAAc,aAClBA,EAAc,aACb,2CAEE,8BAAOA,EAAc,cAGxBA,EAAc,QACb,sCAEE,8BAAOA,EAAc,SAIxBA,EAAc,KACb,mCAEE,8BAAOA,EAAc,MAIxBA,EAAc,aACb,sCAEE,8BACGA,EAAc,aACbtnC,IAAOsnC,EAAc,aAAiBhyC,OACpC,0BAMTgyC,EAAc,YACb,6CAEE,8BAAOA,EAAc,aAGxBA,EAAc,YACb,6CAEE,8BAAOA,EAAc,aAIxBA,EAAc,OACb,qCAEE,8BAAOA,EAAc,QAGxBA,EAAc,OACb,qCAEE,8BAAOA,EAAc,cCrLjC/mC,GAAWC,KAAXD,OAkHO+X,GAhHA,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,WAAqBI,GAAwB,EAAjCH,QAAiC,EAAxBG,YAAwB,EAC/Bxd,mBAAS,IADsB,mBACtD9F,EADsD,KAC7CkiB,EAD6C,OAEfpc,mBAAS,IAFM,mBAErCud,GAFqC,WAoC7D,OAhCAvhB,qBAAU,WACR,GAAIwhB,EAAWjiB,MAAQiiB,EAAWrtB,MAAQqtB,EAAWrtB,KAAKtB,OAAS,EAAG,CACpE,IAAM6uB,EAAeF,EAAWrtB,KAAKf,KAAI,SAAC8D,GACxC,MAAO,CACLxF,MAAOwF,EAAM5C,GACbtC,KAAMkF,EAAMlF,SAGhBouB,EAAWsB,QAEXtB,EAAW,MAEZ,CAACoB,IAqBF,oCACE,8BAECA,EAAWliB,WACV,yBACE/M,MAAO,CACLiW,QAAS,SACTrE,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,KAAD,OAIHib,EAAWjiB,QAAUiiB,EAAWrtB,KAAKtB,OAAS,IAC7C,yBACEN,MAAO,CACL4R,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAAC,GAAD,CAAOnR,MAAM,iBAAiBgR,OAAQ,OAIzCob,EAAWjiB,MACViiB,EAAWrtB,MACXqtB,EAAWrtB,KAAKtB,OAAS,GACzBqL,EAAQrL,OAAS,GACf,kBAAC,KAAD,CACE+X,YAAU,EACVrY,MAAO,CAAE4R,MAAO,OAAQ3R,aAAc,OACtCC,YAAY,iBACZoY,iBAAiB,WACjBjZ,SA5DV,SAAkBF,GAChB6vB,EAAmB7vB,GACnB0vB,EAAW1vB,IA2DHkwB,QAnDV,aAoDUpL,OAxDV,aAyDUsK,SAjDV,SAAkBe,KAkDR/W,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOtV,SAASuV,cAAcjX,QAAQ+W,EAAME,gBAAkB,IAG/DuW,EAAWjiB,MACViiB,EAAWrtB,KAAKtB,OAAS,GACzBqL,EAAQ9K,KAAI,SAAC4X,GACX,OAAO,kBAAC,GAAD,CAAQtZ,MAAOsZ,EAAOtZ,OAAQsZ,EAAOhZ,YCe7Co4B,GAxGE,SAAC,GAA4D,IAA1D2S,EAAyD,EAAzDA,aAAcC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,cAAezb,EAAiB,EAAjBA,WAAiB,EAC7Cxd,mBAAS,IADoC,mBACpEqd,EADoE,KAC3DD,EAD2D,KAGrEgc,EAA6B,SAACn7B,GAAO,IAAD,EAClCjQ,EAAOiQ,EAAEzE,OAAOxL,KAChBN,EAAQuQ,EAAEzE,OAAO9L,MAEjB2zC,EAAY,eACbpI,GADa,oBAEfjrC,EAAON,GAFQ,oBAGZurC,EAAc3oC,IAHF,IAUZsU,EAHGo0B,EAAU5pC,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQipC,EAAc3oC,IAK1D+xB,EAAmB,uBACpB2W,EAAUjpC,MAAM,EAAG6U,IADC,CAEvBy8B,GAFuB,aAGpBrI,EAAUjpC,MAAM6U,EAAQ,KAE7Bm0B,EAAa1W,IAGfrmB,qBAAU,WACR,IAAMqlC,EAAY,eACbpI,EADa,CAEhB1oC,IAAK8sB,EACL/sB,GAAI2oC,EAAc3oC,KAOdsU,EAHGo0B,EAAU5pC,KAAI,SAACQ,GAAD,OAAUA,EAAKU,MAAIN,QAAQipC,EAAc3oC,IAK1D+xB,EAAmB,uBACpB2W,EAAUjpC,MAAM,EAAG6U,IADC,CAEvBy8B,GAFuB,aAGpBrI,EAAUjpC,MAAM6U,EAAQ,KAE7Bm0B,EAAa1W,KACZ,CAAChF,IASJ,OACE,oCACE,yBAAKlvB,UAAU,iCACb,wBAAIA,UAAU,yBAAd,SACA,kBAACm+C,GAAD,CACE9uB,WAAYA,EACZH,QAASA,EACTD,WAAYA,IAEd,yBACE7uB,MAAO,CACL0V,UAAW,UAGf,kBAACmd,GAAD,CACE3zB,KAAK,SACLD,MAAM,QACNE,MAAOurC,EAAc7nC,MACrBpD,KAAK,QACLJ,SAAUwrC,IAEZ,kBAAChY,GAAD,CACE3zB,KAAK,SACLD,MAAM,WACNE,MAAOurC,EAAc7mC,KACrBpE,KAAK,WACLJ,SAAUwrC,IAGZ,kBAAChY,GAAD,CACE3zB,KAAK,SACLD,MAAM,QACNE,MAAOurC,EAAcz/B,OACrBxL,KAAK,QACLJ,SAAUwrC,IAGZ,kBAAChY,GAAD,CACE3zB,KAAK,SACLD,MAAM,WACNE,MAAOurC,EAAcz/B,OACrBxL,KAAK,WACLJ,SAAUwrC,OCjFd98B,GAAmBC,MAAaC,MAAM,IAetCwT,GAAwB,SAACvM,GAC7BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAACumB,GAAA,EAAD,CAAoB/oB,MAAO,CAAEoV,MAAO,yBAIxChH,GAAgB,CACpB28B,UAAW,GACX9lC,MAAO,IA2PM8wB,GAjPK,SAAC,GAKP,IAJZzQ,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAylB,EAEW,EAFXA,cACAC,EACW,EADXA,iBACW,EAC0Cn9B,EACnD,GACA,wBAHS,mBACJo9B,EADI,KACeC,EADf,OAM8Br9B,EAAe,GAAI,aANjD,mBAMJmhB,EANI,KAMQlB,EANR,KAQXtgB,qBAAU,YACO,uCAAG,sBAAAE,EAAA,sEACWogB,EAAmB,IAD9B,yDAAH,qDAGfqB,KACC,IAbQ,MAeqB3d,oBAAS,GAf9B,gCAgBuBA,mBAAS,KAhBhC,mBAgBJg5B,EAhBI,KAgBOD,EAhBP,OAiBkB/4B,mBAAS,IAjB3B,gCAkBoBA,mBAAS,KAlB7B,mBAkBJusC,EAlBI,KAkBGC,EAlBH,KAoBXj9C,QAAQC,IAAI,uBAAwBwpC,GAEpC,IAAMj8B,EAAY,uCAAG,WAAOC,EAAaC,GAApB,uBAAAf,EAAA,6DACbuwC,EAAgBF,EAAQA,EAAMp9C,MAAM,KAAK,GAAK,GAC9Cu9C,EAAiBH,EACnBA,EAAMp9C,MAAM,KAAK,IACjBo9C,EAAMp9C,MAAM,KAAK,GAAG,IACO,MAA3Bo9C,EAAMp9C,MAAM,KAAK,GAAG,GAClBo9C,EAAMp9C,MAAM,KAAK,GAAG,GACpBo9C,EAAMp9C,MAAM,KAAK,GACnB,GACEw9C,EACJ3T,GAAaA,EAAUnqC,OAAS,EAC5BmqC,EAAU5pC,KAAI,SAACQ,GACb,OAAO,eACFA,EADL,CAEEg9C,MAAOh9C,EAAKg9C,OAASh9C,EAAKg9C,MAAQ,EAClCC,SAAUj9C,EAAKi9C,UAAYj9C,EAAKi9C,SAAW,EAC3ClQ,MAAO/sC,EAAK+sC,OAAS/sC,EAAK+sC,MAAQ,EAClCmQ,SAAUl9C,EAAKk9C,UAAYl9C,EAAKk9C,SAAW,EAC3Cx8C,GAAG,GAAD,OAAK0oC,EAAUnqC,aAGrB,GACAsB,EAAO,CACXo8C,MAAOG,GAAkBA,EAAiB,GAC1CK,KAAMN,GAAiBA,EAAgB,GACvCz0C,MAAO20C,GAzBU,SA2BWjT,EAAwB,CACpDzlC,KAAM9D,IA5BW,QA2BbwpC,EA3Ba,SAgC+B,OAA3BA,EAAgB9lC,QAvFV4P,OAwF3B4I,EAvFJ7I,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,wBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAqFzC61B,EAAiB,CAAC,aAEdlpC,GAAIqpC,EAAe,KAAW,GAC9BnpC,IAAKmpC,EAAe,KAAW,IAE5BA,IALS,oBAOXJ,KAELt8B,EAAQiZ,YACR6iB,EAAa,IACbjlB,GAAyB,IAEzB9D,KAGF/S,EAAQC,eAAc,GAlDH,iCAvDS,IAACuG,IAuDV,OAAH,wDAqDlBzH,qBAAU,WACR,IAAKy9B,EAAiB,UAAe,CACnC,IAAMx+B,EAAQw+B,EAAiB,MAC/B,GAAIx+B,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,GAEzDF,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,aAOjC,CAACyf,IAEJ,IAAMpjB,EAAe,SAACpY,GACpB6V,GAAyB,IAUrB8lB,EAAyB,WAC7Bb,EAAa,GAAD,oBACPC,GADO,CAEV,CACEzoC,IAAK,GACLq8C,MAAO,KACPC,SAAU,KACVlQ,MAAO,KACPmQ,SAAU,KACVx8C,GAAG,GAAD,OAAK0oC,EAAUnqC,aAUjBm+C,EAAoB,SAACj6C,EAAMg5C,GAC/BS,EAAcT,IAIhB,OACE,kBAAC,IAAD,CACE1uC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,cACCa,aADD,EAECR,OAFD,IAGCD,EAHD,EAGCA,aAGAW,GAND,EAICD,OAJD,EAKCL,QALD,EAMCM,cAND,EAOCC,QAPD,EAQCE,WARD,EASCD,gBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEvP,MAAO,CACL2hB,IAAK,QAEP9e,MAAM,oBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,UAGZjX,MAAO,OACPkQ,UAAW,CACTrS,OAAQ,IACRwG,QAAS,SAGX,wBAAIrW,UAAU,mBAAd,QACA,kBAAC,KAAD,eACEka,OAAO,QACP5Z,YAAa,YACbN,UAAU,iBACVI,MAAO,CACL4R,MAAO,OACP0c,YAAa,QAEfjvB,SAAUo/C,GACLT,GAAS,CACZ5+C,aAAckX,IAAO0nC,MAGzB,yBACEh+C,MAAO,CACL0V,UAAW,UAGf,wBAAI9V,UAAU,mBAAd,UAEA,yBAAKA,UAAU,2BACZ6qC,EAAU5pC,KAAI,SAACyqC,GACd,OACE,kBAAC,GAAD,CACErc,WAAYA,EACZyb,cAAeY,EACfb,UAAWA,EACXD,aAAcA,OAKpB,kBAAC,IAAD,CACE7xB,KAAK,QACLhJ,QAAS07B,EACTrrC,MAAO,CACL4R,MAAO,QACPwnB,UAAW,QACX1jB,UAAW,MACXzV,aAAc,OAEhBf,KAAK,SACLsD,KAAM,kBAACiiB,GAAA,EAAD,OAVR,cAgBF,yBACEzkB,MAAO,CACL0V,UAAW,gBC7PrBgpC,GAAS,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGI5gC,GAA0B,SAAC5I,GAC/BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,kBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAwBvC2G,IAZiB/N,MAAaC,MAAM,CAC1CxO,KAAMuO,MACH/O,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAQoBqc,KAAxBD,QAGFgO,IAH0B/N,KAAhBC,YACG2P,IAAX9B,OAEQ,SAAC,GAA0B,IAAxBloB,EAAuB,EAAvBA,KAAMmzB,EAAiB,EAAjBA,WAAiB,EACVtjB,oBAAS,GADC,gCAEkBA,oBAAS,IAF3B,gCAGO3D,EAC7C,GACA,uBALsC,mBAGjBknB,GAHiB,WAQlC7gB,EAAUC,eAEV6gB,EAAe,uCAAG,WAAOlzB,GAAP,iBAAA4L,EAAA,sEACKqnB,EAAqB,CAC9Cv0B,WAAY,CACVE,aAAc,CACZoB,SAJgB,QAChBmzB,EADgB,SAUsB,OAAxBA,EAAa5vB,SAC/BwY,GAAwB,yBAClBqX,EAAavzB,EAAKge,QAAO,SAACve,GAAD,OAAUA,EAAKU,KAAOA,KACrDgzB,EAAWI,IAbS,2CAAH,sDAyBrB,OACE,oCACE,kBAAC,KAAD,CAMExc,KAAK,QAEL8D,WAAY7a,GAEZ,kBAAC,GAAD,CACEiB,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,8BAAoCqZ,EAAOhb,MAE7C/B,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAMT,kBAAC,GAAD,CACEhB,MAAM,QACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,8BAAoCqZ,EAAOhb,MAE7C/B,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,GAAQ66C,GAAO76C,QAMxB,kBAAC,GAAD,CACEhB,MAAM,eACNga,UAAU,cACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,cACNga,UAAU,aACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,cACNga,UAAU,aACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,iBACNga,UAAU,gBACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEA,UAAU,uBACViD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,kBAAC,KAAD,CACEgK,UAAW,kBAAMsS,EAAgBlY,EAAOhb,KACxCc,MAAM,qBACNkf,OAAO,MACPa,WAAW,MAEX,0BAAMhjB,UAAU,4BACd,kBAAC4iB,GAAA,EAAD,gBAgNH6S,GAnMC,SAAC,GAAe,qBACA5jB,mBAAS,IADV,mBACtB6jB,EADsB,KACbP,EADa,KAG7B/zB,QAAQC,IAAI,gBAAiBq0B,GAHA,MAIUxnB,EAAe,GAAI,mBAJ7B,mBAItBggB,EAJsB,KAIZC,EAJY,KAM7BtgB,qBAAU,YACK,uCAAG,4BAAAE,EAAA,sEACKogB,EAAmB,IADxB,OACRnpB,EADQ,OAGdmwB,EAAWnwB,GAHG,2CAAH,qDAKbwe,KACC,IAb0B,MAeYtV,EAAe,GAAI,UAf/B,gCAgB6B2D,oBAAS,IAhBtC,mBAgBtB6T,EAhBsB,KAgBCC,EAhBD,KAqGvB3jB,EAjBA0zB,GAAWA,EAAQh1B,OAAS,EACdg1B,EAAQz0B,KAAI,SAACQ,GAC3B,MAAO,CACLm9C,KAAMn9C,EAAKm9C,KACXR,MAAO38C,EAAK28C,MAAQU,GAAOr9C,EAAK28C,OAAS,GACzCW,YAAat9C,EAAKs9C,YAClBC,WAAYv9C,EAAKu9C,WACjBC,cAAex9C,EAAKw9C,cACpBC,WAAYz9C,EAAKy9C,WACjBC,cAAe19C,EAAK09C,kBAKZ,GAKhB,OACE,oCACE,yBAAKn/C,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,+CACb,wBAAIA,UAAU,uCAAd,mBAYF,yBACEI,MAAO,CACL8T,QAAS,OACTE,WAAY,WAGbshB,GAAWA,EAAQh1B,OAAS,GAC3B,oCACE,yBACEN,MAAO,CACL8T,QAAS,OACTE,WAAY,SACZ6B,YAAa,SAGf,kBAAC,WAAD,CACEgU,SAAU,mBACVjoB,KAAMA,EACNsK,QAjEF,CACd,CAAEjN,MAAO,OAAQgD,IAAK,QACtB,CAAEhD,MAAO,QAASgD,IAAK,SACvB,CAAEhD,MAAO,eAAgBgD,IAAK,eAC9B,CAAEhD,MAAO,cAAegD,IAAK,cAC7B,CAAEhD,MAAO,iBAAkBgD,IAAK,iBAChC,CAAEhD,MAAO,cAAegD,IAAK,cAC7B,CAAEhD,MAAO,iBAAkBgD,IAAK,mBAuDlB,iBAOA,0BACEjC,MAAO,CACLoV,MAAO,UACPO,WAAY,SAGd,kBAACowB,GAAA,EAAD,SAMR,kBAAC,IAAD,CAEEnmC,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJ1C,aAUJ,yBAAK3lB,UAAU,uCACZkuB,EAAS9gB,MAAQsoB,EAAQh1B,OAAS,GACjC,kBAAC,GAAD,CAASy0B,WAAYA,EAAYnzB,KAAM0zB,IAExCxH,EAAS/gB,WAAa,kBAACoe,GAAD,MAEtB2C,EAAS9gB,QAAUsoB,EAAQh1B,OAAS,IACnC,yBACEN,MAAO,CACL0V,UAAW,UAGb,kBAAC,KAAD,CACExT,YAAY,mBACZO,MAAOmR,KAAMK,4BAOvB,kBAAC,GAAD,CACE+2B,cAAe1V,EACf2V,iBAAkBlW,EAClBzP,sBAAuBA,EACvBC,yBAA0BA,MCtY1BxJ,GAAwBC,KAAxBD,OAGF2iC,IAH0B1iC,KAAhBC,YACG2P,IAAX9B,OAEO,CACb,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QA0Pa6L,GAnPQ,SAACzhB,GAAkB,IAAD,EACQpG,EAC7C,GACA,yBAHqC,mBAChCyuB,EADgC,KAChBC,EADgB,OAKY1uB,EACjD,GACA,eAPqC,mBAKhC2uB,EALgC,KAKdC,EALc,KAUjCvoB,EAAUC,eAVuB,EAWK3C,oBAAS,GAXd,gCAYGA,mBAAS,KAZZ,mBAYhCmqB,EAZgC,KAYjBU,EAZiB,KAcvCt7B,QAAQC,IAAI,6BAA8B26B,GAE1C,IAAMl7B,EAASurB,eACTuI,EAAQ9zB,EAAM,GAwCpB,OAtCA+M,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACH6uB,EAAqB,CACrC/7B,WAAY,CACVE,aAAc,CACZoB,GAAIyyB,MAJW,QACfhoB,EADe,SAYnB8vB,EAAiB9vB,GAZE,2CAAH,qDAgBpBsqB,KACC,CAACtC,IAEJ/mB,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACf+uB,EAAuB,CAC3Bj8B,WAAY,CACVE,aAAc,CACZoB,GAAIyyB,MAJW,2CAAH,qDAUpBoI,KACC,CAACpI,IAEJxzB,QAAQC,IAAI,mBAAoBw7B,GAEhCz7B,QAAQC,IAAI,cAAeP,GAGzB,yBAAKd,UAAU,wBACb,yBAAKA,UAAU,iCACb,qDAEF,kBAAC,KAAD,CAAUstB,UAAW,CAAEzP,KAAM,GAAK7N,QAAS2sB,EAAexvB,WACvDwvB,EAAevvB,MACd4uB,KACEx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,IACpC,kBAAC,KAAD,CACE4B,YAAY,mBACZO,MAAOmR,KAAMK,yBAIlBsoB,EAAevvB,MACd4uB,GACAx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAClC,yBAAKV,UAAU,gCACb,yBAAKA,UAAU,qCACZg8B,EAAa,MACZ,oCAEE,8BAAOA,EAAa,OAGvBA,EAAa,OACZ,qCAEE,8BACGA,EAAa,OAAa8iB,GAAO9iB,EAAa,SAKpDA,EAAa,aACZ,4CAEE,8BAAOW,EAAc,cAIxBX,EAAa,YACZ,2CAEE,8BAAOA,EAAa,aAIvBA,EAAa,eACZ,8CAEE,8BAAOA,EAAa,gBAIvBA,EAAa,YACZ,2CAEE,8BAAOA,EAAa,aAIvBA,EAAa,eACZ,8CAEE,8BAAOA,EAAa,mBAQjCW,EAAevvB,MACduvB,EAAe36B,MACfxB,OAAOC,KAAKk8B,EAAe36B,MAAMtB,OAAS,GACxC,oCACE,yBAAKV,UAAU,iCACb,wCAKR,yBAAKA,UAAU,8BACZ28B,EAAevvB,MACduvB,EAAe36B,MACfxB,OAAOC,KAAKk8B,EAAe36B,MAAMtB,OAAS,GAC1Ci8B,EAAe36B,KAAf,SACE26B,EAAe36B,KAAf,MAA6BtB,OAAS,IACtC,yBACEN,MAAO,CACL0V,UAAW,UAGb,kBAAC,KAAD,CACExT,YAAY,0CACZO,MAAOmR,KAAMK,0BAKpBsoB,EAAevvB,MACduvB,EAAe36B,MACfxB,OAAOC,KAAKk8B,EAAe36B,MAAMtB,OAAS,GAC1Ci8B,EAAe36B,KAAf,OACA26B,EAAe36B,KAAf,MAA6BtB,OAAS,GACpC,oCACE,kBAAC,KAAD,CACEN,MAAO,CACLmtB,WAAY,OACZltB,aAAc,iBACdmtB,SAAU,SACVvb,UACE,+FAEJ8G,KAAK,QACL8D,WAAY8f,EAAe36B,KAAf,MACZ8a,YAAa,OACbC,YAAa,SAACC,GACZ,MAAO,CACL5c,MAAO,CACLoV,MAAO,qBAKb,kBAAC,GAAD,CACEvS,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,uBAA6BqZ,EAAOhb,MAGtC/B,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAMT,kBAAC,GAAD,CACEhB,MAAM,eACNga,UAAU,cACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,WACNga,UAAU,WACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,QACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,WACNga,UAAU,WACV5a,IAAI,KACJrC,UAAU,8BCjQtBmO,GAAmBC,MAAaC,MAAM,IAUtCwT,GAAwB,SAACvM,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAIzChH,GAAgB,CACpB1E,MAAO,GACP/B,OAAQ,MA+PKouB,GApPK,SAAC,GAMP,IALZzQ,EAKW,EALXA,sBACAC,EAIW,EAJXA,yBACA+P,EAGW,EAHXA,QACAP,EAEW,EAFXA,WACAjzB,EACW,EADXA,SACW,EAC8BgM,EAAe,GAAI,iBADjD,mBACJmuB,EADI,KACSC,EADT,OAEqBzqB,oBAAS,GAF9B,mBAEJ2M,EAFI,KAEMF,EAFN,OAG6BzM,oBAAS,GAHtC,mBAGJ2kB,EAHI,KAGUC,EAHV,OAIkB5kB,mBAAS,IAJ3B,mBAIJhN,EAJI,KAIE0sB,EAJF,OAKyB1f,mBAAS,IALlC,mBAKJhH,EALI,UASXgD,qBAAU,WACL3L,GAAYA,EAAS0C,MACpB2sB,EAAarvB,EAAS0C,QAE1B,CAAC1C,IAbQ,MAgB0CgM,EACnD,GACA,aAlBS,mBAgBegyB,GAhBf,aAqB6CruB,mBAAS,IArBtD,6BAuBXhE,qBAAU,YACU,uCAAG,sBAAAE,EAAA,sEACWmyB,EAAwB,IADnC,yDAAH,qDAGlBK,KACC,IAEH,IAAM3xB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAf,EAAA,sEACKuuB,EAAkB,CAC5Cz7B,WAAY,CACXE,aAAc,CACboB,GAAID,EAASC,IAAMD,EAASE,MAG1B0D,KAAM,CACJgE,MAAO+E,EAAO/E,MAAM6d,OACpB5f,OAAQ8G,EAAO9G,OACfnD,KAAMC,EACNgF,MAAOgB,KAXQ,QACb0xB,EADa,SAgBmB,OAArBA,EAAU72B,QAjFE4P,OAkF3B4I,EAjFJ7I,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,kBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAqFxCiB,EAJkB,WACvB,OAAOif,EAAQz0B,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQK,EAASC,IAAMD,EAASE,KAGvD84B,GAGRxZ,EAAclhB,OAAOmhB,OAAO,GAAI+T,EAAQjf,GAA1BjW,OAAA,IAAAA,CAAA,GAAuC+7B,IACrDH,EAZyC,uBAYrB1G,EAAQ9zB,MAAM,EAAG6U,IAZI,CAYIiL,GAZJ,aAYoBgU,EAAQ9zB,MAAM6U,EAAQ,KACzF0e,EAAWiH,GAENttB,EAAQiZ,YACRpC,GAAyB,IAEzB9D,KAGF/S,EAAQC,eAAc,GArCH,iCAjES,IAACuG,IAiEV,OAAH,wDAwClBzH,qBAAU,WACR,IAAKwuB,EAAW,UAAe,CAC7B,IAAMvvB,EAAQuvB,EAAW,MACzB,GAAIvvB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EACvDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,WAQ7BwQ,EAAW,WAAiB77B,OAAOC,KAAK47B,EAAYr6B,MAAMtB,OAAS,GAClE27B,EAAW,KAAX,SAUL,CAACA,IAEJ,IAAMnU,EAAe,SAACpY,GACpB6V,GAAyB,IAUrBg4B,EAAmB,SAAC/4C,EAAMg5C,GAC9BrsB,EAAaqsB,IAIf,OACE,kBAAC,IAAD,CACE1uC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,GAAP,GAAyBtM,KAErC,gBACCmN,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEvP,MAAO,CACL2hB,IAAK,QAEP9e,MAAM,kBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,WAIZ,kBAAChqB,EAAD,CACEI,MAAM,QACNE,MAAOsP,EAAO/E,MACdjK,KAAK,QACLF,QACG6P,EAAQ1F,OAASwF,EAAOxF,QACvByF,GAAgB8sB,EAAYvvB,MAAZ,YAEpBlN,YACG4P,EAAQ1F,OAASwF,EAAOxF,QACvByF,GAAgB8sB,EAAYvvB,MAAZ,YAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,YAIpB,kBAACxQ,EAAD,CACEI,MAAM,SACNE,MAAOsP,EAAO9G,OACdlI,KAAK,SACLP,KAAM,SACNS,IAAK,EACLJ,QACG6P,EAAQzH,QAAUuH,EAAOvH,SACxBwH,GAAgB8sB,EAAYvvB,MAAZ,aAEpBlN,YACG4P,EAAQzH,QAAUuH,EAAOvH,SACxBwH,GAAgB8sB,EAAYvvB,MAAZ,aAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC2H,GAAD,CACExS,KAAMC,EACNvE,YAAY,aACZjB,MAAM,OACNI,SAAUk+C,IAGZ,yBACEv9C,MAAO,CACL0V,UAAW,WAYjB,kBAAC,GAAD,CACEuI,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SC3Q5BpQ,GAAmBC,MAAaC,MAAM,IAUtCwT,GAAwB,SAACvM,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAIzChH,GAAgB,CACpB1E,MAAO,GACP/B,OAAQ,MA4OKouB,GAlOK,SAAC,GAKP,IAJZzQ,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACA+P,EAEW,EAFXA,QACAP,EACW,EADXA,WACW,EAC8BjnB,EAAe,GAAI,cADjD,mBACJmuB,EADI,KACSC,EADT,OAEqBzqB,oBAAS,GAF9B,mBAEJ2M,EAFI,KAEMF,EAFN,OAG6BzM,oBAAS,GAHtC,mBAGJ2kB,EAHI,KAGUC,EAHV,OAIkB5kB,mBAAS,IAJ3B,mBAIJhN,EAJI,KAIE0sB,EAJF,OAKyB1f,mBAAS,IALlC,mBAKJhH,EALI,aAO0CqD,EACnD,GACA,cATS,mBAOegyB,GAPf,aAY6CruB,mBAAS,IAZtD,6BAcXhE,qBAAU,YACU,uCAAG,sBAAAE,EAAA,sEACWmyB,EAAwB,IADnC,yDAAH,qDAGlBK,KACC,IAEH,IAAM3xB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACKuuB,EAAkB,CACxCx2B,KAAM,CACJgE,MAAO+E,EAAO/E,MAAM6d,OACpB5f,OAAQ8G,EAAO9G,OACfnD,KAAMC,EACNgF,MAAOgB,KANQ,QACb0xB,EADa,SAWmB,OAArBA,EAAU72B,QAjEE4P,OAkE3B4I,EAjEJ7I,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,kBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAgEzC2f,EAAW,CAAC,eAGLoH,EAHG,CAINp6B,GAAIo6B,EAAS,KAAW,GACxBl6B,IAAKk6B,EAAS,KAAW,MALnB,oBAOL7G,KAEL5mB,EAAQiZ,YACRpC,GAAyB,IAEzB9D,KAGF/S,EAAQC,eAAc,GA7BH,iCAtDS,IAACuG,IAsDV,OAAH,wDAgClBzH,qBAAU,WACR,IAAKwuB,EAAW,UAAe,CAC7B,IAAMvvB,EAAQuvB,EAAW,MACzB,GAAIvvB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EACvDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,WAQ7BwQ,EAAW,WAAiB77B,OAAOC,KAAK47B,EAAYr6B,MAAMtB,OAAS,GAClE27B,EAAW,KAAX,SAUL,CAACA,IAEJ,IAAMnU,EAAe,SAACpY,GACpB6V,GAAyB,IAUrBg4B,EAAmB,SAAC/4C,EAAMg5C,GAC9BrsB,EAAaqsB,IAIf,OACE,kBAAC,IAAD,CACE1uC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,MAEnB,gBACCa,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEvP,MAAO,CACL2hB,IAAK,QAEP9e,MAAM,kBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,WAIZ,kBAAChqB,EAAD,CACEI,MAAM,QACNE,MAAOsP,EAAO/E,MACdjK,KAAK,QACLF,QACG6P,EAAQ1F,OAASwF,EAAOxF,QACvByF,GAAgB8sB,EAAYvvB,MAAZ,YAEpBlN,YACG4P,EAAQ1F,OAASwF,EAAOxF,QACvByF,GAAgB8sB,EAAYvvB,MAAZ,YAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,YAIpB,kBAACxQ,EAAD,CACEI,MAAM,SACNE,MAAOsP,EAAO9G,OACdlI,KAAK,SACLP,KAAM,SACNS,IAAK,EACLJ,QACG6P,EAAQzH,QAAUuH,EAAOvH,SACxBwH,GAAgB8sB,EAAYvvB,MAAZ,aAEpBlN,YACG4P,EAAQzH,QAAUuH,EAAOvH,SACxBwH,GAAgB8sB,EAAYvvB,MAAZ,aAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC2H,GAAD,CACExS,KAAMC,EACNvE,YAAY,aACZjB,MAAM,OACNI,SAAUk+C,KAiBd,kBAAC,GAAD,CACEt/B,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SC9O5BL,GAA0B,SAAC5I,GAC/BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,kBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAwBvC2G,IAZiB/N,MAAaC,MAAM,CAC1CxO,KAAMuO,MACH/O,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAQoBqc,KAAxBD,QACA+N,IADwB9N,KAAhBC,YACG2P,IAAX9B,QAEFC,GAAU,SAAC,GAA0B,IAAxBnoB,EAAuB,EAAvBA,KAAMmzB,EAAiB,EAAjBA,WAAiB,EACVtjB,oBAAS,GADC,mBACjCuM,EADiC,KACxBC,EADwB,OAEkBxM,oBAAS,GAF3B,mBAEjCuY,EAFiC,KAEVC,EAFU,OAGOnc,EAC7C,GACA,iBALsC,mBAGjBknB,GAHiB,WAQlC7gB,EAAUC,eAEV6gB,EAAe,uCAAG,WAAOlzB,GAAP,iBAAA4L,EAAA,sEACKqnB,EAAqB,CAC9Cv0B,WAAY,CACVE,aAAc,CACZoB,SAJgB,QAChBmzB,EADgB,SAUsB,OAAxBA,EAAa5vB,SAC/BwY,GAAwB,mBAClBqX,EAAavzB,EAAKge,QAAO,SAACve,GAAD,OAAUA,EAAKU,KAAOA,KACrDgzB,EAAWI,IAbS,2CAAH,sDAyBrB,OACE,oCACE,kBAAC,KAAD,CAMExc,KAAK,QAEL8D,WAAY7a,GAEZ,kBAAC,GAAD,CACEiB,MAAM,QACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,yBAA+BqZ,EAAOhb,KAEtCkoB,EAAyBlN,IAE3B/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAMT,kBAAC,GAAD,CACEhB,MAAM,SACNga,UAAU,SACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,4BAAK9U,GAAQyS,IAAOzS,GAAM+H,OAAO,6BAKvC,kBAAC,GAAD,CACEhM,UAAU,uBACViD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGvC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,gBAC7B,0BACEjD,UAAU,WACV+P,QAAS,WACPsO,GAAW,GACXgM,EAAyBlN,KAG3B,kBAACyN,GAAA,EAAD,SAKN,kBAAC,KAAD,CACE7H,UAAW,kBAAMsS,EAAgBlY,EAAOhb,KACxCc,MAAM,qBACNkf,OAAO,MACPa,WAAW,MAEX,0BAAMhjB,UAAU,4BACd,kBAAC4iB,GAAA,EAAD,aAQXwH,GACC,kBAAC,GAAD,CACEsL,QAAS1zB,EACTmzB,WAAYA,EACZxP,yBAA0BtH,EAC1BqH,sBAAuBtH,EACvBlc,SAAUkoB,MAqMLqL,GA5LC,SAAC,GAAe,qBACA5jB,mBAAS,IADV,mBACtB6jB,EADsB,KACbP,EADa,OAGUjnB,EAAe,GAAI,eAH7B,mBAGtBggB,EAHsB,KAGZC,EAHY,KAK7BtgB,qBAAU,YACK,uCAAG,4BAAAE,EAAA,sEACKogB,EAAmB,IADxB,OACRnpB,EADQ,OAGdmwB,EAAWnwB,GAHG,2CAAH,qDAKbwe,KACC,IAZ0B,MAcYtV,EAAe,GAAI,UAd/B,gCAe6B2D,oBAAS,IAftC,mBAetB6T,EAfsB,KAeCC,EAfD,KAiGvB3jB,EAfD0zB,GAAWA,EAAQh1B,OAAS,EACbg1B,EAAQz0B,KAAI,SAAAQ,GAC1B,MAAO,CACLqI,MAAOrI,EAAKqI,MACZ/B,OAAQtG,EAAKsG,OACbnD,KAAOnD,EAAKmD,KAAO8R,IAAOjV,EAAKmD,MAAMoH,OAAO,wBAA0B,OAMhE,GASd,OACE,oCACE,yBAAKhM,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,+CACb,wBAAIA,UAAU,uCAAd,YAEA,kBAAC,GAAD,CACEqrB,aAAa,EACbrrB,UAAU,qBACVM,YAAY,mBACZquB,SAAU,SAACpvB,GAAD,OAlDD,SAACA,GACpB,GAAI2uB,EAASlsB,KAAKtB,OAAS,EAAG,CAC5B,IAAMk1B,EAAa1H,EAASlsB,KAAKge,QAAO,SAACve,GAAD,OACtCA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBAEzCqc,EAAWS,IA6CkBtK,CAAa/rB,OAKxC,yBAAKa,MAAO,CACV8T,QAAQ,OACRE,WAAW,WAGZshB,GAAWA,EAAQh1B,OAAS,GAC3B,oCACA,yBAAKN,MAAO,CACZ8T,QAAQ,OACRE,WAAW,SACX6B,YAAa,SAEf,kBAAC,WAAD,CACCgU,SAAU,eACVjoB,KAAMA,EAAMsK,QA1DH,CACd,CAAEjN,MAAO,QAASgD,IAAK,SACvB,CAAEhD,MAAO,SAAUgD,IAAK,UACxB,CAAEhD,MAAO,OAAQgD,IAAK,UAqDlB,iBAKA,0BAAMjC,MAAO,CACXoV,MAAM,UACNO,WAAY,SAEd,kBAACowB,GAAA,EAAD,SAKE,kBAAC,IAAD,CAEEnmC,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJ1C,aAaF,yBAAK3lB,UAAU,uCACZkuB,EAAS9gB,MAAQsoB,EAAQh1B,OAAS,GACjC,kBAAC,GAAD,CAASy0B,WAAYA,EAAYnzB,KAAM0zB,IAExCxH,EAAS/gB,WAAa,kBAACoe,GAAD,MAEtB2C,EAAS9gB,QAAUsoB,EAAQh1B,OAAS,IACnC,yBACEN,MAAO,CACL0V,UAAW,UAGb,kBAAC,KAAD,CACExT,YAAY,mBACZO,MAAOmR,KAAMK,4BAOvB,kBAAC+qC,GAAD,CACE1pB,QAASA,EACTP,WAAYA,EACZzP,sBAAuBA,EACvBC,yBAA0BA,MC7W5BxX,GAAmBC,MAAaC,MAAM,IAUtCwT,GAAwB,SAACvM,GAC7BD,KAAavI,MAAM,CACjBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAIzChH,GAAgB,CACpB1E,MAAO,GACP/B,OAAQ,MAyPKouB,GA7OK,SAAC,GAKP,IAJZzQ,EAIW,EAJXA,sBACAC,EAGW,EAHXA,yBACAzjB,EAEW,EAFXA,SACAw6B,EACW,EADXA,iBACW,EAC8BxuB,EAAe,GAAI,iBADjD,mBACJmuB,EADI,KACSC,EADT,OAEqBzqB,oBAAS,GAF9B,mBAEJ2M,EAFI,KAEMF,EAFN,OAG6BzM,oBAAS,GAHtC,mBAGJ2kB,EAHI,KAGUC,EAHV,OAIkB5kB,mBAAS,IAJ3B,mBAIJhN,EAJI,KAIE0sB,EAJF,OAKyB1f,mBAAS,IALlC,mBAKJhH,EALI,UASXgD,qBAAU,WACL3L,GAAYA,EAAS0C,MACpB2sB,EAAarvB,EAAS0C,QAE1B,CAAC1C,IAbQ,MAgB0CgM,EACnD,GACA,aAlBS,mBAgBegyB,GAhBf,aAqB6CruB,mBAAS,IArBtD,6BAuBXhE,qBAAU,YACU,uCAAG,sBAAAE,EAAA,sEACWmyB,EAAwB,IADnC,yDAAH,qDAGlBK,KACC,IAEH,IAAM3xB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACKuuB,EAAkB,CAC5Cz7B,WAAY,CACXE,aAAc,CACboB,GAAID,EAASC,IAAMD,EAASE,MAG1B0D,KAAM,CACJgE,MAAO+E,EAAO/E,MAAM6d,OACpB5f,OAAQ8G,EAAO9G,OACfnD,KAAMC,EACNgF,MAAOgB,KAXQ,QACb0xB,EADa,SAgBmB,OAArBA,EAAU72B,QAjFE4P,OAkF3B4I,EAjFJ7I,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,kBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAgFzCknB,EAAiB,eACVx6B,EADS,GAGXq6B,IAGLztB,EAAQiZ,YACRpC,GAAyB,IAEzB9D,KAGF/S,EAAQC,eAAc,GA/BH,iCAjES,IAACuG,IAiEV,OAAH,wDAkClBzH,qBAAU,WACR,IAAKwuB,EAAW,UAAe,CAC7B,IAAMvvB,EAAQuvB,EAAW,MACzB,GAAIvvB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EACvDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eAOTtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACnCF,OAAOqO,OAAO/B,EAAK,OACnB,IACCnJ,SAAQ,SAACkoB,EAAKC,GACnB,GAAmB,kBAARD,EACThK,GAAsBgK,QACjB,GAAmB,kBAARA,EAAkB,CAClC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACtBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAACkoB,GACZhK,GAAsBgK,WAQ7BwQ,EAAW,WAAiB77B,OAAOC,KAAK47B,EAAYr6B,MAAMtB,OAAS,GAClE27B,EAAW,KAAX,SAUL,CAACA,IAEJ,IAAMnU,EAAe,SAACpY,GACpB6V,GAAyB,IAUrBg4B,EAAmB,SAAC/4C,EAAMg5C,GAC9BrsB,EAAaqsB,IAIf,OACE,kBAAC,IAAD,CACE1uC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eAAOA,GAAP,GAAyBtM,KAErC,gBACCmN,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OAEAC,GAND,EAKCN,QALD,EAMCM,cACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYC,oCACE,kBAAC,KAAD,CACEvP,MAAO,CACL2hB,IAAK,QAEP9e,MAAM,kBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACbhZ,QAAST,EACT0Z,SAAU,WAIZ,kBAAChqB,EAAD,CACEI,MAAM,QACNE,MAAOsP,EAAO/E,MACdjK,KAAK,QACLF,QACG6P,EAAQ1F,OAASwF,EAAOxF,QACvByF,GAAgB8sB,EAAYvvB,MAAZ,YAEpBlN,YACG4P,EAAQ1F,OAASwF,EAAOxF,QACvByF,GAAgB8sB,EAAYvvB,MAAZ,YAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,YAIpB,kBAACxQ,EAAD,CACEI,MAAM,SACNE,MAAOsP,EAAO9G,OACdlI,KAAK,SACLP,KAAM,SACNS,IAAK,EACLJ,QACG6P,EAAQzH,QAAUuH,EAAOvH,SACxBwH,GAAgB8sB,EAAYvvB,MAAZ,aAEpBlN,YACG4P,EAAQzH,QAAUuH,EAAOvH,SACxBwH,GAAgB8sB,EAAYvvB,MAAZ,aAEpBrN,SAAU,SAACqQ,GACTT,EAAaS,GACbL,EAAgB,aAIpB,kBAAC2H,GAAD,CACExS,KAAMC,EACNvE,YAAY,aACZjB,MAAM,OACNI,SAAUk+C,IAGZ,yBACEv9C,MAAO,CACL0V,UAAW,WAYjB,kBAAC,GAAD,CACEuI,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCtHnBwX,IA5IiB3Z,KAAxBD,OAAwBC,KAAhBC,YACG2P,IAAX9B,OAMe,SAAC5V,GAAkB,IAAD,EACQpG,EAC7C,GACA,iBAHqC,mBAChCyuB,EADgC,KAChBC,EADgB,OAKY1uB,EACjD,GACA,eAPqC,mBAKhC2uB,EALgC,KAKdC,EALc,OASKjrB,oBAAS,GATd,mBAShCiqB,EATgC,KAShBC,EATgB,OAUElqB,mBAAS,IAVX,mBAUhCmqB,EAVgC,KAUlBU,EAVkB,KAYjC57B,EAASurB,eACTuI,EAAQ9zB,EAAM,GA2CpB,OAzCA+M,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACH6uB,EAAqB,CACrC/7B,WAAY,CACVE,aAAc,CACZoB,GAAIyyB,MAJW,QACfhoB,EADe,SAYnB8vB,EAAiB9vB,GAZE,2CAAH,qDAmBpBsqB,KACC,CAACtC,IAEJ/mB,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACf+uB,EAAuB,CAC3Bj8B,WAAY,CACVE,aAAc,CACZoB,GAAIyyB,MAJW,2CAAH,qDAUpBoI,KACC,CAACpI,IAEJxzB,QAAQC,IAAI,mBAAoBw7B,GAEhCz7B,QAAQC,IAAI,cAAeP,GAGzB,yBAAKd,UAAU,wBACb,yBAAKA,UAAU,iCACb,8CAEC28B,EAAevvB,MACd4uB,GACAx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAClC,oCACE,kBAAC2+C,GAAD,CACE35B,sBAAuBoW,EACvBnW,yBAA0BoW,EAC1B75B,SAAU85B,EACVU,iBAAkBA,IAEpB,kBAAC,IAAD,CACE3sB,QAAS,kBAAMgsB,GAAkB,IACjCz8B,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAHR,UAUR,kBAAC,KAAD,CAAU0C,UAAW,CAAEzP,KAAM,GAAK7N,QAAS2sB,EAAexvB,WACvDwvB,EAAevvB,MACd4uB,KACEx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,IACpC,kBAAC,KAAD,CACE4B,YAAY,mBACZO,MAAOmR,KAAMK,yBAIlBsoB,EAAevvB,MACd4uB,GACAx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAClC,yBAAKV,UAAU,gCACb,yBAAKA,UAAU,qCACZg8B,EAAa,OACZ,qCAEE,8BAAOA,EAAa,QAGvBA,EAAa,QACZ,sCAEE,8BAAOA,EAAa,SAGvBA,EAAa,MACZ,oCAEE,8BACGW,EAAc,KAAd,MACCjmB,IAAOimB,EAAc,KAAd,MAAgC3wB,OACrC,0BAKTgwB,EAAc,KACb,iDAEE,8BAAOA,EAAa,aCzJhCrO,GAAiBC,KAAjBD,aACAzD,GAAWjrB,IAAXirB,OAkNO2D,GAzMF,SAAC,GAKA,IAJZC,EAIW,EAJXA,UACAC,EAGW,EAHXA,gBACAC,EAEW,EAFXA,aAEW,EACmBnc,mBAAS,IAD5B,mBACJ9F,EADI,KACKkiB,EADL,OAEkCpc,mBAAS,IAF3C,gCAG4B3D,EAAe,GAAI,mBAH/C,mBAGJggB,EAHI,KAGMC,EAHN,OAI2Btc,mBAAS,IAJpC,mBAIJuc,EAJI,KAISC,EAJT,KAyBXxgB,qBAAU,WAER,GADAzM,QAAQC,IAAI,WACR6sB,EAASlsB,MAAQksB,EAASlsB,KAAKtB,OAAS,GAAKstB,EAAattB,OAAS,EAAG,CACxE,IAAM4tB,EAAsBN,EAAa/sB,KAAI,SAACQ,GAC5C,IAAM8sB,EAAmBL,EAASlsB,KAAKof,MACrC,SAAC/a,GAAD,OAASA,EAAIlE,KAAOV,KAEtB,GAAI8sB,EACF,OAAOA,EAAiB1uB,QAG5BkuB,EAAgBO,MAEjB,CAACJ,IAGJ9sB,QAAQC,IAAI,mBAAmB2sB,GAC/BngB,qBAAU,YACK,uCAAG,8BAAAE,EAAA,sEACWogB,EAAmB,CAC1CttB,WAAY,CACVC,OAAQ,CACNmqB,eAAe,MAJP,QACRuD,EADQ,SAUIA,EAAW9tB,OAAS,IAE9B+tB,EAAaD,EAAWvtB,KAAI,SAACiH,GACjC,OAAOA,EAAIrI,QAEbouB,EAAWQ,IAfC,2CAAH,qDAoBbjL,KACC,IAiDH,OAJApiB,QAAQC,IAAI,iBAAkB6sB,GAK5B,oCAEGA,EAAS/gB,WACR,yBAAK/M,MAAO,CACViW,QAAS,SACTrE,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,KAAD,OAMH8Z,EAAS9gB,QAAU8gB,EAASlsB,KAAKtB,OAAS,IACzC,yBAAKN,MAAO,CACV4R,MAAO,OACPiC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAEZ,kBAAC,GAAD,CAAOnR,MAAM,gBAAgBgR,OAAQ,OAOxCia,EAAS9gB,MAAQ8gB,EAASlsB,KAAKtB,OAAS,GAAKqL,EAAQrL,OAAS,GAC7D,oCACE,yBAAKV,UAAU,8CACb,kBAAC,GAAD,CACEgS,MAAO,MACP5R,MAAO,CACL6T,OAAQ,OACR5T,aAAc,iBACdquB,YAAa,mBAEf3V,KAAK,SACLzY,YAAY,oBACZquB,SAAU,SAACpvB,GAAD,OAAW6B,QAAQC,IAAI9B,IACjCE,SAxEW,SAACqQ,GAGtB,GAFAue,EAAeve,EAAEzE,OAAO9L,OAED,KAAnBuQ,EAAEzE,OAAO9L,OACX,GAAI2uB,EAASlsB,MAAQksB,EAASlsB,KAAKtB,OAAS,EAAG,CAE7C,IAAMkuB,EAAgBV,EAASlsB,KAAKf,KAAI,SAACoF,GAAD,OAASA,EAAIxG,QACrDouB,EAAWW,QAER,CACL,IAAMC,EACJ9iB,EAAQrL,OAAS,EACbqL,EAAQiU,QAAO,SAACnH,GAChB,OAAOA,EAAOC,cAAc3X,SAASitB,EAAYtV,kBAEjD,GAENmV,EAAWY,QA2DN9iB,EAAQ9K,KAAI,SAAAiH,GAAG,OACd,oCACE,kBAAC,GAAD,CACE7F,IAAK6F,EACL+f,QAAS+F,EAAansB,QAAQqG,IAAQ,EACtCzI,SAAU,SAAAwoB,GAAO,OAjKV,SAAC/f,EAAK+f,GACzB,IAAM6G,EAAmB7G,EAAO,uBAAO+F,GAAP,CAAqB9lB,IAAO8lB,EAAahO,QAAO,SAAA+O,GAAC,OAAIA,IAAM7mB,KAG3F,GAFA6lB,EAAgBe,GAEZZ,EAAS9gB,MAAQ8gB,EAASlsB,KAAKtB,OAAS,GAAKouB,EAAiBpuB,OAAS,EAAG,CAC5E,IAAM4tB,EAAsBQ,EAAiB7tB,KAAI,SAACQ,GAChD,IAAM8sB,EAAmBL,EAASlsB,KAAKof,MACrC,SAAC/a,GAAD,OAASA,EAAIxG,KAAKiZ,gBAAkBrX,EAAKqX,iBAE3C,GAAIyV,EACF,OAAOA,EAAiBpsB,MAG5B2rB,EAAUQ,IAoJqBjf,CAAanH,EAAK+f,KAEtC/f,UC5KXiG,IAJa+I,KAAXD,OAIiB7I,MAAaC,MAAM,CAC3CvH,UAAWsH,MACT/O,MAAM,cACNF,WACAY,IAAI,EAAG,+CACTgH,SAAUqH,MACR/O,MAAM,YACNF,WACAY,IAAI,EAAG,8CACToH,MAAOiH,MACLjP,SAAS,sCACT6+B,IAAI,GAAI,uCACVzvB,SAAUH,MACR/O,MAAM,YACNF,WACAY,IAAI,EAAG,4CAETmH,MAAOkH,MAAa/O,MAAM,SAAS6H,MAAM,iCAMpCsH,GAAgB,CACrBrH,MAAO,GACPD,MAAO,GACPJ,UAAW,GACXC,SAAU,GACV+B,QAAS,GACTm1B,QAAS,GACT1vB,SAAU,GACVhH,KAAM,GACNwB,WAAY,GACZC,aAAc,IAaT6Y,GAAwB,SAACvM,GAC9BD,KAAavI,MAAM,CAClBwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBA0f9BiQ,GA9eQ,SAAC,GAA+F,IAA7FC,EAA4F,EAA5FA,sBAAuBC,EAAqE,EAArEA,yBAA0BuY,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,gBAA6B,EAElEjwB,EAAe,GAAI,aAF+C,mBAE9GkwB,EAF8G,KAE5FC,EAF4F,OAG7DxsB,mBAAS,IAHoD,mBAG9GysB,EAH8G,aAInEzsB,mBAAS,KAJ0D,gCAMzEA,mBAAS,KANgE,mBAM9F8sB,GAN8F,aAO/E9sB,mBAAS,IAPsE,mBAOjGgtB,GAPiG,aASlE3wB,EAClD,GACA,eAXoH,mBAS5F6wB,GAT4F,aAcxE7wB,EAAe,GAAI,YAdqD,mBAc9G8wB,EAd8G,KAc/FC,EAd+F,OAgBzFptB,mBAAS,IAhBgF,mBAgB9Guf,EAhB8G,KAgBtGtD,EAhBsG,OAiB7Ejc,mBAAS,IAjBoE,mBAiB9Gmc,EAjB8G,KAiBhGD,EAjBgG,KAsB/Gnf,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEAESswB,EAAuB,CAEnDv4B,KAAM,CACLqB,MAAO0H,EAAO1H,MACdD,MAAO2H,EAAO3H,MACdqH,SAAUM,EAAON,SACjBzF,QAAS+F,EAAO/F,QAChBhC,UAAW+H,EAAO/H,UAClBC,SAAU8H,EAAO9H,SACjBQ,KAAMsH,EAAOtH,KACbwB,WAAY8F,EAAO9F,WACnBC,aAAc6F,EAAO7F,aACrBs2C,WAAYluB,KAdM,QAEd8N,EAFc,SAoB4B,OAA1BA,EAAex5B,QAGpCy4B,EAAgB,CAAC,aAChBh8B,GAAI+8B,EAAc,KAAW,GAC7B78B,IAAK68B,EAAc,KAAW,GAC9Br/B,KAAMq/B,EAAc,UAAgB,IAAMA,EAAc,UAErDA,IALW,oBAMVhB,KACLvY,GAAyB,GACzB7W,EAAQiZ,aAGRlG,KAKD/S,EAAQC,eAAc,GAvCF,2CAAH,wDAoDlBlB,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACSgxB,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe3+B,OAAS,IAEvCg+B,EAAiBW,EAAep+B,KAAI,SAAC+F,GAC1C,MAAO,CACNzH,MAAOyH,EAAQnH,KACfA,KAAMmH,EAAQnH,SAGhB8+B,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACE,IAGHzxB,qBAAU,WACTzM,QAAQC,IAAI,wBAAwBi9B,GACrB,uCAAG,8BAAAvwB,EAAA,sEACSkxB,EAAoB,CAC7Cp+B,WAAY,CACXE,aAAc,CACbiG,QAASs3B,MAJK,QACXiB,EADW,SAUEA,EAAY7+B,OAAS,IAEjCk+B,EAAcW,EAAYt+B,KAAI,SAACgG,GACpC,MAAO,CACN1H,MAAO0H,EAAKpH,KACZA,KAAMoH,EAAKpH,SAGbg/B,EAAeD,IAlBC,2CAAH,oDAsBfY,KACE,CAAClB,IAKJzwB,qBAAU,WACT,IAAKuwB,EAAgB,UAAe,CACnC,IAAMtxB,EAAQsxB,EAAgB,MAC9B,GAAItxB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EAExDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eASVtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACpCF,OAAOqO,OAAO/B,EAAK,OACnB,IACGnJ,SAAQ,SAACkoB,EAAKC,GACpB,GAAmB,kBAARD,EACVhK,GAAsBgK,QAGlB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACvBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACZhK,GAAsBgK,UAlLE,IAACvW,GA4L7B8oB,EAAgB,WACjB59B,OAAOC,KAAK29B,EAAiBp8B,MAAMtB,OAAS,GAED,OAAvC09B,EAAgB,KAAhB,SA/L0B9oB,EAgML,8BA/L3BD,KAAa7M,QAAQ,CACpB8M,QAASA,GAAW,kBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,iCAsMzC,CAAC4oB,IAKJ,IAAMlW,EAAe,SAACpY,GACrB6V,GAAyB,IAIpB3W,EAA4B,SAACH,EAAQI,GAC1C,QAAKA,GACHJ,EAAO/H,WACP+H,EAAO9H,UACP8H,EAAON,UACPM,EAAO1H,OACP0H,EAAOtH,OAcV,OALAnG,QAAQC,IAAI,gBAAiB29B,GAM5B,kBAAC,IAAD,CACC9vB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACPA,MAGL,gBACAa,EADA,EACAA,aACAR,EAFA,EAEAA,OACAD,EAHA,EAGAA,aACAU,EAJA,EAIAA,OACAL,EALA,EAKAA,QACAM,EANA,EAMAA,aACAC,EAPA,EAOAA,QAEAC,GATA,EAQAC,WARA,EASAD,iBATA,EAUAE,YAVA,OAYC,oCACC,kBAAC,KAAD,CACCvP,MAAO,CACN2hB,IAAK,QAGNG,UAAW,CACVrS,OAAQ,EACRwG,QAAS,GAEVrE,MAAO,OACP/O,MAAM,iBACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACdhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,KAM7C,6BAASjP,UAAU,2BAClB,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,wCACd,qDAMD,yBAAKA,UAAU,sCAEf,yBAAKA,UAAU,mBACjB,yBAAKA,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,aACNE,MAAOsP,EAAO/H,UACdjH,KAAK,YACLF,QAAU6P,EAAQ1I,WAAawI,EAAOxI,YACnCyI,GAAgB6uB,EAAiBtxB,MAAjB,gBAEnBlN,YAAc4P,EAAQ1I,WAAawI,EAAOxI,YACvCyI,GAAgB6uB,EAAiBtxB,MAAjB,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,iBAInB,yBAAKzP,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,YACNE,MAAOsP,EAAO9H,SACdlH,KAAK,WACLF,QAAU6P,EAAQzI,UAAYuI,EAAOvI,WAClCwI,GAAgB6uB,EAAiBtxB,MAAjB,eAEnBlN,YAAc4P,EAAQzI,UAAYuI,EAAOvI,WACtCwI,GAAgB6uB,EAAiBtxB,MAAjB,eACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,iBAYpB,yBAAKzP,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,QACNE,MAAOsP,EAAO1H,MACdtH,KAAK,QACLF,QAAU6P,EAAQrI,OAASmI,EAAOnI,QAC/BoI,GAAgB6uB,EAAiBtxB,MAAjB,YAEnBlN,YAAc4P,EAAQrI,OAASmI,EAAOnI,QACnCoI,GAAgB6uB,EAAiBtxB,MAAjB,YACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAInB,yBAAKzP,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,QACNE,MAAOsP,EAAO3H,MACdrH,KAAK,QACLF,QAAU6P,EAAQtI,OAASoI,EAAOpI,QAC/BqI,GAAgB6uB,EAAiBtxB,MAAjB,YAEnBlN,YAAc4P,EAAQtI,OAASoI,EAAOpI,QACnCqI,GAAgB6uB,EAAiBtxB,MAAjB,YACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,cAWpB,yBAAKzP,UAAU,mBACd,yBAAKA,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,cACNC,KAAK,OACLC,MAAOsP,EAAOtH,KACd1H,KAAK,OACLF,QAAU6P,EAAQjI,MAAQ+H,EAAO/H,OAC9BgI,GAAgB6uB,EAAiBtxB,MAAjB,WAEnBlN,YAAc4P,EAAQjI,MAAQ+H,EAAO/H,OAClCgI,GAAgB6uB,EAAiBtxB,MAAjB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,YAIlB,yBAAKzP,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,WACNC,KAAK,WACLC,MAAOsP,EAAON,SACd1O,KAAK,WACLF,QAAU6P,EAAQjB,UAAYe,EAAOf,WAClCgB,GAAgB6uB,EAAiBtxB,MAAjB,eAEnBlN,YAAc4P,EAAQjB,UAAYe,EAAOf,WACtCgB,GAAgB6uB,EAAiBtxB,MAAjB,eACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,iBAUnB,yBAAKzP,UAAU,mBACd,yBAAKA,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,gBACNC,KAAK,OACLC,MAAOsP,EAAO7F,aACdnJ,KAAK,eACLF,QAAU6P,EAAQxG,cAAgBsG,EAAOtG,eACtCuG,GAAgB6uB,EAAiBtxB,MAAjB,mBAEnBlN,YAAc4P,EAAQxG,cAAgBsG,EAAOtG,eAC1CuG,GAAgB6uB,EAAiBtxB,MAAjB,mBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBAIlB,yBAAKzP,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,aACNC,KAAK,aACLC,MAAOsP,EAAO9F,WACdlJ,KAAK,aACLF,QAAU6P,EAAQzG,YAAcuG,EAAOvG,aACpCwG,GAAgB6uB,EAAiBtxB,MAAjB,iBAEnBlN,YAAc4P,EAAQzG,YAAcuG,EAAOvG,aACxCwG,GAAgB6uB,EAAiBtxB,MAAjB,iBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,mBAQnB,yBAAKrP,MAAO,CACX0V,UAAW,UAIV,kBAAC7W,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAO/F,QACdjJ,KAAK,UACLF,QAAU6P,EAAQ1G,SAAWwG,EAAOxG,UACjCyG,GAAgB6uB,EAAiBtxB,MAAjB,cAEnBlN,YAAc4P,EAAQ1G,SAAWwG,EAAOxG,UACrCyG,GAAgB6uB,EAAiBtxB,MAAjB,cACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,iBAYnB,yBAAKzP,UAAU,kCAEd,yBAAKA,UAAU,gCACd,yBAAKA,UAAU,8CACd,yBAAKA,UAAU,qDACd,wCAID,yBAAKA,UAAU,mDACd,kBAACu/C,GAAD,CACCxxB,gBAAiBA,EACjBC,aAAcA,EACdF,UAAWA,eC/hBlB3f,IAHa+I,KAAXD,OAGiB7I,MAAaC,MAAM,CACxCvH,UAAWsH,MACR/O,MAAM,aACNF,WACAY,IAAI,EAAG,+CACVgH,SAAUqH,MACP/O,MAAM,YACNF,WACAY,IAAI,EAAG,6CACVoH,MAAOiH,MACJjP,SAAS,sCACT6+B,IAAI,GAAI,uCACXzvB,SAAUH,MACP/O,MAAM,YACNU,IAAI,EAAG,4CACVmH,MAAOkH,MAAa/O,MAAM,SAAS6H,MAAM,iCAerC2a,GAAwB,SAACvM,GAChCD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAshB/BqmB,GApgBG,SAAC,GAA6E,IAA3ElzB,EAA0E,EAA1EA,SAAU0V,EAAgE,EAAhEA,WAAYD,EAAoD,EAApDA,QAAS8f,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,gBAA6B,EACrCjwB,EAAe,GAAI,gBADkB,mBACvFwxB,EADuF,KAClEC,EADkE,OAIvC9tB,mBAAS,IAJ8B,mBAIvFysB,EAJuF,aAK1CzsB,mBAAS,KALiC,gCAOhDA,mBAAS,KAPuC,mBAOrE8sB,GAPqE,aAQtD9sB,mBAAS,IAR6C,mBAQxEgtB,GARwE,aAUxC3wB,EAC/C,GACA,eAZuF,mBAUlE6wB,GAVkE,aAe5C7wB,EAAe,GAAI,YAfyB,mBAenE+wB,GAfmE,aAkBhEptB,mBAAS,IAlBuD,mBAkBrFuf,EAlBqF,KAkB7EtD,EAlB6E,OAmBpDjc,mBAAS,IAnB2C,mBAmBrFmc,EAnBqF,KAmBvED,EAnBuE,KAuB5FlgB,qBAAU,WAGX,GADAzM,QAAQC,IAAI,oBAAoBsH,GAC5BA,GAAYA,EAAS62C,MAAQ72C,EAAS62C,KAAK9+C,OAAS,EAAG,CAC1D,IAAM0wB,EAASzoB,EAAS62C,KAAKv+C,KAAI,SAAAQ,GAAI,OAAIA,EAAKW,OAE9C2rB,EAAgBqD,GAChBtD,EAAUsD,QAGDrD,EAAgB,MAGxB,CAACplB,EAASxG,KAKb,IAAMyM,EAAY,uCAAG,WAAOC,EAAcC,GAArB,qBAAAf,EAAA,sEACa4xB,EAA0B,CAC3D9+B,WAAY,CACXE,aAAc,CACZoB,GAAI0M,EAAO1M,KAGd2D,KAAM,CACLqB,MAAO0H,EAAO1H,MACdD,MAAO2H,EAAO3H,MACdqH,SAAUM,EAAON,SACjBzF,QAAS+F,EAAO/F,QAChBhC,UAAW+H,EAAO/H,UAClBC,SAAU8H,EAAO9H,SACjBQ,KAAMsH,EAAOtH,KACbwB,WAAY8F,EAAO9F,WACnBC,aAAc6F,EAAO7F,aACrBs2C,WAAYluB,KAjBO,QACbwO,EADa,SAuBmC,OAA7BA,EAAkBl6B,QAG1C2Y,GAAW,GAMH5H,EAJc,WACrB,OAAOynB,EAAaj9B,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQ8G,EAASxG,IAG3C+4B,GAGRxZ,EAAclhB,OAAOmhB,OAAO,GAAIuc,EAAaznB,GAA/BjW,OAAA,IAAAA,CAAA,GAElBo/B,EAFkB,CAIrBz9B,GAAIy9B,EAAiB,KAAW,GAChCv9B,IAAKu9B,EAAiB,KAAW,GACjC//B,KAAM+/B,EAAiB,UAAgB,IAAMA,EAAiB,YAGvDxD,EArBkD,uBAqB9B8B,EAAat8B,MAAM,EAAG6U,IArBQ,CAqBAiL,GArBA,aAqBgBwc,EAAat8B,MAAM6U,EAAQ,KACnG0nB,EAAgB/B,IAIlBva,KAGC/S,EAAQC,eAAc,GApDL,2CAAH,wDAyDlBlB,qBAAU,WACT,IAAK6xB,EAAmB,UAAe,CACtC,IAAM5yB,EAAQ4yB,EAAmB,MACjC,GAAI5yB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EAExDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eASVtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACpCF,OAAOqO,OAAO/B,EAAK,OACnB,IACGnJ,SAAQ,SAACkoB,EAAKC,GACpB,GAAmB,kBAARD,EACVhK,GAAsBgK,QAGlB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACvBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACZhK,GAAsBgK,UA7JE,IAACvW,GAuK7BoqB,EAAmB,WACpBl/B,OAAOC,KAAKi/B,EAAoB19B,MAAMtB,OAAS,GAED,OAA1Cg/B,EAAmB,KAAnB,SA1K0BpqB,EA2KL,8BA1K3BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,iBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,iCAiL1C,CAACkqB,IAcJ7xB,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACSgxB,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe3+B,OAAS,IAEvCg+B,EAAiBW,EAAep+B,KAAI,SAAC+F,GAC1C,MAAO,CACNzH,MAAOyH,EAAQnH,KACfA,KAAMmH,EAAQnH,SAGhB8+B,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACK,IAGHzxB,qBAAU,YACG,uCAAG,8BAAAE,EAAA,sEACSkxB,EAAoB,CACjCp+B,WAAY,CACRE,aAAc,CACZiG,QAASs3B,MAJX,QACXiB,EADW,SAUEA,EAAY7+B,OAAS,IAEjCk+B,EAAcW,EAAYt+B,KAAI,SAACgG,GACpC,MAAO,CACN1H,MAAO0H,EAAKpH,KACZA,KAAMoH,EAAKpH,SAGbg/B,EAAeD,IAlBC,2CAAH,qDAsBfY,KACK,CAAClB,IAQP,IAAMpW,EAAe,SAACpY,GACfuO,GAAW,IAKVrP,EAA4B,SAACH,EAAOI,GAC3C,QAAIA,GACFJ,EAAO/H,WACP+H,EAAO9H,UAEP8H,EAAO1H,OACP0H,EAAOtH,OAMV,OACC,kBAAC,IAAD,CACA2H,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACP7F,KAGL,gBACC0G,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACA,kBAAC,KAAD,CACA1M,MAAM,aACN+O,MAAO,OACPoM,QAASA,EACT4D,KAAM,SAAClS,GAAD,OAAalB,EAAakB,IAChCmS,SAAUiG,EACV/F,OAAO,SACP4G,gBAAgB,EAChBC,cAAe,CACfhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,IAE5CiT,UAAW,CACErS,OAAQ,IACRwG,QAAS,SAIrBjV,QAAQC,IAAI,qBAAqBiO,GAErC,6BAAStP,UAAU,2BACX,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,wCACd,qDAMD,yBAAKA,UAAU,sCAEf,yBAAKA,UAAU,mBACjB,yBAAKA,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,aACNE,MAAOsP,EAAO/H,UACdjH,KAAK,YACLF,QAAU6P,EAAQ1I,WAAawI,EAAOxI,YACnCyI,GAAgBmwB,EAAoB5yB,MAApB,gBAEnBlN,YAAc4P,EAAQ1I,WAAawI,EAAOxI,YACvCyI,GAAgBmwB,EAAoB5yB,MAApB,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,iBAInB,yBAAKzP,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,YACNE,MAAOsP,EAAO9H,SACdlH,KAAK,WACLF,QAAU6P,EAAQzI,UAAYuI,EAAOvI,WAClCwI,GAAgBmwB,EAAoB5yB,MAApB,eAEnBlN,YAAc4P,EAAQzI,UAAYuI,EAAOvI,WACtCwI,GAAgBmwB,EAAoB5yB,MAApB,eACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,iBAYpB,yBAAKzP,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,QACNE,MAAOsP,EAAO1H,MACdtH,KAAK,QACLF,QAAU6P,EAAQrI,OAASmI,EAAOnI,QAC/BoI,GAAgBmwB,EAAoB5yB,MAApB,YAEnBlN,YAAc4P,EAAQrI,OAASmI,EAAOnI,QACnCoI,GAAgBmwB,EAAoB5yB,MAApB,YACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAInB,yBAAKzP,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,QACNE,MAAOsP,EAAO3H,MACdrH,KAAK,QACLF,QAAU6P,EAAQtI,OAASoI,EAAOpI,QAC/BqI,GAAgBmwB,EAAoB5yB,MAApB,YAEnBlN,YAAc4P,EAAQtI,OAASoI,EAAOpI,QACnCqI,GAAgBmwB,EAAoB5yB,MAApB,YACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,cAOpB,yBAAKzP,UAAU,mBACd,yBAAKA,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,cACNC,KAAK,OACLC,MAAOsP,EAAOtH,KACd1H,KAAK,OACLF,QAAU6P,EAAQjI,MAAQ+H,EAAO/H,OAC9BgI,GAAgBmwB,EAAoB5yB,MAApB,WAEnBlN,YAAc4P,EAAQjI,MAAQ+H,EAAO/H,OAClCgI,GAAgBmwB,EAAoB5yB,MAApB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,YAIlB,yBAAKzP,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,WACNC,KAAK,WACLC,MAAOsP,EAAON,SACd1O,KAAK,WACLF,QAAU6P,EAAQjB,UAAYe,EAAOf,WAClCgB,GAAgBmwB,EAAoB5yB,MAApB,eAEnBlN,YAAc4P,EAAQjB,UAAYe,EAAOf,WACtCgB,GAAgBmwB,EAAoB5yB,MAApB,eACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,iBAUnB,yBAAKzP,UAAU,mBACd,yBAAKA,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,gBACNC,KAAK,OACLC,MAAOsP,EAAO7F,aACdnJ,KAAK,eACLF,QAAU6P,EAAQxG,cAAgBsG,EAAOtG,eACtCuG,GAAgBmwB,EAAoB5yB,MAApB,mBAEnBlN,YAAc4P,EAAQxG,cAAgBsG,EAAOtG,eAC1CuG,GAAgBmwB,EAAoB5yB,MAApB,mBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBAIlB,yBAAKzP,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,aACNC,KAAK,aACLC,MAAOsP,EAAO9F,WACdlJ,KAAK,aACLF,QAAU6P,EAAQzG,YAAcuG,EAAOvG,aACpCwG,GAAgBmwB,EAAoB5yB,MAApB,iBAEnBlN,YAAc4P,EAAQzG,YAAcuG,EAAOvG,aACxCwG,GAAgBmwB,EAAoB5yB,MAApB,iBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,mBAYjB,yBAAKrP,MAAO,CACV0V,UAAW,UAIb,kBAAC7W,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAO/F,QACdjJ,KAAK,UACLF,QAAU6P,EAAQ1G,SAAWwG,EAAOxG,UACjCyG,GAAgBmwB,EAAoB5yB,MAApB,cAEnBlN,YAAc4P,EAAQ1G,SAAWwG,EAAOxG,UACrCyG,GAAgBmwB,EAAoB5yB,MAApB,cACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,iBAcnB,yBAAKzP,UAAU,kCAEd,yBAAKA,UAAU,gCACd,yBAAKA,UAAU,8CACd,yBAAKA,UAAU,qDACd,wCAID,yBAAKA,UAAU,mDACd,kBAACu/C,GAAD,CACCxxB,gBAAiBA,EACjBC,aAAcA,EACdF,UAAWA,eC/hBhB3R,GAAwBC,KAAxBD,OACA+N,IADwB9N,KAAhBC,YACGpd,IAAXirB,QAmCFC,GAAU,SAAC,GAAiD,IAAhDnoB,EAA+C,EAA/CA,KAAKm8B,EAA0C,EAA1CA,gBAAiBrtB,EAAyB,EAAzBA,MAAyB,EAChCe,oBAAS,GADuB,mBACtDuM,EADsD,KAC9CC,EAD8C,OAEJxM,oBAAS,GAFL,mBAEtDuY,EAFsD,KAEhCC,EAFgC,KAIxD9V,EAAUC,eAJ8C,EAMJtG,EAAe,GAAI,gBANf,mBAMjC2xB,GANiC,WAOrDC,EAAoB,uCAAG,WAAO39B,GAAP,iBAAA4L,EAAA,sEACK8xB,EAA0B,CACxDh/B,WAAY,CACVE,aAAc,CACZoB,SAJqB,QACrB49B,EADqB,SAWsB,OAA7BA,EAAkBr6B,SA9Cb4P,EA+CJ,iBA9C5BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,iBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BA4CnCwqB,EAAmBh+B,EAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAKU,KAAOA,KACzDg8B,EAAgB6B,IAdc,iCAnCH,IAAC1qB,IAmCE,OAAH,sDAmB5B,OACI,oCACA,kBAAC,KAAD,CAMAyD,KAAK,QAEL8D,WAAY7a,GAKd,kBAAC,GAAD,CACKiB,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACP,oCACE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,wBAA8BqZ,EAAOhb,KAErCkoB,EAAyBlN,IAE3B/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAET/R,OAQP,kBAAC,GAAD,CACChB,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACP,oCACE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,wBAA8BqZ,EAAOhb,KAErCkoB,EAAyBlN,IAE3B/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAET/R,OAkBP,kBAAC,GAAD,CACChB,MAAM,aACNga,UAAU,aACV5a,IAAI,KACJrC,UAAU,yBAIb,kBAAC,GAAD,CACGiD,MAAM,gBACNga,UAAU,eACV5a,IAAI,KACJrC,UAAU,yBAKf,kBAAC,GAAD,CACDiD,MAAM,QACNga,UAAU,OACV5a,IAAI,OACJrC,UAAU,uBACVkd,OAAQ,SAACuiC,EAAMtiC,GAAP,OACP,oCACCsiC,GAASA,EAAM/+C,OAAS,GAAK++C,EAAM79C,MAAM,EAAE,GAAGX,KAAI,SAACiH,GAAD,OAC3C,kBAAC,KAAD,CACP9H,MAAO,CACNC,aAAa,OAEdmV,MAAM,OAAOnT,IAAK6F,EAAI9F,KACrB8F,EAAIrI,SAIF,0BACAO,MAAO,CACL4V,OAAO,WAETjG,QAAS,WACNwE,EAAQzQ,KAAR,wBAA8BqZ,EAAM,OAEtCsiC,GAA0B,IAAjBA,EAAM/+C,QAAgB,eAOpC,kBAAC,GAAD,CACKsR,MAAO,IACP/O,MAAM,UACNga,UAAU,UACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACP,kBAAC,KAAD,CAAOpE,KAAK,UAEZ,4BACG9U,GAAQyS,IAAOzS,GAAM+H,OAAO,gCAoC1CgF,GAAS,aAAaF,IACT,kBAAC,GAAD,CAEA9Q,UAAU,uBACRiD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGvC,KAAK,MACP,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,eAChC,0BAAMjD,UAAU,WAAW+P,QAAS,WAClCsO,GAAW,GACXgM,EAAyBlN,KAE3B,kBAACyN,GAAA,EAAD,SASC,kBAAC,KAAD,CAEA7H,UAAW,kBAAM+c,EAAqB3iB,EAAOhb,KAC7Cc,MAAM,qBAAgBkf,OAAO,MAAMa,WAAW,MAElD,0BACEhjB,UAAU,4BAEV,kBAAC4iB,GAAA,EAAD,aAgBdwH,GAA2B,kBAAC,GAAD,CAC5B8T,aAAcl8B,EACdm8B,gBAAiBA,EACjB9f,WAAYA,EACZD,QAASA,EACTzV,SAAUyhB,MAiJCxY,gBALS,SAAA3E,GAAK,MAAK,CAChC6D,MAAO7D,EAAM2D,eAIyB,KAAzBgB,EArIM,SAAC,GAAoB,IAAnBd,EAAkB,EAAlBA,MAAkB,EAGEe,mBAAS,IAHX,mBAG9BqsB,EAH8B,KAGjBC,EAHiB,OAKYjwB,EAAe,GAAI,cAL/B,mBAK9B+xB,EAL8B,KAKfC,EALe,KAQrC9+B,QAAQC,IAAI,aAAa68B,GAEzBrwB,qBAAU,YACS,uCAAG,4BAAAE,EAAA,sEACKmyB,EAAwB,CAC/Cr/B,WAAW,CACTC,OAAQ,CACNiU,SAAU,QACVC,eAAgB,SALF,OACbsrB,EADa,OAUnBnC,EAAgBmC,GAVG,2CAAH,qDAYlBC,KACC,IAMJ,IA9BuC,EA0CkB1uB,oBAAS,GA1C3B,mBA0ChC6T,EA1CgC,KA0CVC,EA1CU,KAgDxC,OACC,oCAIE,yBAAK3lB,UAAU,yBACP,yBAAKA,UAAU,iCAGjB,yBAAKA,UAAU,2CACf,wBAAIA,UAAU,uCAAd,WAKA,kBAAC,GAAD,CACEqrB,aAAa,EACbrrB,UAAU,qBACZM,YAAY,mBACZquB,SAAU,SAAApvB,GAAK,OArCF,SAACA,GACpB,GAAG0gC,EAAcj+B,KAAKtB,OAAS,EAAG,CAChC,IAAMs/B,EAAkBC,EAAcj+B,KAAKge,QAAO,SAAAve,GAAI,OAAIA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBACjGqlB,EAAgB6B,IAkCM1U,CAAa/rB,OAK9ByR,GAAS,aAAaF,IACzB,kBAAC,IAAD,CAEA9Q,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJxC,YAaI,yBAAK3lB,UAAU,uCAWxB,yBAAKA,UAAU,uCACTigC,EAAc7yB,MAAQ8wB,EAAax9B,OAAS,GAAK,kBAAC,GAAD,CAClDoQ,MAAOA,EACPqtB,gBAAiBA,EAChBn8B,KAAMk8B,IACN+B,EAAc9yB,WAAa,kBAACoe,GAAD,MAC3B0U,EAAc7yB,QAAU8wB,EAAax9B,OAAS,IACpD,kBAAC,GAAD,CAAOuC,MAAM,sBAMfg9B,EAAc7yB,MACX,kBAAC,GAAD,CACA+wB,gBAAiBA,EACXzY,sBAAuBA,EACvBC,yBAA0BA,EAC1BuY,aAAc+B,EAAcj+B,WCjahCmM,IAHa+I,KAAXD,OAGiB7I,MAAaC,MAAM,CACxCvH,UAAWsH,MACR/O,MAAM,aACNF,WACAY,IAAI,EAAG,+CACVgH,SAAUqH,MACP/O,MAAM,YACNF,WACAY,IAAI,EAAG,6CACVoH,MAAOiH,MACJjP,SAAS,sCACT6+B,IAAI,GAAI,uCACXzvB,SAAUH,MACP/O,MAAM,YACNU,IAAI,EAAG,4CACVmH,MAAOkH,MAAa/O,MAAM,SAAS6H,MAAM,iCAerC2a,GAAwB,SAACvM,GAChCD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBA0gB/BqmB,GAzfG,SAAC,GAAqE,IAAnElzB,EAAkE,EAAlEA,SAAU0V,EAAwD,EAAxDA,WAAYD,EAA4C,EAA5CA,QAASqiB,EAAmC,EAAnCA,sBAAmC,EAC7BvyB,EAAe,GAAI,gBADU,mBAC/EwxB,EAD+E,KAC1DC,EAD0D,OAI/B9tB,mBAAS,IAJsB,mBAI/EysB,EAJ+E,aAKlCzsB,mBAAS,KALyB,gCAOxCA,mBAAS,KAP+B,mBAO7D8sB,GAP6D,aAQ9C9sB,mBAAS,IARqC,mBAQhEgtB,GARgE,aAUhC3wB,EAC/C,GACA,eAZ+E,mBAU1D6wB,GAV0D,aAepC7wB,EAAe,GAAI,YAfiB,mBAe3D+wB,GAf2D,aAkBxDptB,mBAAS,IAlB+C,mBAkB7Euf,EAlB6E,KAkBrEtD,EAlBqE,OAmB5Cjc,mBAAS,IAnBmC,mBAmB7Emc,EAnB6E,KAmB/DD,EAnB+D,KAuBpFlgB,qBAAU,WAGX,GADAzM,QAAQC,IAAI,oBAAoBsH,GAC5BA,GAAYA,EAAS62C,MAAQ72C,EAAS62C,KAAK9+C,OAAS,EAAG,CAC1D,IAAM0wB,EAASzoB,EAAS62C,KAAKv+C,KAAI,SAAAQ,GAAI,OAAIA,EAAKW,OAE9C2rB,EAAgBqD,GAChBtD,EAAUsD,QAGDrD,EAAgB,MAGxB,CAACplB,EAASxG,KAKb,IAAMyM,EAAY,uCAAG,WAAOC,EAAcC,GAArB,eAAAf,EAAA,sEACa4xB,EAA0B,CAC3D9+B,WAAY,CACXE,aAAc,CACZoB,GAAI0M,EAAO1M,KAGd2D,KAAM,CACLqB,MAAO0H,EAAO1H,MACdD,MAAO2H,EAAO3H,MACdqH,SAAUM,EAAON,SACjBzF,QAAS+F,EAAO/F,QAChBhC,UAAW+H,EAAO/H,UAClBC,SAAU8H,EAAO9H,SACjBQ,KAAMsH,EAAOtH,KACbwB,WAAY8F,EAAO9F,WACnBC,aAAc6F,EAAO7F,aACrBs2C,WAAYluB,KAjBO,QACbwO,EADa,SAuBmC,OAA7BA,EAAkBl6B,QAG9B2Y,GAAW,GAEXoiB,EAAsB,eAEfb,EAFc,CAGhCz9B,GAAIy9B,EAAiB,KAAW,GAChCv9B,IAAKu9B,EAAiB,KAAW,GACjC//B,KAAM+/B,EAAiB,UAAgB,IAAMA,EAAiB,aAK/D/d,KAGC/S,EAAQC,eAAc,GAzCL,2CAAH,wDA8ClBlB,qBAAU,WACT,IAAK6xB,EAAmB,UAAe,CACtC,IAAM5yB,EAAQ4yB,EAAmB,MACjC,GAAI5yB,EAAK,SAAetM,OAAOC,KAAKqM,EAAK,OAAWpM,OAAS,EAExDoM,EAAK,MAAL,eAEOA,EAAK,MAAL,eASVtM,OAAOqO,OAAO/B,EAAK,OAAWpM,OAAS,EACpCF,OAAOqO,OAAO/B,EAAK,OACnB,IACGnJ,SAAQ,SAACkoB,EAAKC,GACpB,GAAmB,kBAARD,EACVhK,GAAsBgK,QAGlB,GAAmB,kBAARA,EAAkB,CACjC,GAAIA,GAAOrrB,OAAOC,KAAKorB,GAAKnrB,OAAS,EACvBF,OAAOqO,OAAOgd,GACtBloB,SAAQ,SAAAkoB,GACZhK,GAAsBgK,UAjJE,IAACvW,GA2J7BoqB,EAAmB,WACpBl/B,OAAOC,KAAKi/B,EAAoB19B,MAAMtB,OAAS,GAED,OAA1Cg/B,EAAmB,KAAnB,SA9J0BpqB,EA+JL,8BA9J3BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,iBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,iCAqK1C,CAACkqB,IAcJ7xB,qBAAU,YACS,uCAAG,8BAAAE,EAAA,sEACSgxB,EAAuB,IADhC,QACdM,EADc,SAIEA,EAAe3+B,OAAS,IAEvCg+B,EAAiBW,EAAep+B,KAAI,SAAC+F,GAC1C,MAAO,CACNzH,MAAOyH,EAAQnH,KACfA,KAAMmH,EAAQnH,SAGhB8+B,EAAkBD,IAZC,2CAAH,qDAgBlBY,KACK,IAGHzxB,qBAAU,YACG,uCAAG,8BAAAE,EAAA,sEACSkxB,EAAoB,CACjCp+B,WAAY,CACRE,aAAc,CACZiG,QAASs3B,MAJX,QACXiB,EADW,SAUEA,EAAY7+B,OAAS,IAEjCk+B,EAAcW,EAAYt+B,KAAI,SAACgG,GACpC,MAAO,CACN1H,MAAO0H,EAAKpH,KACZA,KAAMoH,EAAKpH,SAGbg/B,EAAeD,IAlBC,2CAAH,qDAsBfY,KACK,CAAClB,IAQP,IAAMpW,EAAe,SAACpY,GACfuO,GAAW,IAKVrP,EAA4B,SAACH,EAAOI,GAC3C,QAAIA,GACFJ,EAAO/H,WACP+H,EAAO9H,UAEP8H,EAAO1H,OACP0H,EAAOtH,OAMV,OACC,kBAAC,IAAD,CACA2H,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACP7F,KAGL,gBACC0G,EADD,EACCA,aACAR,EAFD,EAECA,OACAD,EAHD,EAGCA,aACAU,EAJD,EAICA,OACAL,EALD,EAKCA,QACAM,EAND,EAMCA,aACAC,EAPD,EAOCA,QAEAC,GATD,EAQCC,WARD,EASCD,iBATD,EAUCE,YAVD,OAYA,oCACA,kBAAC,KAAD,CACA1M,MAAM,aACN+O,MAAO,OACPoM,QAASA,EACT4D,KAAM,SAAClS,GAAD,OAAalB,EAAakB,IAChCmS,SAAUiG,EACV/F,OAAO,SACP4G,gBAAgB,EAChBC,cAAe,CACfhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,IAE5CiT,UAAW,CACErS,OAAQ,IACRwG,QAAS,SAIrBjV,QAAQC,IAAI,qBAAqBiO,GAErC,6BAAStP,UAAU,2BACX,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,iCACd,yBAAKA,UAAU,wCACd,qDAMD,yBAAKA,UAAU,sCAEf,yBAAKA,UAAU,mBACjB,yBAAKA,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,aACNE,MAAOsP,EAAO/H,UACdjH,KAAK,YACLF,QAAU6P,EAAQ1I,WAAawI,EAAOxI,YACnCyI,GAAgBmwB,EAAoB5yB,MAApB,gBAEnBlN,YAAc4P,EAAQ1I,WAAawI,EAAOxI,YACvCyI,GAAgBmwB,EAAoB5yB,MAApB,gBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,iBAInB,yBAAKzP,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,YACNE,MAAOsP,EAAO9H,SACdlH,KAAK,WACLF,QAAU6P,EAAQzI,UAAYuI,EAAOvI,WAClCwI,GAAgBmwB,EAAoB5yB,MAApB,eAEnBlN,YAAc4P,EAAQzI,UAAYuI,EAAOvI,WACtCwI,GAAgBmwB,EAAoB5yB,MAApB,eACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,iBAYpB,yBAAKzP,UAAU,mBACd,yBAAKA,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,QACNE,MAAOsP,EAAO1H,MACdtH,KAAK,QACLF,QAAU6P,EAAQrI,OAASmI,EAAOnI,QAC/BoI,GAAgBmwB,EAAoB5yB,MAApB,YAEnBlN,YAAc4P,EAAQrI,OAASmI,EAAOnI,QACnCoI,GAAgBmwB,EAAoB5yB,MAApB,YACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,aAInB,yBAAKzP,UAAU,yBACd,kBAACf,EAAD,CACCI,MAAM,QACNE,MAAOsP,EAAO3H,MACdrH,KAAK,QACLF,QAAU6P,EAAQtI,OAASoI,EAAOpI,QAC/BqI,GAAgBmwB,EAAoB5yB,MAApB,YAEnBlN,YAAc4P,EAAQtI,OAASoI,EAAOpI,QACnCqI,GAAgBmwB,EAAoB5yB,MAApB,YACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,cAOpB,yBAAKzP,UAAU,mBACd,yBAAKA,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,cACNC,KAAK,OACLC,MAAOsP,EAAOtH,KACd1H,KAAK,OACLF,QAAU6P,EAAQjI,MAAQ+H,EAAO/H,OAC9BgI,GAAgBmwB,EAAoB5yB,MAApB,WAEnBlN,YAAc4P,EAAQjI,MAAQ+H,EAAO/H,OAClCgI,GAAgBmwB,EAAoB5yB,MAApB,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,YAIlB,yBAAKzP,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,WACNC,KAAK,WACLC,MAAOsP,EAAON,SACd1O,KAAK,WACLF,QAAU6P,EAAQjB,UAAYe,EAAOf,WAClCgB,GAAgBmwB,EAAoB5yB,MAApB,eAEnBlN,YAAc4P,EAAQjB,UAAYe,EAAOf,WACtCgB,GAAgBmwB,EAAoB5yB,MAApB,eACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,iBAUnB,yBAAKzP,UAAU,mBACd,yBAAKA,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,gBACNC,KAAK,OACLC,MAAOsP,EAAO7F,aACdnJ,KAAK,eACLF,QAAU6P,EAAQxG,cAAgBsG,EAAOtG,eACtCuG,GAAgBmwB,EAAoB5yB,MAApB,mBAEnBlN,YAAc4P,EAAQxG,cAAgBsG,EAAOtG,eAC1CuG,GAAgBmwB,EAAoB5yB,MAApB,mBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,oBAIlB,yBAAKzP,UAAU,yBACf,kBAACf,EAAD,CACCI,MAAM,aACNC,KAAK,aACLC,MAAOsP,EAAO9F,WACdlJ,KAAK,aACLF,QAAU6P,EAAQzG,YAAcuG,EAAOvG,aACpCwG,GAAgBmwB,EAAoB5yB,MAApB,iBAEnBlN,YAAc4P,EAAQzG,YAAcuG,EAAOvG,aACxCwG,GAAgBmwB,EAAoB5yB,MAApB,iBACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,mBAYjB,yBAAKrP,MAAO,CACV0V,UAAW,UAIb,kBAAC7W,EAAD,CACCI,MAAM,UACNE,MAAOsP,EAAO/F,QACdjJ,KAAK,UACLF,QAAU6P,EAAQ1G,SAAWwG,EAAOxG,UACjCyG,GAAgBmwB,EAAoB5yB,MAApB,cAEnBlN,YAAc4P,EAAQ1G,SAAWwG,EAAOxG,UACrCyG,GAAgBmwB,EAAoB5yB,MAApB,cACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,iBAcnB,yBAAKzP,UAAU,kCAEd,yBAAKA,UAAU,gCACd,yBAAKA,UAAU,8CACd,yBAAKA,UAAU,qDACd,wCAID,yBAAKA,UAAU,mDACd,kBAACu/C,GAAD,CACCxxB,gBAAiBA,EACjBC,aAAcA,EACdF,UAAWA,eCngBhB3R,GAAwBC,KAAxBD,OAkfSvK,IAlfewK,KAAhBC,YACG2P,IAAX9B,OAifStY,aALO,SAAA3E,GAAK,MAAK,CAC9B6D,MAAO7D,EAAM2D,eAIyB,KAAzBgB,EA1eM,SAAC,GAAoB,IAAnBd,EAAkB,EAAlBA,MAAkB,EACkB5C,EAAe,GAAI,gBADrC,mBAChCwyB,EADgC,KACXC,EADW,OAEQzyB,EAAe,GAAI,mBAF3B,mBAEhC0yB,EAFgC,KAEhBC,EAFgB,OAGkC3yB,EAAe,GAAI,gCAHrD,mBAGhCwxC,EAHgC,KAGHC,EAHG,OAIK9tC,oBAAS,GAJd,mBAIhCiqB,EAJgC,KAIhBC,EAJgB,OAKYlqB,mBAAS,IALrB,mBAKhCivB,EALgC,KAKbL,EALa,KASjC3/B,EAASurB,eACT9X,EAAUC,eACV3J,EAAa/J,EAAM,GA8DzB,OA5DA+M,qBAAU,YAEiB,uCAAG,4BAAAE,EAAA,sEACc4yB,EAA0B,CAC1D9/B,WAAY,CACRE,aAAc,CACVoB,GAAI0I,MAJM,QAChBk2B,EADgB,SAYlBN,EAAsBM,GAG1B3/B,QAAQC,IAAI,wBAAwB0/B,GAfd,2CAAH,qDAkBvBC,KAED,CAACn2B,IAIJgD,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACX8yB,EAAqB,CACvBhgC,WAAY,CACRE,aAAc,CACVoB,GAAI0I,MAJC,2CAAH,qDAUlBo2B,GAE4B,uCAAG,sBAAAlzB,EAAA,sEACrB4xC,EAAkC,CACpC9+C,WAAY,CACRE,aAAc,CACVoB,GAAI0I,MAJW,2CAAH,oDAU5B+0C,KAKD,CAAC/0C,IAGJzJ,QAAQC,IAAI,mBAAoBy/B,GAI5B,yBAAK9gC,UAAU,wBACX,yBAAKA,UAAU,iCACX,6CAIC0gC,EAAoBtzB,MAAQ0zB,GAAuBtgC,OAAOC,KAAKqgC,GAAoBpgC,OAAS,GACzF,oCACI,kBAAC,GAAD,CACI0d,QAAS0d,EACTzd,WAAY0d,EACZpzB,SAAUm4B,EACVL,sBAAuBA,IAGlCzvB,GAAS,aAAaF,IACH,kBAAC,IAAD,CACAf,QAAS,kBAAMgsB,GAAkB,IACjCz8B,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAHN,UAcxB,kBAAC,KAAD,CACI0C,UAAW,CAAEzP,KAAM,GACnB7N,QAAS0wB,EAAoBvzB,WAC5BuzB,EAAoBtzB,MAAQ0zB,KAAwBtgC,OAAOC,KAAKqgC,GAAoBpgC,OAAS,IAC1F,kBAAC,KAAD,CAAO4B,YAAY,kBAAkBO,MAAOmR,KAAMK,yBAGrDqsB,EAAoBtzB,MAAQ0zB,GAAuBtgC,OAAOC,KAAKqgC,GAAoBpgC,OAAS,GACzF,yBAAKV,UAAU,gCAEX,yBAAKA,UAAU,qCACX,4BACK8gC,EAAkB,MAKtBA,EAAkB,MACf,oCAEI,8BACKA,EAAkB,OAQ9BA,EAAkB,WACf,0CAEI,8BACKA,EAAkB,YAK9BA,EAAkB,cACf,6CAEI,8BACKA,EAAkB,eAM9BA,EAAkB,MACf,oCAEI,8BACKA,EAAkB,OAO9BA,EAAkB,UACf,uCAEI,8BACKA,EAAkB,WAM9BA,EAAkB,OACf,qCAEI,8BACKA,EAAkB,QAK7BA,EAAkB,OAChB,qCAEI,8BACKA,EAAkB,QAM5BA,EAAkB,MAAYA,EAAkB,KAASpgC,OAAS,GAC5D,oCACG,qCAECogC,EAAkB,KAAS7/B,KAAI,SAAAoF,GAC5B,OACI,8BAIKA,EAAIxG,cAejD,yBAAKG,UAAU,6BACX,yBAAKA,UAAU,mCACf,yBAAKA,UAAU,iCACX,uCAIJ,yBAAKA,UAAU,8BACV4gC,EAAezzB,WACd,oCACA,yBAAK/M,MAAO,CACVyP,OAAQ,UAEV,kBAAC,KAAD,CAAMkJ,KAAK,YAKI6nB,EAAexzB,QAAUwzB,EAAe5+B,KAAKtB,OAAS,IAEnE,yBAAKN,MAAO,CACR0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,kBAAkBO,MAAOmR,KAAMK,0BAIzDusB,EAAexzB,MAAQwzB,EAAe5+B,MAAQ4+B,EAAe5+B,KAAKtB,OAAS,GACxE,oCACI,kBAAC,KAAD,CACIN,MAAO,CACHmtB,WAAY,OACZltB,aAAc,iBACdmtB,SAAU,SACVvb,UAAW,+FAOf8G,KAAK,QAEL8D,WAAY+jB,EAAe5+B,KAC3B8a,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACHoV,MAAO,qBAUvC,kBAAC,GAAD,CACEvS,MAAM,OACNga,UAAU,YACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCAEE,wBACEpN,QAAS,WAEPwE,EAAQzQ,KAAR,uBAA6BqZ,EAAOhb,MAEtC/B,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YARZ,IAWI/R,OAUV,kBAAC,GAAD,CACEhB,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCAEE,wBACEpN,QAAS,WAEPwE,EAAQzQ,KAAR,uBAA6BqZ,EAAOhb,MAEtC/B,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAUH,kBAAC,GAAD,CACEhB,MAAM,cACNga,UAAU,QACV5a,IAAI,KACJrC,UAAU,yBAMhB,kBAAC,GAAD,CACEgS,MAAO,IACR/O,MAAM,SACNga,UAAU,SACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACP,oCAEC,uBAAG3G,KAAK,MACP,0BACApW,MAAO,CACLmW,SAAS,SAGRtS,YAcL,yBAAKjE,UAAU,mCACf,yBAAKA,UAAU,iCACX,0CAIJ,yBAAKA,UAAU,8BACV0/C,EAA4BvyC,WAC3B,oCACA,yBAAK/M,MAAO,CACVyP,OAAQ,UAEV,kBAAC,KAAD,CAAMkJ,KAAK,YAIZ2mC,EAA4BtyC,QAAUsyC,EAA4B19C,KAAKtB,OAAS,IAC7E,yBAAKN,MAAO,CACR0V,UAAW,UAEX,kBAAC,KAAD,CAAOxT,YAAY,oBAAoBO,MAAOmR,KAAMK,0BAI3DqrC,EAA4BtyC,MAAQsyC,EAA4B19C,MAAQ09C,EAA4B19C,KAAKtB,OAAS,GAC/G,oCACI,kBAAC,KAAD,CACIN,MAAO,CACHmtB,WAAY,OACZltB,aAAc,iBACdmtB,SAAU,SACVvb,UAAW,+FAOf8G,KAAK,QAEL8D,WAAY6iC,EAA4B19C,KACxC8a,YAAa,OACbC,YAAa,SAAAC,GACT,MAAO,CACH5c,MAAO,CACHoV,MAAO,qBASrB,kBAAC,GAAD,CACJvS,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,0BAAgCqZ,EAAOhb,MAGzC/B,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAET/R,OAYnB,kBAAC,GAAD,CACChB,MAAM,QACNga,UAAU,aACV5a,IAAI,KACJrC,UAAU,yBAIb,kBAAC,GAAD,CACGiD,MAAM,cACNga,UAAU,kBACV5a,IAAI,KACJrC,UAAU,mCCtffmO,GAAmBC,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAcnE8hB,GAAwB,SAACvM,GAC3BD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAK7ChH,GAAgB,CAClB3O,KAAM,GACTmlB,OAAQ,GACR1iB,YAAa,GACb2iB,cAAe,GACfC,UAAW,GACXC,YAAa,GACbC,gBAAiB,GACjBC,kBAAmB,GACnBC,SAAU,GACVC,WAAY,IAoJEsW,GArIG,SAAC,GAAoF,IAAlFC,EAAiF,EAAjFA,eAAgBC,EAAiE,EAAjEA,kBAAmBC,EAA8C,EAA9CA,cAAc7G,EAAgC,EAAhCA,WAAWO,EAAqB,EAArBA,QAAqB,EAC9CxnB,EAAe,GAAI,oBAD2B,mBAC3F+tB,EAD2F,KAC3EC,EAD2E,KAI5FttB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,qBAAAf,EAAA,sEACUmuB,EAA0B,CACjDr7B,WAAY,CACRE,aAAc,CACVoB,GAAI0M,EAAO1M,KAGnB2D,KAAM,CACFjG,KAAMgP,EAAOhP,QARJ,QACXs8B,EADW,SAa2B,OAAxBA,EAAaz2B,QAOhC+Q,EAJgB,WACrB,OAAOif,EAAQz0B,KAAI,SAAAQ,GAAI,OAAIA,EAAKU,MAAIN,QAAQgN,EAAO1M,IAGtC+4B,GAGRxZ,EAAclhB,OAAOmhB,OAAO,GAAI+T,EAAQjf,GAA1BjW,OAAA,IAAAA,CAAA,GAAuC27B,IACrDC,EAXiD,uBAW7B1G,EAAQ9zB,MAAM,EAAG6U,IAXY,CAWJiL,GAXI,aAWYgU,EAAQ9zB,MAAM6U,EAAQ,KACzF0e,EAAWiH,GAGFh7B,QAAQC,IAAI,uBAAuB86B,GA3Ed7mB,OA4E9B4I,EA3EC7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,eACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAyEhDumB,GAAkB,IAITla,KAGJ/S,EAAQC,eAAc,GArCL,iCA/CO,IAACuG,IA+CR,OAAH,wDAyCZ4S,EAAe,SAACpY,GAClBisB,GAAkB,IAIhB/sB,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOhP,OAASoP,GAOzB,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACNA,GADM,GAENwtB,EAFM,GAGJA,GAAiBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAAK,CAC3DykB,YAAa6W,EAAa,IACvBA,EAAa,GAAO9W,WACpB8W,EAAa,GAAO9W,UACvBG,kBAAmB2W,EAAa,IAAWA,EAAa,GAAO5W,iBAAmB4W,EAAa,GAAO5W,gBACtGJ,OAAQgX,EAAa,IAAUA,EAAa,GAAOn8B,MAAQm8B,EAAa,GAAOn8B,KAC/EolB,cAAe+W,EAAa,IAAUA,EAAa,GAAO15B,aAAe05B,EAAa,GAAO15B,gBAIpG,gBACG+M,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACCvP,MAAO,CACxB2hB,IAAK,QAGe9e,MAAM,YACNmb,QAAS0d,EACT9Z,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,KAGhD,kBAAChQ,EAAD,CACpBI,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgB0sB,EAAenvB,MAAf,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgB0sB,EAAenvB,MAAf,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,iBCjJnBtB,GAAmBC,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAcnE8hB,GAAwB,SAACvM,GAC3BD,KAAavI,MAAM,CACfwI,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAK7ChH,GAAgB,CAClB3O,KAAM,IA6IKs2B,GAhIK,SAAC,GAAqF,IAAnFzQ,EAAkF,EAAlFA,sBAAuBC,EAA2D,EAA3DA,yBAA0B+P,EAAiC,EAAjCA,QAASP,EAAwB,EAAxBA,WAAwB,EAE5DjnB,EAAe,GAAI,iBAFyC,mBAE9FmuB,EAF8F,KAEjFC,EAFiF,OAGrEzqB,oBAAS,GAH4D,mBAG9F2M,EAH8F,KAGpFF,EAHoF,OAI7DzM,oBAAS,GAJoD,mBAI9F2kB,EAJ8F,KAIhFC,EAJgF,KAM/F7nB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACOuuB,EAAkB,CACtCz7B,WAAY,CACRE,aAAc,CACVoB,GAAI0M,EAAO1M,KAGnB2D,KAAM,CACFjG,KAAMgP,EAAOhP,KAAK8nB,UART,QACX4U,EADW,SAaqB,OAArBA,EAAU72B,QAnDF4P,OAoDrB4I,EAnDR7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,eACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAkDvC2f,EAAW,CAAC,CACRhzB,GAAIo6B,EAAS,KAAW,GACxBl6B,IAAKk6B,EAAS,KAAW,GACzB18B,KAAM08B,EAAS,MAAY,KAHrB,oBAIL7G,KACL5mB,EAAQiZ,YACRpC,GAAyB,IAGzB9D,KAIJ/S,EAAQC,eAAc,GA7BL,iCAtCO,IAACuG,IAsCR,OAAH,wDAkCZ4S,EAAe,SAACpY,GAClB6V,GAAyB,IAIvB3W,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOhP,OAASoP,GASzB,OACI,kBAAC,IAAD,CACIC,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACJA,MAGR,gBACGa,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACIvP,MAAO,CACH2hB,IAAK,QAET9e,MAAM,eACNmb,QAASsH,EACT1D,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,KAGvD,kBAAChQ,EAAD,CACbI,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgB8sB,EAAYvvB,MAAZ,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgB8sB,EAAYvvB,MAAZ,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,YAMD,kBAAC,GAAD,CACI4O,WAAYoY,EACZrY,QAASoY,EACTlY,YAAaA,EACbE,SAAUA,EACVD,sBAAsB,SCjH1CpC,IAZiB/N,MAAaC,MAAM,CAC1CxO,KAAMuO,MACH/O,MAAM,QACNF,SAAS,oBACTY,IAAI,EAAG,0CAQoBqc,KAAxBD,QACA+N,IADwB9N,KAAhBC,YACG2P,IAAX9B,QAEFC,GAAU,SAAC,GAA0B,IAAxBnoB,EAAuB,EAAvBA,KAAMmzB,EAAiB,EAAjBA,WAAiB,EACVtjB,oBAAS,GADC,mBACjCuM,EADiC,KACxBC,EADwB,OAEkBxM,oBAAS,GAF3B,mBAEjCuY,EAFiC,KAEVC,EAFU,OAGOnc,EAC7C,GACA,oBALsC,mBAGjBknB,GAHiB,WAQlC7gB,EAAUC,eAEV6gB,EAAe,uCAAG,WAAOlzB,GAAP,iBAAA4L,EAAA,sEACKqnB,EAAqB,CAC9Cv0B,WAAY,CACVE,aAAc,CACZoB,SAJgB,QAChBmzB,EADgB,SAUsB,OAAxBA,EAAa5vB,SAnDJ4P,EAoDH,eAnD5BD,KAAa7M,QAAQ,CACnB8M,QAASA,GAAW,eACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,8BAiDnC+f,EAAavzB,EAAKge,QAAO,SAACve,GAAD,OAAUA,EAAKU,KAAOA,KACrDgzB,EAAWI,IAbS,iCAzCM,IAACjgB,IAyCP,OAAH,sDAyBrB,OACE,oCACE,kBAAC,KAAD,CAMEyD,KAAK,QAEL8D,WAAY7a,GAEZ,kBAAC,GAAD,CACEiB,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,6BAAmCqZ,EAAOhb,KAE1CkoB,EAAyBlN,IAE3B/c,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAMT,kBAAC,GAAD,CACEjE,UAAU,uBACViD,MAAM,GACNZ,IAAI,SACJsoB,MAAM,QACNzN,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,uBAAGvC,KAAK,MACN,kBAAC,KAAD,CAASN,UAAU,MAAMjT,MAAM,aAC7B,0BACEjD,UAAU,WACV+P,QAAS,WACPsO,GAAW,GACXgM,EAAyBlN,KAG3B,kBAACyN,GAAA,EAAD,SAKN,kBAAC,KAAD,CACE7H,UAAW,kBAAMsS,EAAgBlY,EAAOhb,KACxCc,MAAM,qBACNkf,OAAO,MACPa,WAAW,MAEX,0BAAMhjB,UAAU,4BACd,kBAAC4iB,GAAA,EAAD,aAQXwH,GACC,kBAAC,GAAD,CACEsL,QAAS1zB,EACTmzB,WAAYA,EACZ2G,eAAgB1d,EAChB2d,kBAAmB1d,EACnB2d,cAAe5R,MA8GVqL,GArGC,SAAC,GAAe,qBACA5jB,mBAAS,IADV,mBACtB6jB,EADsB,KACbP,EADa,OAGUjnB,EAAe,GAAI,kBAH7B,mBAGtBggB,EAHsB,KAGZC,EAHY,KAK7BtgB,qBAAU,YACK,uCAAG,4BAAAE,EAAA,sEACKogB,EAAmB,CACpCttB,WAAY,CACVC,OAAQ,CACNiU,SAAU,QACVC,eAAgB,SALR,OACRhQ,EADQ,OAUdmwB,EAAWnwB,GAVG,2CAAH,qDAYbwe,KACC,IAnB0B,MAqB6B3R,oBAAS,GArBtC,mBAqBtB6T,EArBsB,KAqBCC,EArBD,KA+C7B,OACE,oCACE,yBAAK3lB,UAAU,yBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,+CACb,wBAAIA,UAAU,uCAAd,SAEA,kBAAC,GAAD,CACEqrB,aAAa,EACbrrB,UAAU,qBACVM,YAAY,iBACZb,SAAU,SAACqQ,GAAD,OApBD,SAACvQ,GACpB,GAAI2uB,EAASlsB,KAAKtB,OAAS,EAAG,CAC5B,IAAMk1B,EAAa1H,EAASlsB,KAAKge,QAAO,SAACve,GAAD,OACtCA,EAAK5B,KAAKiZ,cAAc3X,SAAS5B,EAAMuZ,kBAEzCqc,EAAWS,IAectK,CAAaxb,EAAEzE,OAAO9L,WAG3C,kBAAC,IAAD,CAEES,UAAU,6BACV4C,KAAM,kBAACiiB,GAAA,EAAD,MACN9U,QAAS,kBAAM4V,GAAyB,KAJ1C,YASF,yBAAK3lB,UAAU,uCACZkuB,EAAS9gB,MAAQsoB,EAAQh1B,OAAS,GACjC,kBAAC,GAAD,CAASy0B,WAAYA,EAAYnzB,KAAM0zB,IAExCxH,EAAS/gB,WAAa,kBAACoe,GAAD,MAEtB2C,EAAS9gB,QAAUsoB,EAAQh1B,OAAS,IACnC,yBACEN,MAAO,CACL0V,UAAW,UAGb,kBAAC,KAAD,CACExT,YAAY,gBACZO,MAAOmR,KAAMK,4BAOvB,kBAAC,GAAD,CACEqhB,QAASA,EACTP,WAAYA,EACZzP,sBAAuBA,EACvBC,yBAA0BA,MCzR5BxX,GAAmBC,MAAaC,MAAM,CACxCxO,KAAMuO,MAAa/O,MAAM,QAAQF,SAAS,oBAAoBY,IAAI,EAAG,0CAcnE8hB,GAAwB,SAACvM,GAC3BD,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,uBACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,yBAK7ChH,GAAgB,CAClB3O,KAAM,IAoKKg8B,GAzJG,SAAC,GAAkF,IAAhFC,EAA+E,EAA/EA,eAAgBC,EAA+D,EAA/DA,kBAAmBC,EAA4C,EAA5CA,cAAcU,EAA8B,EAA9BA,iBAA8B,EAC5CxuB,EAAe,GAAI,oBADyB,mBACzF+tB,EADyF,KACzEC,EADyE,KAK1FttB,EAAY,uCAAG,WAAOC,EAAaC,GAApB,eAAAf,EAAA,sEACUmuB,EAA0B,CACjDr7B,WAAY,CACRE,aAAc,CACVoB,GAAI0M,EAAO1M,KAGnB2D,KAAM,CACFjG,KAAMgP,EAAOhP,QARJ,QACXs8B,EADW,SAc2B,OAAxBA,EAAaz2B,QAC7Bg3B,EAAiB,CACbv6B,GAAG0M,EAAO1M,GACVE,IAAIwM,EAAO1M,GACXtC,KAAMgP,EAAOhP,OAEjBuB,QAAQC,IAAI,uBAAuB86B,GAvDd7mB,OAwDrB4I,EAvDR7I,KAAa7M,QAAQ,CACjB8M,QAASA,GAAW,eACpBhT,YAAa,GACbM,KAAM,kBAAC2S,GAAA,EAAD,CAAqBnV,MAAO,CAAEoV,MAAO,+BAkEvCqM,KAGJ/S,EAAQC,eAAc,GACtBgtB,GAAkB,GAvCD,iCAnCO,IAACzmB,IAmCR,OAAH,wDA2CZ4S,EAAe,SAACpY,GAClBisB,GAAkB,IAIhB/sB,EAA4B,SAACH,EAAQI,GACvC,OAAKJ,EAAOhP,OAASoP,GA4BzB,OALA7N,QAAQC,IAAI,gBAAgB26B,GAMxB,kBAAC,IAAD,CACI9sB,SAAU,SAACL,EAAQC,GAAT,OAAqBF,EAAaC,EAAQC,IACpDX,iBAAkBA,GAClBgB,gBAAgB,EAChBC,oBAAoB,EACpBZ,cAAa,eACNA,GADM,GAENwtB,EAFM,GAGJA,GAAiBx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAAK,CAC3DykB,YAAa6W,EAAa,IACvBA,EAAa,GAAO9W,WACpB8W,EAAa,GAAO9W,UACvBG,kBAAmB2W,EAAa,IAAWA,EAAa,GAAO5W,iBAAmB4W,EAAa,GAAO5W,gBACtGJ,OAAQgX,EAAa,IAAUA,EAAa,GAAOn8B,MAAQm8B,EAAa,GAAOn8B,KAC/EolB,cAAe+W,EAAa,IAAUA,EAAa,GAAO15B,aAAe05B,EAAa,GAAO15B,gBAIpG,gBACG+M,EADH,EACGA,aACAR,EAFH,EAEGA,OACAD,EAHH,EAGGA,aACAU,EAJH,EAIGA,OACAL,EALH,EAKGA,QACAM,EANH,EAMGA,aACAC,EAPH,EAOGA,QAEAC,GATH,EAQGC,WARH,EASGD,iBATH,EAUGE,YAVH,OAYO,oCACI,kBAAC,KAAD,CACCvP,MAAO,CACxB2hB,IAAK,QAGe9e,MAAM,YACNmb,QAAS0d,EACT9Z,KAAM,SAAClS,GAAD,OAAYlB,EAAakB,IAC/BmS,SAAUiG,EACV/F,OAAO,SACP6G,cAAe,CACXhZ,QAAST,EACT0Z,SAAU,SACVvpB,SAAUsP,EAA0BH,EAAQI,KAGhD,kBAAChQ,EAAD,CACpBI,MAAM,OACNE,MAAOsP,EAAOhP,KACdA,KAAK,OACLF,QAAU6P,EAAQ3P,MAAQyP,EAAOzP,OAC9B0P,GAAgB0sB,EAAenvB,MAAf,WAEnBlN,YAAc4P,EAAQ3P,MAAQyP,EAAOzP,OAClC0P,GAAgB0sB,EAAenvB,MAAf,WACnBrN,SAAU,SAACqQ,GACVT,EAAaS,GACbL,EAAgB,iBChKjB0M,GAAwBC,KAAxBD,OAuPO4Z,IAvPiB3Z,KAAhBC,YACG2P,IAAX9B,OAMe,SAAC5V,GAAkB,IAAD,EACQpG,EAC7C,GACA,oBAHqC,mBAChCyuB,EADgC,KAChBC,EADgB,OAKY1uB,EACjD,GACA,oBAPqC,mBAKhC2uB,EALgC,KAKdC,EALc,OAUKjrB,oBAAS,GAVd,mBAUhCiqB,EAVgC,KAUhBC,EAVgB,OAWGlqB,mBAAS,IAXZ,mBAWhCmqB,EAXgC,KAWjBU,EAXiB,KAavCt7B,QAAQC,IAAI,mBAAoBw7B,GAChC,IAAM/7B,EAASurB,eACT9X,EAAUC,eACVogB,EAAQ9zB,EAAM,GAyCpB,OAvCA+M,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACM6uB,EAAqB,CAC9C/7B,WAAY,CACVE,aAAc,CACZoB,GAAIyyB,MAJW,QACfmI,EADe,UAWnB37B,QAAQC,IAAI,eAAgB07B,GAE5BL,EAAiBK,IAbE,2CAAH,qDAiBpB7F,KACC,CAACtC,IAEJ/mB,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sEACf+uB,EAAuB,CAC3Bj8B,WAAY,CACVE,aAAc,CACZoB,GAAIyyB,MAJW,2CAAH,qDAUpBoI,KACC,CAACpI,IAEJxzB,QAAQC,IAAI,mBAAoBw7B,GAEhCz7B,QAAQC,IAAI,cAAeP,GAGzB,yBAAKd,UAAU,wBACb,yBAAKA,UAAU,iCACb,2CAEC28B,EAAevvB,MACd4uB,GACAx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAClC,oCACE,kBAAC,GAAD,CACEo7B,eAAgBA,EAChBC,kBAAmBA,EACnBC,cAAeA,EACfU,iBAAkBA,IAEpB,kBAAC,IAAD,CACE3sB,QAAS,kBAAMgsB,GAAkB,IACjCz8B,KAAK,OACLsD,KAAM,kBAACgoB,GAAA,EAAD,OAHR,UAUR,kBAAC,KAAD,CAAU0C,UAAW,CAAEzP,KAAM,GAAK7N,QAAS2sB,EAAexvB,WACvDwvB,EAAevvB,MACd4uB,KACEx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,IACpC,kBAAC,KAAD,CACE4B,YAAY,gBACZO,MAAOmR,KAAMK,yBAIlBsoB,EAAevvB,MACd4uB,GACAx7B,OAAOC,KAAKu7B,GAAet7B,OAAS,GAClC,yBAAKV,UAAU,gCACb,yBAAKA,UAAU,qCACb,4BAAKg8B,EAAa,MACjBA,EAAa,KACZ,mCAEE,8BAAOA,EAAa,SAQlC,yBAAKh8B,UAAU,iCACb,wCAEF,yBAAKA,UAAU,8BACZ68B,EAAiB1vB,WAAa,kBAACoe,GAAD,MAC9BsR,EAAiBzvB,QAAUyvB,EAAiB76B,KAAKtB,OAAS,IACzD,yBACEN,MAAO,CACL0V,UAAW,UAGb,kBAAC,KAAD,CACExT,YAAY,iCACZO,MAAOmR,KAAMK,0BAKlBwoB,EAAiBzvB,MAChByvB,EAAiB76B,MACjB66B,EAAiB76B,KAAKtB,OAAS,GAC7B,oCACE,kBAAC,KAAD,CACEN,MAAO,CACLmtB,WAAY,OACZltB,aAAc,iBACdmtB,SAAU,SACVvb,UACE,+FAOJ8G,KAAK,QAEL8D,WAAYggB,EAAiB76B,KAC7B8a,YAAa,OACbC,YAAa,SAACC,GACZ,MAAO,CACL5c,MAAO,CACLoV,MAAO,qBAKb,kBAAC,GAAD,CACEvS,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,wBAA8BqZ,EAAOhb,MAGvC/B,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAMT,kBAAC,GAAD,CACEhB,MAAM,OACNga,UAAU,OACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,oCACE,wBACEpN,QAAS,WACPwE,EAAQzQ,KAAR,wBAA8BqZ,EAAOhb,MAGvC/B,MAAO,CACL0W,WAAY,IACZtB,MAAO,OACPQ,OAAQ,YAGT/R,OAMT,kBAAC,GAAD,CACEhB,MAAM,aACNga,UAAU,aACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEiD,MAAM,gBACNga,UAAU,eACV5a,IAAI,KACJrC,UAAU,yBAGZ,kBAAC,GAAD,CACEgS,MAAO,IACP/O,MAAM,UACNga,UAAU,UACV5a,IAAI,KACJrC,UAAU,uBACVkd,OAAQ,SAACjZ,EAAMkZ,GAAP,OACN,kBAAC,KAAD,CAAOpE,KAAK,UACV,4BACG9U,GAAQyS,IAAOzS,GAAM+H,OAAO,sCC/M7CsF,GAAYF,IAAZE,QCxDOA,GD4DU,SAACgD,GACxB,OACE,kBAAC,GAAD,CACEurC,UAAU,EACVz/C,MAAO,CACLgW,gBAAiB,OACjBmX,WAAY,SAGd,kBAAC,KAAD,KACE,kBAAC,KAAD,CACEuyB,OAAK,EACLzQ,KAAK,IACLnyB,OAAQ,kBAAM,kBAAC,KAAD,CAAU1K,GAAG,uBAE7B,kBAAC,KAAD,CACEstC,OAAK,EACLzQ,KAAK,SACLnyB,OAAQ,kBAAM,kBAAC,KAAD,CAAU1K,GAAG,uBAE7B,kBAAC,KAAD,CAAO68B,KAAK,kBAAkByQ,OAAK,GACjC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,kBAAkByQ,OAAK,GACjC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,sBAAsByQ,OAAK,GACrC,kBAACC,GAAD,OAMF,kBAAC,KAAD,CAAO1Q,KAAK,mBAAmByQ,OAAK,GAClC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,eAAeyQ,OAAK,GAC9B,kBAACE,GAAD,OAEF,kBAAC,KAAD,CAAO3Q,KAAK,mBAAmByQ,OAAK,GAClC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,iBAAiByQ,OAAK,GAChC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,qBAAqByQ,OAAK,GACpC,kBAACG,GAAD,OAEF,kBAAC,KAAD,CAAO5Q,KAAK,gBAAgByQ,OAAK,GAC/B,kBAACI,GAAD,OAEF,kBAAC,KAAD,CAAO7Q,KAAK,oBAAoByQ,OAAK,GACnC,kBAACK,GAAD,OAEF,kBAAC,KAAD,CAAO9Q,KAAK,gBAAgByQ,OAAK,GAC/B,kBAACM,GAAD,OAEF,kBAAC,KAAD,CAAO/Q,KAAK,eAAeyQ,OAAK,GAC9B,kBAACO,GAAD,OAEF,kBAAC,KAAD,CAAOhR,KAAK,mBAAmByQ,OAAK,GAClC,kBAACQ,GAAD,OAEF,kBAAC,KAAD,CAAOjR,KAAK,wBAAwByQ,OAAK,GACvC,kBAACS,GAAD,OAEF,kBAAC,KAAD,CAAOlR,KAAK,mBAAmByQ,OAAK,GAClC,kBAACU,GAAD,OAEF,kBAAC,KAAD,CAAOnR,KAAK,uBAAuByQ,OAAK,GACtC,kBAACW,GAAD,OAEF,kBAAC,KAAD,CAAOpR,KAAK,4BAA4ByQ,OAAK,GAC3C,kBAACY,GAAD,OAEF,kBAAC,KAAD,CAAOrR,KAAK,oBAAoByQ,OAAK,GACnC,kBAACa,GAAD,OAEF,kBAAC,KAAD,CAAOtR,KAAK,sBAAsByQ,OAAK,GACrC,kBAAC,GAAD,OAKF,kBAAC,KAAD,CAAOzQ,KAAK,aAAayQ,OAAK,GAC5B,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,iBAAiByQ,OAAK,GAChC,kBAACrjB,GAAD,OAEF,kBAAC,KAAD,CAAO4S,KAAK,iBAAiByQ,OAAK,GAChC,kBAACc,GAAD,OAEF,kBAAC,KAAD,CAAOvR,KAAK,mBAAmByQ,OAAK,GAClC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,eAAeyQ,OAAK,GAC9B,kBAACe,GAAD,OAEF,kBAAC,KAAD,CAAOxR,KAAK,mBAAmByQ,OAAK,GAClC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,wBAAwByQ,OAAK,GACvC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,sBAAsByQ,OAAK,GACrC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,mBAAmByQ,OAAK,GAClC,kBAACgB,GAAD,OAEF,kBAAC,KAAD,CAAOzR,KAAK,gBAAgByQ,OAAK,GAC/B,kBAACiB,GAAD,OAEF,kBAAC,KAAD,CAAO1R,KAAK,qBAAqByQ,OAAK,GACpC,kBAACkB,GAAD,OAEF,kBAAC,KAAD,CAAO3R,KAAK,yBAAyByQ,OAAK,GACxC,kBAACmB,GAAD,OAEF,kBAAC,KAAD,CAAO5R,KAAK,oBAAoByQ,OAAK,GACnC,kBAACoB,GAAD,OAEF,kBAAC,KAAD,CAAO7R,KAAK,eAAeyQ,OAAK,GAC9B,kBAACqB,GAAD,OAEF,kBAAC,KAAD,CAAO9R,KAAK,sBAAsByQ,OAAK,GACrC,kBAACsB,GAAD,OAEF,kBAAC,KAAD,CAAO/R,KAAK,0BAA0ByQ,OAAK,GACzC,kBAACuB,GAAD,OAEF,kBAAC,KAAD,CAAOhS,KAAK,mBAAmByQ,OAAK,GAClC,kBAACwB,GAAD,OAEF,kBAAC,KAAD,CAAOjS,KAAK,iBAAiByQ,OAAK,GAChC,kBAACyB,GAAD,OAEF,kBAAC,KAAD,CAAOlS,KAAK,qBAAqByQ,OAAK,GACpC,kBAAC0B,GAAD,OAGF,kBAAC,KAAD,CAAOnS,KAAK,8BAA8ByQ,OAAK,GAC7C,kBAACe,GAAD,OAGF,kBAAC,KAAD,CAAOxR,KAAK,kBAAkByQ,OAAK,GACjC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,sBAAsByQ,OAAK,GACrC,kBAAC2B,GAAD,OAEF,kBAAC,KAAD,CAAOpS,KAAK,cAAcyQ,OAAK,GAC7B,kBAAC4B,GAAD,OAEF,kBAAC,KAAD,CAAOrS,KAAK,kBAAkByQ,OAAK,GACjC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,uBAAuByQ,OAAK,GACtC,kBAAC6B,GAAD,OAGF,kBAAC,KAAD,CAAOtS,KAAK,kBAAkByQ,OAAK,GACjC,kBAAC8B,GAAD,OAEF,kBAAC,KAAD,CAAOvS,KAAK,kBAAkByQ,OAAK,GACjC,kBAAC+B,GAAD,OAEF,kBAAC,KAAD,CAAOxS,KAAK,6BAA6ByQ,OAAK,GAC5C,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,wBAAwByQ,OAAK,GACvC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,yBAAyByQ,OAAK,GACxC,kBAACgC,GAAD,OAEF,kBAAC,KAAD,CAAOzS,KAAK,0BAA0ByQ,OAAK,GACzC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,2BAA2ByQ,OAAK,GAC1C,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,yBAAyByQ,OAAK,GACxC,kBAACiC,GAAD,OAEF,kBAAC,KAAD,CAAO1S,KAAK,6BAA6ByQ,OAAK,GAC5C,kBAACkC,GAAD,OAEF,kBAAC,KAAD,CAAO3S,KAAK,aAAayQ,OAAK,GAC5B,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOzQ,KAAK,eAAeyQ,OAAK,GAC9B,kBAACmC,GAAD,UE/LJvwC,GAAoB,CACxBX,UAAWY,EAAiBZ,UAC5B8qC,gBAAiBC,EAAsBD,iBAQ1BjqC,gBALS,SAAC3E,GAAD,MAAY,CAClC2D,YAAa3D,EAAM2D,eAImBc,GAAzBE,EAlDH,SAAC,GAAoC,IAAlCb,EAAiC,EAAjCA,UAAiC,KAAtB8qC,gBAIpB3tC,EAAe,GAAI,uBAJuB,mBAG5Cg0C,GAH4C,WAkB9C,OAZAr0C,qBAAU,YACY,uCAAG,4BAAAE,EAAA,sEACHm0C,EAA6B,IAD1B,QACft1C,EADe,SAIVA,EAAG,MACZmE,EAAUnE,EAAG,MAAY,IALN,2CAAH,qDAQpBu1C,KACC,IAGD,kBAAC,IAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO9S,KAAK,eAAeyQ,OAAK,GAC9B,kBAAC,EAAD,QAGJ,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAQ1/C,MAAO,CAAEo5B,UAAW,UAC1B,kBAAC,GAAD,MAEA,kBAAC,IAAD,CAAQx5B,UAAU,eAChB,kBAAC,GAAD,MACA,kBAAC,GAAD,a,wCCtDL,SAASoiD,GAAmBC,GAC/B,OAAQA,IAASA,EAAKC,QAAUD,EAAKE,SAGlC,SAASC,GAAiBljD,GAC7B,OAAOA,EAAK6B,SAAU,eAAkB7B,EAAK6B,SAAU,WCH3D,I,GCAe+O,GDAK,WAA0B,IAAxBjD,EAAuB,uDAAf,EAAGC,EAAY,uCACzC,OAAKu1C,GAAyBv1C,EAAOm1C,MAC1Bp1C,EAENw1C,GAAsBv1C,EAAO5N,MACvB2N,EAAQ,EAEZA,EAAQ,GETZ,SAASy1C,GAAsBC,EAAMr+C,GAC1C,OAAOq+C,EAAK1hD,KAAI,SAAAQ,GAAI,OAAIA,EAAK6C,QAAQnC,MAAIN,QAAQyC,EAAQnC,IAGpD,SAASygD,GAAYt+C,EAASiB,EAAUs9C,GAC7C,MAAO,CACLv+C,UACAiB,WACAs9C,yBCJG,I,GCMQ3yC,GCKKW,GAFC,GAEDA,EAAA,sBCdE,eDeJ,SAAC5D,EAAOC,GAAY,IAAD,EACoBA,EAAOG,QAApD/I,EADyB,EACzBA,QAASiB,EADgB,EAChBA,SAAUs9C,EADM,EACNA,sBAE3B,OAAe,IADDJ,GAA4Bx1C,EAAO3I,GAEzC,CACJm+C,GAAkBn+C,EAASiB,EAAUs9C,IADvC,oBAEK51C,IAI4BA,EAAM+S,QACvC,SAACve,GAAD,OAAUA,EAAK6C,QAAQnC,KAAOmC,EAAQnC,SAZxB,gBCbgB,6BD+BJ,SAAC8K,EAAOC,GAAY,IACxC9H,EAAc8H,EAAOG,QAArBjI,UAER,OAAIA,EAAU1E,OAAS,EACd0E,EAEA,aAAI6H,MAxBG,gBCZuB,wCDwCJ,SAACA,EAAOC,GAAY,IAC/C5I,EAAY4I,EAAOG,QAAnB/I,QAEFmS,EAAQgsC,GAA4Bx1C,EAAO3I,EAAQA,SACzD,IAAe,IAAXmS,EACF,MAAM,GAAN,oBAAWxJ,GAAX,gBAAuB3I,EAAvB,CAAgCu+C,uBAAuB,MAClD,IAAe,IAAXpsC,IAAiBnS,EAAQu+C,sBAAuB,CACzD,IAAMC,EAA6B71C,EAAM+S,QACvC,SAACve,GAAD,OAAUA,EAAK6C,QAAQnC,KAAOmC,EAAQA,QAAQnC,MAGhD,MAAM,GAAN,oBACK2gD,GADL,gBAEOx+C,EAFP,CAEgBu+C,uBAAuB,MAIzC,IAAMC,EAA6B71C,EAAM+S,QACvC,SAACve,GAAD,OAAUA,EAAK6C,QAAQnC,KAAOmC,EAAQA,QAAQnC,MAGhD,MAAM,GAAN,oBACK2gD,GADL,gBAEOx+C,EAFP,CAEgBu+C,uBAAuB,SAnDvB,gBCXW,wBDkEJ,SAAC51C,EAAOC,GAAY,IAAD,EACZA,EAAOG,QAA7B/I,EADkC,EAClCA,QAASiB,EADyB,EACzBA,SACXkR,EAAQgsC,GAA4Bx1C,EAAO3I,GAE3Cod,EAAclhB,OAAOmhB,OAAO,GAAI1U,EAAMwJ,GAAQ,CAAElR,aACtD,MAAM,GAAN,oBAAW0H,EAAMrL,MAAM,EAAG6U,IAA1B,CAAkCiL,GAAlC,aAAkDzU,EAAMrL,MAAM6U,EAAQ,QA5DtD,gBCVE,eDwEJ,SAACxJ,EAAOC,GAAY,IAE5BuJ,EAAQgsC,GAA4Bx1C,EADtBC,EAAOG,QAAnB/I,SAER,MAAM,GAAN,oBAAW2I,EAAMrL,MAAM,EAAG6U,IAA1B,aAAqCxJ,EAAMrL,MAAM6U,EAAQ,QAjEzC,gBCTC,cD4EJ,iBAAM,MAnEH,KEfb,SAASssC,GAA0BC,EAAUxvB,GAClD,OAAOwvB,EAAS/hD,KAAI,SAAAQ,GAAI,OAAIA,KAAMI,QAAQ2xB,GCM7BtjB,I,GAAAA,GCOSW,GAFH,GAEGA,EAAA,sBCdF,mBDeJ,SAAC5D,EAAOC,GAAY,IAC1BsmB,EAActmB,EAAOG,QAArBmmB,UAGR,OAAe,IADDivB,GAAgCx1C,EAAOumB,GAE7C,GAAN,oBAAWvmB,GAAX,CAAkBumB,IAGevmB,EAAM+S,QACvC,SAACve,GAAD,OAAUA,IAAS+xB,QAVD,gBCbI,yBD4BJ,SAACvmB,EAAOC,GAC5B,IAAM+1C,EAAW/1C,EAAOG,QACxB,OAAO,aAAI41C,MAjBS,gBCZF,mBDgCJ,SAACh2C,EAAOC,GAAY,IAE5BuJ,EAAQgsC,GAAgCx1C,EADxBC,EAAOG,QAArBmmB,WAER,MAAM,GAAN,oBAAWvmB,EAAMrL,MAAM,EAAG6U,IAA1B,aAAqCxJ,EAAMrL,MAAM6U,EAAQ,QAvBrC,gBCXH,kBDoCJ,iBAAM,MAzBC,KETjB,I,GCEQvG,GCQSW,GAFH,GAEGA,EAAA,sBCbgB,qCDcJ,SAAC5D,EAAOC,GAAY,IAC5CxG,EAAawG,EAAOG,QAApB3G,SAER,OAAIA,EAAShG,OAAS,EACagG,EAASsZ,QAAO,SAAS1b,GACxD,OAAkC,GAA3B2I,EAAMpL,QAAQyC,MAIhB,aAAI2I,MAVO,gBCXF,mBDwBJ,SAACA,EAAOC,GAAY,IAE5BuJ,EE9BH,SAAgCksC,EAAMr+C,GACzC,OAAOq+C,EAAK1hD,KAAK,SAAAQ,GAAI,OAAIA,EAAK6C,QAAQnC,MAAKN,QAASyC,EAAQnC,IF6B9CsgD,CAA4Bx1C,EADtBC,EAAOG,QAAnB/I,SAER,MAAM,GAAN,oBAAW2I,EAAMrL,MAAM,EAAG6U,IAA1B,aAAqCxJ,EAAMrL,MAAM6U,EAAQ,QAhBrC,gBCVH,kBD4BJ,iBAAM,MAlBC,KGfXysC,GAAM,aCAZ,SAASC,GAAyBC,EAAWC,GAClD,OAAOD,EAAUniD,KAAI,SAAAQ,GAAI,OAAIA,EAAKY,OAAKR,QAAQwhD,EAAMhhD,KCMxC6N,I,YAAAA,GCWWW,GAFL,GAEKA,EAAA,sBACvByyC,IAAY,SAACr2C,EAAOC,GAAY,IACvBm2C,EAAUn2C,EAAOG,QAAjBg2C,MACF5sC,EAAQgsC,GAA+Bx1C,EAAOo2C,GACpD,IAAe,IAAX5sC,EACF,MAAM,CAAqB4sC,GAA3B,oBAAsCp2C,IAGxC,IAAMs2C,EAAct2C,EAAMwJ,GACpBiL,EAAclhB,OAAOmhB,OAAO,GAAI4hC,GACtC,MAAM,GAAN,oBAAWt2C,EAAMrL,MAAM,EAAG6U,IAA1B,CAAkCiL,GAAlC,aAAkDzU,EAAMrL,MAAM6U,EAAQ,QAVhD,gBHjBJ,iBG6BJ,SAACxJ,EAAOC,GAAY,IAC1Bm2C,EAAUn2C,EAAOG,QAAjBg2C,MACFG,EAAWv2C,EAAMmU,MAAK,SAAA3f,GAAI,OAAIA,EAAKY,MAAQghD,EAAMhhD,OACjDohD,EAA6Bx2C,EAAM+S,QAAO,SAAAve,GAAI,OAAIA,EAAKY,MAAQghD,EAAMhhD,OAC3E,MAAM,GAAN,oBAAWohD,GAAX,gBAA4CD,EAA5C,GAAyDH,QAhBnC,gBHhBJ,iBGkCJ,SAACp2C,EAAOC,GAAY,IAE5BuJ,EAAQgsC,GAA+Bx1C,EADzBC,EAAOG,QAAnB/I,SAER,MAAM,GAAN,oBAAW2I,EAAMrL,MAAM,EAAG6U,IAA1B,aAAqCxJ,EAAMrL,MAAM6U,EAAQ,QArBnC,gBHfL,gBGsCJ,iBAAM,MAvBG,KCPpBitC,GAAiB7yC,GAAe,KAAfA,CAAA,gBCVgB,mCDWA,SAAE5D,EAAOC,GAAT,OAAqBA,EAAOG,QAAQ/I,YAGrEq/C,GAAc9yC,GAAe,GAAfA,CAAA,gBCVgB,gCDWA,SAAE5D,EAAOC,GAAT,OAAqBA,EAAOG,QAAQ3G,aERzDwJ,GFWA0zC,aAAiB,CAC5BC,QAASH,GACTI,KAAMH,KGVJI,GAAclzC,IAAc,EAAdA,EAAA,sBCXC,iBDYJ,kBAAM,KADH,gBCRE,kBDUJ,kBAAM,KAFJ,KAKdmzC,GAA4BnzC,GAAc,KAAdA,CAAA,gBCXM,oCDYJ,SAAC5D,EAAOC,GAAR,OAAmBA,EAAOG,QAAQ42C,gBETvD/zC,GFYA0zC,aAAgB,CAC7BpP,gBAAiBuP,GACjBG,mBAAoBF,KGDPG,GAhBKtzC,GAFC,GAEDA,EAAA,sBCLU,2BDMJ,SAAC5D,EAAOC,GAAY,IAClCie,EAAeje,EAAOG,QAAtB8d,WAER,OAAIA,GAIG,aAAIle,MARK,gBCJU,2BDeJ,SAACA,EAAOC,GAC9B,OAAO,aAAID,MAZK,KEELiD,I,OAAAA,ICUAi0C,GAZKtzC,GAFC,GAEDA,CAAA,gBCLa,8BDMJ,SAAC5D,EAAOC,GAAY,IACrCuD,EAAavD,EAAOG,QAApBoD,SAER,OAAIA,EACK,eAAKxD,EAAZ,GAAsBwD,GAGjB,eAAKxD,OENDiD,I,OAAAA,ICcAi0C,GAhBKtzC,GAFC,GAEDA,EAAA,sBCLK,sBDMJ,SAAC5D,EAAOC,GAAY,IAC7BwqB,EAAWxqB,EAAOG,QAAlBqqB,OAER,OAAIA,GAIG,aAAIzqB,MARK,gBCJK,sBDeJ,SAACA,EAAOC,GACzB,OAAO,aAAID,MAZK,KEELiD,I,OAAAA,ICcAi0C,GAhBKtzC,GAFC,GAEDA,EAAA,sBCLI,gBDMJ,SAAC5D,EAAOC,GAAY,IAC5BlI,EAASkI,EAAOG,QAAhBrI,KAER,OAAIA,GAIG,aAAIiI,MARK,gBCJI,gBDeJ,SAACA,EAAOC,GACxB,OAAO,aAAID,MAZK,KEELiD,I,OAAAA,ICLTk0C,GAA8B,qBAAbC,SAA2B,4BAA8B,OAsBjEC,GApBI,kBAAO,SAAElgD,GAAF,OAAY,SAAE8I,GACpC,IAAMsb,EAASpkB,EAAM8I,GACrB,IAAMA,EAAOm1C,OAASn1C,EAAOm1C,KAAKC,MAC9B,OAAO95B,EAHqC,MAMTtb,EAAOm1C,KAAtChT,EANwC,EAMxCA,KANwC,IAMlCjjC,cANkC,MAMzB,MANyB,EAMlBtG,EANkB,EAMlBA,KAE9B,IAAMupC,EACF,MAAM,IAAI/hC,MAAJ,gDAAqDJ,EAAO5N,OAGtE,IAAMsB,EAAG,UAAOwjD,IAAP,OAAmB/U,GAE5B,OAAO3iC,GAAO9L,EAAKwL,EAAQtG,GAAOuK,MAC9B,SAAAzD,GAAG,OAiBX,SAAyBA,EAAKM,EAAQ9I,GAOlC,OANAA,EAAM,CACF9E,KAAK,GAAD,OAAM4N,EAAO5N,KAAb,cACJ+N,QAAST,EACTy1C,KAAMn1C,EAAOm1C,OAGVz1C,EAxBI23C,CAAgB33C,EAAKM,EAAQ9I,MACpC,SAAAynB,GAAG,OAMX,SAAuBA,EAAK3e,EAAQ9I,GAOhC,OANAA,EAAM,CACF9E,KAAK,GAAD,OAAM4N,EAAO5N,KAAb,WACJ+N,QAASwe,EACTw2B,KAAMn1C,EAAOm1C,OAGV/xC,QAAQE,OAAQqb,GAbZ24B,CAAc34B,EAAK3e,EAAQ9I,SCpB1B,CACZ,mBACA,gBACF1C,KAAM,KAEQ,CACZ,oBACA,gBACFA,KAAM,KAEQ,CACZ,yBACA,gBACFA,KAAM,KAEQ,CACZ,kBACA,gBACFA,KAAM,KCZR,IAAM+iD,GAAcb,aAAgBc,GAE9BC,GAAgB,CACpBtiD,IAAK,OACLuiD,QAASA,MAILC,GAAWC,aAAeH,GAAeF,IAe/C,IAbwB/2C,GAalBq3C,IAbkBr3C,GAaK,GAZpBs3C,aACLH,GACAn3C,GACAu3C,aACEC,aAAgBZ,IAChBlgB,OAAO+gB,6BACH/gB,OAAO+gB,+BACP,SAACC,GAAD,OAAOA,M,IAOCC,aAAaN,I,eCb9BO,IAASpoC,OACR,kBAAC,IAAD,CAAe6nC,MAAOA,IACrB,kBAAC,gBAAD,KACC,kBAAC,GAAD,QAGFV,SAASkB,eAAe,W","file":"static/js/main.68d74c7a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\ninterface Props {\r\n  label?: string;\r\n  type?: string;\r\n  defaultValue?: string;\r\n  value?: string;\r\n  onChange?: any;\r\n  disabled?: boolean;\r\n  isError?: boolean;\r\n  errorString?: string;\r\n  name?: string;\r\n  addonBefore?: string;\r\n  required?: boolean;\r\n  placeHolder?: string;\r\n  min?: any;\r\n}\r\n\r\nconst Demo = ({\r\n  required,\r\n  addonBefore,\r\n  label,\r\n  type,\r\n  defaultValue,\r\n  value,\r\n  onChange,\r\n  disabled,\r\n  isError,\r\n  errorString,\r\n  name,\r\n  placeHolder,\r\n  min,\r\n}: Props) => {\r\n  return (\r\n    <>\r\n      {label && <h3 className='inputFieldLabel'>{label}</h3>}\r\n\r\n      <Form.Item\r\n        // hasFeedback={true}\r\n        validateStatus={isError ? 'error' : ''}\r\n        // hasFeedback validateStatus=\"success\"\r\n        help={errorString}\r\n        // rules={[{ required: true }]}\r\n      >\r\n        <Input\r\n          min={min}\r\n          required={required}\r\n          type={type}\r\n          addonBefore={addonBefore}\r\n          style={{\r\n            borderRadius: '0',\r\n          }}\r\n          name={name}\r\n          disabled={disabled}\r\n          value={value}\r\n          onChange={onChange}\r\n          className='inputclassName'\r\n          placeholder={placeHolder}\r\n        />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","const isObjectEmpty = value => {\r\n  return !value || !Object.keys(value).length > 0;\r\n};\r\n\r\nconst manupulateURL = (url, urlOptions = {}) => {\r\n  if (isObjectEmpty(urlOptions)) return url;\r\n\r\n  const params = urlOptions.params || {};\r\n  const placeHolders = urlOptions.placeHolders || {};\r\n\r\n\r\n\r\n  return url\r\n    .split('/')\r\n    .map(currentValue => {\r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders) && !currentValue.includes('?')) {\r\n        console.log('currentValue',currentValue);\r\n        let actualPlaceholderValue = placeHolders[currentValue.replace(':', '')];\r\n        console.log('actualPlaceholderValue',actualPlaceholderValue);\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n      \r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders) && currentValue.includes('?')) {\r\n        let fuckValue = currentValue.split('?'); \r\n        if(fuckValue && fuckValue.length > 0){\r\n          fuckValue = fuckValue.map(item => {\r\n            return placeHolders[item.replace(':', '')] ? placeHolders[item.replace(':', '')] : item\r\n          })\r\n        }\r\n        console.log('fuckValue',fuckValue);\r\n        let actualPlaceholderValue = fuckValue.join('?');\r\n        console.log('actualPlaceholderValue',actualPlaceholderValue,'currentVAlue',currentValue);\r\n        console.log('placeHolders',placeHolders);\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (currentValue.includes('?')) {\r\n        currentValue = currentValue\r\n          .split('&')\r\n          .map(currentValue => {\r\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\r\n            return currentValue.replace(param, params[param] || '');\r\n          })\r\n          .join('&');\r\n      }\r\n      return currentValue;\r\n    })\r\n    .join('/');\r\n};\r\n\r\nexport default manupulateURL;\r\n","import config from '../config.json';\r\nimport apiMap from '../apiMap.json';\r\nimport Converter from './converter.js';\r\n\r\n// import utils\r\nimport { manupulateURL } from './utils';\r\n\r\nlet converter = new Converter();\r\n\r\nclass Connector {\r\n  //TODO\r\n  constructor() {\r\n    this.options = {};\r\n  }\r\n\r\n  /**\r\n   * @method request sends request to server\r\n   * this function determines api url and method from config.json\r\n   * and sends request and converts recieved data to general format\r\n   * @param {String} item\r\n   * @param {String} format\r\n   * @param {Object} data optional\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async request(item, format = 'json', options = {}) {\r\n    let api = apiMap[config.server][item]; //api url & method\r\n\r\n    // configuring options for fetch request\r\n\r\n    this.options = {\r\n      ...this.options,\r\n      method: api.method,\r\n      credentials: 'include',\r\n      headers: new Headers({\r\n        ...(format === 'json' && {\r\n        'Content-Type': 'application/json',\r\n        }),\r\n        ...(options.headers && {\r\n          ...options.headers,\r\n        }),\r\n      }),\r\n\r\n      ...(format === 'json' ? {\r\n        body: api.method !== 'get' ? JSON.stringify(options.body) : null,\r\n      } : {\r\n          body: api.method !== 'get' ? options.body : null,\r\n        }),\r\n    };\r\n\r\n    //*replace variable parts in url with actual data if params exists |or| just return the url\r\n\r\n    const url = manupulateURL(api.url, options.urlOptions);\r\n    console.log('url',api.url)\r\n    console.log('urlOptions',this.options);\r\n    console.log('format',format);\r\n\r\n    // change the formate to text if the server is wooCommerce\r\n    if (config['server'] === 'wooCommerce') {\r\n      // format = 'text';\r\n    }\r\n\r\n    try {\r\n      let res = await fetch(config.baseURL + url, this.options);\r\n\r\n      if (res.status >= 200 && res.status < 300) {\r\n        let formattedData = await res['json'](); //await res.json(), res.text()\r\n        if (formattedData.status === 'error') {\r\n          throw formattedData.error;\r\n        }\r\n\r\n        let convertedData = await converter[item](formattedData); //convert recieved data to app general format\r\n        return convertedData;\r\n      } else {\r\n        let error = await res['json']();\r\n\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n\r\n      throw err;\r\n      //TODO: breakdown errors\r\n    }\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import config from '../config.json';\r\nimport dataMap from '../dataMap.json';\r\nimport moment from 'moment';\r\n\r\nclass Converter {\r\n  /**\r\n   * @public\r\n   * @method categoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const formatedData =\r\n      data.length > 0 &&\r\n      data.map((category) => {\r\n        return {\r\n          ...category,\r\n          id: category._id || '',\r\n          key: category._id || '',\r\n          name: category.name && category.name,\r\n          description: category.description && category.description,\r\n          productCount: category.productCount || 0,\r\n          parent: category.parent || '',\r\n          cover: category.cover\r\n            ? `${config['baseURL']}${category.cover.thumbnail}`\r\n            : null,\r\n          icon: category.icon ? `${config['baseURL']}${category.icon}` : null,\r\n          image:\r\n            (data.image &&\r\n              data.image.length > 0 &&\r\n              data.image.map((img) => {\r\n                return {\r\n                  id: img._id || '',\r\n                  name: img.name && img.name,\r\n                  cover: `${config['baseURL']}${img.medium}`,\r\n                  added: img.added,\r\n                  title: img.title,\r\n                  labels: img.labels,\r\n                  alt: img.alt,\r\n                  caption: img.caption,\r\n                };\r\n              })) ||\r\n            [],\r\n          subCount:\r\n            category.subCategory.length === 1\r\n              ? category.subCategory[0] && category.subCategory[0].name\r\n                ? category.subCategory.length\r\n                : 0\r\n              : category.subCategory.length,\r\n          ...(category.subCategory &&\r\n            category.subCategory.length > 0 &&\r\n            category.subCategory[0] &&\r\n            category.subCategory[0]['name'] && {\r\n              children: category.subCategory.map((subCat) => {\r\n                return {\r\n                  id: subCat._id || '',\r\n                  key: subCat._id,\r\n                  name: subCat.name && subCat.name,\r\n                  description: subCat.description && subCat.description,\r\n                  cover: subCat.cover\r\n                    ? `${config['baseURL']}${subCat.cover.thumbnail}`\r\n                    : '',\r\n                };\r\n              }),\r\n            }),\r\n        };\r\n      });\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postCategoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryList(resData) {\r\n    const data = resData.data && resData.data ? resData.data : [];\r\n\r\n    const formatedData =\r\n      data.length > 0 &&\r\n      data.map((category) => {\r\n        return {\r\n          id: category._id || '',\r\n          key: category._id || '',\r\n          name: category.name && category.name,\r\n          description: category.description && category.description,\r\n          cover: category.cover\r\n            ? `${config['baseURL']}${category.cover.thumbnail}`\r\n            : null,\r\n          icon: category.icon ? `${config['baseURL']}${category.icon}` : null,\r\n        };\r\n      });\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postCategoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryDetail(resData) {\r\n    const data = resData;\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        name: data.name && data.name,\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.cover ? data.cover.original && data.cover.original : ''\r\n          }`,\r\n          id: data.cover ? data.cover._id : '',\r\n        },\r\n        url: data.url,\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAllNotification convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAllNotification(resData) {\r\n    const data = resData.data || [];\r\n\r\n    let notiData = [];\r\n    if (data && data.length > 0) {\r\n      data.forEach((not) => {\r\n        if (!not.read) {\r\n          notiData.push(not);\r\n        }\r\n      });\r\n    }\r\n\r\n    return notiData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAllNotificationPage convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAllNotificationPage(resData) {\r\n    const data = resData.data || [];\r\n    const formatedData =\r\n      data.length > 0 &&\r\n      data.map((noti) => {\r\n        return {\r\n          id: noti._id || '',\r\n          key: noti._id || '',\r\n          heading: noti.heading && noti.heading,\r\n          text: noti.text && noti.text,\r\n          type: noti.type,\r\n          link: noti.link || '',\r\n          added: noti.added || '',\r\n          read: noti.read,\r\n        };\r\n      });\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categorySelectist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categorySelectist(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const formatedData =\r\n      data.length > 0 &&\r\n      data.map((category) => {\r\n        return {\r\n          id: category._id || '',\r\n          key: category._id || '',\r\n          title: category.name && category.name,\r\n          ...(category.subCategory &&\r\n            category.subCategory.length > 0 &&\r\n            category.subCategory[0] &&\r\n            category.subCategory[0]['name'] && {\r\n              children: category.subCategory.map((subCat) => {\r\n                return {\r\n                  id: subCat._id || '',\r\n                  key: subCat._id,\r\n                  title: subCat.name && subCat.name,\r\n                  cover: subCat.cover\r\n                    ? `${config['baseURL']}${\r\n                        subCat.cover.thumbnail ? subCat.cover.thumbnail : ''\r\n                      }`\r\n                    : '',\r\n                };\r\n              }),\r\n            }),\r\n        };\r\n      });\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categorySelectist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postSelectCategoryList(resData) {\r\n    const data = resData.data;\r\n\r\n    const formatedData =\r\n      data.length > 0 &&\r\n      data.map((category) => {\r\n        return {\r\n          id: category._id || '',\r\n          key: category._id || '',\r\n          title: category.name && category.name,\r\n        };\r\n      });\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categoryProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryProducts(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          description: product.description && product.description,\r\n          cover: `${config['baseURL']}${\r\n            (product.cover && product.cover['thumbnail']) || ''\r\n          }`,\r\n          regularPrice: product.price && product.price['regular'],\r\n          offerPrice: product.price && product.price['offer'],\r\n          url: product.url,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n          venue: product.venue,\r\n          brand: product.brand,\r\n          tags: product.tags,\r\n          price:\r\n            parseInt(product.price['offer']) >\r\n            parseInt(product.price['regular'])\r\n              ? product.price['offer']\r\n              : product.price['regular'],\r\n          available:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['available']\r\n              : 0,\r\n          minimum:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['minimum']\r\n              : 0,\r\n        };\r\n      });\r\n\r\n    // return {\r\n    // \tdata: convertedData,\r\n    // \tisNext: isNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getCart(resData) {\r\n    const cartItems = resData.items || [];\r\n    const convertedData =\r\n      cartItems.length > 0 &&\r\n      cartItems.map((cartItem) => {\r\n        return {\r\n          id: cartItem._id || '',\r\n          name: cartItem.name && cartItem.name,\r\n          cover: `${config['baseURL']}${cartItem.cover.medium}`,\r\n          regularPrice: cartItem.price && cartItem.price['regular'],\r\n          offerPrice: cartItem.price && cartItem.price['offer'],\r\n          quantity: cartItem.quantity,\r\n          url: cartItem.url,\r\n          cartKey: cartItem.cartKey,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addtoCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addtoCart(resData) {\r\n    let data = false;\r\n\r\n    if (resData['inserted']) {\r\n      data = {\r\n        id: resData['inserted']._id || '',\r\n        name: resData['inserted'].name && resData['inserted'].name,\r\n        cover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\r\n        regularPrice:\r\n          resData['inserted'].price && resData['inserted'].price['regular'],\r\n        offerPrice:\r\n          resData['inserted'].price && resData['inserted'].price['offer'],\r\n        quantity: resData['inserted'].quantity,\r\n        url: resData['inserted'].url,\r\n        cartKey: resData['inserted'].cartKey,\r\n      };\r\n    }\r\n\r\n    const convertedData = data;\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method removeFromCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async removeFromCart(resData) {\r\n    let convertedData = false;\r\n    if (resData) {\r\n      convertedData = true;\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateCartItem convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateCartItem(resData) {\r\n    let convertedData = false;\r\n    if (resData['updated']) {\r\n      convertedData = {\r\n        quantity: resData.updated['quantity'],\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method clearCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async clearCart(data) {\r\n    if (data && data['msg']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getWishlist(resData) {\r\n    // const cartItems = resData.items || [];\r\n    const convertedData = resData;\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addWishlist(resData) {\r\n    if (resData && resData['msg'] === 'wishlist updated') {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method removeFromWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async removeFromWishlist(resData) {\r\n    if (resData && resData['msg'] === 'wishlist updated') {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method removeAllWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async removeAllWishlist(resData) {\r\n    if (resData && resData['msg'] === 'wishlist updated') {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method tagProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async tagProducts(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          description: product.description && product.description,\r\n          cover: `${config['baseURL']}${\r\n            (product.cover && product.cover['thumbnail']) || ''\r\n          }`,\r\n          regularPrice: product.price && product.price['regular'],\r\n          offerPrice: product.price && product.price['offer'],\r\n          url: product.url,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n          venue: product.venue,\r\n          brand: product.brand,\r\n          tags: product.tags,\r\n          price:\r\n            parseInt(product.price['offer']) >\r\n            parseInt(product.price['regular'])\r\n              ? product.price['offer']\r\n              : product.price['regular'],\r\n          avalable:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['available']\r\n              : 0,\r\n          minimum:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['minimum']\r\n              : 0,\r\n        };\r\n      });\r\n\r\n    // return {\r\n    // \tdata: convertedData,\r\n    // \tisNext: isNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method brandProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async brandProducts(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          description: product.description && product.description,\r\n          cover: `${config['baseURL']}${\r\n            (product.cover && product.cover['thumbnail']) || ''\r\n          }`,\r\n          regularPrice: product.price && product.price['regular'],\r\n          offerPrice: product.price && product.price['offer'],\r\n          url: product.url,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n          venue: product.venue,\r\n          brand: product.brand,\r\n          tags: product.tags,\r\n          price:\r\n            parseInt(product.price['offer']) >\r\n            parseInt(product.price['regular'])\r\n              ? product.price['offer']\r\n              : product.price['regular'],\r\n          avalable:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['available']\r\n              : 0,\r\n          minimum:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['minimum']\r\n              : 0,\r\n        };\r\n      });\r\n\r\n    // return {\r\n    // \tdata: convertedData,\r\n    // \tisNext: isNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method productSearch convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async productSearch(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    const convertedData =\r\n      (data.length > 0 &&\r\n        data.map((product) => {\r\n          return {\r\n            id: product._id || '',\r\n            name: product.name && product.name,\r\n            description: product.description && product.description,\r\n            cover: `${config['baseURL']}${product.cover.thumbnail}`,\r\n            regularPrice: product.price && product.price['regular'],\r\n            offerPrice: product.price && product.price['offer'],\r\n            url: product.url,\r\n            unit: product.unit,\r\n            date: product.date,\r\n            venue: product.venue,\r\n            pricing: product.pricing,\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    return {\r\n      data: convertedData,\r\n      isNext,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method productList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async productList(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          ...product,\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          description: product.description && product.description,\r\n          cover: product.cover\r\n            ? `${config['baseURL']}${\r\n                (product.cover && product.cover['thumbnail']) || ''\r\n              }`\r\n            : product.cover,\r\n          regularPrice: product.price && product.price['regular'],\r\n          offerPrice: product.price && product.price['offer'],\r\n          url: product.url,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          image:\r\n            (data.image &&\r\n              data.image.length > 0 &&\r\n              data.image.map((img) => {\r\n                return {\r\n                  id: img._id || '',\r\n                  name: img.name && img.name,\r\n                  cover: `${config['baseURL']}${img.original}`,\r\n                  added: img.added,\r\n                  title: img.title,\r\n                  labels: img.labels,\r\n                  alt: img.alt,\r\n                  caption: img.caption,\r\n                };\r\n              })) ||\r\n            [],\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n          venue: product.venue,\r\n          brand: product.brand,\r\n          tags: product.tags,\r\n          price:\r\n            parseInt(product.price['offer']) >\r\n            parseInt(product.price['regular'])\r\n              ? product.price['offer']\r\n              : product.price['regular'],\r\n          available:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['available']\r\n              : 0,\r\n          minimum:\r\n            product.pricing && product.pricing.length > 0\r\n              ? product.pricing[0]['stock'] &&\r\n                product.pricing[0]['stock']['minimum']\r\n              : 0,\r\n        };\r\n      });\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postList(resData) {\r\n    const data = resData.data;\r\n    // const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((post) => {\r\n        return {\r\n          ...post,\r\n          id: post._id || '',\r\n          name: post.name && post.name,\r\n          body: post.body && post.body,\r\n          preparationTime: post.preparationTime && post.preparationTime,\r\n          servingSize: post.servingSize && post.servingSize,\r\n          cookingTime: post.cookingTime && post.cookingTime,\r\n          cover: `${config['baseURL']}${\r\n            (post.cover && post.cover['thumbnail']) || ''\r\n          }`,\r\n          url: post.url,\r\n          category: post.category,\r\n          tags: post.tags,\r\n        };\r\n      });\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method tagPostList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async tagPostList(resData) {\r\n    const data = resData.data;\r\n    // const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((post) => {\r\n        return {\r\n          ...post,\r\n          id: post._id || '',\r\n          name: post.name && post.name,\r\n          body: post.body && post.body,\r\n          preparationTime: post.preparationTime && post.preparationTime,\r\n          servingSize: post.servingSize && post.servingSize,\r\n          cookingTime: post.cookingTime && post.cookingTime,\r\n          cover: `${config['baseURL']}${\r\n            (post.cover && post.cover['thumbnail']) || ''\r\n          }`,\r\n          url: post.url,\r\n          category: post.category,\r\n          tags: post.tags,\r\n        };\r\n      });\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categoryPostList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryPostList(resData) {\r\n    const data = resData.data;\r\n    // const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((post) => {\r\n        return {\r\n          ...post,\r\n          id: post._id || '',\r\n          name: post.name && post.name,\r\n          body: post.body && post.body,\r\n          preparationTime: post.preparationTime && post.preparationTime,\r\n          servingSize: post.servingSize && post.servingSize,\r\n          cookingTime: post.cookingTime && post.cookingTime,\r\n          cover: `${config['baseURL']}${\r\n            (post.cover && post.cover['thumbnail']) || ''\r\n          }`,\r\n          url: post.url,\r\n          category: post.category,\r\n          tags: post.tags,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postDetail(resData) {\r\n    const data = resData;\r\n    // const isNext = resData.page.next;\r\n\r\n    console.log('upconvertedpostDetail', resData);\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        name: data.name && data.name,\r\n        body: data.body && data.body,\r\n        preparationTime: data.preparationTime && data.preparationTime,\r\n        servingSize: data.servingSize && data.servingSize,\r\n        cookingTime: data.cookingTime && data.cookingTime,\r\n        cover: `${config['baseURL']}${\r\n          (data.cover && data.cover['medium']) || ''\r\n        }`,\r\n        url: data.url,\r\n        requiredProducts:\r\n          data.requiredProducts && data.requiredProducts.length > 0\r\n            ? data.requiredProducts.map((item) => {\r\n                return {\r\n                  ...item,\r\n                  id: item.id,\r\n                  ...(item.detail &&\r\n                    Object.keys(item.detail).length > 0 && {\r\n                      ...item.detail,\r\n                      cover: {\r\n                        cover: `${config['baseURL']}${\r\n                          item.detail.cover\r\n                            ? item.detail.cover.original &&\r\n                              item.detail.cover.original\r\n                            : ''\r\n                        }`,\r\n                        id: item.detail.cover ? item.detail.cover._id : '',\r\n                      },\r\n                      price:\r\n                        parseInt(item.detail.price['offer']) >\r\n                        parseInt(item.detail.price['regular'])\r\n                          ? item.detail.price['offer']\r\n                          : item.detail.price['regular'],\r\n                      image:\r\n                        (item.detail.image &&\r\n                          item.detail.image.length > 0 &&\r\n                          item.detail.image.map((img) => {\r\n                            return {\r\n                              id: img._id || '',\r\n                              name: img.name && img.name,\r\n                              cover: `${config['baseURL']}${img.original}`,\r\n                              added: img.added,\r\n                              title: img.title,\r\n                              labels: img.labels,\r\n                              alt: img.alt,\r\n                              caption: img.caption,\r\n                            };\r\n                          })) ||\r\n                        [],\r\n                    }),\r\n                };\r\n              })\r\n            : [],\r\n        category2:\r\n          (data.category &&\r\n            data.category.length > 0 &&\r\n            data.category.map((cat) => {\r\n              return {\r\n                id: cat._id,\r\n                name: cat.name,\r\n              };\r\n            })) ||\r\n          data.category,\r\n        category:\r\n          (data.category &&\r\n            data.category.length > 0 &&\r\n            data.category.map((cat) => {\r\n              return cat._id;\r\n            })) ||\r\n          data.category,\r\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postDetailEdit convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postDetailEdit(resData) {\r\n    const data = resData;\r\n    // const isNext = resData.page.next;\r\n\r\n    console.log('upconvertedpostDetail', resData);\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        name: data.name && data.name,\r\n        body: data.body && data.body,\r\n        preparationTime: data.preparationTime && data.preparationTime,\r\n        servingSize: data.servingSize && data.servingSize,\r\n        cookingTime: data.cookingTime && data.cookingTime,\r\n        cover: `${config['baseURL']}${\r\n          (data.cover && data.cover['medium']) || ''\r\n        }`,\r\n        url: data.url,\r\n        requiredProducts:\r\n          data.requiredProducts && data.requiredProducts.length > 0\r\n            ? data.requiredProducts.map((item) => {\r\n                return {\r\n                  ...item,\r\n                  id: item.id,\r\n                  ...(item.detail &&\r\n                    Object.keys(item.detail).length > 0 && {\r\n                      ...item.detail,\r\n                      cover: {\r\n                        cover: `${config['baseURL']}${\r\n                          item.detail.cover\r\n                            ? item.detail.cover.original &&\r\n                              item.detail.cover.original\r\n                            : ''\r\n                        }`,\r\n                        id: item.detail.cover ? item.detail.cover._id : '',\r\n                      },\r\n                      price:\r\n                        parseInt(item.detail.price['offer']) >\r\n                        parseInt(item.detail.price['regular'])\r\n                          ? item.detail.price['offer']\r\n                          : item.detail.price['regular'],\r\n                      image:\r\n                        (item.detail.image &&\r\n                          item.detail.image.length > 0 &&\r\n                          item.detail.image.map((img) => {\r\n                            return {\r\n                              id: img._id || '',\r\n                              name: img.name && img.name,\r\n                              cover: `${config['baseURL']}${img.original}`,\r\n                              added: img.added,\r\n                              title: img.title,\r\n                              labels: img.labels,\r\n                              alt: img.alt,\r\n                              caption: img.caption,\r\n                            };\r\n                          })) ||\r\n                        [],\r\n                    }),\r\n                };\r\n              })\r\n            : [],\r\n        category: data.category,\r\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method bundleList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async bundleList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          ...product,\r\n          anotherPrice: product.price,\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          description: product.description && product.description,\r\n          cover: product.cover\r\n            ? `${config['baseURL']}${\r\n                (product.cover && product.cover['thumbnail']) || ''\r\n              }`\r\n            : product.cover,\r\n          regularPrice: product.price && product.price['regular'],\r\n          offerPrice: product.price && product.price['offer'],\r\n          url: product.url,\r\n          startDate: product.startDate,\r\n          endDate: product.endDate,\r\n          actualPrice: product.actualPrice,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n          venue: product.venue,\r\n          brand: product.brand,\r\n          tags: product.tags,\r\n          product: product['product'],\r\n          productCount: product['product'].length,\r\n          price:\r\n            parseInt(product.price['offer']) >\r\n            parseInt(product.price['regular'])\r\n              ? product.price['offer']\r\n              : product.price['regular'],\r\n        };\r\n      });\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method bundleDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async bundleDetail(resData) {\r\n    const data = resData || {};\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        id: data._id || '',\r\n        name: data.name && data.name,\r\n        description: data.description && data.description,\r\n        cover: data.cover\r\n          ? `${config['baseURL']}${\r\n              (data.cover && data.cover['thumbnail']) || ''\r\n            }`\r\n          : '',\r\n        regularPrice: data.price && data.price['regular'],\r\n        offerPrice: data.price && data.price['offer'],\r\n        url: data.url,\r\n        startDate: data.startDate,\r\n        endDate: data.endDate,\r\n        actualPrice: data.actualPrice,\r\n        unit: data.unit,\r\n        category: data.category,\r\n        pricing: data.pricing,\r\n        date: data.date,\r\n        time: data.time,\r\n        venue: data.venue,\r\n        brand: data.brand,\r\n        tags: data.tags,\r\n        products: data.product,\r\n        productCount: data['product'].length,\r\n        price:\r\n          parseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n            ? data.price['offer']\r\n            : data.price['regular'],\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      };\r\n    } else return data;\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAnalyticsPageVisits convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsPageVisits(resData) {\r\n    const data = resData && resData.data ? resData.data : [];\r\n\r\n    console.log('getAnalyticsPageVisits', resData);\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((item) => {\r\n        return {\r\n          id: item._id || '',\r\n          visit: item.count || '',\r\n          name:\r\n            item['detail'] && item['detail'][0] && item['detail'][0]['name'],\r\n          url: item['detail'] && item['detail'][0] && item['detail'][0]['url'],\r\n          itemId:\r\n            item['detail'] && item['detail'][0] && item['detail'][0]['_id'],\r\n        };\r\n      });\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAnalyticsPageVisitCount convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsPageVisitCount(resData) {\r\n    return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAnalyticsDemographicVisits convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsDemographicVisits(resData) {\r\n    const data = resData && resData.data ? resData.data : [];\r\n    if (data) {\r\n      return data;\r\n    } else return [];\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAnalyticsOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsOrders(resData) {\r\n    const data = resData.data || [];\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAnalyticsTotalUserCount convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsTotalUserCount(resData) {\r\n    return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method customerDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async customerDetail(resData) {\r\n    if (resData) {\r\n      return {\r\n        ...resData,\r\n        id: resData._id || '',\r\n        key: resData._id || '',\r\n        firstName: resData.firstName || '',\r\n        lastName: resData.lastName || '',\r\n        name: resData.firstName + ' ' + resData.lastName,\r\n        country: resData.country || '',\r\n        city: resData.city || '',\r\n        email: resData.email || '',\r\n        phone: resData.phone || '',\r\n        address1: resData.address1 || '',\r\n        address2: resData.address2 || '',\r\n        created: resData.created || '',\r\n      };\r\n    } else return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method couponList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async couponList(resData) {\r\n    const data = resData || [];\r\n\r\n    let convertedData =\r\n      data.length > 0 &&\r\n      data.map((product) => {\r\n        return {\r\n          ...data,\r\n          id: product._id || '',\r\n          name: product.name && product.name,\r\n          code: product.code,\r\n          cover: product.cover\r\n            ? `${config['baseURL']}${\r\n                (product.cover && product.cover['thumbnail']) || ''\r\n              }`\r\n            : product.cover,\r\n          minimumOrder: product.minimumOrder,\r\n          maximumOrder: product.maximumOrder,\r\n          offerPrice: product.price && product.price['offer'],\r\n          freeProducts: product.freeProducts,\r\n          orderedProductsCount:\r\n            product.orderedProducts && product.orderedProducts.length,\r\n          freeProductsCount:\r\n            product.freeProducts && product.freeProducts.length,\r\n          amountType: product.amountType,\r\n          amount: product.amount,\r\n          freeDelivery: product.freeDelivery,\r\n          startDate: product.startDate,\r\n          endDate: product.endDate,\r\n          maxUsePerUser: product.maxUsePerUser,\r\n          actualPrice: product.actualPrice,\r\n          unit: product.unit,\r\n          category: product.category,\r\n          pricing: product.pricing,\r\n          date: product.date,\r\n          time: product.time,\r\n        };\r\n      });\r\n\r\n    console.log('convertedCouponData', convertedData);\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method tagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async tagList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((tag) => {\r\n        return {\r\n          ...tag,\r\n          id: tag._id || '',\r\n          key: tag._id || '',\r\n          name: tag.name && tag.name,\r\n          description: tag.description && tag.description,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getSetEmailList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSetEmailList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((email) => {\r\n        return {\r\n          ...email,\r\n          id: email._id || '',\r\n          key: email._id || '',\r\n          recipient: email.recipient,\r\n          subject: email.subject,\r\n          html: email.html,\r\n          text: email.text,\r\n          time: email.time,\r\n          event: email.event,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getSentSMSList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSentSMSList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((sms) => {\r\n        return {\r\n          ...sms,\r\n          id: sms._id || '',\r\n          key: sms._id || '',\r\n          recipient: sms.recipient,\r\n          text: sms.text,\r\n          time: sms.time,\r\n          event: sms.event,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postTagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postTagList(resData) {\r\n    const data = resData.data;\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((tag) => {\r\n        return {\r\n          id: tag._id || '',\r\n          key: tag._id || '',\r\n          name: tag.name && tag.name,\r\n          description: tag.description && tag.description,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postTagDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postTagDetail(resData) {\r\n    const data = resData;\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        key: data._id || '',\r\n        name: data.name && data.name,\r\n        description: data.description && data.description,\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n\t\r\n   * @method dealerAreaDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerAreaDetail(resData) {\r\n    const data = resData;\r\n\r\n    if (Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        key: data._id || '',\r\n        name: data.name && data.name,\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method brandList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async brandList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((brand) => {\r\n        return {\r\n          id: brand._id || '',\r\n          key: brand._id || '',\r\n          name: brand.name && brand.name,\r\n          description: brand.description && brand.description,\r\n          cover: `${config['baseURL']}${\r\n            brand.cover ? brand.cover.thumbnail : ''\r\n          }`,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method setImageAsThumbnailToItem convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async setImageAsThumbnailToItem(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteAdmin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteAdmin(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method markAllNotificationAsRead convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async markAllNotificationAsRead(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method configureEmailSTMP convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async configureEmailSTMP(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method configureSMS convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async configureSMS(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getEmailConfiguration convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getEmailConfiguration(resData) {\r\n    if (resData && Object.keys(resData).length > 0) {\r\n      return {\r\n        ...resData,\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getSMSConfiguration convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSMSConfiguration(resData) {\r\n    if (resData && Object.keys(resData).length > 0) {\r\n      return {\r\n        ...resData,\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method sendCustomEmail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async sendCustomEmail(resData) {\r\n    if (resData && resData.msg) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method sendCustomSMS convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async sendCustomSMS(resData) {\r\n    if (resData && resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateSiteLogoAndIcon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateSiteLogoAndIcon(resData) {\r\n    if (resData.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateStock convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateStock(resData) {\r\n    if (resData.succes) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method brandDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async brandDetail(resData) {\r\n    const data = Object.keys(resData).length > 0 ? resData : null;\r\n    if (data) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        key: data._id || '',\r\n        name: data.name && data.name,\r\n        description: data.description && data.description,\r\n        url: data.url && data.url,\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.cover ? data.cover.original && data.cover.original : ''\r\n          }`,\r\n          id: data.cover ? data.cover._id : '',\r\n        },\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.thumbnail}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method tagDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async tagDetail(resData) {\r\n    const data = Object.keys(resData).length > 0 ? resData : null;\r\n    if (data) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        key: data._id || '',\r\n        name: data.name && data.name,\r\n        url: data.url && data.url,\r\n        description: data.description && data.description,\r\n      };\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method customerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async customerList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n          key: customer._id || '',\r\n          firstName: customer.firstName || '',\r\n          lastName: customer.lastName || '',\r\n          name: customer.firstName + ' ' + customer.lastName,\r\n          dealerName:\r\n            customer.dealer && Object.keys(customer.dealer).length > 0\r\n              ? customer['dealer'].firstName + ' ' + customer['dealer'].lastName\r\n              : 'None',\r\n          country: customer.country || '',\r\n          city: customer.city || '',\r\n          email: customer.email || '',\r\n          phone: customer.phone || '',\r\n          address1: customer.address1 || '',\r\n          address2: customer.address2 || '',\r\n          created: customer.added || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method staffList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async staffList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n          key: customer._id || '',\r\n          firstName: customer.firstName || '',\r\n          lastName: customer.lastName || '',\r\n          name: customer.firstName + ' ' + customer.lastName,\r\n          country: customer.country || '',\r\n          city: customer.city || '',\r\n          email: customer.email || '',\r\n          phone: customer.phone || '',\r\n          address: customer.address || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerRegisteredCustomerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerRegisteredCustomerList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n          key: customer._id || '',\r\n          firstName: customer.firstName || '',\r\n          lastName: customer.lastName || '',\r\n          name: customer.firstName + ' ' + customer.lastName,\r\n          dealerName:\r\n            customer.dealer && Object.keys(customer.dealer).length > 0\r\n              ? customer['dealer'].firstName + ' ' + customer['dealer'].lastName\r\n              : 'None',\r\n          country: customer.country || '',\r\n          city: customer.city || '',\r\n          email: customer.email || '',\r\n          phone: customer.phone || '',\r\n          address1: customer.address1 || '',\r\n          address2: customer.address2 || '',\r\n          created: customer.added || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n          key: customer._id || '',\r\n          code: customer.code || '',\r\n          commission: customer.commission || '',\r\n          depositMoney: customer.depositMoney || '',\r\n          name: customer.firstName + ' ' + customer.lastName,\r\n          country: customer.country || '',\r\n          city: customer.city || '',\r\n          email: customer.email || '',\r\n          phone: customer.phone || '',\r\n          address1: customer.address1 || '',\r\n          address2: customer.address2 || '',\r\n          created: customer.added || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerListByArea convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerListByArea(resData) {\r\n    const data = resData || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n          key: customer._id || '',\r\n          code: customer.code || '',\r\n          commission: customer.commission || '',\r\n          depositMoney: customer.depositMoney || '',\r\n          name: customer.firstName + ' ' + customer.lastName,\r\n          country: customer.country || '',\r\n          city: customer.city || '',\r\n          email: customer.email || '',\r\n          phone: customer.phone || '',\r\n          address1: customer.address1 || '',\r\n          address2: customer.address2 || '',\r\n          created: customer.added || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerDetail(resData) {\r\n    if (resData) {\r\n      return {\r\n        ...resData,\r\n        id: resData._id || '',\r\n        key: resData._id || '',\r\n        code: resData.code || '',\r\n        commission: resData.commission || '',\r\n        depositMoney: resData.depositMoney || '',\r\n        name: resData.firstName + ' ' + resData.lastName,\r\n        country: resData.country || '',\r\n        city: resData.city || '',\r\n        email: resData.email || '',\r\n        phone: resData.phone || '',\r\n        address1: resData.address1 || '',\r\n        address2: resData.address2 || '',\r\n        created: resData.added || '',\r\n      };\r\n    } else return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method pageList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async pageList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((page) => {\r\n        return {\r\n          ...page,\r\n          id: page._id || '',\r\n          key: page._id || '',\r\n          name: page.name && page.name,\r\n          description: page.description && page.description,\r\n          cover: `${config['baseURL']}${\r\n            page.cover ? page.cover.thumbnail : ''\r\n          }`,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method themeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async themeList(resData) {\r\n    const data = resData || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((theme) => {\r\n        return {\r\n          id: theme._id || '',\r\n          key: theme._id || '',\r\n          name: theme.name || '',\r\n          added: theme.added || '',\r\n          thumbnail: `${config['baseURL']}${\r\n            theme.thumbnail ? theme.thumbnail : ''\r\n          }`,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method componentList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async componentList(resData) {\r\n    const components = resData.components || {};\r\n\r\n    if (components && components.length > 0) {\r\n      const convertedData =\r\n        components.length > 0 &&\r\n        components.map((component) => {\r\n          return {\r\n            id: component._id || '',\r\n            key: component._id || '',\r\n            name: component.name || '',\r\n            items:\r\n              component.items.length > 0\r\n                ? component.items.map((item) => {\r\n                    return {\r\n                      ...item,\r\n                      image:\r\n                        item.image.length > 0\r\n                          ? item.image.map((img) => {\r\n                              return {\r\n                                cover: `${config['baseURL']}${\r\n                                  img.thumbnail ? img.thumbnail : ''\r\n                                }`,\r\n                                id: img._id,\r\n                                name: img.name && img.name,\r\n                                added: img.added,\r\n                                title: img.title,\r\n                                labels: img.labels,\r\n                                alt: img.alt,\r\n                                caption: img.caption,\r\n                              };\r\n                            })\r\n                          : [],\r\n                    };\r\n                  })\r\n                : [],\r\n          };\r\n        });\r\n\r\n      return convertedData;\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method regionList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async regionList(data) {\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((region) => {\r\n        return {\r\n          id: region._id || '',\r\n          key: region._id || '',\r\n          name: region.name || '',\r\n          pickUpLocation: region.pickUpLocation || '',\r\n          country: region.country || '',\r\n          countryCode: region.countryCode || '',\r\n          countryName: region.countryName || '',\r\n          city: region.city || '',\r\n          time: region.time || '',\r\n          charge: region.charge || {},\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method attributeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async attributeList(data) {\r\n    const convertedData = Object.keys(data).length > 0 && data;\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async ImageListFromLibrary(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((image) => {\r\n        return {\r\n          id: image._id || '',\r\n          name: image.name && image.name,\r\n          cover: `${config['baseURL']}${image.thumbnail}`,\r\n          added: image.added,\r\n          title: image.title,\r\n          labels: image.labels,\r\n          alt: image.alt,\r\n          caption: image.caption,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method countryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async countryList(resData) {\r\n    const data = resData || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((country) => {\r\n        return {\r\n          id: country._id || '',\r\n          name: country.name && country.name,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getDeliveryRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async getDeliveryRegion(data) {\r\n    const convertedData = data;\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method cityList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async cityList(resData) {\r\n    const data = resData || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((city) => {\r\n        return {\r\n          id: city._id || '',\r\n          name: city.name && city.name,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method forAnalytics convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async forAnalytics(resData) {\r\n    return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method productDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async productDetail(data) {\r\n    const convertedData =\r\n      (Object.keys(data).length > 0 && {\r\n        ...data,\r\n        id: data._id || data.id || '',\r\n        name: data.name || '',\r\n        description: data.description.replace(/<[^>]+>/g, '') || '',\r\n        regularPrice: data.price && data.price['regular'],\r\n        offerPrice: data.price && data.price['offer'],\r\n        url: data.url,\r\n        availableStock: data.availableStock,\r\n        minimumStock: data.minimumStock,\r\n        unit: data.unit,\r\n        date: data.date,\r\n        venue: data.venue,\r\n        brand:\r\n          data.brand && Object.key(data.brand).length > 0\r\n            ? {\r\n                id: data.brand.id,\r\n                name: data.brand.name,\r\n              }\r\n            : {},\r\n        price:\r\n          parseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n            ? data.price['offer']\r\n            : data.price['regular'],\r\n        pricing: data.pricing,\r\n        category:\r\n          (data.category &&\r\n            data.category.length > 0 &&\r\n            data.category.map((cat) => {\r\n              return {\r\n                id: cat._id,\r\n                name: cat.name,\r\n              };\r\n            })) ||\r\n          data.category,\r\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.cover ? data.cover.original && data.cover.original : ''\r\n          }`,\r\n          id: data.cover ? data.cover._id : '',\r\n        },\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n        available:\r\n          data.pricing && data.pricing.length > 0\r\n            ? data.pricing[0]['stock'] && data.pricing[0]['stock']['available']\r\n            : 0,\r\n        minimum:\r\n          data.pricing && data.pricing.length > 0\r\n            ? data.pricing[0]['stock'] && data.pricing[0]['stock']['minimum']\r\n            : 0,\r\n      }) ||\r\n      {};\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method couponDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async couponDetail(data) {\r\n    const convertedData =\r\n      (Object.keys(data).length > 0 && {\r\n        ...data,\r\n        id: data._id || '',\r\n        name: data.name && data.name,\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.cover ? data.cover.original && data.cover.original : ''\r\n          }`,\r\n          id: data.cover ? data.cover._id : '',\r\n        },\r\n        code: data.code,\r\n        minimumOrder: data.minimumOrder,\r\n        maximumOrder: data.maximumOrder,\r\n        freeProducts: data.freeProducts || [],\r\n        orderedProducts:\r\n          data.orderedProducts && data.orderedProducts.length > 0\r\n            ? data.orderedProducts.map((item) => {\r\n                console.log('fuckingOrderProduct', item);\r\n                return {\r\n                  ...item,\r\n                  id: item.id,\r\n                  ...(item.detail &&\r\n                    Object.keys(item.detail).length > 0 && {\r\n                      ...item.detail,\r\n                      cover: {\r\n                        cover: `${config['baseURL']}${\r\n                          item.detail.cover\r\n                            ? item.detail.cover.original &&\r\n                              item.detail.cover.original\r\n                            : ''\r\n                        }`,\r\n                        id: item.detail.cover ? item.detail.cover._id : '',\r\n                      },\r\n                      price:\r\n                        parseInt(item.detail.price['offer']) >\r\n                        parseInt(item.detail.price['regular'])\r\n                          ? item.detail.price['offer']\r\n                          : item.detail.price['regular'],\r\n                    }),\r\n                };\r\n              })\r\n            : [],\r\n        freeProductsCount: data.freeProducts && data.orderedProducts.length,\r\n        amountType: data.amountType,\r\n        amount: data.amount,\r\n        freeDelivery: data.freeDelivery,\r\n        startDate: data.startDate,\r\n        endDate: data.endDate,\r\n        maxUsePerUser: data.maxUsePerUser,\r\n        actualPrice: data.actualPrice,\r\n        unit: data.unit,\r\n        category: data.category,\r\n        pricing: data.pricing,\r\n        date: data.date,\r\n        time: data.time,\r\n        venue: data.venue,\r\n        brand: data.brand,\r\n        tags: data.tags,\r\n      }) ||\r\n      {};\r\n\r\n    console.log('fuckingOrderProduct', convertedData);\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method productDetailById convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async productDetailById(data) {\r\n    const convertedData =\r\n      (Object.keys(data).length > 0 && {\r\n        ...data,\r\n        id: data._id || data.id || '',\r\n        name: data.name || '',\r\n        description: data.description.replace(/<[^>]+>/g, '') || '',\r\n        regularPrice: data.price && data.price['regular'],\r\n        offerPrice: data.price && data.price['offer'],\r\n        url: data.url,\r\n        unit: data.unit,\r\n        date: data.date,\r\n        venue: data.venue,\r\n        pricing: data.pricing,\r\n        price:\r\n          parseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n            ? data.price['offer']\r\n            : data.price['regular'],\r\n        category:\r\n          (data.category &&\r\n            data.category.length > 0 &&\r\n            data.category.map((cat) => {\r\n              return {\r\n                id: cat._id,\r\n                name: cat.name,\r\n                cover: `${config['baseURL']}${\r\n                  cat.cover ? cat.cover.original && cat.cover.original : ''\r\n                }`,\r\n              };\r\n            })) ||\r\n          data.category,\r\n        brand:\r\n          data.brand && Object.keys(data.brand).length > 0\r\n            ? {\r\n                id: data.brand._id,\r\n                name: data.brand.name,\r\n                cover: `${config['baseURL']}${\r\n                  data.brand.cover\r\n                    ? data.brand.cover.original && data.brand.cover.original\r\n                    : ''\r\n                }`,\r\n              }\r\n            : data.brand,\r\n        primaryCategory:\r\n          data.primaryCategory && Object.keys(data.primaryCategory).length > 0\r\n            ? {\r\n                id: data.primaryCategory._id,\r\n                name: data.primaryCategory.name,\r\n                cover: `${config['baseURL']}${\r\n                  data.primaryCategory.cover\r\n                    ? data.primaryCategory.cover.original &&\r\n                      data.primaryCategory.cover.original\r\n                    : ''\r\n                }`,\r\n              }\r\n            : data.primaryCategory,\r\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n        availableStock: data.availableStock,\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.cover ? data.cover.original && data.cover.original : ''\r\n          }`,\r\n          id: data.cover ? data.cover._id : '',\r\n        },\r\n        image:\r\n          (data.image &&\r\n            data.image.length > 0 &&\r\n            data.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n      }) ||\r\n      {};\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateProduct(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        id: data.updated._id || data.updated.id || '',\r\n        name: data.updated.name || '',\r\n        description: data.updated.description.replace(/<[^>]+>/g, '') || '',\r\n        regularPrice: data.updated.price && data.updated.price['regular'],\r\n        offerPrice: data.updated.price && data.updated.price['offer'],\r\n        url: data.updated.url,\r\n        availableStock: data.updated.availableStock,\r\n        minimumStock: data.updated.minimumStock,\r\n        unit: data.updated.unit,\r\n        date: data.updated.date,\r\n        venue: data.updated.venue,\r\n        brand:\r\n          data.updated.brand && Object.key(data.updated.brand).length > 0\r\n            ? {\r\n                id: data.updated.brand.id,\r\n                name: data.updated.brand.name,\r\n              }\r\n            : {},\r\n        price:\r\n          parseInt(data.updated.price['offer']) >\r\n          parseInt(data.updated.price['regular'])\r\n            ? data.updated.price['offer']\r\n            : data.updated.price['regular'],\r\n        pricing: data.updated.pricing,\r\n        category:\r\n          (data.updated.category &&\r\n            data.updated.category.length > 0 &&\r\n            data.updated.category.map((cat) => {\r\n              return {\r\n                id: cat._id,\r\n                name: cat.name,\r\n              };\r\n            })) ||\r\n          data.updated.category,\r\n        tags:\r\n          data.updated.tags && data.updated.tags.length > 0\r\n            ? data.updated.tags\r\n            : [],\r\n\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.updated.cover\r\n              ? data.updated.cover.original && data.updated.cover.original\r\n              : ''\r\n          }`,\r\n          id: data.updated.cover ? data.updated.cover._id : '',\r\n        },\r\n        image:\r\n          (data.updated.image &&\r\n            data.updated.image.length > 0 &&\r\n            data.updated.image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updatePost convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updatePost(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated && data.updated[0]) {\r\n      console.log('dataUpdate', data.updated);\r\n      return {\r\n        ...data.updated[0],\r\n        id: data.updated[0]._id || data.updated[0].id || '',\r\n        name: data.updated[0].name || '',\r\n        url: data.updated[0].url,\r\n        category: data.updated[0].category,\r\n        tags:\r\n          data.updated[0].tags && data.updated[0].tags.length > 0\r\n            ? data.updated[0].tags\r\n            : [],\r\n\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            data.updated[0].cover\r\n              ? data.updated[0].cover.original && data.updated[0].cover.original\r\n              : ''\r\n          }`,\r\n          id: data.updated[0].cover ? data.updated[0].cover._id : '',\r\n        },\r\n        image:\r\n          (data.updated[0].image &&\r\n            data.updated[0].image.length > 0 &&\r\n            data.updated[0].image.map((img) => {\r\n              return {\r\n                id: img._id || '',\r\n                name: img.name && img.name,\r\n                cover: `${config['baseURL']}${img.original}`,\r\n                added: img.added,\r\n                title: img.title,\r\n                labels: img.labels,\r\n                alt: img.alt,\r\n                caption: img.caption,\r\n              };\r\n            })) ||\r\n          [],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateComponent(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateCoupon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateCoupon(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categoryUpdateIcon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryUpdateIcon(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateImageFromLibrary(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateTag(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateDealerArea convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateDealerArea(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateDealer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateDealer(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updatePage convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updatePage(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateBrand(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateBundle convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateBundle(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateCategory(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateCustomer(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateStaff convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateStaff(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && Object.keys(data).length > 0) {\r\n      return {\r\n        ...convertedData,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateRegion(data) {\r\n    const convertedData = data;\r\n\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteProduct(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteExpense convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteExpense(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postCategoryDelete convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryDelete(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deletePost convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deletePost(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteBundle convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteBundle(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteCoupon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteCoupon(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method pageDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async pageDetail(data) {\r\n    const convertedData = data;\r\n    if (convertedData && Object.keys(convertedData).length > 0) {\r\n      return {\r\n        ...convertedData,\r\n        id: convertedData._id,\r\n        cover: {\r\n          cover: `${config['baseURL']}${\r\n            convertedData.cover\r\n              ? convertedData.cover.original && convertedData.cover.original\r\n              : ''\r\n          }`,\r\n          id: convertedData.cover ? convertedData.cover._id : '',\r\n        },\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateOrderStatus convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateOrderStatus(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        ...data,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postUpdateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postUpdateTag(data) {\r\n    const convertedData = data;\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n\r\n        name: data.updated.name && data.updated.name,\r\n        description: data.updated.description && data.updated.description,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateExpense convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateExpense(data) {\r\n    const convertedData = data;\r\n    if (data && Object.keys(convertedData).length > 0) {\r\n      return {\r\n        ...data,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteImageFromLibrary(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deletePage convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deletePage(data) {\r\n    const convertedData = data;\r\n    if (data && data.msg) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addTag(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addExpense convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addExpense(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addStaff convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addStaff(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method generateSalaryReport convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async generateSalaryReport(data) {\r\n    const convertedData = data;\r\n    if (data && data && data[0]) {\r\n      return {\r\n        ...data[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getSalaryReport convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSalaryReport(resData) {\r\n    const data = resData.data || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((customer) => {\r\n        return {\r\n          ...customer,\r\n          id: customer._id || '',\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getSalaryReportDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSalaryReportDetail(resData) {\r\n    const data = resData || [];\r\n\r\n    if (data && Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        id: data._id || '',\r\n        staff:\r\n          data.staff && data.staff.length > 0\r\n            ? data.staff.map((customer) => {\r\n                return {\r\n                  ...customer,\r\n                  id: customer._id || '',\r\n                  key: customer._id || '',\r\n                  firstName: customer.firstName || '',\r\n                  lastName: customer.lastName || '',\r\n                  name: customer.firstName + ' ' + customer.lastName,\r\n                  country: customer.country || '',\r\n                  city: customer.city || '',\r\n                  email: customer.email || '',\r\n                  phone: customer.phone || '',\r\n                  address: customer.address || '',\r\n                };\r\n              })\r\n            : [],\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method staffDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async staffDetail(data) {\r\n    const convertedData = data;\r\n    if (convertedData && Object.keys(convertedData).length > 0) {\r\n      return {\r\n        ...convertedData,\r\n        id: convertedData._id || '',\r\n        key: convertedData._id || '',\r\n        firstName: convertedData.firstName || '',\r\n        lastName: convertedData.lastName || '',\r\n        name: convertedData.firstName + ' ' + convertedData.lastName,\r\n        country: convertedData.country || '',\r\n        city: convertedData.city || '',\r\n        email: convertedData.email || '',\r\n        phone: convertedData.phone || '',\r\n        address: convertedData.address || '',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method expenseDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async expenseDetail(data) {\r\n    const convertedData = data;\r\n    if (convertedData && Object.keys(convertedData).length > 0) {\r\n      return {\r\n        ...convertedData,\r\n        id: convertedData._id || '',\r\n        key: convertedData._id || '',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addDealerArea convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addDealerArea(data) {\r\n    const convertedData = data;\r\n    if (data && data[0]) {\r\n      return {\r\n        ...data[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postAddCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postAddCategory(data) {\r\n    const convertedData = data;\r\n    if (data && data[0]) {\r\n      return {\r\n        ...data[0],\r\n        cover: data[0].cover\r\n          ? `${config['baseURL']}${\r\n              data[0].cover ? data[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postCategoryUpdate convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryUpdate(data) {\r\n    const convertedData = data;\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data['updated'],\r\n        cover: data['updated'].cover\r\n          ? `${config['baseURL']}${\r\n              data['updated'].cover ? data['updated'].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerAreaList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerAreaList(resData) {\r\n    const data = resData || [];\r\n\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((tag) => {\r\n        return {\r\n          ...tag,\r\n          id: tag._id || '',\r\n          key: tag._id || '',\r\n          name: tag.name && tag.name,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method expenseList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async expenseList(resData) {\r\n    const data = resData.data || [];\r\n\r\n    console.log('expenseList', data);\r\n    const convertedData =\r\n      data.length > 0 &&\r\n      data.map((tag) => {\r\n        return {\r\n          ...tag,\r\n          id: tag._id || '',\r\n          key: tag._id || '',\r\n          topic: tag.topic && tag.topic,\r\n          amount: tag.amount && tag.amount,\r\n        };\r\n      });\r\n\r\n    return convertedData;\r\n  }\r\n  tag;\r\n  /**\r\n   * @public\r\n   * @method addDealer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addDealer(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addCategory(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n        cover: data.inserted[0].cover\r\n          ? `${config['baseURL']}${\r\n              data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postAddCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postAddCategory(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addProduct(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n        cover: data.inserted[0].cover\r\n          ? `${config['baseURL']}${\r\n              data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addPost convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addPost(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n        cover: data.inserted[0].cover\r\n          ? `${config['baseURL']}${\r\n              data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addOrderNote convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addOrderNote(data) {\r\n    const convertedData = data;\r\n    if (data && data[0]) {\r\n      return {\r\n        ...data[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateOrderNote convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async updateOrderNote(data) {\r\n    const convertedData = data;\r\n    if (data && data['updated']) {\r\n      return {\r\n        ...data['updated'],\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateAdminRole convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async updateAdminRole(data) {\r\n    const convertedData = data;\r\n    if (data && data.updated) {\r\n      return {\r\n        ...data.updated,\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postAddTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async postAddTag(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addOrder(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getOrderNote convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async getOrderNote(data) {\r\n    const convertedData = data;\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addTheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addTheme(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method postDeleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postDeleteTag(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteSalaryReport convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteSalaryReport(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteOrderNote convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteOrderNote(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addPage convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addPage(data) {\r\n    const convertedData = data;\r\n    if (data && data[0]) {\r\n      return {\r\n        ...data[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addBrand(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n        cover: data.inserted[0].cover\r\n          ? `${config['baseURL']}${\r\n              data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n  /**\r\n   * @public\r\n   * @method addComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addComponent(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addCustomer(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addRegion(data) {\r\n    const convertedData = data;\r\n    if (data && data.inserted) {\r\n      return {\r\n        ...data.inserted[0],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteTag(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteDealerArea convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteDealerArea(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteDealer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteDealer(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method logout convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async logout(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method activeTheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async activeTheme(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deletetheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deletetheme(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteCustomer(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteStaff convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteStaff(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteComponent(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteBrand(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteCategory(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method deleteRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async deleteRegion(data) {\r\n    const convertedData = data;\r\n    if (data && data.success) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method siteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async siteSettings(resData) {\r\n    const convertedData = resData;\r\n\r\n    if (resData.data) {\r\n      return {\r\n        ...resData.data,\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getSiteSEO convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSiteSEO(resData) {\r\n    const convertedData = resData;\r\n\r\n    if (resData.data) {\r\n      return {\r\n        ...resData.data,\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAdminCredential convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAdminCredential(resData) {\r\n    const convertedData = resData;\r\n\r\n    if (resData.data) {\r\n      return {\r\n        ...resData.data,\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateSiteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateSiteSettings(data) {\r\n    if (data['updated']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateSiteSEO convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateSiteSEO(data) {\r\n    if (data['updated']) {\r\n      return {\r\n        ...data['updated'],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateAdminCredential convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateAdminCredential(data) {\r\n    if (data && Object.keys(data).length > 0) {\r\n      return {\r\n        ...data,\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method adminUpdatePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async adminUpdatePassword(data) {\r\n    if (data['updated']) {\r\n      return {\r\n        ...data['updated'],\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateInvoiceSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateInvoiceSettings(data) {\r\n    if (data['updated']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async invoiceSettingsDetail(resData) {\r\n    const convertedData = resData;\r\n\r\n    if (resData.data) {\r\n      return {\r\n        ...resData.data,\r\n      };\r\n    }\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method categoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async categoryDetail(data) {\r\n    const convertedData = {\r\n      ...data,\r\n      id: data.id || data._id || '',\r\n      name: data.name && data.name,\r\n      description: data.description && data.description,\r\n      productCount: data.productCount || 0,\r\n      icon: data.icon ? `${config['baseURL']}${data.icon}` : '',\r\n      type:\r\n        data.subCategory.length > 0 &&\r\n        data.subCategory[0] &&\r\n        data.subCategory[0]['name']\r\n          ? 'Top category'\r\n          : 'Child category',\r\n      url: data.url || '',\r\n      subCategory:\r\n        data.subCategory.length > 0 &&\r\n        data.subCategory[0] &&\r\n        data.subCategory[0]['name']\r\n          ? data.subCategory.map((subCat) => {\r\n              return {\r\n                id: subCat._id || '',\r\n                name: subCat.name && subCat.name,\r\n                description: subCat.description && subCat.description,\r\n                cover: subCat.cover\r\n                  ? `${config['baseURL']}${subCat.cover.medium}`\r\n                  : '',\r\n              };\r\n            })\r\n          : [],\r\n      cover: {\r\n        cover: `${config['baseURL']}${\r\n          data.cover ? data.cover.original && data.cover.original : ''\r\n        }`,\r\n        id: data.cover ? data.cover._id : '',\r\n      },\r\n      image:\r\n        (data.image &&\r\n          data.image.length > 0 &&\r\n          data.image.map((img) => {\r\n            return {\r\n              id: img._id || '',\r\n              name: img.name && img.name,\r\n              cover: `${config['baseURL']}${img.medium}`,\r\n              added: img.added,\r\n              title: img.title,\r\n              labels: img.labels,\r\n              alt: img.alt,\r\n              caption: img.caption,\r\n            };\r\n          })) ||\r\n        [],\r\n    };\r\n\r\n    return convertedData;\r\n  }\r\n  /**\r\n   * @public\r\n   * @method createOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async createOrder(data) {\r\n    //map props\r\n\r\n    const formatedData = {\r\n      ...data,\r\n    };\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method adminRoleRegister convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async adminRoleRegister(data) {\r\n    //map props\r\n\r\n    if (data && data.length > 0) {\r\n      return {\r\n        status: 'ok',\r\n        ...data[0],\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method adminList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async adminList(resData) {\r\n    //map props\r\n    return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method adminDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async adminDetail(resData) {\r\n    //map props\r\n\r\n    return resData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method orderDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async orderDetail(data) {\r\n    //map props\r\n    const order = data.order || false;\r\n    if (order) {\r\n      return {\r\n        ...order,\r\n        id: order.id || order._id,\r\n        shippingAddress: order.shippingAddress,\r\n        name:\r\n          order.shippingAddress['firstName'] +\r\n          ' ' +\r\n          order.shippingAddress['lastName'],\r\n        country: order.shippingAddress['country'],\r\n        city: order.shippingAddress['city'],\r\n        address: order.shippingAddress['address'],\r\n        phone: order.shippingAddress['phone'],\r\n        email: order.shippingAddress['email'],\r\n        shortCode: order.shortCode || '',\r\n        status:\r\n          typeof order.status === 'string'\r\n            ? order.status\r\n            : order.status && Object.keys(order.status).length > 0\r\n            ? order.status['name']\r\n            : 'pending',\r\n        total: order.totalPrice,\r\n        deliveryCharge: order.totalPrice,\r\n        deliveryRegion: order.deliveryRegion,\r\n        deliveryName: order.deliveryRegion && order.deliveryRegion['name'],\r\n        deliveryPickUpLocation:\r\n          order.deliveryRegion && order.deliveryRegion['pickUpLocation'],\r\n        deliveryCountryName:\r\n          order.deliveryRegion && order.deliveryRegion['countryName'],\r\n        products:\r\n          order.products && order.products.length > 0\r\n            ? order.products.map((product) => {\r\n                return {\r\n                  ...product,\r\n                  id: product._id || '',\r\n                  name: product.name && product.name,\r\n                  description: product.description && product.description,\r\n                  cover: `${config['baseURL']}${\r\n                    (product.cover && product.cover['thumbnail']) || ''\r\n                  }`,\r\n                  regularPrice: product.price && product.price['regular'],\r\n                  offerPrice: product.price && product.price['offer'],\r\n                  url: product.url,\r\n                  unit: product.unit,\r\n                  category: product.category,\r\n                  pricing: product.pricing,\r\n                  date: product.date,\r\n                  time: product.time,\r\n                  venue: product.venue,\r\n                  brand: product.brand,\r\n                  tags: product.tags,\r\n                  price: product.price,\r\n                  available:\r\n                    product.pricing && product.pricing.length > 0\r\n                      ? product.pricing[0]['stock'] &&\r\n                        product.pricing[0]['stock']['available']\r\n                      : 0,\r\n                  minimum:\r\n                    product.pricing && product.pricing.length > 0\r\n                      ? product.pricing[0]['stock'] &&\r\n                        product.pricing[0]['stock']['minimum']\r\n                      : 0,\r\n                };\r\n              })\r\n            : [],\r\n        date_created: order.added,\r\n        paymentMethod: order['payment']['paymentMethod'],\r\n        paymentStatus: order['payment']['status'],\r\n        payment: order['payment'],\r\n        customerId: order['customer'] ? order['customer']['_id'] : '',\r\n      };\r\n    } else return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method signup convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async signup(data) {\r\n    return {\r\n      status: 'ok',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method signin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async signin(data) {\r\n    if (data['msg']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method login convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async login(data) {\r\n    if (data['msg']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addImageToLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addImageToLibrary(data) {\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getCurrentUserData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getCurrentCustomerData(data) {\r\n    //map props\r\n    // let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\r\n\r\n    const formatedData = {\r\n      ...data,\r\n    };\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAutoEmailConfiguration convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAutoEmailConfiguration(data) {\r\n    const formatedData = {\r\n      ...data,\r\n    };\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getAutoSMSConfiguration convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAutoSMSConfiguration(data) {\r\n    const formatedData = {\r\n      ...data,\r\n    };\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getEmailDetails convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getEmailDetails(data) {\r\n    const formatedData = {\r\n      ...data,\r\n    };\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getSMSDetails convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getSMSDetails(data) {\r\n    const formatedData = {\r\n      ...data,\r\n    };\r\n\r\n    return formatedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method currentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async currentCustomerData(data) {\r\n    //map props\r\n    // let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\r\n\r\n    const convertedData = {\r\n      ...data,\r\n    };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async updateCurrentCustomerData(data) {\r\n    //map props\r\n    // let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\r\n\r\n    const convertedData = {\r\n      status: 'ok',\r\n    };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method changePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async changePassword(data) {\r\n    if (data['success']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method configureAutoEmail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async configureAutoEmail(data) {\r\n    if (data['success']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method configureAutoSMS convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async configureAutoSMS(data) {\r\n    if (data['success']) {\r\n      return {\r\n        status: 'ok',\r\n      };\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getCurrentUserOrders(resData) {\r\n    const data = resData.data || [];\r\n    const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      (data.length > 0 &&\r\n        data.map((item) => {\r\n          return {\r\n            ...item,\r\n            id: item.id || item._id,\r\n            billingAddress: item.billingAddress,\r\n            status: item.status,\r\n            total: item.totalPrice,\r\n            products: item.products,\r\n            date_created: item.date,\r\n            paymentMethod: item['payment']['paymentMethod'],\r\n            customerId: item.customer['_id'],\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    convertedData = {\r\n      data: convertedData,\r\n      isNext,\r\n    };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method orderList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async orderList(resData) {\r\n    const data = resData.data || [];\r\n    // const isNext = resData.page.next;\r\n\r\n    console.log('orderListDAta', data);\r\n\r\n    let convertedData =\r\n      (data.length > 0 &&\r\n        data.map((item) => {\r\n          return {\r\n            ...item,\r\n            id: item.id || item._id,\r\n            shippingAddress: item.billingAddress,\r\n            shortCode: item.shortCode || '',\r\n            name:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['firstName'] &&\r\n              item.shippingAddress['firstName'] + ' ' + item.shippingAddress &&\r\n              item.shippingAddress['lastName'] &&\r\n              item.shippingAddress['lastName'],\r\n            country:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['country'] &&\r\n              item.shippingAddress['country'],\r\n            city:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['city'] &&\r\n              item.shippingAddress['city'],\r\n            status:\r\n              typeof item.status === 'string'\r\n                ? item.status\r\n                : item.status && Object.keys(item.status).length > 0\r\n                ? item.status['name']\r\n                : 'pending',\r\n            total: item.totalPrice,\r\n            products: item.products,\r\n            date_created: item.added,\r\n            paymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n            paymentStatus: item['payment'] && item['payment']['status'],\r\n            payment: item['payment'],\r\n            customerId: item['customer'] ? item['customer']['_id'] : '',\r\n            deliveryName:\r\n              item.deliveryRegion && Object.keys(item.deliveryRegion).length > 0\r\n                ? `${item.deliveryRegion['name']}`\r\n                : '',\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method dealerOrderList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async dealerOrderList(resData) {\r\n    const data = resData.data || [];\r\n    // const isNext = resData.page.next;\r\n\r\n    console.log('orderListDAta', data);\r\n\r\n    let convertedData =\r\n      (data.length > 0 &&\r\n        data.map((item) => {\r\n          return {\r\n            ...item,\r\n            id: item.id || item._id,\r\n            shippingAddress: item.billingAddress,\r\n            shortCode: item.shortCode || '',\r\n            name:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['firstName'] &&\r\n              item.shippingAddress['firstName'] + ' ' + item.shippingAddress &&\r\n              item.shippingAddress['lastName'] &&\r\n              item.shippingAddress['lastName'],\r\n            country:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['country'] &&\r\n              item.shippingAddress['country'],\r\n            city:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['city'] &&\r\n              item.shippingAddress['city'],\r\n            status:\r\n              typeof item.status === 'string'\r\n                ? item.status\r\n                : item.status && Object.keys(item.status).length > 0\r\n                ? item.status['name']\r\n                : 'pending',\r\n            total: item.totalPrice,\r\n            products: item.products,\r\n            date_created: item.added,\r\n            paymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n            paymentStatus: item['payment'] && item['payment']['status'],\r\n            payment: item['payment'],\r\n            customerId: item['customer'] ? item['customer']['_id'] : '',\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method orderListForCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async orderListForCustomer(resData) {\r\n    const data = resData.data || [];\r\n    // const isNext = resData.page.next;\r\n\r\n    let convertedData =\r\n      (data.length > 0 &&\r\n        data.map((item) => {\r\n          return {\r\n            id: item.id || item._id,\r\n            shortCode: item.shortCode || '',\r\n            shippingAddress: item.billingAddress,\r\n            status:\r\n              typeof item.status === 'string'\r\n                ? item.status\r\n                : item.status && Object.keys(item.status).length > 0\r\n                ? item.status['name']\r\n                : 'pending',\r\n            name:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['firstName'] &&\r\n              item.shippingAddress['firstName'] + ' ' + item.shippingAddress &&\r\n              item.shippingAddress['lastName'] &&\r\n              item.shippingAddress['lastName'],\r\n            country:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['country'] &&\r\n              item.shippingAddress['country'],\r\n            city:\r\n              item.shippingAddress &&\r\n              item.shippingAddress['city'] &&\r\n              item.shippingAddress['city'],\r\n            total: item.totalPrice,\r\n            products: item.products,\r\n            date_created: item.added,\r\n            paymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n            paymentStatus: item['payment'] && item['payment']['status'],\r\n            payment: item['payment'],\r\n            customerId: item['customer'] ? item['customer']['_id'] : '',\r\n            deliveryName:\r\n              item.deliveryRegion && Object.keys(item.deliveryRegion).length > 0\r\n                ? `${item.deliveryRegion['name']}`\r\n                : '',\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    // convertedData = {\r\n    // \tdata: convertedData,\r\n    // \tisNext\r\n    // };\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method currentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async currentUserOrders(data) {\r\n    //map props\r\n    let generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\r\n\r\n    const convertedData =\r\n      (data.length > 0 &&\r\n        data.map((item) => {\r\n          return {\r\n            ...generalFormat,\r\n            id: item.id,\r\n            status: item.status,\r\n            total: item.total,\r\n            line_items: item.line_items,\r\n            date_created: item.date_created,\r\n          };\r\n        })) ||\r\n      [];\r\n\r\n    return convertedData;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method payment convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async payment(data) {\r\n    const paymentItems = data.items;\r\n    if (!paymentItems.length > 0) {\r\n      return paymentItems;\r\n    }\r\n\r\n    const items = paymentItems.map((item) => {\r\n      return {\r\n        name: item.name || '',\r\n        number: item.text || '',\r\n      };\r\n    });\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method welcome convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async welcome(data) {\r\n    return {\r\n      text: data.text,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method logo convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async logo(data) {\r\n    const src =\r\n      data.image && data.image.length > 0\r\n        ? `${config['baseURL']}${data.image[0]['original']}`\r\n        : '';\r\n    return {\r\n      src,\r\n      target: data.target,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method hotline convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async hotline(data) {\r\n    return {\r\n      text: data.text,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method navLinks convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async navLinks(data) {\r\n    const navLinkItems = data.items;\r\n    if (!navLinkItems.length > 0) {\r\n      return [];\r\n    }\r\n\r\n    const items = navLinkItems.map((item) => {\r\n      return {\r\n        text: item.name || item.text,\r\n        target: item.target,\r\n      };\r\n    });\r\n\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method slider convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async slider(data) {\r\n    const sliderItems = data.items;\r\n    if (!sliderItems.length > 0) {\r\n      return sliderItems;\r\n    }\r\n\r\n    const images = sliderItems.map((item) => {\r\n      return {\r\n        target: item.target,\r\n        src: `${config['baseURL']}${item.image[0]['medium']}`,\r\n      };\r\n    });\r\n    return images;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method sliderRight convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async sliderRight(data) {\r\n    const sliderRightItems = data.items;\r\n    if (!sliderRightItems.length > 0) {\r\n      return sliderRightItems;\r\n    }\r\n\r\n    const images = sliderRightItems.map((item) => {\r\n      return {\r\n        target: item.target,\r\n        src: `${config['baseURL']}${item.image[0]['medium']}`,\r\n      };\r\n    });\r\n    return images;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method address convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async address(data) {\r\n    return {\r\n      name: data.name,\r\n      text: data.text,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method Links convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async Links(data) {\r\n    const servicesItems = data.items;\r\n    if (!servicesItems.length > 0) {\r\n      return servicesItems;\r\n    }\r\n\r\n    const items = servicesItems.map((item) => {\r\n      return {\r\n        target: item.target,\r\n        name: item.name || item.text,\r\n      };\r\n    });\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method Account convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async Account(data) {\r\n    const accountItems = data.items;\r\n    if (!accountItems.length > 0) {\r\n      return accountItems;\r\n    }\r\n\r\n    const items = accountItems.map((item) => {\r\n      return {\r\n        target: item.target,\r\n        name: item.name || item.text,\r\n      };\r\n    });\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method 'About Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async 'About Us'(data) {\r\n    const aboutUsItems = data.items;\r\n    if (!aboutUsItems.length > 0) {\r\n      return aboutUsItems;\r\n    }\r\n\r\n    const items = aboutUsItems.map((item) => {\r\n      return {\r\n        target: item.target,\r\n        name: item.name || item.text,\r\n      };\r\n    });\r\n    return items;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method 'getTotalUserCount Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getTotalUserCount(data) {\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addCoupon Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addCoupon(data) {\r\n    if (data && data[0]) {\r\n      return {\r\n        status: 'ok',\r\n        ...data[0],\r\n        cover: data[0].cover\r\n          ? `${config['baseURL']}${\r\n              data[0].cover ? data[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @public\r\n   * @method addBundle Us convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async addBundle(data) {\r\n    if (data && data[0]) {\r\n      return {\r\n        status: 'ok',\r\n        ...data[0],\r\n        price:\r\n          parseInt(data[0].price['offer']) > parseInt(data[0].price['regular'])\r\n            ? data[0].price['offer']\r\n            : data[0].price['regular'],\r\n        cover: data[0].cover\r\n          ? `${config['baseURL']}${\r\n              data[0].cover ? data[0].cover.thumbnail : ''\r\n            }`\r\n          : '',\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n}\r\n\r\nexport default Converter;\r\n","import { useEffect, useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype Tdependecies = any[] | [];\r\ntype TItem = string;\r\ntype IFormat = string | undefined;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n          done: true,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useFetch = (\r\n  dependencies: Tdependecies = [],\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  options?: any,\r\n  format?: IFormat\r\n): IState => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_INIT' });\r\n      try {\r\n        // @ts-ignore\r\n        let data = await connector.request(item, format, options);\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, dependencies);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype TItem = string;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n        },\r\n        done: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useHandleFetch = (\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  format?: string\r\n): [IState, (values: any) => void] => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  const handlePost = async (options: any) => {\r\n    dispatch({ type: 'FETCH_INIT' });\r\n\r\n    try {\r\n      // @ts-ignore\r\n      let data = await connector.request(item, format || 'json', options);\r\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n      return initialData;\r\n    }\r\n  };\r\n\r\n  return [state, handlePost];\r\n};\r\n\r\nexport default useHandleFetch;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tusername: Yup.string()\r\n\t\t.label('Username')\r\n\t\t.required('Username is required')\r\n\t\t.min(3, 'Username must have at least 3 characters'),\r\n\r\n\tpassword: Yup.string().label('Password').required('Password is required'),\r\n});\r\n\r\nconst initialValues = {\r\n\tusername: '',\r\n\tpassword: '',\r\n};\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst QuickEdit = ({ }: Props) => {\r\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleLoginFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tusername: values.username,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.username || !values.password || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmaxWidth: '400px',\r\n\t\t\t\t\t\t\tmargin: '20px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Username'\r\n\t\t\t\t\t\t\t\tvalue={values.username}\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tisError={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('username');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import Login from './Login';\r\nexport default Login;\r\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\r\n    const reducer = reducerMap[ action.type ];\r\n    return reducer ? reducer( state, action ) : state;\r\n};\r\n","import isomorphicFetch from 'isomorphic-fetch';\r\n\r\nexport default (url, method, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: requestHeaders(),\r\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\r\n\t};\r\n\r\n\treturn isomorphicFetch(url, options).then(res =>\r\n\t\tparseStatus(res.status, res.json())\r\n\t);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (status >= 200 && status < 300) {\r\n\t\t\tres.then(response => resolve(response));\r\n\t\t} else {\r\n\t\t\tres.then(response => reject({ status, response }));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction requestHeaders() {\r\n\treturn {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t};\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst globalState = createReducer([])({\r\n  [types.SAVE_ROLES]: (state, action) => {\r\n    const roles = action.payload;\r\n    return [...roles];\r\n  },\r\n});\r\n\r\nexport default globalState; ","export const SAVE_ROLES = \"session/SAVE_ROLES\";\r\n","import * as types from \"./types\";\r\n\r\nexport const saveRoles = (roles) => ({\r\n    type: types.SAVE_ROLES,\r\n    payload: roles\r\n});\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as glboalOperations from \"./operations\";\r\n\r\nexport {\r\n    glboalOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import getDeliveryChargeTotal from './getDeliveryChargeTotal';\r\n\r\nconst allRoles = [\r\n  'getCatalogue',\r\n  'postCatalogue',\r\n  'getDelivery',\r\n  'postDelivery',\r\n  'getOrder',\r\n  'postOrder',\r\n  'getBlog',\r\n  'postBlog',\r\n  'getPage',\r\n  'postPage',\r\n  'analytics',\r\n  'accounts',\r\n  'getDealer',\r\n  'postDealer',\r\n];\r\n\r\nconst isAccess = (role, adminRoles) => {\r\n  if (!adminRoles || !adminRoles[0]) return false;\r\n  if (adminRoles.includes('superAdmin')) return true;\r\n  return adminRoles.includes(role);\r\n};\r\n\r\nexport { getDeliveryChargeTotal, isAccess };\r\n","import React, { useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  Switch,\r\n  withRouter,\r\n} from 'react-router-dom';\r\nimport { Layout, Menu, Upload, message } from 'antd';\r\n\r\nimport {\r\n  PieChartOutlined,\r\n  FileOutlined,\r\n  TeamOutlined,\r\n  TagOutlined,\r\n  BranchesOutlined,\r\n  GoldOutlined,\r\n  FilterOutlined,\r\n  TagsOutlined,\r\n  CarOutlined,\r\n  ShoppingCartOutlined,\r\n  MailOutlined,\r\n  SettingOutlined,\r\n  InboxOutlined,\r\n  SlidersOutlined,\r\n  DesktopOutlined,\r\n  RadarChartOutlined,\r\n  MessageOutlined,\r\n  UserOutlined,\r\n  FileAddOutlined,\r\n  FileSearchOutlined,\r\n  BgColorsOutlined,\r\n  BankOutlined,\r\n  FireOutlined,\r\n  MailTwoTone,\r\n  UserAddOutlined,\r\n  GlobalOutlined,\r\n  CalculatorOutlined,\r\n  UsergroupAddOutlined,\r\n  MoneyCollectOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import state\r\nimport { glboalOperations } from '../../state/ducks/globalState';\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderComponent = ({ roles }: any) => {\r\n  const [collapsed, setcollapsed] = useState(false);\r\n  const onCollapse = (collapsed: any) => {\r\n    // console.log(collapsed);\r\n    setcollapsed(collapsed);\r\n  };\r\n\r\n  return (\r\n    <Sider\r\n      width={260}\r\n      style={{\r\n        boxShadow: '7px 0 60px rgba(0,0,0,.05)',\r\n        border: 'none',\r\n      }}\r\n      collapsible\r\n      collapsed={collapsed}\r\n      onCollapse={onCollapse}\r\n      theme='light'\r\n    >\r\n      <Menu selectable={true} mode='inline'>\r\n        {isAccess('analytics', roles) && (\r\n          <Menu.Item key='1' icon={<PieChartOutlined />}>\r\n            <Link to='/admin'>Dashboard</Link>\r\n          </Menu.Item>\r\n        )}\r\n\r\n        {isAccess('getCatalogue', roles) && (\r\n          <SubMenu\r\n            key='sub3'\r\n            icon={<GoldOutlined />}\r\n            title='Product'\r\n            // onTitleClick={() => props.history.push('/product')}\r\n          >\r\n            <Menu.Item icon={<RadarChartOutlined />} key='6'>\r\n              <Link to='/admin/product'>Products</Link>\r\n            </Menu.Item>\r\n\r\n            {/* <Menu.Item\r\n                      icon={<BankOutlined />}\r\n                      key='2222'>\r\n                      <Link to='/admin/bundle'>Bundle</Link>\r\n                  </Menu.Item> */}\r\n\r\n            <Menu.Item key='9' icon={<TagsOutlined />}>\r\n              <Link to='/admin/tag'>Tags</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key='2' icon={<TagOutlined />}>\r\n              <Link to='/admin/category'>Categories</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key='5' icon={<BranchesOutlined />}>\r\n              <Link to='/admin/brand'>Brand</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        )}\r\n\r\n        <SubMenu\r\n          key='sub333'\r\n          icon={<GoldOutlined />}\r\n          title='Recipes'\r\n          // onTitleClick={() => props.history.push('/product')}\r\n        >\r\n          <Menu.Item icon={<RadarChartOutlined />} key='655'>\r\n            <Link to='/admin/posts'>List Recipe</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item icon={<TagOutlined />} key='2222444'>\r\n            <Link to='/admin/posts/category'>Recipe Category</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key='955' icon={<TagsOutlined />}>\r\n            <Link to='/admin/posts/tag'>Recipe Tags</Link>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n\r\n        {/* <Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t<Link to='/tag'>Tags</Link>\r\n\t\t\t\t</Menu.Item> */}\r\n        {/* <Menu.Item key='1012' icon={<FileExcelOutlined />}>\r\n                    <Link to='/admin/posts'>\r\n                        Recipies\r\n                    </Link>\r\n                </Menu.Item> */}\r\n\r\n        <Menu.Item key='1011' icon={<FireOutlined />}>\r\n          <Link to='/admin/coupon'>Coupon</Link>\r\n        </Menu.Item>\r\n\r\n        {isAccess('getDelivery', roles) && (\r\n          <Menu.Item key='10' icon={<CarOutlined />}>\r\n            <Link to='/admin/delivery'>Delivery</Link>\r\n          </Menu.Item>\r\n        )}\r\n\r\n        {isAccess('accounts', roles) && (\r\n          <SubMenu key='sub33' icon={<CalculatorOutlined />} title='Accounting'>\r\n            <SubMenu key='sub3355' icon={<CalculatorOutlined />} title='Staff'>\r\n              <Menu.Item icon={<UsergroupAddOutlined />} key='66'>\r\n                <Link to='/admin/staff'>Staffs</Link>\r\n              </Menu.Item>\r\n              <Menu.Item icon={<MoneyCollectOutlined />} key='65257'>\r\n                <Link to='/admin/salaryReport'>Salary report</Link>\r\n              </Menu.Item>\r\n            </SubMenu>\r\n\r\n            <Menu.Item icon={<MoneyCollectOutlined />} key='67'>\r\n              <Link to='/admin/expense'>Expense</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key='675454'>\r\n              <Link to='/admin/acccounting/overview'>Order report</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        )}\r\n\r\n        {isAccess('getOrder', roles) && (\r\n          <SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\r\n            <Menu.Item key='11'>\r\n              <Link to='/admin/order'>List Orders</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='11222'>\r\n              <Link to='/admin/order/overview'>Order Analytics</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='12'>\r\n              <Link to='/admin/order/new'>Add Order</Link>\r\n            </Menu.Item>\r\n            {/* <Menu.Item key='12'>\r\n                          <Link to='/admin/order/config'>\r\n                              Configure order status\r\n                          </Link>\r\n                      </Menu.Item> */}\r\n          </SubMenu>\r\n        )}\r\n\r\n        {isAccess('getDealer', roles) && (\r\n          <SubMenu\r\n            key='sub5553'\r\n            icon={<TeamOutlined />}\r\n            title='Dealer'\r\n            // onTitleClick={() => props.history.push('/product')}\r\n          >\r\n            <Menu.Item icon={<TeamOutlined />} key='666655'>\r\n              <Link to='/admin/dealer'>List dealer</Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item icon={<GlobalOutlined />} key='22534522444'>\r\n              <Link to='/admin/dealer/area'>Dealer Areas</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        )}\r\n\r\n        <Menu.Item key='13' icon={<UserOutlined />}>\r\n          <Link to='/admin/customer'>Customer</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key='1888' icon={<MailOutlined />}>\r\n          <Link to='/admin/email'>Email</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key='199' icon={<MessageOutlined />}>\r\n          <Link to='/admin/sms'>SMS</Link>\r\n        </Menu.Item>\r\n\r\n        {isAccess('getDealer', roles) && (\r\n          <SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\r\n            <Menu.Item key='18' icon={<FileSearchOutlined />}>\r\n              <Link to='/admin/page'> List Pages</Link>\r\n            </Menu.Item>\r\n            <Menu.Item icon={<FileAddOutlined />} key='17'>\r\n              <Link to='/admin/page/new'> Add new Page</Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        )}\r\n\r\n        <SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\r\n          <Menu.Item icon={<UserOutlined />} key='19'>\r\n            <Link to='/admin/settings/siteInfo'>Site information</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item icon={<UserAddOutlined />} key='19999'>\r\n            <Link to='/admin/settings/admins'>Admins</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item key='23' icon={<SlidersOutlined />}>\r\n            <Link to='/admin/settings/components'>Components</Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Item icon={<BgColorsOutlined />} key='20'>\r\n            <Link to='/admin/settings/themes'>Themes</Link>\r\n          </Menu.Item>\r\n\r\n          {/* <Menu.Item key='21'>\r\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n          {/* <Menu.Item key='22'>\r\n                        <Link to='/admin/settings/invoice'>Invoice</Link>\r\n                    </Menu.Item> */}\r\n        </SubMenu>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nconst mapDispathToProps = {\r\n  saveRoles: glboalOperations.saveRoles,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, mapDispathToProps)(SiderComponent);\r\n","import Sider from \"./Sider\";\r\nexport default Sider; ","import Empty from \"./Empty\";\r\nexport default Empty; ","import React from 'react'\r\nimport { Empty } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n    height?: number\r\n}\r\n\r\nconst EmptyComponent = ({\r\n    title = 'No Data found',\r\n    height = 300\r\n}: Props) => {\r\n    return (\r\n        <div style={{\r\n            height: height,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyComponent\r\n","// @ts-nocheck\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\n// import { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Empty from '../../components/Empty';\r\n\r\n// import libraries\r\nimport { useHistory } from 'react-router';\r\nimport {\r\n  LogoutOutlined,\r\n  BellOutlined,\r\n  OrderedListOutlined,\r\n  TwitterSquareFilled,\r\n  ShoppingCartOutlined,\r\n  CheckCircleOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\nimport { Layout, Badge, Dropdown, Menu, Spin, notification } from 'antd';\r\nimport moment from 'moment';\r\nconst { Header } = Layout;\r\n\r\n// import styles\r\n\r\nconst openSuccessNotification = (msg?: any) => {\r\n  notification.success({\r\n    message: msg || 'Product Deleted',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst HeaderComponent = (props: Props) => {\r\n  const history = useHistory();\r\n\r\n  const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch(\r\n    {},\r\n    'getAllNotification'\r\n  );\r\n  const [\r\n    getMarkNotificationAsReadState,\r\n    handleMarkNotificationAsReadFetch,\r\n  ] = useHandleFetch({}, 'markNotificationAsRead');\r\n  const [\r\n    getMarkAllNotificationAsReadState,\r\n    handleMarkAllNotificationAsReadFetch,\r\n  ] = useHandleFetch({}, 'markAllNotificationAsRead');\r\n\r\n  const [notificationList, setnotificationList] = useState({});\r\n\r\n  const handleMenuClick = (e) => {\r\n    if (e.key === '3') {\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getAllNotification = async () => {\r\n      const res = await handleGetAllNOticationFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            limitNumber: 100000,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (res) {\r\n        // @ts-ignore\r\n        setnotificationList(res);\r\n      }\r\n    };\r\n\r\n    getAllNotification();\r\n  }, []);\r\n\r\n  const handleNotificationAsRead = async (id) => {\r\n    await handleMarkNotificationAsReadFetch({\r\n      body: {\r\n        id: [id],\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleAllNotificationAsRead = async () => {\r\n    const res = await handleMarkAllNotificationAsReadFetch({});\r\n    // @ts-ignore\r\n    if (res && res.status === 'ok') {\r\n      openSuccessNotification('Notification cleared!');\r\n      setnotificationList([]);\r\n    }\r\n  };\r\n\r\n  console.log('getAllNotificationState', getAllNotificationState);\r\n\r\n  const typeIcon = {\r\n    customer: <UserOutlined />,\r\n    order: <ShoppingCartOutlined />,\r\n  };\r\n\r\n  const menu = () => {\r\n    if (getAllNotificationState.isLoading)\r\n      return (\r\n        <div\r\n          style={{\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            backgroundColor: '#fff',\r\n            padding: '0 50px',\r\n          }}\r\n        >\r\n          <Spin />\r\n        </div>\r\n      );\r\n\r\n    if (\r\n      getAllNotificationState.done &&\r\n      notificationList &&\r\n      !notificationList[0]\r\n    ) {\r\n      return (\r\n        <div\r\n          className='notificationListItemContainer'\r\n          style={{\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            backgroundColor: '#fff',\r\n            padding: '0 50px',\r\n          }}\r\n        >\r\n          <Empty title='No Notification found' />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div style={{}} className='notificationListItemContainer'>\r\n        {getAllNotificationState.done && notificationList[0] && (\r\n          <div style={{}}>\r\n            <div\r\n              style={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'space-around',\r\n              }}\r\n            >\r\n              <a\r\n                onClick={() => handleAllNotificationAsRead()}\r\n                style={{\r\n                  textAlign: 'center',\r\n                  backgroundColor: '#f7f7f7',\r\n                  padding: '10px',\r\n                  width: '50%',\r\n                  fontSize: '13px',\r\n                }}\r\n                href='##'\r\n              >\r\n                CLEAR ALL\r\n              </a>\r\n              <a\r\n                onClick={() => history.push('/admin/notification')}\r\n                style={{\r\n                  textAlign: 'center',\r\n                  backgroundColor: '#eee',\r\n                  padding: '10px',\r\n                  width: '50%',\r\n                  fontSize: '13px',\r\n                }}\r\n                href='##'\r\n              >\r\n                SEE ALL\r\n              </a>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {getAllNotificationState.done &&\r\n          notificationList[0] &&\r\n          notificationList.map((item, index) => {\r\n            console.log('notificationItem', item);\r\n            return (\r\n              <div\r\n                onClick={() => {\r\n                  handleNotificationAsRead(item._id);\r\n                  history.push(`/admin/${item.type}/${item._id}`);\r\n                }}\r\n                className={\r\n                  !item.read\r\n                    ? 'notificationListItemContainer__item notificationListItemContainer__item-active'\r\n                    : 'notificationListItemContainer__item'\r\n                }\r\n              >\r\n                <span className='notificationListItemContainer__item-icon'>\r\n                  {typeIcon[item['type']]}\r\n                </span>\r\n                <div className='notificationListItemContainer__item-info'>\r\n                  <h3>{item.heading}</h3>\r\n                  <h4>{item.text}</h4>\r\n                  <h2>\r\n                    {item.added &&\r\n                      moment(item.added).format('MMMM Do YYYY, h:mm a')}\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  console.log('notificationList', notificationList);\r\n\r\n  return (\r\n    <Header\r\n      style={{\r\n        background: '#fff',\r\n        height: '60px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        boxShadow:\r\n          '0 0.46875rem 2.1875rem rgba(8,10,37,.01), 0 0.9375rem 1.40625rem rgba(8,10,37,.01), 0 0.25rem 0.53125rem rgba(8,10,37,.02), 0 0.125rem 0.1875rem rgba(8,10,37,.01)',\r\n        zIndex: 10,\r\n        transition: ' all .2s',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n      }}\r\n    >\r\n      <h2\r\n        onClick={() => history.push('/admin')}\r\n        style={{\r\n          color: '#0072EA',\r\n          marginTop: '10px',\r\n          marginLeft: '-20px',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        Admin\r\n      </h2>\r\n\r\n      <div\r\n        style={{\r\n          marginRight: '-28px',\r\n        }}\r\n      >\r\n        <Dropdown\r\n          placement='bottomLeft'\r\n          overlay={menu}\r\n          // visible={this.state.visible}\r\n        >\r\n          <a\r\n            style={{\r\n              marginRight: '10px',\r\n            }}\r\n            href='###'\r\n            className='notificationIconContainer'\r\n          >\r\n            <Badge\r\n              overflowCount={100}\r\n              // @ts-ignore\r\n              showZero={TwitterSquareFilled}\r\n              count={\r\n                getAllNotificationState.done && !notificationList\r\n                  ? 0\r\n                  : notificationList && notificationList.length\r\n                  ? notificationList.length\r\n                  : 0\r\n              }\r\n            >\r\n              <span\r\n                style={{\r\n                  marginLeft: '10px',\r\n                  fontWeight: 600,\r\n                  borderRadius: '25px',\r\n                  color: '#1890ff',\r\n                  padding: '2px 20px',\r\n                  cursor: 'pointer',\r\n                  marginRight: '-5px',\r\n                }}\r\n              >\r\n                <BellOutlined />\r\n              </span>\r\n            </Badge>\r\n          </a>\r\n        </Dropdown>\r\n\r\n        <a href='/admin/auth/logout'>\r\n          <span\r\n            style={{\r\n              marginLeft: '10px',\r\n              fontWeight: 600,\r\n              borderRadius: '25px',\r\n              color: '#1890ff',\r\n              padding: '2px 20px',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            <LogoutOutlined />\r\n            <span\r\n              style={{\r\n                marginLeft: '10px',\r\n              }}\r\n            >\r\n              logout\r\n            </span>\r\n          </span>\r\n        </a>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default HeaderComponent;\r\n","import Header from \"./Header\";\r\nexport default Header; ","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// import libraries \r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\nimport { Select, Button, Spin, Empty,DatePicker } from 'antd';\r\nimport Moment from \"react-moment\";\r\nimport moment from 'moment'; \r\n\r\nconst { Option } = Select;\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\n\r\n\r\nexport const RAINFALL = {\r\n    \"2018\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 65.4\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 1.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 23\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 65.6\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 43.2\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 19.4\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 42.8\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 97.8\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 104.8\r\n        }\r\n    ],\r\n    \"2019\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 11.2\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 18.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 12\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 7.2\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 53.4\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 49.8\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 45.2\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 51.4\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 41\r\n        },\r\n        {\r\n            month: 10,\r\n            rainfall: 24\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 54.4\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 6.2\r\n        }\r\n    ]\r\n};\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    }, {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nconst ApiVisits = (props: Props) => {\r\n    const [selectedApiValue, setSelectedApiValue] = useState('date');\r\n    const [startDate,setStartDate] = useState('');\r\n    const [endDate,setEndDate] = useState('');\r\n\r\n\r\n\r\n    \r\n\r\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\r\n\r\n\r\n    const [userData, setuserData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getDemoGraphicVisitsValue = async () => {\r\n            const uservisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                        startDateValue: startDate,\r\n                        endDateValue: endDate\r\n                    }\r\n                }\r\n            }); \r\n\r\n           console.log('uservisitsData',uservisitsDataRes); \r\n\r\n           // @ts-ignore\r\n           if(uservisitsDataRes){\r\n            // @ts-ignore\r\n            setuserData(uservisitsDataRes)\r\n           }\r\n\r\n\r\n           };\r\n\r\n\r\n           getDemoGraphicVisitsValue(); \r\n\r\n    },[selectedApiValue,startDate,endDate])\r\n\r\n\r\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState);\r\n\r\n\r\n\r\n    \r\n    const options = [\r\n        {\r\n            value: 'date',\r\n            name: 'Date'\r\n        },\r\n        {\r\n            value: 'hour',\r\n            name: 'Hour'\r\n        },\r\n        {\r\n            value: 'dayOfWeek',\r\n            name: 'Day of week'\r\n        },\r\n        {\r\n            value: 'dayOfMonth',\r\n            name: 'Day of month'\r\n        },\r\n         {\r\n            value: 'month',\r\n            name: 'Month'\r\n        },\r\n        {\r\n            value: 'year',\r\n            name: 'Year'\r\n        }\r\n    ]\r\n\r\n    \r\n\r\n    const date = new Date();\r\n    const thisMonth = MONTHS[date.getMonth()]\r\n    \r\n\r\n\r\n    const getFormateDateValue = (order) => {\r\n\r\n        if(selectedApiValue === 'day'){\r\n            return order ? moment(order).format('MMMM Do YYYY, h:mm:ss a') : order;\r\n        }\r\n        else if (selectedApiValue === 'date'){\r\n            return order ? moment(order).format('MMMM Do YYYY') : order;\r\n        }\r\n        else if (selectedApiValue === 'month'){\r\n            return order ? MONTHS[order - 1] : order; ;\r\n        }\r\n        return order; \r\n    }\r\n    \r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    const handleStartEndDateRangeDate = (e) => {\r\n       if(e && e[0]){\r\n        const startDate = new Date(moment(e[0]).format()); \r\n        const endDate = new Date(moment(e[1]).format()); \r\n        // @ts-ignore\r\n        setStartDate(startDate);\r\n        // @ts-ignore\r\n        setEndDate(endDate);\r\n       }\r\n      \r\n    }; \r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__userVisits'>\r\n            <div className='overviewContainer__body-apiVisits-header'>\r\n                <div className='overviewContainer__body-apiVisits-header-info'>\r\n                    <h2>\r\n                        Users \r\n                    </h2>\r\n\r\n                        <h3>\r\n                          All users that visited\r\n                        </h3>\r\n                </div>\r\n\r\n\r\n                <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n            </div>\r\n\r\n            <div className='overviewContainer__body-body'>\r\n            {demoGraphicVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                margin:'100px 0',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n              <Spin size='large' />\r\n            </div>\r\n\r\n            </>\r\n        )}\r\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No User visited`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n               {demoGraphicVisitsState.done && userData && userData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={userData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis dataKey={selectedApiValue} \r\n                        tickFormatter={getFormateDateValue}\r\n                         />\r\n                        <YAxis\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            unit={selectedApiValue === 'month' ? thisMonth : ''}\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n            </div>\r\n            <div className=\"overviewContainer__body-footer\">\r\n                  <RangePicker \r\n                  showTime={true}\r\n                  onChange={handleStartEndDateRangeDate}\r\n                  bordered={false}\r\n                  picker=\"date\" />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApiVisits\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// import libraries \r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Area,\r\n} from \"recharts\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\nimport { Select, Button, Spin, Empty, DatePicker } from 'antd';\r\nimport Moment from \"react-moment\";\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\n\r\n\r\nexport const RAINFALL = {\r\n    \"2018\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 65.4\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 1.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 23\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 65.6\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 43.2\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 19.4\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 42.8\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 97.8\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 104.8\r\n        }\r\n    ],\r\n    \"2019\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 11.2\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 18.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 12\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 7.2\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 53.4\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 49.8\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 45.2\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 51.4\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 41\r\n        },\r\n        {\r\n            month: 10,\r\n            rainfall: 24\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 54.4\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 6.2\r\n        }\r\n    ]\r\n};\r\n\r\n\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    MONTHS[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    }, {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n]\r\n\r\nconst ApiVisits = (props: Props) => {\r\n    const [selectedApiValue, setSelectedApiValue] = useState('date');\r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n    const [startDate,setStartDate] = useState('');\r\n    const [endDate,setEndDate] = useState('');\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                        startDateValue: startDate,\r\n                        endDateValue: endDate\r\n                    }\r\n                }\r\n            }); \r\n\r\n           console.log('ordersDataRes',ordersDataRes); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[selectedApiValue,startDate,endDate]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    const options = [\r\n        {\r\n            value: 'date',\r\n            name: 'Date'\r\n        },\r\n        {\r\n            value: 'hour',\r\n            name: 'Hour'\r\n        },\r\n        {\r\n            value: 'dayOfWeek',\r\n            name: 'Day of week'\r\n        },\r\n        {\r\n            value: 'dayOfMonth',\r\n            name: 'Day of month'\r\n        },\r\n         {\r\n            value: 'month',\r\n            name: 'Month'\r\n        },\r\n        {\r\n            value: 'year',\r\n            name: 'Year'\r\n        }\r\n    ]\r\n\r\n\r\n\r\n    const date = new Date();\r\n    const thisMonth = MONTHS[date.getMonth()]\r\n    \r\n\r\n    const getFormateDateValue = (order) => {\r\n\r\n        if(selectedApiValue === 'day'){\r\n            return order ? moment(order).format('MMMM Do YYYY, h:mm:ss a') : order;\r\n        }\r\n        else if (selectedApiValue === 'date'){\r\n            return order ? moment(order).format('MMMM Do YYYY') : order;\r\n        }\r\n        else if (selectedApiValue === 'month'){\r\n            return MONTHS[order - 1];\r\n        }\r\n        return order; \r\n    }\r\n\r\n    const getDatePickerValue = () => {\r\n        if (selectedApiValue === 'hour'){\r\n            return 'time';\r\n        }\r\n        if (selectedApiValue === 'month'){\r\n            return 'month';\r\n        }\r\n        else if (selectedApiValue === 'dayOfWeek'){\r\n            return 'week';\r\n        }\r\n        else if (selectedApiValue === 'year'){\r\n            return 'year';\r\n        }\r\n        \r\n        return 'date'; \r\n    }\r\n    \r\n\r\n    const handleStartEndDateRangeDate = (e) => {\r\n        console.log('dateOrder',moment(e[0]).format());\r\n        console.log('dateOff',moment(e[1]).format());\r\n        const startDate = new Date(moment(e[0]).format()); \r\n        const endDate = new Date(moment(e[1]).format()); \r\n        // @ts-ignore\r\n        setStartDate(startDate);\r\n        // @ts-ignore\r\n        setEndDate(endDate);\r\n    }; \r\n\r\n    return (\r\n        <div className='overviewContainer__userVisits'>\r\n            <div className='overviewContainer__body-apiVisits-header'>\r\n                <div className='overviewContainer__body-apiVisits-header-info'>\r\n                    <h2>\r\n                        Orders \r\n                    </h2>\r\n\r\n                        <h3>\r\n                          All orders that visited\r\n                        </h3>\r\n                </div>\r\n\r\n                <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n            </div>\r\n\r\n            <div className='overviewContainer__body-body'>\r\n            {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n\r\n            <div style={{\r\n                margin:'100px 0',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n                <Spin size='large' />\r\n             </div>\r\n            </>\r\n          )}\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Orders Created`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n               {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                        dataKey={selectedApiValue} \r\n                        tickFormatter={getFormateDateValue}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            unit={selectedApiValue === 'month' ? thisMonth : ''}\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n            </div>\r\n            <div className=\"overviewContainer__body-footer\">\r\n                  <RangePicker\r\n                    showTime={true}\r\n                    onChange={handleStartEndDateRangeDate}\r\n                    picker={'date'} \r\n                    bordered={false}\r\n                    />\r\n            </div>\r\n        </div>\r\n    ); \r\n\r\n}\r\n\r\nexport default ApiVisits\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\n// import lib \r\n\r\nimport { ResponsiveContainer, PieChart, Tooltip, Pie, Cell } from \"recharts\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Select, Button, Spin, Empty } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'browser',\r\n        name: 'Browser'\r\n    },\r\n    {\r\n        value: 'device',\r\n        name: 'Device'\r\n    },\r\n    {\r\n        value: 'os',\r\n        name: 'OS'\r\n    }, {\r\n        value: 'platform',\r\n        name: 'Platform'\r\n    },\r\n  \r\n\r\n];\r\n\r\n\r\nexport const AGE_GROUP = [\r\n    {\r\n        device: \"18-24\",\r\n        percentage: 14\r\n    },\r\n    {\r\n        device: \"25-34\",\r\n        percentage: 24\r\n    },\r\n    {\r\n        device: \"35-44\",\r\n        percentage: 22\r\n    },\r\n    {\r\n        device: \"45-54\",\r\n        percentage: 18\r\n    },\r\n    {\r\n        device: \"55-64\",\r\n        percentage: 16\r\n    },\r\n    {\r\n        device: \"65+\",\r\n        percentage: 6\r\n    }\r\n];\r\n\r\nexport const COLORS = [\r\n    '#1890ff',\r\n    '#20A39E',\r\n    '#61D095',\r\n    '#FFBA49',\r\n    '#EF5B5B',\r\n    '#A4036F',\r\n];\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\nconst PlatformVisits = (props: Props) => {\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('browser');\r\n\r\n\r\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\r\n\r\n\r\n    const [demographicData, setdemographicData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getDemoGraphicVisitsValue = async () => {\r\n            const demograpicVisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                    }\r\n                }\r\n            }); \r\n           };\r\n\r\n           getDemoGraphicVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(demoGraphicVisitsState.done && demoGraphicVisitsState.data){\r\n            setdemographicData(demoGraphicVisitsState.data); \r\n        }; \r\n    },[demoGraphicVisitsState])\r\n\r\n\r\n\r\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState)\r\n    console.log('demographicData',demographicData)\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n    const RADIAN = Math.PI / 180;\r\n\r\n\r\n    const renderCustomizedLabel = ({\r\n        cx,\r\n        cy,\r\n        midAngle,\r\n        innerRadius,\r\n        outerRadius,\r\n        value,\r\n        name,\r\n        index,\r\n        percent,\r\n    }) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN) - 10;\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n        console.log('percent..',percent);\r\n        return (\r\n            <text x={x} y={y} fill=\"white\" fontSize={12} dominantBaseline=\"central\">\r\n                {`${(percent * 100).toFixed(0)}%`}\r\n            </text>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__body-platformVisits'>\r\n            <div className='overviewContainer__body-platformVisits-header'>\r\n                <div className='overviewContainer__body-platformVisits-header-info'>\r\n                    <h2>\r\n                        Demographic\r\n                        </h2>\r\n                    <h3>\r\n                       {selectedApiValue} demography\r\n                        </h3>\r\n                </div>\r\n                <div className='overviewContainer__body-platformVisits-header-controller'>\r\n                    <Select\r\n                        bordered={false}\r\n                        showSearch\r\n                        style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                        placeholder='Select Type'\r\n                        optionFilterProp='children'\r\n                        onChange={onChange}\r\n                        defaultValue={'browser'}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        {\r\n                            options.map((option) => {\r\n                                return <Option value={option.value}>{option.name}</Option>;\r\n                            })}\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-body\">\r\n\r\n            {demoGraphicVisitsState.isLoading && (\r\n            <>\r\n                <div style={{\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    alignItems:\"center\",\r\n                    marginTop:'100px',\r\n                    marginBottom:'100px',\r\n                }}>\r\n                <Spin\r\n                size='large'\r\n                />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n                    {demoGraphicVisitsState.done && demographicData && demographicData.length > 0 && (\r\n                        <ResponsiveContainer width=\"100%\" height={300}>\r\n                        <PieChart fontSize={14}>\r\n                            <Tooltip\r\n                                cursor={false}\r\n                                contentStyle={TooltipContainerStyles}\r\n                                formatter={(value, name) => [`${value}`, `${name}`]}\r\n                            />\r\n\r\n                            <Pie\r\n                                dataKey=\"count\"\r\n                                data={demographicData}\r\n                                outerRadius={100}\r\n                                innerRadius={40}\r\n                                name={selectedApiValue}\r\n                                nameKey={selectedApiValue}\r\n                                unit=\"%\"\r\n                                label={renderCustomizedLabel}\r\n                                labelLine={false}\r\n                            >\r\n                                {demographicData && demographicData.map((entry, index) => (\r\n                                    <Cell\r\n                                        key={`cell-${index}`}\r\n                                        fill={COLORS[index % COLORS.length]}\r\n                                    />\r\n                                ))}\r\n                            </Pie>\r\n                            </PieChart>\r\n                        </ResponsiveContainer>\r\n                    )}\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlatformVisits\r\n\r\n\r\n// http://localhost:5000/admin/analytics/user?metric=day?start=date&end=datae\r\n// /http://localhost:5000/admin/analytics/item?type=product&item=534534534534&metric=day","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n\r\n    const history = useHistory(); \r\n\r\n\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('product');\r\n    const [pageVisitsState, handlePageVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsPageVisits');\r\n\r\n\r\n    useEffect(()=>{\r\n        const getPageVisitsValue = async () => {\r\n            const pageVisitsDataRes =  await handlePageVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        visitType: selectedApiValue,\r\n                        item: 'item',\r\n                    }\r\n                }\r\n            }); \r\n           };\r\n\r\n           getPageVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    console.log('pageVisitsState',pageVisitsState)\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    Popularity\r\n                    </h2>\r\n                <h3>\r\n                      All {selectedApiValue} that were visited\r\n                    </h3>\r\n            </div>\r\n            <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {pageVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {pageVisitsState.done && !(pageVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {pageVisitsState.done && pageVisitsState.data && pageVisitsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                        pagination={{ defaultPageSize: 6}}\r\n                            style={{\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={pageVisitsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                \r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                       <a href='##'>\r\n                                       <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/${selectedApiValue && selectedApiValue.toLowerCase()}/${record.itemId}`)\r\n                                            }}  \r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                textTransform:'uppercase',\r\n                                                cursor: 'pointer'\r\n                                            }}>\r\n                                            {text || `${selectedApiValue} Deleted`}\r\n                                        </h4>\r\n                                       </a>\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Count\"\r\n                                dataIndex=\"visit\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import components \r\nimport ApiVisits from \"./ApiVisits\";\r\nimport OrderOverView from \"./OrderOverView\";\r\nimport PlatformVisits from \"./PlatformVisits\";\r\nimport PageVisits from \"./PageVisits\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getTotalUserCount = async () => {\r\n\t\t\tawait handleGetTotalUserCountFetch({});\r\n\t\t}\r\n\r\n\t\tgetTotalUserCount();\r\n\t}, []);\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst getProductVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\r\n\t\t\t\tparams: 'product'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetProductVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst getCategoryVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\r\n\t\t\t\tparams: 'category'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetCategoryVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t{/* <div className=\"overviewContainer__header\">\r\n\r\n\t\t\t\t{totalUserCountState.done && totalUserCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Users\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{totalUserCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t{analyticsProductVisitCountState.done && analyticsProductVisitCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Products\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{analyticsProductVisitCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\t\t\t\t{analyticsCategoryVisitCountState.done && analyticsCategoryVisitCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Category\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{analyticsCategoryVisitCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<ShoppingCartOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Orders\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t8503\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n */}\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<PageVisits />\r\n\t\t\t\t<PlatformVisits />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t</div>\r\n\t\t\t<OrderOverView />\r\n\t\t\t<ApiVisits />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    rows?: number\r\n    placeholder?:any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, \r\n    onChange, disabled, isError,\r\n     errorString, name, rows = 4,\r\n     placeholder\r\n     }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                help={errorString}\r\n            // rules={[{ required: true }]}\r\n            >\r\n                <TextArea\r\n                    disabled={disabled}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    name={name}\r\n                    className='inputclassName'\r\n                    rows={rows} \r\n                    placeholder={placeholder}\r\n                    />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\n// import libraries\r\nimport { Upload, Button, Modal, Tabs, message, notification, Popconfirm, Menu, Dropdown, } from 'antd';\r\nimport reqwest from 'reqwest';\r\nimport { Formik } from 'formik';\r\nimport Moment from 'react-moment';\r\n// import * as Yup from 'yup';\r\n\r\n\r\nimport {\r\n\tCheckOutlined,\r\n\tArrowUpOutlined,\r\n\tCheckCircleOutlined,\r\n\tEllipsisOutlined,\r\n\tFileImageOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tvisible: boolean;\r\n\tsetvisible: (isVisible: any) => void;\r\n\tsetmyImages?: any;\r\n\tsetmyThumbnailImage?: any;\r\n\tisModalOpenForThumbnail?: boolean;\r\n\tisModalOpenForImages?: boolean;\r\n\tmyImages?: any;\r\n\tmyThumbnailImage?: any;\r\n\tsetMyGoddamnImages?: any;\r\n\tmyGoddamnImages?: any;\r\n}\r\n\r\n\r\nconst MediaLibrary = ({\r\n\tvisible,\r\n\tsetvisible,\r\n\tsetmyImages,\r\n\tisModalOpenForImages,\r\n\tisModalOpenForThumbnail,\r\n\tsetmyThumbnailImage,\r\n\tmyImages,\r\n\tmyThumbnailImage,\r\n\t...rest\r\n}: Props) => {\r\n\r\n\tconst [fileList, setfileList] = useState([]);\r\n\tconst [uploading, setuploading] = useState(false);\r\n\tconst [selectedimages, setselectedImages] = useState([]);\r\n\tconst [activeImageItem, setactiveImageItem] = useState(false);\r\n\tconst [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch({}, 'updateImageFromLibrary');\r\n\tconst [imageListFromLibraryState, handleImageListFromLibraryFetch] = useHandleFetch({}, 'ImageListFromLibrary');\r\n\tconst [deleteImageFromLibraryFetchState, handleDeleteImageFromLibraryFetch] = useHandleFetch({}, 'deleteImageFromLibrary');\r\n\tconst [localImageList, setLocalImageList] = useState([]);\r\n\tconst [isDoneOk, setisDoneOk] = useState(false);\r\n\r\n\r\n\tconst handleDeleteImageFromImageLibrary = async (id) => {\r\n\r\n\t\tconst deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteImageLibraryItemRes && deleteImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Imaged Deleted');\r\n\t\t\tconst newImageList = localImageList.filter(item => item.id !== id);\r\n\t\t\tsetLocalImageList(newImageList);\r\n\t\t}\r\n\t};\r\n\r\n\tconst getImageList = async () => {\r\n\t\tconst imageListRes = await handleImageListFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tlimitNumber: 10000,\r\n\t\t\t\t\tsortItem: 'added',\r\n\t\t  \t\t\tsortOrderValue: '-1'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (imageListRes) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetLocalImageList(imageListRes);\r\n\t\t}\r\n\r\n\t\t// console.log('imageListRes', imageListRes);\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetImageList();\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\tconst handleUpload = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tfileList.forEach(file => {\r\n\t\t\tformData.append('images', file, file.name);\r\n\t\t});\r\n\r\n\t\tsetuploading(true);\r\n\r\n\t\t//  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n\t\t// \tbody: formData\r\n\t\t//   });\r\n\r\n\t\t//   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\t\t// You can use any AJAX library you like\r\n\t\treqwest({\r\n\t\t\turl: `${config.baseURL}/admin/api/image/add`,\r\n\t\t\tmethod: 'post',\r\n\t\t\tprocessData: false,\r\n\t\t\tdata: formData,\r\n\t\t\twithCredentials: true,\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tsetfileList([]);\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tgetImageList();\r\n\t\t\t\tmessage.success('upload successfully.');\r\n\t\t\t},\r\n\t\t\terror: () => {\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tmessage.error('upload failed.');\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\r\n\t\tif (isModalOpenForImages) {\r\n\t\t\tsetmyImages(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log('')\r\n\t\t\tconsole.log('selectedimages,,,',selectedimages[0])\r\n\t\t\tsetmyImages(selectedimages && selectedimages[0] ? [selectedimages[0]] : []);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (myImages && myImages.length > 0)\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t}, [myImages])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk && isModalOpenForImages && myImages) {\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t\t}\r\n\t}, [myImages, isDoneOk]);\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk) {\r\n\t\t\t// console.log('myThumbnail', myThumbnailImage)\r\n\t\t\t// setselectedImages([...myThumbnailImage]);\r\n\t\t}\r\n\t}, [myThumbnailImage, isDoneOk])\r\n\r\n\tconst uploadProps = {\r\n\t\t//  listType: 'picture',\r\n\t\tmultiple: true,\r\n\t\tonRemove: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst index = fileList.indexOf(file);\r\n\t\t\t\tconst newFileList = fileList.slice();\r\n\t\t\t\tnewFileList.splice(index, 1);\r\n\t\t\t\treturn newFileList;\r\n\t\t\t})\r\n\r\n\t\t},\r\n\t\tbeforeUpload: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst xflelist = filelist;\r\n\t\t\t\treturn [...xflelist, file]\r\n\t\t\t})\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tfileList,\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst handleAddToSelectedList = (image, id) => {\r\n\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (!isImageExist) {\r\n\t\t\t\tsetselectedImages([image,...selectedimages]);\r\n\t\t\t\tsetactiveImageItem(image);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst newselectedImages = selectedimages.filter(image => image.id !== id);\r\n\t\t\t\tsetselectedImages(newselectedImages);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetselectedImages([image,...selectedimages]);\r\n\t\t\tsetactiveImageItem(image);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst getisSelectedImage = (id) => {\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (isImageExist) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleUpdateSubmit = async (values, actions) => {\r\n\t\tconst updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t\talt: values.alt,\r\n\t\t\t\ttitle: values.title,\r\n\t\t\t\tcaptoin: values.captoin,\r\n\t\t\t\tlabels: values.labels,\r\n\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateImageLibraryItemRes && updateImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Image Updated');\r\n\r\n\t\t\tconst positionInImageList = () => {\r\n\t\t\t\treturn localImageList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInImageList();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, localImageList[index], { ...updateImageLibraryItemRes });\r\n\t\t\tconst updateImageList = [...localImageList.slice(0, index), updatedItem, ...localImageList.slice(index + 1)];\r\n\t\t\tsetLocalImageList(updateImageList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t}\r\n\r\n\r\n\tconst getisUpdateSubmitButtonDisabled = (values, isValid) => {\r\n\t\t// if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\r\n\t\t// \treturn true; \r\n\t\t// }\r\n\t\tif (!isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// console.log('selectedimages', selectedimages)\r\n\r\n\tconst ImageItemMenu = (handleDeleteImageFromImageLibrary, id, handleAddToSelectedList, image) => {\r\n\t\treturn (\r\n\t\t\t(\r\n\t\t\t\t<Menu>\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleAddToSelectedList(image, id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<CheckOutlined />}>\r\n\t\t\t\t\t\tSelect\r\n\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleDeleteImageFromImageLibrary(id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<DeleteOutlined color='red' />}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</Menu >\r\n\t\t\t)\r\n\t\t)\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: '40px'\r\n\t\t\t\t}}\r\n\t\t\t\ttitle=\"Media Library\"\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\twidth={'80vw'}\r\n\t\t\t\tbodyStyle={{\r\n\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\tpadding: '0'\r\n\t\t\t\t}}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<div className='mediaLibraryBodyContainer'>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-left'>\r\n\r\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"2\" type=\"card\" size='middle'>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Upload New Media\" key=\"1\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-header'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Dragger\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='upload-list-inline'\r\n\t\t\t\t\t\t\t\t\t\t\tlistType='picture'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: '#fff',\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '8px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t{...uploadProps}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-hint'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSupport for a single or bulk upload.\r\n\t\t\t\t\t\t                \t</p>\r\n\t\t\t\t\t\t\t\t\t\t</Dragger>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\tonClick={handleUpload}\r\n\t\t\t\t\t\t\t\t\tdisabled={fileList.length === 0}\r\n\t\t\t\t\t\t\t\t\tloading={uploading}\r\n\t\t\t\t\t\t\t\t\ticon={<ArrowUpOutlined />}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '20px',\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Media Library\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{myImages && myImages.lenght > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelected Items\r\n                               </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages-imgContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.length > 0\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-left-imageListContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getisSelectedImage(image.id) ? <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : ''}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown overlay={() => ImageItemMenu(handleDeleteImageFromImageLibrary, image.id, handleAddToSelectedList, image)} placement=\"bottomRight\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EllipsisOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}} src={image.cover} alt='img' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done && !(localImageList.length > 0) && (\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Empty title='No Image Found in the library' />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-right'>\r\n\r\n\t\t\t\t\t\t{activeImageItem && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\tonSubmit={(values, actions) => handleUpdateSubmit(values, actions)}\r\n\t\t\t\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t{ ...activeImageItem }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\t\t\t\thandleReset,\r\n\t\t\t\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment Details\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={activeImageItem['cover']} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='imageLibnameText'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['name']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['added']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t5000 X 500\r\n\t\t\t\t\t\t\t\t\t</h5> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteImageFromImageLibrary(activeImageItem['id'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='imageLibdeleteText'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete parmanently\r\n\t\t\t\t\t\t\t\t\t                       </h5>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Alternate Text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.alt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='alt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('alt');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('title');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Caption'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('caption');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='default'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={getisUpdateSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{!activeImageItem && (\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{\r\n\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\tfontSize: \"13px\",\r\n\t\t\t\t\t\t\t\t\tcolor: '#8888'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tSelect an image to preview details\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default MediaLibrary;\r\n","import MediaLibrary from './MediaLibrary';\r\nexport default MediaLibrary;\r\n","// @ts-nocheck\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass MetaTags extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = (removedTag) => {\r\n    const { setTags, tags } = this.props;\r\n    const localTags = tags.filter((tag) => tag !== removedTag);\r\n    setTags(localTags);\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    console.log('handleInputConfirm', this.props);\r\n    const { inputValue } = this.state;\r\n    let { tags, setTags } = this.props;\r\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    setTags(tags);\r\n    this.setState({\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = (e) => {\r\n    this.setState({ editInputValue: e.target.value });\r\n    console.log('tagValue', e.target.value);\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ editInputIndex, editInputValue }) => {\r\n      return {\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n\r\n    const newTags = [...this.props.tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    this.props.setTags(newTags);\r\n  };\r\n\r\n  saveInputRef = (input) => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = (input) => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      inputVisible,\r\n      inputValue,\r\n      editInputIndex,\r\n      editInputValue,\r\n    } = this.state;\r\n    const { placeholder, tags } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {tags &&\r\n          tags.length > 0 &&\r\n          tags.map((tag, index) => {\r\n            if (editInputIndex === index) {\r\n              return (\r\n                <Input\r\n                  ref={this.saveEditInputRef}\r\n                  key={tag}\r\n                  size='small'\r\n                  placeholder={placeholder}\r\n                  className='tag-input'\r\n                  value={editInputValue}\r\n                  onChange={this.handleEditInputChange}\r\n                  onBlur={this.handleEditInputConfirm}\r\n                  onPressEnter={this.handleEditInputConfirm}\r\n                />\r\n              );\r\n            }\r\n\r\n            const isLongTag = tag.length > 20;\r\n\r\n            const tagElem = (\r\n              <Tag\r\n                className='edit-tag'\r\n                key={tag}\r\n                closable={true}\r\n                onClose={() => this.handleClose(tag)}\r\n              >\r\n                <span\r\n                  onDoubleClick={(e) => {\r\n                    if (index !== 0) {\r\n                      this.setState(\r\n                        { editInputIndex: index, editInputValue: tag },\r\n                        () => {\r\n                          this.editInput.focus();\r\n                        }\r\n                      );\r\n                      e.preventDefault();\r\n                    }\r\n                  }}\r\n                >\r\n                  {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n                </span>\r\n              </Tag>\r\n            );\r\n            return isLongTag ? (\r\n              <Tooltip title={tag} key={tag}>\r\n                {tagElem}\r\n              </Tooltip>\r\n            ) : (\r\n              tagElem\r\n            );\r\n          })}\r\n        {inputVisible && (\r\n          <Input\r\n            style={{\r\n              margin: '10px 0',\r\n            }}\r\n            ref={this.saveInputRef}\r\n            type='text'\r\n            size='small'\r\n            className='tag-input'\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className='site-tag-plus edit-tag' onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaTags;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: null\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n    setcategoryList?: any;\r\n    categoryDetailData?:any; \r\n}\r\n\r\nconst AddNewCategory = ({ \r\n    addNewCategoryVisible, \r\n    setAddNewCategoryVisible, \r\n    categoryList, setcategoryList,\r\n    categoryDetailData }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\tconst [updateCategoryIconState, handleUpdateCategoryIconFetch] = useHandleFetch({}, 'categoryUpdateIcon', 'form');\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\r\n\t\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    useEffect(() => {\r\n        if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\r\n\t\t\tconst images = categoryDetailData.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === categoryDetailData.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [categoryDetailData.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(categoryDetailData.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n        \tsetmyImages(mahImages);\r\n        }\r\n    }, [categoryDetailData]); \r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'category',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'category',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\r\n\r\n\t\tconsole.log('categoryDetailData',categoryDetailData); \r\n\t\t\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\tconst aboutToUpdatedImageIds = []; \r\n\r\n\t\t\tif(imagesIds && imagesIds.length > 0){\r\n\t\t\t\timagesIds.forEach(imageId => {\r\n\t\t\t\t\tif(categoryDetailData && categoryDetailData['image']){\r\n\t\t\t\t\t\tif(!categoryDetailData['image'].includes(imageId)){\r\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n      \r\n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'category',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: aboutToUpdatedImageIds\r\n                    }\r\n                });\r\n\t\t\t}\r\n\t\t\t\r\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: aboutToUpdatedImageIds[0].id,\r\n                            collection: 'category',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\t\t}\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: categoryDetailData.id\r\n                },\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                displayOrder: values.displayOrder,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                parent: selectedParentId,\r\n                icon: imageFile,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags:  tags && tags.length > 0 ?  tags.join(',') : '',\r\n                bn: {\r\n                    metaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags:  bnTags && bnTags.length > 0 ?  bnTags.join(',') : '',\r\n                    name: values.bnName.trim(),\r\n                    description: values.bnDescription,\r\n                }\r\n            },\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Updated!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([{\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\tcover: addCategoryRes['cover'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t},...categoryList])\r\n\r\n    \r\n            \r\n            \r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\t\r\n\t\r\n\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetTags([]); \r\n\t\tsetBnTags([]); \r\n\t\tsetAddNewCategoryVisible(false);\r\n\t\tsetImagefile(''); \r\n\t\tsetCoverImageId(''); \r\n\t\tsetselectedParentId('');\r\n\t\tsetmyImages(false); \r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\t function beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('icon',file); \r\n\t\t\t\t// const addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\t\t// \tbody: formData,\r\n\t\t\t\t// });\r\n\t\t\t\tconst res = await handleUpdateCategoryIconFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Category Icon updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update category icon, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const iconUrl = categoryDetailData.icon && categoryDetailData.icon; \r\n\r\n\t\t\tsetImageUrl(iconUrl); \r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n    \r\n    useEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const metaTags = categoryDetailData.metaTags && categoryDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = categoryDetailData.bn && categoryDetailData.bn['metaTags'] && categoryDetailData.bn['metaTags'].split(','); \r\n            setTags(metaTags || [])\r\n            setBnTags(bnMetaTags || [])\r\n        }\r\n\r\n\t},[])\r\n\t\r\n\r\n\tconsole.log('metaTagsCategoryEdit',tags)\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n                \r\n                { ...initialValues,\r\n                    ...categoryDetailData,\r\n                    ...( categoryDetailData && Object.keys(categoryDetailData).length > 0 && {\r\n                        bnMetaTitle: categoryDetailData['bn']\r\n                        && categoryDetailData['bn'].metaTitle\r\n                        && categoryDetailData['bn'].metaTitle,\r\n                        bnMetaDescription: categoryDetailData['bn'] &&  categoryDetailData['bn'].metaDescription && categoryDetailData['bn'].metaDescription,\r\n                        bnName: categoryDetailData['bn'] && categoryDetailData['bn'].name && categoryDetailData['bn'].name,\r\n                        bnDescription: categoryDetailData['bn'] && categoryDetailData['bn'].description && categoryDetailData['bn'].description,\r\n                    })\r\n                 }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\tdestroyOnClose={true}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Display Order'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.displayOrder}\r\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'1,3,7'}\r\n\t\t\t\t\t\t\t\t\t\tname='displayOrder'\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('displayOrder');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tmarginTop:'20px'\r\n\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\nstyle={{\r\n\tmarginBottom: '-5px'\r\n}}\r\n>\r\n<h3 className='inputFieldLabel'>Images</h3>\r\n{/* <div  >\r\n<FileOutlined />\r\n<span>Media Center</span>\r\n</div> */}\r\n</div>\r\n\r\n\r\n<div className='aboutToUploadImagesContainer'>\r\n\r\n{categoryDetailData && Object.keys(categoryDetailData).length > 0 && (\r\n\t<>\r\n\t\t{myImages &&\r\n\t\t\t// @ts-ignore\r\n\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetCoverImageId(image.id);\r\n\t\t\t\t\t\t\t\thandleSetImageAsThumnail(image);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\thandleImagesDelete(image.id)\r\n\t\t\t\t\t\t\t\thandleDetachSingleImage(image.id)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\r\n\r\n\t\t<Tooltip\r\n\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t<div\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t}}\r\n\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t<FileImageFilled />\r\n\t\t\t\t{/* <h5>\r\n\t\t\t\t\t Select From Library\r\n\t\t\t<     /h5> */}\r\n\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</Tooltip>\r\n\t</>\r\n)}\r\n\r\n\r\n</div>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DataTable = (props: any) => (\r\n\t<ContentLoader\r\n\t\tspeed={0.5}\r\n\t\twidth={1300}\r\n\t\theight={400}\r\n\t\tviewBox='0 0 1300 400'\r\n\t\tbackgroundColor='#f3f3f3'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='203' r='12' />\r\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='265' r='12' />\r\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='323' r='12' />\r\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='386' r='12' />\r\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='37' cy='97' r='11' />\r\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n\t\t<circle cx='1316' cy='88' r='11' />\r\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n\t\t<circle cx='77' cy='96' r='11' />\r\n\t</ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n\tname: 'Mohd Arif Un',\r\n\tgithub: 'arif-un',\r\n\tdescription: 'Data Table skeleton',\r\n\tfilename: 'DataTable'\r\n};\r\n\r\nexport default DataTable;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  notification,\r\n  Space,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { AddNewCategory, QuickEdit } from '../category';\r\nimport CategoryNewQuickEdit from './CategoryNewQuickEdit';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Category Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setcategoryList?: any;\r\n  history?: any;\r\n  roles?: any;\r\n}\r\n\r\nconst MyTable = ({ data, setcategoryList, history, roles }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch(\r\n    {},\r\n    'deleteCategory'\r\n  );\r\n  // console.log('activeCategoryForEdit',activeCategoryForEdit);\r\n\r\n  const handleDeleteCategory = async (id) => {\r\n    const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteCategoryRes && deleteCategoryRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Category');\r\n      const newCategoryList = data.filter((item) => item.id !== id);\r\n      setcategoryList(newCategoryList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title=''\r\n          dataIndex='cover'\r\n          key='id'\r\n          width={'80px'}\r\n          className='classnameofthecolumn'\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                src={cover}\r\n                onClick={() => {\r\n                  history.push(`/admin/category/${record.id}`);\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                alt='cover img'\r\n                style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: 'contain',\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer',\r\n                }}\r\n              />\r\n            </>\r\n          )}\r\n        />\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/category/${record.id}`);\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Sub Cateogory'\r\n          dataIndex='subCount'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Product'\r\n          dataIndex='productCount'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n\r\n        {isAccess('postCatalogue', roles) && (\r\n          <Column\r\n            className='classnameofthecolumn'\r\n            title=''\r\n            key='action'\r\n            align='right'\r\n            render={(text, record: any) => (\r\n              <Space size='middle'>\r\n                <a href='##'>\r\n                  <Tooltip placement='top' title='Edit Category'>\r\n                    <span\r\n                      className='iconSize'\r\n                      onClick={() => {\r\n                        setvisible(true);\r\n                        setactiveCategoryForEdit(record);\r\n                      }}\r\n                    >\r\n                      <EditOutlined />\r\n                    </span>\r\n                  </Tooltip>\r\n                </a>\r\n                <Popconfirm\r\n                  onConfirm={() => handleDeleteCategory(record.id)}\r\n                  title='Are you sure？'\r\n                  okText='Yes'\r\n                  cancelText='No'\r\n                >\r\n                  <span className='iconSize iconSize-danger'>\r\n                    <DeleteOutlined />\r\n                  </span>\r\n                </Popconfirm>\r\n              </Space>\r\n            )}\r\n          />\r\n        )}\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <CategoryNewQuickEdit\r\n          categoryDetailData={activeCategoryForEdit}\r\n          setcategoryList={setcategoryList}\r\n          categoryList={data}\r\n          setAddNewCategoryVisible={setvisible}\r\n          addNewCategoryVisible={visible}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  history: any;\r\n  roles?: any;\r\n}\r\n\r\nconst CategoryList = ({ history, roles }: Props) => {\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch(\r\n    {},\r\n    'categoryList'\r\n  );\r\n  const [categoryList, setcategoryList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const setCategories = async () => {\r\n      const categories = await handleCategoryListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: true,\r\n            productCountValue: true,\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setcategoryList(categories);\r\n    };\r\n    setCategories();\r\n  }, []);\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState);\r\n\r\n  const handleSearch = (value) => {\r\n    if (categoryState.data.length > 0) {\r\n      const newCategoryList = categoryState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setcategoryList(newCategoryList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Categories</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search categories..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          {isAccess('postCatalogue', roles) && (\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => setAddNewCategoryVisible(true)}\r\n            >\r\n              Add New\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {categoryState.done && categoryList.length > 0 && (\r\n            <MyTable\r\n              roles={roles}\r\n              history={history}\r\n              setcategoryList={setcategoryList}\r\n              data={categoryList}\r\n            />\r\n          )}\r\n          {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n          {categoryState.done && !(categoryList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '50px',\r\n              }}\r\n            >\r\n              <Empty title='No Category found' />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {categoryState.done && (\r\n        <AddNewCategory\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(withRouter(CategoryList));\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message, } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: null,\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'addCategory','form');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tconst bn = {\r\n\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\tname: values.bnName.trim(),\r\n\t\t\tdescription: values.bnDescription,\r\n\t\t}; \r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\t\tformData.append('metaTitle', values.metaTitle)\r\n\t\tformData.append('displayOrder', values.displayOrder)\r\n\t\tformData.append('metaDescription', values.metaDescription)\r\n\t\tformData.append('metaTags', values.metaTags)\r\n\r\n\r\n\r\n\t\tconst bnData = JSON.stringify(bn);\r\n\t\tconst bnFormData = new FormData();\r\n\t\tbnFormData.append(\"bn\",bnData);\r\n\r\n\r\n\r\n\t\tformData.append('bn', bnFormData.get('bn'))\r\n\r\n\r\n\r\n\r\n\t\tconsole.log('addcategoryREsBody',{\r\n\t\t\t...formData,\r\n\t\t\t// ...bnFormData\r\n\t\t}); \r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\tbody: formData,\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Created!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([{\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\tcover: addCategoryRes['cover'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t},...categoryList])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconsole.log('addCategoryState',addCategoryState)\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!addCategoryState['isLoading']) {\r\n\t\t\tconst error = addCategoryState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addCategoryState])\r\n\r\n\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Display Order'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.displayOrder}\r\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'1,3,7'}\r\n\t\t\t\t\t\t\t\t\t\tname='displayOrder'\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('displayOrder');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetcategoryList?: any;\r\n\tcategoryList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t\tsetcategoryList(updateCategoryList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Switch,\r\n  Select,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Upload,\r\n  message,\r\n} from 'antd';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  LoadingOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from './MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Category Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n  displayOrder: '',\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  categoryList?: any;\r\n  setcategoryList?: any;\r\n  categoryDetailData?: any;\r\n  setcategoryDetailData?: any;\r\n}\r\n\r\nconst AddNewCategory = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  categoryList,\r\n  setcategoryList,\r\n  categoryDetailData,\r\n  setcategoryDetailData,\r\n}: Props) => {\r\n  const [addCategoryState, handleAddCategoryFetch] = useHandleFetch(\r\n    {},\r\n    'updateCategory'\r\n  );\r\n  const [\r\n    updateCategoryIconState,\r\n    handleUpdateCategoryIconFetch,\r\n  ] = useHandleFetch({}, 'categoryUpdateIcon');\r\n  const [\r\n    attachImageToItemMultipleState,\r\n    handleAttachImageToItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [\r\n    attachImageToItemSingleState,\r\n    handleAttachImageToItemSingleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [\r\n    detachImageFromItemMultipleState,\r\n    handleDetachImageFromItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n  const [visible, setvisible] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [selectedParentId, setselectedParentId] = useState('');\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n  const [imageFile, setImagefile] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('name', values.name.trim());\r\n    formData.append('description', values.description);\r\n    formData.append('image', JSON.stringify(imagesIds));\r\n    formData.append('cover', coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n    formData.append('parent', selectedParentId);\r\n    formData.append('icon', imageFile);\r\n    formData.append('displayOrder', values.displayOrder);\r\n\r\n    console.log('categoryDetailData', categoryDetailData);\r\n    console.log('imagesIds', imagesIds);\r\n\r\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n      const aboutToUpdatedImageIds = [];\r\n\r\n      if (imagesIds && imagesIds.length > 0) {\r\n        imagesIds.forEach((imageId) => {\r\n          if (categoryDetailData && categoryDetailData['image']) {\r\n            if (!categoryDetailData['image'].includes(imageId)) {\r\n              aboutToUpdatedImageIds.push(imageId);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n        await handleAttachImageToItemMultipleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              collection: 'category',\r\n              itemId: categoryDetailData.id,\r\n            },\r\n          },\r\n          body: {\r\n            image: aboutToUpdatedImageIds,\r\n          },\r\n        });\r\n      } else if (\r\n        aboutToUpdatedImageIds[0] &&\r\n        aboutToUpdatedImageIds.length < 1\r\n      ) {\r\n        await handleAttachImageToItemSingleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              imageId: aboutToUpdatedImageIds[0].id,\r\n              collection: 'category',\r\n              itemId: categoryDetailData.id,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    const addCategoryRes = await handleAddCategoryFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: categoryDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n        image: imagesIds,\r\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n        parent: selectedParentId,\r\n        icon: imageFile,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        displayOrder: values.displayOrder,\r\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\r\n          name: values.bnName.trim(),\r\n          description: values.bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addCategoryRes && addCategoryRes.status === 'ok') {\r\n      openSuccessNotification('Category Updated!');\r\n      setAddNewCategoryVisible(false);\r\n\r\n      // setcategoryList([{\r\n      // \tid: addCategoryRes['_id'] || '',\r\n      // \tkey: addCategoryRes['_id'] || '',\r\n      // \tname: addCategoryRes['name'] || '',\r\n      // \tdescription: addCategoryRes['description'] || '',\r\n      // \tcover: addCategoryRes['cover'] || '',\r\n      // \t// @ts-ignore\r\n      // \t...addCategoryRes\r\n      // },...categoryList]);\r\n\r\n      setcategoryDetailData({\r\n        ...categoryDetailData,\r\n        // @ts-ignore\r\n        ...addCategoryRes,\r\n      });\r\n\r\n      actions.resetForm();\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setselectedParentId('');\r\n      setisparentcategoryChecked(true);\r\n      setImageUrl('');\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n    \r\n      const images = categoryDetailData.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === categoryDetailData.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [categoryDetailData.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(categoryDetailData.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n          setmyImages(mahImages);\r\n          \r\n\r\n    }\r\n  }, [categoryDetailData]);\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'category',\r\n          itemId: categoryDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'category',\r\n          itemId: categoryDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n\r\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n      // if (prevItem) {\r\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n      //     setBrandList(updateBrandList);\r\n      // }\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const onSwitchChange = (checked: any) => {\r\n    setisparentcategoryChecked(checked);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleThumbnailImageDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myThumbnailImage &&\r\n      myThumbnailImage.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    if (newImages.length > 0) {\r\n      setmyThumbnailImage(newImages);\r\n    } else setmyThumbnailImage(false);\r\n  };\r\n\r\n  const onChangeSelect = (value) => {\r\n    setselectedParentId(value);\r\n  };\r\n\r\n  function getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n\r\n  function beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!');\r\n    }\r\n\r\n    getBase64(file, (imageUrl) => {\r\n      setImageUrl(imageUrl);\r\n      setImagefile(file);\r\n      const setNewIcon = async () => {\r\n        const formData = new FormData();\r\n        formData.append('icon', file);\r\n        // const addCategoryRes = await handleAddCategoryFetch({\r\n        // \tbody: formData,\r\n        // });\r\n        const res = await handleUpdateCategoryIconFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id: categoryDetailData.id,\r\n            },\r\n          },\r\n          body: formData,\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (res && res.status === 'ok') {\r\n          openSuccessNotification('Category Icon updated!');\r\n        } else {\r\n          openErrorNotification(\r\n            \"Couldn't update category icon, Something went wrong\"\r\n          );\r\n        }\r\n      };\r\n\r\n      setNewIcon();\r\n      setLoadingThumbnail(false);\r\n    });\r\n\r\n    return false;\r\n  }\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div className='ant-upload-text'>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n      const iconUrl = categoryDetailData.icon && categoryDetailData.icon;\r\n\r\n      setImageUrl(iconUrl);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n      const metaTags =\r\n        categoryDetailData.metaTags && categoryDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        categoryDetailData.bn &&\r\n        categoryDetailData.bn['metaTags'] &&\r\n        categoryDetailData.bn['metaTags'].split(',');\r\n\r\n\r\n      setTags(metaTags || []);\r\n      setBnTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  // console.log('addnewCategoryTags777', tags);\r\n  // console.log('categoryDetailData', categoryDetailData);\r\n  // console.log('shitThere', myImages);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...categoryDetailData,\r\n        ...(categoryDetailData &&\r\n          Object.keys(categoryDetailData).length > 0 && {\r\n            bnMetaTitle:\r\n              categoryDetailData['bn'] &&\r\n              categoryDetailData['bn'].metaTitle &&\r\n              categoryDetailData['bn'].metaTitle,\r\n            bnMetaDescription:\r\n              categoryDetailData['bn'] &&\r\n              categoryDetailData['bn'].metaDescription &&\r\n              categoryDetailData['bn'].metaDescription,\r\n            bnName:\r\n              categoryDetailData['bn'] &&\r\n              categoryDetailData['bn'].name &&\r\n              categoryDetailData['bn'].name,\r\n            bnDescription:\r\n              categoryDetailData['bn'] &&\r\n              categoryDetailData['bn'].description &&\r\n              categoryDetailData['bn'].description,\r\n          }),\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Edit Category'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name'\r\n              value={values.name}\r\n              placeHolder={'grocery,fashion'}\r\n              name='name'\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && addCategoryState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && addCategoryState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Name'\r\n              value={values.bnName}\r\n              placeHolder={'মুদিখানা,ফ্যাশন'}\r\n              name='bnName'\r\n              isError={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && addCategoryState.error['error']['bnName'])\r\n              }\r\n              errorString={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && addCategoryState.error['error']['bnName'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnName');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Description'\r\n              value={values.description}\r\n              placeholder={'This category...'}\r\n              name='description'\r\n              isError={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['description'])\r\n              }\r\n              errorString={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['description'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('description');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Description'\r\n              value={values.bnDescription}\r\n              placeholder={'এই ক্যাটাগড়ি...'}\r\n              name='bnDescription'\r\n              isError={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnDescription');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Display Order'\r\n              value={values.displayOrder}\r\n              placeHolder={'1,3,7'}\r\n              name='displayOrder'\r\n              type='number'\r\n              isError={\r\n                (touched.displayOrder && errors.displayOrder) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['displayOrder'])\r\n              }\r\n              errorString={\r\n                (touched.displayOrder && errors.displayOrder) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['displayOrder'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('displayOrder');\r\n              }}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '25px',\r\n              }}\r\n            ></div>\r\n\r\n            <div className='switchLabelContainer'>\r\n              <Switch\r\n                checked={isparentCategoryChecked}\r\n                defaultChecked\r\n                onChange={onSwitchChange}\r\n              />\r\n              <div className='switchLabelContainer-textContainer'>\r\n                <h5>Top level Category</h5>\r\n                <h5 className='switchLabelContainer-desc'>\r\n                  Disable to select a Parent Category\r\n                </h5>\r\n              </div>\r\n            </div>\r\n\r\n            {!isparentCategoryChecked && (\r\n              <>\r\n                <h3 className='inputFieldLabel'>Parent Category</h3>\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: 300 }}\r\n                  placeholder='Select a Parent Category'\r\n                  optionFilterProp='children'\r\n                  onChange={onChangeSelect}\r\n                  // onFocus={onFocus}\r\n                  // onBlur={onBlur}\r\n                  // onSearch={onSearch}\r\n                  filterOption={(input, option: any) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {categoryList.length > 0 &&\r\n                    categoryList.map((category) => {\r\n                      return (\r\n                        <Option value={category.id}>{category.name}</Option>\r\n                      );\r\n                    })}\r\n                </Select>\r\n              </>\r\n            )}\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            />\r\n\r\n            <div className='addproductSection-left-header'>\r\n              <h3 className='inputFieldLabel'>Icon </h3>\r\n              <Tooltip\r\n                placement='left'\r\n                title={'Add Icon image for this category'}\r\n              >\r\n                <a href='###'>\r\n                  <InfoCircleOutlined />\r\n                </a>\r\n              </Tooltip>\r\n            </div>\r\n\r\n            <Upload\r\n              style={{\r\n                borderRadius: '8px',\r\n              }}\r\n              name='avatar'\r\n              listType='picture-card'\r\n              className='avatar-uploader'\r\n              showUploadList={false}\r\n              beforeUpload={beforeUpload}\r\n              multiple={false}\r\n            >\r\n              {imageUrl ? (\r\n                <img src={imageUrl} alt='avatar' style={{ width: '100%' }} />\r\n              ) : (\r\n                uploadButton\r\n              )}\r\n            </Upload>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            />\r\n\r\n            <div\r\n              className='addproductSection-left-header'\r\n              style={{\r\n                marginBottom: '-5px',\r\n              }}\r\n            >\r\n              <h3 className='inputFieldLabel'>Images</h3>\r\n              {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n            </div>\r\n\r\n            <div className='aboutToUploadImagesContainer'>\r\n              {categoryDetailData &&\r\n                Object.keys(categoryDetailData).length > 0 && (\r\n                  <>\r\n                    {myImages &&\r\n                      // @ts-ignore\r\n                      myImages.length > 0 &&\r\n                      myImages.map((image, index) => {\r\n                        return (\r\n                          <div className='aboutToUploadImagesContainer__item'>\r\n                            <div\r\n                              className='aboutToUploadImagesContainer__item-imgContainer'\r\n                              onClick={() => {\r\n                                setCoverImageId(image.id);\r\n                                handleSetImageAsThumnail(image);\r\n                              }}\r\n                            >\r\n                              <img src={image.cover} alt={image.alt} />\r\n                            </div>\r\n\r\n                            <span\r\n                              onClick={() => {\r\n                                handleImagesDelete(image.id);\r\n                                handleDetachSingleImage(image.id);\r\n                              }}\r\n                              className='aboutToUploadImagesContainer__item-remove'\r\n                            >\r\n                              <CloseOutlined />\r\n                            </span>\r\n\r\n                            {coverImageId === image.id ? (\r\n                              <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                <CheckOutlined />\r\n                              </span>\r\n                            ) : (\r\n                              !coverImageId &&\r\n                              index === 0 && (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                  <CheckOutlined />\r\n                                </span>\r\n                              )\r\n                            )}\r\n                          </div>\r\n                        );\r\n                      })}\r\n\r\n                    <Tooltip title={'Attach images'}>\r\n                      <div\r\n                        onClick={() => {\r\n                          setvisible(true);\r\n                          setisModalOpenForImages(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'\r\n                      >\r\n                        {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                        <FileImageFilled />\r\n                        {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                          <PlusOutlined />\r\n                        </span>\r\n                      </div>\r\n                    </Tooltip>\r\n                  </>\r\n                )}\r\n            </div>\r\n\r\n            <Input\r\n              label='Meta title'\r\n              value={values.metaTitle}\r\n              placeHolder={'category...'}\r\n              name='metaTitle'\r\n              isError={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && addCategoryState.error['error']['metaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && addCategoryState.error['error']['metaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaTitle');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Meta title'\r\n              value={values.bnMetaTitle}\r\n              placeHolder={'ক্যাটাগড়ি...'}\r\n              name='bnMetaTitle'\r\n              isError={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnMetaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnMetaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaTitle');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Meta description'\r\n              value={values.metaDescription}\r\n              placeholder={'meta...'}\r\n              name='metaDescription'\r\n              isError={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['metaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['metaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaDescription');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Meta Description'\r\n              value={values.bnMetaDescription}\r\n              placeholder={'এইয় মেট...'}\r\n              name='bnMetaDescription'\r\n              isError={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnMetaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  addCategoryState.error['error']['bnMetaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaDescription');\r\n              }}\r\n            />\r\n\r\n            <h3 className='inputFieldLabel'>Meta Tags (grocery,fashion)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setTags}\r\n              tags={tags}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h3 className='inputFieldLabel'>BN Meta Tags (মুদিখানা,ফ্যাশন)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setBnTags}\r\n              tags={bnTags}\r\n            />\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisible}\r\n            visible={visible}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            setmyThumbnailImage={setmyThumbnailImage}\r\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n            isModalOpenForImages={isModalOpenForImages}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CategoryEdit from \"./CategoryEdit\";\r\nimport CategoryNewEdit from \"./CategoryNewEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({roles}: Props) => {\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const categoryId = params['id'];\r\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n    const [categoryDetail,setcategoryDetail] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(categoryDetailDataRes){\r\n                  // @ts-ignore\r\n                setcategoryDetail(categoryDetailDataRes)\r\n            }\r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryProducts = async () => {\r\n            await handleCategoryProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryProducts();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n    console.log('categoryProductsState', categoryProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n    const row = categoryDetailState.done && categoryDetail && categoryDetail['image'] ? getImagesInCollumn(categoryDetail['image']) : [];\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Category Detail\r\n                </h3>\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <CategoryNewEdit\r\n                            addNewCategoryVisible={categoryEditVisible}\r\n                            setAddNewCategoryVisible={setCategoryEditVisible}\r\n                            categoryDetailData={categoryDetail}\r\n                            setcategoryDetailData={setcategoryDetail}\r\n                        />\r\n\r\n\r\n                {isAccess('postCatalogue',roles) && (\r\n                            <Button\r\n                            onClick={() => setCategoryEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                    </Button>\r\n                 )}\r\n\r\n                        \r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={categoryDetailState.isLoading}>\r\n                {categoryDetailState.done && categoryDetail && !(Object.keys(categoryDetail).length > 0) && (\r\n                    <Empty description='No Category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                                <img src={categoryDetail['cover'] && categoryDetail['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {categoryDetail['name']}\r\n                                </h2>\r\n                                <h3>\r\n                                    {categoryDetail['description']}\r\n                                </h3>\r\n                                <h3>\r\n                                    Category type: <span>\r\n                                        {categoryDetail['type']}\r\n                                    </span>\r\n                                </h3>\r\n\r\n                                {categoryDetail['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {categoryDetail['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {categoryDetail['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img \r\n                                                            alt='..'\r\n                                                            src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['subCategory'] && categoryDetail['subCategory'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Child Categories\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='smallcatCardContainer'>\r\n                                    {categoryDetail['subCategory'].map(subCat => {\r\n                                        return (\r\n                                            <div\r\n                                                onClick={() => history.push(`/admin/category/${subCat.id}`)}\r\n                                                className='smallcatCardContainer__card'>\r\n                                                <div className='smallcatCardContainer__card-coverbox'>\r\n                                                    <img src={subCat.cover} alt=\"\" />\r\n                                                </div>\r\n                                                <div className='smallcatCardContainer__card-info'>\r\n                                                    <h3>\r\n                                                        {subCat.name}\r\n                                                    </h3>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists in this category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n\r\n                            size='small'\r\n                            dataSource={categoryProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                                // go to product detail\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n<Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    roles: state.globalState,\r\n  })\r\n  \r\n  // @ts-ignore\r\n  export default connect(mapStateToProps, null)(NewBrandDetail);\r\n  \r\n  \r\n  \r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\ninterface Props {\r\n  label?: string;\r\n  type?: string;\r\n  defaultValue?: string;\r\n  value?: string;\r\n  onChange?: any;\r\n  disabled?: boolean;\r\n  isError?: boolean;\r\n  errorString?: string;\r\n  name?: string;\r\n  size?: any;\r\n  min?: any;\r\n}\r\n\r\nconst Demo = ({\r\n  min,\r\n  label,\r\n  type,\r\n  defaultValue,\r\n  value,\r\n  onChange,\r\n  disabled,\r\n  isError,\r\n  errorString,\r\n  name,\r\n  size = 'middle',\r\n}: Props) => {\r\n  return (\r\n    <>\r\n      {label && <h3 className='inputFieldLabel-small'>{label}</h3>}\r\n\r\n      <Form.Item\r\n        validateStatus={isError ? 'error' : ''}\r\n        // hasFeedback validateStatus=\"success\"\r\n        help={errorString}\r\n        // rules={[{ required: true }]}\r\n      >\r\n        <Input\r\n          min={min}\r\n          type={type}\r\n          size={size}\r\n          allowClear\r\n          name={name}\r\n          disabled={disabled}\r\n          value={value}\r\n          onChange={onChange}\r\n          className='inputclassName-small'\r\n        />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Succeed',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <ExclamationCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nexport {\r\n    openSuccessNotification,\r\n    openErrorNotification\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('selectedTags', selectedTags)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Select, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n\tsetBrandId?: any;\r\n\tbrandId?: any;\r\n\tproductDetailState?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId, brandId, productDetailState }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [selectedBrandId, setSelectedBrandId] = useState('');\r\n\tconst [brandState, handleTagListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\tfunction onChange(value) {\r\n\t\tsetSelectedBrandId(value);\r\n\t\tsetBrandId(value);\r\n\t\t// console.log(`selected ${value}`);\r\n\t}\r\n\r\n\tfunction onBlur() {\r\n\t\t// console.log('blur');\r\n\t}\r\n\r\n\tfunction onFocus() {\r\n\t\t// console.log('focus');\r\n\t}\r\n\r\n\tfunction onSearch(val) {\r\n\t\t// console.log('search:', val);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setBrands = async () => {\r\n\t\t\tconst brandListRes = await handleTagListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (brandListRes && brandListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst brandOptions = brandListRes.map((brand) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: brand.id,\r\n\t\t\t\t\t\tname: brand.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(brandOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetBrands();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div></div>\r\n\r\n\t\t\t{brandState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t{brandState.done && !(brandState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No Brand found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{brandState.done && brandState.data && brandState.data.length > 0 && options.length > 0 && (\r\n\r\n\t\t\t\t<Select\r\n\t\t\t\t\tshowSearch\r\n\t\t\t\t\tstyle={{ width: '210px', borderRadius: '6px' }}\r\n\t\t\t\t\tplaceholder='Select a Brand'\r\n\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tonSearch={onSearch}\r\n\t\t\t\t\tdefaultValue={brandId}\r\n\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t>\r\n\t\t\t\t\t{brandState.done &&\r\n\t\t\t\t\t\tbrandState.data.length > 0 &&\r\n\t\t\t\t\t\toptions.map((option) => {\r\n\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Select>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{/* \r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n\tcategoryOptions?: any;\r\n\tsetCategoryOptions?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds, categoryOptions, setCategoryOptions }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categorySelectist');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tconst checkedIds = checkedKeys.checked || [];\r\n\t\tsetcategoryIds(checkedIds);\r\n\t\tsetCategoryOptions(checkedIds);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...cat\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option && option.title.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tcheckedKeys={categoryOptions}\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t{/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Spin  } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: '',\r\n    bnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n    productDetailData?:any; \r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList, productDetailData }: Props) => {\r\n\r\n  \r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [productList,setProductList] = useState([]);\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('2');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n    const [productIds,setProductIds] = useState([]); \r\n\r\n\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'updateBundle');\r\n\r\n    useEffect(() => {\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        console.log('productList',productList);\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n    \r\n            if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n                const aboutToUpdatedImageIds = []; \r\n    \r\n                if(imagesIds && imagesIds.length > 0){\r\n                    imagesIds.forEach(imageId => {\r\n                        if(productDetailData && productDetailData['image']){\r\n                            if(!productDetailData['image'].includes(imageId)){\r\n                                aboutToUpdatedImageIds.push(imageId)\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n    \r\n          \r\n                if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                    await handleAttachImageToItemMultipleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                collection: 'product',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        },\r\n                        body: {\r\n                            image: aboutToUpdatedImageIds\r\n                        }\r\n                    });\r\n                }\r\n                else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                    await handleAttachImageToItemSingleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                imageId: aboutToUpdatedImageIds[0].id,\r\n                                collection: 'product',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        \r\n            \r\n\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products,\r\n\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n\r\n                // startDate, endDate,\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Updated');\r\n  \r\n\r\n            setAddNewCategoryVisible(false)\r\n\r\n\r\n            const positionInAttribute = () => {\r\n\t\t\t\treturn bundleList.map(item => item.id).indexOf(productDetailData.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, bundleList[index], { ...productDetailData, ...addProductRes });\r\n\t\t\tconst updateProductList = [...bundleList.slice(0, index), updatedItem, ...bundleList.slice(index + 1)];\r\n            setBundleList(updateProductList);\r\n            \r\n\r\n\r\n\r\n\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(productDetailState['data'] && productDetailState['data']['products'] && productDetailState['data']['products'].length > 0){\r\n            const productIds = productDetailState['data']['products'].map(item => {\r\n              return {\r\n                ...item,\r\n                id: item._id,\r\n              }\r\n            }); \r\n            setProductIds(productIds); \r\n            const productList = productDetailState['data'].products.map(item => {\r\n                return {\r\n                    _id: item._id,\r\n                    variation: item.variation,\r\n                    quantity: item.quantity,\r\n                    totalPrice: item.totalPrice \r\n                }\r\n            }); \r\n           setProductList(productList); \r\n\r\n        }; \r\n        \r\n        console.log(\"productDetailState['data']\",productDetailState['data']);\r\n    },[productDetailState['done']])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0 && productList) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            // const categoryIds = productDetailData.category.map(item => item.id);\r\n\r\n            const categoryIds = productDetailData.category;\r\n            setCategoryOptions(categoryIds);\r\n            setcategoryIds(categoryIds); \r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n        }\r\n\r\n        if (productDetailData && productDetailData.anotherPrice && productDetailData.anotherPrice) {\r\n            setPrice(productDetailData.anotherPrice); \r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data.metaTags){\r\n            const metaTags = productDetailState.data.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \r\n            setMetaTags(metaTags)\r\n            setBnMetaTags(bnMetaTags)\r\n        }\r\n\r\n    },[productDetailState['done']])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues,\r\n                    ...{\r\n                    ...productDetailData,\r\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\r\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\r\n                        bnName: productDetailState['data']['bn'].name,\r\n                        metaUnit: productDetailState['data']['bn'].unit,\r\n                        bnDescription: productDetailState['data']['bn'].description,\r\n                      }),\r\n                } }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information *\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n                                    \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price *\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={startDate}\r\n                                                        label='Start Date'\r\n                                                        onChange={handleStartDataChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={endDate}\r\n                                                        label='End Date'\r\n                                                        onChange={handleEndDataChange} />\r\n\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    {/* <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                <div className='addProductGridContainer__item-header'>\r\n                                    <h3>\r\n                                        Image\r\n                                </h3>\r\n\r\n                                    <Tooltip\r\n                                        placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                        <a href='###'>\r\n                                            <InfoCircleOutlined />\r\n                                        </a>\r\n                                    </Tooltip>\r\n</div>\r\n\r\n<div\r\n    style={{\r\n        padding: \"10px\"\r\n    }}\r\n    className='aboutToUploadImagesContainer'>\r\n    {productDetailState.isLoading && (\r\n        <div style={{\r\n            padding: '20px 0'\r\n        }}>\r\n            <Spin />\r\n        </div>\r\n    )}\r\n    {productDetailState.done && (\r\n        <>\r\n            {myImages &&\r\n                // @ts-ignore\r\n                myImages.length > 0 && myImages.map((image, index) => {\r\n                    return (\r\n                        <div className='aboutToUploadImagesContainer__item'>\r\n                            <div\r\n                                className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                onClick={() => {\r\n                                    setCoverImageId(image.id);\r\n                                    handleSetImageAsThumnail(image);\r\n                                }}\r\n                            >\r\n                                <img src={image.cover} alt={image.alt} />\r\n                            </div>\r\n\r\n                            <span\r\n                                onClick={() => {\r\n                                    handleImagesDelete(image.id)\r\n                                    handleDetachSingleImage(image.id)\r\n                                }\r\n\r\n                                }\r\n                                className='aboutToUploadImagesContainer__item-remove'>\r\n                                <CloseOutlined />\r\n                            </span>\r\n\r\n\r\n                            {coverImageId === image.id ? (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                </span>\r\n                            ) : !coverImageId && index === 0 && (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                </span>\r\n                            )}\r\n\r\n\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n\r\n            <Tooltip\r\n                title={'Attach images'}>\r\n\r\n                <div\r\n                    onClick={() => {\r\n                        setvisible(true);\r\n                        setisModalOpenForImages(true);\r\n                        setisModalOpenForThumbnail(false);\r\n                    }}\r\n                    className='aboutToUploadImagesContainer__uploadItem'>\r\n                    {/* <FileAddOutlined />\r\n            <FileImageTwoTone />\r\n            <FileImageOutlined /> */}\r\n                    <FileImageFilled />\r\n                    {/* <h5>\r\n             Select From Library\r\n    <     /h5> */}\r\n                    <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                        <PlusOutlined />\r\n                    </span>\r\n                </div>\r\n            </Tooltip>\r\n        </>\r\n    )}\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n<div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n    Meta Data\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                \r\n<Input\r\nlabel='Meta title'\r\nvalue={values.metaTitle}\r\nplaceHolder={'category...'}\r\nname='metaTitle'\r\nisError={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\nerrorString={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaTitle')\r\n}}\r\n/>\r\n\r\n<Input\r\nlabel='BN Meta title'\r\nvalue={values.bnMetaTitle}\r\nplaceHolder={'ক্যাটাগড়ি...'}\r\nname='bnMetaTitle'\r\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaTitle');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='Meta description'\r\nvalue={values.metaDescription}\r\nplaceholder={'meta...'}\r\nname='metaDescription'\r\nisError={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\nerrorString={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaDescription');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='BN Meta Description'\r\nvalue={values.bnMetaDescription}\r\nplaceholder={'এইয় মেট...'}\r\nname='bnMetaDescription'\r\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaDescription');\r\n}}\r\n/>\r\n\r\n<h3 className='inputFieldLabel'>\r\nMeta Tags (grocery,fashion)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n<div style={{\r\nmarginTop:'15px'\r\n}}></div>\r\n\r\n<h3 className='inputFieldLabel'>\r\nBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setBnMetaTags}\r\ntags={bnMetaTags}\r\n/>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories *\r\n\t\t\t                                \t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n    const [isProductIdsfirstTime,setProductIdsfirstTime] = useState(false); \r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        sortItem: 'added',\r\n                        sortOrderValue: '-1'\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productIds && productIds.length > 0 && !isProductIdsfirstTime){\r\n            const selectItems = productIds.map((tag) => {\r\n                return tag.id\r\n            });\r\n\r\n            setselectedOptions(selectItems);\r\n            // setoptions(tagOptions);\r\n        }; \r\n\r\n    },[productIds])\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n        console.log('selectItems',selectItems); \r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import lib \r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    setProductList?: any;\r\n    productList?: any;\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productList,\r\n    setProductList,\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    console.log('productDetailStateByOrder',productDetailState); \r\n    \r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const positionInAttribute = () => {\r\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\r\n    //     }\r\n\r\n    //     const index = positionInAttribute();\r\n\r\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n    //     setProductList(updateProductList);\r\n\r\n    // }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateProductList = productList.filter(item => item._id !== productId);\r\n        setProductList(updateProductList);\r\n    }\r\n\r\n\r\n    const handleChangeQuantity = async (value) => {\r\n        if (value === 'minus') {\r\n            if (quantity === 1) {\r\n                return;\r\n            }\r\n\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList);\r\n\r\n\r\n        } else {\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList)\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const convertAttributeValuesToStringValue = (attribute) => {\r\n        const value = [];\r\n\r\n        let attributeValues = Object.values(attribute);\r\n        attributeValues.forEach(attributeValue => {\r\n            // @ts-ignore\r\n            value.push(attributeValue)\r\n        })\r\n\r\n        return value.join(',');\r\n    };\r\n\r\n\r\n\r\n\r\n    const getPricingOptions = (pricing) => {\r\n        if (pricing && pricing.length > 0) {\r\n            const pricingOptions = [];\r\n\r\n            pricing.forEach(pricingItem => {\r\n\r\n                if (Object.values(pricingItem.attribute).length > 0 && pricingItem._id) {\r\n                    let pricingOption = {\r\n                        value: pricingItem._id,\r\n                        label: `${convertAttributeValuesToStringValue(pricingItem.attribute) || ''}`\r\n                    }\r\n                    // @ts-ignore\r\n                    pricingOptions.push(pricingOption)\r\n                }\r\n\r\n            })\r\n\r\n            return pricingOptions;\r\n        }\r\n        else return false\r\n    };\r\n\r\n    const pricingOptions = item && Object.keys(item).length > 0 ? getPricingOptions(item.pricing) : [];\r\n\r\n\r\n    console.log('pricingOptions', pricingOptions);\r\n\r\n    const handleAttributeChange = (tagId) => {\r\n        setSelectedVariationId(tagId);\r\n\r\n        const positionInAttribute = () => {\r\n            return productList.map(item => item._id).indexOf(productId);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, productList[index], { ...item, quantity: 1 });\r\n        const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n        setProductList(updateAttributeList);\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getPriceByVariationId = (id) => {\r\n            const pricing = item && Object.keys(item).length > 0 ? item.pricing : false;\r\n            if (pricing) {\r\n                const priceItem = pricing.find(pricingItem => pricingItem._id === id);\r\n                console.log('priceItem', id);\r\n\r\n                if (priceItem && priceItem.price.regular) {\r\n                    return priceItem.price.offer\r\n                        && parseInt(priceItem.price.offer)\r\n                        ? priceItem.price.offer : priceItem.price.regular\r\n                }\r\n                else return false;\r\n            }\r\n        }\r\n\r\n        if (selectedVariationId) {\r\n            const price = getPriceByVariationId(selectedVariationId);\r\n            setModifiedPrice(price);\r\n        }\r\n\r\n    }, [selectedVariationId]);\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            {item && Object.keys(item).length > 0 && (\r\n                <div className='cart-item' key={''}>\r\n                    <div className='cart-item-quantityCounter'>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('plus');\r\n                            }}\r\n                            className='fa fa-chevron-up'\r\n\r\n                        ></i>\r\n                        <p className='item-amount'>{quantity}</p>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('minus');\r\n                            }}\r\n                            className='fa fa-chevron-down'\r\n\r\n                        ></i>\r\n                    </div>\r\n\r\n\r\n                    <img\r\n\r\n                        src={item['cover'] && item['cover']}\r\n                        alt='Img'\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    />\r\n                    <div className='cart-item-info'>\r\n                        <h4\r\n\r\n                        >\r\n                            {item['name']}\r\n                        </h4>\r\n                        <h5\r\n                        >\r\n                            {modifiedPrice || item['price']}\r\n                        </h5>\r\n\r\n\r\n                        {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))}\r\n\r\n                        {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                    </div>\r\n                    {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs  } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: '',\r\n    bnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList }: Props) => {\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addBundle');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        console.log('productList',productList);\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products,\r\n                // startDate, endDate,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Created');\r\n            console.log('addProductBundleRes',addProductRes);\r\n\r\n            setBundleList([{\r\n                id: addProductRes['_id'] || '',\r\n                key: addProductRes['_id'] || '',\r\n                name: addProductRes['name'] || '',\r\n                description: addProductRes['description'] || '',\r\n                // @ts-ignore\r\n                ...addProductRes\r\n            },...bundleList])\r\n            setAddNewCategoryVisible(false)\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n    console.log('productlistbundle',productList)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0 && productList) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    const handleStartDataChange = (date, dateString) => {\r\n        setStartDate(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleEndDataChange = (date, dateString) => {\r\n        setEndDate(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information *\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n                                    \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price *\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={startDate}\r\n                                                        label='Start Date'\r\n                                                        onChange={handleStartDataChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={endDate}\r\n                                                        label='End Date'\r\n                                                        onChange={handleEndDataChange} />\r\n\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n                                            </h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                            <div className='aboutToUploadImagesContainer'>\r\n                                                {myImages &&\r\n                                                    // @ts-ignore\r\n                                                    myImages.length > 0 && myImages.map((image, index) => {\r\n                                                        return (\r\n                                                            <div className='aboutToUploadImagesContainer__item'>\r\n                                                                <div\r\n                                                                    className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                    onClick={() => setCoverImageId(image.id)}\r\n                                                                >\r\n                                                                    <img src={image.cover} alt={image.alt} />\r\n                                                                </div>\r\n\r\n                                                                <span\r\n                                                                    onClick={() => handleImagesDelete(image.id)}\r\n                                                                    className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                    <CloseOutlined />\r\n                                                                </span>\r\n\r\n\r\n                                                                {coverImageId === image.id ? (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                ) : !coverImageId && index === 0 && (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })}\r\n\r\n\r\n                                                <Tooltip\r\n                                                    title={'Attach images'}>\r\n\r\n                                                    <div\r\n                                                        onClick={() => {\r\n                                                            setvisible(true);\r\n                                                            setisModalOpenForImages(true);\r\n                                                            setisModalOpenForThumbnail(false);\r\n                                                        }}\r\n                                                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                        {/* <FileAddOutlined />\r\n                                                            <FileImageTwoTone />\r\n                                                            <FileImageOutlined /> */}\r\n                                                        <FileImageFilled />\r\n                                                        {/* <h5>\r\n                                                                Select From Library\r\n                                                        <     /h5> */}\r\n                                                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                            <PlusOutlined />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n    Meta Data\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                \r\n<Input\r\nlabel='Meta title'\r\nvalue={values.metaTitle}\r\nplaceHolder={'category...'}\r\nname='metaTitle'\r\nisError={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\nerrorString={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaTitle')\r\n}}\r\n/>\r\n\r\n<Input\r\nlabel='BN Meta title'\r\nvalue={values.bnMetaTitle}\r\nplaceHolder={'ক্যাটাগড়ি...'}\r\nname='bnMetaTitle'\r\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaTitle');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='Meta description'\r\nvalue={values.metaDescription}\r\nplaceholder={'meta...'}\r\nname='metaDescription'\r\nisError={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\nerrorString={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaDescription');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='BN Meta Description'\r\nvalue={values.bnMetaDescription}\r\nplaceholder={'এইয় মেট...'}\r\nname='bnMetaDescription'\r\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaDescription');\r\n}}\r\n/>\r\n\r\n<h3 className='inputFieldLabel'>\r\nMeta Tags (grocery,fashion)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n<div style={{\r\nmarginTop:'15px'\r\n}}></div>\r\n\r\n<h3 className='inputFieldLabel'>\r\nBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setBnMetaTags}\r\ntags={bnMetaTags}\r\n/>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories *\r\n\t\t\t                                \t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleQuickEdit from \"./ProductBundleQuickEdit\"\r\nimport AddNewProductBundle from \"./AddNewProductBundle\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteBundle');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Bundle');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Price\"\r\n                    dataIndex=\"price\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Product\"\r\n                    dataIndex=\"productCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                {/* <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                <Moment >\r\n                                    {text}\r\n                                </Moment>\r\n\r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                /> */}\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <ProductBundleQuickEdit\r\n             productList={data}\r\n             setProductList={setTagList}\r\n             setAddNewCategoryVisible={setvisible}\r\n             addNewCategoryVisible={visible}\r\n             productDetailData={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'bundleList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({\r\n                urlOptions:{\r\n                    params: {\r\n                      sortItem: 'added',\r\n                      sortOrderValue: '-1',\r\n                      productType: 'bundle'\r\n                    }\r\n                    }\r\n            });\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Bundles\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search bundles..\"\r\n                            onChange={e => handleSearch(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Bundle found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewProductBundle\r\n                productList={tagList}\r\n                setProductList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Spin  } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: '',\r\n    bnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productDetailData?:any; \r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productDetailData }: Props) => {\r\n\r\n  \r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [productList,setProductList] = useState([]);\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('2');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n    const [productIds,setProductIds] = useState([]); \r\n\r\n\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'updateBundle');\r\n\r\n    useEffect(() => {\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        console.log('productList',productList);\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n    \r\n            if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n                const aboutToUpdatedImageIds = []; \r\n    \r\n                if(imagesIds && imagesIds.length > 0){\r\n                    imagesIds.forEach(imageId => {\r\n                        if(productDetailData && productDetailData['image']){\r\n                            if(!productDetailData['image'].includes(imageId)){\r\n                                aboutToUpdatedImageIds.push(imageId)\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n    \r\n          \r\n                if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                    await handleAttachImageToItemMultipleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                collection: 'product',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        },\r\n                        body: {\r\n                            image: aboutToUpdatedImageIds\r\n                        }\r\n                    });\r\n                }\r\n                else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                    await handleAttachImageToItemSingleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                imageId: aboutToUpdatedImageIds[0].id,\r\n                                collection: 'product',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        \r\n            \r\n\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products,\r\n\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n                \r\n                // startDate, endDate,\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Updated');\r\n  \r\n\r\n            setAddNewCategoryVisible(false)\r\n\r\n\r\n            // updat bundle detail data\r\n\r\n\r\n\r\n\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(productDetailState['data'] && productDetailState['data']['products'] && productDetailState['data']['products'].length > 0){\r\n            const productIds = productDetailState['data']['products'].map(item => {\r\n              return {\r\n                ...item,\r\n                id: item._id,\r\n              }\r\n            }); \r\n            setProductIds(productIds); \r\n            const productList = productDetailState['data'].products.map(item => {\r\n                return {\r\n                    _id: item._id,\r\n                    variation: item.variation,\r\n                    quantity: item.quantity,\r\n                    totalPrice: item.totalPrice \r\n                }\r\n            }); \r\n           setProductList(productList); \r\n\r\n        }; \r\n        \r\n        console.log(\"productDetailState['data']\",productDetailState['data']);\r\n    },[productDetailState['done']])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0 && productList) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            // const categoryIds = productDetailData.category.map(item => item.id);\r\n\r\n            const categoryIds = productDetailData.category;\r\n            setCategoryOptions(categoryIds);\r\n            setcategoryIds(categoryIds); \r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n        }\r\n\r\n        if (productDetailData && productDetailData.anotherPrice && productDetailData.anotherPrice) {\r\n            setPrice(productDetailData.anotherPrice); \r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data.metaTags){\r\n            const metaTags = productDetailState.data.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \r\n            setMetaTags(metaTags)\r\n            setBnMetaTags(bnMetaTags)\r\n        }\r\n\r\n    },[productDetailState['done']])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues,\r\n                    ...{\r\n                    ...productDetailData,\r\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\r\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\r\n                        bnName: productDetailState['data']['bn'].name,\r\n                        metaUnit: productDetailState['data']['bn'].unit,\r\n                        bnDescription: productDetailState['data']['bn'].description,\r\n                      }),\r\n                } }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information *\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n                                    \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price *\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={startDate}\r\n                                                        label='Start Date'\r\n                                                        onChange={handleStartDataChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={endDate}\r\n                                                        label='End Date'\r\n                                                        onChange={handleEndDataChange} />\r\n\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    {/* <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div> */}\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                <div className='addProductGridContainer__item-header'>\r\n                                    <h3>\r\n                                        Image\r\n                                </h3>\r\n\r\n                                    <Tooltip\r\n                                        placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                        <a href='###'>\r\n                                            <InfoCircleOutlined />\r\n                                        </a>\r\n                                    </Tooltip>\r\n</div>\r\n\r\n<div\r\n    style={{\r\n        padding: \"10px\"\r\n    }}\r\n    className='aboutToUploadImagesContainer'>\r\n    {productDetailState.isLoading && (\r\n        <div style={{\r\n            padding: '20px 0'\r\n        }}>\r\n            <Spin />\r\n        </div>\r\n    )}\r\n    {productDetailState.done && (\r\n        <>\r\n            {myImages &&\r\n                // @ts-ignore\r\n                myImages.length > 0 && myImages.map((image, index) => {\r\n                    return (\r\n                        <div className='aboutToUploadImagesContainer__item'>\r\n                            <div\r\n                                className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                onClick={() => {\r\n                                    setCoverImageId(image.id);\r\n                                    handleSetImageAsThumnail(image);\r\n                                }}\r\n                            >\r\n                                <img src={image.cover} alt={image.alt} />\r\n                            </div>\r\n\r\n                            <span\r\n                                onClick={() => {\r\n                                    handleImagesDelete(image.id)\r\n                                    handleDetachSingleImage(image.id)\r\n                                }\r\n\r\n                                }\r\n                                className='aboutToUploadImagesContainer__item-remove'>\r\n                                <CloseOutlined />\r\n                            </span>\r\n\r\n\r\n                            {coverImageId === image.id ? (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                </span>\r\n                            ) : !coverImageId && index === 0 && (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                </span>\r\n                            )}\r\n\r\n\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n\r\n            <Tooltip\r\n                title={'Attach images'}>\r\n\r\n                <div\r\n                    onClick={() => {\r\n                        setvisible(true);\r\n                        setisModalOpenForImages(true);\r\n                        setisModalOpenForThumbnail(false);\r\n                    }}\r\n                    className='aboutToUploadImagesContainer__uploadItem'>\r\n                    {/* <FileAddOutlined />\r\n            <FileImageTwoTone />\r\n            <FileImageOutlined /> */}\r\n                    <FileImageFilled />\r\n                    {/* <h5>\r\n             Select From Library\r\n    <     /h5> */}\r\n                    <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                        <PlusOutlined />\r\n                    </span>\r\n                </div>\r\n            </Tooltip>\r\n        </>\r\n    )}\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n    Meta Data\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                \r\n<Input\r\nlabel='Meta title'\r\nvalue={values.metaTitle}\r\nplaceHolder={'category...'}\r\nname='metaTitle'\r\nisError={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\nerrorString={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaTitle')\r\n}}\r\n/>\r\n\r\n<Input\r\nlabel='BN Meta title'\r\nvalue={values.bnMetaTitle}\r\nplaceHolder={'ক্যাটাগড়ি...'}\r\nname='bnMetaTitle'\r\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaTitle');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='Meta description'\r\nvalue={values.metaDescription}\r\nplaceholder={'meta...'}\r\nname='metaDescription'\r\nisError={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\nerrorString={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaDescription');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='BN Meta Description'\r\nvalue={values.bnMetaDescription}\r\nplaceholder={'এইয় মেট...'}\r\nname='bnMetaDescription'\r\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaDescription');\r\n}}\r\n/>\r\n\r\n<h3 className='inputFieldLabel'>\r\nMeta Tags (grocery,fashion)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n<div style={{\r\nmarginTop:'15px'\r\n}}></div>\r\n\r\n<h3 className='inputFieldLabel'>\r\nBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setBnMetaTags}\r\ntags={bnMetaTags}\r\n/>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories *\r\n\t\t\t                                \t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n}\r\n\r\n\r\n\r\nconst CouponProducts = ({\r\n    productId,\r\n    quantity\r\n}: Props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n\r\n    useEffect(() => {\r\n        const getAndSetProduct = async () => {\r\n            await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n        };\r\n        getAndSetProduct();\r\n    }, []);\r\n\r\n\r\n    console.log('productDetailStatecoupon', productDetailState)\r\n\r\n\r\n    return (\r\n        <Skeleton\r\n            paragraph={{ rows: 2 }}\r\n            loading={productDetailState.isLoading}>\r\n            {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                <>\r\n                    <div className='couponDetailProductItem'>\r\n                        <div\r\n                            onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            className='couponDetailProductItem__cover'>\r\n                            <img src={productDetailState.data.cover && productDetailState.data.cover['cover']} alt=\"\" />\r\n                        </div>\r\n                        <div className='couponDetailProductItem__info'>\r\n                            <h2\r\n                                onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            >\r\n                                {productDetailState.data.name}\r\n                            </h2>\r\n                            <h3>\r\n                                {productDetailState.data.price}\r\n                            </h3>\r\n                            <h3>\r\n                                Quantity: {quantity}\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n        </Skeleton>\r\n    )\r\n}\r\n\r\n\r\nexport default CouponProducts; ","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n// import moment\r\nimport Moment from \"react-moment\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleEdit from \"./ProductBundleEdit\";\r\nimport CouponProducts from \"../coupon/CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n\r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\r\n\r\n\r\n    console.log('bundleDetail', productDetailState);\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Bundle Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                     <ProductBundleEdit\r\n                          setAddNewCategoryVisible={setProductEditVisible}\r\n                         addNewCategoryVisible={productEditVisible}\r\n                            productDetailData={productDetailState.data}\r\n\r\n                        /> \r\n                         <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button> \r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\r\n                    <Empty description='No Bundle Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailState.data['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailState.data['price']}\r\n                                </h4>\r\n\r\n                                {productDetailState.data['description'] && (\r\n                                    <h3>\r\n                                    {productDetailState.data['description']}\r\n                                    </h3>\r\n                                )}\r\n                              \r\n\r\n                                {/* {productDetailState.data['startDate'] && (\r\n                                    <h3>\r\n                                        START DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['startDate']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                {productDetailState.data['endDate'] && (\r\n                                    <h3>\r\n                                        END DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['endDate']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )} */}\r\n\r\n\r\n\r\n                                {productDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailState.data['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailState.data['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n\r\n                        \r\n\r\n\r\n                    {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data['products'] && (\r\n                            <div className='brandDetailContainer__heading'>\r\n                                <h3>\r\n                                    Products\r\n                       </h3>\r\n                            </div>\r\n                        )\r\n                        }\r\n\r\n\r\n                        <div className='brandDetailContainer__body'>\r\n                            {productDetailState.done && productDetailState.data && productDetailState.data['products'] && !(productDetailState.data['products'].length > 0) && (\r\n                                <div style={{\r\n                                    marginTop: '100px'\r\n                                }}>\r\n                                    <Empty description='No Products exists for this Bundle' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                </div>\r\n                            )}\r\n\r\n                            {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                                <>\r\n                                    {productDetailState.data['products'] && productDetailState.data['products'].length > 0 &&\r\n                                        productDetailState.data['products'].map(product => {\r\n                                            return (\r\n                                                <CouponProducts\r\n                                                    quantity={product.quantity}\r\n                                                    productId={product['_id']} />\r\n                                            )\r\n                                        })}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'addBrand');\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\r\n\tconsole.log('brandImages',myImages);\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleUpdateBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: tags.join(','),\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([{\r\n\t\t\t\tid: addBrandRes['_id'] || '',\r\n\t\t\t\tkey: addBrandRes['_id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\tcover: addBrandRes['cover'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t},...brandList]); \r\n\t\t\t\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\t// console.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Brand\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'microsoft,apple'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'প্রান,নোকিয়া'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tplaceholder={'This brand...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ব্র্যান্ড...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\t\t!myImages || \r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t(myImages && !(myImages && myImages.length > 0)) ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : \"\"}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={false}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Spin,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Brand Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n};\r\n\r\ninterface Props {\r\n  brandDetailData?: any;\r\n  brandEditVisible?: any;\r\n  setBrandEditVisible?: any;\r\n  brandList?: any;\r\n  setBrandList?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  brandDetailData,\r\n  brandEditVisible,\r\n  setBrandEditVisible,\r\n  brandList,\r\n  setBrandList,\r\n}: Props) => {\r\n  const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch(\r\n    {},\r\n    'updateBrand'\r\n  );\r\n  const [brandDetailState, handleBrandDetailFetch] = useHandleFetch(\r\n    {},\r\n    'brandDetail'\r\n  );\r\n\r\n  const [\r\n    attachImageToItemMultipleState,\r\n    handleAttachImageToItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [\r\n    attachImageToItemSingleState,\r\n    handleAttachImageToItemSingleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [\r\n    detachImageFromItemMultipleState,\r\n    handleDetachImageFromItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n  const [myImages, setmyImages]: any = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const brandDetailRes = await handleBrandDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: brandDetailData.id,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [brandDetailData]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      brandDetailState.data &&\r\n      Object.keys(brandDetailState.data).length > 0\r\n    ) {\r\n      const images = brandDetailState.data.image;\r\n      if (images && images.length > 0) {\r\n        setmyImages(images);\r\n        setMyGoddamnImages(images);\r\n      }\r\n\r\n      if (brandDetailState.data.cover && brandDetailState.data.cover['id']) {\r\n        // @ts-ignore\r\n        setmyImages([brandDetailState.data.cover]);\r\n        setCoverImageId(brandDetailState.data.cover['id']);\r\n      }\r\n    }\r\n  }, [brandDetailState.data]);\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'brand',\r\n          itemId: brandDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'brand',\r\n          itemId: brandDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n\r\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n      // if (prevItem) {\r\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n      //     setBrandList(updateBrandList);\r\n      // }\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    console.log('myReadyToGoImages', myImages);\r\n\r\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n      // @ts-ignore\r\n      const images =\r\n        myImages && myImages.length > 0 ? myImages.map((item) => item.id) : [];\r\n\r\n      if (images[0] && images.length > 1) {\r\n        await handleAttachImageToItemMultipleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              collection: 'brand',\r\n              itemId: brandDetailData.id,\r\n            },\r\n          },\r\n          body: {\r\n            image: images,\r\n          },\r\n        });\r\n      } else if (images[0] && images.length < 1) {\r\n        await handleAttachImageToItemSingleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              imageId: images[0].id,\r\n              collection: 'brand',\r\n              itemId: brandDetailData.id,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    const updateBrandRes = await handleUpdateBrandFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: brandDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateBrandRes && updateBrandRes.status === 'ok') {\r\n      console.log('updateBrandRes', updateBrandRes);\r\n\r\n      setBrandList([\r\n        {\r\n          ...brandDetailData,\r\n          id: updateBrandRes['id'] || '',\r\n          key: updateBrandRes['id'] || '',\r\n          name: updateBrandRes['name'] || '',\r\n          description: updateBrandRes['description'] || '',\r\n          // @ts-ignore\r\n          ...updateBrandRes,\r\n        },\r\n        ...brandList,\r\n      ]);\r\n\r\n      openSuccessNotification('Brand Updated!');\r\n      setBrandEditVisible(false);\r\n\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(productRecord.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n      // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n      // console.log('updateBrandList', updatedItem)\r\n\r\n      // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n      // setBrandList(updateBrandList);\r\n\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const onSwitchChange = (checked: any) => {\r\n    // console.log(checked);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setBrandEditVisible(false);\r\n    setBnTags([]);\r\n    setTags([]);\r\n    setCoverImageId('');\r\n    setvisibleMedia(false);\r\n    setmyImages(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  console.log('myImages', myImages);\r\n\r\n  useEffect(() => {\r\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n      const metaTags =\r\n        brandDetailData.metaTags && brandDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        brandDetailData.bn &&\r\n        brandDetailData.bn['metaTags'] &&\r\n        brandDetailData.bn['metaTags'].split(',');\r\n      setTags(metaTags || []);\r\n      setBnTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  console.log('brandEdit', brandDetailData);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...brandDetailData,\r\n        ...(brandDetailData &&\r\n          Object.keys(brandDetailData).length > 0 && {\r\n            bnMetaTitle:\r\n              brandDetailData['bn'] &&\r\n              brandDetailData['bn'].metaTitle &&\r\n              brandDetailData['bn'].metaTitle,\r\n            bnMetaDescription:\r\n              brandDetailData['bn'] &&\r\n              brandDetailData['bn'].metaDescription &&\r\n              brandDetailData['bn'].metaDescription,\r\n            bnName:\r\n              brandDetailData['bn'] &&\r\n              brandDetailData['bn'].name &&\r\n              brandDetailData['bn'].name,\r\n            bnDescription:\r\n              brandDetailData['bn'] &&\r\n              brandDetailData['bn'].description &&\r\n              brandDetailData['bn'].description,\r\n          }),\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Brand Edit'\r\n            destroyOnClose={true}\r\n            visible={brandEditVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name'\r\n              value={values.name}\r\n              name='name'\r\n              placeHolder={'microsoft,apple'}\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateBrandState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateBrandState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Name'\r\n              value={values.bnName}\r\n              placeHolder={'প্রান,নোকিয়া'}\r\n              name='bnName'\r\n              isError={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && updateBrandState.error['error']['bnName'])\r\n              }\r\n              errorString={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && updateBrandState.error['error']['bnName'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnName');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Description'\r\n              value={values.description}\r\n              name='description'\r\n              placeholder={'This brand...'}\r\n              isError={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['description'])\r\n              }\r\n              errorString={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['description'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('description');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Description'\r\n              value={values.bnDescription}\r\n              placeholder={'এই ব্র্যান্ড...'}\r\n              name='bnDescription'\r\n              isError={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnDescription');\r\n              }}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            />\r\n\r\n            <div\r\n              className='addproductSection-left-header'\r\n              style={{\r\n                marginBottom: '-5px',\r\n              }}\r\n            >\r\n              <h3 className='inputFieldLabel'>Cover</h3>\r\n              {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n            </div>\r\n\r\n            <div className='aboutToUploadImagesContainer'>\r\n              {brandDetailData && Object.keys(brandDetailData).length > 0 && (\r\n                <>\r\n                  {myImages &&\r\n                    // @ts-ignore\r\n                    myImages.length > 0 &&\r\n                    myImages.map((image, index) => {\r\n                      return (\r\n                        <div className='aboutToUploadImagesContainer__item'>\r\n                          <div\r\n                            className='aboutToUploadImagesContainer__item-imgContainer'\r\n                            onClick={() => {\r\n                              setCoverImageId(image.id);\r\n                              handleSetImageAsThumnail(image);\r\n                            }}\r\n                          >\r\n                            <img src={image.cover} alt={image.alt} />\r\n                          </div>\r\n\r\n                          <span\r\n                            onClick={() => {\r\n                              handleImagesDelete(image.id);\r\n                              handleDetachSingleImage(image.id);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__item-remove'\r\n                          >\r\n                            <CloseOutlined />\r\n                          </span>\r\n\r\n                          {coverImageId === image.id ? (\r\n                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                              <CheckOutlined />\r\n                            </span>\r\n                          ) : (\r\n                            !coverImageId &&\r\n                            index === 0 && (\r\n                              <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                <CheckOutlined />\r\n                              </span>\r\n                            )\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n\r\n                  {!myImages ||\r\n                  // @ts-ignore\r\n                  (myImages && !(myImages && myImages.length > 0)) ? (\r\n                    <>\r\n                      <Tooltip title={'Attach images'}>\r\n                        <div\r\n                          onClick={() => {\r\n                            setvisibleMedia(true);\r\n                          }}\r\n                          className='aboutToUploadImagesContainer__uploadItem'\r\n                        >\r\n                          <FileImageFilled />\r\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                            <PlusOutlined />\r\n                          </span>\r\n                        </div>\r\n                      </Tooltip>\r\n                    </>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            <Input\r\n              label='Meta title'\r\n              value={values.metaTitle}\r\n              placeHolder={'category...'}\r\n              name='metaTitle'\r\n              isError={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && updateBrandState.error['error']['metaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && updateBrandState.error['error']['metaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaTitle');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Meta title'\r\n              value={values.bnMetaTitle}\r\n              placeHolder={'ক্যাটাগড়ি...'}\r\n              name='bnMetaTitle'\r\n              isError={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaTitle');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Meta description'\r\n              value={values.metaDescription}\r\n              placeholder={'meta...'}\r\n              name='metaDescription'\r\n              isError={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['metaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['metaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaDescription');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Meta Description'\r\n              value={values.bnMetaDescription}\r\n              placeholder={'এইয় মেট...'}\r\n              name='bnMetaDescription'\r\n              isError={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaDescription');\r\n              }}\r\n            />\r\n\r\n            <h3 className='inputFieldLabel'>Meta Tags (grocery,fashion)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setTags}\r\n              tags={tags}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h3 className='inputFieldLabel'>BN Meta Tags (মুদিখানা,ফ্যাশন)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setBnTags}\r\n              tags={bnTags}\r\n            />\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            myGoddamnImages={myGoddamnImages}\r\n            setMyGoddamnImages={setMyGoddamnImages}\r\n            isModalOpenForImages={false}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewBrand from \"./AddNewBrand\"\r\n\r\n// @ts-ignore\r\nimport BrandQuickEdit from \"./BrandQuickEdit\";\r\n\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Brand Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n  roles?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList,roles}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch({}, 'deleteBrand');\r\n    const [brandDetailVisible,setBrandDetailVisible] = useState(false); \r\n    const history = useHistory(); \r\n\r\n\r\n \r\n      const handleDeleteBrand = async (id) => {\r\n        const deleteBrandRes = await handleDeleteBrandFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteBrandRes && deleteBrandRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Brand'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  // setBrandDetailVisible(true);\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n        <Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n            />\r\n\r\n\r\n       <Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n\r\n\r\n{isAccess('postCatalogue',roles) && (\r\n\t\t\t\t\t      <Column\r\n        \r\n                className='classnameofthecolumn'\r\n                  title=\"\"\r\n                  key=\"action\"\r\n                  align='right'\r\n                  render={(text, record : any) => (\r\n                    <Space size=\"middle\">\r\n                        <a href='##'>\r\n                       <Tooltip placement=\"top\" title='Quick Edit Brand'>\r\n                      <span className='iconSize' onClick={() => {\r\n                        setvisible(true)\r\n                        setactiveCategoryForEdit(record); \r\n                      }}> \r\n                      <EditOutlined />\r\n                    \r\n                      </span>\r\n                       </Tooltip>\r\n                       </a>\r\n        \r\n        \r\n                       <Popconfirm \r\n                       \r\n                       onConfirm={() => handleDeleteBrand(record.id)}\r\n                       title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                   \r\n                   <span \r\n                     className='iconSize iconSize-danger'\r\n                     > \r\n                     <DeleteOutlined/>\r\n                    </span>\r\n                   </Popconfirm>\r\n        \r\n        \r\n                    </Space>\r\n                  )}\r\n                />\r\n                 )}\r\n\r\n\r\n\r\n   \r\n      </Table>\r\n\r\n\r\n\r\n    {activeCategoryForEdit &&   <BrandQuickEdit \r\n    brandList={data}\r\n    setBrandList={setBrandList}\r\n    setBrandEditVisible={setvisible}\r\n    brandEditVisible={visible}\r\n    brandDetailData={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n  roles: any; \r\n}\r\n\r\nconst CategoryList = ({roles}: Props) => {\r\n\r\n\r\n  const [brandList,setBrandList] = useState([]);\r\n\r\n  \r\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setBrands = async () => {\r\n     const brands = await handlebrandListFetch({\r\n      urlOptions:{\r\n        params: {\r\n          sortItem: 'added',\r\n          sortOrderValue: '-1'\r\n        }\r\n        }\r\n     }); \r\n     // @ts-ignore\r\n     setBrandList(brands); \r\n   }\r\n   setBrands(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(brandState.data.length > 0 ){\r\n      const newBrandList = brandState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setBrandList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search brand..\"\r\n          onChange={e => handleSearch(e.target.value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n\r\n          {isAccess('postCatalogue',roles) && (\r\n\t\t\t\t\t  <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n           >\r\n           Add New\r\n          </Button>\r\n                 )}\r\n\r\n\r\n          \r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {brandState.done && brandList.length > 0 && <MyTable\r\n        roles={roles} \r\n          setBrandList={setBrandList}\r\n        data={brandList} />}\r\n        {brandState.isLoading && <DataTableSkeleton />}\r\n        {brandState.done && !(brandList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '200px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Brand found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n    <AddNewBrand \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible} \r\n          setBrandList={setBrandList}\r\n          brandList={brandList}\r\n          />\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  roles: state.globalState,\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(CategoryList);\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Spin,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from '../../pages/category/MetaTags';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Brand Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  description: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n};\r\n\r\ninterface Props {\r\n  brandDetailData?: any;\r\n  brandEditVisible?: any;\r\n  setBrandEditVisible?: any;\r\n  setBrandDetailData?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  brandDetailData,\r\n  brandEditVisible,\r\n  setBrandEditVisible,\r\n  setBrandDetailData,\r\n}: Props) => {\r\n  const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch(\r\n    {},\r\n    'updateBrand'\r\n  );\r\n  const [\r\n    attachImageToItemMultipleState,\r\n    handleAttachImageToItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [\r\n    attachImageToItemSingleState,\r\n    handleAttachImageToItemSingleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [\r\n    detachImageFromItemMultipleState,\r\n    handleDetachImageFromItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n  const [myImages, setmyImages]: any = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n      const images = brandDetailData.image;\r\n      if (images && images.length > 0) {\r\n        setmyImages(images);\r\n        setMyGoddamnImages(images);\r\n      }\r\n\r\n      if (brandDetailData.cover && brandDetailData.cover['id']) {\r\n        // @ts-ignore\r\n        setmyImages([brandDetailData.cover]);\r\n        setCoverImageId(brandDetailData.cover['id']);\r\n      }\r\n    }\r\n  }, [brandDetailData]);\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'brand',\r\n          itemId: brandDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'brand',\r\n          itemId: brandDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n\r\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n      // if (prevItem) {\r\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n      //     setBrandList(updateBrandList);\r\n      // }\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    console.log('myReadyToGoImages', myImages);\r\n\r\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n      // @ts-ignore\r\n      const images =\r\n        myImages && myImages.length > 0 ? myImages.map((item) => item.id) : [];\r\n\r\n      if (images[0] && images.length > 1) {\r\n        await handleAttachImageToItemMultipleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              collection: 'brand',\r\n              itemId: brandDetailData.id,\r\n            },\r\n          },\r\n          body: {\r\n            image: images,\r\n          },\r\n        });\r\n      } else if (images[0] && images.length < 1) {\r\n        await handleAttachImageToItemSingleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              imageId: images[0].id,\r\n              collection: 'brand',\r\n              itemId: brandDetailData.id,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    const updateBrandRes = await handleUpdateBrandFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: brandDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateBrandRes && updateBrandRes.status === 'ok') {\r\n      console.log('updateBrandRes', updateBrandRes);\r\n      setBrandDetailData({\r\n        ...brandDetailData,\r\n        // @ts-ignore\r\n        ...updateBrandRes,\r\n      });\r\n      openSuccessNotification();\r\n      setBrandEditVisible(false);\r\n\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(productRecord.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n      // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n      // console.log('updateBrandList', updatedItem)\r\n\r\n      // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n      // setBrandList(updateBrandList);\r\n\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const onSwitchChange = (checked: any) => {\r\n    // console.log(checked);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setBrandEditVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  console.log('myImages', myImages);\r\n\r\n  useEffect(() => {\r\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n      const metaTags =\r\n        brandDetailData.metaTags && brandDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        brandDetailData.bn &&\r\n        brandDetailData.bn['metaTags'] &&\r\n        brandDetailData.bn['metaTags'].split(',');\r\n      setTags(metaTags || []);\r\n      setBnTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  console.log('brandEdit', brandDetailData);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...brandDetailData,\r\n        ...(brandDetailData &&\r\n          Object.keys(brandDetailData).length > 0 && {\r\n            bnMetaTitle:\r\n              brandDetailData['bn'] &&\r\n              brandDetailData['bn'].metaTitle &&\r\n              brandDetailData['bn'].metaTitle,\r\n            bnMetaDescription:\r\n              brandDetailData['bn'] &&\r\n              brandDetailData['bn'].metaDescription &&\r\n              brandDetailData['bn'].metaDescription,\r\n            bnName:\r\n              brandDetailData['bn'] &&\r\n              brandDetailData['bn'].name &&\r\n              brandDetailData['bn'].name,\r\n            bnDescription:\r\n              brandDetailData['bn'] &&\r\n              brandDetailData['bn'].description &&\r\n              brandDetailData['bn'].description,\r\n          }),\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Brand Edit'\r\n            visible={brandEditVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name'\r\n              value={values.name}\r\n              name='name'\r\n              placeHolder={'microsoft,apple'}\r\n              isError={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateBrandState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.name && errors.name) ||\r\n                (!isSubmitting && updateBrandState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('name');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Name'\r\n              value={values.bnName}\r\n              placeHolder={'প্রান,নোকিয়া'}\r\n              name='bnName'\r\n              isError={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && updateBrandState.error['error']['bnName'])\r\n              }\r\n              errorString={\r\n                (touched.bnName && errors.bnName) ||\r\n                (!isSubmitting && updateBrandState.error['error']['bnName'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnName');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Description'\r\n              value={values.description}\r\n              name='description'\r\n              placeholder={'This brand...'}\r\n              isError={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['description'])\r\n              }\r\n              errorString={\r\n                (touched.description && errors.description) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['description'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('description');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Description'\r\n              value={values.bnDescription}\r\n              placeholder={'এই ব্র্যান্ড...'}\r\n              name='bnDescription'\r\n              isError={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnDescription && errors.bnDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnDescription');\r\n              }}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            />\r\n\r\n            <div\r\n              className='addproductSection-left-header'\r\n              style={{\r\n                marginBottom: '-5px',\r\n              }}\r\n            >\r\n              <h3 className='inputFieldLabel'>Cover</h3>\r\n              {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n            </div>\r\n\r\n            <div className='aboutToUploadImagesContainer'>\r\n              {brandDetailData && Object.keys(brandDetailData).length > 0 && (\r\n                <>\r\n                  {myImages &&\r\n                    // @ts-ignore\r\n                    myImages.length > 0 &&\r\n                    myImages.map((image, index) => {\r\n                      return (\r\n                        <div className='aboutToUploadImagesContainer__item'>\r\n                          <div\r\n                            className='aboutToUploadImagesContainer__item-imgContainer'\r\n                            onClick={() => {\r\n                              setCoverImageId(image.id);\r\n                              handleSetImageAsThumnail(image);\r\n                            }}\r\n                          >\r\n                            <img src={image.cover} alt={image.alt} />\r\n                          </div>\r\n\r\n                          <span\r\n                            onClick={() => {\r\n                              handleImagesDelete(image.id);\r\n                              handleDetachSingleImage(image.id);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__item-remove'\r\n                          >\r\n                            <CloseOutlined />\r\n                          </span>\r\n\r\n                          {coverImageId === image.id ? (\r\n                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                              <CheckOutlined />\r\n                            </span>\r\n                          ) : (\r\n                            !coverImageId &&\r\n                            index === 0 && (\r\n                              <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                <CheckOutlined />\r\n                              </span>\r\n                            )\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n\r\n                  {!myImages ||\r\n                  // @ts-ignore\r\n                  (myImages && !(myImages && myImages.length > 0)) ? (\r\n                    <>\r\n                      <Tooltip title={'Attach images'}>\r\n                        <div\r\n                          onClick={() => {\r\n                            setvisibleMedia(true);\r\n                          }}\r\n                          className='aboutToUploadImagesContainer__uploadItem'\r\n                        >\r\n                          <FileImageFilled />\r\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                            <PlusOutlined />\r\n                          </span>\r\n                        </div>\r\n                      </Tooltip>\r\n                    </>\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            <Input\r\n              label='Meta title'\r\n              value={values.metaTitle}\r\n              placeHolder={'category...'}\r\n              name='metaTitle'\r\n              isError={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && updateBrandState.error['error']['metaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.metaTitle && errors.metaTitle) ||\r\n                (!isSubmitting && updateBrandState.error['error']['metaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaTitle');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='BN Meta title'\r\n              value={values.bnMetaTitle}\r\n              placeHolder={'ক্যাটাগড়ি...'}\r\n              name='bnMetaTitle'\r\n              isError={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaTitle'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaTitle'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaTitle');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='Meta description'\r\n              value={values.metaDescription}\r\n              placeholder={'meta...'}\r\n              name='metaDescription'\r\n              isError={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['metaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.metaDescription && errors.metaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['metaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('metaDescription');\r\n              }}\r\n            />\r\n\r\n            <TextArea\r\n              label='BN Meta Description'\r\n              value={values.bnMetaDescription}\r\n              placeholder={'এইয় মেট...'}\r\n              name='bnMetaDescription'\r\n              isError={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaDescription'])\r\n              }\r\n              errorString={\r\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                (!isSubmitting &&\r\n                  updateBrandState.error['error']['bnMetaDescription'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('bnMetaDescription');\r\n              }}\r\n            />\r\n\r\n            <h3 className='inputFieldLabel'>Meta Tags (grocery,fashion)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setTags}\r\n              tags={tags}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h3 className='inputFieldLabel'>BN Meta Tags (মুদিখানা,ফ্যাশন)</h3>\r\n\r\n            <MetaTags\r\n              // @ts-ignore\r\n              setTags={setBnTags}\r\n              tags={bnTags}\r\n            />\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            myGoddamnImages={myGoddamnImages}\r\n            setMyGoddamnImages={setMyGoddamnImages}\r\n            isModalOpenForImages={false}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport BrandEdit from \"./BrandEdit\";\r\n\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({roles}: Props) => {\r\n    const [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'brandDetail');\r\n    const [brandProductsState, handleBrandProductsFetch] = useHandleFetch({}, 'brandProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const brandId = params['id'];\r\n    const [brandEditVisible, setBrandEditVisible] = useState(false);\r\n    const [brandDetailData, setBrandDetailData] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const getBrandDetail = async () => {\r\n            const brandDetailRes = await handleBrandDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(brandDetailRes){\r\n                // @ts-ignore\r\n                setBrandDetailData(brandDetailRes)\r\n            }; \r\n\r\n\r\n            console.log('brandDetailRes',brandDetailRes);\r\n\r\n\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [brandId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandProducts = async () => {\r\n            await handleBrandProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandProducts();\r\n\r\n    }, [brandId]);\r\n\r\n\r\n\r\n\r\n    console.log('brandProductsState', brandProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n\r\n\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Brand Detail\r\n                </h3>\r\n\r\n\r\n                {brandDetailState.done && brandDetailData && (Object.keys(brandDetailData).length > 0) && (\r\n                    <>\r\n                        <BrandEdit\r\n                            brandEditVisible={brandEditVisible}\r\n                            setBrandEditVisible={setBrandEditVisible}\r\n                            brandDetailData={brandDetailData}\r\n                            setBrandDetailData={setBrandDetailData}\r\n                        />\r\n\r\n                {isAccess('postCatalogue',roles) && (\r\n                    <Button\r\n                    onClick={() => setBrandEditVisible(true)}\r\n                    type='link'\r\n                    icon={<EditOutlined />}\r\n                    >\r\n                        Edit\r\n                </Button>\r\n                    )}\r\n\r\n                 \r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={brandDetailState.isLoading}>\r\n                {brandDetailState.done && brandDetailData && !(Object.keys(brandDetailData).length > 0) && (\r\n                    <Empty description='No Brand found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {brandDetailState.done && brandDetailData && (Object.keys(brandDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n                        <div className='brandDetailContainer__header-coverContainer'>\r\n                            <img src={brandDetailData['cover'] && brandDetailData['cover']['cover']} alt=\"\" />\r\n                        </div>\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {brandDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {brandDetailData['description']}\r\n                            </h3>\r\n\r\n                            {brandDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {brandDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {brandProductsState.isLoading && <DataTableSkeleton />}\r\n                {brandProductsState.done && !(brandProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this brand' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {brandProductsState.done && brandProductsState.data && brandProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={brandProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                            \r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    roles: state.globalState,\r\n  })\r\n  \r\n  // @ts-ignore\r\n  export default connect(mapStateToProps, null)(NewBrandDetail);\r\n  \r\n  \r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { useFetch } from '../../hooks';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\r\n  const [suggestedOptions, setsuggesteOptions] = useState([]);\r\n  const attributeLisState = useFetch([], [], 'attributeList', {});\r\n\r\n  const [attributeItem, setAttributeITem] = useState({\r\n    name: attribute.name,\r\n    value: attribute.value,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const positionInAttribute = () => {\r\n      return attributeList.map((item) => item.id).indexOf(attribute.id);\r\n    };\r\n\r\n    const index = positionInAttribute();\r\n\r\n    const updatedItem = Object.assign({}, attributeList[index], {\r\n      ...attributeItem,\r\n    });\r\n    const updateAttributeList = [\r\n      ...attributeList.slice(0, index),\r\n      updatedItem,\r\n      ...attributeList.slice(index + 1),\r\n    ];\r\n    setAttributeList(updateAttributeList);\r\n  }, [attributeItem]);\r\n\r\n  const handleAttributeDelete = () => {\r\n    const updateAttributeList = attributeList.filter(\r\n      (item) => item.id !== attribute.id\r\n    );\r\n    setAttributeList(updateAttributeList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      attributeLisState.data &&\r\n      Object.keys(attributeLisState.data).length > 0\r\n    ) {\r\n      const options = Object.keys(attributeLisState.data);\r\n      const manupulatedOptions = options.map((option) => {\r\n        return {\r\n          value: option,\r\n        };\r\n      });\r\n      setsuggesteOptions(manupulatedOptions);\r\n    }\r\n  }, [attributeLisState.data]);\r\n\r\n  const handleAttributeSelect = (value) => {\r\n    if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\r\n      if (attributeLisState.data[value]) {\r\n        setAttributeITem({\r\n          ...attribute,\r\n          name: value,\r\n          value: attributeLisState.data[value],\r\n        });\r\n      }\r\n    } else {\r\n      setAttributeITem({\r\n        ...attribute,\r\n        name: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAttributeValueChange = (e) => {\r\n    setAttributeITem({\r\n      ...attribute,\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        key={attribute.id}\r\n        className='addProductGridContainer__item-body-variationCard-item-attribute-item'\r\n      >\r\n        <div\r\n          onClick={handleAttributeDelete}\r\n          className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'\r\n        >\r\n          <DeleteOutlined />\r\n        </div>\r\n\r\n        <h3 className='inputFieldLabel-small'>Name</h3>\r\n        <AutoComplete\r\n          value={attribute.name}\r\n          style={{ width: '100%' }}\r\n          options={suggestedOptions}\r\n          placeholder='attribute'\r\n          onChange={handleAttributeSelect}\r\n          filterOption={(inputValue, suggestedOption) =>\r\n            suggestedOption.value\r\n              .toUpperCase()\r\n              .indexOf(inputValue.toUpperCase()) !== -1\r\n          }\r\n        />\r\n\r\n        {attribute.name && (\r\n          <>\r\n            <div style={{ marginTop: '10px' }}></div>\r\n            <InputSmall\r\n              label='Value'\r\n              value={attribute.value}\r\n              name='value'\r\n              onChange={handleAttributeValueChange}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Attributes from './Attributes';\r\nimport AddAttributeValues from '../attribute/AddAttributeValues';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { Button } from 'antd';\r\nimport { PlusOutlined, CheckOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n  handleAddPricing: any;\r\n  pricingItem?: any;\r\n  handleUpdatePricing?: any;\r\n  isPricingEditActive?: any;\r\n}\r\n\r\nconst Pricing = ({\r\n  handleAddPricing,\r\n  pricingItem,\r\n  handleUpdatePricing,\r\n  isPricingEditActive,\r\n}: Props) => {\r\n  const [price, setprice] = useState({\r\n    regular: '',\r\n    offer: '',\r\n  });\r\n  const [stock, setStock] = useState({\r\n    available: '',\r\n    minimum: '',\r\n  });\r\n\r\n  const [attributeList, setAttributeList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (pricingItem && Object.keys(pricingItem).length > 0) {\r\n      setprice({\r\n        ...price,\r\n        ...pricingItem['price'],\r\n      });\r\n\r\n      setStock({\r\n        ...stock,\r\n        ...pricingItem['stock'],\r\n      });\r\n\r\n      const attributeListItems = [];\r\n      if (\r\n        pricingItem.attribute &&\r\n        Object.keys(pricingItem.attribute).length > 0\r\n      ) {\r\n        const attributeKeys = Object.keys(pricingItem.attribute);\r\n        attributeKeys.forEach((attributeKey, index) => {\r\n          attributeListItems.push({\r\n            name: attributeKey,\r\n            value: pricingItem.attribute[attributeKey],\r\n            id: index,\r\n          });\r\n        });\r\n      }\r\n\r\n      setAttributeList(attributeListItems);\r\n    }\r\n  }, [pricingItem]);\r\n\r\n  console.log('pricingItem', pricingItem);\r\n  console.log('attributeList', attributeList);\r\n\r\n  const handlePriceChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setprice({\r\n      ...price,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleStockChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setStock({\r\n      ...stock,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSavePricing = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (attributeList.length > 0) {\r\n      const attribute = {};\r\n\r\n      for (let item of attributeList) {\r\n        console.log('itemofattribute', item);\r\n        if (item['value'] && item['name']) {\r\n          attribute[item['name']] = item['value'];\r\n        }\r\n      }\r\n\r\n      const priceItem = {\r\n        price: price,\r\n        stock: stock,\r\n        attribute: attribute,\r\n      };\r\n\r\n      setprice({\r\n        regular: '',\r\n        offer: '',\r\n      });\r\n      setStock({ available: '', minimum: '' });\r\n      handleAddPricing(priceItem);\r\n      setAttributeList([]);\r\n    } else {\r\n      const priceItem = {\r\n        price: price,\r\n        stock: stock,\r\n        attribute: {},\r\n      };\r\n\r\n      setprice({\r\n        regular: '',\r\n        offer: '',\r\n      });\r\n      setStock({ available: '', minimum: '' });\r\n      setAttributeList([]);\r\n      handleAddPricing(priceItem);\r\n    }\r\n  };\r\n\r\n  const handleUpdatePricingItem = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (attributeList.length > 0) {\r\n      const attribute = {};\r\n\r\n      for (let item of attributeList) {\r\n        console.log('itemofattribute', item);\r\n        if (item['value'] && item['name']) {\r\n          attribute[item['name']] = item['value'];\r\n        }\r\n      }\r\n\r\n      const priceItem = {\r\n        price: price,\r\n        stock: stock,\r\n        attribute: attribute,\r\n        id: pricingItem.id,\r\n      };\r\n\r\n      setprice({\r\n        regular: '',\r\n        offer: '',\r\n      });\r\n      setStock({ available: '', minimum: '' });\r\n      handleUpdatePricing(priceItem);\r\n      setAttributeList([]);\r\n    } else {\r\n      const priceItem = {\r\n        price: price,\r\n        stock: stock,\r\n        attribute: {},\r\n        id: pricingItem.id,\r\n      };\r\n\r\n      setprice({\r\n        regular: '',\r\n        offer: '',\r\n      });\r\n      setStock({ available: '', minimum: '' });\r\n      setAttributeList([]);\r\n      handleUpdatePricing(priceItem);\r\n    }\r\n  };\r\n\r\n  const handleAddAttribute = () => {\r\n    setAttributeList([\r\n      ...attributeList,\r\n      {\r\n        name: '',\r\n        value: '',\r\n        id: `${attributeList.length}`,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const getiCreatePricingIsDisabled = () => {\r\n    if (!price.regular) {\r\n      return true;\r\n    } else return false;\r\n  };\r\n\r\n  // console.log('attributeList', attributeList);\r\n\r\n  return (\r\n    <>\r\n      <div className='addProductGridContainer__item-body-variationCard'>\r\n        <div className='addProductGridContainer__item-body-variationCard-left'>\r\n          <div className='addProductGridContainer__item-body-variationCard-item'>\r\n            <h4>Price</h4>\r\n            <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n              <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                <InputSmall\r\n                  min={0}\r\n                  type='number'\r\n                  label='Regular  *'\r\n                  value={price.regular}\r\n                  name='regular'\r\n                  onChange={handlePriceChange}\r\n                />\r\n              </div>\r\n              <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n                <InputSmall\r\n                  min={0}\r\n                  type='number'\r\n                  size='small'\r\n                  label='Offer'\r\n                  value={price.offer}\r\n                  name='offer'\r\n                  onChange={handlePriceChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='addProductGridContainer__item-body-variationCard-right'>\r\n            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n              <h4>Attributes</h4>\r\n              <div className='addProductGridContainer__item-body-variationCard-item-attribute'>\r\n                {attributeList.map((attribute) => {\r\n                  return (\r\n                    <Attributes\r\n                      attribute={attribute}\r\n                      attributeList={attributeList}\r\n                      setAttributeList={setAttributeList}\r\n                    />\r\n                  );\r\n                })}\r\n                <Button\r\n                  size='small'\r\n                  onClick={handleAddAttribute}\r\n                  style={{\r\n                    width: '180px',\r\n                    minHeight: '75px',\r\n                    marginTop: '0px',\r\n                    borderRadius: '8px',\r\n                  }}\r\n                  type='dashed'\r\n                  icon={<PlusOutlined />}\r\n                >\r\n                  Add Attribute\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '25px',\r\n              }}\r\n              className='addProductGridContainer__item-body-variationCard-item'\r\n            >\r\n              <h4>Stock</h4>\r\n              <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                  <InputSmall\r\n                    min={0}\r\n                    type='number'\r\n                    label='Available'\r\n                    value={stock.available}\r\n                    name='available'\r\n                    onChange={handleStockChange}\r\n                  />\r\n                </div>\r\n                <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n                  <InputSmall\r\n                    min={0}\r\n                    type='number'\r\n                    label='Minimum'\r\n                    value={stock.minimum}\r\n                    name='minimum'\r\n                    onChange={handleStockChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <Button\r\n          // type=\"primary\"\r\n         \r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button> */}\r\n\r\n      <Button\r\n        style={{\r\n          marginLeft: '10px',\r\n        }}\r\n        onClick={\r\n          isPricingEditActive ? handleUpdatePricingItem : handleSavePricing\r\n        }\r\n        disabled={getiCreatePricingIsDisabled()}\r\n        className='btnAddToPrice'\r\n        icon={<CheckOutlined />}\r\n      >\r\n        {isPricingEditActive ? 'Update Pricing' : 'Add To Pricing'}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pricing;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\tvenue: '',\r\n\tdate: '',\r\n\ttime: '',\r\n\tpurchaseLimit: null,\r\n\tbnUnit: '',\r\n\tbnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tproductList?: any;\r\n\tsetProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList, setProductList }: Props) => {\r\n\r\n\tconst [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addProduct');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [categoryids, setcategoryIds] = useState([]);\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [brandId, setBrandId] = useState('');\r\n\tconst [pricing, setPricing] = useState([]);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [categoryOptions, setCategoryOptions] = useState([]);\r\n\tconst [selectedTags, setSelectedTags] = useState([]);\r\n\tconst [date, setDateFeild] = useState('');\r\n\tconst [time, setTimeFeild] = useState('');\r\n\tconst [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('1');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n\r\n\r\n\tconst makeEmptyCategoryOptions = (setEmpty) => {\r\n\t\tsetEmpty([]);\r\n\t}\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst addProductRes = await handleAddProductFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: description,\r\n\t\t\t\tmodel: values.model,\r\n\t\t\t\tunit: values.unit,\r\n\t\t\t\tcategory: categoryids,\r\n\t\t\t\ttags: tagIds,\r\n\t\t\t\tbrand: brandId,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tpricing: pricing,\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addProductRes && addProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Product Created');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetProductList([{\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addProductRes,\r\n\t\t\t\tid: addProductRes['_id'] || '',\r\n\t\t\t\tkey: addProductRes['_id'] || '',\r\n\t\t\t\tname: addProductRes['name'] || '',\r\n\t\t\t\tdescription: addProductRes['description'] || '',\r\n\t\t\t\tcover: addProductRes['cover'] || '',\r\n\t\t\t},...productList])\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('');\r\n\t\t\tsetPricing([]);\r\n\t\t\tsetTagIds([]);\r\n\t\t\tsetSelectedTags([]);\r\n\t\t\tsetBrandId(\"\");\r\n\t\t\tsetcategoryIds([]);\r\n\t\t\tsetCategoryOptions([]);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// openErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addProductState['isLoading']) {\r\n\t\t\tconst error = addProductState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addProductState])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !(pricing.length > 0) || !(categoryids.length > 0)  || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\tconst handleDeleteFromSelectedImage = () => {\r\n\r\n\t};\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleAddPricing = (priceItem) => {\r\n\r\n\t\tsetPricing([{\r\n\t\t\t...priceItem,\r\n\t\t\tid: pricing.length\r\n\t\t}, ...pricing])\r\n\t\tmessage.info('Product Pricing Added');\r\n\t}\r\n\r\n\r\n\tconst handleUpdatePricing = (priceItem) => {\r\n\r\n\t\tconst positionInPricing = () => {\r\n\t\t\treturn pricing.map(item => item.id).indexOf(priceItem.id);\r\n\t\t  }\r\n\r\n\t\t  const index = positionInPricing();\r\n\r\n\t\t  // @ts-ignore\r\n\t\t  const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\r\n\t\t  const updatePricingList = [...pricing.slice(0, index), updatedItem, ...pricing.slice(index + 1)];\r\n\t\t\t \r\n\t\t  setPricing(updatePricingList); \r\n\r\n\t\tmessage.info('Product Pricing Updated');\r\n\t\tseTisPricingEditActive(true);\r\n\t\tsetpricingTagActiveKey('2'); \r\n\t}\r\n\r\n\r\n\tconst handleEditPricing = (id)=> {\r\n\t\tseTisPricingEditActive(true);\r\n\t\tconst pricingItem = pricing.find(item => item.id === id);\r\n\t\tif(pricingItem){\r\n\t\t\tsetEditPricingItem(pricingItem);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst handleDeletePricing = (id) => {\r\n\t\tconst newPricing = pricing.filter(item => item.id !== id);\r\n\t\tsetPricing(newPricing);\r\n\t\tmessage.info('Product Pricing Deleted');\r\n\t}\r\n\r\n\r\n\r\n\tconst isCategoryInValid = () => {\r\n\t\tif (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (categoryids && categoryids.length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDateChange = (date, dateString) => {\r\n\t\tsetDateFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\tconst handleTimeChange = (date, dateString) => {\r\n\t\tsetTimeFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('pricingingi',pricing);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Product\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Information *\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t    \tplaceHolder={'KG,POUND,GM'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Unit'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnUnit}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'কেজি,গ্রাম'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnUnit'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnUnit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnUnit'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnUnit');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Pricing *\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveKey={pricingTagActiveKey}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey(`${value}`);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing \r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddPricing={handleAddPricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpricingItem={editpricingItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleUpdatePricing={handleUpdatePricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisPricingEditActive={isPricingEditActive}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingEditIcon' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPricing(item.id); \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey('1');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingDeleteIcon' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && item.stock['available'] && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock['minimum'] && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.values(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tImage\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tMeta Data\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setMetaTags}\r\n\t\t\t\t\t\t\ttags={metaTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnMetaTags}\r\n\t\t\t\t\t\t\ttags={bnMetaTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__category'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCategories *\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Select at least one category'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={!(categoryids.length > 0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Categories\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetCategoryOptions={setCategoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcategoryOptions={categoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetcategoryIds={setcategoryIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTags\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tags\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__brand'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBrand\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Brands setBrandId={setBrandId} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    EditOutlined\r\n} from '@ant-design/icons';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\tvenue: '',\r\n\tdate: '',\r\n\ttime: '',\r\n\tpurchaseLimit: null,\r\n\tbnUnit: '',\r\n\tbnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n    productEditVisible?: any;\r\n    setProductEditVisible?: any;\r\n    productDetailData?: any;\r\n    productList?:any; \r\n    setProductList?:any; \r\n    \r\n}\r\n\r\nconst AddNewProduct = ({ productEditVisible, \r\n    setProductEditVisible, \r\n    productDetailData,\r\n    setProductList, \r\n    productList\r\n }: Props) => {\r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\tconst [bnDescription, setBNDescription] = useState('');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('2');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            const categoryIds = productDetailData.category;\r\n            setCategoryOptions(categoryIds);\r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.pricing && productDetailData.pricing) {\r\n            setPricing(productDetailData.pricing)\r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n        \r\n        if (productDetailData && productDetailData.description) {\r\n            setDescription(productDetailData.description); \r\n        }\r\n        else {\r\n            setDescription('');\r\n        }\r\n\r\n        if (productDetailData && productDetailData.bn && productDetailData.bn['description']) {\r\n            setBNDescription(productDetailData.bn['description']); \r\n        }\r\n        else {\r\n            setBNDescription('');\r\n        }\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n\r\n            const images = productDetailState.data.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === productDetailState.data.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [productDetailState.data.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(productDetailState.data.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n                setmyImages(mahImages);\r\n\r\n    \r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n\r\n        if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n\t\t\tconst aboutToUpdatedImageIds = []; \r\n\r\n\t\t\tif(imagesIds && imagesIds.length > 0){\r\n\t\t\t\timagesIds.forEach(imageId => {\r\n\t\t\t\t\tif(productDetailData && productDetailData['image']){\r\n\t\t\t\t\t\tif(!productDetailData['image'].includes(imageId)){\r\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n      \r\n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'product',\r\n                            itemId: productDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: aboutToUpdatedImageIds\r\n                    }\r\n                });\r\n            }\r\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: aboutToUpdatedImageIds[0].id,\r\n                            collection: 'product',\r\n                            itemId: productDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        \r\n\r\n\r\n        const updatedProductRes = await handleUpdateProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                category: categoryOptions,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                pricing: pricing,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n                metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\r\n                \r\n\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n                    metaTags: bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updatedProductRes && updatedProductRes.status === 'ok') {\r\n            openSuccessNotification('Product Updated');\r\n\r\n\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn productList.map(item => item.id).indexOf(productDetailData.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, productList[index], { ...productDetailData, ...updatedProductRes });\r\n\t\t\tconst updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateProductList);\r\n            \r\n\r\n            setProductEditVisible(false);\r\n\r\n\r\n            // setProductDetailData({\r\n            //     // @ts-ignore\r\n            //     ...updatedProductRes,\r\n            //     category: productDetailData.category,\r\n            //     brand: productDetailData.brand,\r\n            //     tags: productDetailData.tags,\r\n            //     cover: productDetailData.cover,\r\n            //     image: productDetailData.image,\r\n            // }); \r\n\r\n\r\n            // console.log('updatedProductRes', updatedProductRes);\r\n            // setProductList([...productList, {\r\n            //     id: updatedProductRes['id'] || '',\r\n            //     key: updatedProductRes['id'] || '',\r\n            //     name: updatedProductRes['name'] || '',\r\n            //     description: updatedProductRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...updatedProductRes\r\n            // }])\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setProductEditVisible(false);\r\n        setmyImages(false);\r\n        setCoverImageId('');\r\n        setPricing([]);\r\n        setTagIds([]);\r\n        setSelectedTags([]);\r\n        setBrandId(\"\");\r\n        setcategoryIds([]);\r\n        setCategoryOptions([]);\r\n        setMetaTags([]); \r\n        setBnMetaTags([]); \r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleUpdatePricing = (priceItem) => {\r\n\r\n\t\tconst positionInPricing = () => {\r\n\t\t\treturn pricing.map(item => item.id).indexOf(priceItem.id);\r\n\t\t  }\r\n\r\n\t\t  const index = positionInPricing();\r\n\r\n\t\t  // @ts-ignore\r\n\t\t  const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\r\n\t\t  const updatePricingList = [...pricing.slice(0, index), updatedItem, ...pricing.slice(index + 1)];\r\n\t\t\t \r\n\t\t  setPricing(updatePricingList); \r\n\r\n\t\tmessage.info('Product Pricing Updated');\r\n\t\tseTisPricingEditActive(true);\r\n\t\tsetpricingTagActiveKey('2'); \r\n    }\r\n    \r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n    const handleEditPricing = (id)=> {\r\n\t\tseTisPricingEditActive(true);\r\n\t\tconst pricingItem = pricing.find(item => item.id === id);\r\n\t\tif(pricingItem){\r\n\t\t\tsetEditPricingItem(pricingItem);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (updateProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    console.log('productDetailData', productDetailData);\r\n    console.log('productDetailState', productDetailState);\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data.metaTags){\r\n            const metaTags = productDetailState.data.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \r\n            setMetaTags(metaTags || [])\r\n            setBnMetaTags(bnMetaTags || [])\r\n        }\r\n\r\n    },[productDetailState['done']])\r\n\r\n    \r\n\r\n    console.log('productDetailData')\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues,\r\n                    ...{\r\n                    ...productDetailData,\r\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\r\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\r\n                        bnName: productDetailState['data']['bn'].name,\r\n                        metaUnit: productDetailState['data']['bn'].unit,\r\n                        bnDescription: productDetailState['data']['bn'].description,\r\n                      }),\r\n                } }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Product Edit\"\r\n                            visible={productEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            destroyOnClose={true}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n                        >\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Product Information *\r\n\t\t                                \t</h3>\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                        <Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t    \tplaceHolder={'KG,POUND,GM'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Unit'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnUnit}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'কেজি,গ্রাম'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnUnit'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnUnit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['bnUnit'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnUnit');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={description}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div style={{\r\n                                                marginTop: '15px'\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                               BN Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={bnDescription}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setBNDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}> </div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                            \r\n                                    <div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Pricing *\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveKey={pricingTagActiveKey}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey(`${value}`);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing \r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddPricing={handleAddPricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpricingItem={editpricingItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleUpdatePricing={handleUpdatePricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisPricingEditActive={isPricingEditActive}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingEditIcon' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPricing(item.id); \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey('1');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingDeleteIcon' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && item.stock['available'] && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock['minimum'] && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.values(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n\t\t\t</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {productDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {productDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    \r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                            Meta Data\r\n                                        </h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                                        \r\n                                        <Input\r\n                                        label='Meta title'\r\n                                        value={values.metaTitle}\r\n                                        placeHolder={'category...'}\r\n                                        name='metaTitle'\r\n                                        isError={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaTitle'])}\r\n\r\n                                        errorString={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaTitle'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaTitle')\r\n                                        }}\r\n                                        />\r\n\r\n                                        <Input\r\n                                        label='BN Meta title'\r\n                                        value={values.bnMetaTitle}\r\n                                        placeHolder={'ক্যাটাগড়ি...'}\r\n                                        name='bnMetaTitle'\r\n                                        isError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaTitle'])}\r\n\r\n                                        errorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaTitle'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('bnMetaTitle');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <TextArea\r\n                                        label='Meta description'\r\n                                        value={values.metaDescription}\r\n                                        placeholder={'meta...'}\r\n                                        name='metaDescription'\r\n                                        isError={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaDescription'])}\r\n\r\n                                        errorString={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['metaDescription'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaDescription');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <TextArea\r\n                                        label='BN Meta Description'\r\n                                        value={values.bnMetaDescription}\r\n                                        placeholder={'এইয় মেট...'}\r\n                                        name='bnMetaDescription'\r\n                                        isError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaDescription'])}\r\n\r\n                                        errorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                                        (!isSubmitting && updateProductState.error['error']['bnMetaDescription'])}\r\n                                        onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('bnMetaDescription');\r\n                                        }}\r\n                                        />\r\n\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        Meta Tags (grocery,fashion)\r\n                                        </h3>\r\n\r\n                                        <MetaTags\r\n                                        // @ts-ignore\r\n                                        setTags={setMetaTags}\r\n                                        tags={metaTags}\r\n                                        />\r\n\r\n                                        <div style={{\r\n                                        marginTop:'15px'\r\n                                        }}></div>\r\n\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                                        </h3>\r\n\r\n                                        <MetaTags\r\n                                        // @ts-ignore\r\n                                        setTags={setBnMetaTags}\r\n                                        tags={bnMetaTags}\r\n                                        />\r\n                                        </div>\r\n                                        </div>\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories *\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={updateProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !updateProductState.error['error']['category'] ? 'checkicon' : updateProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands\r\n                                                    productDetailState={productDetailState}\r\n                                                    brandId={brandId}\r\n                                                    setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport {\r\n  notification,\r\n  Empty,\r\n  Table,\r\n  Badge,\r\n  Menu,\r\n  Dropdown,\r\n  Space,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  CheckCircleOutlined,\r\n  DownOutlined,\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  CheckOutlined,\r\n} from '@ant-design/icons';\r\n\r\n/// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewProduct from './AddNewProduct';\r\nimport ProductQuickEdit from './ProductQuickEdit';\r\n// import QuickEdit from './QuickEdit';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (msg?: any) => {\r\n  notification.success({\r\n    message: msg || 'Product Deleted',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setProductList: any;\r\n  roles: any;\r\n}\r\n\r\nconst MyTable = ({ data, setProductList, roles }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteProductState, handleDeleteProductFetch] = useHandleFetch(\r\n    {},\r\n    'deleteProduct'\r\n  );\r\n  const [productDetailVisible, setproductDetailVisible] = useState(false);\r\n  const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch(\r\n    {},\r\n    'updateStock'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    const deleteProductRes = await handleDeleteProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteProductRes && deleteProductRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      const newProductList = data.filter((item) => item.id !== id);\r\n      setProductList(newProductList);\r\n    }\r\n\r\n    // console.log('deleteProductRes', deleteProductRes)\r\n  };\r\n\r\n  const handleUpdateOrderStatus = async (record, id, newStatus) => {\r\n    const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\r\n      body: {\r\n        inStock: newStatus,\r\n      },\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateOrderStatusRes && updateOrderStatusRes.status === 'ok') {\r\n      openSuccessNotification('Updated Stock');\r\n\r\n      const positionInTag = () => {\r\n        return data.map((item) => item.id).indexOf(id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n      console.log('recordis', record, index);\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, data[index], {\r\n        inStock: newStatus,\r\n      });\r\n      const updateOrderList = [\r\n        ...data.slice(0, index),\r\n        updatedItem,\r\n        ...data.slice(index + 1),\r\n      ];\r\n      console.log('updateOrderList', updateOrderList, '-----', setProductList);\r\n      setProductList(updateOrderList);\r\n    }\r\n  };\r\n\r\n  const StatusItemMenu = (record, id) => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, true)}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          In stock\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, false)}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Out of stock\r\n        </Menu.Item>\r\n\r\n        {/* <Menu.Item\r\n                      onClick={() => handleUpdateOrderStatus(record,id,'deliver')}\r\n                      key=\"1\" icon={<CheckOutlined />}>\r\n                      Delivered\r\n                    </Menu.Item>\r\n              */}\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        style={{\r\n          paddingTop: '10px',\r\n          borderRadius: '5px !important',\r\n          overflow: 'hidden',\r\n          boxShadow:\r\n            '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\r\n        }}\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        tableLayout={'auto'}\r\n        onHeaderRow={(column) => {\r\n          return {\r\n            style: {\r\n              color: 'red !important',\r\n            },\r\n          };\r\n        }}\r\n      >\r\n        <Column\r\n          title=''\r\n          dataIndex='cover'\r\n          key='id'\r\n          width={'80px'}\r\n          className='classnameofthecolumn'\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                src={cover}\r\n                alt='cover img'\r\n                style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: 'contain',\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer',\r\n                }}\r\n              />\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Offer Price'\r\n          dataIndex='offerPrice'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Price'\r\n          dataIndex='price'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Available'\r\n          dataIndex='available'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          align='right'\r\n          title='Stock'\r\n          dataIndex='inStock'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              {isAccess('postCatalogue', roles) ? (\r\n                <Dropdown\r\n                  overlay={() => StatusItemMenu(record, record.id)}\r\n                  placement='bottomRight'\r\n                >\r\n                  <a href='##'>\r\n                    <span\r\n                      // className={'product-attributeTag'}\r\n                      style={{\r\n                        fontSize: '12px',\r\n                      }}\r\n                    >\r\n                      {text ? 'In Stock' : 'Out of stock'}\r\n                      <span\r\n                        style={{\r\n                          marginLeft: '5px',\r\n                          fontSize: '10px',\r\n                        }}\r\n                      >\r\n                        <DownOutlined />\r\n                      </span>\r\n                    </span>\r\n                  </a>\r\n                </Dropdown>\r\n              ) : (\r\n                <a href='##'>\r\n                  <span\r\n                    // className={'product-attributeTag'}\r\n                    style={{\r\n                      fontSize: '12px',\r\n                    }}\r\n                  >\r\n                    {text ? 'In Stock' : 'Out of stock'}\r\n                    <span\r\n                      style={{\r\n                        marginLeft: '5px',\r\n                        fontSize: '10px',\r\n                      }}\r\n                    ></span>\r\n                  </span>\r\n                </a>\r\n              )}\r\n            </>\r\n          )}\r\n        />\r\n\r\n        {/* <Column\r\n          title=\"Unit\"\r\n          dataIndex=\"unit\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        /> */}\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n\r\n        {isAccess('postCatalogue', roles) && (\r\n          <Column\r\n            className='classnameofthecolumn'\r\n            title=''\r\n            key='action'\r\n            align='right'\r\n            render={(text, record: any) => (\r\n              <Space size='middle'>\r\n                <a href='##'>\r\n                  <Tooltip placement='top' title='Edit Product'>\r\n                    <span\r\n                      className='iconSize'\r\n                      onClick={() => {\r\n                        setvisible(true);\r\n                        setactiveCategoryForEdit(record);\r\n                      }}\r\n                    >\r\n                      <EditOutlined />\r\n                    </span>\r\n                  </Tooltip>\r\n                </a>\r\n\r\n                <Popconfirm\r\n                  onConfirm={() => handleDeleteProduct(record.id)}\r\n                  title='Are you sure？'\r\n                  okText='Yes'\r\n                  cancelText='No'\r\n                >\r\n                  <span className='iconSize iconSize-danger'>\r\n                    <DeleteOutlined />\r\n                  </span>\r\n                </Popconfirm>\r\n              </Space>\r\n            )}\r\n          />\r\n        )}\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <ProductQuickEdit\r\n          productList={data}\r\n          setProductList={setProductList}\r\n          setProductEditVisible={setvisible}\r\n          productEditVisible={visible}\r\n          productDetailData={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  roles?: any;\r\n}\r\n\r\nconst ProductList = ({ roles }: Props) => {\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  const [productState, handleProductListFetch] = useHandleFetch(\r\n    {},\r\n    'productList'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const setProducts = async () => {\r\n      const products = await handleProductListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            productType: 'product',\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setProductList(products);\r\n    };\r\n    setProducts();\r\n  }, []);\r\n\r\n  console.log('myFuckingProductList', productList);\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  // console.log('productState', productState)\r\n\r\n  const handleSearch = (value) => {\r\n    if (productState.data.length > 0) {\r\n      const newProductList = productState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setProductList(newProductList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Products</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search products..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n              // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          {isAccess('postCatalogue', roles) && (\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => setAddNewCategoryVisible(true)}\r\n            >\r\n              Add New\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {productState.done && productList.length > 0 && (\r\n            <MyTable\r\n              roles={roles}\r\n              setProductList={setProductList}\r\n              data={productList}\r\n            />\r\n          )}\r\n          {productState.isLoading && <DataTableSkeleton />}\r\n          {productState.done && !(productList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '200px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Products found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {productState.done && (\r\n        <AddNewProduct\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          productList={productState.data}\r\n          setProductList={setProductList}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(ProductList);\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import libraries\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  FileImageOutlined,\r\n  FileImageTwoTone,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  EditOutlined,\r\n} from '@ant-design/icons';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\nimport {\r\n  openSuccessNotification,\r\n  openErrorNotification,\r\n} from '../../components/Notification';\r\nimport Tags from './Tags';\r\nimport Brands from './Brands';\r\nimport Categories from './Categories';\r\nimport Pricing from './Pricing';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n  model: '',\r\n  unit: '',\r\n  regular: '',\r\n  offer: '',\r\n  available: '',\r\n  minimum: '',\r\n  image: [],\r\n  url: '',\r\n  cover: '',\r\n  pricing: [],\r\n  venue: '',\r\n  date: '',\r\n  time: '',\r\n  purchaseLimit: null,\r\n  bnUnit: '',\r\n  bnName: '',\r\n  bnDescription: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  productEditVisible?: any;\r\n  setProductEditVisible?: any;\r\n  productDetailData?: any;\r\n  setProductDetailData?: any;\r\n}\r\n\r\nconst AddNewProduct = ({\r\n  productEditVisible,\r\n  setProductEditVisible,\r\n  productDetailData,\r\n  setProductDetailData,\r\n}: Props) => {\r\n  const [updateProductState, handleUpdateProductFetch] = useHandleFetch(\r\n    {},\r\n    'updateProduct'\r\n  );\r\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\r\n    {},\r\n    'productDetailById'\r\n  );\r\n  const [\r\n    attachImageToItemMultipleState,\r\n    handleAttachImageToItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [\r\n    attachImageToItemSingleState,\r\n    handleAttachImageToItemSingleFetch,\r\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [\r\n    detachImageFromItemMultipleState,\r\n    handleDetachImageFromItemMultipleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [categoryids, setcategoryIds] = useState([]);\r\n  const [tagIds, setTagIds] = useState([]);\r\n  const [brandId, setBrandId] = useState('');\r\n  const [pricing, setPricing] = useState([]);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [date, setDateFeild] = useState('');\r\n  const [time, setTimeFeild] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [bnDescription, setBNDescription] = useState('');\r\n  const [metaTags, setMetaTags] = useState([]);\r\n  const [bnMetaTags, setBnMetaTags] = useState([]);\r\n  const [editpricingItem, setEditPricingItem] = useState({});\r\n  const [pricingTagActiveKey, setpricingTagActiveKey] = useState('2');\r\n  const [isPricingEditActive, seTisPricingEditActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      await handleProductDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: productDetailData.id,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [productDetailData]);\r\n\r\n  useEffect(() => {\r\n    if (productDetailData && productDetailData.brand) {\r\n      setBrandId(productDetailData.brand['id']);\r\n    } else {\r\n      setBrandId('');\r\n    }\r\n    if (\r\n      productDetailData &&\r\n      productDetailData.tags &&\r\n      productDetailData.tags.length > 0\r\n    ) {\r\n      // const tagIds = productDetailData.tags.map(item => item.id);\r\n      setSelectedTags(productDetailData.tags);\r\n    } else {\r\n      setSelectedTags([]);\r\n    }\r\n    if (\r\n      productDetailData &&\r\n      productDetailData.category &&\r\n      productDetailData.category.length > 0\r\n    ) {\r\n      const categoryIds = productDetailData.category.map((item) => item.id);\r\n      setCategoryOptions(categoryIds);\r\n    } else {\r\n      setCategoryOptions([]);\r\n    }\r\n\r\n    if (\r\n      productDetailData &&\r\n      productDetailData.pricing &&\r\n      productDetailData.pricing\r\n    ) {\r\n      setPricing(productDetailData.pricing);\r\n    } else {\r\n      setPricing([]);\r\n    }\r\n\r\n    if (productDetailData && productDetailData.date && productDetailData.date) {\r\n      setDateFeild(productDetailData.date);\r\n    } else {\r\n      setDateFeild('');\r\n    }\r\n\r\n    if (productDetailData && productDetailData.time && productDetailData.time) {\r\n      setTimeFeild(productDetailData.time);\r\n    } else {\r\n      setTimeFeild('');\r\n    }\r\n\r\n    if (productDetailData && productDetailData.description) {\r\n      setDescription(productDetailData.description);\r\n    } else {\r\n      setDescription('');\r\n    }\r\n\r\n    if (\r\n      productDetailData &&\r\n      productDetailData.bn &&\r\n      productDetailData.bn['description']\r\n    ) {\r\n      setBNDescription(productDetailData.bn['description']);\r\n    } else {\r\n      setBNDescription('');\r\n    }\r\n  }, [productDetailData]);\r\n\r\n  useEffect(() => {\r\n    if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n      const images = productDetailState.data.image;\r\n      let mahImages = [];\r\n\r\n      if (images && images.length > 0) {\r\n        mahImages = images;\r\n      }\r\n\r\n      if (\r\n        productDetailState.data.cover &&\r\n        productDetailState.data.cover['id']\r\n      ) {\r\n        const ixists = images.find(\r\n          (item) => item.id === productDetailState.data.cover['id']\r\n        );\r\n        if (!ixists) {\r\n          mahImages = [productDetailState.data.cover, ...mahImages];\r\n        }\r\n\r\n        setCoverImageId(productDetailState.data.cover['id']);\r\n      }\r\n\r\n      // @ts-ignore\r\n      setmyImages(mahImages);\r\n    }\r\n  }, [productDetailState]);\r\n\r\n  useEffect(() => {\r\n    console.log('thumnail', myImages);\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      console.log('thumnail2', myImages);\r\n\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'product',\r\n          itemId: productDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'product',\r\n          itemId: productDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    console.log('thumbnailRes', thumbnailRes);\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n      // const positionInBrand = () => {\r\n      //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n\r\n      // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n      // if (prevItem) {\r\n      //     console.log('prevItem--', prevItem, 'image--', image);\r\n      //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n      //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n      //     setProductList(updateProductList);\r\n\r\n      // }\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const makeEmptyCategoryOptions = (setEmpty) => {\r\n    setEmpty([]);\r\n  };\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n      const aboutToUpdatedImageIds = [];\r\n\r\n      if (imagesIds && imagesIds.length > 0) {\r\n        imagesIds.forEach((imageId) => {\r\n          if (productDetailData && productDetailData['image']) {\r\n            if (!productDetailData['image'].includes(imageId)) {\r\n              aboutToUpdatedImageIds.push(imageId);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n        await handleAttachImageToItemMultipleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              collection: 'product',\r\n              itemId: productDetailData.id,\r\n            },\r\n          },\r\n          body: {\r\n            image: aboutToUpdatedImageIds,\r\n          },\r\n        });\r\n      } else if (\r\n        aboutToUpdatedImageIds[0] &&\r\n        aboutToUpdatedImageIds.length < 1\r\n      ) {\r\n        await handleAttachImageToItemSingleFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              imageId: aboutToUpdatedImageIds[0].id,\r\n              collection: 'product',\r\n              itemId: productDetailData.id,\r\n            },\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    const updatedProductRes = await handleUpdateProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: productDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: description,\r\n        model: values.model,\r\n        unit: values.unit,\r\n        category: categoryOptions,\r\n        tags: tagIds,\r\n        brand: brandId,\r\n        image: imagesIds,\r\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n        pricing: pricing,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: metaTags.join(','),\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnMetaTags.join(','),\r\n          name: values.bnName.trim(),\r\n          unit: values.metaUnit,\r\n          description: bnDescription,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updatedProductRes && updatedProductRes.status === 'ok') {\r\n      openSuccessNotification('Product Updated');\r\n      setProductEditVisible(false);\r\n      setProductDetailData({\r\n        // @ts-ignore\r\n        ...updatedProductRes,\r\n        category: productDetailData.category,\r\n        brand: productDetailData.brand,\r\n        tags: productDetailData.tags,\r\n        cover: productDetailData.cover,\r\n        image: productDetailData.image,\r\n      });\r\n\r\n      console.log('updatedProductRes', updatedProductRes);\r\n      // setProductList([...productList, {\r\n      //     id: updatedProductRes['id'] || '',\r\n      //     key: updatedProductRes['id'] || '',\r\n      //     name: updatedProductRes['name'] || '',\r\n      //     description: updatedProductRes['description'] || '',\r\n      //     // @ts-ignore\r\n      //     ...updatedProductRes\r\n      // }])\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setPricing([]);\r\n      setTagIds([]);\r\n      setSelectedTags([]);\r\n      setBrandId('');\r\n      setcategoryIds([]);\r\n      setCategoryOptions([]);\r\n      actions.resetForm();\r\n    } else {\r\n      // openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!updateProductState['isLoading']) {\r\n      const error = updateProductState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [updateProductState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setProductEditVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !values.name ||\r\n      !(pricing.length > 0) ||\r\n      !(categoryOptions.length > 0) ||\r\n      !isValid\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleDeleteFromSelectedImage = () => {};\r\n\r\n  const handleThumbnailImageDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myThumbnailImage &&\r\n      myThumbnailImage.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    if (newImages.length > 0) {\r\n      setmyThumbnailImage(newImages);\r\n    } else setmyThumbnailImage(false);\r\n  };\r\n\r\n  const handleUpdatePricing = (priceItem) => {\r\n    const positionInPricing = () => {\r\n      return pricing.map((item) => item.id).indexOf(priceItem.id);\r\n    };\r\n\r\n    const index = positionInPricing();\r\n\r\n    // @ts-ignore\r\n    const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\r\n    const updatePricingList = [\r\n      ...pricing.slice(0, index),\r\n      updatedItem,\r\n      ...pricing.slice(index + 1),\r\n    ];\r\n\r\n    setPricing(updatePricingList);\r\n\r\n    message.info('Product Pricing Updated');\r\n    seTisPricingEditActive(true);\r\n    setpricingTagActiveKey('2');\r\n  };\r\n\r\n  const handleEditPricing = (id) => {\r\n    seTisPricingEditActive(true);\r\n    const pricingItem = pricing.find((item) => item.id === id);\r\n    if (pricingItem) {\r\n      setEditPricingItem(pricingItem);\r\n    }\r\n  };\r\n\r\n  const handleAddPricing = (priceItem) => {\r\n    setPricing([\r\n      {\r\n        ...priceItem,\r\n        id: pricing.length,\r\n      },\r\n      ...pricing,\r\n    ]);\r\n    message.info('Product Pricing Added');\r\n  };\r\n\r\n  const handleDeletePricing = (id) => {\r\n    const newPricing = pricing.filter((item) => item.id !== id);\r\n    setPricing(newPricing);\r\n    message.info('Product Pricing Deleted');\r\n  };\r\n\r\n  const isCategoryInValid = () => {\r\n    if (\r\n      updateProductState.error['error']['category'] &&\r\n      !categoryids &&\r\n      categoryids.length\r\n    ) {\r\n      return true;\r\n    } else if (categoryids && categoryids.length > 0) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (date, dateString) => {\r\n    setDateFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  console.log('productDetailData', productDetailData);\r\n  console.log('productDetailState', productDetailState);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      productDetailState.data &&\r\n      Object.keys(productDetailState.data).length > 0\r\n    ) {\r\n      const metaTags = productDetailState.data.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags = productDetailState.data.bn['metaTags'].split(',');\r\n      setMetaTags(metaTags || []);\r\n      setBnMetaTags(bnMetaTags || []);\r\n    }\r\n  }, [productDetailState['done']]);\r\n\r\n  console.log('BnproductDetailData', productDetailData);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...{\r\n          ...productDetailData,\r\n          ...(productDetailState['data'] &&\r\n            Object.keys(productDetailState['data']).length > 0 &&\r\n            productDetailState['data']['bn'] && {\r\n              bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n              bnMetaDescription:\r\n                productDetailState['data']['bn'].metaDescription,\r\n              bnName: productDetailState['data']['bn'].name,\r\n              metaUnit: productDetailState['data']['bn'].unit,\r\n              bnDescription: productDetailState['data']['bn'].description,\r\n            }),\r\n        },\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: 0,\r\n              padding: 0,\r\n            }}\r\n            width={'70vw'}\r\n            title='Product Edit'\r\n            visible={productEditVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            destroyOnClose={true}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <section className='addProductGridContainer'>\r\n              <div className='addProductGridContainer__left'>\r\n                <div className='addProductGridContainer__name'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Product Information</h3>\r\n                    <div\r\n                      className={\r\n                        values.name && values.name.length > 2\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Name'\r\n                      value={values.name}\r\n                      placeHolder={'Rafty ox'}\r\n                      name='name'\r\n                      isError={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['name'])\r\n                      }\r\n                      errorString={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['name'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('name');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Name'\r\n                      value={values.bnName}\r\n                      placeHolder={'রাফতি অক্স'}\r\n                      name='bnName'\r\n                      isError={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnName'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnName'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnName');\r\n                      }}\r\n                    />\r\n\r\n                    {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\r\n                    {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                    <Input\r\n                      label='Unit'\r\n                      value={values.unit}\r\n                      name='unit'\r\n                      placeHolder={'KG,POUND,GM'}\r\n                      isError={\r\n                        (touched.unit && errors.unit) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['unit'])\r\n                      }\r\n                      errorString={\r\n                        (touched.unit && errors.unit) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['unit'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('unit');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Unit'\r\n                      value={values.bnUnit}\r\n                      placeHolder={'কেজি,গ্রাম'}\r\n                      name='bnUnit'\r\n                      isError={\r\n                        (touched.bnUnit && errors.bnUnit) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnUnit'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnUnit && errors.bnUnit) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnUnit'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnUnit');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Model Number'\r\n                      value={values.model}\r\n                      name='model'\r\n                      isError={\r\n                        (touched.model && errors.model) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['model'])\r\n                      }\r\n                      errorString={\r\n                        (touched.model && errors.model) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['model'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('model');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>Description</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={description}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setDescription(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>BN Description</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={bnDescription}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBNDescription(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    >\r\n                      {' '}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__price'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Product Pricing *</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        pricing && pricing.length > 0\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Tabs\r\n                      animated={true}\r\n                      tabPosition='top'\r\n                      type='card'\r\n                      activeKey={pricingTagActiveKey}\r\n                      onChange={(value) => {\r\n                        setpricingTagActiveKey(`${value}`);\r\n                      }}\r\n                    >\r\n                      <TabPane tab='Add Variation' key='1'>\r\n                        <Pricing\r\n                          handleAddPricing={handleAddPricing}\r\n                          pricingItem={editpricingItem}\r\n                          handleUpdatePricing={handleUpdatePricing}\r\n                          isPricingEditActive={isPricingEditActive}\r\n                        />\r\n                      </TabPane>\r\n                      <TabPane tab='Pricing List' key='2'>\r\n                        <div className='addProductGridContainer__item-body-pricingContainer'>\r\n                          {pricing.length > 0 &&\r\n                            pricing.map((item) => {\r\n                              return (\r\n                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n                                    {/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n                                    <span\r\n                                      className='pricingEditIcon'\r\n                                      onClick={() => {\r\n                                        handleEditPricing(item.id);\r\n                                        setpricingTagActiveKey('1');\r\n                                      }}\r\n                                    >\r\n                                      <EditOutlined />\r\n                                    </span>\r\n                                    <span\r\n                                      className='pricingDeleteIcon'\r\n                                      onClick={() =>\r\n                                        handleDeletePricing(item.id)\r\n                                      }\r\n                                    >\r\n                                      <DeleteOutlined />\r\n                                    </span>\r\n                                  </div>\r\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                    <div>\r\n                                      <h3>Price</h3>\r\n                                      <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                        {item.price.offer ? (\r\n                                          <>\r\n                                            <h4>{item.price.offer}</h4>/\r\n                                            <h5\r\n                                              style={{\r\n                                                textDecoration: 'line-through',\r\n                                              }}\r\n                                            >\r\n                                              {item.price.regular}\r\n                                            </h5>\r\n                                          </>\r\n                                        ) : (\r\n                                          <h4>{item.price.regular}</h4>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n\r\n                                    {item.stock && item.stock['available'] && (\r\n                                      <div>\r\n                                        <Badge\r\n                                          overflowCount={999}\r\n                                          count={item.stock.available}\r\n                                        >\r\n                                          <h3>Stock</h3>\r\n                                        </Badge>\r\n                                        {item.stock['minimum'] && (\r\n                                          <>\r\n                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                              <div>\r\n                                                <h6>\r\n                                                  min\r\n                                                  <Badge\r\n                                                    className='site-badge-count-4'\r\n                                                    overflowCount={999}\r\n                                                    count={item.stock.minimum}\r\n                                                  />\r\n                                                </h6>\r\n                                              </div>\r\n                                            </div>\r\n                                          </>\r\n                                        )}\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n\r\n                                  {item.attribute &&\r\n                                    Object.values(item.attribute).length >\r\n                                      0 && (\r\n                                      <>\r\n                                        <h3>Attributes</h3>\r\n                                        <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                          {item.attribute &&\r\n                                            Object.keys(item.attribute).length >\r\n                                              0 &&\r\n                                            Object.keys(item.attribute).map(\r\n                                              (attributeItem) => {\r\n                                                return (\r\n                                                  <div>\r\n                                                    <h6>{attributeItem}</h6>\r\n                                                    <h4>\r\n                                                      {\r\n                                                        item.attribute[\r\n                                                          attributeItem\r\n                                                        ]\r\n                                                      }\r\n                                                    </h4>\r\n                                                  </div>\r\n                                                );\r\n                                              }\r\n                                            )}\r\n                                        </div>\r\n                                      </>\r\n                                    )}\r\n                                </div>\r\n                              );\r\n                            })}\r\n\r\n                          {!(pricing.length > 0) && (\r\n                            <div\r\n                              style={{\r\n                                width: '100%',\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                              }}\r\n                            >\r\n                              <Empty\r\n                                description='No Pricing added'\r\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </TabPane>\r\n                    </Tabs>\r\n\r\n                    <div className='addProductGridContainer__item-body-container'></div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Image</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      padding: '10px',\r\n                    }}\r\n                    className='aboutToUploadImagesContainer'\r\n                  >\r\n                    {productDetailState.isLoading && (\r\n                      <div\r\n                        style={{\r\n                          padding: '20px 0',\r\n                        }}\r\n                      >\r\n                        <Spin />\r\n                      </div>\r\n                    )}\r\n                    {productDetailState.done && (\r\n                      <>\r\n                        {myImages &&\r\n                          // @ts-ignore\r\n                          myImages.length > 0 &&\r\n                          myImages.map((image, index) => {\r\n                            return (\r\n                              <div className='aboutToUploadImagesContainer__item'>\r\n                                <div\r\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                  onClick={() => {\r\n                                    setCoverImageId(image.id);\r\n                                    handleSetImageAsThumnail(image);\r\n                                  }}\r\n                                >\r\n                                  <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n\r\n                                <span\r\n                                  onClick={() => {\r\n                                    handleImagesDelete(image.id);\r\n                                    handleDetachSingleImage(image.id);\r\n                                  }}\r\n                                  className='aboutToUploadImagesContainer__item-remove'\r\n                                >\r\n                                  <CloseOutlined />\r\n                                </span>\r\n\r\n                                {coverImageId === image.id ? (\r\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                  </span>\r\n                                ) : (\r\n                                  !coverImageId &&\r\n                                  index === 0 && (\r\n                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                      <CheckOutlined />\r\n                                    </span>\r\n                                  )\r\n                                )}\r\n                              </div>\r\n                            );\r\n                          })}\r\n\r\n                        <Tooltip title={'Attach images'}>\r\n                          <div\r\n                            onClick={() => {\r\n                              setvisible(true);\r\n                              setisModalOpenForImages(true);\r\n                              setisModalOpenForThumbnail(false);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem'\r\n                          >\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                              <PlusOutlined />\r\n                            </span>\r\n                          </div>\r\n                        </Tooltip>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Meta Data</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Meta title'\r\n                      value={values.metaTitle}\r\n                      placeHolder={'category...'}\r\n                      name='metaTitle'\r\n                      isError={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['metaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['metaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Meta title'\r\n                      value={values.bnMetaTitle}\r\n                      placeHolder={'ক্যাটাগড়ি...'}\r\n                      name='bnMetaTitle'\r\n                      isError={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='Meta description'\r\n                      value={values.metaDescription}\r\n                      placeholder={'meta...'}\r\n                      name='metaDescription'\r\n                      isError={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['metaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error']['metaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='BN Meta Description'\r\n                      value={values.bnMetaDescription}\r\n                      placeholder={'এইয় মেট...'}\r\n                      name='bnMetaDescription'\r\n                      isError={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error'][\r\n                            'bnMetaDescription'\r\n                          ])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          updateProductState.error['error'][\r\n                            'bnMetaDescription'\r\n                          ])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      Meta Tags (grocery,fashion)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setMetaTags}\r\n                      tags={metaTags}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setBnMetaTags}\r\n                      tags={bnMetaTags}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='addProductGridContainer__right'>\r\n                <div className='addProductGridContainer__category'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Categories</h3>\r\n\r\n                      <Tooltip\r\n                        color='red'\r\n                        visible={\r\n                          updateProductState.error['error']['category'] &&\r\n                          !(categoryids.length > 0)\r\n                        }\r\n                        placement='left'\r\n                        title={'Select at least one category'}\r\n                      >\r\n                        <div\r\n                          className={\r\n                            !(categoryids.length > 0) &&\r\n                            !updateProductState.error['error']['category']\r\n                              ? 'checkicon'\r\n                              : updateProductState.error['error']['category']\r\n                              ? 'checkicon-error'\r\n                              : 'checkicon-active'\r\n                          }\r\n                        >\r\n                          <CheckCircleOutlined />\r\n                        </div>\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Categories\r\n                        setCategoryOptions={setCategoryOptions}\r\n                        categoryOptions={categoryOptions}\r\n                        setcategoryIds={setcategoryIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__tag'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Tags</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Tags\r\n                        setSelectedTags={setSelectedTags}\r\n                        selectedTags={selectedTags}\r\n                        setTagIds={setTagIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='addProductGridContainer__brand'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Brand</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Brands\r\n                        productDetailState={productDetailState}\r\n                        brandId={brandId}\r\n                        setBrandId={setBrandId}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisible}\r\n            visible={visible}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            setmyThumbnailImage={setmyThumbnailImage}\r\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n            isModalOpenForImages={isModalOpenForImages}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*/ //\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport { EditOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n  Badge,\r\n} from 'antd';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport ProductEdit from './ProductEdit';\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  roles: any; \r\n}\r\n\r\nconst NewBrandDetail = ({roles}: Props) => {\r\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\r\n    {},\r\n    'productDetailById'\r\n  );\r\n\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const productId = params['id'];\r\n  const [productEditVisible, setProductEditVisible] = useState(false);\r\n  const [productDetailData, setProductDetailData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      const productDetailRes = await handleProductDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: productId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (productDetailRes) {\r\n        // @ts-ignore\r\n        setProductDetailData(productDetailRes);\r\n      }\r\n\r\n      console.log('productDetailRes', productDetailRes);\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [productId]);\r\n\r\n  console.log('productDetailState', productDetailState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  const getImagesInCollumn = (imgs) => {\r\n    if (!imgs[0]) return false;\r\n    imgs = imgs.map((item) => item.cover);\r\n    const columns = {};\r\n\r\n    let localIndex = 0;\r\n    let columnNumber = 0;\r\n\r\n    imgs.forEach((item, index) => {\r\n      if (localIndex < 3) {\r\n        if (columns[columnNumber]) {\r\n          columns[columnNumber] = [...columns[columnNumber], item];\r\n        } else columns[columnNumber] = [item];\r\n\r\n        localIndex = localIndex + 1;\r\n        columnNumber = columnNumber + 1;\r\n      } else {\r\n        localIndex = 0;\r\n        columnNumber = 0;\r\n        console.log('localIndex', localIndex);\r\n      }\r\n    });\r\n\r\n    return columns;\r\n  };\r\n\r\n  const row =\r\n    productDetailState.done && productDetailData && productDetailData['image']\r\n      ? getImagesInCollumn(productDetailData['image'])\r\n      : [];\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Product Detail</h3>\r\n\r\n        {productDetailState.done &&\r\n          productDetailData &&\r\n          Object.keys(productDetailData).length > 0 && (\r\n            <>\r\n              <ProductEdit\r\n                productEditVisible={productEditVisible}\r\n                setProductEditVisible={setProductEditVisible}\r\n                productDetailData={productDetailData}\r\n                setProductDetailData={setProductDetailData}\r\n              />\r\n                 {isAccess('postCatalogue',roles) && (\r\n                  <Button\r\n                  onClick={() => setProductEditVisible(true)}\r\n                  type='link'\r\n                  icon={<EditOutlined />}\r\n                >\r\n                  Edit\r\n                </Button>\r\n                 )}\r\n            \r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton\r\n        avatar\r\n        paragraph={{ rows: 3 }}\r\n        loading={productDetailState.isLoading}\r\n      >\r\n        {productDetailState.done &&\r\n          productDetailData &&\r\n          !(Object.keys(productDetailData).length > 0) && (\r\n            <Empty\r\n              description='No Product found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {productDetailState.done &&\r\n          productDetailData &&\r\n          Object.keys(productDetailData).length > 0 && (\r\n            <>\r\n              <div className='brandDetailContainer__header'>\r\n                <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                  <img\r\n                    src={\r\n                      productDetailData['cover'] &&\r\n                      productDetailData['cover']['cover']\r\n                    }\r\n                    alt=''\r\n                  />\r\n                </div>\r\n                <div className='brandDetailContainer__header-info'>\r\n                  <h2>{productDetailData['name']}</h2>\r\n                  <h4>{productDetailData['price']}</h4>\r\n                  <h3>{productDetailData['description']}</h3>\r\n\r\n                  {productDetailData['url'] && (\r\n                    <h3>\r\n                      URL:\r\n                      <span>{productDetailData['url']}</span>\r\n                    </h3>\r\n                  )}\r\n\r\n                  {/* \r\n                                {productDetailData['tags'] && productDetailData['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailData['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                  {productDetailData['category'] &&\r\n                    productDetailData['category'].length > 0 && (\r\n                      <>\r\n                        <h3>\r\n                          CATEGORIES:\r\n                          {productDetailData['category'].map((cat) => {\r\n                            return (\r\n                              <span\r\n                                onClick={() =>\r\n                                  history.push(`/admin/category/${cat.id}`)\r\n                                }\r\n                              >\r\n                                {cat.name}\r\n                              </span>\r\n                            );\r\n                          })}\r\n                        </h3>\r\n                      </>\r\n                    )}\r\n                </div>\r\n              </div>\r\n\r\n              {productDetailData['icon'] && (\r\n                <>\r\n                  <div className='brandDetailContainer__heading'>\r\n                    <h3>Icon</h3>\r\n                  </div>\r\n\r\n                  <div className='brandDetailContainer__inlineBox'>\r\n                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                      <img\r\n                        src={\r\n                          productDetailData['icon'] && productDetailData['icon']\r\n                        }\r\n                        alt=''\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      marginBottom: '25px',\r\n                    }}\r\n                  ></div>\r\n                </>\r\n              )}\r\n\r\n              {productDetailData['pricing'] &&\r\n                productDetailData['pricing'].length > 0 && (\r\n                  <>\r\n                    <div className='brandDetailContainer__heading'>\r\n                      <h3>Pricing</h3>\r\n                    </div>\r\n\r\n                    <div className='brandDetailContainer__pricing'>\r\n                      <div className='addProductGridContainer__item-body-pricingContainer'>\r\n                        {productDetailData['pricing'].map((item) => {\r\n                          return (\r\n                            <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n                              <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                <div>\r\n                                  <h3>Price</h3>\r\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                    {item.price.offer ? (\r\n                                      <>\r\n                                        <h4>{item.price.offer}</h4>/\r\n                                        <h5\r\n                                          style={{\r\n                                            textDecoration: 'line-through',\r\n                                          }}\r\n                                        >\r\n                                          {item.price.regular}\r\n                                        </h5>\r\n                                      </>\r\n                                    ) : (\r\n                                      <h4>{item.price.regular}</h4>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n\r\n                                {item.stock && (\r\n                                  <div>\r\n                                    <Badge\r\n                                      overflowCount={999}\r\n                                      count={item.stock.available}\r\n                                    >\r\n                                      <h3>Stock</h3>\r\n                                    </Badge>\r\n                                    <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                      <div>\r\n                                        <h6>\r\n                                          min\r\n                                          <Badge\r\n                                            className='site-badge-count-4'\r\n                                            overflowCount={999}\r\n                                            count={item.stock.minimum}\r\n                                          />\r\n                                        </h6>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n\r\n                              {item.attribute &&\r\n                                Object.values(item.attribute).length > 0 && (\r\n                                  <>\r\n                                    <h3>Attributes</h3>\r\n                                    <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                      {item.attribute &&\r\n                                        Object.keys(item.attribute).length >\r\n                                          0 &&\r\n                                        Object.keys(item.attribute).map(\r\n                                          (attributeItem) => {\r\n                                            return (\r\n                                              <div>\r\n                                                <h6>{attributeItem}</h6>\r\n                                                <h4>\r\n                                                  {\r\n                                                    item.attribute[\r\n                                                      attributeItem\r\n                                                    ]\r\n                                                  }\r\n                                                </h4>\r\n                                              </div>\r\n                                            );\r\n                                          }\r\n                                        )}\r\n                                    </div>\r\n                                  </>\r\n                                )}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '25px',\r\n                      }}\r\n                    ></div>\r\n                  </>\r\n                )}\r\n\r\n              {productDetailData['image'] &&\r\n                productDetailData['image'].length > 0 && (\r\n                  <>\r\n                    <div className='brandDetailContainer__heading'>\r\n                      <h3>Image Gallary</h3>\r\n                    </div>\r\n\r\n                    <div className='brandDetailContainer__imageGallary'>\r\n                      <div className='imgGallaryContainer'>\r\n                        <div className='imgGallary-row'>\r\n                          {row &&\r\n                            Object.keys(row).map((column) => {\r\n                              return (\r\n                                <div className='imgGallary-column'>\r\n                                  {row[column] &&\r\n                                    row[column].map((img) => {\r\n                                      return (\r\n                                        <img\r\n                                          src={img}\r\n                                          style={{\r\n                                            width: '100%',\r\n                                          }}\r\n                                        />\r\n                                      );\r\n                                    })}\r\n                                </div>\r\n                              );\r\n                            })}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '25px',\r\n                      }}\r\n                    ></div>\r\n                  </>\r\n                )}\r\n\r\n              {productDetailData['brand'] &&\r\n                Object.keys(productDetailData['brand']).length > 0 && (\r\n                  <>\r\n                    <div className='brandDetailContainer__heading'>\r\n                      <h3>Brand</h3>\r\n                    </div>\r\n\r\n                    <div\r\n                      onClick={() =>\r\n                        history.push(\r\n                          `/admin/brand/${productDetailData['brand']['id']}`\r\n                        )\r\n                      }\r\n                      className='brandDetailContainer__brand'\r\n                    >\r\n                      <div className='brandDetailContainer__brand-coverbox'>\r\n                        <img\r\n                          src={\r\n                            productDetailData['brand']['cover'] &&\r\n                            productDetailData['brand']['cover']\r\n                          }\r\n                          alt=''\r\n                        />\r\n                      </div>\r\n                      <div className='brandDetailContainer__brand-info'>\r\n                        <h2>{productDetailData['brand']['name']}</h2>\r\n                        <h3>{productDetailData['brand']['description']}</h3>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '25px',\r\n                      }}\r\n                    ></div>\r\n                  </>\r\n                )}\r\n\r\n              {productDetailData['primaryCategory'] &&\r\n                Object.keys(productDetailData['primaryCategory']).length >\r\n                  0 && (\r\n                  <>\r\n                    <div className='brandDetailContainer__heading'>\r\n                      <h3>Primary Category</h3>\r\n                    </div>\r\n\r\n                    <div\r\n                      onClick={() =>\r\n                        history.push(\r\n                          `/admin/category/${productDetailData['primaryCategory']['id']}`\r\n                        )\r\n                      }\r\n                      className='brandDetailContainer__brand'\r\n                    >\r\n                      <div className='brandDetailContainer__brand-coverbox'>\r\n                        <img\r\n                          src={\r\n                            productDetailData['primaryCategory']['cover'] &&\r\n                            productDetailData['primaryCategory']['cover']\r\n                          }\r\n                          alt=''\r\n                        />\r\n                      </div>\r\n                      <div className='brandDetailContainer__brand-info'>\r\n                        <h2>{productDetailData['primaryCategory']['name']}</h2>\r\n                        <h3>\r\n                          {productDetailData['primaryCategory']['description']}\r\n                        </h3>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '25px',\r\n                      }}\r\n                    ></div>\r\n                  </>\r\n                )}\r\n            </>\r\n          )}\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  roles: state.globalState,\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(NewBrandDetail);\r\n\r\n\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagList?:any; \r\n    tagList?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagList,tagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n    const [tags,setTags] = useState([]);\r\n    const [bnTags,setBnTags] = useState([]);\r\n    \r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n     \r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\t\t\tsetTagEditVisible(false)\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }; \r\n\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\r\n    //         const metaTags = tagDetailData.metaTags.split(','); \r\n\r\n    //         console.log('localMetaTags',metaTags);\r\n           \r\n    //         const bnMetaTags = tagDetailData.bn['metaTags'].split(','); \r\n\r\n    //         setTags(metaTags)\r\n    //         setBnTags(bnMetaTags)\r\n    //     }\r\n\r\n    // },[]); \r\n\r\n\r\n    console.log('tagDetailData',tagDetailData);\r\n\r\n\r\n \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n                ...initialValues, \r\n                ...tagDetailData,\r\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\r\n                    bnMetaTitle: tagDetailData['bn']\r\n                    && tagDetailData['bn'].metaTitle\r\n                    && tagDetailData['bn'].metaTitle,\r\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\r\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\r\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\r\n                  })\r\n            }}\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                        \tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n                            title=\"Tag Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n                        >\r\n                                 \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([{\r\n                id: addTagRes['_id'] || '',\r\n                key: addTagRes['_id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            },...tagList])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport TagQuickEdit from \"./TagQuickEdit\"\r\nimport AddNewTag from \"./AddNewTag\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList, roles }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t{isAccess('postCatalogue',roles) && (\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t</Space>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n                 )}\r\n\r\n\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <TagQuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\ttagEditVisible={visible}\r\n\t\t\t\tsetTagEditVisible={setvisible}\r\n\t\t\t\ttagDetailData={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { \r\n\troles?:any\r\n}\r\n\r\nconst TagList = ({roles }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({\r\n\t\t\t\turlOptions:{\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t  sortItem: 'added',\r\n\t\t\t\t\t  sortOrderValue: '-1'\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tTags\r\n          \t\t\t\t</h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search tags..\"\r\n\t\t\t\t\t\t\tonChange={e => handleSearch(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{isAccess('postCatalogue',roles) && (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n                 )}\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\troles={roles}\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '200px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewTag\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    roles: state.globalState,\r\n  })\r\n  \r\n  // @ts-ignore\r\n  export default connect(mapStateToProps, null)(TagList);\r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n    const [tags,setTags] = useState([]);\r\n    const [bnTags,setBnTags] = useState([]);\r\n    \r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n                }\r\n                \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n                description: values.description,\r\n            })\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\t\t\tsetTagEditVisible(false)\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }; \r\n\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\r\n    //         const metaTags = tagDetailData.metaTags.split(','); \r\n\r\n    //         console.log('localMetaTags',metaTags);\r\n           \r\n    //         const bnMetaTags = tagDetailData.bn['metaTags'].split(','); \r\n\r\n    //         setTags(metaTags)\r\n    //         setBnTags(bnMetaTags)\r\n    //     }\r\n\r\n    // },[]); \r\n\r\n\r\n    console.log('tagDetailData',tagDetailData);\r\n\r\n\r\n \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n                ...initialValues, \r\n                ...tagDetailData,\r\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\r\n                    bnMetaTitle: tagDetailData['bn']\r\n                    && tagDetailData['bn'].metaTitle\r\n                    && tagDetailData['bn'].metaTitle,\r\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\r\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\r\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\r\n                  })\r\n            }}\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                        \tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n                            title=\"Tag Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n                        >\r\n                                 \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({roles}: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n\r\n                        \r\n\t\t\t\t\t{isAccess('postCatalogue',roles) && (\r\n\t\t\t\t\t  <Button\r\n                      onClick={() => setTagEditVisible(true)}\r\n                      type='link'\r\n                      icon={<EditOutlined />}\r\n                  >\r\n                      Edit\r\n                </Button>\r\n                 )}\r\n                    </>\r\n                )}\r\n\r\n                \r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}; \r\n\r\nconst mapStateToProps = state => ({\r\n    roles: state.globalState,\r\n  })\r\n  \r\n  // @ts-ignore\r\n  export default connect(mapStateToProps, null)(NewBrandDetail);\r\n  \r\n  \r\n  \r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(productIds && productIds.length > 0){\r\n            console.log('shippingRunning')\r\n            const selecttedOptions = productIds.map(item => item.name); \r\n            setselectedOptions(selecttedOptions)\r\n        }\r\n    },[productIds]); \r\n\r\n    console.log('OrderProudctItemsProductIds',productIds); \r\n\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n                {tagState.done && tagState.data && !(tagState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Found' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { notification, Modal,Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport OrderedProductsSelectProducts from \"./OrderedProductsSelectProducts\";\r\nimport OrderedProductsSelectedProductItems from \"./OrderedProductsSelectedProductItems\";\r\nimport FreeSelectProducts from \"./FreeSelectProducts\";\r\nimport FreeSelectedProductItems from \"./FreeSelectedProductItems\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"name\": \"\",\r\n    \"code\": \"\",\r\n    \"minimumOrder\": null,\r\n    \"amount\": \"\",\r\n    \"amountType\": \"\",\r\n    \"orderedProducts\": [],\r\n    \"freeDelivery\": true,\r\n    \"freeProducts\": []\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    category?:any; \r\n    setTagDetailData?:any; \r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible,category, setTagDetailData }: Props) => {\r\n\r\n    const [addCouponState, handleAddCouponStateFetch] = useHandleFetch({}, 'updateCoupon');\r\n    const [couponDetailState, handleCouponDetailFetch] = useHandleFetch({}, 'couponDetail');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n    const [freeProductIds, setFreeProductIds] = useState([]);\r\n    const [freeProductList, setFreeProductList] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleCouponDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: category.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [category]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (couponDetailState.data && Object.keys(couponDetailState.data).length > 0) {\r\n\r\n            const images = couponDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (couponDetailState.data.cover && couponDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([couponDetailState.data.cover]);\r\n                setCoverImageId(couponDetailState.data.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [couponDetailState.data]); \r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        // @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n        }) : [];\r\n        \r\n        const orderedProducts = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        // const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\r\n        //     return {\r\n        //         _id: product._id,\r\n        //         variation: product.variation,\r\n        //         quantity: product.quantity,\r\n        //     }\r\n        // }) : [];\r\n\r\n\r\n        \r\n\r\n        const addTagRes = await handleAddCouponStateFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                code: values.code,\r\n                minimumOrder: values.minimumOrder,\r\n                amount: values.amount,\r\n                amountType: values.amountType,\r\n                // freeDelivery: false,\r\n                orderedProducts: orderedProducts,\r\n                // freeProducts: freeProducts,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setAddNewCategoryVisible(false);\r\n            \r\n            setTagDetailData({\r\n\t\t\t\t...category,\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addTagRes\r\n            })\r\n            \r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (category && Object.keys(category).length > 0) {\r\n\r\n            const images = category.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (category.cover && category.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([category.cover]);\r\n                setCoverImageId(category.cover['id']);\r\n            }\r\n        }\r\n    }, [category]); \r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addCouponState['isLoading']) {\r\n            const error = addCouponState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addCouponState])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(\r\n            couponDetailState.done && couponDetailState['data'] \r\n        && Object.keys(couponDetailState['data']).length > 0\r\n         && ['orderedProducts'] && couponDetailState['data']['orderedProducts'].length > 0){\r\n            const productIds = couponDetailState['data']['orderedProducts'].map(item => item); \r\n            setProductIds(productIds); \r\n            const productList = couponDetailState['data']['orderedProducts'].map(item => {\r\n                return {\r\n                    ...item,\r\n                    _id: item._id,\r\n                    variation: item.variation,\r\n                    quantity: item.quantity,\r\n                }\r\n            }); \r\n           setProductList(productList);\r\n\r\n        }; \r\n        \r\n    },[couponDetailState])\r\n\r\n    console.log('couponDetialQuickEdit',couponDetailState);\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (freeProductIds.length > 0) {\r\n            if (freeProductIds.length > freeProductList.length) {\r\n                const variation = freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 && freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setFreeProductList([...freeProductList, {\r\n                    ...freeProductIds[freeProductIds.length - 1],\r\n                    _id: freeProductIds[freeProductIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (freeProductIds.length < freeProductList.length) {\r\n                console.log('freeProductIds', freeProductIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = freeProductList.filter(item => {\r\n                    let isTrue = false;\r\n                    freeProductIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setFreeProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setFreeProductList([]);\r\n        }\r\n        // console.log('freeProductIds', freeProductIds)\r\n\r\n\r\n    }, [freeProductIds])\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            width={'45vw'}\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Edit Coupon\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Code'\r\n                                        value={values.code}\r\n                                        name='code'\r\n                                        isError={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n\r\n                                        errorString={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('code');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <Input\r\n                                label='Minimum Order'\r\n                                value={values.minimumOrder}\r\n                                name='minimumOrder'\r\n                                isError={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n\r\n                                errorString={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('minimumOrder');\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Discount Amount'\r\n                                        value={values.amount}\r\n                                        name='amount'\r\n                                        isError={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n\r\n                                        errorString={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amount');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Discount Amount Type'\r\n                                        value={values.amountType}\r\n                                        name='amountType'\r\n                                        isError={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n\r\n                                        errorString={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amountType');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                  \r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                    Cover\r\n                                </h3>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n       \r\n\r\n\r\n                                { \r\n\t\t\t\t\t\t\t\t\t!myImages || \r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t(myImages && !(myImages && myImages.length > 0)) ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : \"\"}\r\n                               \r\n                                \r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n              \r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setProductIds}\r\n                                productIds={productIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={productList}\r\n                                setProductList={setProductList}\r\n                            />\r\n\r\n\r\n                            {/* <h3 className='inputFieldLabel'>\r\n                                Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setFreeProductIds}\r\n                                productIds={freeProductIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={freeProductList}\r\n                                setProductList={setFreeProductList}\r\n                            /> */}\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={false}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponEdit from \"./CouponEdit\";\r\nimport CouponProducts from \"./CouponProducts\";\r\nimport  moment from 'moment'\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'couponDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const res = await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if(res){\r\n                // @ts-ignore\r\n                setTagDetailData(res)\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('coupondetail', tagDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Coupon Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <CouponEdit\r\n                            addNewCategoryVisible={tagEditVisible}\r\n                            setAddNewCategoryVisible={setTagEditVisible}\r\n                            category={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n                        <div className='brandDetailContainer__header-coverContainer'>\r\n                            <img src={tagDetailData['cover'] && tagDetailData['cover']['cover']} alt=\"\" />\r\n                        </div>\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {tagDetailData['code']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                          \r\n\r\n                            {tagDetailData['amount'] && (\r\n                                <h3>\r\n                                    AMOUT:\r\n                                    <span>\r\n                                        {tagDetailData['amount']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailData['startDate'] && (\r\n                                <h3>\r\n                                    START DATE:\r\n                                    <span>\r\n                                    {moment(tagDetailData['startDate']).format('MMMM Do YYYY, h:mm:ss a')}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n\r\n                            {tagDetailData['endDate'] && (\r\n                                <h3>\r\n                                    END DATE:\r\n                                    <span>\r\n                                    {moment(tagDetailData['endDate']).format('MMMM Do YYYY, h:mm:ss a')}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Ordered Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailData && tagDetailData['orderedProducts'] && !(tagDetailData['orderedProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && Object.keys(tagDetailData).length > 0 && (\r\n                    <>\r\n                        {tagDetailData['orderedProducts'] && tagDetailData['orderedProducts'].length > 0 &&\r\n                            tagDetailData['orderedProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n            </div>\r\n\r\n            {/* {tagDetailState.done && tagDetailData && Object.keys(tagDetailData).length > 0 && tagDetailData['freeProducts'] && (\r\n                <div className='brandDetailContainer__heading'>\r\n                    <h3>\r\n                        Free Products\r\n                       </h3>\r\n                </div>\r\n            )\r\n            }\r\n\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailData && tagDetailData['freeProducts'] && !(tagDetailData['freeProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && Object.keys(tagDetailData).length > 0 && (\r\n                    <>\r\n                        {tagDetailData['freeProducts'] && tagDetailData['freeProducts'].length > 0 &&\r\n                            tagDetailData['freeProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts\r\n                                        quantity={product.quantity}\r\n                                        productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { notification, Modal,Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport OrderedProductsSelectProducts from \"./OrderedProductsSelectProducts\";\r\nimport OrderedProductsSelectedProductItems from \"./OrderedProductsSelectedProductItems\";\r\nimport FreeSelectProducts from \"./FreeSelectProducts\";\r\nimport FreeSelectedProductItems from \"./FreeSelectedProductItems\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"name\": \"\",\r\n    \"code\": \"\",\r\n    \"minimumOrder\": null,\r\n    \"amount\": \"\",\r\n    \"amountType\": \"\",\r\n    \"orderedProducts\": [],\r\n    \"freeDelivery\": true,\r\n    \"freeProducts\": []\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n    category?:any; \r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList, category }: Props) => {\r\n\r\n    const [addCouponState, handleAddCouponStateFetch] = useHandleFetch({}, 'updateCoupon');\r\n    const [couponDetailState, handleCouponDetailFetch] = useHandleFetch({}, 'couponDetail');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n    const [freeProductIds, setFreeProductIds] = useState([]);\r\n    const [freeProductList, setFreeProductList] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleCouponDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: category.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [category]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (couponDetailState.data && Object.keys(couponDetailState.data).length > 0) {\r\n\r\n            const images = couponDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (couponDetailState.data.cover && couponDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([couponDetailState.data.cover]);\r\n                setCoverImageId(couponDetailState.data.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [couponDetailState.data]); \r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        // @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n        }) : [];\r\n        \r\n        const orderedProducts = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        // const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\r\n        //     return {\r\n        //         _id: product._id,\r\n        //         variation: product.variation,\r\n        //         quantity: product.quantity,\r\n        //     }\r\n        // }) : [];\r\n\r\n\r\n        \r\n\r\n        const addTagRes = await handleAddCouponStateFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                code: values.code,\r\n                minimumOrder: values.minimumOrder,\r\n                amount: values.amount,\r\n                amountType: values.amountType,\r\n                // freeDelivery: false,\r\n                orderedProducts: orderedProducts,\r\n                // freeProducts: freeProducts,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setAddNewCategoryVisible(false);\r\n\r\n            const positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (category && Object.keys(category).length > 0) {\r\n\r\n            const images = category.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (category.cover && category.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([category.cover]);\r\n                setCoverImageId(category.cover['id']);\r\n            }\r\n        }\r\n    }, [category]); \r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addCouponState['isLoading']) {\r\n            const error = addCouponState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addCouponState])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(\r\n            couponDetailState.done && couponDetailState['data'] \r\n        && Object.keys(couponDetailState['data']).length > 0\r\n         && ['orderedProducts'] && couponDetailState['data']['orderedProducts'].length > 0){\r\n            const productIds = couponDetailState['data']['orderedProducts'].map(item => item); \r\n            setProductIds(productIds); \r\n            const productList = couponDetailState['data']['orderedProducts'].map(item => {\r\n                return {\r\n                    ...item,\r\n                    _id: item._id,\r\n                    variation: item.variation,\r\n                    quantity: item.quantity,\r\n                }\r\n            }); \r\n           setProductList(productList);\r\n\r\n        }; \r\n        \r\n    },[couponDetailState])\r\n\r\n    console.log('couponDetialQuickEdit',couponDetailState);\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (freeProductIds.length > 0) {\r\n            if (freeProductIds.length > freeProductList.length) {\r\n                const variation = freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 && freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setFreeProductList([...freeProductList, {\r\n                    ...freeProductIds[freeProductIds.length - 1],\r\n                    _id: freeProductIds[freeProductIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (freeProductIds.length < freeProductList.length) {\r\n                console.log('freeProductIds', freeProductIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = freeProductList.filter(item => {\r\n                    let isTrue = false;\r\n                    freeProductIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setFreeProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setFreeProductList([]);\r\n        }\r\n        // console.log('freeProductIds', freeProductIds)\r\n\r\n\r\n    }, [freeProductIds])\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            width={'45vw'}\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Edit Coupon\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Code'\r\n                                        value={values.code}\r\n                                        name='code'\r\n                                        isError={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n\r\n                                        errorString={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('code');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <Input\r\n                                label='Minimum Order'\r\n                                value={values.minimumOrder}\r\n                                name='minimumOrder'\r\n                                isError={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n\r\n                                errorString={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('minimumOrder');\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Discount Amount'\r\n                                        value={values.amount}\r\n                                        name='amount'\r\n                                        isError={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n\r\n                                        errorString={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amount');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Discount Amount Type'\r\n                                        value={values.amountType}\r\n                                        name='amountType'\r\n                                        isError={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n\r\n                                        errorString={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amountType');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                  \r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                    Cover\r\n                                </h3>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n       \r\n\r\n\r\n                                { \r\n\t\t\t\t\t\t\t\t\t!myImages || \r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t(myImages && !(myImages && myImages.length > 0)) ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : \"\"}\r\n                               \r\n                                \r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n              \r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setProductIds}\r\n                                productIds={productIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={productList}\r\n                                setProductList={setProductList}\r\n                            />\r\n\r\n\r\n                            {/* <h3 className='inputFieldLabel'>\r\n                                Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setFreeProductIds}\r\n                                productIds={freeProductIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={freeProductList}\r\n                                setProductList={setFreeProductList}\r\n                            /> */}\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={false}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { notification, Modal,Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport OrderedProductsSelectProducts from \"./OrderedProductsSelectProducts\";\r\nimport OrderedProductsSelectedProductItems from \"./OrderedProductsSelectedProductItems\";\r\nimport FreeSelectProducts from \"./FreeSelectProducts\";\r\nimport FreeSelectedProductItems from \"./FreeSelectedProductItems\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"name\": \"\",\r\n    \"code\": \"\",\r\n    \"minimumOrder\": null,\r\n    \"amount\": \"\",\r\n    \"amountType\": \"\",\r\n    \"orderedProducts\": [],\r\n    \"freeDelivery\": true,\r\n    \"freeProducts\": []\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addCouponState, handleAddCouponStateFetch] = useHandleFetch({}, 'addCoupon');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n    const [freeProductIds, setFreeProductIds] = useState([]);\r\n    const [freeProductList, setFreeProductList] = useState([]);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        // @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n        }) : [];\r\n        \r\n        const orderedProducts = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        // const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\r\n        //     return {\r\n        //         _id: product._id,\r\n        //         variation: product.variation,\r\n        //         quantity: product.quantity,\r\n        //     }\r\n        // }) : [];\r\n\r\n\r\n        const addTagRes = await handleAddCouponStateFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                code: values.code,\r\n                minimumOrder: values.minimumOrder,\r\n                amount: values.amount,\r\n                amountType: values.amountType,\r\n                // freeDelivery: false,\r\n                orderedProducts: orderedProducts,\r\n                // freeProducts: freeProducts,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setAddNewCategoryVisible(false);\r\n\r\n            setTagList([{\r\n                // @ts-ignore\r\n                ...addTagRes,\r\n                id: addTagRes['_id'] || '',\r\n                key: addTagRes['_id'] || '',\r\n                name: addTagRes['name'] || '',\r\n            },...tagList])\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addCouponState['isLoading']) {\r\n            const error = addCouponState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addCouponState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (freeProductIds.length > 0) {\r\n            if (freeProductIds.length > freeProductList.length) {\r\n                const variation = freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 && freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setFreeProductList([...freeProductList, {\r\n                    ...freeProductIds[freeProductIds.length - 1],\r\n                    _id: freeProductIds[freeProductIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (freeProductIds.length < freeProductList.length) {\r\n                console.log('freeProductIds', freeProductIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = freeProductList.filter(item => {\r\n                    let isTrue = false;\r\n                    freeProductIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setFreeProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setFreeProductList([]);\r\n        }\r\n        // console.log('freeProductIds', freeProductIds)\r\n\r\n\r\n    }, [freeProductIds])\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            width={'45vw'}\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Coupon\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Code'\r\n                                        value={values.code}\r\n                                        name='code'\r\n                                        isError={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n\r\n                                        errorString={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('code');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <Input\r\n                                label='Minimum Order'\r\n                                value={values.minimumOrder}\r\n                                name='minimumOrder'\r\n                                isError={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n\r\n                                errorString={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('minimumOrder');\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Discount Amount'\r\n                                        value={values.amount}\r\n                                        name='amount'\r\n                                        isError={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n\r\n                                        errorString={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amount');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Discount Amount Type'\r\n                                        value={values.amountType}\r\n                                        name='amountType'\r\n                                        isError={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n\r\n                                        errorString={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amountType');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                  \r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                    Cover\r\n                                </h3>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n       \r\n\r\n\r\n                                { \r\n\t\t\t\t\t\t\t\t\t!myImages || \r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t(myImages && !(myImages && myImages.length > 0)) ? (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t) : \"\"}\r\n                               \r\n                                \r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n              \r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setProductIds}\r\n                                productIds={productIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={productList}\r\n                                setProductList={setProductList}\r\n                            />\r\n\r\n\r\n                            {/* <h3 className='inputFieldLabel'>\r\n                                Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setFreeProductIds}\r\n                                productIds={freeProductIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={freeProductList}\r\n                                setProductList={setFreeProductList}\r\n                            /> */}\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={false}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment'\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponQuickEdit from \"./CouponQuickEdit\"\r\nimport AddNewCoupon from \"./AddNewCoupon\"\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteCoupon');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Coupon');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n    }\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n\r\n                    <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n                    className='classnameofthecolumn'\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                        <img\r\n                            onClick={() => {\r\n                            history.push(`/admin/coupon/${record.id}`)\r\n                            setactiveCategoryForEdit(record)\r\n                            }}\r\n                            src={cover} alt='cover img' style={{\r\n                            height: '40px',\r\n                            width: '40px',\r\n                            objectFit: \"contain\",\r\n                            borderRadius: '3px',\r\n                            cursor: 'pointer'\r\n                            }} />\r\n                        </>\r\n                    )}\r\n              />\r\n\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/coupon/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Code\"\r\n                    dataIndex=\"code\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n                \r\n                <Column\r\n                    title=\"Discount\"\r\n                    dataIndex=\"amount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n\r\n                {/* <Column\r\n                    title=\"Order Products\"\r\n                    dataIndex=\"orderedProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                /> */}\r\n\r\n                <Column\r\n                    title=\"Order Products\"\r\n                    dataIndex=\"orderedProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                {/* <Column\r\n                    title=\"Free Products\"\r\n                    dataIndex=\"freeProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                /> */}\r\n\r\n                <Column\r\n                    width={150}\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer',\r\n                                    fontSize: '13px'\r\n                                }}>\r\n                                    \r\n                                    {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n\r\n\r\n                />\r\n\r\n                <Column\r\n                     width={150}\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                    {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n                               \r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Edit Coupon'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <CouponQuickEdit\r\n                tagList={data}\r\n                setTagList={setTagList}\r\n                setAddNewCategoryVisible={setvisible}\r\n                addNewCategoryVisible={visible}\r\n                category={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Couponlist = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'couponList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({\r\n                urlOptions:{\r\n                    params: {\r\n                      sortItem: 'added',\r\n                      sortOrderValue: '-1'\r\n                    }\r\n                    }\r\n            });\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n    console.log('couponList', tagState)\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Coupons\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search coupon..\"\r\n                            onChange={e => handleSearch(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewCoupon\r\n                tagList={tagList}\r\n                setTagList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Couponlist;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Customer Created!',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([{\r\n\t\t\t\tid: addCustomerRes['_id'] || '',\r\n\t\t\t\tkey: addCustomerRes['_id'] || '',\r\n\t\t\t\tname: addCustomerRes['firstName'] + ' ' + addCustomerRes['lastName'],\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t},...customerList])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address 2'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // firstName: Yup.string()\r\n    //   .label('Firstname')\r\n    //   .required()\r\n    //   .min(2, 'First name must have at least 2 characters '),\r\n    // lastName: Yup.string()\r\n    //   .label('Lastname')\r\n    //   .required()\r\n    //   .min(2, 'Lastname must have at least 2 characters '),\r\n    // phone: Yup.string()\r\n    //   .required('Please tell us your mobile number.')\r\n    //   .max(13, 'Please enter a valid mobile number.'),\r\n    // password: Yup.string()\r\n    //   .label('Password')\r\n    //   .required()\r\n    //   .min(6, 'Password must have at least 6 characters'),\r\n    // address1: Yup.string()\r\n    //   .label('Address line 1')\r\n    //   .required()\r\n    //   .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    // email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Customer Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue || customer.country,\r\n            city: selectedCityValue || customer.city,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, customerList[index], { ...updateCustomerRes, \r\n\t\t\t\t\tname: updateCustomerRes.firstName + ' ' + updateCustomerRes.lastName,\r\n\t\t\t\t});\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t  setvisible(false)\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  \r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!updateCustomerState['isLoading']) {\r\n\t\t  const error = updateCustomerState['error'];\r\n\t\t  if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\tif (error['error']['registerError']) {\r\n\t\t\t  // setServerErrors(error['error']['registerError']);\r\n\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t  // setServerErrors(error['error']['checkoutError']);\r\n\t\t\t} else {\r\n\t\t\t  // setServerErrors(error['error']);\r\n\t\t\t}\r\n\t\r\n\t\t\tconst errors =\r\n\t\t\t  Object.values(error['error']).length > 0\r\n\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t: [];\r\n\t\t\terrors.forEach((err, i) => {\r\n\t\t\t  if (typeof err === 'string') {\r\n\t\t\t\topenErrorNotification(err);\r\n\t\t\t  } else if (typeof err === 'object') {\r\n\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t  const errs = Object.values(err);\r\n\t\t\t\t  errs.forEach((err) => {\r\n\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t  });\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t});\r\n\t\t  }\r\n\t\t}\r\n\t\r\n\t\tif (!updateCustomerState['isLoading'] && Object.keys(updateCustomerState.data).length > 0) {\r\n\t\t  if (updateCustomerState['data']['status'] === 'ok') {\r\n\t\t\t// openSuccessNotification('Order Created Successfully');\r\n\t\t\t// history.push({\r\n\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t//   state: checkoutState['data']\r\n\t\t\t// })\r\n\t\t\t// clearCart();\r\n\t\t\t// setIsModalShown(true);\r\n\t\t  }\r\n\t\t}\r\n\t  }, [updateCustomerState]);\r\n\t\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Customer Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\t// disabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address 2'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  Badge,\r\n  Menu,\r\n  Dropdown,\r\n  notification,\r\n  Space,\r\n  Select,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  Modal,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EditFilled,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewCustomer from './AddNewCustomer';\r\nimport QuickEdit from './QuickEdit';\r\nimport Empty from '../../components/Empty';\r\nimport moment from 'moment';\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst { Option } = Select;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setCustomerList?: any;\r\n}\r\n\r\nconst MyTable = ({ data, setCustomerList }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'deleteCustomer'\r\n  );\r\n  const handleDeleteCustomer = async (id) => {\r\n    const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteCustomerRes && deleteCustomerRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Customer');\r\n      const newCustomerList = data.filter((item) => item.id !== id);\r\n      setCustomerList(newCustomerList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/customer/${record.id}`);\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Phone'\r\n          dataIndex='phone'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        {/* <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n            /> */}\r\n\r\n        <Column\r\n          title='Dealer'\r\n          dataIndex='dealerName'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  // go to dealer detail\r\n                  // history.push(`/admin/dealer/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Order'\r\n          dataIndex='orderCount'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Total Price'\r\n          dataIndex='totalOrderPrice'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          width={150}\r\n          title='Created'\r\n          dataIndex='created'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm a')}</h5>\r\n            </Space>\r\n          )}\r\n        />\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <a href='##'>\r\n                <Tooltip placement='top' title='Edit Customer'>\r\n                  <span\r\n                    className='iconSize'\r\n                    onClick={() => {\r\n                      setvisible(true);\r\n                      setactiveCategoryForEdit(record);\r\n                    }}\r\n                  >\r\n                    <EditOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteCustomer(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          customerList={data}\r\n          setCustomerList={setCustomerList}\r\n          setvisible={setvisible}\r\n          visible={visible}\r\n          customer={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst CustomerList = ({ history }: Props) => {\r\n  const [customerList, setCustomerList] = useState([]);\r\n\r\n  const [customerState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'customerList'\r\n  );\r\n  const [orderStatusFilterValue, setorderStatusFilterValue] = useState('');\r\n\r\n  console.log('customerList', customerList);\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const getSorttingvalue = () => {\r\n        switch (orderStatusFilterValue) {\r\n          case 'newFirst':\r\n            return {\r\n              sortItem: 'added',\r\n              sortOrderValue: '-1',\r\n            };\r\n            break;\r\n          case 'orderCountHigh':\r\n            return {\r\n              sortItem: 'orderCount',\r\n              sortOrderValue: '-1',\r\n            };\r\n            break;\r\n          case 'orderCountLow':\r\n            return {\r\n              sortItem: 'orderCount',\r\n              sortOrderValue: '1',\r\n            };\r\n            break;\r\n\r\n          case 'totalPriceHigh':\r\n            return {\r\n              sortItem: 'totalPrice',\r\n              sortOrderValue: '-1',\r\n            };\r\n            break;\r\n\r\n          case 'totalPriceLow':\r\n            return {\r\n              sortItem: 'totalPrice',\r\n              sortOrderValue: '1',\r\n            };\r\n            break;\r\n\r\n          default:\r\n            return {\r\n              sortItem: 'added',\r\n              sortOrderValue: '-1',\r\n            };\r\n        }\r\n      };\r\n      const customers = await handleCustomerListFetch({\r\n        urlOptions: {\r\n          params: getSorttingvalue(),\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setCustomerList(customers);\r\n    };\r\n    setCustomers();\r\n  }, [orderStatusFilterValue]);\r\n\r\n  const handleSearch = (value) => {\r\n    if (customerState.data.length > 0) {\r\n      const newCustomerList = customerState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setCustomerList(newCustomerList);\r\n    }\r\n  };\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  // console.log('customerState',customerState)\r\n\r\n  const orderFilteringOption = [\r\n    {\r\n      name: 'New first',\r\n      value: 'newFirst',\r\n    },\r\n    {\r\n      name: 'Order count (high > low)',\r\n      value: 'orderCountHigh',\r\n    },\r\n    {\r\n      name: 'Order count (low < high)',\r\n      value: 'orderCountLow',\r\n    },\r\n    {\r\n      name: 'Total price (high > low)',\r\n      value: 'totalPriceHigh',\r\n    },\r\n    {\r\n      name: 'Total price (low < high)',\r\n      value: 'totalPriceLow',\r\n    },\r\n  ];\r\n\r\n  const onOrderStatusFilterChange = (value) => {\r\n    setorderStatusFilterValue(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Customers</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search customer..'\r\n              onSearch={(value) => handleSearch(value)}\r\n              // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Select\r\n              style={{\r\n                borderRadius: '15px',\r\n                color: '#3fa6f9',\r\n                marginRight: '15px',\r\n                width: '200px',\r\n              }}\r\n              placeholder='Select status'\r\n              optionFilterProp='children'\r\n              onChange={onOrderStatusFilterChange}\r\n              defaultValue={'newFirst'}\r\n              bordered={false}\r\n            >\r\n              {orderFilteringOption.map((option) => {\r\n                return <Option value={option.value}>{option.name}</Option>;\r\n              })}\r\n            </Select>\r\n\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => setAddNewCategoryVisible(true)}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {customerState.done && customerList.length > 0 && (\r\n            <MyTable setCustomerList={setCustomerList} data={customerList} />\r\n          )}\r\n          {customerState.isLoading && <DataTableSkeleton />}\r\n          {customerState.done && !(customerList.length > 0) && (\r\n            <Empty title='No Customer found' />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {customerState.done && (\r\n        <AddNewCustomer\r\n          setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined, EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .label('Firstname')\r\n        .required()\r\n        .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n        .label('Lastname')\r\n        .required()\r\n        .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n        .required('Please tell us your mobile number.')\r\n        .max(13, 'Please enter a valid mobile number.'),\r\n    address1: Yup.string()\r\n        .label('Address line 1')\r\n        .required()\r\n        .min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Customer Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    setCustomerDetailData:any; \r\n\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setCustomerDetailData }: Props) => {\r\n    const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateCustomerRes = await handleUpdateCustomerFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                phone: values.phone,\r\n                email: values.email,\r\n                password: values.password,\r\n                address1: values.address1,\r\n                address2: values.address2,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                country: selectedCountryValue || customer.country,\r\n                city: selectedCityValue || customer.city,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updateCustomerRes && updateCustomerRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            setCustomerDetailData({\r\n                // @ts-ignore\r\n                ...updateCustomerRes, \r\n                name: updateCustomerRes.firstName + ' ' + updateCustomerRes.lastName,\r\n            })\r\n   \r\n            setvisible(false)\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.phone ||\r\n            !values.address1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Customer Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        defaultValue={customer && customer.city}\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='More specific address'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import \r\nimport Moment from \"react-moment\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CustomerEdit from \"./CustomerEdit\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [customerDetailState, handleCustomerDetailFetch] = useHandleFetch({}, 'customerDetail');\r\n    const [orderListState, handleOrderListFetch] = useHandleFetch({}, 'orderListForCustomer');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [customerDetailData,setCustomerDetailData] = useState({}); \r\n\r\n\r\n\r\n    console.log('customerDetailData',customerDetailData); \r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const customerId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getCustomerDetail = async () => {\r\n            const customerDetailDataRes = await handleCustomerDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if(customerDetailDataRes){\r\n                // @ts-ignore\r\n                setCustomerDetailData(customerDetailDataRes); \r\n            }\r\n\r\n            console.log('customerDetailDataRes',customerDetailDataRes)\r\n        };\r\n\r\n        getCustomerDetail();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getOrderList = async () => {\r\n            await handleOrderListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        customerId: customerId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderList();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n\r\n    console.log('customerDetailData', customerDetailData);\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Customer Detail\r\n                </h3>\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <>\r\n                        <CustomerEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={customerDetailData}\r\n                            setCustomerDetailData={setCustomerDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={customerDetailState.isLoading}>\r\n                {customerDetailState.done && customerDetailData && !(Object.keys(customerDetailData).length > 0) && (\r\n                    <Empty description='No Customer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {customerDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {customerDetailData['description']}\r\n                            </h3>\r\n\r\n                            {customerDetailData['country'] && (\r\n                                <h3>\r\n                                    COUNTRY:\r\n                                    <span>\r\n                                        {customerDetailData['country']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {customerDetailData['city'] && (\r\n                                <h3>\r\n                                    CITY:\r\n                                    <span>\r\n                                        {customerDetailData['city']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                        \r\n\r\n\r\n                            {customerDetailData['address1'] && (\r\n                                <h3>\r\n                                    ADDRESS:\r\n                                    <span>\r\n                                        {customerDetailData['address1']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                         \r\n\r\n                            {customerDetailData['phone'] && (\r\n                                <h3>\r\n                                    PHONE:\r\n                                    <span>\r\n                                        {customerDetailData['phone']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                             {customerDetailData['email'] && (\r\n                                <h3>\r\n                                    EMAIL:\r\n                                    <span>\r\n                                        {customerDetailData['email']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Orders \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {orderListState.isLoading && <DataTableSkeleton />}\r\n                {orderListState.done && !(orderListState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orders exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {orderListState.done && orderListState.data && orderListState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={orderListState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                          \r\n          \r\n          \r\n\r\n        <Column\r\n          title=\"Code\"\r\n          dataIndex=\"shortCode\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                #{text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n    <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n\r\n                \r\n\r\n        <Column\r\n           title=\"Delivery\" \r\n           dataIndex=\"deliveryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          <Column\r\n           title=\"Created\" \r\n           dataIndex=\"date_created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n               \r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n\r\n                }}>\r\n                  {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n              <Column\r\n                title=\"Total Price\" \r\n                dataIndex=\"total\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                />\r\n\r\n\r\n\r\n\r\n          <Column\r\n            width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n             <a href='##'>\r\n              <span\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n                {text}\r\n             </span> \r\n            </a>\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Table,\r\n  Empty,\r\n  Popconfirm,\r\n  Space,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  notification,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n/// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Page Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setBrandList: any;\r\n  roles: any;\r\n}\r\n\r\nconst MyTable = ({ data, setBrandList, roles }: myTableProps) => {\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deletePageState, handleDeletePageFetch] = useHandleFetch(\r\n    {},\r\n    'deletePage'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeletePage = async (id) => {\r\n    const deletePageRes = await handleDeletePageFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deletePageRes && deletePageRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Page');\r\n      const newBrandList = data.filter((item) => item.id !== id);\r\n      setBrandList(newBrandList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title=''\r\n          dataIndex='cover'\r\n          key='id'\r\n          width={'100px'}\r\n          className='classnameofthecolumn'\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  history.push(`/admin/page/${record.id}`);\r\n                  // history.push(`/admin/page/${record.id}`);\r\n                }}\r\n                src={cover}\r\n                alt='cover img'\r\n                style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: 'contain',\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer',\r\n                }}\r\n              />\r\n            </>\r\n          )}\r\n        />\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  // setactiveCategoryForEdit(record);\r\n                  history.push(`/admin/page/${record.id}`);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Last Modified'\r\n          dataIndex='lastModified'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                }}\r\n              >\r\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Created'\r\n          dataIndex='added'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                }}\r\n              >\r\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n\r\n        {isAccess('postPage', roles) && (\r\n          <Column\r\n            className='classnameofthecolumn'\r\n            title=''\r\n            key='action'\r\n            align='right'\r\n            render={(text, record: any) => (\r\n              <Space size='middle'>\r\n                <a href='##'>\r\n                  <Tooltip placement='top' title='Edit Page'>\r\n                    <span\r\n                      className='iconSize'\r\n                      onClick={() => {\r\n                        history.push(`/admin/page/edit/${record.id}`);\r\n                        setactiveCategoryForEdit(record);\r\n                      }}\r\n                    >\r\n                      <EditOutlined />\r\n                    </span>\r\n                  </Tooltip>\r\n                </a>\r\n\r\n                <Popconfirm\r\n                  onConfirm={() => handleDeletePage(record.id)}\r\n                  title='Are you sure？'\r\n                  okText='Yes'\r\n                  cancelText='No'\r\n                >\r\n                  <span className='iconSize iconSize-danger'>\r\n                    <DeleteOutlined />\r\n                  </span>\r\n                </Popconfirm>\r\n              </Space>\r\n            )}\r\n          />\r\n        )}\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  roles: any;\r\n}\r\n\r\nconst PageList = ({ roles }: Props) => {\r\n  const [pageList, setPageList] = useState([]);\r\n  const [pageState, handlePagsListFetch] = useHandleFetch({}, 'pageList');\r\n\r\n  console.log('myPageList', pageList);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const setPages = async () => {\r\n      const pages = await handlePagsListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setPageList(pages);\r\n    };\r\n    setPages();\r\n  }, []);\r\n\r\n  const handleSearch = (value) => {\r\n    if (pageState.data.length > 0) {\r\n      const newBrandList = pageState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setPageList(newBrandList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Pages</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search pages..'\r\n              onSearch={(value) => handleSearch(value)}\r\n            />\r\n          </div>\r\n\r\n          {isAccess('postPage', roles) && (\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => history.push('/admin/page/new')}\r\n            >\r\n              Add New\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {pageState.done && pageList.length > 0 && (\r\n            <MyTable roles={roles} setBrandList={setPageList} data={pageList} />\r\n          )}\r\n          {pageState.isLoading && <DataTableSkeleton />}\r\n          {pageState.done && !(pageList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '200px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Page found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(PageList);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n// import lib\r\n// import lib\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\n// import TagEdit from \"./TagEdit\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({ roles }: Props) => {\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'tagProducts'\r\n  );\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'pageDetail'\r\n  );\r\n  const [tagDetailData, setTagDetailData] = useState({});\r\n\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const tagId = params['id'];\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const tagDetailRes = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (tagDetailRes) {\r\n        console.log('tagDetailRes', tagDetailRes);\r\n        // @ts-ignore\r\n        setTagDetailData(tagDetailRes);\r\n      }\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('tagProductsState', tagProductsState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Page Detail</h3>\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <>\r\n              {/* <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        /> */}\r\n\r\n              {isAccess('postPage', roles) && (\r\n                <Button\r\n                  onClick={() => {\r\n                    history.push(`/admin/page/edit/${tagDetailData['_id']}`);\r\n                  }}\r\n                  type='link'\r\n                  icon={<EditOutlined />}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              )}\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          !(Object.keys(tagDetailData).length > 0) && (\r\n            <Empty\r\n              description='No Page found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <>\r\n              <div className='brandDetailContainer__header'>\r\n                <div className='brandDetailContainer__header-coverContainer'>\r\n                  <img\r\n                    src={\r\n                      tagDetailData['cover'] && tagDetailData['cover']['cover']\r\n                    }\r\n                    alt=''\r\n                  />\r\n                </div>\r\n                <div className='brandDetailContainer__header-info'>\r\n                  <h2>{tagDetailData['name']}</h2>\r\n                  {tagDetailData['url'] && (\r\n                    <h3>\r\n                      URL:\r\n                      <span>{tagDetailData['url']}</span>\r\n                    </h3>\r\n                  )}\r\n\r\n                  {tagDetailData['lastModified'] && (\r\n                    <h3>\r\n                      LAST MODIFIED:\r\n                      <span>\r\n                        {tagDetailData['lastModified'] &&\r\n                          moment(tagDetailData['lastModified']).format(\r\n                            'MMMM Do YYYY, h:mm a'\r\n                          )}\r\n                      </span>\r\n                    </h3>\r\n                  )}\r\n\r\n                  {tagDetailData['added'] && (\r\n                    <h3>\r\n                      CREATED:\r\n                      <span>\r\n                        {tagDetailData['added'] &&\r\n                          moment(tagDetailData['added']).format(\r\n                            'MMMM Do YYYY, h:mm a'\r\n                          )}\r\n                      </span>\r\n                    </h3>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className='brandDetailContainer__heading'>\r\n                <h3>Content</h3>\r\n              </div>\r\n\r\n              <div\r\n                className='brandDetailContainer__header'\r\n                style={{\r\n                  display: 'block',\r\n                }}\r\n              >\r\n                {ReactHtmlParser(tagDetailData['content'])}\r\n              </div>\r\n            </>\r\n          )}\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(NewBrandDetail);\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import hhooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n  Steps,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  CheckCircleOutlined,\r\n  CaretRightOutlined,\r\n  CaretLeftOutlined,\r\n  CaretRightFilled,\r\n  UserOutlined,\r\n  InfoCircleOutlined,\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from '../../pages/category/MetaTags';\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Page Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  content: '',\r\n  bnContent: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  url: '',\r\n};\r\n\r\nconst steps = [\r\n  {\r\n    title: 'Order Information',\r\n    content: '',\r\n    // description: 'Add Customer & Products'\r\n  },\r\n  {\r\n    title: 'Billing Address',\r\n  },\r\n  {\r\n    title: 'Confirm Order',\r\n    content: '',\r\n  },\r\n];\r\n\r\ninterface Props {}\r\n\r\nconst AddNewPage = ({}: Props) => {\r\n  const [addPageState, handleAddPageFetch] = useHandleFetch({}, 'addPage');\r\n  const [content, setContent] = useState('<p>Hello from the new page !</p>');\r\n  const [bnContent, setBnContent] = useState('<p>হ্যালো নতুন পেজ থেকে!</p>');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  const handleAddPageSubmit = async (values: any, actions: any) => {\r\n    const addOrderRes = await handleAddPageFetch({\r\n      body: {\r\n        name: values.name,\r\n        content: content,\r\n        url: values.name,\r\n        cover: myImages ? myImages[0] && myImages[0].id : '',\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: tags.join(','),\r\n\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnTags.join(','),\r\n          name: values.bnName.trim(),\r\n          content: bnContent,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addOrderRes && addOrderRes.status === 'ok') {\r\n      // openSuccessNotification();\r\n      setCoverImageId('');\r\n      setBnTags([]);\r\n      setTags([]);\r\n      setContent('');\r\n      setBnContent('');\r\n      setvisibleMedia();\r\n      setmyImages([]);\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification(\"Couldn't create page, Something went wrong\");\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addPageState['isLoading']) {\r\n      const error = addPageState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addPageState['isLoading'] &&\r\n      Object.keys(addPageState.data).length > 0\r\n    ) {\r\n      if (addPageState['data']['status'] === 'ok') {\r\n        openSuccessNotification('Page Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addPageState]);\r\n\r\n  console.log('myImagesdx', myImages);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div className='addNewPageContainer'>\r\n            <h3 className='addNewPageContainer__heading'>Add New Page</h3>\r\n\r\n            <div className='addNewPageContainer__header'>\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='Title'\r\n                    value={values.name}\r\n                    name='name'\r\n                    placeHolder='About us,Contact us'\r\n                    isError={\r\n                      (touched.name && errors.name) ||\r\n                      (!isSubmitting && addPageState.error['error']['name'])\r\n                    }\r\n                    errorString={\r\n                      (touched.name && errors.name) ||\r\n                      (!isSubmitting && addPageState.error['error']['name'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('name');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='BN Title'\r\n                    value={values.bnName}\r\n                    placeHolder={'ব্লগ...'}\r\n                    name='bnName'\r\n                    isError={\r\n                      (touched.bnName && errors.bnName) ||\r\n                      (!isSubmitting && addPageState.error['error']['bnName'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnName && errors.bnName) ||\r\n                      (!isSubmitting && addPageState.error['error']['bnName'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnName');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <Input\r\n                label='URL'\r\n                value={values.url}\r\n                name='url'\r\n                isError={\r\n                  (touched.url && errors.url) ||\r\n                  (!isSubmitting && addPageState.error['error']['url'])\r\n                }\r\n                errorString={\r\n                  (touched.url && errors.url) ||\r\n                  (!isSubmitting && addPageState.error['error']['url'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('url');\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n\r\n              <div className='aboutToUploadImagesContainer'>\r\n                {myImages &&\r\n                  // @ts-ignore\r\n                  myImages.length > 0 &&\r\n                  myImages.map((image, index) => {\r\n                    return (\r\n                      <div className='aboutToUploadImagesContainer__item'>\r\n                        <div\r\n                          className='aboutToUploadImagesContainer__item-imgContainer'\r\n                          onClick={() => setCoverImageId(image.id)}\r\n                        >\r\n                          <img src={image.cover} alt={image.alt} />\r\n                        </div>\r\n\r\n                        <span\r\n                          onClick={() => handleImagesDelete(image.id)}\r\n                          className='aboutToUploadImagesContainer__item-remove'\r\n                        >\r\n                          <CloseOutlined />\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  })}\r\n\r\n                {myImages ? (\r\n                  !myImages[0] && (\r\n                    <Tooltip title={'Attach images'}>\r\n                      <div\r\n                        onClick={() => {\r\n                          setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'\r\n                      >\r\n                        {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                        <FileImageFilled />\r\n                        {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                          <PlusOutlined />\r\n                        </span>\r\n                      </div>\r\n                    </Tooltip>\r\n                  )\r\n                ) : (\r\n                  <Tooltip title={'Attach images'}>\r\n                    <div\r\n                      onClick={() => {\r\n                        setvisibleMedia(true);\r\n                      }}\r\n                      className='aboutToUploadImagesContainer__uploadItem'\r\n                    >\r\n                      {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                      <FileImageFilled />\r\n                      {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                        <PlusOutlined />\r\n                      </span>\r\n                    </div>\r\n                  </Tooltip>\r\n                )}\r\n              </div>\r\n\r\n              <p\r\n                style={{\r\n                  color: '#ff4d4f',\r\n                  marginTop: '-15px',\r\n                }}\r\n              >\r\n                {addPageState.error['error']['cover']}\r\n              </p>\r\n            </div>\r\n            <div className='addNewPageContainer__body'>\r\n              <h3 className='inputFieldLabel'>Content</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={content}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setContent(data);\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  marginTop: '15px',\r\n                }}\r\n              ></div>\r\n\r\n              <h3 className='inputFieldLabel'>BN Content</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={bnContent}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setBnContent(data);\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            ></div>\r\n\r\n            <div className='addNewPageContainer__header'>\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='Meta Title'\r\n                    value={values.metaTitle}\r\n                    name='metaTitle'\r\n                    isError={\r\n                      (touched.metaTitle && errors.metaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaTitle'])\r\n                    }\r\n                    errorString={\r\n                      (touched.metaTitle && errors.metaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaTitle'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('metaTitle');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='BN Meta Title'\r\n                    value={values.bnMetaTitle}\r\n                    placeHolder={'নতুন,ফ্রেশ'}\r\n                    name='bnMetaTitle'\r\n                    isError={\r\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaTitle'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaTitle'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnMetaTitle');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <TextArea\r\n                    label='Meta description'\r\n                    value={values.metaDescription}\r\n                    placeholder={'meta...'}\r\n                    name='metaDescription'\r\n                    isError={\r\n                      (touched.metaDescription && errors.metaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaDescription'])\r\n                    }\r\n                    errorString={\r\n                      (touched.metaDescription && errors.metaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaDescription'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('metaDescription');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <TextArea\r\n                    label='BN Meta Description'\r\n                    value={values.bnMetaDescription}\r\n                    placeholder={'এইয় মেট...'}\r\n                    name='bnMetaDescription'\r\n                    isError={\r\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaDescription'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaDescription'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnMetaDescription');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <h3 className='inputFieldLabel'>\r\n                    Meta Tags (grocery,fashion)\r\n                  </h3>\r\n\r\n                  <MetaTags\r\n                    // @ts-ignore\r\n                    setTags={setTags}\r\n                    tags={tags}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <h3 className='inputFieldLabel'>\r\n                    BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                  </h3>\r\n\r\n                  <MetaTags\r\n                    // @ts-ignore\r\n                    setTags={setBnTags}\r\n                    tags={bnTags}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            ></div>\r\n\r\n            <Button\r\n              loading={addPageState.isLoading}\r\n              onClick={(e: any) => handleSubmit(e)}\r\n              className='btnPrimaryClassNameoutline'\r\n            >\r\n              Create page\r\n            </Button>\r\n          </div>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewPage;\r\n\r\n/*\r\n\r\n<div className=\"addNewPageContainer\">\r\n\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\tAdd New Order\r\n\t\t\t</h3>\r\n\t\t\t<div className='addNewPageContainer__header'>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className='addNewPageContainer__body'>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n*/\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import hhooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport { useParams } from 'react-router-dom';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n  Steps,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  CheckCircleOutlined,\r\n  CaretRightOutlined,\r\n  CaretLeftOutlined,\r\n  CaretRightFilled,\r\n  UserOutlined,\r\n  InfoCircleOutlined,\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport MetaTags from '../../pages/category/MetaTags';\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Page Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  bnName: '',\r\n  content: '',\r\n  bnContent: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n  url: '',\r\n};\r\n\r\nconst steps = [\r\n  {\r\n    title: 'Order Information',\r\n    content: '',\r\n    // description: 'Add Customer & Products'\r\n  },\r\n  {\r\n    title: 'Billing Address',\r\n  },\r\n  {\r\n    title: 'Confirm Order',\r\n    content: '',\r\n  },\r\n];\r\n\r\ninterface Props {}\r\n\r\nconst AddNewPage = ({}: Props) => {\r\n  const [addPageState, handleAddPageFetch] = useHandleFetch({}, 'updatePage');\r\n  const [content, setContent] = useState('');\r\n  const [bnContent, setBnContent] = useState('');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [bnTags, setBnTags] = useState([]);\r\n\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'pageDetail'\r\n  );\r\n  const [tagDetailData, setTagDetailData] = useState({});\r\n  const [\r\n    setImageAsThumbnailToItemState,\r\n    handleSetImageAsThumbnailToItemFetch,\r\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n  const [\r\n    detachImageFromItemSingleState,\r\n    handleDetachImageFromItemSingleFetch,\r\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n\r\n  const params = useParams();\r\n  const tagId = params['id'];\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const tagDetailRes = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (tagDetailRes) {\r\n        console.log('tagDetailRes', tagDetailRes);\r\n        // @ts-ignore\r\n        setTagDetailData(tagDetailRes);\r\n      }\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    if (tagDetailData && Object.keys(tagDetailData).length > 0) {\r\n      if (tagDetailData.cover && tagDetailData.cover['id']) {\r\n        // @ts-ignore\r\n        setmyImages([tagDetailData.cover]);\r\n        setCoverImageId(tagDetailData.cover['id']);\r\n      }\r\n    }\r\n  }, [tagDetailData]);\r\n\r\n  useEffect(() => {\r\n    if (tagDetailData && Object.keys(tagDetailData).length > 0) {\r\n      setContent(tagDetailData['content'] || '');\r\n      setBnContent(\r\n        tagDetailData['bn'] && tagDetailData['bn']['content']\r\n          ? tagDetailData['bn']['content']\r\n          : ''\r\n      );\r\n    }\r\n  }, [tagDetailData]);\r\n\r\n  const handleAddPageSubmit = async (values: any, actions: any) => {\r\n    const addOrderRes = await handleAddPageFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: tagDetailData._id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name,\r\n        content: content,\r\n        url: values.name,\r\n        cover: myImages ? myImages[0] && myImages[0].id : '',\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\r\n          name: values.bnName.trim(),\r\n          content: bnContent,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addOrderRes && addOrderRes.status === 'ok') {\r\n      // openSuccessNotification();\r\n      // setCoverImageId('');\r\n      // setBnTags([]);\r\n      // setTags([]);\r\n      // setContent('');\r\n      // setBnContent('');\r\n      // setvisibleMedia();\r\n      // setmyImages([]);\r\n      // actions.resetForm();\r\n    } else {\r\n      openErrorNotification(\"Couldn't Update page, Something went wrong\");\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleSetImageAsThumnail = async (image) => {\r\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: image.id,\r\n          collection: 'page',\r\n          itemId: tagDetailData.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n      openSuccessNotification('Set as thumbnail!');\r\n      // const positionInBrand = () => {\r\n      //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n      // }\r\n\r\n      // const index = positionInBrand();\r\n\r\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n      // if (prevItem) {\r\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n      //     setBrandList(updateBrandList);\r\n      // }\r\n    } else {\r\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n      if (coverImageId !== myImages[0].id) {\r\n        setCoverImageId(myImages[0].id);\r\n        handleSetImageAsThumnail(myImages[0]);\r\n      }\r\n    }\r\n  }, [myImages]);\r\n\r\n  useEffect(() => {\r\n    if (!addPageState['isLoading']) {\r\n      const error = addPageState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addPageState['isLoading'] &&\r\n      Object.keys(addPageState.data).length > 0\r\n    ) {\r\n      if (addPageState['data']['status'] === 'ok') {\r\n        openSuccessNotification('Page Updated Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addPageState]);\r\n\r\n  useEffect(() => {\r\n    if (tagDetailData && Object.keys(tagDetailData).length > 0) {\r\n      const metaTags =\r\n        tagDetailData.metaTags && tagDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        tagDetailData.bn &&\r\n        tagDetailData.bn['metaTags'] &&\r\n        tagDetailData.bn['metaTags'].split(',');\r\n      setTags(metaTags || []);\r\n      setBnTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  const handleDetachSingleImage = async (id) => {\r\n    console.log('dure', id);\r\n    console.log('dure2', tagDetailData);\r\n    await handleDetachImageFromItemSingleFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          imageId: id,\r\n          collection: 'page',\r\n          itemId: tagDetailData.id,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...tagDetailData,\r\n        ...(tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && {\r\n            bnMetaTitle:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].metaTitle &&\r\n              tagDetailData['bn'].metaTitle,\r\n            bnMetaDescription:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].metaDescription &&\r\n              tagDetailData['bn'].metaDescription,\r\n            bnName:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].name &&\r\n              tagDetailData['bn'].name,\r\n            bnDescription:\r\n              tagDetailData['bn'] &&\r\n              tagDetailData['bn'].description &&\r\n              tagDetailData['bn'].description,\r\n          }),\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div className='addNewPageContainer'>\r\n            <h3 className='addNewPageContainer__heading'>Edit Page</h3>\r\n\r\n            <div className='addNewPageContainer__header'>\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='Title'\r\n                    value={values.name}\r\n                    name='name'\r\n                    placeHolder='About us,Contact us'\r\n                    isError={\r\n                      (touched.name && errors.name) ||\r\n                      (!isSubmitting && addPageState.error['error']['name'])\r\n                    }\r\n                    errorString={\r\n                      (touched.name && errors.name) ||\r\n                      (!isSubmitting && addPageState.error['error']['name'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('name');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='BN Title'\r\n                    value={values.bnName}\r\n                    placeHolder={'ব্লগ...'}\r\n                    name='bnName'\r\n                    isError={\r\n                      (touched.bnName && errors.bnName) ||\r\n                      (!isSubmitting && addPageState.error['error']['bnName'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnName && errors.bnName) ||\r\n                      (!isSubmitting && addPageState.error['error']['bnName'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnName');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <Input\r\n                label='URL'\r\n                value={values.url}\r\n                name='url'\r\n                isError={\r\n                  (touched.url && errors.url) ||\r\n                  (!isSubmitting && addPageState.error['error']['url'])\r\n                }\r\n                errorString={\r\n                  (touched.url && errors.url) ||\r\n                  (!isSubmitting && addPageState.error['error']['url'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('url');\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n\r\n              <div className='aboutToUploadImagesContainer'>\r\n                {tagDetailData && Object.keys(tagDetailData).length > 0 && (\r\n                  <>\r\n                    {myImages &&\r\n                      // @ts-ignore\r\n                      myImages.length > 0 &&\r\n                      myImages.map((image, index) => {\r\n                        return (\r\n                          <div className='aboutToUploadImagesContainer__item'>\r\n                            <div\r\n                              className='aboutToUploadImagesContainer__item-imgContainer'\r\n                              onClick={() => {\r\n                                setCoverImageId(image.id);\r\n                                // handleSetImageAsThumnail(image);\r\n                              }}\r\n                            >\r\n                              <img src={image.cover} alt={image.alt} />\r\n                            </div>\r\n\r\n                            <span\r\n                              onClick={() => {\r\n                                handleImagesDelete(image.id);\r\n                                handleDetachSingleImage(image.id);\r\n                              }}\r\n                              className='aboutToUploadImagesContainer__item-remove'\r\n                            >\r\n                              <CloseOutlined />\r\n                            </span>\r\n\r\n                            {coverImageId === image.id ? (\r\n                              <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                <CheckOutlined />\r\n                              </span>\r\n                            ) : (\r\n                              !coverImageId &&\r\n                              index === 0 && (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                  <CheckOutlined />\r\n                                </span>\r\n                              )\r\n                            )}\r\n                          </div>\r\n                        );\r\n                      })}\r\n\r\n                    {!myImages ||\r\n                    // @ts-ignore\r\n                    (myImages && !(myImages && myImages.length > 0)) ? (\r\n                      <>\r\n                        <Tooltip title={'Attach images'}>\r\n                          <div\r\n                            onClick={() => {\r\n                              setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem'\r\n                          >\r\n                            <FileImageFilled />\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                              <PlusOutlined />\r\n                            </span>\r\n                          </div>\r\n                        </Tooltip>\r\n                      </>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              <p\r\n                style={{\r\n                  color: '#ff4d4f',\r\n                  marginTop: '-15px',\r\n                }}\r\n              >\r\n                {addPageState.error['error']['cover']}\r\n              </p>\r\n            </div>\r\n            <div className='addNewPageContainer__body'>\r\n              <h3 className='inputFieldLabel'>Content</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={content}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setContent(data);\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  marginTop: '15px',\r\n                }}\r\n              ></div>\r\n\r\n              <h3 className='inputFieldLabel'>BN Content</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={bnContent}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setBnContent(data);\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            ></div>\r\n\r\n            <div className='addNewPageContainer__header'>\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='Meta Title'\r\n                    value={values.metaTitle}\r\n                    name='metaTitle'\r\n                    isError={\r\n                      (touched.metaTitle && errors.metaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaTitle'])\r\n                    }\r\n                    errorString={\r\n                      (touched.metaTitle && errors.metaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaTitle'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('metaTitle');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <Input\r\n                    label='BN Meta Title'\r\n                    value={values.bnMetaTitle}\r\n                    placeHolder={'নতুন,ফ্রেশ'}\r\n                    name='bnMetaTitle'\r\n                    isError={\r\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaTitle'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaTitle'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnMetaTitle');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <TextArea\r\n                    label='Meta description'\r\n                    value={values.metaDescription}\r\n                    placeholder={'meta...'}\r\n                    name='metaDescription'\r\n                    isError={\r\n                      (touched.metaDescription && errors.metaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaDescription'])\r\n                    }\r\n                    errorString={\r\n                      (touched.metaDescription && errors.metaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['metaDescription'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('metaDescription');\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <TextArea\r\n                    label='BN Meta Description'\r\n                    value={values.bnMetaDescription}\r\n                    placeholder={'এইয় মেট...'}\r\n                    name='bnMetaDescription'\r\n                    isError={\r\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaDescription'])\r\n                    }\r\n                    errorString={\r\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n                      (!isSubmitting &&\r\n                        addPageState.error['error']['bnMetaDescription'])\r\n                    }\r\n                    onChange={(e: any) => {\r\n                      handleChange(e);\r\n                      setFieldTouched('bnMetaDescription');\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs'>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <h3 className='inputFieldLabel'>\r\n                    Meta Tags (grocery,fashion)\r\n                  </h3>\r\n\r\n                  <MetaTags\r\n                    // @ts-ignore\r\n                    setTags={setTags}\r\n                    tags={tags}\r\n                  />\r\n                </div>\r\n                <div className='dubbleRowInputs__item'>\r\n                  <h3 className='inputFieldLabel'>\r\n                    BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                  </h3>\r\n\r\n                  <MetaTags\r\n                    // @ts-ignore\r\n                    setTags={setBnTags}\r\n                    tags={bnTags}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            ></div>\r\n\r\n            <Button\r\n              loading={addPageState.isLoading}\r\n              onClick={(e: any) => handleSubmit(e)}\r\n              className='btnPrimaryClassNameoutline'\r\n            >\r\n              Update page\r\n            </Button>\r\n          </div>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewPage;\r\n\r\n/*\r\n\r\n<div className=\"addNewPageContainer\">\r\n\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\tAdd New Order\r\n\t\t\t</h3>\r\n\t\t\t<div className='addNewPageContainer__header'>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className='addNewPageContainer__body'>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n*/\r\n","import React,{useState} from 'react';\r\nimport { Modal  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\n\r\nimport React from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup","import React, {useState} from 'react';\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\r\n\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddAttributeValues from \"./AddAttributeValues\"\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({data}) => {\r\n    const [visible,setvisible] = useState(false);   \r\n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\tconst handleDeleteCategory = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n      }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n              <Tooltip placement=\"top\" title='Delete Tag'>\r\n            \r\n\r\n             <span \r\n             className='iconSize iconSize-danger'\r\n             onClick={() => handleDeleteCategory(record.id)}\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n            \r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n     \r\n\r\n\t\t{activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\t// console.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst AttributeList = ({  }: Props) => {\r\n\tconst tagState = useFetch([], [], 'brandList', {\r\n\t\turlOptions: {\r\n\t\t  params: {\r\n\t\t\tisSubCategory: true,\r\n\t\t  },\r\n\t\t},\r\n\t  });\r\n\r\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t  urlOptions: {\r\n\t\t\t  placeHolders: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t  body: {\r\n\t\t\t  name: values.name,\r\n\t\t\t  description: values.description,\r\n\t\t  },\r\n\t\t});\r\n\t  \r\n\t\tactions.setSubmitting(false);\r\n\t  };\r\n\t  \r\n \r\n  \r\n  \r\n  \r\n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\t  if(!values.name || !values.description || !isValid){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  return false; \r\n\t\t}\r\n\r\n\r\n\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t   <div style={{\r\n\t\t\t\t   marginTop: '0px'\r\n\t\t\t   }}></div>\r\n\t\t\t  \r\n\r\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\r\n\t\t\t\t\r\n\t\t\t\t<AddAttributeValues />\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t  display: 'block',\r\n\t\t\t\t\t\t  marginTop: '20px'\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n                <div className='addproductSection addproductSection-right'> \r\n\r\n\t\t\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n          {/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            {/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\r\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttributeList;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Modal, Select, notification, Empty, Spin, Button } from 'antd';\r\nimport ReactToPdf from 'react-to-pdf';\r\n\r\nimport * as Yup from 'yup';\r\nimport {\r\n  CheckCircleOutlined,\r\n  InfoCircleOutlined,\r\n  PrinterOutlined,\r\n  FilePdfOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactToPrint from 'react-to-print';\r\n\r\n// import components\r\nimport config from '../../config.json';\r\n\r\n// import components\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\n\r\nclass ComponentToPrint extends React.Component {\r\n  render() {\r\n    const { orderDetailState, invoiceSettingsState, anotherRef } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <div ref={anotherRef} className='invoiceContainer'>\r\n          <table\r\n            width='100%'\r\n            border={0}\r\n            cellPadding={0}\r\n            cellSpacing={0}\r\n            align='center'\r\n            className='fullTable'\r\n            bgcolor='#fff'\r\n          >\r\n            <tbody>\r\n              <tr>\r\n                <td height={20} />\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <table\r\n                    width={600}\r\n                    border={0}\r\n                    cellPadding={0}\r\n                    cellSpacing={0}\r\n                    align='center'\r\n                    className='fullTable'\r\n                    bgcolor='#ffffff'\r\n                    style={{ borderRadius: '10px 10px 0 0' }}\r\n                  >\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>\r\n                          <table\r\n                            width={570}\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align='center'\r\n                            className='fullPadding'\r\n                          >\r\n                            <tbody>\r\n                              <tr>\r\n                                <td>\r\n                                  <table\r\n                                    width={'100%'}\r\n                                    border={0}\r\n                                    cellPadding={0}\r\n                                    cellSpacing={0}\r\n                                    align='left'\r\n                                    className='col'\r\n                                    style={{\r\n                                      borderBottom: '1px solid #eee',\r\n                                      paddingBottom: '40px',\r\n                                      marginBottom: '40px',\r\n                                    }}\r\n                                  >\r\n                                    <tbody\r\n                                      style={{\r\n                                        marginBottom: '50px',\r\n                                      }}\r\n                                    >\r\n                                      <tr>\r\n                                        <td\r\n                                          style={{\r\n                                            fontSize: 12,\r\n                                            color: '#5b5b5b',\r\n\r\n                                            lineHeight: 1.6,\r\n                                            verticalAlign: 'top',\r\n                                            textAlign: 'left',\r\n                                          }}\r\n                                        >\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'inline-block',\r\n                                              fontSize: '14px',\r\n                                              fontWeight: '600',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            Bill From:\r\n                                          </span>\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'block',\r\n                                              marginTop: '10px',\r\n                                              fontSize: '12px',\r\n                                              fontWeight: '500',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            {orderDetailState.data['name']}\r\n                                          </span>\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'block',\r\n                                              marginTop: '10px',\r\n                                              fontSize: '12px',\r\n                                              fontWeight: '500',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            {orderDetailState.data['address']}\r\n                                          </span>\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'block',\r\n                                              marginTop: '10px',\r\n                                              fontSize: '12px',\r\n                                              fontWeight: '500',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            {orderDetailState.data['phone']}\r\n                                          </span>\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'block',\r\n                                              marginTop: '10px',\r\n                                              fontSize: '12px',\r\n                                              fontWeight: '500',\r\n                                              color: '#000',\r\n                                              marginBottom: '50px',\r\n                                            }}\r\n                                          >\r\n                                            {orderDetailState.data['email']}\r\n                                          </span>\r\n                                        </td>\r\n\r\n                                        <td\r\n                                          style={{\r\n                                            verticalAlign: 'top',\r\n                                          }}\r\n                                          align='right'\r\n                                        >\r\n                                          {' '}\r\n                                          <img\r\n                                            src={`${config.baseURL}/images/logo.png`}\r\n                                            width={100}\r\n                                            height={100}\r\n                                            alt='logo'\r\n                                            border={0}\r\n                                          />\r\n                                        </td>\r\n                                      </tr>\r\n                                    </tbody>\r\n                                  </table>\r\n                                  <table\r\n                                    width={'100%'}\r\n                                    border={0}\r\n                                    cellPadding={0}\r\n                                    cellSpacing={0}\r\n                                    align='left'\r\n                                    className='col'\r\n                                  >\r\n                                    <tbody>\r\n                                      <tr className='visibleMobile'>\r\n                                        <td height={20} />\r\n                                      </tr>\r\n                                      <tr>\r\n                                        <td height={5} />\r\n                                      </tr>\r\n                                      <tr></tr>\r\n                                      <tr></tr>\r\n                                      <tr>\r\n                                        <td\r\n                                          style={{\r\n                                            fontSize: 12,\r\n                                            color: '#5b5b5b',\r\n\r\n                                            lineHeight: 1.6,\r\n                                            verticalAlign: 'top',\r\n                                            textAlign: 'left',\r\n                                          }}\r\n                                        >\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'inline-block',\r\n                                              fontSize: '14px',\r\n                                              fontWeight: '600',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            Bill To:\r\n                                          </span>\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'block',\r\n                                              marginTop: '10px',\r\n                                              fontSize: '12px',\r\n                                              fontWeight: '500',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            {invoiceSettingsState.done &&\r\n                                              invoiceSettingsState.data &&\r\n                                              Object.keys(\r\n                                                invoiceSettingsState.data\r\n                                              ).length > 0 &&\r\n                                              invoiceSettingsState.data[\r\n                                                'invoiceTitle'\r\n                                              ]}\r\n                                          </span>\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'block',\r\n                                              marginTop: '10px',\r\n                                              fontSize: '12px',\r\n                                              fontWeight: '500',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            {invoiceSettingsState.done &&\r\n                                              invoiceSettingsState.data &&\r\n                                              Object.keys(\r\n                                                invoiceSettingsState.data\r\n                                              ).length > 0 &&\r\n                                              invoiceSettingsState.data[\r\n                                                'address'\r\n                                              ]}\r\n                                          </span>\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'block',\r\n                                              marginTop: '10px',\r\n                                              fontSize: '12px',\r\n                                              fontWeight: '500',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            {invoiceSettingsState.done &&\r\n                                              invoiceSettingsState.data &&\r\n                                              Object.keys(\r\n                                                invoiceSettingsState.data\r\n                                              ).length > 0 &&\r\n                                              invoiceSettingsState.data[\r\n                                                'phone'\r\n                                              ]}\r\n                                          </span>\r\n                                          <span\r\n                                            style={{\r\n                                              display: 'block',\r\n                                              marginTop: '10px',\r\n                                              fontSize: '12px',\r\n                                              fontWeight: '500',\r\n                                              color: '#000',\r\n                                            }}\r\n                                          >\r\n                                            {invoiceSettingsState.done &&\r\n                                              invoiceSettingsState.data &&\r\n                                              Object.keys(\r\n                                                invoiceSettingsState.data\r\n                                              ).length > 0 &&\r\n                                              invoiceSettingsState.data[\r\n                                                'email'\r\n                                              ]}\r\n                                          </span>\r\n                                        </td>\r\n\r\n                                        <td\r\n                                          style={{\r\n                                            fontSize: 13,\r\n                                            color: '#5b5b5b',\r\n\r\n                                            lineHeight: 1.6,\r\n                                            verticalAlign: 'top',\r\n                                            textAlign: 'right',\r\n                                          }}\r\n                                        >\r\n                                          <small>ORDER</small> #\r\n                                          {orderDetailState.data['shortCode']}\r\n                                          <br />\r\n                                          <span>\r\n                                            {orderDetailState.data[\r\n                                              'date_created'\r\n                                            ] &&\r\n                                              moment(\r\n                                                orderDetailState.data[\r\n                                                  'date_created'\r\n                                                ]\r\n                                              ).format('MMMM Do YYYY, h:mm a')}\r\n                                          </span>\r\n                                        </td>\r\n                                      </tr>\r\n                                    </tbody>\r\n                                  </table>\r\n                                </td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          {orderDetailState.data &&\r\n            orderDetailState.data['products'] &&\r\n            orderDetailState.data['products'].length > 0 && (\r\n              <table\r\n                width='100%'\r\n                border={0}\r\n                cellPadding={0}\r\n                cellSpacing={0}\r\n                align='center'\r\n                className='fullTable'\r\n                bgcolor='#fff'\r\n              >\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      <table\r\n                        width={600}\r\n                        border={0}\r\n                        cellPadding={0}\r\n                        cellSpacing={0}\r\n                        align='center'\r\n                        className='fullTable'\r\n                        bgcolor='#ffffff'\r\n                      >\r\n                        <tbody>\r\n                          <tr></tr>\r\n                          <tr className='hiddenMobile'>\r\n                            <td height={60} />\r\n                          </tr>\r\n                          <tr className='visibleMobile'>\r\n                            <td height={40} />\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              <table\r\n                                width={570}\r\n                                border={0}\r\n                                cellPadding={0}\r\n                                cellSpacing={0}\r\n                                align='center'\r\n                                className='fullPadding'\r\n                              >\r\n                                <tbody>\r\n                                  <tr\r\n                                    style={{\r\n                                      backgroundColor: '#eee',\r\n                                    }}\r\n                                  >\r\n                                    <th\r\n                                      style={{\r\n                                        fontSize: 12,\r\n                                        color: '#5b5b5b',\r\n                                        fontWeight: 'normal',\r\n                                        lineHeight: 1.6,\r\n                                        verticalAlign: 'top',\r\n                                        padding: '5px 10px 7px 5px',\r\n                                      }}\r\n                                      width='30%'\r\n                                      align='left'\r\n                                    >\r\n                                      Name\r\n                                    </th>\r\n                                    <th\r\n                                      style={{\r\n                                        fontSize: 12,\r\n                                        color: '#5b5b5b',\r\n                                        fontWeight: 'normal',\r\n                                        lineHeight: 1.6,\r\n                                        verticalAlign: 'center',\r\n                                      }}\r\n                                      align='left'\r\n                                    >\r\n                                      Quantity\r\n                                    </th>\r\n                                    <th\r\n                                      style={{\r\n                                        fontSize: 12,\r\n                                        color: '#1e2b33',\r\n                                        fontWeight: 'normal',\r\n                                        lineHeight: 1.6,\r\n                                        verticalAlign: 'center',\r\n                                      }}\r\n                                      align='left'\r\n                                    >\r\n                                      Unit Price\r\n                                    </th>\r\n                                    <th\r\n                                      style={{\r\n                                        fontSize: 12,\r\n                                        color: '#1e2b33',\r\n                                        fontWeight: 'normal',\r\n                                        lineHeight: 1.6,\r\n                                        verticalAlign: 'center',\r\n                                      }}\r\n                                      align='left'\r\n                                    >\r\n                                      {/* Unit Price */}\r\n                                    </th>\r\n                                  </tr>\r\n\r\n                                  {orderDetailState.data['products'].map(\r\n                                    (item) => {\r\n                                      return (\r\n                                        <>\r\n                                          <tr>\r\n                                            <td\r\n                                              height={1}\r\n                                              style={{\r\n                                                background: '#bebebe',\r\n                                              }}\r\n                                              colSpan={4}\r\n                                            />\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td height={10} colSpan={4} />\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td\r\n                                              width='30%'\r\n                                              style={{\r\n                                                fontSize: 12,\r\n                                                color: '#ff0000',\r\n                                                lineHeight: 1.6,\r\n                                                verticalAlign: 'top',\r\n                                                padding: '10px 0',\r\n                                              }}\r\n                                              className='article'\r\n                                            >\r\n                                              {item.name}\r\n                                            </td>\r\n\r\n                                            <td\r\n                                              style={{\r\n                                                fontSize: 12,\r\n                                                color: '#646a6e',\r\n                                                lineHeight: 1.6,\r\n                                                verticalAlign: 'top',\r\n                                                padding: '10px 0',\r\n                                              }}\r\n                                              align='left'\r\n                                            >\r\n                                              {item.quantity}\r\n                                            </td>\r\n                                            <td\r\n                                              style={{\r\n                                                fontSize: 12,\r\n                                                color: '#1e2b33',\r\n                                                lineHeight: 1.6,\r\n                                                verticalAlign: 'top',\r\n                                                padding: '10px 0',\r\n                                              }}\r\n                                              align='left'\r\n                                            >\r\n                                              {item.unitPrice}\r\n                                            </td>\r\n\r\n                                            <td\r\n                                              style={{\r\n                                                fontSize: 12,\r\n\r\n                                                color: '#1e2b33',\r\n                                                lineHeight: 1.6,\r\n                                                verticalAlign: 'top',\r\n                                                padding: '10px 0',\r\n                                              }}\r\n                                              align='left'\r\n                                            >\r\n                                              {item.quantity * item.unitPrice}\r\n                                            </td>\r\n                                          </tr>\r\n                                        </>\r\n                                      );\r\n                                    }\r\n                                  )}\r\n                                  <tr>\r\n                                    <td\r\n                                      height={1}\r\n                                      colSpan={4}\r\n                                      style={{\r\n                                        borderBottom: '1px solid #eee',\r\n                                      }}\r\n                                    />\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td height={20} />\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            )}\r\n          <table\r\n            width='100%'\r\n            border={0}\r\n            cellPadding={0}\r\n            cellSpacing={0}\r\n            align='center'\r\n            className='fullTable'\r\n            bgcolor='#fff'\r\n          >\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <table\r\n                    width={600}\r\n                    border={0}\r\n                    cellPadding={0}\r\n                    cellSpacing={0}\r\n                    align='center'\r\n                    className='fullTable'\r\n                    bgcolor='#ffffff'\r\n                  >\r\n                    <tbody\r\n                      style={{\r\n                        marginBottom: '20px',\r\n                      }}\r\n                    >\r\n                      <tr>\r\n                        <td>\r\n                          {/* Table Total */}\r\n                          <table\r\n                            style={{\r\n                              marginBottom: '50px',\r\n                              marginTop: '30px',\r\n                            }}\r\n                            width={570}\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align='center'\r\n                            className='fullPadding'\r\n                          >\r\n                            <tbody>\r\n                              <tr>\r\n                                <td\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    color: '#646a6e',\r\n                                    lineHeight: 1.6,\r\n                                    verticalAlign: 'top',\r\n                                    textAlign: 'right',\r\n                                  }}\r\n                                >\r\n                                  Total Price\r\n                                </td>\r\n                                <td\r\n                                  style={{\r\n                                    fontSize: 13,\r\n                                    color: '#646a6e',\r\n                                    lineHeight: 1.6,\r\n                                    verticalAlign: 'top',\r\n                                    textAlign: 'right',\r\n                                    whiteSpace: 'nowrap',\r\n                                    fontWeight: '600',\r\n                                    marginBottom: '5px',\r\n                                  }}\r\n                                  width={80}\r\n                                >\r\n                                  {orderDetailState.data['total']}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    color: '#646a6e',\r\n                                    lineHeight: 1.6,\r\n                                    verticalAlign: 'top',\r\n                                    textAlign: 'right',\r\n                                  }}\r\n                                >\r\n                                  Shipping &amp; Delivery\r\n                                </td>\r\n                                <td\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    color: '#646a6e',\r\n                                    lineHeight: 1.6,\r\n                                    verticalAlign: 'top',\r\n                                    textAlign: 'right',\r\n                                  }}\r\n                                >\r\n                                  {orderDetailState.data &&\r\n                                  orderDetailState.data['total'] > 5000\r\n                                    ? 'Free'\r\n                                    : orderDetailState.data &&\r\n                                      orderDetailState.data[\r\n                                        'deliveryCharge'\r\n                                      ] === 0\r\n                                    ? 'Free'\r\n                                    : `-${\r\n                                        orderDetailState.data &&\r\n                                        orderDetailState.data['deliveryCharge']\r\n                                      }`}\r\n                                </td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    color: '#000',\r\n                                    lineHeight: 1.6,\r\n                                    verticalAlign: 'top',\r\n                                    textAlign: 'right',\r\n                                  }}\r\n                                >\r\n                                  <strong>Grand Total (Incl.Delivery)</strong>\r\n                                </td>\r\n                                <td\r\n                                  style={{\r\n                                    fontSize: 12,\r\n                                    color: '#000',\r\n                                    lineHeight: 1.6,\r\n                                    verticalAlign: 'top',\r\n                                    textAlign: 'right',\r\n                                  }}\r\n                                >\r\n                                  <strong>\r\n                                    {orderDetailState.data['total'] -\r\n                                      orderDetailState.data['deliveryCharge'] ||\r\n                                      0}\r\n                                  </strong>\r\n                                </td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst OrderInvoice = ({ id, setShowInvoice, showInvoice }) => {\r\n  const [orderDetailState, handleOrderDetailFetch] = useHandleFetch(\r\n    {},\r\n    'orderDetail'\r\n  );\r\n  const componentRef = useRef();\r\n\r\n  const ref = React.createRef();\r\n  const options = {\r\n    orientation: 'a4',\r\n    unit: 'in',\r\n    format: [4, 2],\r\n  };\r\n\r\n  const [invoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch(\r\n    {},\r\n    'invoiceSettingsDetail'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getSiteSettings = async () => {\r\n      const invoiceSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n      // console.log('siteSettingsRes', siteSettingsRes);\r\n    };\r\n    getSiteSettings();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getOrderDetail = async () => {\r\n      await handleOrderDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getOrderDetail();\r\n  }, [id]);\r\n\r\n  console.log('orderDetailState', orderDetailState);\r\n\r\n  const handleOk = () => {\r\n    window.print();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title='Invoice'\r\n      visible={showInvoice}\r\n      bodyStyle={{\r\n        margin: '0',\r\n        padding: '10px',\r\n      }}\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      onCancel={() => setShowInvoice(false)}\r\n      width={'48vw'}\r\n      okText='Print'\r\n      onOk={() => handleOk()}\r\n      footer={false}\r\n    >\r\n      {orderDetailState.isLoading && <Spin />}\r\n      {orderDetailState.data && Object.keys(orderDetailState.data).length > 0 && (\r\n        <>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              width: '100%',\r\n              justifyContent: 'flex-end',\r\n              padding: '20px 20px 20px 20px',\r\n            }}\r\n          >\r\n            <ReactToPdf\r\n              targetRef={ref}\r\n              y={15}\r\n              x={25}\r\n              filename={`order-${orderDetailState.data['shortCode']}-invoice`}\r\n              options={{\r\n                orientation: 'a4',\r\n              }}\r\n            >\r\n              {({ toPdf }) => (\r\n                <Button\r\n                  style={{\r\n                    marginRight: '15px',\r\n                  }}\r\n                  onClick={toPdf}\r\n                  // type=\"primary\"\r\n                  className='btnPrimaryClassNameoutline'\r\n                  icon={<FilePdfOutlined />}\r\n                >\r\n                  Download as pdf\r\n                </Button>\r\n              )}\r\n            </ReactToPdf>\r\n            <ReactToPrint\r\n              documentTitle='Order Invoice'\r\n              trigger={() => (\r\n                <Button\r\n                  // type=\"primary\"\r\n                  className='btnPrimaryClassNameoutline'\r\n                  icon={<PrinterOutlined />}\r\n                >\r\n                  Print\r\n                </Button>\r\n              )}\r\n              content={() => componentRef.current}\r\n            />\r\n          </div>\r\n          <ComponentToPrint\r\n            ref={componentRef}\r\n            anotherRef={ref}\r\n            invoiceSettingsState={invoiceSettingsState}\r\n            orderDetailState={orderDetailState}\r\n          />\r\n        </>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\nexport default OrderInvoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n\r\n\r\n// import lib \r\nimport { Skeleton } from 'antd'\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={productDetailState.isLoading}>\r\n                {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                    <div className='cart-item' key={''}>\r\n\r\n\r\n                        <img\r\n\r\n                            src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']}\r\n                            alt='Img'\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        />\r\n                        <div className='cart-item-info'>\r\n                            <h4\r\n\r\n                            >\r\n                                {productDetailState.data['name']}\r\n                            </h4>\r\n                            <h5\r\n                            >\r\n                                Quantity : {quantity}\r\n                            </h5>\r\n                            <h5\r\n                            >\r\n                                {item['unitPrice']}\r\n                            </h5>\r\n\r\n\r\n                            {/* {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))} */}\r\n\r\n                            {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                        </div>\r\n                        {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                    </div>\r\n                )}\r\n            </Skeleton>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport ProductItemForOrderDetail from \"./productItemForOrderDetail\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string()\r\n    //     .label('Name')\r\n    //     .required()\r\n    //     .min(2, 'Name must have at least 2 characters '),\r\n    // pickUpLocation: Yup.string()\r\n    //     .label('Pick up Location')\r\n    //     .required()\r\n    //     .min(2, 'Pick up Location must have at least 2 characters '),\r\n    // time: Yup.string()\r\n    //     .label('Time')\r\n    //     .required()\r\n    //     .min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    orderList?: any;\r\n    setOrderList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setOrderList, orderList }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\r\n\r\n    console.log('customerVie', customer);\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n    const [showInvoice, setShowInvoice] = useState(false);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // console.log('selectedCityValue', selectedCityValue); \r\n        console.log('cooles', customer)\r\n\r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: customer.id,\r\n                }\r\n            },\r\n            body: {\r\n                billingAddress: {\r\n                    phone: values.phone,\r\n                    email: values.email,\r\n                    address1: values.address1,\r\n                    address2: values.address2,\r\n                    firstName: values.firstName,\r\n                    lastName: values.lastName,\r\n                    city: selectedCityValue || customer['billingAddress']['city'],\r\n                    country: selectedCountryValue || customer['billingAddress']['country'],\r\n                },\r\n                products: customer.products,\r\n                customerId: customer.customerId\r\n                // charge\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return orderList.map(item => item.id).indexOf(customer.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\r\n            const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\r\n            setOrderList(updateRegionList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n\r\n    };\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.LastName) {\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer.billingAddress ? customer.billingAddress : {} }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Order detail\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                            width={'70vw'}\r\n                        >\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                                    <Form.Item\r\n                                        validateStatus={(updateOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['country']}\r\n                                    // noStyle={true}\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.country}\r\n                                            notFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a Country'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCountry}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {countryListState.done &&\r\n                                                countryListState.data.length > 0 &&\r\n                                                countryOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n\r\n                                    </Form.Item>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n                                    </h3>\r\n                                    <Form.Item\r\n                                        // noStyle={true}\r\n                                        validateStatus={(updateOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['city']}\r\n\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.city}\r\n                                            className='selectClassName'\r\n                                            notFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a city'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCity}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {cityListState.done &&\r\n                                                cityListState.data.length > 0 &&\r\n                                                cityOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address 2'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                                    {customer.products && customer.products.length > 0 && (\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        Products \r\n                                    </h3>\r\n                                    )}\r\n\r\n\r\n                            {customer.products && customer.products.length > 0 && <> \r\n                            \r\n                                {customer.products.map(item => {\r\n                    return <ProductItemForOrderDetail\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                            </>}\r\n\r\n\r\n                            <div style={{\r\n                                marginTop: '20px'\r\n                            }}></div>\r\n                    <Button\r\n                    onClick={() => setShowInvoice(true)}\r\n                    className='btnPrimaryClassNameoutline'\r\n                    >\r\n                        Generate Invoice\r\n                        \r\n                        </Button>\r\n\r\n            <div style={{\r\n                                marginBottom: '20px'\r\n                            }}></div>\r\n\r\n            <OrderInvoice\r\n            id={customer.id}\r\n            setShowInvoice={setShowInvoice}\r\n             showInvoice={showInvoice} \r\n            />\r\n\r\n                            \r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n\r\n\r\n\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { CSVLink } from 'react-csv';\r\n\r\nimport {\r\n  Table,\r\n  Badge,\r\n  Menu,\r\n  Dropdown,\r\n  Space,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  notification,\r\n  Popconfirm,\r\n  Select,\r\n  DatePicker,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  DownOutlined,\r\n  DownloadOutlined,\r\n} from '@ant-design/icons';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewOrder from './AddNewOrder';\r\nimport QuickEdit from './QuickEdit';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\n// import lib\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setOrderList: any;\r\n  roles: any;\r\n}\r\n\r\nconst MyTable = ({ data, setOrderList, roles }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch(\r\n    {},\r\n    'deleteOrder'\r\n  );\r\n  const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch(\r\n    {},\r\n    'updateOrderStatus'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteRegion = async (id) => {\r\n    const deleteOrderRes = await handleDeleteOrderFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteOrderRes && deleteOrderRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Order');\r\n      const newOrderList = data.filter((item) => item.id !== id);\r\n      setOrderList(newOrderList);\r\n    }\r\n  };\r\n\r\n  const handleUpdateOrderStatus = async (record, id, newStatus) => {\r\n    const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\r\n      urlOptions: {\r\n        params: {\r\n          newOrderstatus: newStatus,\r\n        },\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateOrderStatusRes && updateOrderStatusRes.status === 'ok') {\r\n      openSuccessNotification('Updated Order Status');\r\n\r\n      const positionInTag = () => {\r\n        return data.map((item) => item.id).indexOf(id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n      console.log('recordis', record, index);\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, data[index], { status: newStatus });\r\n      const updateOrderList = [\r\n        ...data.slice(0, index),\r\n        updatedItem,\r\n        ...data.slice(index + 1),\r\n      ];\r\n      console.log('updateOrderList', updateOrderList, '-----', setOrderList);\r\n      setOrderList(updateOrderList);\r\n    } else {\r\n      openErrorNotification(\r\n        \"Couldn't changed order status, Something went wrong\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const StatusItemMenu = (record, id) => {\r\n    return (\r\n      <Menu>\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, 'pending')}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Pending\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, 'processing')}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Processing\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, 'sentForDelivery')}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Sent for delivery\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, 'complete')}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Completed\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          onClick={() => handleUpdateOrderStatus(record, id, 'cancel')}\r\n          key='1'\r\n          icon={<CheckOutlined />}\r\n        >\r\n          Cancel\r\n        </Menu.Item>\r\n\r\n        {/* <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'deliver')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Delivered\r\n              </Menu.Item>\r\n     */}\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Code'\r\n          dataIndex='shortCode'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                #{text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Delivery'\r\n          dataIndex='deliveryName'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Created'\r\n          dataIndex='date_created'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                }}\r\n              >\r\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Total Price'\r\n          dataIndex='total'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          align='right'\r\n          title='Status'\r\n          dataIndex='status'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              {isAccess('postOrder', roles) ? (\r\n                <Dropdown\r\n                  overlay={() => StatusItemMenu(record, record.id)}\r\n                  placement='bottomRight'\r\n                >\r\n                  <a href='##'>\r\n                    <span\r\n                      // className={'product-attributeTag'}\r\n                      style={{\r\n                        fontSize: '12px',\r\n                      }}\r\n                    >\r\n                      {text}\r\n                      <span\r\n                        style={{\r\n                          marginLeft: '5px',\r\n                          fontSize: '10px',\r\n                        }}\r\n                      >\r\n                        <DownOutlined />\r\n                      </span>\r\n                    </span>\r\n                  </a>\r\n                </Dropdown>\r\n              ) : (\r\n                <a href='##'>\r\n                  <span\r\n                    // className={'product-attributeTag'}\r\n                    style={{\r\n                      fontSize: '12px',\r\n                    }}\r\n                  >\r\n                    {text}\r\n                    <span\r\n                      style={{\r\n                        marginLeft: '5px',\r\n                        fontSize: '10px',\r\n                      }}\r\n                    ></span>\r\n                  </span>\r\n                </a>\r\n              )}\r\n            </>\r\n          )}\r\n        />\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        {/* <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Edit Order'>\r\n              <span className='iconSize' \r\n              onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n              </span>\r\n\r\n               </Tooltip>\r\n               </a>\r\n            </Space>\r\n          )}\r\n        /> */}\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          setvisible={setvisible}\r\n          visible={visible}\r\n          customer={activeCategoryForEdit}\r\n          orderList={data}\r\n          setOrderList={setOrderList}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  history?: any;\r\n  roles?: any;\r\n}\r\n\r\nconst CustomerList = ({ history, roles }: Props) => {\r\n  const [orderList, setOrderList] = useState([]);\r\n\r\n  const [orderState, handleOrderListFetch] = useHandleFetch({}, 'orderList');\r\n  const [orderStatusFilterValue, setorderStatusFilterValue] = useState('');\r\n  const [deliveryRegionNameValue, setdeliveryRegionNameValue] = useState('');\r\n\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n\r\n  const handleStartEndDateRangeDate = (e) => {\r\n    console.log('dateOrder', moment(e[0]).format());\r\n    console.log('dateOff', moment(e[1]).format());\r\n    const startDate = new Date(moment(e[0]).format());\r\n    const endDate = new Date(moment(e[1]).format());\r\n    // @ts-ignore\r\n    setStartDate(startDate);\r\n    // @ts-ignore\r\n    setEndDate(endDate);\r\n  };\r\n\r\n  console.log('orderState', orderState);\r\n\r\n  useEffect(() => {\r\n    const setOrders = async () => {\r\n      const regions = await handleOrderListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            statusValue:\r\n              orderStatusFilterValue === 'all' ? '' : orderStatusFilterValue,\r\n            limitNumber: 500000,\r\n            startDateValue: startDate,\r\n            endDateValue: endDate,\r\n            deliveryRegionNameValue: deliveryRegionNameValue,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setOrderList(regions);\r\n    };\r\n    setOrders();\r\n  }, [orderStatusFilterValue, startDate, endDate, deliveryRegionNameValue]);\r\n\r\n  const [regionList, setRegionList] = useState([]);\r\n  const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n\r\n  useEffect(() => {\r\n    const setRegions = async () => {\r\n      const regions = await handleRegionListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (regions && regions.length > 0) {\r\n        // @ts-ignore\r\n        const regionListOptions = regions.map((item) => {\r\n          return {\r\n            name: item.name,\r\n            value: item.name,\r\n          };\r\n        });\r\n        // @ts-ignore\r\n        setRegionList(regionListOptions);\r\n      }\r\n    };\r\n    setRegions();\r\n  }, []);\r\n\r\n  console.log('regionList33', regionList);\r\n\r\n  // console.log('orderState',orderState)\r\n\r\n  const handleSearch = (value) => {\r\n    if (orderState.data.length > 0) {\r\n      const newOrderList = orderState.data.filter((item) =>\r\n        item.name.includes(value)\r\n      );\r\n      setOrderList(newOrderList);\r\n    }\r\n  };\r\n\r\n  const onOrderStatusFilterChange = (value) => {\r\n    setorderStatusFilterValue(value);\r\n  };\r\n\r\n  const deliveryRegionFilterChange = (value) => {\r\n    setdeliveryRegionNameValue(value);\r\n  };\r\n\r\n  const orderFilteringOption = [\r\n    {\r\n      name: 'All',\r\n      value: 'all',\r\n    },\r\n    {\r\n      name: 'Pending',\r\n      value: 'pending',\r\n    },\r\n    {\r\n      name: 'Processing',\r\n      value: 'processing',\r\n    },\r\n    {\r\n      name: 'Sent for delivery',\r\n      value: 'sentForDelivery',\r\n    },\r\n\r\n    {\r\n      name: 'Completed',\r\n      value: 'complete',\r\n    },\r\n    {\r\n      name: 'Cancel',\r\n      value: 'cancel',\r\n    },\r\n  ];\r\n\r\n  const headers = [\r\n    { label: 'Order Code', key: 'shortCode' },\r\n    { label: 'Name', key: 'name' },\r\n    { label: 'Delivery', key: 'deliveryName' },\r\n    { label: 'Created', key: 'date_created' },\r\n    { label: 'Total Price', key: 'total' },\r\n    { label: 'Status', key: 'status' },\r\n  ];\r\n\r\n  const getData = () => {\r\n    if (orderList && orderList.length > 0) {\r\n      const csvData = orderList.map((item) => {\r\n        return {\r\n          shortCode: item.shortCode,\r\n          name: item.name,\r\n          deliveryName: item.deliveryName,\r\n          date_created: item.date_created\r\n            ? moment(item.joiningDate).format('MMMM Do YYYY, h:mm a')\r\n            : '',\r\n          Status: item.status,\r\n          total: item.total,\r\n        };\r\n      });\r\n\r\n      return csvData;\r\n    } else return [];\r\n  };\r\n\r\n  const data = getData();\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Orders</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search orders..'\r\n              onSearch={(value) => handleSearch(value)}\r\n              // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            {orderList && orderList.length > 0 && (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    marginRight: '25px',\r\n                  }}\r\n                >\r\n                  <CSVLink\r\n                    filename={'Orders.csv'}\r\n                    data={data}\r\n                    headers={headers}\r\n                  >\r\n                    Export as csv\r\n                  </CSVLink>\r\n                  <span\r\n                    style={{\r\n                      color: '#1890ff',\r\n                      marginLeft: '10px',\r\n                    }}\r\n                  >\r\n                    <DownloadOutlined />\r\n                  </span>\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            {isAccess('postOrder', roles) && (\r\n              <Button\r\n                // type=\"primary\"\r\n                className='btnPrimaryClassNameoutline'\r\n                icon={<PlusOutlined />}\r\n                onClick={() => history.push('/admin/order/new')}\r\n              >\r\n                Add New\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: '30px',\r\n          }}\r\n          className='categoryListContainer__header'\r\n        >\r\n          <div></div>\r\n\r\n          <div>\r\n            <RangePicker\r\n              style={{\r\n                width: 270,\r\n                color: '#3fa6f9',\r\n              }}\r\n              onChange={handleStartEndDateRangeDate}\r\n              picker={'date'}\r\n              bordered={false}\r\n            />\r\n\r\n            {regionList && regionList.length > 0 && (\r\n              <>\r\n                <Select\r\n                  showSearch\r\n                  style={{\r\n                    borderRadius: '15px',\r\n                    color: '#3fa6f9',\r\n                    width: '150px',\r\n                    marginRight: '15px',\r\n                  }}\r\n                  placeholder='Delivery Region'\r\n                  optionFilterProp='children'\r\n                  onChange={deliveryRegionFilterChange}\r\n                  // defaultValue={'pending'}\r\n                  bordered={false}\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {regionList.map((option) => {\r\n                    return <Option value={option.value}>{option.name}</Option>;\r\n                  })}\r\n                </Select>\r\n              </>\r\n            )}\r\n\r\n            <Select\r\n              style={{ borderRadius: '15px', color: '#3fa6f9', width: '100px' }}\r\n              placeholder='Select status'\r\n              optionFilterProp='children'\r\n              onChange={onOrderStatusFilterChange}\r\n              defaultValue={'all'}\r\n              bordered={false}\r\n            >\r\n              {orderFilteringOption.map((option) => {\r\n                return <Option value={option.value}>{option.name}</Option>;\r\n              })}\r\n            </Select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {orderState.done && orderList.length > 0 && (\r\n            <MyTable\r\n              roles={roles}\r\n              setOrderList={setOrderList}\r\n              data={orderList}\r\n            />\r\n          )}\r\n          {orderState.isLoading && <DataTableSkeleton />}\r\n\r\n          {orderState.done && !(orderList.length > 0) && (\r\n            <Empty title='No Order found' />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* {orderState.done && \r\n          <AddNewOrder \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          orderList={orderState.data}\r\n          setOrderList={setOrderList}\r\n           />} */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(CustomerList);\r\n","import React, {memo} from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n                  <h3 className='addOrderContainer-sectionTitle'>\r\n                <span>\r\n                    <ShopOutlined />\r\n                </span>\r\n                Added Products\r\n            </h3>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(AddNewOrderSummary)\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\ninterface Props {\r\n    setCustomerId?: any;\r\n    setSelectedCustomerData?: any;\r\n    customerListState?:any; \r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setCustomerId, setSelectedCustomerData }: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedBrandId, setSelectedBrandId] = useState('');\r\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n    function onChange(option) {\r\n        if (options && options.length > 0) {\r\n            const customerData = options.find(item => item.value === option);\r\n            if (customerData) {\r\n                setSelectedCustomerData(customerData);\r\n            }\r\n        }\r\n        setSelectedBrandId(option);\r\n        setCustomerId(option);\r\n        // console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        // console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        // console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        // console.log('search:', val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setBrands = async () => {\r\n            const brandListRes = await handleTagListFetch({\r\n                urlOptions:{\r\n                    params: {\r\n                      sortItem: 'added',\r\n                      sortOrderValue: '-1'\r\n                    }\r\n                    }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (brandListRes && brandListRes.length > 0) {\r\n                // @ts-ignore\r\n                const brandOptions = brandListRes.map((brand) => {\r\n                    return {\r\n                        ...brand,\r\n                        value: brand.id,\r\n                        name: `${brand.firstName} ${brand.lastName}`\r\n                    };\r\n                });\r\n                setoptions(brandOptions);\r\n            }\r\n        };\r\n\r\n        setBrands();\r\n    }, []);\r\n\r\n    return (\r\n        <Skeleton loading={brandState.isLoading}>\r\n            <Select\r\n                showSearch\r\n                size='middle'\r\n                style={{ width: '100%' }}\r\n                placeholder='Select a Customer'\r\n                optionFilterProp='children'\r\n                onChange={onChange}\r\n                onFocus={onFocus}\r\n                onBlur={onBlur}\r\n                onSearch={onSearch}\r\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            >\r\n                {brandState.done &&\r\n                    brandState.data.length > 0 &&\r\n                    options.map((option) => {\r\n                        return <Option value={option.value}>{option.name}</Option>;\r\n                    })}\r\n            </Select>\r\n        </Skeleton>\r\n\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useEffect, useState,memo } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n    productListState?:any; \r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds,\r\n    productListState\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (productListState.done && productListState.data  && productListState.data.length > 0) {\r\n            // @ts-ignore\r\n            const productOptions = productListState.data.map((product) => {\r\n                return product.name\r\n            });\r\n            setoptions(productOptions);\r\n        }\r\n\r\n    }, [productListState]);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (productListState.done && productListState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = productListState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Skeleton loading={productListState.isLoading}>\r\n                {productListState.done && productListState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Tags);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  Radio,\r\n  message,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Empty,\r\n  Steps,\r\n  Form,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  PlusOutlined,\r\n  CheckCircleOutlined,\r\n  CaretRightOutlined,\r\n  CaretLeftOutlined,\r\n  CaretRightFilled,\r\n  UserOutlined,\r\n  InfoCircleOutlined,\r\n  CarOutlined,\r\n  ClockCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport AddNewOrderSummary from './AddNewOrderSummary';\r\nimport CustomersId from './CustomersId';\r\nimport AddProducts from './AddProducts';\r\nimport { product } from '../../state/ducks';\r\n\r\n//import utils\r\nimport { getDeliveryChargeTotal } from '.././../utils';\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Order Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst initialValues = {\r\n  phone: '',\r\n  email: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  address1: '',\r\n  address2: '',\r\n  zipCode: '',\r\n  additionalInfo: '',\r\n  country: '',\r\n  city: '',\r\n};\r\n\r\nconst steps = [\r\n  {\r\n    title: 'Order Information',\r\n    content: '',\r\n    // description: 'Add Customer & Products'\r\n  },\r\n  {\r\n    title: 'Shipping Address',\r\n  },\r\n  {\r\n    title: 'Confirm Order',\r\n    content: '',\r\n  },\r\n];\r\n\r\ninterface Props {}\r\n\r\nconst AddNewOrder = ({}: Props) => {\r\n  const [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n  const [customerId, setCustomerId] = useState([]);\r\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n  const [current, setCurrent] = useState(0);\r\n  const [productIds, setProductIds] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  const [productListState, handleProductListFetch] = useHandleFetch(\r\n    {},\r\n    'productList'\r\n  );\r\n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'customerList'\r\n  );\r\n\r\n  const [deliveryRegionState, handleDeliveryRegionFetch] = useHandleFetch(\r\n    [],\r\n    'getDeliveryRegion'\r\n  );\r\n\r\n  const [deliveryRegionName, setDeliveryRegionName] = useState('');\r\n  const [selectedRegion, setSelectedRegion] = useState({});\r\n  const [regionDeliveryCharge, setregionDeliveryCharge] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (selectedCustomerData && Object.keys(selectedCustomerData).length > 0) {\r\n      setselectedCityValue(selectedCustomerData['city']);\r\n      setselectedCountryValue(selectedCustomerData['country']);\r\n    }\r\n  }, [selectedCustomerData]);\r\n\r\n  const isDeliveryChargeExists = (regions) => {\r\n    if (!regions) {\r\n      return false;\r\n    } else return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getAndSetShippingDeliveryCharge = async () => {\r\n      const deliveryRegionState = await handleDeliveryRegionFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            cityName: selectedCityValue,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setregionDeliveryCharge(deliveryRegionState);\r\n    };\r\n\r\n    getAndSetShippingDeliveryCharge();\r\n    console.log('selectedCityValue', selectedCityValue);\r\n  }, [selectedCityValue]);\r\n\r\n  const handleDeviliveryRegionChange = (value) => {\r\n    setDeliveryRegionName(value);\r\n\r\n    if (\r\n      isDeliveryChargeExists(\r\n        regionDeliveryCharge.length > 0 && regionDeliveryCharge\r\n      )\r\n    ) {\r\n      const deliveryRegions = regionDeliveryCharge;\r\n\r\n      const selectedRegion = deliveryRegions.find(\r\n        (region) => region['_id'] === value\r\n      );\r\n      if (selectedRegion) {\r\n        setSelectedRegion(selectedRegion);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      isDeliveryChargeExists(\r\n        regionDeliveryCharge.length > 0 && regionDeliveryCharge\r\n      )\r\n    ) {\r\n      const deliveryRegions = regionDeliveryCharge;\r\n\r\n      const selectedRegion = deliveryRegions.find(\r\n        (region, index) => 0 === index\r\n      );\r\n      if (selectedRegion) {\r\n        setDeliveryRegionName(selectedRegion['name']);\r\n        setSelectedRegion(selectedRegion);\r\n      }\r\n    }\r\n  }, [regionDeliveryCharge]);\r\n\r\n  useEffect(() => {\r\n    const setProducts = async () => {\r\n      const productListRes = await handleProductListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n            productType: 'product',\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    setProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const customerListRes = await handleCustomerListFetch({});\r\n    };\r\n    setCustomers();\r\n  }, []);\r\n\r\n  const next = () => {\r\n    const newCurrent = current + 1;\r\n    setCurrent(newCurrent);\r\n  };\r\n\r\n  const prev = () => {\r\n    const newCurrent = current - 1;\r\n    setCurrent(newCurrent);\r\n  };\r\n\r\n  const handleCheckoutSubmit = async (values: any, actions: any) => {\r\n    const products =\r\n      productList && productList.length > 0\r\n        ? productList.map((item) => {\r\n            return {\r\n              product: item._id,\r\n              quantity: item.quantity,\r\n              variation: item.variation,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    const addOrderRes = await handleOrderFetch({\r\n      body: {\r\n        shippingAddress: {\r\n          phone: values.phone,\r\n          email: values.email,\r\n          address1: values.address1,\r\n          address2: values.address2,\r\n          firstName: values.firstName,\r\n          lastName: values.lastName,\r\n          city: selectedCityValue || selectedCustomerData['city'],\r\n          country: selectedCountryValue || selectedCustomerData['country'],\r\n        },\r\n        items: products,\r\n        delivery: deliveryRegionName,\r\n        customerId: customerId,\r\n        // charge\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addOrderRes && addOrderRes.status === 'ok') {\r\n      // openSuccessNotification();\r\n\r\n      actions.resetForm();\r\n\r\n      setCurrent(0);\r\n      setProductIds([]);\r\n      setProductList([]);\r\n      setCustomerId([]);\r\n      setselectedCityValue('');\r\n      setselectedCountryValue('');\r\n      setDeliveryRegionName('');\r\n      setSelectedRegion({});\r\n      setregionDeliveryCharge([]);\r\n      setSelectedCustomerData({});\r\n    } else {\r\n      openErrorNotification(\"Couldn't create order, Something went wrong\");\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addOrderState['isLoading']) {\r\n      const error = addOrderState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addOrderState['isLoading'] &&\r\n      Object.keys(addOrderState.data).length > 0\r\n    ) {\r\n      if (addOrderState['data']['status'] === 'ok') {\r\n        openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addOrderState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.id,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleAddDeliveryCharge = () => {};\r\n\r\n  useEffect(() => {\r\n    if (productIds && productIds.length > 0 && productList) {\r\n      if (productIds.length > productList.length) {\r\n        const variation =\r\n          productIds[productIds.length - 1]['pricing'] &&\r\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\r\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n\r\n        setProductList([\r\n          ...productList,\r\n          {\r\n            ...productIds[productIds.length - 1],\r\n            _id: productIds[productIds.length - 1]['id'],\r\n            variation: variation,\r\n            quantity: 1,\r\n          },\r\n        ]);\r\n      } else if (productIds.length < productList.length) {\r\n        console.log('productIds', productIds);\r\n        console.log('productList', productList);\r\n\r\n        const newProductList = productList.filter((item) => {\r\n          let isTrue = false;\r\n          productIds.forEach((product) => {\r\n            if (product.id === item._id) {\r\n              isTrue = true;\r\n            }\r\n          });\r\n          return isTrue;\r\n        });\r\n        setProductList(newProductList);\r\n      }\r\n    } else {\r\n      setProductList([]);\r\n    }\r\n    // console.log('productIds', productIds)\r\n  }, [productIds]);\r\n\r\n  // console.log('productList', productList)\r\n  console.log('selectedCustomerData', selectedCustomerData);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleCheckoutSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...selectedCustomerData }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div className='addOrderContainer'>\r\n            <h3>Add New Order</h3>\r\n            <div className='addOrderContainer__container'>\r\n              <Steps current={current}>\r\n                {steps.map((item) => (\r\n                  <Step key={item.title} title={item.title} />\r\n                ))}\r\n              </Steps>\r\n\r\n              {current === 0 && (\r\n                <div className='addOrderContainer__container-OrderInfoContainer'>\r\n                  <div className='addOrderContainer__container-OrderInfoContainer-left'>\r\n                    <h3 style={{}} className='addOrderContainer-sectionTitle'>\r\n                      <span>\r\n                        <UserOutlined />\r\n                      </span>\r\n                      Customers And products\r\n                    </h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h4 className='inputFieldLabel'>Customer</h4>\r\n                    <CustomersId\r\n                      customerListState={customerListState}\r\n                      setSelectedCustomerData={setSelectedCustomerData}\r\n                      setCustomerId={setCustomerId}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n                    <h4 className='inputFieldLabel'>Products</h4>\r\n                    <AddProducts\r\n                      productListState={productListState}\r\n                      productIds={productIds}\r\n                      setProductIds={setProductIds}\r\n                    />\r\n                  </div>\r\n                  <div className='addOrderContainer__container-OrderInfoContainer-right'>\r\n                    <AddNewOrderSummary\r\n                      setProductList={setProductList}\r\n                      productList={productList}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {current === 1 && (\r\n                <div className='addOrderContainer__container-address'>\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='First Name'\r\n                        value={values.firstName}\r\n                        name='firstName'\r\n                        isError={\r\n                          (touched.firstName && errors.firstName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['firstName'])\r\n                        }\r\n                        errorString={\r\n                          (touched.firstName && errors.firstName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['firstName'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('firstName');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Last Name'\r\n                        value={values.lastName}\r\n                        name='lastName'\r\n                        isError={\r\n                          (touched.lastName && errors.lastName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['lastName'])\r\n                        }\r\n                        errorString={\r\n                          (touched.lastName && errors.lastName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['lastName'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('lastName');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Phone'\r\n                        value={values.phone}\r\n                        name='phone'\r\n                        isError={\r\n                          (touched.phone && errors.phone) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['phone'])\r\n                        }\r\n                        errorString={\r\n                          (touched.phone && errors.phone) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['phone'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('phone');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Email'\r\n                        value={values.email}\r\n                        name='email'\r\n                        isError={\r\n                          (touched.email && errors.email) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['email'])\r\n                        }\r\n                        errorString={\r\n                          (touched.email && errors.email) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['email'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('email');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <h3 className='inputFieldLabel'>Country</h3>\r\n\r\n                      <Form.Item\r\n                        validateStatus={\r\n                          addOrderState.error['error']['country'] ? 'error' : ''\r\n                        }\r\n                        help={addOrderState.error['error']['country']}\r\n                        // noStyle={true}\r\n                      >\r\n                        <Select\r\n                          defaultValue={values.country}\r\n                          notFoundContent={\r\n                            <Empty\r\n                              description='No Country Found'\r\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                            />\r\n                          }\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select a Country'\r\n                          optionFilterProp='children'\r\n                          onChange={onChangeCountry}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {countryListState.done &&\r\n                            countryListState.data.length > 0 &&\r\n                            countryOptions.map((option) => {\r\n                              return (\r\n                                <Option value={option.value}>\r\n                                  {option.name}\r\n                                </Option>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <h3 className='inputFieldLabel'>City</h3>\r\n                      <Form.Item\r\n                        // noStyle={true}\r\n                        validateStatus={\r\n                          addOrderState.error['error']['city'] ? 'error' : ''\r\n                        }\r\n                        help={addOrderState.error['error']['city']}\r\n                      >\r\n                        <Select\r\n                          defaultValue={values.city}\r\n                          className='selectClassName'\r\n                          notFoundContent={\r\n                            <Empty\r\n                              description='First Select a Country'\r\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                            />\r\n                          }\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select a city'\r\n                          optionFilterProp='children'\r\n                          onChange={onChangeCity}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {cityListState.done &&\r\n                            cityListState.data.length > 0 &&\r\n                            cityOptions.map((option) => {\r\n                              return (\r\n                                <Option value={option.value}>\r\n                                  {option.name}\r\n                                </Option>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      marginTop: '12px',\r\n                    }}\r\n                  ></div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Address'\r\n                        value={values.address1}\r\n                        name='address1'\r\n                        isError={\r\n                          (touched.address1 && errors.address1) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address1'])\r\n                        }\r\n                        errorString={\r\n                          (touched.address1 && errors.address1) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address1'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('address1');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Address 2'\r\n                        value={values.address2}\r\n                        name='address2'\r\n                        isError={\r\n                          (touched.address2 && errors.address2) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address2'])\r\n                        }\r\n                        errorString={\r\n                          (touched.address2 && errors.address2) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address2'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('address2');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {current === 10 && (\r\n                <div className='addOrderContainer__container-address'>\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='First Name'\r\n                        value={values.firstName}\r\n                        name='firstName'\r\n                        isError={\r\n                          (touched.firstName && errors.firstName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['firstName'])\r\n                        }\r\n                        errorString={\r\n                          (touched.firstName && errors.firstName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['firstName'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('firstName');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Last Name'\r\n                        value={values.lastName}\r\n                        name='lastName'\r\n                        isError={\r\n                          (touched.lastName && errors.lastName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['lastName'])\r\n                        }\r\n                        errorString={\r\n                          (touched.lastName && errors.lastName) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['lastName'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('lastName');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Phone'\r\n                        value={values.phone}\r\n                        name='phone'\r\n                        isError={\r\n                          (touched.phone && errors.phone) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['phone'])\r\n                        }\r\n                        errorString={\r\n                          (touched.phone && errors.phone) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['phone'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('phone');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Email'\r\n                        value={values.email}\r\n                        name='email'\r\n                        isError={\r\n                          (touched.email && errors.email) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['email'])\r\n                        }\r\n                        errorString={\r\n                          (touched.email && errors.email) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['email'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('email');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <h3 className='inputFieldLabel'>Country</h3>\r\n\r\n                      <Form.Item\r\n                        validateStatus={\r\n                          addOrderState.error['error']['country'] ? 'error' : ''\r\n                        }\r\n                        help={addOrderState.error['error']['country']}\r\n                        // noStyle={true}\r\n                      >\r\n                        <Select\r\n                          defaultValue={'Comoros'}\r\n                          notFoundContent={\r\n                            <Empty\r\n                              description='No Country Found'\r\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                            />\r\n                          }\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select a Country'\r\n                          optionFilterProp='children'\r\n                          onChange={onChangeCountry}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {countryListState.done &&\r\n                            countryListState.data.length > 0 &&\r\n                            countryOptions.map((option) => {\r\n                              return (\r\n                                <Option value={option.value}>\r\n                                  {option.name}\r\n                                </Option>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <h3 className='inputFieldLabel'>City</h3>\r\n                      <Form.Item\r\n                        // noStyle={true}\r\n                        validateStatus={\r\n                          addOrderState.error['error']['city'] ? 'error' : ''\r\n                        }\r\n                        help={addOrderState.error['error']['city']}\r\n                      >\r\n                        <Select\r\n                          defaultValue={'Dhaka'}\r\n                          className='selectClassName'\r\n                          notFoundContent={\r\n                            <Empty\r\n                              description='First Select a Country'\r\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                            />\r\n                          }\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select a city'\r\n                          optionFilterProp='children'\r\n                          onChange={onChangeCity}\r\n                          filterOption={(input, option) =>\r\n                            option.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {cityListState.done &&\r\n                            cityListState.data.length > 0 &&\r\n                            cityOptions.map((option) => {\r\n                              return (\r\n                                <Option value={option.value}>\r\n                                  {option.name}\r\n                                </Option>\r\n                              );\r\n                            })}\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      marginTop: '12px',\r\n                    }}\r\n                  ></div>\r\n\r\n                  <div className='dubbleRowInputs'>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='Address'\r\n                        value={values.address1}\r\n                        name='address1'\r\n                        isError={\r\n                          (touched.address1 && errors.address1) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address1'])\r\n                        }\r\n                        errorString={\r\n                          (touched.address1 && errors.address1) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address1'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('address1');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className='dubbleRowInputs__item'>\r\n                      <Input\r\n                        label='More specific address'\r\n                        value={values.address2}\r\n                        name='address2'\r\n                        isError={\r\n                          (touched.address2 && errors.address2) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address2'])\r\n                        }\r\n                        errorString={\r\n                          (touched.address2 && errors.address2) ||\r\n                          (!isSubmitting &&\r\n                            addOrderState.error['error']['address2'])\r\n                        }\r\n                        onChange={(e: any) => {\r\n                          handleChange(e);\r\n                          setFieldTouched('address2');\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {current === 2 && (\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    marginTop: '40px',\r\n                    alignItems: 'center',\r\n                    flexDirection: 'column',\r\n                  }}\r\n                >\r\n                  <AddNewOrderSummary\r\n                    setProductList={setProductList}\r\n                    productList={productList}\r\n                  />\r\n\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'center',\r\n                    }}\r\n                  >\r\n                    <h3\r\n                      style={{\r\n                        marginTop: '20px',\r\n                        display: 'inline-block',\r\n                        textAlign: 'center',\r\n                      }}\r\n                      className='addOrderContainer-sectionTitle'\r\n                    >\r\n                      <span>\r\n                        <CarOutlined />\r\n                      </span>\r\n                      Delivery Region List ({selectedCityValue})\r\n                    </h3>\r\n\r\n                    {regionDeliveryCharge && regionDeliveryCharge.length > 0 ? (\r\n                      <>\r\n                        <Radio.Group\r\n                          style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            flexWrap: 'wrap',\r\n                          }}\r\n                          value={deliveryRegionName}\r\n                          defaultValue={deliveryRegionName}\r\n                          name='radiogroup'\r\n                        >\r\n                          {regionDeliveryCharge.map((deliveryRegionItem) => {\r\n                            return (\r\n                              <div\r\n                                onClick={() =>\r\n                                  handleDeviliveryRegionChange(\r\n                                    deliveryRegionItem._id\r\n                                  )\r\n                                }\r\n                                className='deliveryRegionLabelContainer'\r\n                              >\r\n                                <div className='deliveryRegionLabelContainer__radio'>\r\n                                  <Radio value={deliveryRegionItem._id}></Radio>\r\n                                </div>\r\n                                <div className='deliveryRegionLabelContainer__info'>\r\n                                  <h3>{deliveryRegionItem.name}</h3>\r\n                                  <h4>\r\n                                    <span>\r\n                                      <CarOutlined />\r\n                                    </span>\r\n                                    {deliveryRegionItem.pickUpLocation}\r\n                                  </h4>\r\n                                  <h4>\r\n                                    <span>\r\n                                      <ClockCircleOutlined />\r\n                                    </span>\r\n                                    {deliveryRegionItem.time}\r\n                                  </h4>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </Radio.Group>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <h4\r\n                          style={{\r\n                            textAlign: 'center',\r\n                            color: '#777',\r\n                            marginTop: '50px',\r\n                          }}\r\n                        >\r\n                          Delivery not found\r\n                        </h4>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      marginTop: '40px',\r\n                      marginBottom: '50px',\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      loading={addOrderState.isLoading}\r\n                      style={{\r\n                        marginTop: '10px',\r\n                        marginLeft: '15px',\r\n                      }}\r\n                      className='btnPrimaryClassNameoutline-blue'\r\n                      onClick={(e: any) => handleSubmit(e)}\r\n                    >\r\n                      Place Order\r\n                      <CaretRightOutlined />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                }}\r\n              >\r\n                {current > 0 && (\r\n                  <Button\r\n                    style={{ marginRight: '15px', marginTop: '10px' }}\r\n                    // type=\"primary\"\r\n                    className='btnPrimaryClassNameoutline'\r\n                    type='primary'\r\n                    onClick={() => prev()}\r\n                  >\r\n                    <CaretLeftOutlined /> Previous\r\n                  </Button>\r\n                )}\r\n\r\n                {current < steps.length - 1 && (\r\n                  <>\r\n                    <div>\r\n                      <Button\r\n                        style={{\r\n                          marginTop: '10px',\r\n                        }}\r\n                        className='btnPrimaryClassNameoutline'\r\n                        type='primary'\r\n                        onClick={() => {\r\n                          if (current === 1) {\r\n                            setCurrent(2);\r\n                          } else {\r\n                            next();\r\n                          }\r\n                        }}\r\n                      >\r\n                        Next\r\n                        <CaretRightOutlined />\r\n                      </Button>\r\n\r\n                      {/* {current === 1 && <Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => setCurrent(2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUse different address< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t} */}\r\n                    </div>\r\n                  </>\r\n                )}\r\n\r\n                {/* {current === steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)} */}\r\n              </div>\r\n\r\n              {/* <div className='addOrderContainer__container-left'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\r\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\r\n\t\t\t\t\t\t\t\t</div> */}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport SelectProducts from \"./OrderProductIds\";\r\nimport SelectedProductItems from \"../productBundle/SelectedProductItems\";\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Order Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    summary: '',\r\n    note: ''\r\n}\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setTagEditVisible: any;\r\n    tagEditVisible: any;\r\n    setOrderNotes?:any; \r\n    orderNotes?:any; \r\n}\r\n\r\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible, setOrderNotes, orderNotes }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'addOrderNote');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        console.log('orderValues',values); \r\n        \r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            body: {\r\n                note: values.note,\r\n                summary: values.summary,\r\n                order: customer.id,\r\n            },\r\n        });\r\n\r\n        \r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification('Order Note added');\r\n            // @ts-ignore\r\n            setOrderNotes([{...addRegionRes},...orderNotes])\r\n            setTagEditVisible(false)\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Add Order Note\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <TextArea\r\n                                rows={4}\r\n\t\t\t\t\t\t\t\tlabel='Note'\r\n\t\t\t\t\t\t\t\tvalue={values.note}\r\n\t\t\t\t\t\t\t\tname='note'\r\n\t\t\t\t\t\t\t\tisError={(touched.note && errors.note) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.note && errors.note) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('note');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                            <TextArea\r\n                                rows={2}\r\n\t\t\t\t\t\t\t\tlabel='Summary'\r\n\t\t\t\t\t\t\t\tvalue={values.summary}\r\n\t\t\t\t\t\t\t\tname='summary'\r\n\t\t\t\t\t\t\t\tisError={(touched.summary && errors.summary) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.summary && errors.summary) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('summary');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                        </Modal>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport SelectProducts from \"./OrderProductIds\";\r\nimport SelectedProductItems from \"../productBundle/SelectedProductItems\";\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Order Note Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    summary: '',\r\n    note: ''\r\n}\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setTagEditVisible: any;\r\n    tagEditVisible: any;\r\n    setOrderNotes?:any; \r\n    orderNotes?:any; \r\n    activeNote?:any; \r\n}\r\n\r\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible, setOrderNotes, orderNotes,activeNote }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrderNote');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        console.log('orderValues',values); \r\n        \r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: activeNote._id\r\n                }\r\n            }, \r\n            body: {\r\n                note: values.note,\r\n                summary: values.summary,\r\n                order: customer.id,\r\n            },\r\n        });\r\n\r\n        \r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            const positionInTag = () => {\r\n\t\t\t\treturn orderNotes.map(item => item._id).indexOf(activeNote._id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, orderNotes[index], { ...addRegionRes, _id: activeNote._id });\r\n\t\t\tconst updateTagList = [...orderNotes.slice(0, index), updatedItem, ...orderNotes.slice(index + 1)];\r\n\t\t\tsetOrderNotes(updateTagList);\r\n            setTagEditVisible(false)\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...activeNote }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Update Order Note\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <TextArea\r\n                                rows={4}\r\n\t\t\t\t\t\t\t\tlabel='Note'\r\n\t\t\t\t\t\t\t\tvalue={values.note}\r\n\t\t\t\t\t\t\t\tname='note'\r\n\t\t\t\t\t\t\t\tisError={(touched.note && errors.note) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.note && errors.note) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('note');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                            <TextArea\r\n                                rows={2}\r\n\t\t\t\t\t\t\t\tlabel='Summary'\r\n\t\t\t\t\t\t\t\tvalue={values.summary}\r\n\t\t\t\t\t\t\t\tname='summary'\r\n\t\t\t\t\t\t\t\tisError={(touched.summary && errors.summary) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.summary && errors.summary) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('summary');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                        </Modal>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n  InfoCircleOutlined,\r\n  EyeOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport OrderEdit from './OrderEdit';\r\nimport OrderNoteEdit from './OrderNoteEdit';\r\nimport OrderInvoice from './OrderInvoice';\r\nimport { OrderDetail } from '.';\r\n\r\n// import state\r\nimport { isAccess } from '../../utils';\r\nimport { connect } from 'react-redux';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Order Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({ roles }: Props) => {\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'orderDetail'\r\n  );\r\n  const [orderDetailNotesState, handleOrderDetailNotesFetch] = useHandleFetch(\r\n    {},\r\n    'getOrderNote'\r\n  );\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'tagProducts'\r\n  );\r\n  const [deleteOrderNoteState, handleDeleteOrderNoteFetch] = useHandleFetch(\r\n    {},\r\n    'deleteOrderNote'\r\n  );\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n  const [activeOrderNote, setActiveOrderNote] = useState({});\r\n  const [isOrderNoteEdit, setIsOrderNoteEdit] = useState(false);\r\n  const [isInvoiceShow, setIsInvoiceShow] = useState(false);\r\n\r\n  console.log('orderDetailNotesState', orderDetailNotesState);\r\n\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const tagId = params['id'];\r\n  const [orderNotes, setOrderNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      const orderNotes = await handleOrderDetailNotesFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (orderNotes) {\r\n        // @ts-ignore\r\n        setOrderNotes(orderNotes);\r\n      }\r\n    };\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  console.log('orderDetailState', tagDetailState);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('orderDetailState', tagDetailState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  const handleDeleteOrderNote = async (id) => {\r\n    const res = await handleDeleteOrderNoteFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (res && res.status === 'ok') {\r\n      const newOrderNoteList =\r\n        orderNotes && orderNotes.filter((item) => item._id !== id);\r\n      setOrderNotes(newOrderNoteList);\r\n      openSuccessNotification('Order note deleted!');\r\n    }\r\n  };\r\n\r\n  console.log(\r\n    \"tagDetailState.data['products']\",\r\n    tagDetailState.data['products']\r\n  );\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <OrderNoteEdit\r\n        setOrderNotes={setOrderNotes}\r\n        orderNotes={orderNotes}\r\n        tagEditVisible={isOrderNoteEdit}\r\n        setTagEditVisible={setIsOrderNoteEdit}\r\n        customer={tagDetailState.data}\r\n        activeNote={activeOrderNote}\r\n      />\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Order Detail</h3>\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          Object.keys(tagDetailState.data).length > 0 && (\r\n            <>\r\n              <div>\r\n                <OrderInvoice\r\n                  setShowInvoice={setIsInvoiceShow}\r\n                  showInvoice={isInvoiceShow}\r\n                  id={tagDetailState['data']['id']}\r\n                />\r\n                <OrderEdit\r\n                  setOrderNotes={setOrderNotes}\r\n                  orderNotes={orderNotes}\r\n                  tagEditVisible={tagEditVisible}\r\n                  setTagEditVisible={setTagEditVisible}\r\n                  customer={tagDetailState.data}\r\n                />\r\n                <Button\r\n                  onClick={() => setIsInvoiceShow(true)}\r\n                  type='link'\r\n                  icon={<EyeOutlined />}\r\n                >\r\n                  Generate Invoice\r\n                </Button>\r\n\r\n                {isAccess('postOrder', roles) && (\r\n                  <>\r\n                    <Button\r\n                      onClick={() => setTagEditVisible(true)}\r\n                      type='link'\r\n                      icon={<PlusOutlined />}\r\n                    >\r\n                      Add note\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          !(Object.keys(tagDetailState.data).length > 0) && (\r\n            <Empty\r\n              description='No Order found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          Object.keys(tagDetailState.data).length > 0 && (\r\n            <>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    flex: 1,\r\n                    marginRight: '20px',\r\n                  }}\r\n                  className='brandDetailContainer__header'\r\n                >\r\n                  <div className='brandDetailContainer__header-info'>\r\n                    <h2>{tagDetailState.data['name']}</h2>\r\n                    <h3>{tagDetailState.data['description']}</h3>\r\n                    {tagDetailState.data['url'] && (\r\n                      <h3>\r\n                        URL:\r\n                        <span>{tagDetailState.data['url']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['country'] && (\r\n                      <h3>\r\n                        COUNTRY:\r\n                        <span>{tagDetailState['data']['country']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['city'] && (\r\n                      <h3>\r\n                        CITY:\r\n                        <span>{tagDetailState['data']['city']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['address1'] && (\r\n                      <h3>\r\n                        ADDRESS:\r\n                        <span>{tagDetailState['data']['address1']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['phone'] && (\r\n                      <h3>\r\n                        PHONE:\r\n                        <span>{tagDetailState['data']['phone']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['email'] && (\r\n                      <h3>\r\n                        EMAIL:\r\n                        <span>{tagDetailState['data']['email']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['paymentMethod'] && (\r\n                      <h3>\r\n                        PAYMENT METHOD:\r\n                        <span>{tagDetailState['data']['paymentMethod']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['paymentStatus'] && (\r\n                      <h3>\r\n                        PAYMENT STATUS:\r\n                        <span>{tagDetailState['data']['paymentStatus']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['status'] && (\r\n                      <h3>\r\n                        ORDER STATUS:\r\n                        <span>{tagDetailState['data']['status']}</span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {/* \r\n                            {tagDetailState['data']['deliveryCharge'] && (\r\n                                <h3>\r\n                                    DELIVERY CHARGE:\r\n                                    <span>\r\n                                        {tagDetailState['data']['deliveryCharge']}\r\n                                    </span>\r\n                                </h3>\r\n                            )} */}\r\n\r\n                    {tagDetailState['data']['deliveryName'] && (\r\n                      <h3>\r\n                        DELIVERY LOCATION:\r\n                        <span>\r\n                          {`${tagDetailState['data']['deliveryName']}, ${tagDetailState['data']['deliveryPickUpLocation']}, ${tagDetailState['data']['deliveryCountryName']}`}\r\n                        </span>\r\n                      </h3>\r\n                    )}\r\n\r\n                    {tagDetailState['data']['total'] && (\r\n                      <h3>\r\n                        TOTAL ORDER PRICE:\r\n                        <span>{`${tagDetailState['data']['total']}`}</span>\r\n                      </h3>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  style={{\r\n                    maxWidth: '35%',\r\n                    minWidth: '35%',\r\n                  }}\r\n                  className='brandDetailContainer__header'\r\n                >\r\n                  <div\r\n                    style={{\r\n                      width: '100%',\r\n                    }}\r\n                    className='brandDetailContainer__header-info'\r\n                  >\r\n                    <h2>Notes</h2>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                      }}\r\n                    >\r\n                      {orderDetailNotesState.done &&\r\n                        orderNotes &&\r\n                        orderNotes.length > 0 &&\r\n                        orderNotes.map((noteItem: any) => {\r\n                          return (\r\n                            <div className='OrderNoteItem'>\r\n                              <div className='OrderNoteItem__action'>\r\n                                {/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n                                <span\r\n                                  className='OrderNoteItem__action-edit'\r\n                                  onClick={() => {\r\n                                    setActiveOrderNote(noteItem);\r\n                                    setIsOrderNoteEdit(true);\r\n                                  }}\r\n                                >\r\n                                  <EditOutlined />\r\n                                </span>\r\n                                <span\r\n                                  className='OrderNoteItem__action-delete'\r\n                                  onClick={() =>\r\n                                    handleDeleteOrderNote(noteItem._id)\r\n                                  }\r\n                                >\r\n                                  <DeleteOutlined />\r\n                                </span>\r\n                              </div>\r\n                              <h4>\r\n                                <span>NOTE:</span>\r\n                                {` ${noteItem.note}`}\r\n                              </h4>\r\n\r\n                              {noteItem.summary && (\r\n                                <>\r\n                                  <h4>\r\n                                    <span>SUMMARY :</span>\r\n\r\n                                    {` ${noteItem.summary}`}\r\n                                  </h4>\r\n                                </>\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        })}\r\n\r\n                      {orderDetailNotesState.done &&\r\n                        orderNotes &&\r\n                        !(Object.keys(orderNotes).length > 0) && (\r\n                          <>\r\n                            <div\r\n                              style={{\r\n                                width: '100%',\r\n                                margin: '100px 0',\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                              }}\r\n                            >\r\n                              <Empty\r\n                                description='No Notes found'\r\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                              />\r\n                            </div>\r\n                          </>\r\n                        )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div></div>\r\n              </div>\r\n            </>\r\n          )}\r\n      </Skeleton>\r\n\r\n      {tagDetailState.done &&\r\n        tagDetailState.data &&\r\n        Object.keys(tagDetailState.data).length > 0 && (\r\n          <>\r\n            <div className='brandDetailContainer__heading'>\r\n              <h3>Products</h3>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n      <div className='brandDetailContainer__body'>\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          Object.keys(tagDetailState.data).length > 0 &&\r\n          tagDetailState.data['products'] &&\r\n          !(tagDetailState.data['products'].length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '100px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Products exists for this order'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          Object.keys(tagDetailState.data).length > 0 &&\r\n          tagDetailState.data['products'] &&\r\n          tagDetailState.data['products'].length > 0 && (\r\n            <>\r\n              <Table\r\n                style={{\r\n                  paddingTop: '10px',\r\n                  borderRadius: '5px !important',\r\n                  overflow: 'hidden',\r\n                  boxShadow:\r\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\r\n                }}\r\n                size='small'\r\n                dataSource={tagDetailState.data['products']}\r\n                tableLayout={'auto'}\r\n                onHeaderRow={(column) => {\r\n                  return {\r\n                    style: {\r\n                      color: 'red !important',\r\n                    },\r\n                  };\r\n                }}\r\n              >\r\n                <Column\r\n                  title=''\r\n                  dataIndex='cover'\r\n                  key='id'\r\n                  width={'80px'}\r\n                  className='classnameofthecolumn'\r\n                  render={(cover, record: any) => (\r\n                    <>\r\n                      <img\r\n                        onClick={() => {\r\n                          history.push(`/admin/product/${record.id}`);\r\n                        }}\r\n                        src={cover}\r\n                        alt='cover img'\r\n                        style={{\r\n                          height: '40px',\r\n                          width: '40px',\r\n                          objectFit: 'contain',\r\n                          borderRadius: '3px',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      />\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Name'\r\n                  dataIndex='name'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <>\r\n                      <h4\r\n                        onClick={() => {\r\n                          history.push(`/admin/product/${record.id}`);\r\n                        }}\r\n                        style={{\r\n                          fontWeight: 400,\r\n                          color: '#555',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        {text}\r\n                      </h4>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='stock'\r\n                  dataIndex='inStock'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <>\r\n                      <h4\r\n                        style={{\r\n                          fontWeight: 400,\r\n                          color: '#555',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        {text ? 'inStock' : 'out of stock'}\r\n                      </h4>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Unit Price'\r\n                  dataIndex='unitPrice'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Quantity'\r\n                  dataIndex='quantity'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Total Price'\r\n                  dataIndex='price'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n              </Table>\r\n            </>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  roles: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(NewBrandDetail);\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\nconst date = new Date();\r\nconst thisMonth = MONTHS[date.getMonth()]\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    `${order}${thisMonth}`;\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'dayOfMonth',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    This Month\r\n                </h2>\r\n                <h3>\r\n                      Order report by days of month \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'dayOfMonth'} \r\n                         tickFormatter={getMonthNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'dayOfWeek',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    This Week\r\n                </h2>\r\n                <h3>\r\n                      Order report by days of week \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n{orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'dayOfWeek'} \r\n                         tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'date',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                   BY DATE\r\n                </h2>\r\n                <h3>\r\n                      Order report by date\r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'date'} \r\n                        //  tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for date`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nexport const getHourFormatter = (order: number): string | undefined =>\r\n    `${order}hr`;\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'hour',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    BY HOUR\r\n                </h2>\r\n                <h3>\r\n                      Order report by hours \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'hour'} \r\n                         tickFormatter={getHourFormatter}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for hours`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n `${MONTHS[order - 1]}`;\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'month',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsStateMonth',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                   BY MONTH\r\n                </h2>\r\n                <h3>\r\n                   Order report by month\r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'month'} \r\n                         tickFormatter={getMonthNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this months`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n         </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'year',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    By Year\r\n                </h2>\r\n                <h3>\r\n                      Order report by year \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'year'} \r\n                        //  tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this year`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                    In the last year\r\n            </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\nconst DeliveryRegionReport = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'deliveryRegion',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes && ordersDataRes.length > 0){\r\n               // @ts-ignore\r\n               const orderData = ordersDataRes.map(item => {\r\n                   return {\r\n                       ...item,\r\n                       name: item['deliveryRegion'] && Object.keys(item['deliveryRegion']).length > 0 ? item['deliveryRegion']['name'] : 'Region Name'\r\n                   }\r\n               })\r\n            // @ts-ignore\r\n            setorderData(orderData);\r\n           }\r\n           else {\r\n            setorderData([]);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderListByDeliveryRegion',orderAnalyticsVisitsState);\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                  BY DELIVERY REGION\r\n                </h2>\r\n                <h3>\r\n                      Order report by delivery region\r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                 <>\r\n                 \r\n                 <Table\r\n                 pagination={{ defaultPageSize: 5}}\r\n                            style={{\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={orderData}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                \r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                       <a href='##'>\r\n                                       <h4\r\n                                            onClick={() => {\r\n                                                // history.push(`/admin/${selectedApiValue && selectedApiValue.toLowerCase()}/${record.itemId}`)\r\n                                            }}  \r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                textTransform:'uppercase',\r\n                                                cursor: 'pointer'\r\n                                            }}>\r\n                                            {text || `Deleted`}\r\n                                        </h4>\r\n                                       </a>\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Count\"\r\n                                dataIndex=\"count\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n\r\n                 </>\r\n                     )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for date`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DeliveryRegionReport\r\n","import OrderOverviewReport from \"./OrderOverviewReport\";\r\nexport default OrderOverviewReport;","import React, { useEffect, useState } from 'react';\r\n\r\n// import components \r\nimport ThisMonthOrderReport from \"./ThisMonthOrderReport\";\r\nimport ThisWeekOrderReport from \"./ThisWeekOrderReport\";\r\nimport DateOrderReport from \"./DateOrderReport\";\r\nimport HourOrderReport from \"./HourOrderReport\";\r\nimport MonthOrderReport from \"./MonthOrderReport\";\r\nimport YearOrderReport from \"./YearOrderReport\";\r\nimport DeliveryRegionReport from \"./DeliveryRegionReport\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getTotalUserCount = async () => {\r\n\t\t\tawait handleGetTotalUserCountFetch({});\r\n\t\t}\r\n\r\n\t\tgetTotalUserCount();\r\n\t}, []);\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst getProductVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\r\n\t\t\t\tparams: 'product'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetProductVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst getCategoryVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\r\n\t\t\t\tparams: 'category'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetCategoryVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<DeliveryRegionReport/>\r\n\t\t\t\t<ThisWeekOrderReport />\r\n\t\t\t\t<ThisMonthOrderReport />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<DateOrderReport />\r\n\t\t\t\t<HourOrderReport />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<MonthOrderReport />\r\n\t\t\t\t<YearOrderReport />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst ConfigOrderStatus = (props: Props) => {\r\n    return (\r\n        <div>\r\n            ConfigOrderStatus\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConfigOrderStatus\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Tooltip } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: componentItem.title,\r\n        target: componentItem.target,\r\n        text: componentItem.text,\r\n        image: componentItem.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\r\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\r\n        setItemsList(updateComponentList);\r\n\r\n    }, [localComponentItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\r\n        setItemsList(updateComponentList);\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  PlusOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport ComponentItem from './ComponentItem';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  groupName: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Component Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  groupName: '',\r\n  items: [],\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  componentList?: any;\r\n  setComponentList?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  componentList,\r\n  setComponentList,\r\n}: Props) => {\r\n  const [addComponentState, handleAddComponentFetch] = useHandleFetch(\r\n    {},\r\n    'addComponent'\r\n  );\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [itemsList, setItemsList] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addComponentRes = await handleAddComponentFetch({\r\n      body: {\r\n        groupName: values.groupName,\r\n        items: itemsList,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addComponentRes && addComponentRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      setComponentList([\r\n        ...componentList,\r\n        {\r\n          id: addComponentRes['_id'] || '',\r\n          key: addComponentRes['_id'] || '',\r\n          groupName: addComponentRes['groupName'] || '',\r\n          // @ts-ignore\r\n          ...addComponentRes,\r\n        },\r\n      ]);\r\n      actions.resetForm();\r\n      setItemsList([]);\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addComponentState['isLoading']) {\r\n      const error = addComponentState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addComponentState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.groupName) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleAddComponentItem = () => {\r\n    setItemsList([\r\n      ...itemsList,\r\n      {\r\n        title: '',\r\n        target: '',\r\n        text: '',\r\n        image: [],\r\n        id: `${itemsList.length}`,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Component'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n            width={'50vw'}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n          >\r\n            <Input\r\n              label='Name'\r\n              value={values.groupName}\r\n              name='groupName'\r\n              isError={\r\n                (touched.groupName && errors.groupName) ||\r\n                (!isSubmitting && addComponentState.error['error']['name'])\r\n              }\r\n              errorString={\r\n                (touched.groupName && errors.groupName) ||\r\n                (!isSubmitting && addComponentState.error['error']['name'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('groupName');\r\n              }}\r\n            />\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n            <h3 className='inputFieldLabel'>Children</h3>\r\n\r\n            <div className='componentItemsContainer'>\r\n              {itemsList.map((itemComponent) => {\r\n                return (\r\n                  <ComponentItem\r\n                    componentItem={itemComponent}\r\n                    itemsList={itemsList}\r\n                    setItemsList={setItemsList}\r\n                  />\r\n                );\r\n              })}\r\n\r\n              <Button\r\n                size='small'\r\n                onClick={handleAddComponentItem}\r\n                style={{\r\n                  width: '290px',\r\n                  minHeight: '145px',\r\n                  marginTop: '0px',\r\n                  borderRadius: '8px',\r\n                }}\r\n                type='dashed'\r\n                icon={<PlusOutlined />}\r\n              >\r\n                Add Childrens\r\n              </Button>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            />\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Button, Tooltip } from 'antd';\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined, \r\n    SaveOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate, isLoadingUpdate }) => {\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: item.title,\r\n        target: item.target,\r\n        text: item.text,\r\n        image: item.image,\r\n    }); \r\n\r\n\r\n    console.log('localComponentItem',localComponentItem); \r\n    console.log('componentItem',item); \r\n\r\n\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     if(item && item.image && item.image.length > 0){\r\n    //         setlocalComponentItem({\r\n    //             ...localComponentItem,\r\n    //             image: \r\n    //         })\r\n    //     }; \r\n\r\n\r\n    // },item)\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                // @ts-ignore\r\n                image: [...new Set([...localComponentItem.image, ...myImages])]\r\n            })\r\n        }\r\n        // else {\r\n        //     setlocalComponentItem({\r\n        //         ...localComponentItem,\r\n        //         image: []\r\n        //     })\r\n        // }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(item && item.image && item.image.length > 0){\r\n            setmyImages(item.image)\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = localComponentItem.image && localComponentItem.image.length > 0 && localComponentItem.image.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            image: [...newImages]\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleComponentItemUpdate = () => {\r\n        componentUpdate(item,component,localComponentItem); \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    boxShadow: \"none\"\r\n                }}\r\n                className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {localComponentItem.image &&\r\n                        // @ts-ignore\r\n                        localComponentItem.image.length > 0 && localComponentItem.image.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n                <Button\r\n                style={{\r\n                    marginTop: '15px'\r\n                }}\r\n                    icon={<SaveOutlined />}\r\n          className='btnPrimaryClassNameoutline'\r\n          onClick={() => handleComponentItemUpdate()}\r\n        >\r\n\r\n            {isLoadingUpdate ? \"Saving...\" : \"Save\"}\r\n            \r\n            </Button>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n  CloseOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport ComponentItem from './ComponentItem';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  groupName: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Component Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  groupName: '',\r\n  items: [],\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  componentList?: any;\r\n  setComponentList?: any;\r\n  updateComponentByAddingItem?: any;\r\n  componentId?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  componentList,\r\n  setComponentList,\r\n  updateComponentByAddingItem,\r\n  componentId,\r\n}: Props) => {\r\n  const [localComponentItem, setlocalComponentItem] = useState({\r\n    title: '',\r\n    target: '',\r\n    text: '',\r\n    image: [],\r\n  });\r\n\r\n  const [myImages, setmyImages] = useState([]);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n  const handleComponentItemsChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    setlocalComponentItem({\r\n      ...localComponentItem,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.groupName) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (myImages.length > 0) {\r\n      const newImages = myImages.map((item) => item.id);\r\n      setlocalComponentItem({\r\n        ...localComponentItem,\r\n        image: [...newImages],\r\n      });\r\n    } else {\r\n      setlocalComponentItem({\r\n        ...localComponentItem,\r\n        image: [],\r\n      });\r\n    }\r\n  }, [myImages]);\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleAddItem = (e) => {\r\n    updateComponentByAddingItem(localComponentItem, componentId);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        style={{\r\n          top: '40px',\r\n        }}\r\n        destroyOnClose={true}\r\n        title='Add New Component Item'\r\n        visible={addNewCategoryVisible}\r\n        onOk={(e: any) => handleAddItem(e)}\r\n        onCancel={handleCancel}\r\n        okText='Add'\r\n        okButtonProps={{\r\n          htmlType: 'submit',\r\n        }}\r\n        width={'400px'}\r\n        bodyStyle={{\r\n          margin: '0',\r\n          padding: '10px',\r\n        }}\r\n      >\r\n        <Input\r\n          label='Title'\r\n          value={localComponentItem.title}\r\n          name='title'\r\n          onChange={handleComponentItemsChange}\r\n        />\r\n        <Input\r\n          label='Text'\r\n          value={localComponentItem.text}\r\n          name='text'\r\n          onChange={handleComponentItemsChange}\r\n        />\r\n\r\n        <Input\r\n          label='Target'\r\n          value={localComponentItem.target}\r\n          name='target'\r\n          onChange={handleComponentItemsChange}\r\n        />\r\n\r\n        <h3 className='inputFieldLabel-small'>Images</h3>\r\n\r\n        <div className='aboutToUploadImagesContainer'>\r\n          {myImages &&\r\n            // @ts-ignore\r\n            myImages.length > 0 &&\r\n            myImages.map((image, index) => {\r\n              return (\r\n                <div className='aboutToUploadImagesContainer__item'>\r\n                  <div className='aboutToUploadImagesContainer__item-imgContainer'>\r\n                    <img src={image.cover} alt={image.alt} />\r\n                  </div>\r\n\r\n                  <span\r\n                    onClick={() => handleImagesDelete(image.id)}\r\n                    className='aboutToUploadImagesContainer__item-remove'\r\n                  >\r\n                    <CloseOutlined />\r\n                  </span>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n          <Tooltip title={'Attach images'}>\r\n            <div\r\n              onClick={() => {\r\n                setvisibleMedia(true);\r\n              }}\r\n              className='aboutToUploadImagesContainer__uploadItem'\r\n            >\r\n              {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n              <FileImageFilled />\r\n              {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n              <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                <PlusOutlined />\r\n              </span>\r\n            </div>\r\n          </Tooltip>\r\n        </div>\r\n\r\n        <MediaLibrary\r\n          setvisible={setvisibleMedia}\r\n          visible={visibleMedia}\r\n          myImages={myImages}\r\n          setmyImages={setmyImages}\r\n          isModalOpenForImages={true}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Collapse,\r\n  Button,\r\n  Tooltip,\r\n  Upload,\r\n  Modal,\r\n  Input,\r\n  notification,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  CaretRightOutlined,\r\n  CheckCircleOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import components\r\nimport InputField from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\nimport ComponentImageUpload from './ComponentImageUpload';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewComponent from './AddNewComponent';\r\nimport ComponentListComponentItem from './ComponentListComponentItem';\r\nimport AddNewComponentItem from './AddNewComponentItem';\r\nimport { category } from '../../state/ducks';\r\nimport { truncate } from 'fs';\r\n\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Component Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nfunction getBase64(file: any) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n}\r\n\r\nconst genExtra = (updateComponentByDeleting, component, id) => (\r\n  <div\r\n    style={{\r\n      display: 'flex',\r\n    }}\r\n  >\r\n    <Tooltip placement='top' title='Edit Component'>\r\n      <a href='##'>\r\n        <EditOutlined\r\n          onClick={(event) => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            // event.stopPropagation();\r\n          }}\r\n        />\r\n      </a>\r\n    </Tooltip>\r\n\r\n    <div\r\n      style={{\r\n        marginLeft: '15px',\r\n      }}\r\n    />\r\n    <a\r\n      href='##'\r\n      style={{\r\n        color: 'rgb(241, 67, 67)',\r\n      }}\r\n    >\r\n      <Popconfirm\r\n        onConfirm={() => updateComponentByDeleting(id, component)}\r\n        title='Are you sure？'\r\n        okText='Yes'\r\n        cancelText='No'\r\n      >\r\n        <DeleteOutlined\r\n          onClick={(event) => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            event.stopPropagation();\r\n          }}\r\n        />\r\n      </Popconfirm>\r\n    </a>\r\n  </div>\r\n);\r\n\r\nconst genExtraForGroup = (\r\n  setitemVisible: any,\r\n  handleDeleteComponent: any,\r\n  id: any,\r\n  setComponentId: any\r\n) => (\r\n  <div\r\n    style={{\r\n      display: 'flex',\r\n    }}\r\n  >\r\n    <Tooltip placement='top' title='Add new item Component'>\r\n      <a href='##'>\r\n        <PlusOutlined\r\n          onClick={(event) => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            // event.stopPropagation();\r\n            setitemVisible(true);\r\n            setComponentId(id);\r\n          }}\r\n        />\r\n      </a>\r\n    </Tooltip>\r\n\r\n    <div\r\n      style={{\r\n        marginLeft: '15px',\r\n      }}\r\n    />\r\n    <Tooltip placement='top' title='Edit Component'>\r\n      <a href='##'>\r\n        <EditOutlined\r\n          onClick={(event) => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            // event.stopPropagation();\r\n          }}\r\n        />\r\n      </a>\r\n    </Tooltip>\r\n\r\n    <div\r\n      style={{\r\n        marginLeft: '15px',\r\n      }}\r\n    />\r\n    <a\r\n      href='##'\r\n      style={{\r\n        color: 'rgb(241, 67, 67)',\r\n      }}\r\n    >\r\n      <Popconfirm\r\n        onConfirm={() => handleDeleteComponent(id)}\r\n        title='Are you sure？'\r\n        okText='Yes'\r\n        cancelText='No'\r\n      >\r\n        <DeleteOutlined\r\n          onClick={(event) => {\r\n            // If you don't want click extra trigger collapse, you can prevent this:\r\n            event.stopPropagation();\r\n          }}\r\n        />\r\n      </Popconfirm>\r\n    </a>\r\n  </div>\r\n);\r\n\r\nconst Component = (props) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [groupVisible, setgroupVisible] = useState(false);\r\n  const [itemVisible, setitemVisible] = useState(false);\r\n  const [componentId, setComponentId] = useState('');\r\n\r\n  const [componentState, handleComponentListFetch] = useHandleFetch(\r\n    {},\r\n    'componentList'\r\n  );\r\n  const [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch(\r\n    {},\r\n    'deleteComponent'\r\n  );\r\n  const [updateComponentState, handleUpdateComponentFetch] = useHandleFetch(\r\n    {},\r\n    'updateComponent'\r\n  );\r\n\r\n  const [componentList, setComponentList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const setComponents = async () => {\r\n      const components = await handleComponentListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            imageValue: true,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setComponentList(components);\r\n    };\r\n    setComponents();\r\n  }, []);\r\n\r\n  console.log('componentListd', componentList);\r\n\r\n  const handleSearch = (value) => {\r\n    if (componentState.data.length > 0) {\r\n      const newComponentList = componentState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setComponentList(newComponentList);\r\n    }\r\n  };\r\n\r\n  const handleDeleteComponent = async (id) => {\r\n    const deleteComponentRes = await handleDeleteComponentFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteComponentRes && deleteComponentRes.status === 'ok') {\r\n      openSuccessNotification('Component Deleted');\r\n      const newComponentList = componentList.filter((item) => item.id !== id);\r\n      setComponentList(newComponentList);\r\n    } else {\r\n      openErrorNotification(\"Couldn't delete, Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n  const handleOkGroup = (e: any) => {\r\n    setgroupVisible(false);\r\n  };\r\n\r\n  const handleCancelGroup = (e: any) => {\r\n    setgroupVisible(false);\r\n  };\r\n\r\n  const componentUpdate = async (item, component, localComponentItem) => {\r\n    const positionInComponents = () => {\r\n      return componentList.map((item) => item.id).indexOf(component.id);\r\n    };\r\n\r\n    const positionInItemsOfComponent = () => {\r\n      return component.items.map((item) => item.id).indexOf(item.id);\r\n    };\r\n\r\n    const componentIndex = positionInComponents();\r\n\r\n    const itemIndex = positionInItemsOfComponent();\r\n\r\n    const manupulatedLocalComponentForTheReq =\r\n      localComponentItem.image.length > 0\r\n        ? {\r\n            ...localComponentItem,\r\n            image:\r\n              localComponentItem.image.length > 0\r\n                ? localComponentItem.image.map((img) => img.id)\r\n                : [],\r\n          }\r\n        : localComponentItem;\r\n\r\n    const componentItems =\r\n      component.items.length > 0\r\n        ? component.items.map((componentItem) => {\r\n            return {\r\n              ...componentItem,\r\n              image:\r\n                componentItem.image && componentItem.image.length > 0\r\n                  ? componentItem.image.map((imgItem) => imgItem['id'] || '')\r\n                  : [],\r\n            };\r\n          })\r\n        : [];\r\n\r\n    const updatedItems = [\r\n      ...component.items.slice(0, itemIndex),\r\n      localComponentItem,\r\n      ...component.items.slice(itemIndex + 1),\r\n    ];\r\n\r\n    console.log('updatedItemsTheDamnItems', updatedItems);\r\n\r\n    const manupulatedUpdatedItems = [\r\n      ...componentItems.slice(0, itemIndex),\r\n      manupulatedLocalComponentForTheReq,\r\n      ...componentItems.slice(itemIndex + 1),\r\n    ];\r\n\r\n    const manupulatedUpdatedItem = Object.assign(\r\n      {},\r\n      componentList[componentIndex],\r\n      {\r\n        ...component,\r\n        items: manupulatedUpdatedItems,\r\n      }\r\n    );\r\n\r\n    const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n      ...component,\r\n      items: updatedItems,\r\n    });\r\n\r\n    const updateComponentList = [\r\n      ...componentList.slice(0, componentIndex),\r\n      updatedItem,\r\n      ...componentList.slice(componentIndex + 1),\r\n    ];\r\n\r\n    const updateComponentRes = await handleUpdateComponentFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: component.id,\r\n        },\r\n      },\r\n      body: {\r\n        ...manupulatedUpdatedItem,\r\n        groupName: updatedItem.name,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateComponentRes && updateComponentRes.status === 'ok') {\r\n      openSuccessNotification('Component Updated');\r\n      setComponentList(updateComponentList);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  const updateComponentByDeleting = async (id, component) => {\r\n    const positionInComponents = () => {\r\n      return componentList.map((item) => item.id).indexOf(component.id);\r\n    };\r\n\r\n    const positionInItemsOfComponent = () => {\r\n      return component.items.map((item) => item.id).indexOf(id);\r\n    };\r\n\r\n    const componentIndex = positionInComponents();\r\n\r\n    const itemIndex = positionInItemsOfComponent();\r\n\r\n    const updatedItems = [\r\n      ...component.items.slice(0, itemIndex),\r\n      ...component.items.slice(itemIndex + 1),\r\n    ];\r\n\r\n    const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n      ...component,\r\n      items: updatedItems,\r\n    });\r\n\r\n    const updateComponentList = [\r\n      ...componentList.slice(0, componentIndex),\r\n      updatedItem,\r\n      ...componentList.slice(componentIndex + 1),\r\n    ];\r\n\r\n    const updateComponentRes = await handleUpdateComponentFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: component.id,\r\n        },\r\n      },\r\n      body: {\r\n        ...updatedItem,\r\n        groupName: updatedItem.name,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateComponentRes && updateComponentRes.status === 'ok') {\r\n      openSuccessNotification('Component Item deleted');\r\n      setComponentList(updateComponentList);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  const updateComponentByAddingItem = async (localComponentItem, id) => {\r\n    const positionInComponents = () => {\r\n      return componentList.map((item) => item.id).indexOf(id);\r\n    };\r\n\r\n    const componentIndex = positionInComponents();\r\n\r\n    const updatedItems = [\r\n      ...componentList[componentIndex].items,\r\n      localComponentItem,\r\n    ];\r\n\r\n    const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n      ...componentList[componentIndex],\r\n      items: updatedItems,\r\n    });\r\n\r\n    const updateComponentList = [\r\n      ...componentList.slice(0, componentIndex),\r\n      updatedItem,\r\n      ...componentList.slice(componentIndex + 1),\r\n    ];\r\n\r\n    const updateComponentRes = await handleUpdateComponentFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: id,\r\n        },\r\n      },\r\n      body: {\r\n        ...updatedItem,\r\n        groupName: updatedItem.name,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateComponentRes && updateComponentRes.status === 'ok') {\r\n      openSuccessNotification('Component Item Added');\r\n      setComponentList(updateComponentList);\r\n      setitemVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Components</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search components..'\r\n              onSearch={(value) => handleSearch(value)}\r\n            />\r\n          </div>\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setgroupVisible(true)}\r\n          >\r\n            Add New\r\n          </Button>\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'></div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {componentState.isLoading && <DataTableSkeleton />}\r\n\r\n          {componentState.done && !(componentList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '50px',\r\n              }}\r\n            >\r\n              <Empty title='No Component found' />\r\n            </div>\r\n          )}\r\n\r\n          {componentState.done && componentList.length > 0 && (\r\n            <div className='componentsItemContainer'>\r\n              {componentList.map((component) => {\r\n                console.log('mycomponent');\r\n                return (\r\n                  <div className='componentsItemContainer-item'>\r\n                    <Collapse\r\n                      accordion={false}\r\n                      bordered={false}\r\n                      expandIconPosition='left'\r\n                      expandIcon={({ isActive }) => (\r\n                        <CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n                      )}\r\n                      className='site-collapse-custom-collapse'\r\n                    >\r\n                      <Panel\r\n                        header={component.name}\r\n                        key='1'\r\n                        className='site-collapse-custom-panel'\r\n                        extra={genExtraForGroup(\r\n                          setitemVisible,\r\n                          handleDeleteComponent,\r\n                          component.id,\r\n                          setComponentId\r\n                        )}\r\n                      >\r\n                        <div className=' componentsItemContainer-white'>\r\n                          {component.items &&\r\n                            component.items.length > 0 &&\r\n                            component.items.map((item) => {\r\n                              return (\r\n                                <div className='componentsItemContainer-item-item'>\r\n                                  <Collapse\r\n                                    accordion={false}\r\n                                    bordered={false}\r\n                                    expandIconPosition='left'\r\n                                    expandIcon={({ isActive }) => (\r\n                                      <CaretRightOutlined\r\n                                        rotate={isActive ? 90 : 0}\r\n                                      />\r\n                                    )}\r\n                                    className='site-collapse-custom-collapse'\r\n                                  >\r\n                                    <Panel\r\n                                      header={item.title || ''}\r\n                                      key='1'\r\n                                      className='site-collapse-custom-panel'\r\n                                      extra={genExtra(\r\n                                        updateComponentByDeleting,\r\n                                        component,\r\n                                        item.id\r\n                                      )}\r\n                                    >\r\n                                      <ComponentListComponentItem\r\n                                        setComponentList={setComponentList}\r\n                                        componentList={componentList}\r\n                                        item={item}\r\n                                        component={component}\r\n                                        componentUpdate={componentUpdate}\r\n                                        isLoadingUpdate={\r\n                                          updateComponentState.isLoading\r\n                                        }\r\n                                      />\r\n                                    </Panel>\r\n                                  </Collapse>\r\n                                </div>\r\n                              );\r\n                            })}\r\n\r\n                          {!(component.items.length > 0) && (\r\n                            <Empty title='No item Found' />\r\n                          )}\r\n                        </div>\r\n                      </Panel>\r\n                    </Collapse>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewComponent\r\n        addNewCategoryVisible={groupVisible}\r\n        setAddNewCategoryVisible={setgroupVisible}\r\n        setComponentList={setComponentList}\r\n        componentList={componentList}\r\n      />\r\n      <AddNewComponentItem\r\n        addNewCategoryVisible={itemVisible}\r\n        setAddNewCategoryVisible={setitemVisible}\r\n        setComponentList={setComponentList}\r\n        componentList={componentList}\r\n        updateComponentByAddingItem={updateComponentByAddingItem}\r\n        componentId={componentId}\r\n      />\r\n\r\n      <Modal\r\n        title='Add New Group Component'\r\n        visible={false}\r\n        onOk={handleOkGroup}\r\n        onCancel={handleCancelGroup}\r\n        footer={null}\r\n        okText='Done'\r\n      >\r\n        <InputField label='Group Component Name' />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Component;\r\n","import React, { useState } from 'react';\r\n\r\n// import third libraries\r\nimport { Upload, message, notification, Modal } from 'antd';\r\n// import { Formik } from 'formik';\r\n// import * as Yup from 'yup';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\n\r\nimport {\r\n    InboxOutlined,\r\n    CheckCircleOutlined,\r\n    LoadingOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\n\r\n// const validationSchema = Yup.object().shape({\r\n//     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n// });\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Brand Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    themeList?: any;\r\n    setThemeList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\r\n\r\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme', 'form');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\r\n    const [fileList, setfileList] = useState([]);\r\n    const [uploading, setuploading] = useState(false);\r\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [name, setname] = useState('')\r\n    const [thumbnailFile, setThumbnailFile] = useState('')\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        setuploading(true);\r\n\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', thumbnailFile)\r\n\r\n\r\n        const addThemeRes = await handleAddthemeFetch({\r\n            body: formData,\r\n        });\r\n\r\n\r\n        setuploading(false);\r\n        // @ts-ignore\r\n        if (addThemeRes && addThemeRes.status === 'ok') {\r\n\r\n            setThemeList([...themeList, {\r\n                id: addThemeRes['_id'] || '',\r\n                key: addThemeRes['_id'] || '',\r\n                name: addThemeRes['name'] || '',\r\n                thumbnail: addThemeRes['thumbnail'] || '',\r\n                path: addThemeRes['path'] || '',\r\n                added: addThemeRes['added'] || '',\r\n                // @ts-ignore\r\n                ...addThemeRes\r\n            }]);\r\n\r\n            setfileList([]);\r\n            setuploading(false);\r\n            openSuccessNotification('Theme Uploaded!')\r\n            setAddNewCategoryVisible(false);\r\n            setname('');\r\n            setselectedThemeTypeValue('');\r\n\r\n\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification('Theme upload failed, Something went wrong');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = () => {\r\n        if (addThemeState.isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        // @ts-ignore\r\n        else setmyThumbnailImage([]);\r\n    }\r\n\r\n\r\n    const onChangeThemeType = (value) => {\r\n        setselectedThemeTypeValue(value);\r\n    }\r\n\r\n\r\n\r\n    const uploadProps = {\r\n        //  listType: 'picture',\r\n        onRemove: file => {\r\n            setfileList(filelist => {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                newFileList.splice(index, 1);\r\n                return newFileList;\r\n            })\r\n\r\n        },\r\n        beforeUpload: file => {\r\n            setfileList(filelist => {\r\n                return [...fileList, file]\r\n            })\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n        setuploading(true);\r\n\r\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n        // \tbody: formData\r\n        //   });\r\n\r\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // You can use any AJAX library you like\r\n        reqwest({\r\n            url: `${config.baseURL}/admin/theme/add`,\r\n            method: 'post',\r\n            processData: false,\r\n            data: formData,\r\n            withCredentials: true,\r\n            success: () => {\r\n                setfileList([]);\r\n                setuploading(false);\r\n                openSuccessNotification('Theme Uploaded!')\r\n                setAddNewCategoryVisible(false);\r\n                setname('');\r\n                setselectedThemeTypeValue('');\r\n                setThemeList([...themeList, {\r\n\r\n                }])\r\n                // setThemeList([...themeList, {\r\n                //     id: addCategoryRes['id'] || '',\r\n                //     key: addCategoryRes['id'] || '',\r\n                //     name: addCategoryRes['name'] || '',\r\n                //     description: addCategoryRes['description'] || '',\r\n                //     // @ts-ignore\r\n                //     ...addCategoryRes\r\n                // }])\r\n            },\r\n            error: () => {\r\n                setuploading(false);\r\n                openErrorNotification('Theme Upload failed!')\r\n                message.error('upload failed.');\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n\r\n\r\n        getBase64(file, imageUrl => {\r\n            setImageUrl(imageUrl)\r\n            setThumbnailFile(file);\r\n            setLoadingThumbnail(false)\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                title=\"Add New Theme\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                okText='Upload Theme'\r\n                okButtonProps={{\r\n                    loading: uploading,\r\n                    htmlType: \"submit\",\r\n                    disabled: getisSubmitButtonDisabled()\r\n                }}\r\n\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n\r\n                <Input\r\n                    label='Name'\r\n                    value={name}\r\n                    name='name'\r\n                    onChange={(e: any) => setname(e.target.value)}\r\n                    isError={addThemeState.error['error']['name']}\r\n\r\n                    errorString={addThemeState.error['error']['name']}\r\n                />\r\n\r\n                <div style={{\r\n                    marginTop: '20px'\r\n                }}></div>\r\n\r\n\r\n                <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={beforeUpload}\r\n                    multiple={false}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n\r\n\r\n\r\n                <div style={{\r\n                    marginTop: '3px'\r\n                }}></div>\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Folder (.zip)\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Dragger\r\n                    multiple={false}\r\n                    className='upload-list-inline'\r\n                    listType='picture'\r\n                    style={{\r\n                        background: '#fff'\r\n                    }}\r\n                    {...uploadProps}\r\n                >\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\r\n                        other band files\r\n\t\t\t\t\t\t\t</p>\r\n                </Dragger>\r\n\r\n                {addThemeState.error['error']['folder'] && (\r\n                    <p style={{\r\n                        color: 'rgba(255, 0, 0, 0.507)'\r\n                    }}>{addThemeState.error['error']['folder']}</p>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={false}\r\n                setmyThumbnailImage={setmyThumbnailImage}\r\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                myThumbnailImage={myThumbnailImage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button, Input,Tooltip, Modal, notification, Popconfirm,Badge} from 'antd';\r\nimport { \r\n  PlusOutlined, EditOutlined, \r\n  DeleteOutlined,EditFilled,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewTheme from \"./AddNewTheme\";\r\n\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [themeList,setThemeList] = useState([]); \r\n\r\n    const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\r\n    const [activeThemeState, handleActiveThemeFetch] = useHandleFetch({}, 'activeTheme');\r\n    const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch({}, 'deletetheme');\r\n  \r\n\r\n    \r\n    useEffect(()=>{\r\n     const setThemes = async () => {\r\n       const themes = await handleThemeListFetch({}); \r\n       // @ts-ignore\r\n       setThemeList(themes); \r\n     }\r\n     setThemes(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(themeState.data.length > 0 ){\r\n      const newThemeList = themeState.data.filter(item => item.name.includes(value)); \r\n      setThemeList(newThemeList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleActiveTheme = async (id) => {\r\n    const activeThemeRes = await handleActiveThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(activeThemeRes && activeThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme activated'); \r\n   \r\n  }\r\n  else {\r\n    openErrorNotification(\"Couldn't activate the theme, Something went wrong\")\r\n  }\r\n     \r\n     \r\n  }\r\n\r\n\r\n  const handleDeleteTheme = async (id) => {\r\n    const deleteThemeRes = await handleDeleteThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(deleteThemeRes && deleteThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme Deleted'); \r\n    const newThemeList =  themeList.filter(item => item.id !== id);\r\n    setThemeList(newThemeList); \r\n  }\r\n  else {\r\n  openErrorNotification(\"Couldn't delete, Something went wrong\")\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n\t\t Themes\r\n \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search themes..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {themeState.done && themeList.length > 0 && (\r\n   \r\n   <div className='categoryListContainer__bodyContainerList'>\r\n\t\t\r\n          {themeList.map(theme => {\r\n            return (\r\n              <div className='categoryListContainer__bodyContainerList-item'>\r\n              {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n               \r\n                  </Badge> */}\r\n                  <div className='categoryListContainer__bodyContainerList-item-top'>\r\n                  <img\r\n                    alt='theme img'\r\n                    src={theme.thumbnail}\r\n                  />\r\n                </div>\r\n                <div className='categoryListContainer__bodyContainerList-item-body'>\r\n                  <h3> {theme.name} </h3>\r\n     \r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Tooltip placement='top' title='Active this theme'>\r\n                    <Button\r\n                  \r\n                   size='small'\r\n                   className='btnPrimaryClassNameoutline'\r\n                   icon={<CheckOutlined />}\r\n                   onClick={() => handleActiveTheme(theme.id)}\r\n                  >\r\n                    <span style={{\r\n                      fontSize:'11px'\r\n                    }}>\r\n                    Set Active\r\n                 \r\n                    </span>\r\n                \r\n                 </Button>\r\n     \r\n     \r\n                      \r\n                    </Tooltip>\r\n     \r\n                    <Tooltip placement='top' title='Delete theme'>\r\n                    <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteTheme(theme.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <Button\r\n                        size='small'\r\n                        type='link'\r\n                        danger={true}\r\n                        icon={<DeleteOutlined />}\r\n                      >\r\n                        \r\n                        </Button>\r\n           </Popconfirm>\r\n\r\n\r\n                     \r\n     \r\n                        \r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n          })}\r\n         </div>\r\n\t\t)}\r\n\r\n\r\n        {themeState.isLoading && <DataTableSkeleton />}\r\n\r\n        {themeState.done && !(themeList.length > 0) && (\r\n        <Empty title='No Theme found'  />\r\n        )}\r\n        \r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    {themeState.done && \r\n    <AddNewTheme \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          themeList={themeState.data}\r\n          setThemeList={setThemeList}\r\n           />}\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Image\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Invoice = (props: Props) => {\r\n\treturn <div>Invoice</div>;\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  title: Yup.string().label('Title').required('Site title can not be empty'),\r\n  adminEmail: Yup.string()\r\n    .label('Admin Email')\r\n    .required('Admin Email can not be empty'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Site Info Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  title: '',\r\n  adminName: '',\r\n  adminEmail: '',\r\n  adminPhone: '',\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst UpdateSiteinfo = ({}: Props) => {\r\n  const [\r\n    UpdateSiteSettingsState,\r\n    handleUpdateSiteSettingsFetch,\r\n  ] = useHandleFetch({}, 'updateSiteSettings');\r\n  const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch(\r\n    {},\r\n    'siteSettings'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getSiteSettings = async () => {\r\n      const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n      // console.log('siteSettingsRes', siteSettingsRes)\r\n    };\r\n    getSiteSettings();\r\n  }, [UpdateSiteSettingsState]);\r\n\r\n  // console.log('siteSettingsState', siteSettingsState);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n      body: {\r\n        title: values.title,\r\n        adminName: values.adminName,\r\n        adminEmail: values.adminEmail,\r\n        adminPhone: values.adminPhone,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      // setBrandList([...brandList, {\r\n      //     id: addBrandRes['id'] || '',\r\n      //     key: addBrandRes['id'] || '',\r\n      //     name: addBrandRes['name'] || '',\r\n      //     description: addBrandRes['description'] || '',\r\n      //     // @ts-ignore\r\n      //     ...addBrandRes\r\n      // }]);\r\n\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.title || !values.adminEmail || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const getInitialValues = () => {\r\n    if (\r\n      siteSettingsState.data &&\r\n      Object.keys(siteSettingsState.data).length > 0\r\n    ) {\r\n      return { ...siteSettingsState.data };\r\n    } else {\r\n      return initialValues;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      enableReinitialize={true}\r\n      initialValues={getInitialValues()}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div className='siteInfoContainer__item'>\r\n            <div className='siteInfoContainer__item-item'>\r\n              <Input\r\n                label='Site Title'\r\n                value={values.title}\r\n                name='title'\r\n                isError={\r\n                  (touched.title && errors.title) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['title'])\r\n                }\r\n                errorString={\r\n                  (touched.title && errors.title) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['title'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('title');\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='siteInfoContainer__item-item'>\r\n              <Input\r\n                label='Admin Name'\r\n                value={values.adminName}\r\n                name='adminName'\r\n                isError={\r\n                  (touched.adminName && errors.adminName) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['adminName'])\r\n                }\r\n                errorString={\r\n                  (touched.adminName && errors.adminName) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['adminName'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('adminName');\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='siteInfoContainer__item-item-left'>\r\n              <Input\r\n                label='Admin phone'\r\n                value={values.adminPhone}\r\n                name='adminPhone'\r\n                isError={\r\n                  (touched.adminPhone && errors.adminPhone) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['adminPhone'])\r\n                }\r\n                errorString={\r\n                  (touched.adminPhone && errors.adminPhone) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['adminPhone'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('adminPhone');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              className='siteInfoContainer__item-item'\r\n              style={{\r\n                marginLeft: '15px',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Admin Email'\r\n                value={values.adminEmail}\r\n                name='adminEmail'\r\n                isError={\r\n                  (touched.adminEmail && errors.adminEmail) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['adminEmail'])\r\n                }\r\n                errorString={\r\n                  (touched.adminEmail && errors.adminEmail) ||\r\n                  (!isSubmitting &&\r\n                    UpdateSiteSettingsState.error['error']['adminEmail'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('adminEmail');\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '10px',\r\n            }}\r\n          ></div>\r\n\r\n          <Button\r\n            onClick={(e: any) => handleSubmit(e)}\r\n            loading={isSubmitting}\r\n            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n            className='btnPrimaryClassNameoutline'\r\n          >\r\n            Update Admin Info\r\n          </Button>\r\n\r\n          <div\r\n            style={{\r\n              marginBottom: '10px',\r\n            }}\r\n          ></div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n//\r\n","import React, { useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n// import MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  invoiceTitle: Yup.string()\r\n    .label('Title')\r\n    .required('Invoice title is required'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Site Invoice Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  invoiceTitle: '',\r\n  address: '',\r\n  phone: '',\r\n  email: '',\r\n  additionalText: '',\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst UpdateSiteinfo = ({}: Props) => {\r\n  const [\r\n    updateInfovSettingsState,\r\n    handleUpdateInvoiceSettingsFetch,\r\n  ] = useHandleFetch({}, 'updateInvoiceSettings');\r\n  const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch(\r\n    {},\r\n    'invoiceSettingsDetail'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getSiteSettings = async () => {\r\n      const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n\r\n      // console.log('siteSettingsRes', siteSettingsRes)\r\n    };\r\n    getSiteSettings();\r\n  }, [updateInfovSettingsState]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\r\n      body: {\r\n        invoiceTitle: values.invoiceTitle,\r\n        address: values.address,\r\n        phone: values.phone,\r\n        email: values.email,\r\n        additionalText: values.additionalText,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      // setBrandList([...brandList, {\r\n      //     id: addBrandRes['id'] || '',\r\n      //     key: addBrandRes['id'] || '',\r\n      //     name: addBrandRes['name'] || '',\r\n      //     description: addBrandRes['description'] || '',\r\n      //     // @ts-ignore\r\n      //     ...addBrandRes\r\n      // }]);\r\n\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.invoiceTitle || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const getInitialValues = () => {\r\n    if (\r\n      InvoiceSettingsState.data &&\r\n      Object.keys(InvoiceSettingsState.data).length > 0\r\n    ) {\r\n      return { ...InvoiceSettingsState.data };\r\n    } else {\r\n      return initialValues;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      enableReinitialize={true}\r\n      initialValues={getInitialValues()}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div className='siteInfoContainer__item'>\r\n            <div className='siteInfoContainer__item-item'>\r\n              <Input\r\n                label='Company Name'\r\n                value={values.invoiceTitle}\r\n                name='invoiceTitle'\r\n                isError={\r\n                  (touched.invoiceTitle && errors.invoiceTitle) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['invoiceTitle'])\r\n                }\r\n                errorString={\r\n                  (touched.invoiceTitle && errors.invoiceTitle) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['invoiceTitle'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('invoiceTitle');\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='siteInfoContainer__item-item'>\r\n              <Input\r\n                label='Phone Number'\r\n                value={values.phone}\r\n                name='phone'\r\n                isError={\r\n                  (touched.phone && errors.phone) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['phone'])\r\n                }\r\n                errorString={\r\n                  (touched.phone && errors.phone) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['phone'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('phone');\r\n                }}\r\n              />\r\n            </div>\r\n            <div className='siteInfoContainer__item-item'>\r\n              <Input\r\n                label='Email'\r\n                value={values.email}\r\n                name='email'\r\n                isError={\r\n                  (touched.email && errors.email) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['email'])\r\n                }\r\n                errorString={\r\n                  (touched.email && errors.email) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['email'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('email');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='siteInfoContainer__item-item'>\r\n              <Input\r\n                label='Additional Text'\r\n                value={values.additionalText}\r\n                name='additionalText'\r\n                isError={\r\n                  (touched.additionalText && errors.additionalText) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['additionalText'])\r\n                }\r\n                errorString={\r\n                  (touched.additionalText && errors.additionalText) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['additionalText'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('additionalText');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='siteInfoContainer__item-item-left'>\r\n              <TextArea\r\n                label='Address'\r\n                value={values.address}\r\n                name='address'\r\n                isError={\r\n                  (touched.address && errors.address) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['address'])\r\n                }\r\n                errorString={\r\n                  (touched.address && errors.address) ||\r\n                  (!isSubmitting &&\r\n                    updateInfovSettingsState.error['error']['address'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('address');\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '10px',\r\n            }}\r\n          ></div>\r\n\r\n          <Button\r\n            onClick={(e: any) => handleSubmit(e)}\r\n            loading={isSubmitting}\r\n            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n            className='btnPrimaryClassNameoutline'\r\n          >\r\n            Update Invoice Info\r\n          </Button>\r\n\r\n          <div\r\n            style={{\r\n              marginBottom: '10px',\r\n            }}\r\n          ></div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .label('Title')\r\n        .required('Site title can not be empty'),\r\n    adminEmail: Yup.string()\r\n        .label('Admin Email')\r\n        .required('Admin Email can not be empty'),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    metaTitle: '',\r\n    metaTags: '',\r\n    metaDescription: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteSEO = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSEO');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'getSiteSEO');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState])\r\n\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n            body: {\r\n                metaTitle: values.metaTitle,\r\n                metaTags: values.metaTags,\r\n                metaDescription: values.metaDescription\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.metaTitle || !values.metaTags || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Meta Title'\r\n                                    value={values.metaTitle}\r\n                                    name='metaTitle'\r\n                                    isError={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaTitle'])}\r\n\r\n                                    errorString={(touched.metaTitle && errors.metaTitle) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Meta Tags'\r\n                                    value={values.metaTags}\r\n                                    name='metaTags'\r\n                                    isError={(touched.metaTags && errors.metaTags) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaTags'])}\r\n\r\n                                    errorString={(touched.metaTags && errors.metaTags) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaTags'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaTags');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                            <TextArea\r\n                                    label='Meta Description'\r\n                                    value={values.metaDescription}\r\n                                    name='metaDescription'\r\n                                    isError={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaDescription'])}\r\n\r\n                                    errorString={(touched.metaDescription && errors.metaDescription) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['metaDescription'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('metaDescription');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            // disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Site SEO\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteSEO;\r\n//","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    newPassword: Yup.string()\r\n    .label('New Password')\r\n    .required()\r\n    .min(6, 'New Password must have at least 6 characters'),\r\n  newPassword2: Yup.string()\r\n    .label('Confirm New password')\r\n    .required()\r\n    .min(6, 'Confirm New password must have at least 6 characters')\r\n    .oneOf(\r\n      [Yup.ref('newPassword'), null],\r\n      'Confirm new password must match to new password'\r\n    ),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    newPass: '',\r\n    password:'',\r\n    newPassword: '',\r\n    newPassword2: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst ChangeAdminPassword = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateAdminCredential');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'getAdminCredential');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState]);\r\n\r\n\r\n\r\n    console.log('siteSettingsState',siteSettingsState)\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n            body: {\r\n                name: values.name,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                password: values.password, \r\n                newPass: values.newPassword,\r\n                newPassRepeat: values.newPassword2,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    type='text'\r\n                                    label='Name'\r\n                                    value={values.name}\r\n                                    name='name'\r\n                                    isError={(touched.name && errors.name) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['name'])}\r\n\r\n                                    errorString={(touched.name && errors.name) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['name'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('name');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    type='text'\r\n                                    label='Phone'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={{\r\n                            width: '90%',\r\n                            paddingRight: '30px'\r\n                        }}>\r\n                                     <Input\r\n                                    type='text'\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            width: '90%',\r\n                            paddingRight: '30px'\r\n                        }}>\r\n                                    <Input\r\n                                    type='password'\r\n                                    label='Password (Enter current password to update credentials)'\r\n                                    value={values.password}\r\n                                    name='password'\r\n                                    isError={(touched.password && errors.password) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['password'])}\r\n\r\n                                    errorString={(touched.password && errors.password) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['password'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('password');\r\n                                    }}\r\n                                />\r\n                        </div>\r\n\r\n\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    type='password'\r\n                                    label='New Password'\r\n                                    value={values.newPassword}\r\n                                    name='newPassword'\r\n                                    isError={(touched.newPassword && errors.newPassword) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword'])}\r\n\r\n                                    errorString={(touched.newPassword && errors.newPassword) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('newPassword');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    type='password'\r\n                                    label='Confirm New Password'\r\n                                    value={values.newPassword2}\r\n                                    name='newPassword2'\r\n                                    isError={(touched.newPassword2 && errors.newPassword2) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword2'])}\r\n\r\n                                    errorString={(touched.newPassword2 && errors.newPassword2) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword2'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('newPassword2');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            // disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                          Update Credentials\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default ChangeAdminPassword;\r\n//","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs, Tooltip, } from 'antd';\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tCheckOutlined,\r\n\tCloseOutlined,\r\n\tLoadingOutlined,\r\n\tInfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AdminSiteInfo from \"./AdminSiteInfo\";\r\nimport SiteInfoInvoice from \"./SiteInfoInvoice\";\r\nimport SiteSeo from \"./SiteSeo\";\r\nimport ChangeAdminPassword from \"./ChangeAdminPassword\";\r\n\r\n\r\n// import config\r\nimport config from \"../../config.json\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst SiteInfo = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateSiteLogoAndIcon, handleUpdateSiteLogoAndIconFetch] = useHandleFetch({}, 'updateSiteLogoAndIcon','form');\r\n\r\n\tconst [imageUrl, setImageUrl] = useState(`${config.baseURL}/images/logo.png`);\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\r\n\t\r\n\tconst [iconimageUrl, setIconImageUrl] = useState(`${config.baseURL}/favicon.ico`);\r\n\tconst [loadingIcon, setloadingIcon] = useState(false);\r\n\r\n\r\n\r\n\t\t\r\n\tconst [appLogo, setAppLogo] = useState(`${config.baseURL}/images/logo-app.png`);\r\n\tconst [loadingAppLogo, setloadingAppLogo] = useState(false);\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('logo',file); \r\n\r\n\r\n\t\t\t\tconst res = await handleUpdateSiteLogoAndIconFetch({\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Site Logo updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update site Logo, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tfunction beforeIconUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetIconImageUrl(imageUrl)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('icon',file); \r\n\r\n\r\n\t\t\t\tconst res = await handleUpdateSiteLogoAndIconFetch({\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Site Icon updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update site icon, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetloadingIcon(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction beforeAppIconUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetAppLogo(imageUrl)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('logoApp',file); \r\n\r\n\r\n\t\t\t\tconst res = await handleUpdateSiteLogoAndIconFetch({\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('App logo updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update App logo, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetloadingAppLogo(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\r\n\tconst iconUploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingIcon ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\tconst appIconUploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingAppLogo ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='siteInfoContainer'>\r\n\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\" >\r\n\t\t\t\t\t<TabPane tab=\"Site Info\" key=\"1\">\r\n\t\t\t\t\t\t<AdminSiteInfo />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"Site logo\" key=\"2\">\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\talignItems: 'center',marginTop: '15px'\r\n\t\t\t\t\t\t}}>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '40px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'> Logo </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Update Site Logo image'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img \r\n\t\t\t\t\t\t\t\tonError={() => setImageUrl('')}\r\n\t\t\t\t\t\t\t\tsrc={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '40px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'> Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Update Icon image'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeIconUpload}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{iconimageUrl ? <img\r\n\t\t\t\t\t\t\t\t\tonError={() => setIconImageUrl('')}\r\n\t\t\t\t\t\t\t\t src={iconimageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : iconUploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '20px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'> App Logo </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Update App logo image'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeAppIconUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{appLogo ? <img \r\n\t\t\t\t\t\t\t\tonError={() => setAppLogo('')}\r\n\r\n\t\t\t\t\t\t\t\tsrc={appLogo} alt=\"avatar\" style={{ width: '100%' }} /> : appIconUploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t<TabPane tab=\"Site SEO\" key=\"3\">\r\n\t\t\t\t\t\t<SiteSeo />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t<TabPane tab=\"Invoice Information\" key=\"4\">\r\n\r\n\t\t\t\t\t\t<SiteInfoInvoice />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t<TabPane tab=\"Change Credentials\" key=\"5\">\r\n\t\t\t\t\t\t<ChangeAdminPassword />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t</Tabs>\r\n\r\n\t\t\t</div>\r\n\t\t</>\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default SiteInfo;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  FileImageOutlined,\r\n  FileImageTwoTone,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n  setdeliveryChargeList: any;\r\n  deliveryChargeList: any;\r\n  deliveryChargeItem: any;\r\n}\r\n\r\nconst DeliveryCharge = ({\r\n  deliveryChargeItem,\r\n  setdeliveryChargeList,\r\n  deliveryChargeList,\r\n}: Props) => {\r\n  const handleDeliveryChargeChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    const updatedValue = {\r\n      ...deliveryChargeItem,\r\n      [name]: value,\r\n      id: deliveryChargeItem.id,\r\n    };\r\n\r\n    const positionInAttribute = () => {\r\n      return deliveryChargeList\r\n        .map((item) => item.id)\r\n        .indexOf(deliveryChargeItem.id);\r\n    };\r\n\r\n    const index = positionInAttribute();\r\n\r\n    const updateAttributeList = [\r\n      ...deliveryChargeList.slice(0, index),\r\n      updatedValue,\r\n      ...deliveryChargeList.slice(index + 1),\r\n    ];\r\n    setdeliveryChargeList(updateAttributeList);\r\n  };\r\n\r\n  const handleAttributeDelete = () => {\r\n    console.log('delete---deliveryChargeItem', deliveryChargeItem);\r\n    console.log('delete-----deliveryChargeList', deliveryChargeList);\r\n\r\n    const positionInAttribute = () => {\r\n      return deliveryChargeList\r\n        .map((item) => item.id)\r\n        .indexOf(deliveryChargeItem.id);\r\n    };\r\n\r\n    const index = positionInAttribute();\r\n\r\n    const updateAttributeList = [\r\n      ...deliveryChargeList.slice(0, index),\r\n      ...deliveryChargeList.slice(index + 1),\r\n    ];\r\n    setdeliveryChargeList([...updateAttributeList]);\r\n\r\n    console.log('updated-----deliveryChargeList', updateAttributeList);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: '45%',\r\n          marginRight: '10px',\r\n        }}\r\n      >\r\n        <Input\r\n          min={0}\r\n          type='number'\r\n          addonBefore='Minimum Order'\r\n          value={deliveryChargeItem.minimumOrder}\r\n          name='minimumOrder'\r\n          onChange={handleDeliveryChargeChange}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: '45%',\r\n          marginRight: '10px',\r\n        }}\r\n      >\r\n        <Input\r\n          min={0}\r\n          type='number'\r\n          addonBefore='Charge'\r\n          value={deliveryChargeItem.charge}\r\n          name='charge'\r\n          onChange={handleDeliveryChargeChange}\r\n        />\r\n      </div>\r\n      <div\r\n        onClick={() => handleAttributeDelete()}\r\n        style={{\r\n          width: '5%',\r\n          marginBottom: '15px',\r\n          fontSize: '13px',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        <CloseOutlined />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeliveryCharge;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  PlusOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\nconst { Option } = Select;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'New Region Added',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  pickUpLocation: '',\r\n  time: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  regionList?: any;\r\n  setRegionList?: any;\r\n}\r\n\r\nconst AddNewRegion = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  regionList,\r\n  setRegionList,\r\n}: Props) => {\r\n  const [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  const [deliveryChargeList, setdeliveryChargeList] = useState([\r\n    {\r\n      minimumOrder: '',\r\n      charge: '',\r\n      id: `${Math.floor(100000 + Math.random() * 900000)}`,\r\n    },\r\n  ]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // console.log('selectedCityValue', selectedCityValue)\r\n\r\n    if (deliveryChargeList.length > 0) {\r\n      const charge = {};\r\n\r\n      for (let item of deliveryChargeList) {\r\n        if (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n          charge[item['minimumOrder']] = item['charge'];\r\n        }\r\n      }\r\n\r\n      const addRegionRes = await handleRegionFetch({\r\n        body: {\r\n          name: values.name,\r\n          pickUpLocation: values.pickUpLocation,\r\n          time: values.time,\r\n          country: selectedCountryValue,\r\n          city: selectedCityValue,\r\n          charge,\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (addRegionRes && addRegionRes.status === 'ok') {\r\n        openSuccessNotification();\r\n\r\n        setRegionList([\r\n          {\r\n            id: addRegionRes['id'] || '',\r\n            key: addRegionRes['id'] || '',\r\n            name: addRegionRes['name'] || '',\r\n            // @ts-ignore\r\n            ...addRegionRes,\r\n          },\r\n          ...regionList,\r\n        ]);\r\n        setAddNewCategoryVisible(false);\r\n        actions.resetForm();\r\n      } else {\r\n        openErrorNotification();\r\n      }\r\n    } else {\r\n      const addRegionRes = await handleRegionFetch({\r\n        body: {\r\n          name: values.name,\r\n          pickUpLocation: values.pickUpLocation,\r\n          time: values.time,\r\n          country: selectedCountryValue,\r\n          city: selectedCityValue,\r\n          charge: {},\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (addRegionRes && addRegionRes.status === 'ok') {\r\n        openSuccessNotification();\r\n\r\n        setRegionList([\r\n          ...regionList,\r\n          {\r\n            id: addRegionRes['id'] || '',\r\n            key: addRegionRes['id'] || '',\r\n            name: addRegionRes['name'] || '',\r\n            // @ts-ignore\r\n            ...addRegionRes,\r\n          },\r\n        ]);\r\n        setAddNewCategoryVisible(false);\r\n        actions.resetForm();\r\n      } else {\r\n        openErrorNotification();\r\n      }\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  useEffect(() => {\r\n    if (!addRegionState['isLoading']) {\r\n      const error = addRegionState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addRegionState['isLoading'] &&\r\n      Object.keys(addRegionState.data).length > 0\r\n    ) {\r\n      if (addRegionState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addRegionState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  console.log('region----deliveryChargeList', deliveryChargeList);\r\n\r\n  const handleAddDeliveryCharge = () => {\r\n    setdeliveryChargeList([\r\n      ...deliveryChargeList,\r\n      {\r\n        minimumOrder: '',\r\n        charge: '',\r\n        id: `${Math.floor(100000 + Math.random() * 900000)}`,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n            title='Add New Region'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              // disabled: getisSubmitButtonDisabled(values, isValid)\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Name'\r\n                  value={values.name}\r\n                  name='name'\r\n                  isError={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && addRegionState.error['error']['name'])\r\n                  }\r\n                  errorString={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && addRegionState.error['error']['name'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('name');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Pick up Location'\r\n                  value={values.pickUpLocation}\r\n                  name='pickUpLocation'\r\n                  isError={\r\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\r\n                    (!isSubmitting &&\r\n                      addRegionState.error['error']['pickUpLocation'])\r\n                  }\r\n                  errorString={\r\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\r\n                    (!isSubmitting &&\r\n                      addRegionState.error['error']['pickUpLocation'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('pickUpLocation');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginRight: '10px',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Time'\r\n                value={values.time}\r\n                name='time'\r\n                isError={\r\n                  (touched.time && errors.time) ||\r\n                  (!isSubmitting && addRegionState.error['error']['time'])\r\n                }\r\n                errorString={\r\n                  (touched.time && errors.time) ||\r\n                  (!isSubmitting && addRegionState.error['error']['time'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('time');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <h3 className='inputFieldLabel'>Country</h3>\r\n                <Select\r\n                  notFoundContent={\r\n                    <Empty\r\n                      description='No Country Found'\r\n                      image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                    />\r\n                  }\r\n                  showSearch\r\n                  style={{ width: '100%' }}\r\n                  placeholder='Select a Country'\r\n                  optionFilterProp='children'\r\n                  onChange={onChangeCountry}\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {countryListState.done &&\r\n                    countryListState.data.length > 0 &&\r\n                    countryOptions.map((option) => {\r\n                      return (\r\n                        <Option value={option.value}>{option.name}</Option>\r\n                      );\r\n                    })}\r\n                </Select>\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <h3 className='inputFieldLabel'>City</h3>\r\n                <Select\r\n                  notFoundContent={\r\n                    <Empty\r\n                      description='First Select a Country'\r\n                      image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                    />\r\n                  }\r\n                  mode='multiple'\r\n                  showSearch\r\n                  style={{ width: '100%' }}\r\n                  placeholder='Select a city'\r\n                  optionFilterProp='children'\r\n                  onChange={onChangeCity}\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {cityListState.done &&\r\n                    cityListState.data.length > 0 &&\r\n                    cityOptions.map((option) => {\r\n                      return (\r\n                        <Option value={option.value}>{option.name}</Option>\r\n                      );\r\n                    })}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '12px',\r\n              }}\r\n            ></div>\r\n            <h3 className='inputFieldLabel'>Delivery Charges</h3>\r\n\r\n            {deliveryChargeList.map((deliveryChargeItem) => {\r\n              console.log('deliveryChargeItem-region', deliveryChargeItem);\r\n              return (\r\n                <DeliveryCharge\r\n                  deliveryChargeItem={deliveryChargeItem}\r\n                  deliveryChargeList={deliveryChargeList}\r\n                  setdeliveryChargeList={setdeliveryChargeList}\r\n                />\r\n              );\r\n            })}\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '5px',\r\n              }}\r\n            ></div>\r\n            <Button\r\n              size='middle'\r\n              onClick={handleAddDeliveryCharge}\r\n              type='dashed'\r\n              icon={<PlusOutlined />}\r\n            >\r\n              Add Charge\r\n            </Button>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewRegion;\r\n","//@ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string()\r\n  // \t.label('Name')\r\n  // \t.required()\r\n  // \t.min(2, 'Name must have at least 2 characters '),\r\n  // pickUpLocation: Yup.string()\r\n  // \t.label('Pick up Location')\r\n  // \t.required()\r\n  // \t.min(2, 'Pick up Location must have at least 2 characters '),\r\n  // time: Yup.string()\r\n  // \t.label('Time')\r\n  // \t.required()\r\n  // \t.min(2, 'Time must have at least 2 characters '),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Region Updated!',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  customer: any;\r\n  setvisible: any;\r\n  visible: any;\r\n  regionList?: any;\r\n  setRegionList?: any;\r\n}\r\n\r\nconst QuickEdit = ({\r\n  customer,\r\n  setvisible,\r\n  visible,\r\n  setRegionList,\r\n  regionList,\r\n}: Props) => {\r\n  const [updateRegionState, handleUpdateRegionFetch] = useHandleFetch(\r\n    {},\r\n    'updateRegion'\r\n  );\r\n\r\n  console.log('DeliveryRegion', customer);\r\n\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  const [deliveryChargeList, setdeliveryChargeList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (customer.charge && Object.keys(customer.charge).length > 0) {\r\n      const deliveryChargeListFromRegionDetail = [];\r\n      const chargeKeys = Object.keys(customer.charge);\r\n      chargeKeys.forEach((chargeKey) => {\r\n        deliveryChargeListFromRegionDetail.push({\r\n          minimumOrder: chargeKey,\r\n          charge: customer.charge[chargeKey],\r\n          id: `${Math.floor(100000 + Math.random() * 900000)}`,\r\n        });\r\n      });\r\n      setdeliveryChargeList(deliveryChargeListFromRegionDetail);\r\n    }\r\n  }, [customer]);\r\n\r\n  console.log('deliveryCharge333', customer.charge);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // console.log('selectedCityValue',selectedCityValue)\r\n    const charge = {};\r\n\r\n    if (deliveryChargeList.length > 0) {\r\n      for (let item of deliveryChargeList) {\r\n        if (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n          charge[item['minimumOrder']] = item['charge'];\r\n        }\r\n      }\r\n    }\r\n    const addRegionRes = await handleUpdateRegionFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: customer.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name,\r\n        pickUpLocation: values.pickUpLocation,\r\n        time: values.time,\r\n        country: selectedCountryValue || customer.country,\r\n        city: selectedCityValue || customer.city,\r\n        charge,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addRegionRes && addRegionRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      const positionInTag = () => {\r\n        return regionList.map((item) => item.id).indexOf(customer.id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, regionList[index], {\r\n        // @ts-check\r\n        ...addRegionRes,\r\n      });\r\n      const updateRegionList = [\r\n        ...regionList.slice(0, index),\r\n        updatedItem,\r\n        ...regionList.slice(index + 1),\r\n      ];\r\n      setRegionList(updateRegionList);\r\n      setvisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!updateRegionState['isLoading']) {\r\n      const error = updateRegionState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !updateRegionState['isLoading'] &&\r\n      Object.keys(updateRegionState.data).length > 0\r\n    ) {\r\n      if (updateRegionState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [updateRegionState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleAddDeliveryCharge = () => {\r\n    setdeliveryChargeList([\r\n      ...deliveryChargeList,\r\n      {\r\n        minimumOrder: '',\r\n        charge: '',\r\n        id: `${Math.floor(100000 + Math.random() * 900000)}`,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...customer }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            title='Region Edit'\r\n            visible={visible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              // disabled: getisSubmitButtonDisabled(values, isValid)\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Name'\r\n                  value={values.name}\r\n                  name='name'\r\n                  isError={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && updateRegionState.error['error']['name'])\r\n                  }\r\n                  errorString={\r\n                    (touched.name && errors.name) ||\r\n                    (!isSubmitting && updateRegionState.error['error']['name'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('name');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Pick up Location'\r\n                  value={values.pickUpLocation}\r\n                  name='pickUpLocation'\r\n                  isError={\r\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\r\n                    (!isSubmitting &&\r\n                      updateRegionState.error['error']['pickUpLocation'])\r\n                  }\r\n                  errorString={\r\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\r\n                    (!isSubmitting &&\r\n                      updateRegionState.error['error']['pickUpLocation'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('pickUpLocation');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginRight: '10px',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Time'\r\n                value={values.time}\r\n                name='time'\r\n                isError={\r\n                  (touched.time && errors.time) ||\r\n                  (!isSubmitting && updateRegionState.error['error']['time'])\r\n                }\r\n                errorString={\r\n                  (touched.time && errors.time) ||\r\n                  (!isSubmitting && updateRegionState.error['error']['time'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('time');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <h3 className='inputFieldLabel'>Country</h3>\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: '100%' }}\r\n                  placeholder='Select a Country'\r\n                  optionFilterProp='children'\r\n                  defaultValue={customer && customer.country}\r\n                  onChange={onChangeCountry}\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {countryListState.done &&\r\n                    countryListState.data.length > 0 &&\r\n                    countryOptions.map((option) => {\r\n                      return (\r\n                        <Option value={option.value}>{option.name}</Option>\r\n                      );\r\n                    })}\r\n                </Select>\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <h3 className='inputFieldLabel'>City</h3>\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: '100%' }}\r\n                  placeholder='Select a city'\r\n                  optionFilterProp='children'\r\n                  defaultValue={customer && customer.city}\r\n                  onChange={onChangeCity}\r\n                  filterOption={(input, option) =>\r\n                    option.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {cityListState.done &&\r\n                    cityListState.data.length > 0 &&\r\n                    cityOptions.map((option) => {\r\n                      return (\r\n                        <Option value={option.value}>{option.name}</Option>\r\n                      );\r\n                    })}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '12px',\r\n              }}\r\n            ></div>\r\n            <h3 className='inputFieldLabel'>Delivery Charges</h3>\r\n\r\n            {deliveryChargeList.map((deliveryChargeItem) => {\r\n              console.log('deliveryChargeItem-region', deliveryChargeItem);\r\n              return (\r\n                <DeliveryCharge\r\n                  deliveryChargeItem={deliveryChargeItem}\r\n                  deliveryChargeList={deliveryChargeList}\r\n                  setdeliveryChargeList={setdeliveryChargeList}\r\n                />\r\n              );\r\n            })}\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '5px',\r\n              }}\r\n            ></div>\r\n            <Button\r\n              size='middle'\r\n              onClick={handleAddDeliveryCharge}\r\n              type='dashed'\r\n              icon={<PlusOutlined />}\r\n            >\r\n              Add Charge\r\n            </Button>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewRegion from \"./AddNewRegion\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Region Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setRegionList: any; \r\n  roles: any;\r\n} \r\n\r\n\r\nconst MyTable = ({data,setRegionList, roles}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch({}, 'deleteRegion');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteRegionRes = await handleDeleteRegioFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteRegionRes && deleteRegionRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Region'); \r\n\t\t\t  const newRegionList =  data.filter(item => item.id !== id);\r\n\t\t\t  setRegionList(newRegionList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n\r\n        \r\n{isAccess('postDelivery',roles) && (\r\n\t\t\t\t     <Column\r\n        \r\n             className='classnameofthecolumn'\r\n               title=\"\"\r\n               key=\"action\"\r\n               align='right'\r\n               render={(text, record : any) => (\r\n                 <Space size=\"middle\">\r\n                 \r\n                 <a href='##'>\r\n                    <Tooltip placement=\"top\" title='Edit Region'>\r\n                   <span className='iconSize' onClick={() => {\r\n                     setvisible(true)\r\n                     setactiveCategoryForEdit(record); \r\n                   }}> \r\n                   <EditOutlined />\r\n                 \r\n                   </span>\r\n                    </Tooltip>\r\n                   </a>\r\n     \r\n     \r\n        \r\n                    <Popconfirm \r\n                    \r\n                    onConfirm={() => handleDeleteRegion(record.id)}\r\n                    title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                \r\n                <span \r\n                  className='iconSize iconSize-danger'\r\n                  > \r\n                  <DeleteOutlined/>\r\n                 </span>\r\n            \r\n                </Popconfirm>\r\n     \r\n     \r\n          \r\n                 </Space>\r\n               )}\r\n             />\r\n                 )}\r\n\r\n\r\n       \r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    regionList={data}\r\n    setRegionList={setRegionList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n  roles: any; \r\n}\r\n\r\nconst CustomerList = ({roles}: Props) => {\r\n\r\n    const [regionList,setRegionList] = useState([]); \r\n\r\n    const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setRegions = async () => {\r\n       const regions = await handleRegionListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n       }); \r\n       // @ts-ignore\r\n       setRegionList(regions); \r\n     }\r\n     setRegions(); \r\n    },[])\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('regionState',regionState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(regionState.data.length > 0 ){\r\n      const newTagList = regionState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setRegionList(newTagList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Regions \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search regions..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n\r\n          {isAccess('postDelivery',roles) && (\r\n\t\t\t\t       \r\n               <Button\r\n               // type=\"primary\"\r\n               className='btnPrimaryClassNameoutline'\r\n               icon={<PlusOutlined />}\r\n               onClick={() => setAddNewCategoryVisible(true)}\r\n             >\r\n                 Add New\r\n                 \r\n                 </Button>\r\n                 )}\r\n\r\n          \r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {regionState.done && regionList.length > 0 && <MyTable \r\n        roles={roles}\r\n        setRegionList={setRegionList}\r\n        data={regionList} />}\r\n        {regionState.isLoading && <DataTableSkeleton />}\r\n\r\n        {regionState.done && !(regionList.length > 0) && (\r\n\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{regionState.done && \r\n    <AddNewRegion \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          regionList={regionState.data}\r\n          setRegionList={setRegionList}\r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  roles: state.globalState,\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(CustomerList);\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Checkbox,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  url: '',\r\n  protocol: '',\r\n  method: '',\r\n  parameters: '',\r\n  recipientKey: '',\r\n  separator: '',\r\n  textKey: '',\r\n  maskKey: '',\r\n  maskValue: '',\r\n  usernameKey: '',\r\n  usernameValue: '',\r\n  passwordKey: '',\r\n  passwordValue: '',\r\n  additionalMsgType: '',\r\n};\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {}\r\n\r\nconst ConfigureSTMP = ({}: Props) => {\r\n  const [\r\n    getEmailConfigurationState,\r\n    handleGetEmailConfigurationFetch,\r\n  ] = useHandleFetch({}, 'getSMSConfiguration');\r\n  const [\r\n    emailConfigurationState,\r\n    handleEmailConfigurationFetch,\r\n  ] = useHandleFetch({}, 'configureSMS');\r\n\r\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\r\n  const [isArraySupport, setIsArraySupport] = useState(false);\r\n  const [configurationData, setConfigurationData] = useState({});\r\n  const [method, setMethod] = useState('');\r\n  const [protocol, setProtocol] = useState('');\r\n\r\n  console.log('getEmailConfigurationState', getEmailConfigurationState);\r\n\r\n  useEffect(() => {\r\n    const getEmailConfiguration = async () => {\r\n      const res = await handleGetEmailConfigurationFetch({});\r\n      // @ts-ignore\r\n      if (res) {\r\n        // @ts-ignore\r\n        setConfigurationData(res);\r\n        setIsAuthenticated(res['authentication']);\r\n        setMethod(res['method']);\r\n        setProtocol(res['protocol']);\r\n      }\r\n    };\r\n    getEmailConfiguration();\r\n  }, []);\r\n\r\n  console.log('getEmailConfigurationState', method);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleEmailConfigurationFetch({\r\n      body: {\r\n        url: values.url,\r\n        protocol: protocol,\r\n        method: method,\r\n        authentication: isAuthenticated,\r\n        parameters: {\r\n          recipient: {\r\n            key: values.recipientKey,\r\n            arraySupport: isArraySupport,\r\n            separator: values.separator,\r\n          },\r\n          text: {\r\n            key: values.textKey,\r\n          },\r\n          mask: {\r\n            key: values.maskKey,\r\n            value: values.maskValue,\r\n          },\r\n          authentication: {\r\n            username: {\r\n              key: values.usernameKey,\r\n              value: values.usernameValue,\r\n            },\r\n            password: {\r\n              key: values.passwordKey,\r\n              value: values.passwordValue,\r\n            },\r\n          },\r\n          additional: {\r\n            MsgType: values.additionalMsgType,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n    } else {\r\n      // openErrorNotification(\"Something went wrong, Couldn't updated STMP configuration\");\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const handleSelectChange = () => {};\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!emailConfigurationState['isLoading']) {\r\n      const error = emailConfigurationState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !emailConfigurationState['isLoading'] &&\r\n      Object.keys(emailConfigurationState.data).length > 0\r\n    ) {\r\n      if (emailConfigurationState['data']['status'] === 'ok') {\r\n        openSuccessNotification('SMS Settings Updated!');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [emailConfigurationState]);\r\n\r\n  const handleAuthenticatedChange = (e) => {\r\n    setIsAuthenticated(e.target.checked);\r\n  };\r\n\r\n  const prottocolOptions = [\r\n    {\r\n      name: 'HTTP',\r\n      value: 'HTTP',\r\n    },\r\n    {\r\n      name: 'HTTPS',\r\n      value: 'HTTPS',\r\n    },\r\n  ];\r\n\r\n  const methodOptions = [\r\n    {\r\n      name: 'GET',\r\n      value: 'GET',\r\n    },\r\n    {\r\n      name: 'POST',\r\n      value: 'POST',\r\n    },\r\n  ];\r\n\r\n  const handleMethodChange = (value) => {\r\n    console.log('valueOfMethod', value);\r\n    setMethod(value);\r\n  };\r\n\r\n  const handleProtocolChange = (value) => {\r\n    setProtocol(value);\r\n  };\r\n\r\n  const initialValues = {\r\n    url: '',\r\n    protocol: '',\r\n    method: '',\r\n    parameters: '',\r\n    recipientKey: '',\r\n    separator: '',\r\n    textKey: '',\r\n    maskKey: '',\r\n    maskValue: '',\r\n    usernameKey: '',\r\n    usernameValue: '',\r\n    passwordKey: '',\r\n    passwordValue: '',\r\n    additionalMsgType: '',\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...configurationData,\r\n        ...(configurationData &&\r\n          Object.keys(configurationData).length > 0 && {\r\n            recipientKey:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].recipient &&\r\n              configurationData['parameters'].recipient.key,\r\n            separator:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].recipient &&\r\n              configurationData['parameters'].recipient.separator,\r\n            textKey:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].text &&\r\n              configurationData['parameters'].text.key,\r\n            maskKey:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].mask &&\r\n              configurationData['parameters'].mask.key,\r\n            maskValue:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].mask &&\r\n              configurationData['parameters'].mask.value,\r\n            usernameKey:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].authentication &&\r\n              configurationData['parameters'].authentication.username &&\r\n              configurationData['parameters'].authentication.username.key,\r\n            usernameValue:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].authentication &&\r\n              configurationData['parameters'].authentication.username &&\r\n              configurationData['parameters'].authentication.username.value,\r\n            passwordKey:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].authentication &&\r\n              configurationData['parameters'].authentication.password &&\r\n              configurationData['parameters'].authentication.password.key,\r\n            passwordValue:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].authentication &&\r\n              configurationData['parameters'].authentication.password &&\r\n              configurationData['parameters'].authentication.password.value,\r\n            additionalMsgType:\r\n              configurationData['parameters'] &&\r\n              configurationData['parameters'].additional &&\r\n              configurationData['parameters'].additional.MsgType,\r\n          }),\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='URL'\r\n                value={values.url}\r\n                name='url'\r\n                isError={\r\n                  (touched.url && errors.url) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['url'])\r\n                }\r\n                errorString={\r\n                  (touched.url && errors.url) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['url'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('url');\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <h3 className='inputFieldLabel'>Protocol</h3>\r\n              <Select\r\n                showSearch\r\n                style={{ width: '100%', borderRadius: '6px' }}\r\n                placeholder='Select a protocol'\r\n                defaultValue={protocol}\r\n                value={protocol}\r\n                onChange={handleProtocolChange}\r\n              >\r\n                {prottocolOptions.map((option) => {\r\n                  return <Option value={option.value}>{option.name}</Option>;\r\n                })}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <h3 className='inputFieldLabel'>Method</h3>\r\n\r\n              <Select\r\n                onChange={handleMethodChange}\r\n                showSearch\r\n                style={{ width: '100%', borderRadius: '6px' }}\r\n                placeholder='Select a method'\r\n                defaultValue={method}\r\n                value={method}\r\n              >\r\n                {methodOptions.map((option) => {\r\n                  return <Option value={option.value}>{option.name}</Option>;\r\n                })}\r\n              </Select>\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            ></div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '20px',\r\n            }}\r\n          ></div>\r\n          <h3 style={{}} className='addOrderContainer-sectionTitle'>\r\n            Parameters\r\n          </h3>\r\n\r\n          <h3 className='inputFieldLabel'>Recipient</h3>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '35%',\r\n              }}\r\n            >\r\n              <InputSmall\r\n                label='Key'\r\n                value={values.recipientKey}\r\n                name='recipientKey'\r\n                isError={\r\n                  (touched.recipientKey && errors.recipientKey) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['recipientKey'])\r\n                }\r\n                errorString={\r\n                  (touched.recipientKey && errors.recipientKey) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['recipientKey'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('recipientKey');\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '20%',\r\n                marginLeft: '20px',\r\n              }}\r\n            >\r\n              <Checkbox\r\n                value={isArraySupport}\r\n                onChange={(e) => setIsArraySupport(e.target.checked)}\r\n              >\r\n                <span className='checkBoxFieldLabel'>Array support</span>\r\n              </Checkbox>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '45%',\r\n              }}\r\n            >\r\n              {isArraySupport && (\r\n                <InputSmall\r\n                  label='Separator'\r\n                  value={values.separator}\r\n                  name='separator'\r\n                  isError={\r\n                    (touched.separator && errors.separator) ||\r\n                    (!isSubmitting &&\r\n                      emailConfigurationState.error['error']['separator'])\r\n                  }\r\n                  errorString={\r\n                    (touched.separator && errors.separator) ||\r\n                    (!isSubmitting &&\r\n                      emailConfigurationState.error['error']['separator'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('separator');\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <h3 className='inputFieldLabel'>Text</h3>\r\n          <InputSmall\r\n            label='Separator'\r\n            value={values.textKey}\r\n            name='textKey'\r\n            isError={\r\n              (touched.textKey && errors.textKey) ||\r\n              (!isSubmitting &&\r\n                emailConfigurationState.error['error']['textKey'])\r\n            }\r\n            errorString={\r\n              (touched.textKey && errors.textKey) ||\r\n              (!isSubmitting &&\r\n                emailConfigurationState.error['error']['textKey'])\r\n            }\r\n            onChange={(e: any) => {\r\n              handleChange(e);\r\n              setFieldTouched('textKey');\r\n            }}\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '15px',\r\n            }}\r\n          ></div>\r\n\r\n          <h3 className='inputFieldLabel'>Mask</h3>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <InputSmall\r\n                label='Key'\r\n                value={values.maskKey}\r\n                name='maskKey'\r\n                isError={\r\n                  (touched.maskKey && errors.maskKey) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['maskKey'])\r\n                }\r\n                errorString={\r\n                  (touched.maskKey && errors.maskKey) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['maskKey'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('maskKey');\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <InputSmall\r\n                label='Value'\r\n                value={values.maskValue}\r\n                name='maskValue'\r\n                isError={\r\n                  (touched.maskValue && errors.maskValue) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['maskValue'])\r\n                }\r\n                errorString={\r\n                  (touched.maskValue && errors.maskValue) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['maskValue'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('maskValue');\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '15px',\r\n            }}\r\n          ></div>\r\n\r\n          <h3 className='inputFieldLabel'>Username</h3>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <InputSmall\r\n                label='Key'\r\n                value={values.usernameKey}\r\n                name='usernameKey'\r\n                isError={\r\n                  (touched.usernameKey && errors.usernameKey) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['usernameKey'])\r\n                }\r\n                errorString={\r\n                  (touched.usernameKey && errors.usernameKey) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['usernameKey'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('usernameKey');\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <InputSmall\r\n                label='Value'\r\n                value={values.usernameValue}\r\n                name='usernameValue'\r\n                isError={\r\n                  (touched.usernameValue && errors.usernameValue) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['usernameValue'])\r\n                }\r\n                errorString={\r\n                  (touched.usernameValue && errors.usernameValue) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['usernameValue'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('usernameValue');\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '15px',\r\n            }}\r\n          ></div>\r\n\r\n          <h3 className='inputFieldLabel'>Password</h3>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <InputSmall\r\n                label='Key'\r\n                value={values.passwordKey}\r\n                name='passwordKey'\r\n                isError={\r\n                  (touched.passwordKey && errors.passwordKey) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['passwordKey'])\r\n                }\r\n                errorString={\r\n                  (touched.passwordKey && errors.passwordKey) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['passwordKey'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('passwordKey');\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <InputSmall\r\n                label='Value'\r\n                value={values.passwordValue}\r\n                name='passwordValue'\r\n                isError={\r\n                  (touched.passwordValue && errors.passwordValue) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['passwordValue'])\r\n                }\r\n                errorString={\r\n                  (touched.passwordValue && errors.passwordValue) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['passwordValue'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('passwordValue');\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '15px',\r\n            }}\r\n          ></div>\r\n\r\n          <h3 className='inputFieldLabel'>Additional</h3>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            >\r\n              <InputSmall\r\n                label='Msg Type'\r\n                value={values.additionalMsgType}\r\n                name='additionalMsgType'\r\n                isError={\r\n                  (touched.additionalMsgType && errors.additionalMsgType) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['additionalMsgType'])\r\n                }\r\n                errorString={\r\n                  (touched.additionalMsgType && errors.additionalMsgType) ||\r\n                  (!isSubmitting &&\r\n                    emailConfigurationState.error['error']['additionalMsgType'])\r\n                }\r\n                onChange={(e: any) => {\r\n                  handleChange(e);\r\n                  setFieldTouched('additionalMsgType');\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '49%',\r\n              }}\r\n            ></div>\r\n          </div>\r\n\r\n          <Checkbox\r\n            value={isAuthenticated}\r\n            onChange={handleAuthenticatedChange}\r\n          >\r\n            <span className='checkBoxFieldLabel'>Authentication</span>\r\n          </Checkbox>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '20px',\r\n            }}\r\n          ></div>\r\n          <div\r\n            style={{\r\n              display: 'block',\r\n              marginBottom: '20px',\r\n              marginTop: '20px',\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={(e: any) => handleSubmit(e)}\r\n              loading={emailConfigurationState.isLoading}\r\n              className='btnPrimaryClassNameoutline'\r\n            >\r\n              Update SMS Configuration\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default ConfigureSTMP;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tabs,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'New Customer Template Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  setVisible: any;\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\r\n    {},\r\n    'configureAutoSMSTemplate'\r\n  );\r\n  const [\r\n    getConfigureAutoEmailTemplate,\r\n    handleGetConfigureAutoEmailTemplateFetch,\r\n  ] = useHandleFetch({}, 'getConfigureAutoSMSTemplate');\r\n\r\n  const [customer, setcustomer] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const [admin, setadmin] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\r\n      {\r\n        body: {\r\n          event: 'newCustomer',\r\n          customer: {\r\n            ...customer,\r\n          },\r\n          admin: {\r\n            ...admin,\r\n          },\r\n        },\r\n      }\r\n    );\r\n\r\n    // @ts-ignore\r\n    if (\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes &&\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\r\n    ) {\r\n      openSuccessNotification();\r\n      setVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getCustomerAutoEmail = async () => {\r\n      const res = await handleAutoEmailTemplateFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            eventName: 'newCustomer',\r\n          },\r\n        },\r\n      });\r\n\r\n      // set auto email template to customer and admin\r\n    };\r\n    getCustomerAutoEmail();\r\n  }, []);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      width={'80vw'}\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      title='New Customer Event Template'\r\n      visible={visible}\r\n      onOk={(e: any) => handleSubmit()}\r\n      onCancel={handleCancel}\r\n      okText='Submit'\r\n      okButtonProps={{\r\n        loading: autoEmailTemplate.isLoading,\r\n        htmlType: 'submit',\r\n        // disabled: getisSubmitButtonDisabled(values, isValid)\r\n      }}\r\n      bodyStyle={{\r\n        margin: '10px',\r\n        padding: '10px',\r\n      }}\r\n      footer={false}\r\n    >\r\n      <Tabs defaultActiveKey='1'>\r\n        <TabPane tab='Customer' key='1'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '70%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={customer.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={customer.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setcustomer({\r\n                    ...customer,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '30%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.added?&gt; :\r\n                  </b>{' '}\r\n                  Order time\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?shippingAddress.firstName?&gt; :\r\n                  </b>{' '}\r\n                  Shipping first Name\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n\r\n        <TabPane tab='Admin' key='2'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '70%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={admin.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={admin.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setadmin({\r\n                    ...admin,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '30%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.added?&gt; :\r\n                  </b>{' '}\r\n                  Order time\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?shippingAddress.firstName?&gt; :\r\n                  </b>{' '}\r\n                  Shipping first Name\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tabs,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'New Customer Template Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  setVisible: any;\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\r\n    {},\r\n    'configureAutoSMSTemplate'\r\n  );\r\n  const [\r\n    getConfigureAutoEmailTemplate,\r\n    handleGetConfigureAutoEmailTemplateFetch,\r\n  ] = useHandleFetch({}, 'getConfigureAutoSMSTemplate');\r\n\r\n  const [customer, setcustomer] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const [admin, setadmin] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\r\n      {\r\n        body: {\r\n          event: 'orderStatus',\r\n          customer: {\r\n            ...customer,\r\n          },\r\n          admin: {\r\n            ...admin,\r\n          },\r\n        },\r\n      }\r\n    );\r\n\r\n    // @ts-ignore\r\n    if (\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes &&\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\r\n    ) {\r\n      openSuccessNotification();\r\n      setVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getCustomerAutoEmail = async () => {\r\n      const res = await handleAutoEmailTemplateFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            eventName: 'orderStatus',\r\n          },\r\n        },\r\n      });\r\n\r\n      // set auto email template to customer and admin\r\n    };\r\n    getCustomerAutoEmail();\r\n  }, []);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      width={'70vw'}\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      title='Order Status Template'\r\n      visible={visible}\r\n      onOk={(e: any) => handleSubmit()}\r\n      onCancel={handleCancel}\r\n      okText='Submit'\r\n      okButtonProps={{\r\n        loading: autoEmailTemplate.isLoading,\r\n        htmlType: 'submit',\r\n        // disabled: getisSubmitButtonDisabled(values, isValid)\r\n      }}\r\n      bodyStyle={{\r\n        margin: '10px',\r\n        padding: '10px',\r\n      }}\r\n      footer={false}\r\n    >\r\n      <Tabs defaultActiveKey='1'>\r\n        <TabPane tab='Customer' key='1'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '70%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={customer.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={customer.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setcustomer({\r\n                    ...customer,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '30%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.added?&gt; :\r\n                  </b>{' '}\r\n                  Order time\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?shippingAddress.firstName?&gt; :\r\n                  </b>{' '}\r\n                  Shipping first Name\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n\r\n        <TabPane tab='Admin' key='2'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '70%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={admin.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={admin.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setadmin({\r\n                    ...admin,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '30%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.added?&gt; :\r\n                  </b>{' '}\r\n                  Order time\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?shippingAddress.firstName?&gt; :\r\n                  </b>{' '}\r\n                  Shipping first Name\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tabs,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'New Customer Template Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  setVisible: any;\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\r\n    {},\r\n    'configureAutoSMSTemplate'\r\n  );\r\n  const [\r\n    getConfigureAutoEmailTemplate,\r\n    handleGetConfigureAutoEmailTemplateFetch,\r\n  ] = useHandleFetch({}, 'getConfigureAutoSMSTemplate');\r\n\r\n  const [customer, setcustomer] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const [admin, setadmin] = useState({\r\n    subject: '',\r\n    body: '',\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\r\n      {\r\n        body: {\r\n          event: 'order',\r\n          customer: {\r\n            ...customer,\r\n          },\r\n          admin: {\r\n            ...admin,\r\n          },\r\n        },\r\n      }\r\n    );\r\n\r\n    // @ts-ignore\r\n    if (\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes &&\r\n      // @ts-ignore\r\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\r\n    ) {\r\n      openSuccessNotification();\r\n      setVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getCustomerAutoEmail = async () => {\r\n      const res = await handleAutoEmailTemplateFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            eventName: 'order',\r\n          },\r\n        },\r\n      });\r\n\r\n      // set auto email template to customer and admin\r\n    };\r\n    getCustomerAutoEmail();\r\n  }, []);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      width={'80vw'}\r\n      style={{\r\n        top: '40px',\r\n      }}\r\n      title='Order Event Template'\r\n      visible={visible}\r\n      onOk={(e: any) => handleSubmit()}\r\n      onCancel={handleCancel}\r\n      okText='Submit'\r\n      okButtonProps={{\r\n        loading: autoEmailTemplate.isLoading,\r\n        htmlType: 'submit',\r\n        // disabled: getisSubmitButtonDisabled(values, isValid)\r\n      }}\r\n      bodyStyle={{\r\n        margin: '10px',\r\n        padding: '10px',\r\n      }}\r\n      footer={false}\r\n    >\r\n      <Tabs defaultActiveKey='1'>\r\n        <TabPane tab='Customer' key='1'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '70%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={customer.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={customer.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setcustomer({\r\n                    ...customer,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                width: '30%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.added?&gt; :\r\n                  </b>{' '}\r\n                  Order time\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?shippingAddress.firstName?&gt; :\r\n                  </b>{' '}\r\n                  Shipping first Name\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n\r\n        <TabPane tab='Admin' key='2'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                width: '70%',\r\n              }}\r\n            >\r\n              <Input\r\n                label='Subject'\r\n                value={admin.subject}\r\n                name='subject'\r\n                onChange={(e: any) => {\r\n                  setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n              <CKEditor\r\n                editor={ClassicEditor}\r\n                data={admin.body}\r\n                onInit={(editor) => {\r\n                  // You can store the \"editor\" and use when it is needed.\r\n                  console.log('Editor is ready to use!', editor);\r\n                }}\r\n                onChange={(event, editor) => {\r\n                  const data = editor.getData();\r\n                  setadmin({\r\n                    ...admin,\r\n                    body: data,\r\n                  });\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                  console.log('Blur.', editor);\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                  console.log('Focus.', editor);\r\n                }}\r\n              />\r\n\r\n              <div\r\n                style={{\r\n                  display: 'block',\r\n                  marginBottom: '20px',\r\n                  marginTop: '20px',\r\n                }}\r\n              >\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  loading={autoEmailTemplate.isLoading}\r\n                  className='btnPrimaryClassNameoutline'\r\n                >\r\n                  Update Template\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: '30%',\r\n                overflowY: 'auto',\r\n                background: '#f7f7f7',\r\n                marginLeft: '20px',\r\n                padding: '10px',\r\n                borderRadius: '8px',\r\n              }}\r\n            >\r\n              <h4>Information Tags</h4>\r\n              <p\r\n                style={{\r\n                  fontSize: '12px',\r\n                }}\r\n              >\r\n                Place the following tags to replace them with actual data while\r\n                sending email\r\n              </p>\r\n              <ul\r\n                style={{\r\n                  padding: '15px',\r\n                }}\r\n              >\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    marginBottom: '10px',\r\n                    lineHeight: 1.7,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?=order.added?&gt; :\r\n                  </b>{' '}\r\n                  Order time\r\n                </li>\r\n                <li\r\n                  style={{\r\n                    fontSize: '12px',\r\n                    lineHeight: 2,\r\n                    fontWeight: 500,\r\n                  }}\r\n                >\r\n                  <b\r\n                    style={{\r\n                      borderRadius: '15px',\r\n                      backgroundColor: '#ddd',\r\n                      padding: '1px 10px',\r\n                    }}\r\n                  >\r\n                    &lt;?shippingAddress.firstName?&gt; :\r\n                  </b>{' '}\r\n                  Shipping first Name\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Checkbox,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n  EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport NewCustomerTemplate from './NewCustomerTemplate';\r\nimport OrderStatusTemplateAutoEmail from './OrderStatusTemplateAutoEmail';\r\nimport OrderTemplateAutoEmail from './OrderTemplateAutoEmail';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst ConfigureAutoEmail = ({}: Props) => {\r\n  const [\r\n    getAutoEmailConfigurationState,\r\n    handleGetAutoEmailConfigurationFetch,\r\n  ] = useHandleFetch({}, 'getAutoSMSConfiguration');\r\n  const [\r\n    configureAutoEmailConfigurationState,\r\n    handleAutoEmailConfigurationFetch,\r\n  ] = useHandleFetch({}, 'configureAutoSMS');\r\n\r\n  const [isnewCustomerAdmin, setnewCustomerAdmin] = useState(false);\r\n  const [isnewCustomerCustomer, setnewCustomerCustomer] = useState(false);\r\n  const [isorderAdmin, setorderAdmin] = useState(false);\r\n  const [isorderStatusAdmin, setorderStatusAdmin] = useState(false);\r\n  const [isorderCustomer, setorderCustomer] = useState(false);\r\n  const [isorderStatusCustomer, setIsorderStatusCustomer] = useState(false);\r\n\r\n  const [newcustomermodal, setnewcustomermodal] = useState(false);\r\n  const [ordermodal, setordermodal] = useState(false);\r\n  const [orderStatusmodal, setorderStatusmodal] = useState(false);\r\n  const [autoEmailData, setAutoEmailData] = useState({});\r\n\r\n  console.log('isnewCustomerAdmin', isnewCustomerAdmin);\r\n  console.log('isnewCustomerCustomer', isnewCustomerCustomer);\r\n\r\n  useEffect(() => {\r\n    const getAutoEmailConfiguration = async () => {\r\n      const res = await handleGetAutoEmailConfigurationFetch({});\r\n      //@ts-ignore\r\n      if (res) {\r\n        setAutoEmailData(autoEmailData);\r\n        setnewCustomerAdmin(res['newCustomer']['admin']);\r\n        setnewCustomerCustomer(res['newCustomer']['user']);\r\n        setIsorderStatusCustomer(res['orderStatus']['user']);\r\n        setorderStatusAdmin(res['orderStatus']['admin']);\r\n        setorderAdmin(res['order']['admin']);\r\n        setorderCustomer(res['order']['user']);\r\n      }\r\n    };\r\n    getAutoEmailConfiguration();\r\n  }, []);\r\n\r\n  console.log('getAutoEmailConfigurationState', getAutoEmailConfigurationState);\r\n\r\n  const handleUpdateAutoEmail = async () => {\r\n    const updateAutoEmailRes = await handleAutoEmailConfigurationFetch({\r\n      body: {\r\n        newCustomer: {\r\n          admin: isnewCustomerAdmin,\r\n          user: isnewCustomerCustomer,\r\n        },\r\n        order: {\r\n          admin: isorderAdmin,\r\n          user: isorderCustomer,\r\n        },\r\n        orderStatus: {\r\n          admin: isorderStatusAdmin,\r\n          user: isorderStatusCustomer,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (updateAutoEmailRes && updateAutoEmailRes.status === 'ok') {\r\n      openSuccessNotification('Auto SMS Configuration Updated!');\r\n    } else {\r\n      openErrorNotification(\r\n        \"Something went wrong, Couldn't updated Auto SMS configuration\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n        }}\r\n      >\r\n        <div style={{}}>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '15px',\r\n                marginTop: '10px',\r\n              }}\r\n            >\r\n              <h3 className='checkBoxFieldLabel'>New Customer</h3>\r\n            </div>\r\n            <Button\r\n              className='templateEditSmall'\r\n              onClick={() => setnewcustomermodal(true)}\r\n              type='link'\r\n              icon={<EditOutlined />}\r\n            >\r\n              configure Template\r\n            </Button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              marginTop: '15px',\r\n            }}\r\n          ></div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              marginTop: '15px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '20px',\r\n              }}\r\n            >\r\n              <Checkbox\r\n                checked={isnewCustomerAdmin}\r\n                defaultChecked={isnewCustomerAdmin}\r\n                onChange={(e) => setnewCustomerAdmin(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\r\n              </Checkbox>\r\n            </div>\r\n            <div style={{}}>\r\n              <Checkbox\r\n                checked={isnewCustomerCustomer}\r\n                defaultChecked={isnewCustomerCustomer}\r\n                onChange={(e) => setnewCustomerCustomer(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\r\n              </Checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginTop: '30px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '15px',\r\n                marginTop: '10px',\r\n              }}\r\n            >\r\n              <h3 className='checkBoxFieldLabel'>Order</h3>\r\n            </div>\r\n            <Button\r\n              className='templateEditSmall'\r\n              onClick={() => setordermodal(true)}\r\n              type='link'\r\n              icon={<EditOutlined />}\r\n            >\r\n              configure Template\r\n            </Button>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              marginTop: '5px',\r\n            }}\r\n          ></div>\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              marginTop: '15px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '20px',\r\n              }}\r\n            >\r\n              <Checkbox\r\n                checked={isorderAdmin}\r\n                defaultChecked={isorderAdmin}\r\n                onChange={(e) => setorderAdmin(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\r\n              </Checkbox>\r\n            </div>\r\n            <div style={{}}>\r\n              <Checkbox\r\n                checked={isorderCustomer}\r\n                defaultChecked={isorderCustomer}\r\n                onChange={(e) => setorderCustomer(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\r\n              </Checkbox>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginTop: '30px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '15px',\r\n                marginTop: '10px',\r\n              }}\r\n            >\r\n              <h3 className='checkBoxFieldLabel'>Order status</h3>\r\n            </div>\r\n            <Button\r\n              className='templateEditSmall'\r\n              onClick={() => setorderStatusmodal(true)}\r\n              type='link'\r\n              icon={<EditOutlined />}\r\n            >\r\n              configure Template\r\n            </Button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              marginTop: '15px',\r\n            }}\r\n          ></div>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              marginTop: '15px',\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                marginRight: '20px',\r\n              }}\r\n            >\r\n              <Checkbox\r\n                checked={isorderStatusAdmin}\r\n                defaultChecked={isorderStatusAdmin}\r\n                onChange={(e) => setorderStatusAdmin(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\r\n              </Checkbox>\r\n            </div>\r\n            <div style={{}}>\r\n              <Checkbox\r\n                checked={isorderStatusCustomer}\r\n                defaultChecked={isorderStatusCustomer}\r\n                onChange={(e) => setIsorderStatusCustomer(e.target.checked)}\r\n              >\r\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\r\n              </Checkbox>\r\n            </div>\r\n\r\n            <div style={{}}></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          marginTop: '25px',\r\n        }}\r\n      ></div>\r\n\r\n      <Button\r\n        onClick={(e: any) => handleUpdateAutoEmail()}\r\n        loading={configureAutoEmailConfigurationState.isLoading}\r\n        className='btnPrimaryClassNameoutline'\r\n      >\r\n        Update Auto SMS Configuration\r\n      </Button>\r\n\r\n      <div\r\n        style={{\r\n          marginTop: '5px',\r\n        }}\r\n      ></div>\r\n\r\n      <NewCustomerTemplate\r\n        visible={newcustomermodal}\r\n        setVisible={setnewcustomermodal}\r\n      />\r\n\r\n      <OrderStatusTemplateAutoEmail\r\n        visible={orderStatusmodal}\r\n        setVisible={setorderStatusmodal}\r\n      />\r\n\r\n      <OrderTemplateAutoEmail visible={ordermodal} setVisible={setordermodal} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ConfigureAutoEmail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n  Checkbox,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n  SendOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Tag Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  recipient: '',\r\n  subject: '',\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst ComposeCustomEmail = ({}: Props) => {\r\n  const [sendCustomerEmailState, handleSendCustomEmailFetch] = useHandleFetch(\r\n    {},\r\n    'sendCustomSMS'\r\n  );\r\n\r\n  const [text, setText] = useState('');\r\n  const [recipient, setrecipient] = useState('');\r\n\r\n  function handleChange(value) {\r\n    setrecipient(value);\r\n  }\r\n\r\n  const handleMsgSend = async () => {\r\n    const addTagRes = await handleSendCustomEmailFetch({\r\n      body: {\r\n        recipient: recipient,\r\n        text: text,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      setText('');\r\n      setrecipient('');\r\n      openSuccessNotification('SMS Sent!');\r\n    } else {\r\n      // openErrorNotification(\"Something went wrong, Couldn't send email\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!sendCustomerEmailState['isLoading']) {\r\n      const error = sendCustomerEmailState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !sendCustomerEmailState['isLoading'] &&\r\n      Object.keys(sendCustomerEmailState.data).length > 0\r\n    ) {\r\n      // if (sendCustomerEmailState['data']['status'] === 'ok') {\r\n      //     openSuccessNotification('Email Sent!');\r\n      // }\r\n    }\r\n  }, [sendCustomerEmailState]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '450px',\r\n      }}\r\n    >\r\n      <h3 className='inputFieldLabel'>Recipient</h3>\r\n\r\n      <Select\r\n        style={{\r\n          height: '30px',\r\n          borderRadius: '3px',\r\n          borderColor: '#eee !important',\r\n          width: '100%',\r\n        }}\r\n        mode='tags'\r\n        onChange={handleChange}\r\n        tokenSeparators={[',']}\r\n      ></Select>\r\n\r\n      <div\r\n        style={{\r\n          marginTop: '15px',\r\n        }}\r\n      ></div>\r\n      <TextArea\r\n        label='Text'\r\n        value={text}\r\n        name='text'\r\n        onChange={(e: any) => {\r\n          setText(e.target.value);\r\n        }}\r\n      />\r\n\r\n      <Button\r\n        style={{\r\n          marginTop: '10px',\r\n        }}\r\n        onClick={handleMsgSend}\r\n        loading={sendCustomerEmailState.isLoading}\r\n        //   disabled={getMsgSendIsDisabled()}\r\n\r\n        className='btnAddToPrice'\r\n      >\r\n        Send{' '}\r\n        <span\r\n          style={{\r\n            marginLeft: '10px',\r\n          }}\r\n        >\r\n          {' '}\r\n          <SendOutlined />\r\n        </span>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComposeCustomEmail;\r\n","import React, { useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { Spin, Empty } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { LeftOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n  id?: any;\r\n  setSelectedEmailId?: any;\r\n}\r\n\r\nconst InboxEmailDetails = ({ id, setSelectedEmailId }: Props) => {\r\n  const [getEmailDetailState, handleGetEmailListFetch] = useHandleFetch(\r\n    {},\r\n    'getSMSDetails'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getEmailConfiguration = async () => {\r\n      const res = await handleGetEmailListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: id,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n    };\r\n    getEmailConfiguration();\r\n  }, []);\r\n\r\n  console.log('getEmailDetailState', getEmailDetailState);\r\n\r\n  return (\r\n    <>\r\n      {getEmailDetailState.isLoading && (\r\n        <>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              margin: '150px 0',\r\n            }}\r\n          >\r\n            <Spin size='large' />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {getEmailDetailState.done && !getEmailDetailState.data ? (\r\n        <>\r\n          <div\r\n            style={{\r\n              marginTop: '100px',\r\n            }}\r\n          >\r\n            <Empty\r\n              description='No SMS found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      {getEmailDetailState.done &&\r\n      getEmailDetailState.data &&\r\n      !(Object.keys(getEmailDetailState.data).length > 0) ? (\r\n        <>\r\n          <div\r\n            style={{\r\n              marginTop: '100px',\r\n            }}\r\n          >\r\n            <Empty\r\n              description='No SMS found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n\r\n      {getEmailDetailState.done &&\r\n        getEmailDetailState.data &&\r\n        Object.keys(getEmailDetailState.data).length > 0 && (\r\n          <>\r\n            <div className='inboxEmailDetails'>\r\n              <div\r\n                onClick={() => setSelectedEmailId('')}\r\n                className='inboxEmailDetails__backBtn'\r\n              >\r\n                <LeftOutlined />\r\n              </div>\r\n              <div className='inboxEmailDetails__header'>\r\n                <span>{getEmailDetailState['data']['event']}</span>\r\n                <h3>{getEmailDetailState['data']['recipient']}</h3>\r\n                <h4>\r\n                  {getEmailDetailState['data']['time'] &&\r\n                    moment(getEmailDetailState['data']['time']).format(\r\n                      'MMMM Do YYYY, h:mm a'\r\n                    )}\r\n                </h4>\r\n              </div>\r\n              <div className='inboxEmailDetails__body'>\r\n                {getEmailDetailState['data']['text'] &&\r\n                  getEmailDetailState['data']['text']}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InboxEmailDetails;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\nimport InboxEmailDetails from './InboxEmailDetails';\r\nimport { Spin } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\ninterface Props {}\r\n\r\nconst Inbox = (props: Props) => {\r\n  const [getEmailListState, handleGetEmailListFetch] = useHandleFetch(\r\n    {},\r\n    'getSentSMSList'\r\n  );\r\n  const [selectedEmailId, setSelectedEmailId] = useState('');\r\n\r\n  useEffect(() => {\r\n    const getEmailConfiguration = async () => {\r\n      const res = await handleGetEmailListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            limitCount: 50000,\r\n            sortItemValue: 'time',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n    };\r\n    getEmailConfiguration();\r\n  }, []);\r\n\r\n  console.log('getEmailListState', getEmailListState);\r\n\r\n  return (\r\n    <>\r\n      {getEmailListState.isLoading && (\r\n        <>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              margin: '150px 0',\r\n            }}\r\n          >\r\n            <Spin size='large' />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {getEmailListState.done &&\r\n        getEmailListState.data &&\r\n        getEmailListState.data.length > 0 && (\r\n          <>\r\n            <div className='sentEmailListContainer'>\r\n              {!selectedEmailId && (\r\n                <>\r\n                  {getEmailListState.done &&\r\n                    getEmailListState.data &&\r\n                    getEmailListState.data.length > 0 && (\r\n                      <>\r\n                        {getEmailListState.data.map((item) => {\r\n                          return (\r\n                            <div\r\n                              onClick={() => setSelectedEmailId(item.id)}\r\n                              className='sentEmailListContainer__item'\r\n                            >\r\n                              <div className='sentEmailListContainer__item-info'>\r\n                                <h3>To: {` ${item.recipient}`}</h3>\r\n                                <span>{`${item.event}`}</span>\r\n                              </div>\r\n\r\n                              <h4>\r\n                                {item.text &&\r\n                                  item.text.substring(0, 125) + '.....'}\r\n                              </h4>\r\n                              <h3>\r\n                                {item.time &&\r\n                                  moment(item.time).format('MMMM Do, h a')}\r\n                              </h3>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </>\r\n                    )}\r\n                </>\r\n              )}\r\n\r\n              {selectedEmailId && (\r\n                <>\r\n                  <InboxEmailDetails\r\n                    setSelectedEmailId={setSelectedEmailId}\r\n                    id={selectedEmailId}\r\n                  />\r\n                </>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Inbox;\r\n","import React from 'react';\r\n\r\n// import lib\r\nimport { Tabs } from 'antd';\r\n\r\n// import components\r\nimport ConfigureSTMP from './ConfigureSMS';\r\nimport ConfigureAutoEmail from './ConfigureAutoSMS';\r\nimport ComposeCustomEmail from './ComposeCustomSMS';\r\nimport Inbox from './Inbox';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  FileImageOutlined,\r\n  FileImageTwoTone,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  InboxOutlined,\r\n  SettingOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\ninterface Props {}\r\n\r\nconst Sms = (props: Props) => {\r\n  return (\r\n    <>\r\n      <div className='siteInfoContainer'>\r\n        <Tabs defaultActiveKey='1'>\r\n          <TabPane\r\n            tab={\r\n              <span>\r\n                <InboxOutlined />\r\n                Inbox\r\n              </span>\r\n            }\r\n            key='1'\r\n          >\r\n            <Inbox />\r\n          </TabPane>\r\n\r\n          <TabPane\r\n            tab={\r\n              <span>\r\n                <PlusCircleOutlined />\r\n                Compose SMS\r\n              </span>\r\n            }\r\n            key='2'\r\n          >\r\n            <ComposeCustomEmail />\r\n          </TabPane>\r\n\r\n          <TabPane\r\n            tab={\r\n              <span>\r\n                <SettingOutlined />\r\n                Configure SMS\r\n              </span>\r\n            }\r\n            key='3'\r\n          >\r\n            <ConfigureSTMP />\r\n          </TabPane>\r\n\r\n          <TabPane\r\n            tab={\r\n              <span>\r\n                <SettingOutlined />\r\n                Configure Auto SMS\r\n              </span>\r\n            }\r\n            key='4'\r\n          >\r\n            <ConfigureAutoEmail />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sms;\r\n","import SMS from './Sms';\r\nexport default SMS;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"fromEmail\": \"\",\r\n    \"fromName\": \"\",\r\n    \"host\": \"\",\r\n    \"encryption\":\"\",\r\n    \"port\":'',\r\n    \"smtpUsername\":\"\",\r\n    \"smtpPassword\": \"\"\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ConfigureSTMP = ({  }: Props) => {\r\n\r\n    const [getEmailConfigurationState, handleGetEmailConfigurationFetch] = useHandleFetch({}, 'getEmailConfiguration');\r\n    const [emailConfigurationState, handleEmailConfigurationFetch] = useHandleFetch({}, 'configureEmailSTMP');\r\n \r\n    const [isAuthenticated,setIsAuthenticated] = useState(true);\r\n    const [configurationData,setConfigurationData] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n      const getEmailConfiguration = async () => {\r\n          const res = await handleGetEmailConfigurationFetch({});\r\n          // @ts-ignore\r\n          if(res){\r\n              // @ts-ignore\r\n            setConfigurationData(res); \r\n            setIsAuthenticated(res['authentication'])\r\n          }\r\n      }; \r\n      getEmailConfiguration(); \r\n    }, [])\r\n\r\n\r\n    console.log('getEmailConfigurationState',getEmailConfigurationState)\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleEmailConfigurationFetch({\r\n            body: {\r\n                \"fromEmail\": values.fromEmail.trim(),\r\n                \"fromName\": values.fromName.trim(),\r\n                \"host\": values.host.trim(),\r\n                \"encryption\":values.encryption.trim(),\r\n                \"port\":values.port,\r\n                \"authentication\": isAuthenticated,\r\n                \"smtpUsername\":values.smtpUsername.trim(),\r\n                \"smtpPassword\": values.smtpPassword.trim()\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n           \r\n        }\r\n        else {\r\n            // openErrorNotification(\"Something went wrong, Couldn't updated STMP configuration\");\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    \r\n\tuseEffect(() => {\r\n\t\tif (!emailConfigurationState['isLoading']) {\r\n\t\t\tconst error = emailConfigurationState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!emailConfigurationState['isLoading'] &&\r\n\t\t\tObject.keys(emailConfigurationState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (emailConfigurationState['data']['status'] === 'ok') {\r\n                openSuccessNotification('STMP Configuration Updated!');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [emailConfigurationState]);\r\n\r\n\r\n\r\n    const handleAuthenticatedChange = (e) => {\r\n        setIsAuthenticated(e.target.checked);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...configurationData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                                         \t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='From Email'\r\n                                                    value={values.fromEmail}\r\n                                                    name='fromEmail'\r\n                                                    isError={(touched.fromEmail && errors.fromEmail) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\r\n\r\n                                                    errorString={(touched.fromEmail && errors.fromEmail) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('fromEmail');\r\n                                                    }}\r\n                                                     />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='From Name'\r\n                                                    value={values.fromName}\r\n                                                    name='fromName'\r\n                                                    isError={(touched.fromName && errors.fromName) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\r\n\r\n                                                    errorString={(touched.fromName && errors.fromName) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('fromName');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                      <Input\r\n                                                    label='Host'\r\n                                                    value={values.host}\r\n                                                    name='host'\r\n                                                    isError={(touched.host && errors.host) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\r\n\r\n                                                    errorString={(touched.host && errors.host) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('host');\r\n                                                    }}\r\n                                                     />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='Encryption'\r\n                                                    value={values.encryption}\r\n                                                    name='encryption'\r\n                                                    isError={(touched.encryption && errors.encryption) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\r\n\r\n                                                    errorString={(touched.encryption && errors.encryption) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('encryption');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='STMP Username'\r\n                                                    value={values.smtpUsername}\r\n                                                    name='smtpUsername'\r\n                                                    isError={(touched.smtpUsername && errors.smtpUsername) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\r\n\r\n                                                    errorString={(touched.smtpUsername && errors.smtpUsername) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('smtpUsername');\r\n                                                    }}\r\n                                                    />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='STMP Password'\r\n                                                    value={values.smtpPassword}\r\n                                                    name='smtpPassword'\r\n                                                    isError={(touched.smtpPassword && errors.smtpPassword) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\r\n\r\n                                                    errorString={(touched.smtpPassword && errors.smtpPassword) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('smtpPassword');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                  <Input\r\n                                                     type='number'\r\n                                                    label='Port'\r\n                                                    value={values.port}\r\n                                                    name='port'\r\n                                                    isError={(touched.port && errors.port) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\r\n\r\n                                                    errorString={(touched.port && errors.port) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('port');\r\n                                                    }}\r\n                                                    />\r\n                                            </div>\r\n\r\n                                        \r\n                                            <Checkbox\r\n                                            value={isAuthenticated}\r\n                                             onChange={handleAuthenticatedChange}>\r\n                                                    <span className='checkBoxFieldLabel'>\r\n                                                        Authentication\r\n                                                    </span>\r\n                                                    \r\n                                                </Checkbox>    \r\n\r\n\r\n\r\n<div style={{\r\n    marginTop:'20px'\r\n}}></div>\r\n                                      <div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>\r\n                                                    \r\n                                      <Button\r\n\r\n                                        onClick={(e: any) => handleSubmit(e)}\r\n                                        loading={emailConfigurationState.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Email Configuration\r\n                                        </Button>      \r\n                                          </div>      \r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ConfigureSTMP;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"newCustomer\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'newCustomer'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"New Customer Event Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n        footer={false}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n\r\n<div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>   \r\n                                      <Button\r\n                                        onClick={handleSubmit}\r\n                                        loading={autoEmailTemplate.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Template\r\n                                        </Button>      \r\n                                    </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n\r\n    <div style={{\r\n        display:'flex'\r\n    }}>\r\n        <div style={{\r\n            width: '70%'\r\n        }}>\r\n\r\n<Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n        \r\n<div style={{\r\n            display:'block',\r\n            marginBottom:'20px',\r\n            marginTop:'20px',\r\n        }}>   \r\n        <Button\r\n        onClick={handleSubmit}\r\n        loading={autoEmailTemplate.isLoading}\r\n        className='btnPrimaryClassNameoutline'\r\n        >\r\n        Update Template\r\n        </Button>      \r\n    </div>    \r\n\r\n\r\n        </div>\r\n        <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n\r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"orderStatus\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'orderStatus'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'70vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"Order Status Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n        footer={false}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n\r\n        \r\n                                    <div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>   \r\n                                      <Button\r\n                                        onClick={handleSubmit}\r\n                                        loading={autoEmailTemplate.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Template\r\n                                        </Button>      \r\n                                    </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n\r\n                    <div style={{\r\n                        display: 'flex',\r\n                \r\n                    }}>\r\n\r\n                        <div style={{\r\n                            width: '70%'\r\n                        }}>\r\n   <Input\r\n                            label='Subject'\r\n                            value={admin.subject}\r\n                            name='subject'\r\n                            onChange={(e:any) => {\r\n                                setadmin({\r\n                                    ...admin,\r\n                                    subject: e.target.value\r\n                                })\r\n                            }}\r\n                        />\r\n\r\n                        <h3 className='inputFieldLabel'>\r\n                            Body\r\n                        </h3>\r\n\r\n\r\n                                <CKEditor\r\n                                editor={ClassicEditor}\r\n                                data={admin.body}\r\n                                onInit={editor => {\r\n                                    // You can store the \"editor\" and use when it is needed.\r\n                                    console.log('Editor is ready to use!', editor);\r\n                                }}\r\n                                onChange={(event, editor) => {\r\n                                    const data = editor.getData();\r\n                                    setadmin({\r\n                                        ...admin,\r\n                                        body: data\r\n                                    })\r\n                                }}\r\n                                onBlur={(event, editor) => {\r\n                                    console.log('Blur.', editor);\r\n                                }}\r\n                                onFocus={(event, editor) => {\r\n                                    console.log('Focus.', editor);\r\n                                }}\r\n                                />\r\n\r\n\r\n                                    <div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>   \r\n                                      <Button\r\n                                        onClick={handleSubmit}\r\n                                        loading={autoEmailTemplate.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Template\r\n                                        </Button>      \r\n                                    </div>\r\n                        </div>\r\n\r\n                        <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                 \r\n                                    </TabPane>\r\n                                    </Tabs>\r\n\r\n                                    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"order\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'order'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"Order Event Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n        footer={false}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n\r\n<div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>   \r\n                                      <Button\r\n                                        onClick={handleSubmit}\r\n                                        loading={autoEmailTemplate.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Template\r\n                                        </Button>      \r\n                                    </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n\r\n    <div style={{\r\n        display:'flex'\r\n    }}>\r\n        <div style={{\r\n            width: '70%'\r\n        }}>\r\n\r\n<Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n        \r\n<div style={{\r\n            display:'block',\r\n            marginBottom:'20px',\r\n            marginTop:'20px',\r\n        }}>   \r\n        <Button\r\n        onClick={handleSubmit}\r\n        loading={autoEmailTemplate.isLoading}\r\n        className='btnPrimaryClassNameoutline'\r\n        >\r\n        Update Template\r\n        </Button>      \r\n    </div>    \r\n\r\n\r\n        </div>\r\n        <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled,\r\n    EditOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport NewCustomerTemplate from \"./NewCustomerTemplate\";\r\nimport OrderStatusTemplateAutoEmail from \"./OrderStatusTemplateAutoEmail\";\r\nimport OrderTemplateAutoEmail from \"./OrderTemplateAutoEmail\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ConfigureAutoEmail = ({  }: Props) => {\r\n\r\n    const [getAutoEmailConfigurationState, handleGetAutoEmailConfigurationFetch] = useHandleFetch({}, 'getAutoEmailConfiguration');\r\n    const [configureAutoEmailConfigurationState, handleAutoEmailConfigurationFetch] = useHandleFetch({}, 'configureAutoEmail');\r\n \r\n    \r\n    const [isnewCustomerAdmin,setnewCustomerAdmin] = useState(false);\r\n    const [isnewCustomerCustomer,setnewCustomerCustomer] = useState(false);\r\n    const [isorderAdmin,setorderAdmin] = useState(false);\r\n    const [isorderStatusAdmin,setorderStatusAdmin] = useState(false);\r\n    const [isorderCustomer,setorderCustomer] = useState(false);\r\n    const [isorderStatusCustomer,setIsorderStatusCustomer] = useState(false);\r\n    \r\n\r\n    const [newcustomermodal, setnewcustomermodal] = useState(false);\r\n    const [ordermodal, setordermodal] = useState(false);\r\n    const [orderStatusmodal, setorderStatusmodal] = useState(false);\r\n    const [autoEmailData,setAutoEmailData] = useState({}); \r\n\r\n\r\n    console.log('isnewCustomerAdmin',isnewCustomerAdmin); \r\n    console.log('isnewCustomerCustomer',isnewCustomerCustomer);\r\n    \r\n    \r\n    useEffect(()=>{\r\n\r\n        const getAutoEmailConfiguration = async () => {\r\n            const res = await handleGetAutoEmailConfigurationFetch({})\r\n            //@ts-ignore\r\n            if(res){\r\n                setAutoEmailData(autoEmailData); \r\n                setnewCustomerAdmin(res['newCustomer']['admin']); \r\n                setnewCustomerCustomer(res['newCustomer']['user']); \r\n                setIsorderStatusCustomer(res['orderStatus']['user']); \r\n                setorderStatusAdmin(res['orderStatus']['admin']); \r\n                setorderAdmin(res['order']['admin']); \r\n                setorderCustomer(res['order']['user']); \r\n            }\r\n        }; \r\n        getAutoEmailConfiguration();\r\n    },[]); \r\n\r\n\r\n    console.log('getAutoEmailConfigurationState',getAutoEmailConfigurationState); \r\n\r\n    const handleUpdateAutoEmail = async () => {\r\n        const updateAutoEmailRes = await handleAutoEmailConfigurationFetch({\r\n            body: {\r\n                newCustomer: {\r\n                    admin: isnewCustomerAdmin,\r\n                    user: isnewCustomerCustomer\r\n                },\r\n                order: {\r\n                    admin: isorderAdmin,\r\n                    user: isorderCustomer\r\n                },\r\n                orderStatus : {\r\n                    \"admin\": isorderStatusAdmin,\r\n                    \"user\": isorderStatusCustomer\r\n                },\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateAutoEmailRes && updateAutoEmailRes.status === 'ok') {\r\n            openSuccessNotification('Auto email Configuration Updated!');\r\n        }\r\n        else {\r\n            openErrorNotification(\"Something went wrong, Couldn't updated Auto email configuration\");\r\n        }\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n                                <div style={{\r\n                                    display:'flex',\r\n                                    flexDirection:'column'\r\n                                }}>\r\n                                <div style={{\r\n                                }}>\r\n                                    \r\n                                    <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\"\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                                <h3 className='checkBoxFieldLabel'>\r\n                                                New Customer\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setnewcustomermodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n                                          <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}></div>\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                   checked={isnewCustomerAdmin}\r\n                                                   defaultChecked={isnewCustomerAdmin}\r\n                                                    onChange={(e) => setnewCustomerAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                  checked={isnewCustomerCustomer}\r\n                                                  defaultChecked={isnewCustomerCustomer}\r\n                                                onChange={(e) => setnewCustomerCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                        </div>\r\n\r\n                                    <div>\r\n\r\n\r\n                                    <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\",\r\n                                                    marginTop:'30px'\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                                <h3 className='checkBoxFieldLabel'>\r\n                                                 Order\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setordermodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n\r\n\r\n                                     <div style={{\r\n                                                marginTop:\"5px\"\r\n                                            }}></div>\r\n\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px',\r\n                                                \r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                      checked={isorderAdmin}\r\n                                                      defaultChecked={isorderAdmin}\r\n                                                    onChange={(e) => setorderAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                  checked={isorderCustomer}\r\n                                                  defaultChecked={isorderCustomer}\r\n                                                onChange={(e) => setorderCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                                \r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                                <div>\r\n                                                <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\",\r\n                                                    marginTop:\"30px\"\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                           <h3 className='checkBoxFieldLabel'>\r\n                                                 Order status\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setorderStatusmodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n                                            <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}></div>\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                    checked={isorderStatusAdmin}\r\n                                                    defaultChecked={isorderStatusAdmin}\r\n                                                    onChange={(e) => setorderStatusAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                 checked={isorderStatusCustomer}\r\n                                                 defaultChecked={isorderStatusCustomer}\r\n                                                onChange={(e) => setIsorderStatusCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                                <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                              \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n</div>\r\n                                        \r\n\r\n\r\n                                        \r\n\r\n    </div>\r\n\r\n    <div style={{\r\n                                                marginTop:\"25px\"\r\n                                            }}></div>\r\n\r\n    <Button\r\n\r\n                                            onClick={(e: any) => handleUpdateAutoEmail()}\r\n                                            loading={configureAutoEmailConfigurationState.isLoading}\r\n                                            className='btnPrimaryClassNameoutline'\r\n                                            >\r\n                                            Update Auto Email Configuration\r\n                                            </Button>\r\n\r\n                                            \r\n                                            <div style={{\r\n                                                marginTop:\"5px\"\r\n                                            }}></div>\r\n\r\n        \r\n\r\n        <NewCustomerTemplate \r\n        visible={newcustomermodal}\r\n        setVisible={setnewcustomermodal}\r\n        />\r\n\r\n<OrderStatusTemplateAutoEmail \r\n        visible={orderStatusmodal}\r\n        setVisible={setorderStatusmodal}\r\n        />\r\n\r\n\r\n        <OrderTemplateAutoEmail \r\n        visible={ordermodal}\r\n        setVisible={setordermodal}\r\n        />\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default ConfigureAutoEmail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"recipient\": \"\",\r\n    \"subject\": \"\",\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ComposeCustomEmail = ({  }: Props) => {\r\n\r\n    const [sendCustomerEmailState, handleSendCustomEmailFetch] = useHandleFetch({}, 'sendCustomEmail');\r\n \r\n    const [html,sethtml] = useState('');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleSendCustomEmailFetch({\r\n            body: {\r\n                \"recipient\": values.recipient.trim(),\r\n                \"subject\": values.subject.trim(),\r\n                html : html\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            sethtml('');\r\n            actions.resetForm();\r\n            openSuccessNotification('Email Sent!');\r\n        }\r\n        else {\r\n            // openErrorNotification(\"Something went wrong, Couldn't send email\");\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!sendCustomerEmailState['isLoading']) {\r\n\t\t\tconst error = sendCustomerEmailState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!sendCustomerEmailState['isLoading'] &&\r\n\t\t\tObject.keys(sendCustomerEmailState.data).length > 0\r\n\t\t) {\r\n\t\t\t// if (sendCustomerEmailState['data']['status'] === 'ok') {\r\n            //     openSuccessNotification('Email Sent!');\r\n\t\t\t// }\r\n\t\t}\r\n\t}, [sendCustomerEmailState]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                                         \t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='To'\r\n                                                    value={values.recipient}\r\n                                                    name='recipient'\r\n                                                    isError={(touched.recipient && errors.recipient) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['recipient'])}\r\n\r\n                                                    errorString={(touched.recipient && errors.recipient) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['recipient'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('recipient');\r\n                                                    }}\r\n                                                     />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='Subject'\r\n                                                    value={values.subject}\r\n                                                    name='subject'\r\n                                                    isError={(touched.subject && errors.subject) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['subject'])}\r\n\r\n                                                    errorString={(touched.subject && errors.subject) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['subject'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('subject');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={html}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            sethtml(data);\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n    \r\n\r\n                                       <div style={{\r\n                                           marginTop:'20px'\r\n                                       }}></div>         \r\n                                          <Button\r\n\r\n                                            onClick={(e: any) => handleSubmit(e)}\r\n                                            loading={sendCustomerEmailState.isLoading}\r\n                                            className='btnPrimaryClassNameoutline'\r\n                                            >\r\n                                            Send\r\n                                            </Button>     \r\n\r\n                                            \r\n                                       <div style={{\r\n                                           marginTop:'10px'\r\n                                       }}></div>       \r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ComposeCustomEmail;\r\n","import React, { useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { Spin } from 'antd';\r\nimport moment from 'moment';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nimport { LeftOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n  id?: any;\r\n  setSelectedEmailId?: any;\r\n}\r\n\r\nconst InboxEmailDetails = ({ id, setSelectedEmailId }: Props) => {\r\n  const [getEmailDetailState, handleGetEmailListFetch] = useHandleFetch(\r\n    {},\r\n    'getEmailDetails'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getEmailConfiguration = async () => {\r\n      const res = await handleGetEmailListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: id,\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n    };\r\n    getEmailConfiguration();\r\n  }, []);\r\n\r\n  console.log('getEmailDetailState', getEmailDetailState);\r\n\r\n  return (\r\n    <>\r\n      {getEmailDetailState.isLoading && (\r\n        <>\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              margin: '150px 0',\r\n            }}\r\n          >\r\n            <Spin size='large' />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {getEmailDetailState.done &&\r\n        getEmailDetailState.data &&\r\n        Object.keys(getEmailDetailState.data).length > 0 && (\r\n          <>\r\n            <div className='inboxEmailDetails'>\r\n              <div\r\n                onClick={() => setSelectedEmailId('')}\r\n                className='inboxEmailDetails__backBtn'\r\n              >\r\n                <LeftOutlined />\r\n              </div>\r\n              <div className='inboxEmailDetails__header'>\r\n                <span>{getEmailDetailState['data']['subject']}</span>\r\n                <h3>{getEmailDetailState['data']['recipient']}</h3>\r\n                <h4>\r\n                  {getEmailDetailState['data']['time'] &&\r\n                    moment(getEmailDetailState['data']['time']).format(\r\n                      'MMMM Do YYYY, h:mm:ss a'\r\n                    )}\r\n                </h4>\r\n              </div>\r\n              <div className='inboxEmailDetails__body'>\r\n                {getEmailDetailState['data']['html'] &&\r\n                  ReactHtmlParser(getEmailDetailState['data']['html'])}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InboxEmailDetails;\r\n","import React, {useEffect, useState} from 'react'\r\n\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\nimport InboxEmailDetails from \"./InboxEmailDetails\";\r\nimport  {Spin} from 'antd'\r\nimport moment from 'moment'; \r\n\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Inbox = (props: Props) => {\r\n    const [getEmailListState, handleGetEmailListFetch] = useHandleFetch({}, 'getSetEmailList');\r\n    const [selectedEmailId,setSelectedEmailId] = useState(''); \r\n\r\n\r\n    useEffect(() => {\r\n      const getEmailConfiguration = async () => {\r\n          const res = await handleGetEmailListFetch({\r\n              urlOptions: {\r\n                  params: {\r\n                    limitCount: 50000\r\n                  }\r\n              }\r\n          });\r\n          // @ts-ignore\r\n      \r\n      }; \r\n      getEmailConfiguration(); \r\n    }, [])\r\n\r\n\r\n    console.log('getEmailListState',getEmailListState)\r\n\r\n    return (\r\n        <>\r\n            {getEmailListState.isLoading && (\r\n                <>\r\n\r\n\r\n        <div style={{\r\n            width: '100%',\r\n            display:'flex',\r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            margin:'150px 0'\r\n        }}>\r\n             <Spin size='large' />\r\n        </div>\r\n\r\n               \r\n                </>\r\n            )}\r\n\r\n\r\n{getEmailListState.done && getEmailListState.data && getEmailListState.data.length > 0 && (\r\n    <>\r\n    \r\n    <div className='sentEmailListContainer'>\r\n        \r\n            {!selectedEmailId && (\r\n                <>\r\n                     {getEmailListState.done && getEmailListState.data && getEmailListState.data.length > 0 && (\r\n            <>\r\n            {getEmailListState.data.map(item => {\r\n                return (\r\n                    <div \r\n                    onClick={() => setSelectedEmailId(item.id)}\r\n                    className=\"sentEmailListContainer__item\">\r\n                    <div className='sentEmailListContainer__item-info'>\r\n                        <h3>\r\n                        To: {` ${item.recipient}`}\r\n                      </h3>\r\n                      <span>\r\n                      {`${item.subject}`}\r\n                      </span>\r\n                    </div>\r\n                    \r\n                    <h4>\r\n                    {ReactHtmlParser(item.html.substring(0, 125) + '.....')}\r\n                    </h4>\r\n                    <h3>\r\n                    {item.time && moment(item.time).format('MMMM Do, h a')}\r\n                    </h3>\r\n                </div>\r\n                )\r\n            })}\r\n            </>\r\n        )}\r\n                </>\r\n            )}\r\n\r\n\r\n            {selectedEmailId && (\r\n                <>\r\n                <InboxEmailDetails \r\n                setSelectedEmailId={setSelectedEmailId}\r\n                id={selectedEmailId} />\r\n                </>\r\n            )}\r\n\r\n    </div>\r\n    </>\r\n)}\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Inbox\r\n","import React from 'react';\r\n\r\n\r\n// import lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n// import components \r\nimport ConfigureSTMP from \"./ConfigureSTMP\";\r\nimport ConfigureAutoEmail from \"./ConfigureAutoEmail\";\r\nimport ComposeCustomEmail from \"./ComposeCustomEmail\";\r\nimport Inbox from \"./Inbox\";\r\n\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n    InfoCircleOutlined,\r\n    InboxOutlined,\r\n    SettingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sms = (props: Props) => {\r\n    return (\r\n        <>\r\n            <div className='siteInfoContainer'>\r\n\r\n                <Tabs defaultActiveKey=\"1\" >\r\n                <TabPane \r\n                    tab={\r\n                        <span>\r\n                        <InboxOutlined />\r\n                        Inbox\r\n                        </span>\r\n                    }\r\n             key=\"1\">\r\n                        <Inbox />\r\n                    </TabPane>\r\n\r\n                    <TabPane \r\n                    \r\n                    tab={\r\n                        <span>\r\n                        <PlusCircleOutlined />\r\n                        Compose Email\r\n                        </span>\r\n                    } key=\"2\">\r\n                        <ComposeCustomEmail />\r\n                    </TabPane>\r\n\r\n                    <TabPane \r\n                     tab={\r\n                        <span>\r\n                        <SettingOutlined />\r\n                        Configure STMP\r\n                        </span>\r\n                    }\r\n                    \r\n                   key=\"3\">\r\n                        <ConfigureSTMP />\r\n                    </TabPane>\r\n\r\n                    <TabPane\r\n                    \r\n                    tab={\r\n                        <span>\r\n                        <SettingOutlined />\r\n                        Configure Auto Email     \r\n                        </span>\r\n                    }\r\n                     key=\"4\">\r\n                        <ConfigureAutoEmail />\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sms\r\n","import React, { useEffect } from 'react';\r\n\r\n// import components\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport { useHistory } from 'react-router';\r\nimport {\r\n  LogoutOutlined,\r\n  BellOutlined,\r\n  OrderedListOutlined,\r\n  TwitterSquareFilled,\r\n  ShoppingCartOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\r\n\r\nconst { Header } = Layout;\r\n\r\ninterface Props {}\r\n\r\nconst NotificationList = (props: Props) => {\r\n  const history = useHistory();\r\n\r\n  const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch(\r\n    {},\r\n    'getAllNotificationPage'\r\n  );\r\n\r\n  const handleMenuClick = (e) => {\r\n    if (e.key === '3') {\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getAllNotification = async () => {\r\n      await handleGetAllNOticationFetch({\r\n        urlOptions: {\r\n          params: {\r\n            limitNumber: 5000,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getAllNotification();\r\n  }, []);\r\n\r\n  console.log('getAllNotificationState', getAllNotificationState);\r\n\r\n  const typeIcon = {\r\n    customer: <UserOutlined />,\r\n    order: <ShoppingCartOutlined />,\r\n  };\r\n\r\n  const menu = () => {\r\n    if (getAllNotificationState.isLoading)\r\n      return (\r\n        <div\r\n          style={{\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            marginTop: '100px',\r\n          }}\r\n        >\r\n          <Spin />\r\n        </div>\r\n      );\r\n\r\n    if (\r\n      getAllNotificationState.done &&\r\n      getAllNotificationState.data &&\r\n      !getAllNotificationState.data[0]\r\n    ) {\r\n      return (\r\n        <div\r\n          style={{\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            marginTop: '100px',\r\n          }}\r\n        >\r\n          <Empty title='No Notification found' />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className='notificationListItemContainer'>\r\n        {getAllNotificationState.done &&\r\n          getAllNotificationState.data[0] &&\r\n          getAllNotificationState.data.map((item, index) => {\r\n            return (\r\n              <div\r\n                onClick={() => history.push(`/admin/${item.type}/${item._id}`)}\r\n                className='notificationListItemContainer__item'\r\n              >\r\n                <span className='notificationListItemContainer__item-icon'>\r\n                  {typeIcon[item['type']]}\r\n                </span>\r\n                <div className='notificationListItemContainer__item-info'>\r\n                  <h3>{item.heading}</h3>\r\n                  <h4>{item.text}</h4>\r\n                  <h2>\r\n                    {item.added &&\r\n                      moment(item.added).format('MMMM Do YYYY, h:mm a')}\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='notificationList'>\r\n        <h3 className='notificationList__heading'>Notification</h3>\r\n        {menu()}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotificationList;\r\n","import React, { useState } from 'react'; \r\nimport { Checkbox, Row, Col } from 'antd';\r\n\r\n\r\n\r\n\r\n\r\nconst AccessCheckbox = ({checkedList,setCheckedList,plainOptions,defaultValue=[]}) => {\r\n\r\n    const [interminate,setInterminate] = useState(true);\r\n    const [checkAll,setCheckAll] = useState(false); \r\n\r\n    const onChange = checkedList => {\r\n        setCheckedList(checkedList); \r\n        setInterminate(!!checkedList.length && checkedList.length < plainOptions.length); \r\n        setCheckAll(checkedList.length === plainOptions.length); \r\n      };\r\n      \r\n      const onCheckAllChange = e => {\r\n        setCheckedList(e.target.checked ? plainOptions : []); \r\n        setInterminate(false); \r\n        setCheckAll(e.target.checked)\r\n      };\r\n\r\n\r\n      console.log('defaultValue',defaultValue);\r\n\r\n    return (\r\n        <>\r\n        <div\r\n        style={{\r\n            borderBottom:\"1px solid #eee\",\r\n            marginBottom:'10px'\r\n        }}\r\n         className=\"site-checkbox-all-wrapper\">\r\n                <Checkbox\r\n                    style={{\r\n                        marginBottom:\"10px\"\r\n                    }}\r\n                    indeterminate={interminate}\r\n                    onChange={onCheckAllChange}\r\n                    checked={checkAll}\r\n                >\r\n                    Super Admin\r\n                </Checkbox>\r\n        </div>\r\n        <Checkbox.Group \r\n        style={{ width: '100%' }}\r\n         value={checkedList}\r\n         defaultValue={defaultValue}\r\n         onChange={onChange}>\r\n      <Row>\r\n      {plainOptions.map(accessItem => {\r\n          return (\r\n            <Col \r\n            style={{\r\n                marginBottom:\"10px\"\r\n            }}\r\n            span={8}>\r\n            <Checkbox value={accessItem}>\r\n                {accessItem}\r\n            </Checkbox>\r\n          </Col>\r\n          )\r\n      })}\r\n    </Row>\r\n  </Checkbox.Group>\r\n  </>\r\n    )\r\n}\r\n\r\nexport default AccessCheckbox; ","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst globalState = createReducer({})({\r\n  [types.SAVE_CREDENTIALS]: (state, action) => {\r\n    const credentials = action.payload;\r\n    return credentials;\r\n  },\r\n});\r\n\r\nexport default globalState; ","export const SAVE_CREDENTIALS = \"credentials/SAVE_CREDENTIALS\";\r\n","import * as types from \"./types\";\r\n\r\nexport const saveCredentials = (roles) => ({\r\n    type: types.SAVE_CREDENTIALS,\r\n    payload: roles\r\n});\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as credentialsOperations from \"./operations\";\r\n\r\nexport {\r\n    credentialsOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport AccessCheckbox from \"./AccessCheckbox\";\r\n\r\n\r\n\r\n\r\n// import state\r\nimport { glboalOperations } from \"../../state/ducks/globalState\";\r\nimport { credentialsOperations } from \"../../state/ducks/credentials\";\r\nimport { connect } from \"react-redux\";\r\nimport { isAccess } from \"../../utils\";\r\nimport { credentials } from '../../state/ducks';\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n// \tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n//     phone: Yup.string()\r\n//     .required('Please tell us your mobile number.')\r\n//     .max(13, 'Please enter a valid mobile number.'),\r\n//    password: Yup.string()\r\n//     .label('Password')\r\n//     .required()\r\n//     .min(6, 'Password must have at least 6 characters'),\r\n//   passwordConfirmation: Yup.string()\r\n//     .label('Confirm password')\r\n//     .required()\r\n//     .min(6, 'Confirm password must have at least 6 characters')\r\n//     .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Admin Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst plainOptions = [\r\n\t'getCatalogue', 'postCatalogue', \r\n    'getDelivery', 'postDelivery', \r\n    'getOrder', 'postOrder',\r\n    'getBlog', 'postBlog', \r\n    'getPage', 'postPage',\r\n    'analytics',\r\n    'accounts',\r\n    'getDealer', 'postDealer', \r\n];\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\tsaveRoles?:any; \r\n\troles, \r\n\tcredentials,\r\n\tsaveCredentials\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList, saveRoles, roles, saveCredentials }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateAdminRole');\r\n\tconst [accesscheckedList,setAccessCheckedList] = useState(category.role && category.role.length ? [...category.role]: [] );\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('adminValues',values);\r\n\r\n\r\n\t\tlet roles = [...accesscheckedList]; \r\n        if(accesscheckedList.length === 14){\r\n            roles.unshift('superAdmin')\r\n\t\t}\r\n\t\t\r\n\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: category._id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\taccess: roles,\r\n                phone: values.phone,\r\n                password: values.password,\r\n                password2: values.passwordConfirmation,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetvisible(false)\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category._id);\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log('updateTagRes',updateTagRes); \r\n\r\n\r\n\t\t\t// if(updateTagRes['role']){\r\n\t\t\t// \tif(updateTagRes['_id'] === credentials['_id']){\r\n\t\t\t// \t\tsaveRoles(updateTagRes['role'])\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes});\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tconsole.log('updateTagList',updateTagList)\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t\tactions.resetForm();\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!updateTagState['isLoading']) {\r\n\t\t\tconst error = updateTagState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!updateTagState['isLoading'] &&\r\n\t\t\tObject.keys(updateTagState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (updateTagState['data']['status'] === 'ok') {\r\n\t\t\t\t// openSuccessNotification('Order Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [updateTagState]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t{console.log('errors',errors)}\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Edit Admin\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                Select Admin Access \r\n                            </h3>\r\n\r\n\t\t\t\t\t\t\t<AccessCheckbox \r\n\t\t\t\t\t\t\tdefaultValue={category.role}\r\n                            plainOptions={plainOptions}\r\n                            checkedList={accesscheckedList}\r\n                            setCheckedList={setAccessCheckedList}\r\n                            />\r\n\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '20px',\r\n\t\t\t\t\t\t\tmarginBottom: '20px',\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tborderBottom:'1px solid #eee',\r\n\t\t\t\t\t\t\t\tmarginBottom: '15px',\r\n\t\t\t\t\t\t\t\tmarginTop: '15px',\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                Phone and password is required to update admin *\r\n                            </h3>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Input\r\n                                label='Phone'\r\n                                value={values.phone}\r\n                                name='phone'\r\n                                isError={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['phone'])}\r\n\r\n                                errorString={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['phone'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('phone');\r\n                                }}\r\n                            />\r\n\r\n\r\n                      \r\n                           \r\n\r\n                           <Input\r\n                                label='Password'\r\n                                value={values.password}\r\n                                name='password'\r\n                                type='password'\r\n                                isError={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['password'])}\r\n\r\n                                errorString={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['password'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('password');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Confirm Password'\r\n                                value={values.passwordConfirmation}\r\n                                name='passwordConfirmation'\r\n                                type='password'\r\n                                isError={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['password2'])}\r\n\r\n                                errorString={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['password2'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('passwordConfirmation');\r\n                                }}\r\n                            />\r\n\t\t\t\t\t\t</div>\r\n                           \r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\n\r\nconst mapDispathToProps = {\r\n    saveRoles: glboalOperations.saveRoles,\r\n    saveCredentials: credentialsOperations.saveCredentials,\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    roles: state.globalState,\r\n    credentials: state.credentials,\r\n  }); \r\n\r\n\r\n  // @ts-ignore\r\n  export default connect(mapStateToProps, mapDispathToProps)(QuickEdit);\r\n  \r\n  \r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AccessCheckbox from \"./AccessCheckbox\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    phone: Yup.string()\r\n    .required('Please tell us your mobile number.')\r\n    .max(13, 'Please enter a valid mobile number.'),\r\n   password: Yup.string()\r\n    .label('Password')\r\n    .required(),\r\n  passwordConfirmation: Yup.string()\r\n    .label('Confirm password')\r\n    .required()\r\n    .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Admin Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirmation: '',\r\n    access: [],\r\n}\r\n\r\n\r\nconst plainOptions = [\r\n    'getCatalogue', 'postCatalogue', \r\n    'getDelivery', 'postDelivery', \r\n    'getOrder', 'postOrder',\r\n    'getBlog', 'postBlog', \r\n    'getPage', 'postPage',\r\n    'analytics',\r\n    'accounts',\r\n    'getDealer', 'postDealer', \r\n];\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewAdminRoles = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'adminRoleRegister');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [accesscheckedList,setAccessCheckedList] = useState([]);\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        let roles = [...accesscheckedList]; \r\n        if(accesscheckedList.length === 14){\r\n            roles.unshift('superAdmin')\r\n        }\r\n        const addTagRes = await handleAddTagFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                email: values.email.trim(),\r\n                phone: values.phone,\r\n                password: values.password,\r\n                password2: values.passwordConfirmation,\r\n                access: roles,            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            // openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                // @ts-ignore\r\n                ...addTagRes,\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\t\tif (!addTagState['isLoading']) {\r\n\t\t\tconst error = addTagState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addTagState['isLoading'] &&\r\n\t\t\tObject.keys(addTagState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addTagState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Admin Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n    }, [addTagState]);\r\n    \r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.phone || !values.password || !values.passwordConfirmation || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Register New Admin\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Name'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Phone'\r\n                                value={values.phone}\r\n                                name='phone'\r\n                                isError={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && addTagState.error['error']['phone'])}\r\n\r\n                                errorString={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && addTagState.error['error']['phone'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('phone');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Email'\r\n                                value={values.email}\r\n                                name='email'\r\n                                isError={(touched.email && errors.email) ||\r\n                                    (!isSubmitting && addTagState.error['error']['email'])}\r\n\r\n                                errorString={(touched.email && errors.email) ||\r\n                                    (!isSubmitting && addTagState.error['error']['email'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('email');\r\n                                }}\r\n                            />\r\n                           \r\n\r\n                           <Input\r\n                                label='Password'\r\n                                value={values.password}\r\n                                name='password'\r\n                                type='password'\r\n                                isError={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password'])}\r\n\r\n                                errorString={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('password');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Confirm Password'\r\n                                value={values.passwordConfirmation}\r\n                                name='passwordConfirmation'\r\n                                type='password'\r\n                                isError={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && addTagState.error['error']['passwordConfirmation'])}\r\n\r\n                                errorString={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password2'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('passwordConfirmation');\r\n                                }}\r\n                            />\r\n\r\n                                <h3 className='inputFieldLabel'>\r\n                                    Select Admin Access \r\n                                </h3>\r\n\r\n                            <AccessCheckbox \r\n                            plainOptions={plainOptions}\r\n                            checkedList={accesscheckedList}\r\n                            setCheckedList={setAccessCheckedList}\r\n                            />\r\n                           \r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default AddNewAdminRoles;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select,Tag, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewAdmin from \"./AddNewAdmin\"\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { isAccess } from \"../../utils\";\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Admin Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList, roles }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteAdmin');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!deleteTagState['isLoading']) {\r\n\t\t  const error = deleteTagState['error'];\r\n\t\t  if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\tif (error['error']['registerError']) {\r\n\t\t\t  // setServerErrors(error['error']['registerError']);\r\n\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t  // setServerErrors(error['error']['checkoutError']);\r\n\t\t\t} else {\r\n\t\t\t  // setServerErrors(error['error']);\r\n\t\t\t}\r\n\t\r\n\t\t\tconst errors =\r\n\t\t\t  Object.values(error['error']).length > 0\r\n\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t: [];\r\n\t\t\terrors.forEach((err, i) => {\r\n\t\t\t  if (typeof err === 'string') {\r\n\t\t\t\topenErrorNotification(err);\r\n\t\t\t  } else if (typeof err === 'object') {\r\n\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t  const errs = Object.values(err);\r\n\t\t\t\t  errs.forEach((err) => {\r\n\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t  });\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t});\r\n\t\t  }\r\n\t\t}\r\n\t\r\n\t\tif (\r\n\t\t  !deleteTagState['isLoading'] &&\r\n\t\t  Object.keys(deleteTagState.data).length > 0\r\n\t\t) {\r\n\t\t  if (deleteTagState['data']['status'] === 'ok') {\r\n\t\t\topenSuccessNotification('Admin Deleted!');\r\n\t\t\t// history.push({\r\n\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t//   state: checkoutState['data']\r\n\t\t\t// })\r\n\t\r\n\t\t\t// clearCart();\r\n\t\t\t// setIsModalShown(true);\r\n\t\t  }\r\n\t\t}\r\n\t  }, [deleteTagState]);\r\n\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\t// openSuccessNotification('Deleted Admin');\r\n\t\t\tconst newtagList = data.filter(item => item._id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t// history.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Email\"\r\n\t\t\t\t\tdataIndex=\"email\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Phone\"\r\n\t\t\t\t\tdataIndex=\"phone\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\twidth={250}\r\n\t\t\t\t\ttitle=\"Roles\"\r\n\t\t\t\t\tdataIndex=\"role\"\r\n\t\t\t\t\tkey=\"role\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={tags => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t{tags && tags.length > 0 && tags.map((tag) => (\r\n\t\t\t\t\t\t\t<Tag \r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborderRadius:\"5px\",\r\n\t\t\t\t\t\t\t\tmarginBottom: '5px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tcolor=\"blue\" key={tag}>\r\n\t\t\t\t\t\t\t{tag}\r\n\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t{/* {tags && tags.length === 3 && '.......'} */}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\r\n\r\n\r\n{isAccess('superAdmin',roles) && (\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Column\r\n\r\n\t\t\t\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\t\t\t\talign='right'\r\n\t\t\t\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Edit Admin'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record._id)}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t) }\r\n\t\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { \r\n\troles?:any; \r\n}\r\n\r\nconst TagList = ({ roles }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'adminList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconsole.log('adminListState',tagState);\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tAdmins\r\n            </h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search admins..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t{isAccess('superAdmin',roles) && (\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t>\r\n\t\t\t\t\tAdd New\r\n\t\t\t\t</Button>\r\n\t\t\t\t\t) }\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\troles={roles}\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '150px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Admin found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewAdmin\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n\r\n\r\n  \r\n  const mapStateToProps = state => ({\r\n    roles: state.globalState,\r\n  }); \r\n\r\n\r\n  // @ts-ignore\r\n  export default connect(mapStateToProps, null)(TagList);\r\n  \r\n  \r\n  \r\n\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Admin Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n                description: values.description,\r\n            })\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Admin Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AdminEdit from \"./AdminEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'adminDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Admin Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <AdminEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Admin found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'postTagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('selectedTags', selectedTags)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n\tcategoryOptions?: any;\r\n\tsetCategoryOptions?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds, categoryOptions, setCategoryOptions }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'postSelectCategoryList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tconst checkedIds = checkedKeys.checked || [];\r\n\t\tsetcategoryIds(checkedIds);\r\n\t\tsetCategoryOptions(checkedIds);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('categoryState', categoryState);\r\n\tconsole.log('optionsCat', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tcheckedKeys={categoryOptions}\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t{/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(productIds && productIds.length > 0){\r\n            console.log('shippingRunning')\r\n            const selecttedOptions = productIds.map(item => item.name); \r\n            setselectedOptions(selecttedOptions)\r\n        }\r\n    },[productIds]); \r\n\r\n    console.log('OrderProudctItemsProductIds',productIds); \r\n\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n                {tagState.done && tagState.data && !(tagState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Found' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import libraries\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport {\r\n  openSuccessNotification,\r\n  openErrorNotification,\r\n} from '../../components/Notification';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nimport Tags from './Tags';\r\nimport Brands from './Brands';\r\nimport Categories from './Categories';\r\nimport SelectProducts from './SelectProducts';\r\nimport SelectedProductItems from './SelectedProductItems';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  url: '',\r\n  preparationTime: '',\r\n  servingSize: '',\r\n  cookingTime: '',\r\n  body: '',\r\n  bnName: '',\r\n  bnBody: '',\r\n  bnPreparationTime: '',\r\n  bnServingSize: '',\r\n  bnCookingTime: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  productList?: any;\r\n  setProductList?: any;\r\n  productDetailData?: any;\r\n}\r\n\r\nconst AddNewProduct = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  productList: bundleList,\r\n  setProductList: setBundleList,\r\n  productDetailData,\r\n}: Props) => {\r\n\r\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\r\n    {},\r\n    'updatePost'\r\n  );\r\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\r\n    {},\r\n    'postDetail'\r\n  );\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [categoryids, setcategoryIds] = useState([]);\r\n  const [tagIds, setTagIds] = useState([]);\r\n  const [brandId, setBrandId] = useState('');\r\n  const [pricing, setPricing] = useState([]);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [body, setBody] = useState('');\r\n  const [bnBody, setBnBody] = useState('');\r\n  const [productIds, setProductIds] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n  const [metaTags, setMetaTags] = useState([]);\r\n  const [bnMetaTags, setBnMetaTags] = useState([]);\r\n\r\n\r\n\r\n  const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\r\n  console.log('myPostState',productDetailState)\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      await handleProductDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: productDetailData.id,\r\n          },\r\n          params: {\r\n            imageValue: 1\r\n          }\r\n        },\r\n      });\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [productDetailData]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (productDetailState.data && Object.keys(productDetailState.data).length > 0) {\r\n\r\n      const images = productDetailState.data.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === productDetailState.data.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [productDetailState.data.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(productDetailState.data.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n        setmyImages(mahImages);\r\n      \r\n      \r\n    }\r\n}, [productDetailState.data]); \r\n\r\n\r\nuseEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n        if (coverImageId !== myImages[0].id) {\r\n            setCoverImageId(myImages[0].id);\r\n            handleSetImageAsThumnail(myImages[0]);\r\n        }\r\n\r\n    }\r\n\r\n}, [myImages])\r\n\r\n\r\nconsole.log('myLoadImages',myImages)\r\n\r\n\r\n  const handleDetachSingleImage = async id => {\r\n      await handleDetachImageFromItemSingleFetch({\r\n          urlOptions: {\r\n              placeHolders: {\r\n                  imageId: id,\r\n                  collection: 'post',\r\n                  itemId: productDetailData.id\r\n              }\r\n          }\r\n      });\r\n  }\r\n\r\n\r\n\r\n  const handleSetImageAsThumnail = async image => {\r\n\r\n      const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n          urlOptions: {\r\n              placeHolders: {\r\n                  imageId: image.id,\r\n                  collection: 'post',\r\n                  itemId: productDetailData.id\r\n              }\r\n          }\r\n      });\r\n\r\n\r\n      // @ts-ignore\r\n      if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n          openSuccessNotification('Set as thumbnail!')\r\n      }\r\n      else {\r\n          openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n      }\r\n\r\n  }\r\n\r\n\r\n\r\n  \r\n  const handleImagesDelete = (id) => {\r\n      // @ts-ignore\r\n      const newImages = myImages && myImages.filter(image => {\r\n          return image.id !== id;\r\n      })\r\n\r\n      setmyImages(newImages);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    if (productDetailData && productDetailData.brand) {\r\n      setBrandId(productDetailData.brand['id']);\r\n    } else {\r\n      setBrandId('');\r\n    }\r\n    if (\r\n      productDetailData &&\r\n      productDetailData.tags &&\r\n      productDetailData.tags.length > 0\r\n    ) {\r\n      // const tagIds = productDetailData.tags.map(item => item.id);\r\n      setSelectedTags(productDetailData.tags);\r\n    } else {\r\n      setSelectedTags([]);\r\n    }\r\n    if (\r\n      productDetailData &&\r\n      productDetailData.category &&\r\n      productDetailData.category.length > 0\r\n    ) {\r\n      const categoryIds = productDetailData.category;\r\n      setCategoryOptions(categoryIds);\r\n    } else {\r\n      setCategoryOptions([]);\r\n    }\r\n  }, [productDetailData]);\r\n\r\n\r\n\r\n  \r\n  useEffect(()=>{\r\n    if(\r\n        productDetailState.done && productDetailState['data'] \r\n    && Object.keys(productDetailState['data']).length > 0\r\n     && ['requiredProducts'] && productDetailState['data']['requiredProducts'].length > 0){\r\n        const productIds = productDetailState['data']['requiredProducts'].map(item => item); \r\n        setProductIds(productIds); \r\n        const productList = productDetailState['data']['requiredProducts'].map(item => {\r\n            return {\r\n                ...item,\r\n                _id: item._id,\r\n                variation: item.variation,\r\n                quantity: item.quantity,\r\n            }\r\n        }); \r\n       setProductList(productList);\r\n\r\n    }; \r\n    \r\n},[productDetailState])\r\n\r\nconsole.log('couponDetialQuickEdit',productDetailState);\r\n\r\nuseEffect(() => {\r\n\r\n    if (productIds.length > 0) {\r\n        if (productIds.length > productList.length) {\r\n            const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n            console.log('variation', variation)\r\n\r\n            setProductList([...productList, {\r\n                ...productIds[productIds.length - 1],\r\n                _id: productIds[productIds.length - 1]['id'],\r\n                variation: variation,\r\n                quantity: 1\r\n            }]);\r\n        }\r\n\r\n\r\n        else if (productIds.length < productList.length) {\r\n            console.log('productIds', productIds);\r\n            console.log('productList', productList);\r\n\r\n            const newProductList = productList.filter(item => {\r\n                let isTrue = false;\r\n                productIds.forEach(product => {\r\n                    if (product.id === item._id) {\r\n                        isTrue = true;\r\n                    }\r\n                });\r\n                return isTrue;\r\n            })\r\n            setProductList(newProductList);\r\n\r\n        }\r\n\r\n    }\r\n    else {\r\n        setProductList([]);\r\n    }\r\n    // console.log('productIds', productIds)\r\n\r\n\r\n}, [productIds])\r\n\r\n\r\n\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds =\r\n      myImages && myImages[0]\r\n        ? // @ts-ignore\r\n          myImages.map((image) => {\r\n            return image.id;\r\n          })\r\n        : [];\r\n\r\n    const products =\r\n      productList.length > 0\r\n        ? productList.map((product) => {\r\n            return {\r\n              _id: product._id,\r\n              variation: product.variation,\r\n              quantity: product.quantity,\r\n            };\r\n          })\r\n        : [];\r\n\r\n\r\n        if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n          const aboutToUpdatedImageIds = []; \r\n\r\n    \r\n          if(imagesIds && imagesIds.length > 0){\r\n            imagesIds.forEach(imageId => {\r\n              if(productDetailData && productDetailData['image']){\r\n                if(!productDetailData['image'].includes(imageId)){\r\n                  aboutToUpdatedImageIds.push(imageId)\r\n                }\r\n              }\r\n            });\r\n          }\r\n    \r\n          \r\n                if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                    await handleAttachImageToItemMultipleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                collection: 'post',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        },\r\n                        body: {\r\n                            image: aboutToUpdatedImageIds\r\n                        }\r\n                    });\r\n                }\r\n                else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                    await handleAttachImageToItemSingleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                imageId: aboutToUpdatedImageIds[0].id,\r\n                                collection: 'post',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            \r\n\r\n\r\n    const addProductRes = await handleAddProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: productDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        category: categoryOptions,\r\n        tags: tagIds,\r\n        image: imagesIds,\r\n        body: body,\r\n        requiredProducts: products,\r\n        preparationTime: values.preparationTime,\r\n        servingSize: values.servingSize,\r\n        cookingTime: values.cookingTime,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\r\n\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags:\r\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\r\n          name: values.bnName.trim(),\r\n          preparationTime: values.bnPreparationTime,\r\n          body: bnBody,\r\n          servingSize: values.bnServingSize,\r\n          cookingTime: values.bnCookingTime,\r\n        },\r\n      },\r\n    });\r\n\r\n    console.log('addProductRes', addProductRes);\r\n\r\n    // @ts-ignore\r\n    if (addProductRes && addProductRes.status === 'ok') {\r\n      openSuccessNotification('Recipe Updated');\r\n\r\n      const positionInTag = () => {\r\n        return bundleList.map((item) => item.id).indexOf(productDetailData.id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, bundleList[index], {\r\n        ...addProductRes,\r\n        id: addProductRes['id'] || '',\r\n        key: addProductRes['id'] || '',\r\n        name: values.name.trim() || '',\r\n        cover: addProductRes['cover']['cover'] || '',\r\n      });\r\n      const updateTagList = [\r\n        ...bundleList.slice(0, index),\r\n        updatedItem,\r\n        ...bundleList.slice(index + 1),\r\n      ];\r\n      setBundleList(updateTagList);\r\n\r\n      setAddNewCategoryVisible(false);\r\n\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setPricing([]);\r\n      setTagIds([]);\r\n      setSelectedTags([]);\r\n      setBrandId('');\r\n      setcategoryIds([]);\r\n      setCategoryOptions([]);\r\n      actions.resetForm();\r\n    } else {\r\n      // openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addProductState['isLoading']) {\r\n      const error = addProductState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addProductState]);\r\n\r\n  \r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n    setmyImages(false);\r\n    setCoverImageId('');\r\n    setPricing([]);\r\n    setTagIds([]);\r\n    setSelectedTags([]);\r\n    setBrandId('');\r\n    setcategoryIds([]);\r\n    setCategoryOptions([]);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n      const metaTags =\r\n        productDetailData.metaTags && productDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        productDetailData.bn &&\r\n        productDetailData.bn['metaTags'] &&\r\n        productDetailData.bn['metaTags'].split(',');\r\n      setMetaTags(metaTags || []);\r\n      setBnMetaTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  console.log('postDetailState', productDetailState);\r\n  console.log('postDetailData', productDetailData);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...{\r\n          ...productDetailData,\r\n          ...(productDetailState['data'] &&\r\n            Object.keys(productDetailState['data']).length > 0 &&\r\n            productDetailState['data']['bn'] && {\r\n              bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n              bnMetaDescription:\r\n                productDetailState['data']['bn'].metaDescription,\r\n              bnName: productDetailState['data']['bn'].name,\r\n              metaUnit: productDetailState['data']['bn'].unit,\r\n              bnDescription: productDetailState['data']['bn'].description,\r\n            }),\r\n        },\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: 0,\r\n              padding: 0,\r\n            }}\r\n            width={'70vw'}\r\n            title='Edit Recipe'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <section className='addProductGridContainer'>\r\n              <div className='addProductGridContainer__left'>\r\n                <div className='addProductGridContainer__name'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Recipe Information</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        values.name && values.name.length > 2\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Name'\r\n                      placeHolder='Rafti oxy'\r\n                      value={values.name}\r\n                      name='name'\r\n                      isError={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['name'])\r\n                      }\r\n                      errorString={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['name'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('name');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Name'\r\n                      value={values.bnName}\r\n                      placeHolder={'রাফতি অক্স'}\r\n                      name='bnName'\r\n                      isError={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnName'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnName'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnName');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Preparation Time'\r\n                      value={values.preparationTime}\r\n                      placeHolder='15 min'\r\n                      name='preparationTime'\r\n                      isError={\r\n                        (touched.preparationTime && errors.preparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['preparationTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.preparationTime && errors.preparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['preparationTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('preparationTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Preparation Time'\r\n                      value={values.bnPreparationTime}\r\n                      placeHolder={'১৫ মিনিট'}\r\n                      name='bnPreparationTime'\r\n                      isError={\r\n                        (touched.bnPreparationTime &&\r\n                          errors.bnPreparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnPreparationTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnPreparationTime &&\r\n                          errors.bnPreparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnPreparationTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnPreparationTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Cooking Time'\r\n                      placeHolder={'30 min'}\r\n                      value={values.cookingTime}\r\n                      name='cookingTime'\r\n                      isError={\r\n                        (touched.cookingTime && errors.cookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['cookingTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.cookingTime && errors.cookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['cookingTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('cookingTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Cooking Time'\r\n                      placeHolder={'৩০ মিনিট'}\r\n                      value={values.bnCookingTime}\r\n                      name='bnCookingTime'\r\n                      isError={\r\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnCookingTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnCookingTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnCookingTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Serving Size'\r\n                      value={values.servingSize}\r\n                      name='servingSize'\r\n                      isError={\r\n                        (touched.servingSize && errors.servingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['servingSize'])\r\n                      }\r\n                      errorString={\r\n                        (touched.servingSize && errors.servingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['servingSize'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('servingSize');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Serving Size'\r\n                      value={values.bnServingSize}\r\n                      name='bnServingSize'\r\n                      isError={\r\n                        (touched.bnServingSize && errors.bnServingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnServingSize'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnServingSize && errors.bnServingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnServingSize'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnServingSize');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='URL'\r\n                      value={values.url}\r\n                      name='url'\r\n                      isError={\r\n                        (touched.url && errors.url) ||\r\n                        (!isSubmitting && addProductState.error['error']['url'])\r\n                      }\r\n                      errorString={\r\n                        (touched.url && errors.url) ||\r\n                        (!isSubmitting && addProductState.error['error']['url'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('url');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={body}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBody(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>BN Body</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={bnBody}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBnBody(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '15px',\r\n                      }}\r\n                    ></div>\r\n                    {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__price'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Products</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        pricing && pricing.length > 0\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <h3 className='inputFieldLabel'>Products</h3>\r\n                    <SelectProducts\r\n                      setProductIds={setProductIds}\r\n                      productIds={productIds}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>Selcted Products</h3>\r\n\r\n                    <SelectedProductItems\r\n                      productList={productList}\r\n                      setProductList={setProductList}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n          \r\n\r\n                <div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n        Image\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n\r\n<div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {productDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {productDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                  </div>\r\n\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Meta Data</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Meta title'\r\n                      value={values.metaTitle}\r\n                      placeHolder={'category...'}\r\n                      name='metaTitle'\r\n                      isError={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Meta title'\r\n                      value={values.bnMetaTitle}\r\n                      placeHolder={'ক্যাটাগড়ি...'}\r\n                      name='bnMetaTitle'\r\n                      isError={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='Meta description'\r\n                      value={values.metaDescription}\r\n                      placeholder={'meta...'}\r\n                      name='metaDescription'\r\n                      isError={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='BN Meta Description'\r\n                      value={values.bnMetaDescription}\r\n                      placeholder={'এইয় মেট...'}\r\n                      name='bnMetaDescription'\r\n                      isError={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      Meta Tags (grocery,fashion)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setMetaTags}\r\n                      tags={metaTags}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setBnMetaTags}\r\n                      tags={bnMetaTags}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='addProductGridContainer__right'>\r\n                <div className='addProductGridContainer__category'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Recipe Categories</h3>\r\n\r\n                      <Tooltip\r\n                        color='red'\r\n                        visible={\r\n                          addProductState.error['error']['category'] &&\r\n                          !(categoryids.length > 0)\r\n                        }\r\n                        placement='left'\r\n                        title={'Select at least one category'}\r\n                      >\r\n                        <div\r\n                          className={\r\n                            !(categoryids.length > 0) &&\r\n                            !addProductState.error['error']['category']\r\n                              ? 'checkicon'\r\n                              : addProductState.error['error']['category']\r\n                              ? 'checkicon-error'\r\n                              : 'checkicon-active'\r\n                          }\r\n                        >\r\n                          <CheckCircleOutlined />\r\n                        </div>\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Categories\r\n                        setCategoryOptions={setCategoryOptions}\r\n                        categoryOptions={categoryOptions}\r\n                        setcategoryIds={setcategoryIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__tag'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Recipe Tags</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Tags\r\n                        setSelectedTags={setSelectedTags}\r\n                        selectedTags={selectedTags}\r\n                        setTagIds={setTagIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisible}\r\n            visible={visible}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            setmyThumbnailImage={setmyThumbnailImage}\r\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n            isModalOpenForImages={isModalOpenForImages}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*/ //\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import libraries\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport {\r\n  openSuccessNotification,\r\n  openErrorNotification,\r\n} from '../../components/Notification';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nimport Tags from './Tags';\r\nimport Brands from './Brands';\r\nimport Categories from './Categories';\r\nimport SelectProducts from './SelectProducts';\r\nimport SelectedProductItems from './SelectedProductItems';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  url: '',\r\n  preparationTime: '',\r\n  servingSize: '',\r\n  cookingTime: '',\r\n  body: '',\r\n  bnName: '',\r\n  bnBody: '',\r\n  bnPreparationTime: '',\r\n  bnServingSize: '',\r\n  bnCookingTime: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  productList?: any;\r\n  setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  productList: bundleList,\r\n  setProductList: setBundleList,\r\n}: Props) => {\r\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\r\n    {},\r\n    'addPost'\r\n  );\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [categoryids, setcategoryIds] = useState([]);\r\n  const [tagIds, setTagIds] = useState([]);\r\n  const [brandId, setBrandId] = useState('');\r\n  const [pricing, setPricing] = useState([]);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [date, setDateFeild] = useState('');\r\n  const [time, setTimeFeild] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [bnBody, setBnBody] = useState('');\r\n  const [productIds, setProductIds] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n  const [bnDescription, setBNDescription] = useState('এই পণ্য...');\r\n  const [metaTags, setMetaTags] = useState([]);\r\n  const [bnMetaTags, setBnMetaTags] = useState([]);\r\n\r\n  const [price, setPrice] = useState({\r\n    regular: null,\r\n    offer: null,\r\n  });\r\n\r\n  const makeEmptyCategoryOptions = (setEmpty) => {\r\n    setEmpty([]);\r\n  };\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds = myImages\r\n      ? myImages.map((image) => {\r\n          return image.id;\r\n        })\r\n      : [];\r\n\r\n    const products =\r\n      productList.length > 0\r\n        ? productList.map((product) => {\r\n            return {\r\n              _id: product._id,\r\n              variation: product.variation,\r\n              quantity: product.quantity,\r\n            };\r\n          })\r\n        : [];\r\n\r\n    const addProductRes = await handleAddProductFetch({\r\n      body: {\r\n        name: values.name.trim(),\r\n        category: categoryids,\r\n        tags: tagIds,\r\n        brand: [brandId],\r\n        image: imagesIds,\r\n        body: body,\r\n        requiredProducts: products,\r\n        preparationTime: values.preparationTime,\r\n        servingSize: values.servingSize,\r\n        cookingTime: values.cookingTime,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags: bnMetaTags.join(','),\r\n          name: values.bnName.trim(),\r\n          preparationTime: values.bnPreparationTime,\r\n          body: values.bnBody,\r\n          servingSize: values.bnServingSize,\r\n          cookingTime: values.bnCookingTime,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addProductRes && addProductRes.status === 'ok') {\r\n      openSuccessNotification('Recipe Created');\r\n      \r\n      setBundleList([\r\n        {\r\n          // @ts-ignore\r\n          ...addProductRes,\r\n          id: addProductRes['_id'] || '',\r\n          key: addProductRes['_id'] || '',\r\n          // name: addProductRes['name'] || '',\r\n          // cover: addProductRes['cover'] || '',\r\n        },\r\n        ...bundleList,\r\n      ]);\r\n\r\n\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setPricing([]);\r\n      setTagIds([]);\r\n      setSelectedTags([]);\r\n      setBrandId('');\r\n      setcategoryIds([]);\r\n      setCategoryOptions([]);\r\n      actions.resetForm();\r\n\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      // openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addProductState['isLoading']) {\r\n      const error = addProductState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addProductState]);\r\n\r\n  useEffect(() => {\r\n    if (productIds.length > 0) {\r\n      if (productIds.length > productList.length) {\r\n        const variation =\r\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\r\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n        console.log('variation', variation);\r\n\r\n        setProductList([\r\n          ...productList,\r\n          {\r\n            ...productIds[productIds.length - 1],\r\n            _id: productIds[productIds.length - 1]['id'],\r\n            variation: variation,\r\n            quantity: 1,\r\n          },\r\n        ]);\r\n      } else if (productIds.length < productList.length) {\r\n        console.log('productIds', productIds);\r\n        console.log('productList', productList);\r\n\r\n        const newProductList = productList.filter((item) => {\r\n          let isTrue = false;\r\n          productIds.forEach((product) => {\r\n            if (product.id === item._id) {\r\n              isTrue = true;\r\n            }\r\n          });\r\n          return isTrue;\r\n        });\r\n        setProductList(newProductList);\r\n      }\r\n    } else {\r\n      setProductList([]);\r\n    }\r\n    // console.log('productIds', productIds)\r\n  }, [productIds]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !(pricing.length > 0) || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleImagesDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myImages &&\r\n      myImages.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    setmyImages(newImages);\r\n  };\r\n\r\n  const handleDeleteFromSelectedImage = () => {};\r\n\r\n  const handleThumbnailImageDelete = (id) => {\r\n    // @ts-ignore\r\n    const newImages =\r\n      myThumbnailImage &&\r\n      myThumbnailImage.filter((image) => {\r\n        return image.id !== id;\r\n      });\r\n\r\n    if (newImages.length > 0) {\r\n      setmyThumbnailImage(newImages);\r\n    } else setmyThumbnailImage(false);\r\n  };\r\n\r\n  const handleAddPricing = (priceItem) => {\r\n    setPricing([\r\n      {\r\n        ...priceItem,\r\n        id: pricing.length,\r\n      },\r\n      ...pricing,\r\n    ]);\r\n    message.info('Product Pricing Added');\r\n  };\r\n\r\n  const handleDeletePricing = (id) => {\r\n    const newPricing = pricing.filter((item) => item.id !== id);\r\n    setPricing(newPricing);\r\n    message.info('Product Pricing Deleted');\r\n  };\r\n\r\n  const isCategoryInValid = () => {\r\n    if (\r\n      addProductState.error['error']['category'] &&\r\n      !categoryids &&\r\n      categoryids.length\r\n    ) {\r\n      return true;\r\n    } else if (categoryids && categoryids.length > 0) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleDateChange = (date, dateString) => {\r\n    setDateFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: 0,\r\n              padding: 0,\r\n            }}\r\n            width={'70vw'}\r\n            title='Add New Recipe'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <section className='addProductGridContainer'>\r\n              <div className='addProductGridContainer__left'>\r\n                <div className='addProductGridContainer__name'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Recipe Information</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        values.name && values.name.length > 2\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Name'\r\n                      placeHolder='Rafti oxy'\r\n                      value={values.name}\r\n                      name='name'\r\n                      isError={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['name'])\r\n                      }\r\n                      errorString={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['name'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('name');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Name'\r\n                      value={values.bnName}\r\n                      placeHolder={'রাফতি অক্স'}\r\n                      name='bnName'\r\n                      isError={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnName'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnName'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnName');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Preparation Time'\r\n                      value={values.preparationTime}\r\n                      placeHolder='15 min'\r\n                      name='preparationTime'\r\n                      isError={\r\n                        (touched.preparationTime && errors.preparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['preparationTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.preparationTime && errors.preparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['preparationTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('preparationTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Preparation Time'\r\n                      value={values.bnPreparationTime}\r\n                      placeHolder={'১৫ মিনিট'}\r\n                      name='bnPreparationTime'\r\n                      isError={\r\n                        (touched.bnPreparationTime &&\r\n                          errors.bnPreparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnPreparationTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnPreparationTime &&\r\n                          errors.bnPreparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnPreparationTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnPreparationTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Cooking Time'\r\n                      placeHolder={'30 min'}\r\n                      value={values.cookingTime}\r\n                      name='cookingTime'\r\n                      isError={\r\n                        (touched.cookingTime && errors.cookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['cookingTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.cookingTime && errors.cookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['cookingTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('cookingTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Cooking Time'\r\n                      placeHolder={'৩০ মিনিট'}\r\n                      value={values.bnCookingTime}\r\n                      name='bnCookingTime'\r\n                      isError={\r\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnCookingTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnCookingTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnCookingTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Serving Size'\r\n                      value={values.servingSize}\r\n                      name='servingSize'\r\n                      isError={\r\n                        (touched.servingSize && errors.servingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['servingSize'])\r\n                      }\r\n                      errorString={\r\n                        (touched.servingSize && errors.servingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['servingSize'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('servingSize');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Serving Size'\r\n                      value={values.bnServingSize}\r\n                      name='bnServingSize'\r\n                      isError={\r\n                        (touched.bnServingSize && errors.bnServingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnServingSize'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnServingSize && errors.bnServingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnServingSize'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnServingSize');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='URL'\r\n                      value={values.url}\r\n                      name='url'\r\n                      isError={\r\n                        (touched.url && errors.url) ||\r\n                        (!isSubmitting && addProductState.error['error']['url'])\r\n                      }\r\n                      errorString={\r\n                        (touched.url && errors.url) ||\r\n                        (!isSubmitting && addProductState.error['error']['url'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('url');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={body}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBody(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>BN Body</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={bnBody}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBnBody(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '15px',\r\n                      }}\r\n                    ></div>\r\n                    {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__price'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Products</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        pricing && pricing.length > 0\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <h3 className='inputFieldLabel'>Products</h3>\r\n                    <SelectProducts\r\n                      setProductIds={setProductIds}\r\n                      productIds={productIds}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>Selcted Products</h3>\r\n\r\n                    <SelectedProductItems\r\n                      productList={productList}\r\n                      setProductList={setProductList}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Image</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <div className='aboutToUploadImagesContainer'>\r\n                      {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 &&\r\n                        myImages.map((image, index) => {\r\n                          return (\r\n                            <div className='aboutToUploadImagesContainer__item'>\r\n                              <div\r\n                                className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                onClick={() => setCoverImageId(image.id)}\r\n                              >\r\n                                <img src={image.cover} alt={image.alt} />\r\n                              </div>\r\n\r\n                              <span\r\n                                onClick={() => handleImagesDelete(image.id)}\r\n                                className='aboutToUploadImagesContainer__item-remove'\r\n                              >\r\n                                <CloseOutlined />\r\n                              </span>\r\n\r\n                              {coverImageId === image.id ? (\r\n                                <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                  <CheckOutlined />\r\n                                </span>\r\n                              ) : (\r\n                                !coverImageId &&\r\n                                index === 0 && (\r\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                    <CheckOutlined />\r\n                                  </span>\r\n                                )\r\n                              )}\r\n                            </div>\r\n                          );\r\n                        })}\r\n\r\n                      <Tooltip title={'Attach images'}>\r\n                        <div\r\n                          onClick={() => {\r\n                            setvisible(true);\r\n                            setisModalOpenForImages(true);\r\n                            setisModalOpenForThumbnail(false);\r\n                          }}\r\n                          className='aboutToUploadImagesContainer__uploadItem'\r\n                        >\r\n                          {/* <FileAddOutlined />\r\n                                                        <FileImageTwoTone />\r\n                                                        <FileImageOutlined /> */}\r\n                          <FileImageFilled />\r\n                          {/* <h5>\r\n                                                                        Select From Library\r\n                                                                <     /h5> */}\r\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                            <PlusOutlined />\r\n                          </span>\r\n                        </div>\r\n                      </Tooltip>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Meta Data</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Meta title'\r\n                      value={values.metaTitle}\r\n                      placeHolder={'category...'}\r\n                      name='metaTitle'\r\n                      isError={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Meta title'\r\n                      value={values.bnMetaTitle}\r\n                      placeHolder={'ক্যাটাগড়ি...'}\r\n                      name='bnMetaTitle'\r\n                      isError={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='Meta description'\r\n                      value={values.metaDescription}\r\n                      placeholder={'meta...'}\r\n                      name='metaDescription'\r\n                      isError={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='BN Meta Description'\r\n                      value={values.bnMetaDescription}\r\n                      placeholder={'এইয় মেট...'}\r\n                      name='bnMetaDescription'\r\n                      isError={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      Meta Tags (grocery,fashion)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setMetaTags}\r\n                      tags={metaTags}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setBnMetaTags}\r\n                      tags={bnMetaTags}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='addProductGridContainer__right'>\r\n                <div className='addProductGridContainer__category'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Recipe Categories</h3>\r\n\r\n                      <Tooltip\r\n                        color='red'\r\n                        visible={\r\n                          addProductState.error['error']['category'] &&\r\n                          !(categoryids.length > 0)\r\n                        }\r\n                        placement='left'\r\n                        title={'Select at least one category'}\r\n                      >\r\n                        <div\r\n                          className={\r\n                            !(categoryids.length > 0) &&\r\n                            !addProductState.error['error']['category']\r\n                              ? 'checkicon'\r\n                              : addProductState.error['error']['category']\r\n                              ? 'checkicon-error'\r\n                              : 'checkicon-active'\r\n                          }\r\n                        >\r\n                          <CheckCircleOutlined />\r\n                        </div>\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Categories\r\n                        setCategoryOptions={setCategoryOptions}\r\n                        categoryOptions={categoryOptions}\r\n                        setcategoryIds={setcategoryIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__tag'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Recipe Tags</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Tags\r\n                        setSelectedTags={setSelectedTags}\r\n                        selectedTags={selectedTags}\r\n                        setTagIds={setTagIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisible}\r\n            visible={visible}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            setmyThumbnailImage={setmyThumbnailImage}\r\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n            isModalOpenForImages={isModalOpenForImages}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*/ //\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleQuickEdit from \"./PostQuickEdit\"\r\nimport AddNewProductBundle from \"./AddNewPost\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Recipe Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deletePost');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Recipe');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/posts/${record.id}`)\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/posts/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n\r\n\r\n                <Column\r\n                    title=\"Preparation Time\"\r\n                    dataIndex=\"preparationTime\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Cooking Time\"\r\n                    dataIndex=\"cookingTime\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                \r\n                <Column\r\n                    title=\"People\"\r\n                    dataIndex=\"servingSize\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n\r\n            \r\n    \r\n                 <Column\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Edit recipe'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <ProductBundleQuickEdit\r\n\r\n                 productList={data}\r\n                 setProductList={setTagList}\r\n                setAddNewCategoryVisible={setvisible}\r\n                addNewCategoryVisible={visible}\r\n                productDetailData={activeCategoryForEdit}\r\n                 />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'postList');\r\n\r\n\r\n\r\n    console.log('postListData',tagState);\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({\r\n                urlOptions:{\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t  sortItem: 'added',\r\n\t\t\t\t\t  sortOrderValue: '-1'\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n            });\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                        Recipes\r\n                       </h2>\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search recipes..\"\r\n                            onSearch={value => handleSearch(value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Recipe found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewProductBundle\r\n                productList={tagList}\r\n                setProductList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagList;\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import libraries\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  PlusCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport {\r\n  openSuccessNotification,\r\n  openErrorNotification,\r\n} from '../../components/Notification';\r\nimport MetaTags from '../category/MetaTags';\r\n\r\nimport Tags from './Tags';\r\nimport Brands from './Brands';\r\nimport Categories from './Categories';\r\nimport SelectProducts from './SelectProducts';\r\nimport SelectedProductItems from './SelectedProductItems';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  url: '',\r\n  preparationTime: '',\r\n  servingSize: '',\r\n  cookingTime: '',\r\n  body: '',\r\n  bnName: '',\r\n  bnBody: '',\r\n  bnPreparationTime: '',\r\n  bnServingSize: '',\r\n  bnCookingTime: '',\r\n  metaTitle: '',\r\n  bnMetaTitle: '',\r\n  metaDescription: '',\r\n  bnMetaDescription: '',\r\n  metaTags: '',\r\n  bnMetaTags: '',\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  productDetailData?: any;\r\n  setPostDetailData?:any;\r\n}\r\n\r\nconst AddNewProduct = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  productDetailData,\r\n  setPostDetailData\r\n}: Props) => {\r\n\r\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\r\n    {},\r\n    'updatePost'\r\n  );\r\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\r\n    {},\r\n    'postDetail'\r\n  );\r\n  const [visible, setvisible] = useState(false);\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n  const [categoryids, setcategoryIds] = useState([]);\r\n  const [tagIds, setTagIds] = useState([]);\r\n  const [brandId, setBrandId] = useState('');\r\n  const [pricing, setPricing] = useState([]);\r\n  const [coverImageId, setCoverImageId] = useState('');\r\n  const [categoryOptions, setCategoryOptions] = useState([]);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [body, setBody] = useState('');\r\n  const [bnBody, setBnBody] = useState('');\r\n  const [productIds, setProductIds] = useState([]);\r\n  const [productList, setProductList] = useState([]);\r\n  const [metaTags, setMetaTags] = useState([]);\r\n  const [bnMetaTags, setBnMetaTags] = useState([]);\r\n\r\n\r\n\r\n  const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n  const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n  const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n  const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n  const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\r\n  console.log('myPostState',productDetailState)\r\n  useEffect(() => {\r\n    const getProductDetail = async () => {\r\n      await handleProductDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: productDetailData.id,\r\n          },\r\n          params: {\r\n            imageValue: 1\r\n          }\r\n        },\r\n      });\r\n    };\r\n\r\n    getProductDetail();\r\n  }, [productDetailData]);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (productDetailState.data && Object.keys(productDetailState.data).length > 0) {\r\n\r\n\r\n      const images = productDetailState.data.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === productDetailState.data.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [productDetailState.data.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(productDetailState.data.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages(mahImages);\r\n        \r\n    \r\n    }\r\n}, [productDetailState.data]); \r\n\r\n\r\nuseEffect(() => {\r\n    // @ts-ignore\r\n    if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n        if (coverImageId !== myImages[0].id) {\r\n            setCoverImageId(myImages[0].id);\r\n            handleSetImageAsThumnail(myImages[0]);\r\n        }\r\n\r\n    }\r\n\r\n}, [myImages])\r\n\r\n\r\nconsole.log('myLoadImages',myImages)\r\n\r\n\r\n  const handleDetachSingleImage = async id => {\r\n      await handleDetachImageFromItemSingleFetch({\r\n          urlOptions: {\r\n              placeHolders: {\r\n                  imageId: id,\r\n                  collection: 'post',\r\n                  itemId: productDetailData.id\r\n              }\r\n          }\r\n      });\r\n  }\r\n\r\n\r\n\r\n  const handleSetImageAsThumnail = async image => {\r\n\r\n      const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n          urlOptions: {\r\n              placeHolders: {\r\n                  imageId: image.id,\r\n                  collection: 'post',\r\n                  itemId: productDetailData.id\r\n              }\r\n          }\r\n      });\r\n\r\n\r\n      // @ts-ignore\r\n      if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n          openSuccessNotification('Set as thumbnail!')\r\n      }\r\n      else {\r\n          openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n      }\r\n\r\n  }\r\n\r\n\r\n\r\n  \r\n  const handleImagesDelete = (id) => {\r\n      // @ts-ignore\r\n      const newImages = myImages && myImages.filter(image => {\r\n          return image.id !== id;\r\n      })\r\n\r\n      setmyImages(newImages);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    if (productDetailData && productDetailData.brand) {\r\n      setBrandId(productDetailData.brand['id']);\r\n    } else {\r\n      setBrandId('');\r\n    }\r\n    if (\r\n      productDetailData &&\r\n      productDetailData.tags &&\r\n      productDetailData.tags.length > 0\r\n    ) {\r\n      // const tagIds = productDetailData.tags.map(item => item.id);\r\n      setSelectedTags(productDetailData.tags);\r\n    } else {\r\n      setSelectedTags([]);\r\n    }\r\n    if (\r\n      productDetailData &&\r\n      productDetailData.category &&\r\n      productDetailData.category.length > 0\r\n    ) {\r\n        console.log('postEditCategory2',productDetailData.category)\r\n      const categoryIds = productDetailData.category;\r\n      setCategoryOptions(categoryIds);\r\n    } else {\r\n      setCategoryOptions([]);\r\n    }\r\n  }, [productDetailData]);\r\n\r\n\r\n\r\n  \r\n  useEffect(()=>{\r\n    if(\r\n        productDetailState.done && productDetailState['data'] \r\n    && Object.keys(productDetailState['data']).length > 0\r\n     && ['requiredProducts'] && productDetailState['data']['requiredProducts'].length > 0){\r\n        const productIds = productDetailState['data']['requiredProducts'].map(item => item); \r\n        setProductIds(productIds); \r\n        const productList = productDetailState['data']['requiredProducts'].map(item => {\r\n            return {\r\n                ...item,\r\n                _id: item._id,\r\n                variation: item.variation,\r\n                quantity: item.quantity,\r\n            }\r\n        }); \r\n       setProductList(productList);\r\n\r\n    }; \r\n    \r\n},[productDetailState])\r\n\r\nconsole.log('couponDetialQuickEdit',productDetailState);\r\n\r\nuseEffect(() => {\r\n\r\n    if (productIds.length > 0) {\r\n        if (productIds.length > productList.length) {\r\n            const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n            console.log('variation', variation)\r\n\r\n            setProductList([...productList, {\r\n                ...productIds[productIds.length - 1],\r\n                _id: productIds[productIds.length - 1]['id'],\r\n                variation: variation,\r\n                quantity: 1\r\n            }]);\r\n        }\r\n\r\n\r\n        else if (productIds.length < productList.length) {\r\n            console.log('productIds', productIds);\r\n            console.log('productList', productList);\r\n\r\n            const newProductList = productList.filter(item => {\r\n                let isTrue = false;\r\n                productIds.forEach(product => {\r\n                    if (product.id === item._id) {\r\n                        isTrue = true;\r\n                    }\r\n                });\r\n                return isTrue;\r\n            })\r\n            setProductList(newProductList);\r\n\r\n        }\r\n\r\n    }\r\n    else {\r\n        setProductList([]);\r\n    }\r\n    // console.log('productIds', productIds)\r\n\r\n\r\n}, [productIds])\r\n\r\n\r\n\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    // @ts-ignore\r\n    const imagesIds =\r\n      myImages && myImages[0]\r\n        ? // @ts-ignore\r\n          myImages.map((image) => {\r\n            return image.id;\r\n          })\r\n        : [];\r\n\r\n    const products =\r\n      productList.length > 0\r\n        ? productList.map((product) => {\r\n            return {\r\n              _id: product._id,\r\n              variation: product.variation,\r\n              quantity: product.quantity,\r\n            };\r\n          })\r\n        : [];\r\n\r\n\r\n        if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n          const aboutToUpdatedImageIds = []; \r\n\r\n    \r\n          if(imagesIds && imagesIds.length > 0){\r\n            imagesIds.forEach(imageId => {\r\n              if(productDetailData && productDetailData['image']){\r\n                if(!productDetailData['image'].includes(imageId)){\r\n                  aboutToUpdatedImageIds.push(imageId)\r\n                }\r\n              }\r\n            });\r\n          }\r\n    \r\n          \r\n                if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                    await handleAttachImageToItemMultipleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                collection: 'post',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        },\r\n                        body: {\r\n                            image: aboutToUpdatedImageIds\r\n                        }\r\n                    });\r\n                }\r\n                else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                    await handleAttachImageToItemSingleFetch({\r\n                        urlOptions: {\r\n                            placeHolders: {\r\n                                imageId: aboutToUpdatedImageIds[0].id,\r\n                                collection: 'post',\r\n                                itemId: productDetailData.id\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            \r\n\r\n\r\n    const addProductRes = await handleAddProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: productDetailData.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        category: categoryOptions,\r\n        tags: tagIds,\r\n        image: imagesIds,\r\n        body: body,\r\n        requiredProducts: products,\r\n        preparationTime: values.preparationTime,\r\n        servingSize: values.servingSize,\r\n        cookingTime: values.cookingTime,\r\n        metaTitle: values.metaTitle,\r\n        metaDescription: values.metaDescription,\r\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\r\n\r\n        bn: {\r\n          metaTitle: values.bnMetaTitle,\r\n          metaDescription: values.bnMetaDescription,\r\n          metaTags:\r\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\r\n          name: values.bnName.trim(),\r\n          preparationTime: values.bnPreparationTime,\r\n          body: bnBody,\r\n          servingSize: values.bnServingSize,\r\n          cookingTime: values.bnCookingTime,\r\n        },\r\n      },\r\n    });\r\n\r\n    console.log('addProductRes', addProductRes);\r\n\r\n    // @ts-ignore\r\n    if (addProductRes && addProductRes.status === 'ok') {\r\n      openSuccessNotification('Recipe Updated');\r\n\r\n      setPostDetailData({\r\n        ...addProductRes,\r\n        id: addProductRes['id'] || '',\r\n        key: addProductRes['id'] || '',\r\n        name: values.name.trim() || '',\r\n        cover: addProductRes['cover']['cover'] || '',\r\n      })\r\n   \r\n      setAddNewCategoryVisible(false);\r\n\r\n      // @ts-ignore\r\n      setmyImages([]);\r\n      setCoverImageId('');\r\n      setPricing([]);\r\n      setTagIds([]);\r\n      setSelectedTags([]);\r\n      setBrandId('');\r\n      setcategoryIds([]);\r\n      setCategoryOptions([]);\r\n      actions.resetForm();\r\n    } else {\r\n      // openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addProductState['isLoading']) {\r\n      const error = addProductState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addProductState]);\r\n\r\n  \r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n    setmyImages(false);\r\n    setCoverImageId('');\r\n    setPricing([]);\r\n    setTagIds([]);\r\n    setSelectedTags([]);\r\n    setBrandId('');\r\n    setcategoryIds([]);\r\n    setCategoryOptions([]);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\r\n      const metaTags =\r\n        productDetailData.metaTags && productDetailData.metaTags.split(',');\r\n\r\n      console.log('localMetaTags', metaTags);\r\n\r\n      const bnMetaTags =\r\n        productDetailData.bn &&\r\n        productDetailData.bn['metaTags'] &&\r\n        productDetailData.bn['metaTags'].split(',');\r\n      setMetaTags(metaTags || []);\r\n      setBnMetaTags(bnMetaTags || []);\r\n    }\r\n  }, []);\r\n\r\n  console.log('postDetailState', productDetailState);\r\n  console.log('postDetailData', productDetailData);\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{\r\n        ...initialValues,\r\n        ...{\r\n          ...productDetailData,\r\n          ...(productDetailState['data'] &&\r\n            Object.keys(productDetailState['data']).length > 0 &&\r\n            productDetailState['data']['bn'] && {\r\n              bnMetaTitle: productDetailState['data']['bn'].metaTitle,\r\n              bnMetaDescription:\r\n                productDetailState['data']['bn'].metaDescription,\r\n              bnName: productDetailState['data']['bn'].name,\r\n              metaUnit: productDetailState['data']['bn'].unit,\r\n              bnDescription: productDetailState['data']['bn'].description,\r\n            }),\r\n        },\r\n      }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: 0,\r\n              padding: 0,\r\n            }}\r\n            width={'70vw'}\r\n            title='Edit Recipe'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n            }}\r\n          >\r\n            <section className='addProductGridContainer'>\r\n              <div className='addProductGridContainer__left'>\r\n                <div className='addProductGridContainer__name'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Recipe Information</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        values.name && values.name.length > 2\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Name'\r\n                      placeHolder='Rafti oxy'\r\n                      value={values.name}\r\n                      name='name'\r\n                      isError={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['name'])\r\n                      }\r\n                      errorString={\r\n                        (touched.name && errors.name) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['name'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('name');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Name'\r\n                      value={values.bnName}\r\n                      placeHolder={'রাফতি অক্স'}\r\n                      name='bnName'\r\n                      isError={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnName'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnName && errors.bnName) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnName'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnName');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Preparation Time'\r\n                      value={values.preparationTime}\r\n                      placeHolder='15 min'\r\n                      name='preparationTime'\r\n                      isError={\r\n                        (touched.preparationTime && errors.preparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['preparationTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.preparationTime && errors.preparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['preparationTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('preparationTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Preparation Time'\r\n                      value={values.bnPreparationTime}\r\n                      placeHolder={'১৫ মিনিট'}\r\n                      name='bnPreparationTime'\r\n                      isError={\r\n                        (touched.bnPreparationTime &&\r\n                          errors.bnPreparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnPreparationTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnPreparationTime &&\r\n                          errors.bnPreparationTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnPreparationTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnPreparationTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Cooking Time'\r\n                      placeHolder={'30 min'}\r\n                      value={values.cookingTime}\r\n                      name='cookingTime'\r\n                      isError={\r\n                        (touched.cookingTime && errors.cookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['cookingTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.cookingTime && errors.cookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['cookingTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('cookingTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Cooking Time'\r\n                      placeHolder={'৩০ মিনিট'}\r\n                      value={values.bnCookingTime}\r\n                      name='bnCookingTime'\r\n                      isError={\r\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnCookingTime'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnCookingTime'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnCookingTime');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='Serving Size'\r\n                      value={values.servingSize}\r\n                      name='servingSize'\r\n                      isError={\r\n                        (touched.servingSize && errors.servingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['servingSize'])\r\n                      }\r\n                      errorString={\r\n                        (touched.servingSize && errors.servingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['servingSize'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('servingSize');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Serving Size'\r\n                      value={values.bnServingSize}\r\n                      name='bnServingSize'\r\n                      isError={\r\n                        (touched.bnServingSize && errors.bnServingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnServingSize'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnServingSize && errors.bnServingSize) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnServingSize'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnServingSize');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='URL'\r\n                      value={values.url}\r\n                      name='url'\r\n                      isError={\r\n                        (touched.url && errors.url) ||\r\n                        (!isSubmitting && addProductState.error['error']['url'])\r\n                      }\r\n                      errorString={\r\n                        (touched.url && errors.url) ||\r\n                        (!isSubmitting && addProductState.error['error']['url'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('url');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>Body</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={body}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBody(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>BN Body</h3>\r\n\r\n                    <div\r\n                      style={{\r\n                        width: '100%',\r\n                        maxWidth: '100%',\r\n                      }}\r\n                    >\r\n                      <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={bnBody}\r\n                        onInit={(editor) => {\r\n                          // You can store the \"editor\" and use when it is needed.\r\n                          console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                          const data = editor.getData();\r\n                          setBnBody(data);\r\n                        }}\r\n                        onBlur={(event, editor) => {\r\n                          console.log('Blur.', editor);\r\n                        }}\r\n                        onFocus={(event, editor) => {\r\n                          console.log('Focus.', editor);\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                    <div\r\n                      style={{\r\n                        marginBottom: '15px',\r\n                      }}\r\n                    ></div>\r\n                    {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__price'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Products</h3>\r\n\r\n                    <div\r\n                      className={\r\n                        pricing && pricing.length > 0\r\n                          ? 'checkicon-active'\r\n                          : 'checkicon'\r\n                      }\r\n                    >\r\n                      <CheckCircleOutlined />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <h3 className='inputFieldLabel'>Products</h3>\r\n                    <SelectProducts\r\n                      setProductIds={setProductIds}\r\n                      productIds={productIds}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>Selcted Products</h3>\r\n\r\n                    <SelectedProductItems\r\n                      productList={productList}\r\n                      setProductList={setProductList}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n          \r\n\r\n                <div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n        Image\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n\r\n<div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {productDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {productDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n                                        </div>\r\n                                  </div>\r\n\r\n\r\n                <div className='addProductGridContainer__image'>\r\n                  <div className='addProductGridContainer__item-header'>\r\n                    <h3>Meta Data</h3>\r\n\r\n                    <Tooltip\r\n                      placement='left'\r\n                      title={\r\n                        \"Meta data will be used to make the user's easy and for search engine optimization.\"\r\n                      }\r\n                    >\r\n                      <a href='###'>\r\n                        <InfoCircleOutlined />\r\n                      </a>\r\n                    </Tooltip>\r\n                  </div>\r\n                  <div className='addProductGridContainer__item-body'>\r\n                    <Input\r\n                      label='Meta title'\r\n                      value={values.metaTitle}\r\n                      placeHolder={'category...'}\r\n                      name='metaTitle'\r\n                      isError={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaTitle && errors.metaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <Input\r\n                      label='BN Meta title'\r\n                      value={values.bnMetaTitle}\r\n                      placeHolder={'ক্যাটাগড়ি...'}\r\n                      name='bnMetaTitle'\r\n                      isError={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaTitle'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaTitle');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='Meta description'\r\n                      value={values.metaDescription}\r\n                      placeholder={'meta...'}\r\n                      name='metaDescription'\r\n                      isError={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.metaDescription && errors.metaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['metaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('metaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <TextArea\r\n                      label='BN Meta Description'\r\n                      value={values.bnMetaDescription}\r\n                      placeholder={'এইয় মেট...'}\r\n                      name='bnMetaDescription'\r\n                      isError={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaDescription'])\r\n                      }\r\n                      errorString={\r\n                        (touched.bnMetaDescription &&\r\n                          errors.bnMetaDescription) ||\r\n                        (!isSubmitting &&\r\n                          addProductState.error['error']['bnMetaDescription'])\r\n                      }\r\n                      onChange={(e: any) => {\r\n                        handleChange(e);\r\n                        setFieldTouched('bnMetaDescription');\r\n                      }}\r\n                    />\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      Meta Tags (grocery,fashion)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setMetaTags}\r\n                      tags={metaTags}\r\n                    />\r\n\r\n                    <div\r\n                      style={{\r\n                        marginTop: '15px',\r\n                      }}\r\n                    ></div>\r\n\r\n                    <h3 className='inputFieldLabel'>\r\n                      BN Meta Tags (মুদিখানা,ফ্যাশন)\r\n                    </h3>\r\n\r\n                    <MetaTags\r\n                      // @ts-ignore\r\n                      setTags={setBnMetaTags}\r\n                      tags={bnMetaTags}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='addProductGridContainer__right'>\r\n                <div className='addProductGridContainer__category'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Recipe Categories</h3>\r\n\r\n                      <Tooltip\r\n                        color='red'\r\n                        visible={\r\n                          addProductState.error['error']['category'] &&\r\n                          !(categoryids.length > 0)\r\n                        }\r\n                        placement='left'\r\n                        title={'Select at least one category'}\r\n                      >\r\n                        <div\r\n                          className={\r\n                            !(categoryids.length > 0) &&\r\n                            !addProductState.error['error']['category']\r\n                              ? 'checkicon'\r\n                              : addProductState.error['error']['category']\r\n                              ? 'checkicon-error'\r\n                              : 'checkicon-active'\r\n                          }\r\n                        >\r\n                          <CheckCircleOutlined />\r\n                        </div>\r\n                      </Tooltip>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Categories\r\n                        setCategoryOptions={setCategoryOptions}\r\n                        categoryOptions={categoryOptions}\r\n                        setcategoryIds={setcategoryIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='addProductGridContainer__tag'>\r\n                  <div className='addProductGridContainer-rightItemContainer'>\r\n                    <div className='addProductGridContainer-rightItemContainer-header'>\r\n                      <h3>Recipe Tags</h3>\r\n                    </div>\r\n                    <div className='addProductGridContainer-rightItemContainer-body'>\r\n                      <Tags\r\n                        setSelectedTags={setSelectedTags}\r\n                        selectedTags={selectedTags}\r\n                        setTagIds={setTagIds}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisible}\r\n            visible={visible}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            setmyThumbnailImage={setmyThumbnailImage}\r\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n            isModalOpenForImages={isModalOpenForImages}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*/ //\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n// import moment\r\nimport Moment from \"react-moment\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleEdit from \"./PostEdit\";\r\nimport CouponProducts from \"../coupon/CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'postDetail');\r\n    const [postDetailData,setPostDetailData] = useState({}); \r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const getProductDetail = async () => {\r\n            const res = await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        categoryOne: '1',\r\n                        tagsOne: '1',\r\n                        imageValue: '1'\r\n                    },\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(res) {\r\n                // @ts-ignore\r\n            setPostDetailData(res)\r\n            }\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n    \r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && postDetailData && postDetailData['image'] ? getImagesInCollumn(postDetailData['image']) : [];\r\n\r\n\r\n    console.log('postDetailState', productDetailState);\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipe Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && postDetailData && (Object.keys(postDetailData).length > 0) && (\r\n                    <>\r\n                         <ProductBundleEdit\r\n\r\n                            productDetailData={postDetailData}\r\n                            addNewCategoryVisible={productEditVisible}\r\n                            setAddNewCategoryVisible={setProductEditVisible}\r\n                            setPostDetailData={setPostDetailData}\r\n                        /> \r\n                         <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button> \r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && postDetailData && !(Object.keys(postDetailData).length > 0) && (\r\n                    <Empty description='No Recipe found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && postDetailData && (Object.keys(postDetailData).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={postDetailData['cover'] && postDetailData['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {postDetailData['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {postDetailData['price']}\r\n                                </h4>\r\n                                <h3>\r\n                                    {postDetailData['description']}\r\n                                </h3>\r\n\r\n                                {postDetailData['startDate'] && (\r\n                                    <h3>\r\n                                        START DATE:\r\n                                        <span>\r\n                                            {postDetailData['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                {postDetailData['endDate'] && (\r\n                                    <h3>\r\n                                        END DATE:\r\n                                        <span>\r\n                                            {postDetailData['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n\r\n\r\n                                {postDetailData['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {postDetailData['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {postDetailData['tags'] && postDetailData['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {postDetailData['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {postDetailData['category2'] && postDetailData['category2'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {postDetailData['category2'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/posts/category/${cat.id}`)}\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n                                    </>)\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.done\r\n                         && postDetailData && Object.keys(postDetailData).length > 0 \r\n                        && postDetailData['products']\r\n                         && postDetailData['products'].length > 0 && (\r\n                            <div className='brandDetailContainer__heading'>\r\n                                <h3>\r\n                                    Products\r\n                               </h3>\r\n                            </div>\r\n                        )\r\n                        }\r\n\r\n\r\n                        <div className='brandDetailContainer__body'>\r\n                            {productDetailState.done && postDetailData && postDetailData['products'] && !(postDetailData['products'].length > 0) && (\r\n                                <div style={{\r\n                                    marginTop: '100px'\r\n                                }}>\r\n                                    <Empty description='No Products exists for this Recipe' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                </div>\r\n                            )}\r\n\r\n                            {productDetailState.done && postDetailData && Object.keys(postDetailData).length > 0 && (\r\n                                <>\r\n                                    {postDetailData['products'] && postDetailData['products'].length > 0 &&\r\n                                        postDetailData['products'].map(product => {\r\n                                            return (\r\n                                                <CouponProducts\r\n                                                    quantity={product.quantity}\r\n                                                    productId={product['_id']} />\r\n                                            )\r\n                                        })}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        {postDetailData['image'] && postDetailData['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                    </>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Recipe Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagDetailData?: any;\r\n\ttagList?:any; \r\n\tsetTagList?: any; \r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, \r\n    setAddNewCategoryVisible, tagDetailData, setTagList,tagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postUpdateTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n          \r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...tagDetailData,...addTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n\r\n\t\t\t\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Edit Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Recipe Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postAddTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setAddNewCategoryVisible(false);\r\n\r\n            setTagList([...tagList, {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addTagRes,\r\n                id: addTagRes['_id'] || '',\r\n                key: addTagRes['_id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\t\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Post Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewTag from \"./AddNewPostTag\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Recipe Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'postDeleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Recipe Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/posts/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Edit Recipe tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetAddNewCategoryVisible={setvisible}\r\n\t\t\t\taddNewCategoryVisible={visible}\r\n\t\t\t\ttagDetailData={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'postTagList');\r\n\r\n\tconsole.log('recipetaglist',tagState); \r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tRecipe Tags\r\n         \t\t\t\t</h2>\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search recipe tags..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '200px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Recipe tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewTag\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Recipe Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, \r\n    setAddNewCategoryVisible, setTagDetailData, tagDetailData }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postUpdateTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setAddNewCategoryVisible(false);\r\n            setTagDetailData({\r\n\t\t\t\t...tagDetailData,\r\n                \t// @ts-ignore\r\n\t\t\t\t...addTagRes,\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            })\r\n        \r\n\t\t\t\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Edit Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'postTagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagPostList');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n    \r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipe Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            addNewCategoryVisible={tagEditVisible}\r\n                            setAddNewCategoryVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Recipe Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipes \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                \r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Recipes found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/posts/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/posts/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","// @ts-nocheck\r\nimport React,{useEffect, useState} from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass MetaTags extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n\r\n\r\n  handleClose = removedTag => {\r\n    const {setTags,tags} = this.props;\r\n    const localTags = tags.filter(tag => tag !== removedTag);\r\n    setTags(localTags);\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n      console.log('handleInputConfirm',this.props);\r\n    const { inputValue } = this.state;\r\n    let { tags, setTags } = this.props;\r\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    setTags(tags);\r\n    this.setState({\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n    console.log('tagValue',e.target.value);\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ editInputIndex, editInputValue }) => {\r\n      return {\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n\r\n    const newTags = [...this.props.tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    this.props.setTags(newTags);\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    const { placeholder,tags } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {tags && tags.length > 0 && tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                placeholder={placeholder}\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus edit-tag\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaTags","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Select, notification, Modal, Tooltip, Upload, message, Spin } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: '',\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n    categoryDetailData?:any; \r\n\tsetcategoryList?:any; \r\n\tcategoryList?:any; \r\n}\r\n\r\nconst AddNewCategory = ({ \r\n    addNewCategoryVisible, \r\n    setAddNewCategoryVisible, \r\n    categoryDetailData, setcategoryList, categoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postCategoryUpdate');\r\n\tconst [updateCategoryIconState, handleUpdateCategoryIconFetch] = useHandleFetch({}, 'categoryUpdateIcon');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\t\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryDetailData.id\r\n                    }\r\n                }\r\n            }); \r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryDetailData]);\r\n\r\n\r\n\tconsole.log('MahPostCategory',categoryDetailState)\r\n\tconsole.log('MahPostCategorymyImages',myImages)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailState.done && categoryDetailState.data && Object.keys(categoryDetailState.data).length > 0) {\r\n\t\r\n\t\t\tconst images = categoryDetailState.data.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (categoryDetailState.data.cover && categoryDetailState.data.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === categoryDetailState.data.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [categoryDetailState.data.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(categoryDetailState.data.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages(mahImages);\r\n\t\t\t\t\r\n\t\t}\r\n\t}, [categoryDetailState.data]); \r\n\t\r\n\t\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore\r\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\r\n\t\r\n\t\t\tif (coverImageId !== myImages[0].id) {\r\n\t\t\t\tsetCoverImageId(myImages[0].id);\r\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t}, [myImages])\r\n\t\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('displayOrder', values.displayOrder)\r\n\r\n\r\n\t\tconsole.log('categoryDetailData',categoryDetailData); \r\n\t\tconsole.log('imagesIds',imagesIds); \r\n\t\t\r\n\t\t\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\tconst aboutToUpdatedImageIds = []; \r\n\r\n\t\t\tif(imagesIds && imagesIds.length > 0){\r\n\t\t\t\timagesIds.forEach(imageId => {\r\n\t\t\t\t\tif(categoryDetailData && categoryDetailData['postCategory']){\r\n\t\t\t\t\t\tif(!categoryDetailData['image'].includes(imageId)){\r\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n      \r\n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'postCategory',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: aboutToUpdatedImageIds\r\n                    }\r\n                });\r\n            }\r\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: aboutToUpdatedImageIds[0].id,\r\n                            collection: 'postCategory',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\t\t}\r\n\t\t\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: categoryDetailData.id\r\n                },\r\n            },\r\n            body: {\r\n                name: values.name && values.name.trim(),\r\n                description: values.description,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                parent: selectedParentId,\r\n                icon: imageFile,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tdisplayOrder: values.displayOrder,\r\n                metaTags:  tags && tags.length > 0 ?  tags.join(',') : '',\r\n                bn: {\r\n                    metaTitle: values.bnMetaTitle,\r\n                    metaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags:  bnTags && bnTags.length > 0 ?  bnTags.join(',') : '',\r\n                    name: values.bnName && values.bnName.trim(),\r\n                    description: values.bnDescription,\r\n                }\r\n            },\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Updated!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\t// setcategoryList([{\r\n\t\t\t// \tid: addCategoryRes['_id'] || '',\r\n\t\t\t// \tkey: addCategoryRes['_id'] || '',\r\n\t\t\t// \tname: addCategoryRes['name'] || '',\r\n\t\t\t// \tdescription: addCategoryRes['description'] || '',\r\n\t\t\t// \tcover: addCategoryRes['cover'] || '',\r\n\t\t\t// \t// @ts-ignore\r\n\t\t\t// \t...addCategoryRes\r\n\t\t\t// },...categoryList]); \r\n\r\n\t\t\t\r\n\r\n            // setcategoryDetailData({\r\n\t\t\t// \t...categoryDetailData,\r\n\t\t\t// \t...addCategoryRes\r\n            // }); \r\n\r\n        \r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'postCategory',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'postCategory',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('icon',file); \r\n\t\t\t\t// const addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\t\t// \tbody: formData,\r\n\t\t\t\t// });\r\n\t\t\t\tconst res = await handleUpdateCategoryIconFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Category Icon updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update category icon, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const iconUrl = categoryDetailData.icon && categoryDetailData.icon; \r\n\r\n\t\t\tsetImageUrl(iconUrl); \r\n        }\r\n\r\n    },[])\r\n    \r\n    useEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const metaTags = categoryDetailData.metaTags && categoryDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = categoryDetailData.bn && categoryDetailData.bn['metaTags'] && categoryDetailData.bn['metaTags'].split(','); \r\n            setTags(metaTags || [])\r\n            setBnTags(bnMetaTags || [])\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\tconsole.log('addnewCategoryTags',tags);\r\n\tconsole.log('categoryDetailData',categoryDetailData);\r\n\tconsole.log('myImages',myImages);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n                \r\n                { ...initialValues,\r\n                    ...categoryDetailData,\r\n                    ...( categoryDetailData && Object.keys(categoryDetailData).length > 0 && {\r\n                        bnMetaTitle: categoryDetailData['bn']\r\n                        && categoryDetailData['bn'].metaTitle\r\n                        && categoryDetailData['bn'].metaTitle,\r\n                        bnMetaDescription: categoryDetailData['bn'] &&  categoryDetailData['bn'].metaDescription && categoryDetailData['bn'].metaDescription,\r\n                        bnName: categoryDetailData['bn'] && categoryDetailData['bn'].name && categoryDetailData['bn'].name,\r\n                        bnDescription: categoryDetailData['bn'] && categoryDetailData['bn'].description && categoryDetailData['bn'].description,\r\n                    })\r\n                 }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {categoryDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {categoryDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport config from '../../../config.json';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message, } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Recipe Category Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: null,\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postAddCategory','form');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tconst bn = {\r\n\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\tname: values.bnName.trim(),\r\n\t\t\tdescription: values.bnDescription,\r\n\t\t}; \r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\t// formData.append('icon', imageFile)\r\n\t\tformData.append('metaTitle', values.metaTitle)\r\n\t\tformData.append('displayOrder', values.displayOrder)\r\n\t\tformData.append('metaDescription', values.metaDescription)\r\n\t\tformData.append('metaTags', values.metaTags)\r\n\r\n\r\n\r\n\t\tconst bnData = JSON.stringify(bn);\r\n\t\tconst bnFormData = new FormData();\r\n\t\tbnFormData.append(\"bn\",bnData);\r\n\r\n\r\n\r\n\t\tformData.append('bn', bnFormData.get('bn'))\r\n\r\n\r\n\r\n\r\n\t\tconsole.log('addcategoryREsBody',{\r\n\t\t\t...formData,\r\n\t\t\t// ...bnFormData\r\n\t\t}); \r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\tbody: formData,\r\n\t\t});\r\n\r\n\r\n\t\tconsole.log('adddPostCategoryREs',addCategoryRes)\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes[0] && addCategoryRes[0].name) {\r\n\t\t\topenSuccessNotification('Recipe Category Created!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([{\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes[0],\r\n\t\t\t\tid: addCategoryRes[0]['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes[0]['_id'] || '',\r\n\t\t\t\tname: addCategoryRes[0]['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes[0]['description'] || '',\r\n\t\t\t\tcover: addCategoryRes[0].cover\r\n\t\t\t\t? `${config['baseURL']}${\r\n\t\t\t\t\taddCategoryRes[0].cover ? addCategoryRes[0].cover.thumbnail : ''\r\n\t\t\t\t  }`\r\n\t\t\t\t: '',\r\n\t\t\t},...categoryList])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconsole.log('addCategoryState',addCategoryState)\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!addCategoryState['isLoading']) {\r\n\t\t\tconst error = addCategoryState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addCategoryState])\r\n\r\n\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n{/* \r\n<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Display Order'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.displayOrder}\r\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'1,3,7'}\r\n\t\t\t\t\t\t\t\t\t\tname='displayOrder'\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.displayOrder && errors.displayOrder) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('displayOrder');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t */}\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t{/* <div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload> */}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport QuickEdit from \"./QuickEdit\"; \r\nimport AddNewPostCategory from \"./AddNewPostCategory\";\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport Empty from \"../../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Post Recipe Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'postCategoryDelete');\r\n      // console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Recipe Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                   onClick={() => {\r\n                    history.push(`/admin/posts/category/${record.id}`)\r\n                    // setcategoryDetailVisible(true);\r\n                    setactiveCategoryForEdit(record)\r\n                  }}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px',\r\n                    cursor: 'pointer'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/posts/category/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          {/* <Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            /> */}\r\n\r\n\r\n         {/* <Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            /> */}\r\n\r\n        <Column\r\n           title=\"Recipes\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t        <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setAddNewCategoryVisible={setvisible}\r\n    addNewCategoryVisible={visible}\r\n    categoryDetailData={activeCategoryForEdit}/>}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'postCategoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n          productCountValue: true \r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState); \r\n\r\n  \r\n\r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n  console.log('postCategoryList', categoryState);\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n              Recipe Categories\r\n          </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search recipe categories..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n            Add New\r\n        </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n                placeholder=\"search categories..\"\r\n                size=\"large\"\r\n                onSearch={value => console.log(value)}\r\n                style={{ width: 300 }}\r\n           /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Recipe Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n        {categoryState.done && \r\n          <AddNewPostCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Select, notification, Modal, Tooltip, Upload, message, Spin } from 'antd';\r\n\r\nimport {\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tdisplayOrder: '',\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tsetcategoryDetailData?:any; \r\n    categoryDetailData?:any; \r\n}\r\n\r\nconst AddNewCategory = ({ \r\n    addNewCategoryVisible, \r\n    setAddNewCategoryVisible, \r\n    categoryDetailData, setcategoryDetailData}: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postCategoryUpdate');\r\n\tconst [updateCategoryIconState, handleUpdateCategoryIconFetch] = useHandleFetch({}, 'categoryUpdateIcon');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\t\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryDetailData.id\r\n                    }\r\n                }\r\n            }); \r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryDetailData]);\r\n\r\n\r\n\tconsole.log('MahPostCategory',categoryDetailState)\r\n\tconsole.log('MahPostCategorymyImages',myImages)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailState.done && categoryDetailState.data && Object.keys(categoryDetailState.data).length > 0) {\r\n\t\r\n\t\t\tconst images = categoryDetailState.data.image;\r\n\t\t\tlet mahImages = []; \r\n\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tmahImages = images;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (categoryDetailState.data.cover && categoryDetailState.data.cover['id']) {\r\n\t\t\t\tconst ixists = images.find(item => item.id === categoryDetailState.data.cover['id']);\r\n\t\t\t\tif(!ixists){\r\n\t\t\t\t\tmahImages = [categoryDetailState.data.cover, ...mahImages]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetCoverImageId(categoryDetailState.data.cover['id']);\r\n\t\t\t}\r\n\t\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages(mahImages);\r\n\t\t\t\t\r\n\t\t}\r\n\t}, [categoryDetailState.data]); \r\n\t\r\n\t\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore\r\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\r\n\t\r\n\t\t\tif (coverImageId !== myImages[0].id) {\r\n\t\t\t\tsetCoverImageId(myImages[0].id);\r\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t}, [myImages])\r\n\t\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('displayOrder', values.displayOrder)\r\n\r\n\r\n\t\tconsole.log('categoryDetailData',categoryDetailData); \r\n\t\tconsole.log('imagesIds',imagesIds); \r\n\t\t\r\n\t\t\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\tconst aboutToUpdatedImageIds = []; \r\n\r\n\t\t\tif(imagesIds && imagesIds.length > 0){\r\n\t\t\t\timagesIds.forEach(imageId => {\r\n\t\t\t\t\tif(categoryDetailData && categoryDetailData['postCategory']){\r\n\t\t\t\t\t\tif(!categoryDetailData['image'].includes(imageId)){\r\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n      \r\n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'postCategory',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: aboutToUpdatedImageIds\r\n                    }\r\n                });\r\n            }\r\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: aboutToUpdatedImageIds[0].id,\r\n                            collection: 'postCategory',\r\n                            itemId: categoryDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\t\t}\r\n\t\t\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: categoryDetailData.id\r\n                },\r\n            },\r\n            body: {\r\n                name: values.name && values.name.trim(),\r\n                description: values.description,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                parent: selectedParentId,\r\n                icon: imageFile,\r\n                metaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tdisplayOrder: values.displayOrder,\r\n                metaTags:  tags && tags.length > 0 ?  tags.join(',') : '',\r\n                bn: {\r\n                    metaTitle: values.bnMetaTitle,\r\n                    metaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags:  bnTags && bnTags.length > 0 ?  bnTags.join(',') : '',\r\n                    name: values.bnName && values.bnName.trim(),\r\n                    description: values.bnDescription,\r\n                }\r\n            },\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Updated!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryDetailData({\r\n\t\t\t\t...categoryDetailData,\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes,\r\n\t\t\t});\r\n\t  \r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'postCategory',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'postCategory',\r\n                    itemId: categoryDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Set as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tconst setNewIcon  = async () => {\r\n\t\t\t\tconst formData = new FormData();\r\n\t\t\t\tformData.append('icon',file); \r\n\t\t\t\t// const addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\t\t// \tbody: formData,\r\n\t\t\t\t// });\r\n\t\t\t\tconst res = await handleUpdateCategoryIconFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: formData\r\n\t\t\t\t}); \r\n\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif(res && res.status === 'ok'){\r\n\t\t\t\t\topenSuccessNotification('Category Icon updated!')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\topenErrorNotification(\"Couldn't update category icon, Something went wrong\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t}; \r\n\t\t\t\r\n\t\t\tsetNewIcon();\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const iconUrl = categoryDetailData.icon && categoryDetailData.icon; \r\n\r\n\t\t\tsetImageUrl(iconUrl); \r\n        }\r\n\r\n    },[])\r\n    \r\n    useEffect(()=>{\r\n\r\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\r\n            const metaTags = categoryDetailData.metaTags && categoryDetailData.metaTags.split(','); \r\n\r\n            console.log('localMetaTags',metaTags);\r\n           \r\n            const bnMetaTags = categoryDetailData.bn && categoryDetailData.bn['metaTags'] && categoryDetailData.bn['metaTags'].split(','); \r\n            setTags(metaTags || [])\r\n            setBnTags(bnMetaTags || [])\r\n        }\r\n\r\n    },[])\r\n\r\n\r\n\tconsole.log('addnewCategoryTags',tags);\r\n\tconsole.log('categoryDetailData',categoryDetailData);\r\n\tconsole.log('myImages',myImages);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n                \r\n                { ...initialValues,\r\n                    ...categoryDetailData,\r\n                    ...( categoryDetailData && Object.keys(categoryDetailData).length > 0 && {\r\n                        bnMetaTitle: categoryDetailData['bn']\r\n                        && categoryDetailData['bn'].metaTitle\r\n                        && categoryDetailData['bn'].metaTitle,\r\n                        bnMetaDescription: categoryDetailData['bn'] &&  categoryDetailData['bn'].metaDescription && categoryDetailData['bn'].metaDescription,\r\n                        bnName: categoryDetailData['bn'] && categoryDetailData['bn'].name && categoryDetailData['bn'].name,\r\n                        bnDescription: categoryDetailData['bn'] && categoryDetailData['bn'].description && categoryDetailData['bn'].description,\r\n                    })\r\n                 }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {categoryDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {categoryDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport CategoryEdit from \"./PostCategoryEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\r\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryPostList');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const categoryId = params['id'];\r\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n    const [categoryDetail,setcategoryDetail] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(categoryDetailDataRes){\r\n                  // @ts-ignore\r\n                setcategoryDetail(categoryDetailDataRes)\r\n\r\n            }\r\n\r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryProducts = async () => {\r\n            await handleCategoryProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryProducts();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n    console.log('postcategoryDetail', categoryDetail);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = categoryDetailState.done && categoryDetail && categoryDetail['image'] ? getImagesInCollumn(categoryDetail['image']) : [];\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                   Recipe Category Detail\r\n                </h3>\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <CategoryEdit\r\n                            addNewCategoryVisible={categoryEditVisible}\r\n                            setAddNewCategoryVisible={setCategoryEditVisible}\r\n                            categoryDetailData={categoryDetail}\r\n                            setcategoryDetailData={setcategoryDetail}\r\n\r\n                        />\r\n\r\n                        <Button\r\n                            onClick={() => setCategoryEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={categoryDetailState.isLoading}>\r\n                {categoryDetailState.done && categoryDetail && !(Object.keys(categoryDetail).length > 0) && (\r\n                    <Empty description='No Recipe category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                                <img src={categoryDetail['cover'] && categoryDetail['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {categoryDetail['name']}\r\n                                </h2>\r\n                                <h3>\r\n                                    {categoryDetail['description']}\r\n                                </h3>\r\n                          \r\n                                {categoryDetail['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {categoryDetail['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {categoryDetail['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                                    </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img \r\n                                                            alt='..'\r\n                                                            src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipes\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No recipes exists in this category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n\r\n                            size='small'\r\n                            dataSource={categoryProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            \r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/posts/${record.id}`)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/posts/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n\r\n\r\n                <Column\r\n                    title=\"Preparation Time\"\r\n                    dataIndex=\"preparationTime\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Cooking Time\"\r\n                    dataIndex=\"cookingTime\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                \r\n                <Column\r\n                    title=\"People\"\r\n                    dataIndex=\"servingSize\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n\r\n            \r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React from 'react'\r\nimport { DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\ninterface Props {\r\n    onChange: any;\r\n    label?: string;\r\n    withTime?: boolean;\r\n    placeholder?: string;\r\n    date?: string;\r\n    time?: string;\r\n}\r\n\r\n\r\nconst DatePickerComponent = ({ onChange, label, withTime, placeholder, date, time }: Props) => {\r\n    function disabledDate(current) {\r\n        // Can not select days before today and today\r\n        return current && current < moment(date) && current > moment(date);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='inputFieldLabel'>{label}</h3>\r\n\r\n            {withTime ? <DatePicker\r\n                format=\"YYYY-MM-DD HH:mm:ss\"\r\n                className='inputclassName'\r\n                placeholder={placeholder}\r\n                style={{\r\n                    width: \"100%\",\r\n                    borderColor: \"#eee\"\r\n                }}\r\n\r\n\r\n                onChange={onChange}\r\n                {...(time && {\r\n                    defaultValue: moment(time),\r\n                })}\r\n            />\r\n                : (\r\n                    <DatePicker\r\n\r\n                        placeholder={placeholder}\r\n                        className='inputclassName'\r\n                        style={{\r\n                            width: \"100%\",\r\n                            borderColor: \"#eee\"\r\n                        }}\r\n                        onChange={onChange}\r\n                        {...(date && {\r\n                            defaultValue: moment(date),\r\n                        })}\r\n                    />\r\n                )}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DatePickerComponent\r\n\r\n\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction range(start, end) {\r\n    const result = [];\r\n    for (let i = start; i < end; i++) {\r\n        result.push(i);\r\n    }\r\n    return result;\r\n}\r\n\r\n// function disabledDate(current) {\r\n//   // Can not select days before today and today\r\n//   return current && current < moment().endOf('day');\r\n// }\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n  Form,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  //   firstName: Yup.string()\r\n  //     .label('First name')\r\n  //     .required()\r\n  //     .min(2, 'First name must have at least 2 characters '),\r\n  //   lastName: Yup.string()\r\n  //     .label('Lastname')\r\n  //     .required()\r\n  //     .min(2, 'Last name must have at least 2 characters '),\r\n  //   phone: Yup.string()\r\n  //     .required('Please tell us your mobile number.')\r\n  //     .max(13, 'Please enter a valid mobile number.'),\r\n  //   password: Yup.string()\r\n  //     .label('Password')\r\n  //     .required()\r\n  //     .min(6, 'Password must have at least 6 characters'),\r\n  //   address1: Yup.string()\r\n  //     .label('Address line 1')\r\n  //     .required()\r\n  //     .min(3, 'Address line 1 must have at least 3 characters '),\r\n  //   email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\nconst initialValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  address: '',\r\n  salary: null,\r\n  designation: '',\r\n  fatherName: '',\r\n  motherName: '',\r\n  NID: '',\r\n  phone: '',\r\n  email: '',\r\n  additionalInfo: '',\r\n  joiningDate: '',\r\n};\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Staff Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  customerList?: any;\r\n  setCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  customerList,\r\n  setCustomerList,\r\n}: Props) => {\r\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'addStaff'\r\n  );\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n  const [time, setTimeFeild] = useState('');\r\n\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addCustomerRes = await handleAddCustomerFetch({\r\n      body: {\r\n        phone: values.phone,\r\n        email: values.email,\r\n        password: values.password,\r\n        address: values.address,\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        additionalInfo: values.additionalInfo,\r\n        NID: values.NID,\r\n        fatherName: values.fatherName,\r\n        motherName: values.motherName,\r\n        salary: values.salary,\r\n        designation: values.designation,\r\n        joiningDate: time,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setCustomerList([\r\n        {\r\n          id: addCustomerRes['_id'] || '',\r\n          key: addCustomerRes['_id'] || '',\r\n          // @ts-ignore\r\n          ...addCustomerRes,\r\n        },\r\n        ...customerList,\r\n      ]);\r\n\r\n      setAddNewCategoryVisible(false);\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addCustomerState['isLoading']) {\r\n      const error = addCustomerState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addCustomerState['isLoading'] &&\r\n      Object.keys(addCustomerState.data).length > 0\r\n    ) {\r\n      if (addCustomerState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addCustomerState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !isValid ||\r\n      !values.firstName ||\r\n      !values.lastName ||\r\n      !values.password ||\r\n      !values.phone ||\r\n      !values.address1\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  console.log('cityListState', cityListState);\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n            title='Add New Staff'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='First Name'\r\n                  value={values.firstName}\r\n                  name='firstName'\r\n                  isError={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('firstName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Last Name'\r\n                  value={values.lastName}\r\n                  name='lastName'\r\n                  isError={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('lastName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Designation'\r\n                  value={values.designation}\r\n                  name='designation'\r\n                  isError={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  errorString={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('designation');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  min={0}\r\n                  type={'number'}\r\n                  label='Salary'\r\n                  value={values.salary}\r\n                  name='salary'\r\n                  isError={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  errorString={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('salary');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Phone'\r\n                  value={values.phone}\r\n                  name='phone'\r\n                  isError={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  errorString={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('phone');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='NID'\r\n                  value={values.NID}\r\n                  name='NID'\r\n                  isError={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  errorString={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('NID');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Father Name'\r\n                  value={values.fatherName}\r\n                  name='fatherName'\r\n                  isError={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('fatherName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Mother Name'\r\n                  value={values.motherName}\r\n                  name='motherName'\r\n                  isError={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('motherName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Email'\r\n                  value={values.email}\r\n                  name='email'\r\n                  isError={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  errorString={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('email');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <DatePicker\r\n                  date={time}\r\n                  placeholder='10/20/2020'\r\n                  label='joining Date'\r\n                  onChange={handleTimeChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Address'\r\n                  value={values.address}\r\n                  name='address'\r\n                  isError={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  errorString={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('address');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Additional Info'\r\n                  value={values.additionalInfo}\r\n                  name='additionalInfo'\r\n                  isError={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  errorString={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('additionalInfo');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewCategory;\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n  Form,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  //   firstName: Yup.string()\r\n  //     .label('First name')\r\n  //     .required()\r\n  //     .min(2, 'First name must have at least 2 characters '),\r\n  //   lastName: Yup.string()\r\n  //     .label('Lastname')\r\n  //     .required()\r\n  //     .min(2, 'Last name must have at least 2 characters '),\r\n  //   phone: Yup.string()\r\n  //     .required('Please tell us your mobile number.')\r\n  //     .max(13, 'Please enter a valid mobile number.'),\r\n  //   password: Yup.string()\r\n  //     .label('Password')\r\n  //     .required()\r\n  //     .min(6, 'Password must have at least 6 characters'),\r\n  //   address1: Yup.string()\r\n  //     .label('Address line 1')\r\n  //     .required()\r\n  //     .min(3, 'Address line 1 must have at least 3 characters '),\r\n  //   email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\nconst initialValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  address: '',\r\n  salary: null,\r\n  designation: '',\r\n  fatherName: '',\r\n  motherName: '',\r\n  NID: '',\r\n  phone: '',\r\n  email: '',\r\n  additionalInfo: '',\r\n  joiningDate: '',\r\n};\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Staff Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  customerList?: any;\r\n  setCustomerList?: any;\r\n  customer?: any;\r\n}\r\n\r\nconst StaffQuickEdit = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  customerList,\r\n  setCustomerList,\r\n  customer,\r\n}: Props) => {\r\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'updateStaff'\r\n  );\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n  const [time, setTimeFeild] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (customer && Object.keys(customer).length > 0) {\r\n      setTimeFeild(customer['joiningDate']);\r\n    }\r\n  }, [customer]);\r\n\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [cityList, setCityList] = useState([]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addCustomerRes = await handleAddCustomerFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: customer.id,\r\n        },\r\n      },\r\n      body: {\r\n        phone: values.phone,\r\n        email: values.email,\r\n        address: values.address,\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        additionalInfo: values.additionalInfo,\r\n        NID: values.NID,\r\n        fatherName: values.fatherName,\r\n        motherName: values.motherName,\r\n        salary: values.salary,\r\n        designation: values.designation,\r\n        joiningDate: time,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      console.log('addCustomerREes', addCustomerRes);\r\n      const positionInTag = () => {\r\n        return customerList.map((item) => item.id).indexOf(customer.id);\r\n      };\r\n\r\n      const index = positionInTag();\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, customerList[index], {\r\n        ...addCustomerRes,\r\n        name: addCustomerRes.firstName + ' ' + addCustomerRes.lastName,\r\n      });\r\n\r\n      console.log('updatedItemaddCustomerREes', addCustomerRes);\r\n\r\n      const updateTagList = [\r\n        ...customerList.slice(0, index),\r\n        updatedItem,\r\n        ...customerList.slice(index + 1),\r\n      ];\r\n\r\n      console.log('updatedItemadUpdatedList', updateTagList);\r\n\r\n      setCustomerList(updateTagList);\r\n\r\n      setAddNewCategoryVisible(false);\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addCustomerState['isLoading']) {\r\n      const error = addCustomerState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addCustomerState['isLoading'] &&\r\n      Object.keys(addCustomerState.data).length > 0\r\n    ) {\r\n      if (addCustomerState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addCustomerState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !isValid ||\r\n      !values.firstName ||\r\n      !values.lastName ||\r\n      !values.password ||\r\n      !values.phone ||\r\n      !values.address1\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  console.log('cityListState', cityListState);\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...customer }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n            title='Add New Staff'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='First Name'\r\n                  value={values.firstName}\r\n                  name='firstName'\r\n                  isError={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('firstName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Last Name'\r\n                  value={values.lastName}\r\n                  name='lastName'\r\n                  isError={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('lastName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Designation'\r\n                  value={values.designation}\r\n                  name='designation'\r\n                  isError={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  errorString={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('designation');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  min={0}\r\n                  type={'number'}\r\n                  label='Salary'\r\n                  value={values.salary}\r\n                  name='salary'\r\n                  isError={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  errorString={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('salary');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Phone'\r\n                  value={values.phone}\r\n                  name='phone'\r\n                  isError={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  errorString={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('phone');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='NID'\r\n                  value={values.NID}\r\n                  name='NID'\r\n                  isError={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  errorString={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('NID');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Father Name'\r\n                  value={values.fatherName}\r\n                  name='fatherName'\r\n                  isError={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('fatherName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Mother Name'\r\n                  value={values.motherName}\r\n                  name='motherName'\r\n                  isError={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('motherName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Email'\r\n                  value={values.email}\r\n                  name='email'\r\n                  isError={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  errorString={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('email');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <DatePicker\r\n                  date={time}\r\n                  placeholder='10/20/2020'\r\n                  label='joining Date'\r\n                  onChange={handleTimeChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Address'\r\n                  value={values.address}\r\n                  name='address'\r\n                  isError={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  errorString={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('address');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Additional Info'\r\n                  value={values.additionalInfo}\r\n                  name='additionalInfo'\r\n                  isError={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  errorString={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('additionalInfo');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default StaffQuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { CSVLink } from 'react-csv';\r\n\r\nimport {\r\n  Table,\r\n  Badge,\r\n  Menu,\r\n  Dropdown,\r\n  notification,\r\n  Space,\r\n  Tag,\r\n  Button,\r\n  Input,\r\n  Tooltip,\r\n  Modal,\r\n  Popconfirm,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EditFilled,\r\n  CheckCircleOutlined,\r\n  DownloadOutlined,\r\n} from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\nimport moment from 'moment';\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport AddNewStaff from './AddNewStaff';\r\nimport QuickEdit from './QuickEdit';\r\nimport Empty from '../../components/Empty';\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Staffs Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setCustomerList?: any;\r\n}\r\n\r\nconst MyTable = ({ data, setCustomerList }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'deleteStaff'\r\n  );\r\n  const handleDeleteCustomer = async (id) => {\r\n    const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteCustomerRes && deleteCustomerRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Staffs');\r\n      const newCustomerList = data.filter((item) => item.id !== id);\r\n      setCustomerList(newCustomerList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/staff/${record.id}`);\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Phone'\r\n          dataIndex='phone'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Designation'\r\n          dataIndex='designation'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Salary'\r\n          dataIndex='salary'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Joined'\r\n          dataIndex='joiningDate'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm a')}</h5>\r\n            </Space>\r\n          )}\r\n        />\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <a href='##'>\r\n                <Tooltip placement='top' title='Edit Staff'>\r\n                  <span\r\n                    className='iconSize'\r\n                    onClick={() => {\r\n                      setvisible(true);\r\n                      setactiveCategoryForEdit(record);\r\n                    }}\r\n                  >\r\n                    <EditOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteCustomer(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          customerList={data}\r\n          setCustomerList={setCustomerList}\r\n          setAddNewCategoryVisible={setvisible}\r\n          addNewCategoryVisible={visible}\r\n          customer={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst CustomerList = ({ history }: Props) => {\r\n  const [customerList, setCustomerList] = useState([]);\r\n\r\n  const [customerState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'staffList'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const customers = await handleCustomerListFetch({});\r\n      // @ts-ignore\r\n      setCustomerList(customers);\r\n    };\r\n    setCustomers();\r\n  }, []);\r\n\r\n  const handleSearch = (value) => {\r\n    if (customerState.data.length > 0) {\r\n      const newCustomerList = customerState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setCustomerList(newCustomerList);\r\n    }\r\n  };\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  // console.log('customerState',customerState)\r\n\r\n  const headers = [\r\n    { label: 'Name', key: 'name' },\r\n    { label: 'Phone', key: 'phone' },\r\n    { label: 'Designation', key: 'designation' },\r\n    { label: 'Salary', key: 'salary' },\r\n    { label: 'joined', key: 'joiningDate' },\r\n  ];\r\n\r\n  const getData = () => {\r\n    if (customerList && customerList.length > 0) {\r\n      const csvData = customerList.map((item) => {\r\n        return {\r\n          name: item.name,\r\n          phone: item.phone,\r\n          designation: item.designation,\r\n          salary: item.salary,\r\n          joiningDate: item.joiningDate\r\n            ? moment(item.joiningDate).format('MMMM Do YYYY, h:mm a')\r\n            : '',\r\n        };\r\n      });\r\n\r\n      return csvData;\r\n    } else return [];\r\n  };\r\n\r\n  const data = getData();\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>Staffs</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search staffs..'\r\n              onSearch={(value) => handleSearch(value)}\r\n              // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            {customerList && customerList.length > 0 && (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    marginRight: '25px',\r\n                  }}\r\n                >\r\n                  <CSVLink\r\n                    filename={'staff-list.csv'}\r\n                    data={data}\r\n                    headers={headers}\r\n                  >\r\n                    Export as csv\r\n                  </CSVLink>\r\n                  <span\r\n                    style={{\r\n                      color: '#1890ff',\r\n                      marginLeft: '10px',\r\n                    }}\r\n                  >\r\n                    <DownloadOutlined />\r\n                  </span>\r\n                </div>\r\n              </>\r\n            )}\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => setAddNewCategoryVisible(true)}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {customerState.done && customerList.length > 0 && (\r\n            <MyTable setCustomerList={setCustomerList} data={customerList} />\r\n          )}\r\n          {customerState.isLoading && <DataTableSkeleton />}\r\n          {customerState.done && !(customerList.length > 0) && (\r\n            <Empty title='No Staff found' />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {customerState.done && (\r\n        <AddNewStaff\r\n          setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","// @ts-nocheck\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Empty,\r\n  Form,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\n\r\nconst { Option } = Select;\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst initialValues = {\r\n  firstName: '',\r\n  lastName: '',\r\n  address: '',\r\n  salary: null,\r\n  designation: '',\r\n  fatherName: '',\r\n  motherName: '',\r\n  NID: '',\r\n  phone: '',\r\n  email: '',\r\n  additionalInfo: '',\r\n  joiningDate: '',\r\n};\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Staff Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible: any;\r\n  setAddNewCategoryVisible: any;\r\n  setCustomer?: any;\r\n  customer?: any;\r\n}\r\n\r\nconst StaffQuickEdit = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  customer,\r\n  setCustomer,\r\n}: Props) => {\r\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\r\n    {},\r\n    'updateStaff'\r\n  );\r\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n  const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n  const [countryOptions, setcountryOptions] = useState([]);\r\n  const [cityOptions, setcityOptions] = useState([]);\r\n\r\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n    [],\r\n    'countryList'\r\n  );\r\n\r\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n  const [time, setTimeFeild] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (customer && Object.keys(customer).length > 0) {\r\n      setTimeFeild(customer['joiningDate']);\r\n    }\r\n  }, [customer]);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addCustomerRes = await handleAddCustomerFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: customer.id,\r\n        },\r\n      },\r\n      body: {\r\n        phone: values.phone,\r\n        email: values.email,\r\n        password: values.password,\r\n        address: values.address,\r\n        firstName: values.firstName,\r\n        lastName: values.lastName,\r\n        additionalInfo: values.additionalInfo,\r\n        NID: values.NID,\r\n        fatherName: values.fatherName,\r\n        motherName: values.motherName,\r\n        salary: values.salary,\r\n        designation: values.designation,\r\n        joiningDate: time,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setCustomer({\r\n        ...addCustomerRes,\r\n        name: addCustomerRes.firstName + ' ' + addCustomerRes.lastName,\r\n      });\r\n\r\n      setAddNewCategoryVisible(false);\r\n      actions.resetForm();\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addCustomerState['isLoading']) {\r\n      const error = addCustomerState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (\r\n      !addCustomerState['isLoading'] &&\r\n      Object.keys(addCustomerState.data).length > 0\r\n    ) {\r\n      if (addCustomerState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addCustomerState]);\r\n\r\n  const onChangeCity = (value) => {\r\n    setselectedCityValue(value);\r\n  };\r\n\r\n  const onChangeCountry = (value) => {\r\n    setselectedCountryValue(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const setCountries = async () => {\r\n      const CountryListRes = await handleCountryListFetch({});\r\n\r\n      // @ts-ignore\r\n      if (CountryListRes && CountryListRes.length > 0) {\r\n        // @ts-ignore\r\n        const countryOptions = CountryListRes.map((country) => {\r\n          return {\r\n            value: country.name,\r\n            name: country.name,\r\n          };\r\n        });\r\n        setcountryOptions(countryOptions);\r\n      }\r\n    };\r\n\r\n    setCountries();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const setCities = async () => {\r\n      const cityListRes = await handleCityListFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            country: selectedCountryValue,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (cityListRes && cityListRes.length > 0) {\r\n        // @ts-ignore\r\n        const cityOptions = cityListRes.map((city) => {\r\n          return {\r\n            value: city.name,\r\n            name: city.name,\r\n          };\r\n        });\r\n        setcityOptions(cityOptions);\r\n      }\r\n    };\r\n\r\n    setCities();\r\n  }, [selectedCountryValue]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (\r\n      !isValid ||\r\n      !values.firstName ||\r\n      !values.lastName ||\r\n      !values.password ||\r\n      !values.phone ||\r\n      !values.address1\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  console.log('cityListState', cityListState);\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...customer }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n            title='Add New Staff'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='First Name'\r\n                  value={values.firstName}\r\n                  name='firstName'\r\n                  isError={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.firstName && errors.firstName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['firstName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('firstName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Last Name'\r\n                  value={values.lastName}\r\n                  name='lastName'\r\n                  isError={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.lastName && errors.lastName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['lastName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('lastName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Designation'\r\n                  value={values.designation}\r\n                  name='designation'\r\n                  isError={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  errorString={\r\n                    (touched.designation && errors.designation) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['designation'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('designation');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  min={0}\r\n                  type={'number'}\r\n                  label='Salary'\r\n                  value={values.salary}\r\n                  name='salary'\r\n                  isError={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  errorString={\r\n                    (touched.salary && errors.salary) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('salary');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Phone'\r\n                  value={values.phone}\r\n                  name='phone'\r\n                  isError={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  errorString={\r\n                    (touched.phone && errors.phone) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('phone');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='NID'\r\n                  value={values.NID}\r\n                  name='NID'\r\n                  isError={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  errorString={\r\n                    (touched.NID && errors.NID) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('NID');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Father Name'\r\n                  value={values.fatherName}\r\n                  name='fatherName'\r\n                  isError={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.fatherName && errors.fatherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['fatherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('fatherName');\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Mother Name'\r\n                  value={values.motherName}\r\n                  name='motherName'\r\n                  isError={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  errorString={\r\n                    (touched.motherName && errors.motherName) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['motherName'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('motherName');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Email'\r\n                  value={values.email}\r\n                  name='email'\r\n                  isError={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  errorString={\r\n                    (touched.email && errors.email) ||\r\n                    (!isSubmitting && addCustomerState.error['error']['email'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('email');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <DatePicker\r\n                  date={time}\r\n                  placeholder='10/20/2020'\r\n                  label='joining Date'\r\n                  onChange={handleTimeChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='dubbleRowInputs'>\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Address'\r\n                  value={values.address}\r\n                  name='address'\r\n                  isError={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  errorString={\r\n                    (touched.address && errors.address) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['address'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('address');\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className='dubbleRowInputs__item'>\r\n                <Input\r\n                  label='Additional Info'\r\n                  value={values.additionalInfo}\r\n                  name='additionalInfo'\r\n                  isError={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  errorString={\r\n                    (touched.additionalInfo && errors.additionalInfo) ||\r\n                    (!isSubmitting &&\r\n                      addCustomerState.error['error']['additionalInfo'])\r\n                  }\r\n                  onChange={(e: any) => {\r\n                    handleChange(e);\r\n                    setFieldTouched('additionalInfo');\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default StaffQuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport StaffEdit from './StaffEdit';\r\nimport moment from 'moment';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'staffDetail'\r\n  );\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'tagProducts'\r\n  );\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n  const params = useParams();\r\n  const tagId = params['id'];\r\n  const [customerDetail, setCustomerDetail] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const res = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (res) {\r\n        // @ts-ignore\r\n        setCustomerDetail(res);\r\n      }\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('tagProductsState', tagProductsState);\r\n\r\n  console.log('brandParams', params);\r\n  console.log('staffDetail', tagDetailState);\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Staff Detail</h3>\r\n\r\n        {tagDetailState.done &&\r\n          customerDetail &&\r\n          Object.keys(customerDetail).length > 0 && (\r\n            <>\r\n              <StaffEdit\r\n                addNewCategoryVisible={tagEditVisible}\r\n                setAddNewCategoryVisible={setTagEditVisible}\r\n                customer={customerDetail}\r\n                setCustomer={setCustomerDetail}\r\n              />\r\n              <Button\r\n                onClick={() => setTagEditVisible(true)}\r\n                type='link'\r\n                icon={<EditOutlined />}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          customerDetail &&\r\n          !(Object.keys(customerDetail).length > 0) && (\r\n            <Empty\r\n              description='No Staffs found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          customerDetail &&\r\n          Object.keys(customerDetail).length > 0 && (\r\n            <div className='brandDetailContainer__header'>\r\n              <div className='brandDetailContainer__header-info'>\r\n                <h2>{customerDetail['name']}</h2>\r\n                <h3>{customerDetail['description']}</h3>\r\n                {customerDetail['designation'] && (\r\n                  <h3>\r\n                    DESIGNATION:\r\n                    <span>{customerDetail['designation']}</span>\r\n                  </h3>\r\n                )}\r\n                {customerDetail['salary'] && (\r\n                  <h3>\r\n                    SALARY:\r\n                    <span>{customerDetail['salary']}</span>\r\n                  </h3>\r\n                )}\r\n\r\n                {customerDetail['NID'] && (\r\n                  <h3>\r\n                    NID:\r\n                    <span>{customerDetail['NID']}</span>\r\n                  </h3>\r\n                )}\r\n\r\n                {customerDetail['joiningDate'] && (\r\n                  <h3>\r\n                    JOINED:\r\n                    <span>\r\n                      {customerDetail['joiningDate'] &&\r\n                        moment(customerDetail['joiningDate']).format(\r\n                          'MMMM Do YYYY, h:mm a'\r\n                        )}\r\n                    </span>\r\n                  </h3>\r\n                )}\r\n\r\n                {customerDetail['fatherName'] && (\r\n                  <h3>\r\n                    FATHER'S NAME:\r\n                    <span>{customerDetail['fatherName']}</span>\r\n                  </h3>\r\n                )}\r\n                {customerDetail['motherName'] && (\r\n                  <h3>\r\n                    MOTHER'S NAME:\r\n                    <span>{customerDetail['motherName']}</span>\r\n                  </h3>\r\n                )}\r\n\r\n                {customerDetail['phone'] && (\r\n                  <h3>\r\n                    PHONE:\r\n                    <span>{customerDetail['phone']}</span>\r\n                  </h3>\r\n                )}\r\n                {customerDetail['email'] && (\r\n                  <h3>\r\n                    EMAIL:\r\n                    <span>{customerDetail['email']}</span>\r\n                  </h3>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n      </Skeleton>\r\n\r\n      {/* <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orderss exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewBrandDetail;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\n// import components\r\nimport Empty from '../../../components/Empty';\r\n\r\n// import libraries\r\nimport { Select, Button, Spin } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n  setBrandId?: any;\r\n  brandId?: any;\r\n  brandState?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId, brandId, brandState }: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedBrandId, setSelectedBrandId] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (brandState.done && brandState.data && brandState.data.length > 0) {\r\n      const brandOptions = brandState.data.map((brand) => {\r\n        return {\r\n          value: brand.id,\r\n          name: brand.name,\r\n        };\r\n      });\r\n      setoptions(brandOptions);\r\n    } else {\r\n      setoptions([]);\r\n    }\r\n  }, [brandState]);\r\n\r\n  function onChange(value) {\r\n    setSelectedBrandId(value);\r\n    setBrandId(value);\r\n    // console.log(`selected ${value}`);\r\n  }\r\n\r\n  function onBlur() {\r\n    // console.log('blur');\r\n  }\r\n\r\n  function onFocus() {\r\n    // console.log('focus');\r\n  }\r\n\r\n  function onSearch(val) {\r\n    // console.log('search:', val);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div></div>\r\n\r\n      {brandState.isLoading && (\r\n        <div\r\n          style={{\r\n            padding: '15px 0',\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n      {brandState.done && !(brandState.data.length > 0) && (\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Empty title='No Staff found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n      {brandState.done &&\r\n        brandState.data &&\r\n        brandState.data.length > 0 &&\r\n        options.length > 0 && (\r\n          <Select\r\n            showSearch\r\n            style={{ width: '100%', borderRadius: '6px' }}\r\n            placeholder='Select a Staff'\r\n            optionFilterProp='children'\r\n            onChange={onChange}\r\n            onFocus={onFocus}\r\n            onBlur={onBlur}\r\n            onSearch={onSearch}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n            }\r\n          >\r\n            {brandState.done &&\r\n              brandState.data.length > 0 &&\r\n              options.map((option) => {\r\n                return <Option value={option.value}>{option.name}</Option>;\r\n              })}\r\n          </Select>\r\n        )}\r\n\r\n      {/* \r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Tooltip } from 'antd';\r\n\r\nimport InputSmall from '../../../components/Field/InputSmall';\r\n\r\n// import comp;onent\r\nimport Sfaffid from './Sfaffid';\r\n\r\nimport { useFetch } from '../../../hooks';\r\nimport {\r\n  DeleteOutlined,\r\n  FileAddOutlined,\r\n  FileImageFilled,\r\n  PlusOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem, brandState }) => {\r\n  const [brandId, setBrandId] = useState('');\r\n\r\n  const handleComponentItemsChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    const updatedValue = {\r\n      ...componentItem,\r\n      [name]: value,\r\n      id: componentItem.id,\r\n    };\r\n\r\n    const positionInAttribute = () => {\r\n      return itemsList.map((item) => item.id).indexOf(componentItem.id);\r\n    };\r\n\r\n    const index = positionInAttribute();\r\n\r\n    const updateAttributeList = [\r\n      ...itemsList.slice(0, index),\r\n      updatedValue,\r\n      ...itemsList.slice(index + 1),\r\n    ];\r\n    setItemsList(updateAttributeList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const updatedValue = {\r\n      ...componentItem,\r\n      _id: brandId,\r\n      id: componentItem.id,\r\n    };\r\n\r\n    const positionInAttribute = () => {\r\n      return itemsList.map((item) => item.id).indexOf(componentItem.id);\r\n    };\r\n\r\n    const index = positionInAttribute();\r\n\r\n    const updateAttributeList = [\r\n      ...itemsList.slice(0, index),\r\n      updatedValue,\r\n      ...itemsList.slice(index + 1),\r\n    ];\r\n    setItemsList(updateAttributeList);\r\n  }, [brandId]);\r\n\r\n  const handleAttributeDelete = () => {\r\n    const updateComponentList = itemsList.filter(\r\n      (item) => item.id !== componentItem.id\r\n    );\r\n    setItemsList(updateComponentList);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='componentItemsContainer__item'>\r\n        <h3 className='inputFieldLabel-small'>Staff</h3>\r\n        <Sfaffid\r\n          brandState={brandState}\r\n          brandId={brandId}\r\n          setBrandId={setBrandId}\r\n        />\r\n        <div\r\n          style={{\r\n            marginTop: '10px',\r\n          }}\r\n        ></div>\r\n        <InputSmall\r\n          type='number'\r\n          label='Bonus'\r\n          value={componentItem.title}\r\n          name='bonus'\r\n          onChange={handleComponentItemsChange}\r\n        />\r\n        <InputSmall\r\n          type='number'\r\n          label='Convince'\r\n          value={componentItem.text}\r\n          name='convince'\r\n          onChange={handleComponentItemsChange}\r\n        />\r\n\r\n        <InputSmall\r\n          type='number'\r\n          label='Extra'\r\n          value={componentItem.target}\r\n          name='extra'\r\n          onChange={handleComponentItemsChange}\r\n        />\r\n\r\n        <InputSmall\r\n          type='number'\r\n          label='Negative'\r\n          value={componentItem.target}\r\n          name='negative'\r\n          onChange={handleComponentItemsChange}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from '../../../components/MediaLibrary';\r\nimport ComponentItem from './ComponentItem';\r\nimport { DatePicker } from 'antd';\r\nimport moment from 'moment';\r\nconst validationSchema = Yup.object().shape({\r\n  // groupName: Yup.string()\r\n  //   .label('Name')\r\n  //   .required('Name is required')\r\n  //   .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Salary report Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  groupName: '',\r\n  items: [],\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  componentList?: any;\r\n  setComponentList?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  componentList,\r\n  setComponentList,\r\n}: Props) => {\r\n  const [addComponentState, handleAddComponentFetch] = useHandleFetch(\r\n    {},\r\n    'generateSalaryReport'\r\n  );\r\n\r\n  const [brandState, handleTagListFetch] = useHandleFetch({}, 'staffList');\r\n\r\n  useEffect(() => {\r\n    const setBrands = async () => {\r\n      const brandListRes = await handleTagListFetch({});\r\n    };\r\n    setBrands();\r\n  }, []);\r\n\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [itemsList, setItemsList] = useState([]);\r\n  const [time, setTimeFeild] = useState('');\r\n  const [month, setMonthFeild] = useState('');\r\n\r\n  console.log('salaryReportItemList', itemsList);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const convertedYear = month ? month.split('-')[0] : '';\r\n    const convertedMonth = month\r\n      ? month.split('-')[1] &&\r\n        month.split('-')[1][0] &&\r\n        month.split('-')[1][0] === '0'\r\n        ? month.split('-')[1][1]\r\n        : month.split('-')[1]\r\n      : '';\r\n    const convertedStaffs =\r\n      itemsList && itemsList.length > 0\r\n        ? itemsList.map((item) => {\r\n            return {\r\n              ...item,\r\n              bonus: item.bonus ? +item.bonus : 0,\r\n              convince: item.convince ? +item.convince : 0,\r\n              extra: item.extra ? +item.extra : 0,\r\n              negative: item.negative ? +item.negative : 0,\r\n              id: `${itemsList.length}`,\r\n            };\r\n          })\r\n        : [];\r\n    const data = {\r\n      month: convertedMonth ? +convertedMonth : '',\r\n      year: convertedYear ? +convertedYear : '',\r\n      staff: convertedStaffs,\r\n    };\r\n    const addComponentRes = await handleAddComponentFetch({\r\n      body: data,\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addComponentRes && addComponentRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      setComponentList([\r\n        {\r\n          id: addComponentRes['_id'] || '',\r\n          key: addComponentRes['_id'] || '',\r\n          // @ts-ignore\r\n          ...addComponentRes,\r\n        },\r\n        ...componentList,\r\n      ]);\r\n      actions.resetForm();\r\n      setItemsList([]);\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addComponentState['isLoading']) {\r\n      const error = addComponentState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }, [addComponentState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.groupName) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleAddComponentItem = () => {\r\n    setItemsList([\r\n      ...itemsList,\r\n      {\r\n        _id: '',\r\n        bonus: null,\r\n        convince: null,\r\n        extra: null,\r\n        negative: null,\r\n        id: `${itemsList.length}`,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  const handleMonthChange = (date, dateString) => {\r\n    setMonthFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Component'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              // disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n            width={'50vw'}\r\n            bodyStyle={{\r\n              margin: '0',\r\n              padding: '10px',\r\n            }}\r\n          >\r\n            <h3 className='inputFieldLabel'>Time</h3>\r\n            <DatePicker\r\n              picker='month'\r\n              placeholder={'2020, Jan'}\r\n              className='inputclassName'\r\n              style={{\r\n                width: '100%',\r\n                borderColor: '#eee',\r\n              }}\r\n              onChange={handleMonthChange}\r\n              {...(month && {\r\n                defaultValue: moment(month),\r\n              })}\r\n            />\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n            <h3 className='inputFieldLabel'>Staffs</h3>\r\n\r\n            <div className='componentItemsContainer'>\r\n              {itemsList.map((itemComponent) => {\r\n                return (\r\n                  <ComponentItem\r\n                    brandState={brandState}\r\n                    componentItem={itemComponent}\r\n                    itemsList={itemsList}\r\n                    setItemsList={setItemsList}\r\n                  />\r\n                );\r\n              })}\r\n\r\n              <Button\r\n                size='small'\r\n                onClick={handleAddComponentItem}\r\n                style={{\r\n                  width: '290px',\r\n                  minHeight: '145px',\r\n                  marginTop: '0px',\r\n                  borderRadius: '8px',\r\n                }}\r\n                type='dashed'\r\n                icon={<PlusOutlined />}\r\n              >\r\n                Add Staff\r\n              </Button>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '20px',\r\n              }}\r\n            />\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport moment from 'moment';\r\nimport { CSVLink } from 'react-csv';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n  DownloadOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../../hooks';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from '../../../components/Placeholders';\r\nimport AddNewExpense from './AddNewSalaryReport';\r\n\r\nconst months = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n];\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Expense Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\r\n    {},\r\n    'deleteSalaryReport'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteTag = async (id) => {\r\n    const deleteTagRes = await handleDeleteTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Salary report');\r\n      const newtagList = data.filter((item) => item.id !== id);\r\n      setTagList(newtagList);\r\n    }\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Year'\r\n          dataIndex='year'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/salaryReport/${record.id}`);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Month'\r\n          dataIndex='month'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/salaryReport/${record.id}`);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text && months[text]}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Total Salary'\r\n          dataIndex='totalSalary'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Total Bonus'\r\n          dataIndex='totalBonus'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Total Extra'\r\n          dataIndex='totalExtra'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Total Convince'\r\n          dataIndex='totalConvince'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteTag(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst TagList = ({}: Props) => {\r\n  const [tagList, setTagList] = useState([]);\r\n\r\n  console.log('salaryReport4', tagList);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'getSalaryReport');\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tags = await handleTagListFetch({});\r\n      // @ts-ignore\r\n      setTagList(tags);\r\n    };\r\n    setTags();\r\n  }, []);\r\n\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setTagList([\r\n        ...tagList,\r\n        {\r\n          id: addTagRes['id'] || '',\r\n          key: addTagRes['id'] || '',\r\n          name: addTagRes['name'] || '',\r\n          description: addTagRes['description'] || '',\r\n        },\r\n      ]);\r\n      actions.resetForm();\r\n    }\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    if (tagState.data.length > 0) {\r\n      const newTagList = tagState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setTagList(newTagList);\r\n    }\r\n  };\r\n\r\n  const headers = [\r\n    { label: 'Year', key: 'year' },\r\n    { label: 'Month', key: 'month' },\r\n    { label: 'Total Salary', key: 'totalSalary' },\r\n    { label: 'Total Bonus', key: 'totalBonus' },\r\n    { label: 'Total Convince', key: 'totalConvince' },\r\n    { label: 'Total Extra', key: 'totalExtra' },\r\n    { label: 'Total Negative', key: 'totalNegative' },\r\n  ];\r\n\r\n  const getData = () => {\r\n    if (tagList && tagList.length > 0) {\r\n      const csvData = tagList.map((item) => {\r\n        return {\r\n          year: item.year,\r\n          month: item.month ? months[item.month] : '',\r\n          totalSalary: item.totalSalary,\r\n          totalBonus: item.totalBonus,\r\n          totalConvince: item.totalConvince,\r\n          totalExtra: item.totalExtra,\r\n          totalNegative: item.totalNegative,\r\n        };\r\n      });\r\n\r\n      return csvData;\r\n    } else return [];\r\n  };\r\n\r\n  const data = getData();\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n            <h2 className='categoryListContainer__header-title'>\r\n              Salary reports\r\n            </h2>\r\n\r\n            {/* <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search expense..'\r\n              onSearch={(value) => handleSearch(value)}\r\n            /> */}\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            {tagList && tagList.length > 0 && (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    marginRight: '25px',\r\n                  }}\r\n                >\r\n                  <CSVLink\r\n                    filename={'SalaryReport.csv'}\r\n                    data={data}\r\n                    headers={headers}\r\n                  >\r\n                    Export as csv\r\n                  </CSVLink>\r\n                  <span\r\n                    style={{\r\n                      color: '#1890ff',\r\n                      marginLeft: '10px',\r\n                    }}\r\n                  >\r\n                    <DownloadOutlined />\r\n                  </span>\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            <Button\r\n              // type=\"primary\"\r\n              className='btnPrimaryClassNameoutline'\r\n              icon={<PlusOutlined />}\r\n              onClick={() => setAddNewCategoryVisible(true)}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className='categoryListContainer__categoryList'>\r\n          {tagState.done && tagList.length > 0 && (\r\n            <MyTable setTagList={setTagList} data={tagList} />\r\n          )}\r\n          {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n          {tagState.done && !(tagList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '150px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Expense found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewExpense\r\n        componentList={tagList}\r\n        setComponentList={setTagList}\r\n        addNewCategoryVisible={addNewCategoryVisible}\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\n// import lib\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\nimport moment from 'moment';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../../components/Placeholders';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst months = [\r\n  'Jan',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n];\r\n\r\ninterface Props {\r\n  productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'getSalaryReportDetail'\r\n  );\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'tagProducts'\r\n  );\r\n\r\n  const history = useHistory();\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n  const [tagDetailData, setTagDetailData] = useState({});\r\n\r\n  console.log('tagDetailDataSalaryreport!', tagDetailData);\r\n\r\n  const params = useParams();\r\n  const tagId = params['id'];\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const res = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (res) {\r\n        // @ts-ignore\r\n        setTagDetailData(res);\r\n      }\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('tagProductsState', tagProductsState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Salary Report detail</h3>\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          !(Object.keys(tagDetailData).length > 0) && (\r\n            <Empty\r\n              description='No Expense found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <div className='brandDetailContainer__header'>\r\n              <div className='brandDetailContainer__header-info'>\r\n                {tagDetailData['year'] && (\r\n                  <h3>\r\n                    YEAR:\r\n                    <span>{tagDetailData['year']}</span>\r\n                  </h3>\r\n                )}\r\n                {tagDetailData['month'] && (\r\n                  <h3>\r\n                    MONTH:\r\n                    <span>\r\n                      {tagDetailData['month'] && months[tagDetailData['month']]}\r\n                    </span>\r\n                  </h3>\r\n                )}\r\n\r\n                {tagDetailData['totalSalary'] && (\r\n                  <h3>\r\n                    TOTAL SALARY:\r\n                    <span>{tagDetailState['totalSalary']}</span>\r\n                  </h3>\r\n                )}\r\n\r\n                {tagDetailData['totalBonus'] && (\r\n                  <h3>\r\n                    TOTAL BONUS:\r\n                    <span>{tagDetailData['totalBonus']}</span>\r\n                  </h3>\r\n                )}\r\n\r\n                {tagDetailData['totalConvince'] && (\r\n                  <h3>\r\n                    TOTAL CONVINCE:\r\n                    <span>{tagDetailData['totalConvince']}</span>\r\n                  </h3>\r\n                )}\r\n\r\n                {tagDetailData['totalExtra'] && (\r\n                  <h3>\r\n                    TOTAL EXTRA:\r\n                    <span>{tagDetailData['totalExtra']}</span>\r\n                  </h3>\r\n                )}\r\n\r\n                {tagDetailData['totalNegative'] && (\r\n                  <h3>\r\n                    TOTAL NEGATIVE:\r\n                    <span>{tagDetailData['totalNegative']}</span>\r\n                  </h3>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n      </Skeleton>\r\n\r\n      {tagDetailState.done &&\r\n        tagDetailState.data &&\r\n        Object.keys(tagDetailState.data).length > 0 && (\r\n          <>\r\n            <div className='brandDetailContainer__heading'>\r\n              <h3>Staffs</h3>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n      <div className='brandDetailContainer__body'>\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          Object.keys(tagDetailState.data).length > 0 &&\r\n          tagDetailState.data['staff'] &&\r\n          !(tagDetailState.data['staff'].length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '100px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Staffs exists for this Salary report'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailState.data &&\r\n          Object.keys(tagDetailState.data).length > 0 &&\r\n          tagDetailState.data['staff'] &&\r\n          tagDetailState.data['staff'].length > 0 && (\r\n            <>\r\n              <Table\r\n                style={{\r\n                  paddingTop: '10px',\r\n                  borderRadius: '5px !important',\r\n                  overflow: 'hidden',\r\n                  boxShadow:\r\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\r\n                }}\r\n                size='small'\r\n                dataSource={tagDetailState.data['staff']}\r\n                tableLayout={'auto'}\r\n                onHeaderRow={(column) => {\r\n                  return {\r\n                    style: {\r\n                      color: 'red !important',\r\n                    },\r\n                  };\r\n                }}\r\n              >\r\n                <Column\r\n                  title='Name'\r\n                  dataIndex='name'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <>\r\n                      <h4\r\n                        onClick={() => {\r\n                          history.push(`/admin/staff/${record.id}`);\r\n                          // setcategoryDetailVisible(true);\r\n                        }}\r\n                        style={{\r\n                          fontWeight: 400,\r\n                          color: '#555',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        {text}\r\n                      </h4>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Total Salary'\r\n                  dataIndex='totalSalary'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Convince'\r\n                  dataIndex='convince'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Extra'\r\n                  dataIndex='extra'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Negative'\r\n                  dataIndex='negative'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n              </Table>\r\n            </>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewBrandDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\nimport StaffIds from './StaffIds';\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Expense Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  topic: '',\r\n  amount: null,\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  tagList?: any;\r\n  setTagList?: any;\r\n  category?:any; \r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  tagList,\r\n  setTagList,\r\n  category\r\n}: Props) => {\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'updateExpense');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [time, setTimeFeild] = useState('');\r\n  const [customerId, setCustomerId] = useState([]);\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    if(category && category.date){\r\n        setTimeFeild(category.date)\r\n    }\r\n  },[category]); \r\n\r\n  \r\n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'staffList'\r\n  );\r\n\r\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const customerListRes = await handleCustomerListFetch({});\r\n    };\r\n    setCustomers();\r\n  }, []);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t\tid: category.id || category._id\r\n\t\t\t}\r\n\t\t},\r\n      body: {\r\n        topic: values.topic.trim(),\r\n        amount: values.amount,\r\n        date: time,\r\n        staff: customerId,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n\r\n\t  const positionInTag = () => {\r\n\t\treturn tagList.map(item => item.id).indexOf(category.id || category._id);\r\n\t}\r\n\r\n\tconst index = positionInTag();\r\n\r\n\t// @ts-ignore\r\n\tconst updatedItem = Object.assign({}, tagList[index], { ...addTagRes });\r\n\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\tsetTagList(updateTagList);\r\n\r\n      actions.resetForm();\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addTagState['isLoading']) {\r\n      const error = addTagState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\r\n      if (addTagState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addTagState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...category }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Expense'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <Input\r\n              label='Topic'\r\n              value={values.topic}\r\n              name='topic'\r\n              isError={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              errorString={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('topic');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Amount'\r\n              value={values.amount}\r\n              name='amount'\r\n              type={'number'}\r\n              min={0}\r\n              isError={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              errorString={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('amount');\r\n              }}\r\n            />\r\n\r\n            <DatePicker\r\n              date={time}\r\n              placeholder='10/20/2020'\r\n              label='Date'\r\n              onChange={handleTimeChange}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            {/* <h4 className='inputFieldLabel'>Associative staff</h4>\r\n            <StaffIds\r\n              customerListState={customerListState}\r\n              setSelectedCustomerData={setSelectedCustomerData}\r\n              setCustomerId={setCustomerId}\r\n            /> */}\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\nimport StaffIds from './StaffIds';\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Expense Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  topic: '',\r\n  amount: null,\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  tagList?: any;\r\n  setTagList?: any;\r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  tagList,\r\n  setTagList,\r\n}: Props) => {\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addExpense');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [time, setTimeFeild] = useState('');\r\n  const [customerId, setCustomerId] = useState([]);\r\n\r\n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'staffList'\r\n  );\r\n\r\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const customerListRes = await handleCustomerListFetch({});\r\n    };\r\n    setCustomers();\r\n  }, []);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n      body: {\r\n        topic: values.topic.trim(),\r\n        amount: values.amount,\r\n        date: time,\r\n        staff: customerId,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setTagList([\r\n        {\r\n          // @ts-ignore\r\n          ...addTagRes,\r\n          id: addTagRes['_id'] || '',\r\n          key: addTagRes['_id'] || '',\r\n        },\r\n        ...tagList,\r\n      ]);\r\n      actions.resetForm();\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addTagState['isLoading']) {\r\n      const error = addTagState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\r\n      if (addTagState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addTagState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Expense'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Create'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <Input\r\n              label='Topic'\r\n              value={values.topic}\r\n              name='topic'\r\n              isError={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              errorString={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('topic');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Amount'\r\n              value={values.amount}\r\n              name='amount'\r\n              type={'number'}\r\n              min={0}\r\n              isError={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              errorString={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('amount');\r\n              }}\r\n            />\r\n\r\n            <DatePicker\r\n              date={time}\r\n              placeholder='10/20/2020'\r\n              label='Date'\r\n              onChange={handleTimeChange}\r\n            />\r\n\r\n            {/* <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            <h4 className='inputFieldLabel'>Associative staff</h4>\r\n            <StaffIds\r\n              customerListState={customerListState}\r\n              setSelectedCustomerData={setSelectedCustomerData}\r\n              setCustomerId={setCustomerId}\r\n            /> */}\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport moment from 'moment';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n  DownloadOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../hooks';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport QuickEdit from './QuickEdit';\r\nimport AddNewExpense from './AddNewExpense';\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Expense Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\r\n    {},\r\n    'deleteExpense'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteTag = async (id) => {\r\n    const deleteTagRes = await handleDeleteTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Expense');\r\n      const newtagList = data.filter((item) => item.id !== id);\r\n      setTagList(newtagList);\r\n    }\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Topic'\r\n          dataIndex='topic'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/expense/${record.id}`);\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title='Amount'\r\n          dataIndex='amount'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n        />\r\n\r\n        <Column\r\n          title='Date'\r\n          dataIndex='date'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm a')}</h5>\r\n            </Space>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <a href='##'>\r\n                <Tooltip placement='top' title='Edit Expense'>\r\n                  <span\r\n                    className='iconSize'\r\n                    onClick={() => {\r\n                      setvisible(true);\r\n                      setactiveCategoryForEdit(record);\r\n                    }}\r\n                  >\r\n                    <EditOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteTag(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <QuickEdit\r\n          tagList={data}\r\n          setTagList={setTagList}\r\n          setAddNewCategoryVisible={setvisible}\r\n          addNewCategoryVisible={visible}\r\n          category={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst TagList = ({}: Props) => {\r\n  const [tagList, setTagList] = useState([]);\r\n\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'expenseList');\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tags = await handleTagListFetch({});\r\n      // @ts-ignore\r\n      setTagList(tags);\r\n    };\r\n    setTags();\r\n  }, []);\r\n\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id: values.id,\r\n        },\r\n      },\r\n      body: {\r\n        name: values.name.trim(),\r\n        description: values.description,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setTagList([\r\n        ...tagList,\r\n        {\r\n          id: addTagRes['id'] || '',\r\n          key: addTagRes['id'] || '',\r\n          name: addTagRes['name'] || '',\r\n          description: addTagRes['description'] || '',\r\n        },\r\n      ]);\r\n      actions.resetForm();\r\n    }\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    if (tagState.data.length > 0) {\r\n      const newTagList = tagState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setTagList(newTagList);\r\n    }\r\n  };\r\n\r\n\r\n  \r\n  const headers = [\r\n    { label: \"Topic\", key: \"topic\" },\r\n    { label: \"Amount\", key: \"amount\" },\r\n    { label: \"Date\", key: \"date\" },\r\n  ];\r\n   \r\n\r\n  const getData = () => {\r\n    if(tagList && tagList.length > 0){\r\n      const csvData = tagList.map(item => {\r\n        return {\r\n          topic: item.topic,\r\n          amount: item.amount,\r\n          date : item.date ? moment(item.date).format('MMMM Do YYYY, h:mm a') : ''\r\n        }\r\n      })\r\n\r\n      return csvData; \r\n    }\r\n    else return []; \r\n  }; \r\n\r\n\r\n  const data = getData();\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n            <h2 className='categoryListContainer__header-title'>Expenses</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search expense..'\r\n              onSearch={(value) => handleSearch(value)}\r\n            />\r\n          </div>\r\n\r\n          \r\n        <div style={{\r\n          display:'flex',\r\n          alignItems:'center'\r\n        }}>\r\n        \r\n        {tagList && tagList.length > 0 && (\r\n          <>\r\n          <div style={{\r\n          display:'flex',\r\n          alignItems:'center',\r\n          marginRight: '25px'\r\n        }}>\r\n        <CSVLink\r\n         filename={\"Expenses.csv\"}\r\n         data={data} headers={headers}>\r\n          Export as csv \r\n        </CSVLink>\r\n        <span style={{\r\n          color:'#1890ff',\r\n          marginLeft: '10px'\r\n        }}>\r\n        <DownloadOutlined />\r\n        </span>\r\n        </div>\r\n          </>\r\n        )}\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n          </Button>\r\n        </div>\r\n\r\n\r\n        \r\n        </div>\r\n        <div className='categoryListContainer__categoryList'>\r\n          {tagState.done && tagList.length > 0 && (\r\n            <MyTable setTagList={setTagList} data={tagList} />\r\n          )}\r\n          {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n          {tagState.done && !(tagList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '150px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Expense found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewExpense\r\n        tagList={tagList}\r\n        setTagList={setTagList}\r\n        addNewCategoryVisible={addNewCategoryVisible}\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport {\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Modal,\r\n  Tooltip,\r\n} from 'antd';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  FileAddOutlined,\r\n  DeleteOutlined,\r\n  CheckCircleOutlined,\r\n  CloseOutlined,\r\n  CheckOutlined,\r\n  InfoCircleOutlined,\r\n  PlusOutlined,\r\n  FileImageFilled,\r\n} from '@ant-design/icons';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\nimport DatePicker from '../../components/Field/DatePicker';\r\nimport StaffIds from './StaffIds';\r\n\r\nconst validationSchema = Yup.object().shape({});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Expense Updated',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst initialValues = {\r\n  topic: '',\r\n  amount: null,\r\n};\r\n\r\ninterface Props {\r\n  addNewCategoryVisible?: any;\r\n  setAddNewCategoryVisible?: any;\r\n  tagList?: any;\r\n  setTagList?: any;\r\n  category?:any; \r\n  setTagDetailData?:any; \r\n}\r\n\r\nconst AddNewBrand = ({\r\n  addNewCategoryVisible,\r\n  setAddNewCategoryVisible,\r\n  category,\r\n  setTagDetailData\r\n}: Props) => {\r\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'updateExpense');\r\n  const [myImages, setmyImages] = useState(false);\r\n  const [visibleMedia, setvisibleMedia] = useState(false);\r\n  const [time, setTimeFeild] = useState('');\r\n  const [customerId, setCustomerId] = useState([]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if(category && category.date){\r\n        setTimeFeild(category.date)\r\n    }\r\n  },[category]); \r\n\r\n  \r\n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\r\n    {},\r\n    'staffList'\r\n  );\r\n\r\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const setCustomers = async () => {\r\n      const customerListRes = await handleCustomerListFetch({});\r\n    };\r\n    setCustomers();\r\n  }, []);\r\n\r\n  const handleSubmit = async (values: any, actions: any) => {\r\n    const addTagRes = await handleAddTagFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t\tid: category.id || category._id\r\n\t\t\t}\r\n\t\t},\r\n      body: {\r\n        topic: values.topic.trim(),\r\n        amount: values.amount,\r\n        date: time,\r\n        staff: customerId,\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (addTagRes && addTagRes.status === 'ok') {\r\n      openSuccessNotification();\r\n\r\n      setTagDetailData({\r\n          ...category,\r\n          // @ts-ignore\r\n        ...addTagRes,\r\n      });\r\n\r\n      actions.resetForm();\r\n      setAddNewCategoryVisible(false);\r\n    } else {\r\n      openErrorNotification();\r\n    }\r\n\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!addTagState['isLoading']) {\r\n      const error = addTagState['error'];\r\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n        if (error['error']['registerError']) {\r\n          // setServerErrors(error['error']['registerError']);\r\n        } else if (error['error']['checkoutError']) {\r\n          // setServerErrors(error['error']['checkoutError']);\r\n        } else {\r\n          // setServerErrors(error['error']);\r\n        }\r\n\r\n        const errors =\r\n          Object.values(error['error']).length > 0\r\n            ? Object.values(error['error'])\r\n            : [];\r\n        errors.forEach((err, i) => {\r\n          if (typeof err === 'string') {\r\n            openErrorNotification(err);\r\n          } else if (typeof err === 'object') {\r\n            if (err && Object.keys(err).length > 0) {\r\n              const errs = Object.values(err);\r\n              errs.forEach((err) => {\r\n                openErrorNotification(err);\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\r\n      if (addTagState['data']['status'] === 'ok') {\r\n        // openSuccessNotification('Order Created Successfully');\r\n        // history.push({\r\n        //   pathname: '/orderDetails',\r\n        //   state: checkoutState['data']\r\n        // })\r\n        // clearCart();\r\n        // setIsModalShown(true);\r\n      }\r\n    }\r\n  }, [addTagState]);\r\n\r\n  const handleCancel = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleTimeChange = (date, dateString) => {\r\n    setTimeFeild(dateString);\r\n    // console.log('date', date, dateString);\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n      validationSchema={validationSchema}\r\n      validateOnBlur={false}\r\n      enableReinitialize={true}\r\n      initialValues={{ ...initialValues, ...category }}\r\n    >\r\n      {({\r\n        handleChange,\r\n        values,\r\n        handleSubmit,\r\n        errors,\r\n        isValid,\r\n        isSubmitting,\r\n        touched,\r\n        handleBlur,\r\n        setFieldTouched,\r\n        handleReset,\r\n      }) => (\r\n        <>\r\n          <Modal\r\n            style={{\r\n              top: '40px',\r\n            }}\r\n            title='Add New Expense'\r\n            visible={addNewCategoryVisible}\r\n            onOk={(e: any) => handleSubmit(e)}\r\n            onCancel={handleCancel}\r\n            okText='Update'\r\n            okButtonProps={{\r\n              loading: isSubmitting,\r\n              htmlType: 'submit',\r\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\r\n            }}\r\n          >\r\n            <Input\r\n              label='Topic'\r\n              value={values.topic}\r\n              name='topic'\r\n              isError={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              errorString={\r\n                (touched.topic && errors.topic) ||\r\n                (!isSubmitting && addTagState.error['error']['topic'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('topic');\r\n              }}\r\n            />\r\n\r\n            <Input\r\n              label='Amount'\r\n              value={values.amount}\r\n              name='amount'\r\n              type={'number'}\r\n              min={0}\r\n              isError={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              errorString={\r\n                (touched.amount && errors.amount) ||\r\n                (!isSubmitting && addTagState.error['error']['amount'])\r\n              }\r\n              onChange={(e: any) => {\r\n                handleChange(e);\r\n                setFieldTouched('amount');\r\n              }}\r\n            />\r\n\r\n            <DatePicker\r\n              date={time}\r\n              placeholder='10/20/2020'\r\n              label='Date'\r\n              onChange={handleTimeChange}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                marginTop: '15px',\r\n              }}\r\n            ></div>\r\n\r\n            {/* <h4 className='inputFieldLabel'>Associative staff</h4>\r\n            <StaffIds\r\n              customerListState={customerListState}\r\n              setSelectedCustomerData={setSelectedCustomerData}\r\n              setCustomerId={setCustomerId}\r\n            /> */}\r\n          </Modal>\r\n\r\n          <MediaLibrary\r\n            setvisible={setvisibleMedia}\r\n            visible={visibleMedia}\r\n            setmyImages={setmyImages}\r\n            myImages={myImages}\r\n            isModalOpenForImages={true}\r\n          />\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import lib\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\nimport moment from 'moment';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../components/Placeholders';\r\nimport ExpenseEdit from './ExpenseEdit';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'expenseDetail'\r\n  );\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'tagProducts'\r\n  );\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n  const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n  const params = useParams();\r\n  const tagId = params['id'];\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const res = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if(res){\r\n        // @ts-ignore\r\n        setTagDetailData(res); \r\n      }; \r\n\r\n\r\n\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('tagProductsState', tagProductsState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Expense Detail</h3>\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <>\r\n              <ExpenseEdit\r\n                addNewCategoryVisible={tagEditVisible}\r\n                setAddNewCategoryVisible={setTagEditVisible}\r\n                category={tagDetailData}\r\n                setTagDetailData={setTagDetailData}\r\n              />\r\n              <Button\r\n                onClick={() => setTagEditVisible(true)}\r\n                type='link'\r\n                icon={<EditOutlined />}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          !(Object.keys(tagDetailData).length > 0) && (\r\n            <Empty\r\n              description='No Expense found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <div className='brandDetailContainer__header'>\r\n              <div className='brandDetailContainer__header-info'>\r\n                {tagDetailData['topic'] && (\r\n                  <h3>\r\n                    TOPIC:\r\n                    <span>{tagDetailData['topic']}</span>\r\n                  </h3>\r\n                )}\r\n                {tagDetailData['amount'] && (\r\n                  <h3>\r\n                    AMOUNT:\r\n                    <span>{tagDetailData['amount']}</span>\r\n                  </h3>\r\n                )}\r\n                {tagDetailData['date'] && (\r\n                  <h3>\r\n                    DATE:\r\n                    <span>\r\n                      {tagDetailState['data']['date'] &&\r\n                        moment(tagDetailState['data']['date']).format(\r\n                          'MMMM Do YYYY, h:mm a'\r\n                        )}\r\n                    </span>\r\n                  </h3>\r\n                )}\r\n                {tagDetailData[''] && (\r\n                  <h3>\r\n                    ASSOCIATIVE STAFF:\r\n                    <span>{tagDetailData['date']}</span>\r\n                  </h3>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewBrandDetail;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags,\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'dealerAreaList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('itwhere')\r\n    if (tagState.data && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n  console.log('areaSelectedTaga',selectedTags)\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('dealerAreaList', tagState)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Area found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='Dhanmondi, mirpur'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\nimport Areas from \"./Areas\";\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress: '',\r\n\tzipCode: '',\r\n\tpassword: '',\r\n\tcode: '',\r\n\tcommission: '',\r\n\tdepositMoney: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Dealer Created!',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addDealer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [selectedTags, setSelectedTags] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress: values.address,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcode: values.code,\r\n\t\t\t\tcommission: values.commission,\r\n\t\t\t\tdepositMoney: values.depositMoney,\r\n\t\t\t\tdealerArea: tagIds\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\t// openSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([{\r\n\t\t\t\tid: addCustomerRes['_id'] || '',\r\n\t\t\t\tkey: addCustomerRes['_id'] || '',\r\n\t\t\t\tname: addCustomerRes['firstName'] + ' ' + addCustomerRes['lastName'],\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t},...customerList])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('selectedCountryValue1',selectedCountryValue)\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!addCustomerState['isLoading']) {\r\n\t\t\tconst error = addCustomerState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addCustomerState['isLoading'] &&\r\n\t\t\tObject.keys(addCustomerState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addCustomerState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Dealer Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addCustomerState]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.code \r\n\t\t\t) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Dealer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.code}\r\n\t\t\t\t\t\t\t\t\tname='code'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['code'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['code'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\r\n\t\t\t\t\t\t\t\t\tname='depositMoney'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['depositMoney'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['depositMoney'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Commission'\r\n\t\t\t\t\t\t\t\t\ttype='commission'\r\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\r\n\t\t\t\t\t\t\t\t\tname='commission'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['commission'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['commission'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\r\n\t\t\t\t\t\t\t\t\t\tname='address'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification , Form, Empty } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport Areas from \"./Areas\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Dealer Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateDealer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n\r\n\t  const [tagIds, setTagIds] = useState([]);\r\n\t  const [selectedTags, setSelectedTags] = useState([]);\r\n  \r\n\r\n\r\n\t  useEffect(() => {\r\n\r\n\t\tconsole.log('customerAreaCheck',customer)\r\n\t\tif (customer && customer.area && customer.area.length > 0) {\r\n\t\t\tconst tagIds = customer.area.map(item => item._id);\r\n\t\t\t\r\n\t\t\tsetSelectedTags(tagIds);\r\n\t\t\tsetTagIds(tagIds)\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n\t}, [customer.id]);\r\n\t\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n\t\t\temail: values.email,\r\n\t\t\tpassword: values.password,\r\n\t\t\taddress: values.address,\r\n\t\t\tfirstName: values.firstName,\r\n\t\t\tlastName: values.lastName,\r\n\t\t\tcode: values.code,\r\n\t\t\tcommission: values.commission,\r\n\t\t\tdepositMoney: values.depositMoney,\r\n\t\t\tdealerArea: tagIds\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\t// openSuccessNotification(); \r\n\t\t\r\n\t\t\t\tsetvisible(false); \r\n\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, customerList[index], { \r\n\t\t\t\t\t  // @ts-ignore\r\n\t\t\t\t\t...updateCustomerRes, \r\n\t\t\t\t\t\r\n\t\t\t\t\tid: updateCustomerRes['_id'] || '',\r\n\t\t\t\t\tkey: updateCustomerRes['_id'] || '',\r\n\t\t\t\t\tname: updateCustomerRes['firstName'] + ' ' + updateCustomerRes['lastName'],\r\n\r\n\t\t\t\t   });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!updateCustomerState['isLoading']) {\r\n\t\t\tconst error = updateCustomerState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!updateCustomerState['isLoading'] &&\r\n\t\t\tObject.keys(updateCustomerState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (updateCustomerState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Dealer Updated Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [updateCustomerState]);\r\n\r\n\r\n\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t// !values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.code ){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\twidth={'70vw'}\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tdestroyOnClose={true}\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n\r\n\t  {console.log('errorsupdatedealer',errors)}\r\n\r\n<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.code}\r\n\t\t\t\t\t\t\t\t\tname='code'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\r\n\t\t\t\t\t\t\t\t\tname='depositMoney'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Commission'\r\n\t\t\t\t\t\t\t\t\ttype='commission'\r\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\r\n\t\t\t\t\t\t\t\t\tname='commission'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\r\n\t\t\t\t\t\t\t\t\t\tname='address'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewCustomer from \"./AddNewDealer\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nimport moment from \"moment\";\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Dealer Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n  roles?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList, roles}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n   const history = useHistory(); \r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteDealer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Dealer'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n\r\n          \r\n      <Column\r\n           title=\"Code\" \r\n           dataIndex=\"code\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/dealer/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n            \r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/dealer/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n         \r\n     \r\n\r\n          {/* <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n            /> */}\r\n\r\n  \r\n            \r\n          <Column\r\n           title=\"Commission\" \r\n           dataIndex=\"commission\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n        <Column\r\n           title=\"Deposit Money\" \r\n           dataIndex=\"depositMoney\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n      <Column\r\n\t\t\t\t\ttitle=\"Areas\"\r\n\t\t\t\t\tdataIndex=\"area\"\r\n\t\t\t\t\tkey=\"role\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(areas,record) => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t{areas && areas.length > 0 && areas.slice(0,2).map((tag) => (\r\n              <Tag \r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborderRadius:\"5px\"\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tcolor=\"blue\" key={tag._id}>\r\n\t\t\t\t\t\t\t{tag.name}\r\n\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t))}\r\n\r\n          <span \r\n          style={{\r\n            cursor:'pointer'\r\n          }}\r\n          onClick={() => {\r\n             history.push(`/admin/dealer/${record['id']}`)\r\n          }}>\r\n          {areas && areas.length === 2 && '.......'}\r\n          </span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\r\n\r\n      <Column\r\n           width={150}\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              {text && moment(text).format('MMMM Do YYYY, h:mm:ss a')}\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n\r\n{isAccess('postDealer',roles) && (\r\n              <Column\r\n        \r\n              className='classnameofthecolumn'\r\n                title=\"\"\r\n                key=\"action\"\r\n                align='right'\r\n                render={(text, record : any) => (\r\n                  <Space size=\"middle\">\r\n                    <a href='##'>\r\n                     <Tooltip placement=\"top\" title='Edit Dealer'>\r\n                    <span className='iconSize' onClick={() => {\r\n                      setvisible(true)\r\n                      setactiveCategoryForEdit(record); \r\n                    }}> \r\n                    <EditOutlined />\r\n                  \r\n                    </span>\r\n                     </Tooltip>\r\n                     </a>\r\n      \r\n                   \r\n      \r\n                    \r\n                     <Popconfirm \r\n                     \r\n                     onConfirm={() => handleDeleteCustomer(record.id)}\r\n                     title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                 \r\n                 <span \r\n                   className='iconSize iconSize-danger'\r\n                   > \r\n                   <DeleteOutlined/>\r\n                  </span>\r\n             \r\n                 </Popconfirm>\r\n                   \r\n                  </Space>\r\n                )}\r\n              />\r\n          )}\r\n\r\n\r\n\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n  roles: any; \r\n}\r\n\r\nconst CustomerList = ({roles}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'dealerList');\r\n  \r\n\r\n    console.log('dealerList',customerList); \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({\r\n        urlOptions:{\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1'\r\n          }\r\n          }\r\n       }); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n          Dealers\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search dealers..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n\r\n          {isAccess('postDealer',roles) && (\r\n        <Button\r\n        // type=\"primary\"\r\n        className='btnPrimaryClassNameoutline'\r\n        icon={<PlusOutlined />}\r\n        onClick={() => setAddNewCategoryVisible(true)}\r\n      >\r\n      Add New\r\n          \r\n          </Button>\r\n          )}\r\n    \r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        roles={roles}\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Dealer found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewCustomer \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  roles: state.globalState,\r\n})\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, null)(CustomerList);\r\n\r\n\r\n\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification , Form, Empty } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport Areas from \"./Areas\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Dealer Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n    visible: any;\r\n    setCustomerDetailData?:any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setCustomerDetailData }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateDealer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n\r\n\t  const [tagIds, setTagIds] = useState([]);\r\n\t  const [selectedTags, setSelectedTags] = useState([]);\r\n  \r\n\r\n\r\n\t  useEffect(() => {\r\n\r\n\t\tconsole.log('customerAreaCheck',customer)\r\n\t\tif (customer && customer.area && customer.area.length > 0) {\r\n\t\t\tconst tagIds = customer.area.map(item => item._id);\r\n\t\t\t\r\n\t\t\tsetSelectedTags(tagIds);\r\n\t\t\tsetTagIds(tagIds)\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n\t}, [customer.id]);\r\n\t\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n\t\t\temail: values.email,\r\n\t\t\tpassword: values.password,\r\n\t\t\taddress: values.address,\r\n\t\t\tfirstName: values.firstName,\r\n\t\t\tlastName: values.lastName,\r\n\t\t\tcode: values.code,\r\n\t\t\tcommission: values.commission,\r\n\t\t\tdepositMoney: values.depositMoney,\r\n\t\t\tdealerArea: tagIds\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\t// openSuccessNotification(); \r\n\t\t\r\n                setvisible(false); \r\n                \r\n                setCustomerDetailData({\r\n                    // @ts-ignore\r\n                    ...updateCustomerRes, \r\n\t\t\t\t\tid: updateCustomerRes['_id'] || '',\r\n\t\t\t\t\tkey: updateCustomerRes['_id'] || '',\r\n\t\t\t\t\tname: updateCustomerRes['firstName'] + ' ' + updateCustomerRes['lastName'],\r\n                })\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!updateCustomerState['isLoading']) {\r\n\t\t\tconst error = updateCustomerState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!updateCustomerState['isLoading'] &&\r\n\t\t\tObject.keys(updateCustomerState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (updateCustomerState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Dealer Updated Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [updateCustomerState]);\r\n\r\n\r\n\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t// !values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.code ){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\twidth={'70vw'}\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tdestroyOnClose={true}\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n\r\n\t  {console.log('errorsupdatedealer',errors)}\r\n\r\n<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.code}\r\n\t\t\t\t\t\t\t\t\tname='code'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\r\n\t\t\t\t\t\t\t\t\tname='depositMoney'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Commission'\r\n\t\t\t\t\t\t\t\t\ttype='commission'\r\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\r\n\t\t\t\t\t\t\t\t\tname='commission'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\r\n\t\t\t\t\t\t\t\t\t\tname='address'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\t\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import \r\nimport Moment from \"react-moment\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Spin, Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CustomerEdit from \"./DealerEdit\";\r\n\r\n\r\n// import state\r\nimport { isAccess } from \"../../utils\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    roles?: any;\r\n}\r\n\r\nconst NewBrandDetail = ({roles}: Props) => {\r\n    const [customerDetailState, handleCustomerDetailFetch] = useHandleFetch({}, 'dealerDetail');\r\n    const [orderListState, handleOrderListFetch] = useHandleFetch({}, 'dealerOrderList');\r\n    const [registeredCustomerListState, handleRegisteredCustomerListFetch] = useHandleFetch({}, 'dealerRegisteredCustomerList');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [customerDetailData,setCustomerDetailData] = useState({}); \r\n\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const customerId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getCustomerDetail = async () => {\r\n            const customerDetailDataRes = await handleCustomerDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if(customerDetailDataRes){\r\n                // @ts-ignore\r\n                setCustomerDetailData(customerDetailDataRes); \r\n            }\r\n\r\n            console.log('customerDetailDataRes',customerDetailDataRes)\r\n        };\r\n\r\n        getCustomerDetail();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getOrderList = async () => {\r\n            await handleOrderListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderList();\r\n\r\n        const getRegisteredOrderList = async () => {\r\n            await handleRegisteredCustomerListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getRegisteredOrderList();\r\n\r\n\r\n\r\n\r\n    }, [customerId]);\r\n\r\n\r\n    console.log('dealerDetailData', customerDetailData);\r\n\r\n    \r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                 Dealer Detail\r\n                </h3>\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <>\r\n                        <CustomerEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={customerDetailData}\r\n                            setCustomerDetailData={setCustomerDetailData}\r\n                        />\r\n\r\n                {isAccess('postDealer',roles) && (\r\n                                    <Button\r\n                                    onClick={() => setTagEditVisible(true)}\r\n                                    type='link'\r\n                                    icon={<EditOutlined />}\r\n                                >\r\n                                    Edit\r\n                            </Button>\r\n                                )}\r\n\r\n\r\n                    \r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={customerDetailState.isLoading}>\r\n                {customerDetailState.done && customerDetailData && !(Object.keys(customerDetailData).length > 0) && (\r\n                    <Empty description='No Dealer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {customerDetailData['name']}\r\n                            </h2>\r\n                           \r\n\r\n                           \r\n                            {customerDetailData['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {customerDetailData['code']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n\r\n\r\n                            {customerDetailData['commision'] && (\r\n                                <h3>\r\n                                    COMMISSION:\r\n                                    <span>\r\n                                        {customerDetailData['commision']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                            {customerDetailData['depositMoney'] && (\r\n                                <h3>\r\n                                    DEPOSIT MONEY:\r\n                                    <span>\r\n                                        {customerDetailData['depositMoney']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {customerDetailData['city'] && (\r\n                                <h3>\r\n                                    CITY:\r\n                                    <span>\r\n                                        {customerDetailData['city']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                        \r\n\r\n\r\n                            {customerDetailData['address1'] && (\r\n                                <h3>\r\n                                    ADDRESS:\r\n                                    <span>\r\n                                        {customerDetailData['address1']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                         \r\n\r\n                            {customerDetailData['phone'] && (\r\n                                <h3>\r\n                                    PHONE:\r\n                                    <span>\r\n                                        {customerDetailData['phone']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                             {customerDetailData['email'] && (\r\n                                <h3>\r\n                                    EMAIL:\r\n                                    <span>\r\n                                        {customerDetailData['email']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                              {customerDetailData['area'] && customerDetailData['area'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                        AREAS:\r\n                                        {customerDetailData['area'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    // onClick={() => history.push(`/admin/dealer/area/${cat._id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n        <div className='dealerDetailBodyContainer'>\r\n            <div className='dealerDetailBodyContainer__item'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                     Orders \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {orderListState.isLoading && (\r\n                  <>\r\n                  <div style={{\r\n                    margin: '100px'\r\n                  }}>\r\n                  <Spin size='large' />\r\n                  </div>\r\n                  </>\r\n                )}\r\n\r\n                                {orderListState.done && !(orderListState.data.length > 0) && (\r\n\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orders found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {orderListState.done && orderListState.data && orderListState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={orderListState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                          \r\n          \r\n          \r\n\r\n        <Column\r\n          title=\"Code\"\r\n          dataIndex=\"shortCode\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                #{text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n\r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n\r\n              <Column\r\n                title=\"Total Price\" \r\n                dataIndex=\"total\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                />\r\n\r\n\r\n\r\n\r\n          <Column\r\n            width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n             <a href='##'>\r\n              <span\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n                {text}\r\n             </span> \r\n            </a>\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            </div>\r\n            <div className='dealerDetailBodyContainer__item'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                     Customers \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {registeredCustomerListState.isLoading && (\r\n                  <>\r\n                  <div style={{\r\n                    margin: '100px'\r\n                  }}>\r\n                  <Spin size='large' />\r\n                  </div>\r\n                  </>\r\n                )}\r\n                {registeredCustomerListState.done && !(registeredCustomerListState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Customer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {registeredCustomerListState.done && registeredCustomerListState.data && registeredCustomerListState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={registeredCustomerListState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                          \r\n          \r\n          \r\n                          <Column\r\n                      title=\"Name\" \r\n                      dataIndex=\"name\" \r\n                      key=\"id\" \r\n                      className='classnameofthecolumn'\r\n                      render={(text, record: any) => (\r\n                        <>\r\n                          <h4\r\n                            onClick={() => {\r\n                              history.push(`/admin/customer/${record.id}`)\r\n                              // setcategoryDetailVisible(true);\r\n                            }}\r\n                            style={{\r\n                              fontWeight: 400,\r\n                              color: '#555',\r\n                              cursor: 'pointer'\r\n                            }}>\r\n                            {text}\r\n                          </h4>\r\n                        </>\r\n                      )}\r\n                      />\r\n\r\n         \r\n     \r\n\r\n         \r\n\r\n            \r\n          <Column\r\n           title=\"Order\" \r\n           dataIndex=\"orderCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n        <Column\r\n           title=\"Total Price\" \r\n           dataIndex=\"totalOrderPrice\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    roles: state.globalState,\r\n  })\r\n  \r\n  // @ts-ignore\r\n  export default connect(mapStateToProps, null)(NewBrandDetail);\r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Area Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagList?:any; \r\n    tagList?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagList,tagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateDealerArea');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetTagEditVisible(false)\r\n\t\t\t\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }; \r\n \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n                ...initialValues, \r\n                ...tagDetailData,\r\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\r\n                    bnMetaTitle: tagDetailData['bn']\r\n                    && tagDetailData['bn'].metaTitle\r\n                    && tagDetailData['bn'].metaTitle,\r\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\r\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\r\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\r\n                  })\r\n            }}\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                        \tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n                            title=\"Area Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Area Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addDealerArea');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([{\r\n                id: addTagRes['_id'] || '',\r\n                key: addTagRes['_id'] || '',\r\n                name: addTagRes['name'] || '',\r\n            },...tagList])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Area\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport {\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport {\r\n  FileOutlined,\r\n  InboxOutlined,\r\n  RadiusUpleftOutlined,\r\n  RadiusUprightOutlined,\r\n  RadiusBottomleftOutlined,\r\n  RadiusBottomrightOutlined,\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from '../../../hooks';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../../components/Placeholders';\r\nimport TagQuickEdit from './AreaQuickEdit';\r\nimport AddNewTag from './AddNewArea';\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n  notification.success({\r\n    message: message || 'Area Created',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n  notification.error({\r\n    message: message || 'Something Went Wrong',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n  });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .label('Name')\r\n    .required('Name is required')\r\n    .min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\r\n    {},\r\n    'deleteDealerArea'\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteTag = async (id) => {\r\n    const deleteTagRes = await handleDeleteTagFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        },\r\n      },\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n      openSuccessNotification('Deleted Area');\r\n      const newtagList = data.filter((item) => item.id !== id);\r\n      setTagList(newtagList);\r\n    }\r\n  };\r\n\r\n  const handleOk = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const handleCancel = (e: any) => {\r\n    setvisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n      >\r\n        <Column\r\n          title='Name'\r\n          dataIndex='name'\r\n          key='id'\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/dealer/area/${record.id}`);\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record);\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer',\r\n                }}\r\n              >\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          className='classnameofthecolumn'\r\n          title=''\r\n          key='action'\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size='middle'>\r\n              <a href='##'>\r\n                <Tooltip placement='top' title='Edit Area'>\r\n                  <span\r\n                    className='iconSize'\r\n                    onClick={() => {\r\n                      setvisible(true);\r\n                      setactiveCategoryForEdit(record);\r\n                    }}\r\n                  >\r\n                    <EditOutlined />\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n                onConfirm={() => handleDeleteTag(record.id)}\r\n                title='Are you sure？'\r\n                okText='Yes'\r\n                cancelText='No'\r\n              >\r\n                <span className='iconSize iconSize-danger'>\r\n                  <DeleteOutlined />\r\n                </span>\r\n              </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      {activeCategoryForEdit && (\r\n        <TagQuickEdit\r\n          tagList={data}\r\n          setTagList={setTagList}\r\n          tagEditVisible={visible}\r\n          setTagEditVisible={setvisible}\r\n          tagDetailData={activeCategoryForEdit}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst TagList = ({}: Props) => {\r\n  const [tagList, setTagList] = useState([]);\r\n\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'dealerAreaList');\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tags = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            sortItem: 'added',\r\n            sortOrderValue: '-1',\r\n          },\r\n        },\r\n      });\r\n      // @ts-ignore\r\n      setTagList(tags);\r\n    };\r\n    setTags();\r\n  }, []);\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n  const getisSubmitButtonDisabled = (values, isValid) => {\r\n    if (!values.name || !isValid) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleSearch = (value) => {\r\n    if (tagState.data.length > 0) {\r\n      const newTagList = tagState.data.filter((item) =>\r\n        item.name.toLowerCase().includes(value.toLowerCase())\r\n      );\r\n      setTagList(newTagList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n            <h2 className='categoryListContainer__header-title'>Areas</h2>\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder='search areas..'\r\n              onChange={(e) => handleSearch(e.target.value)}\r\n            />\r\n          </div>\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n          </Button>\r\n        </div>\r\n        <div className='categoryListContainer__categoryList'>\r\n          {tagState.done && tagList.length > 0 && (\r\n            <MyTable setTagList={setTagList} data={tagList} />\r\n          )}\r\n          {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n          {tagState.done && !(tagList.length > 0) && (\r\n            <div\r\n              style={{\r\n                marginTop: '200px',\r\n              }}\r\n            >\r\n              <Empty\r\n                description='No Area found'\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <AddNewTag\r\n        tagList={tagList}\r\n        setTagList={setTagList}\r\n        addNewCategoryVisible={addNewCategoryVisible}\r\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Area Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateDealerArea');\r\n \r\n    \r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n            })\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }; \r\n\r\n\r\n    // useEffect(()=>{\r\n\r\n    //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\r\n    //         const metaTags = tagDetailData.metaTags.split(','); \r\n\r\n    //         console.log('localMetaTags',metaTags);\r\n           \r\n    //         const bnMetaTags = tagDetailData.bn['metaTags'].split(','); \r\n\r\n    //         setTags(metaTags)\r\n    //         setBnTags(bnMetaTags)\r\n    //     }\r\n\r\n    // },[]); \r\n\r\n\r\n    console.log('tagDetailData',tagDetailData);\r\n\r\n\r\n \r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={{\r\n                ...initialValues, \r\n                ...tagDetailData,\r\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\r\n                    bnMetaTitle: tagDetailData['bn']\r\n                    && tagDetailData['bn'].metaTitle\r\n                    && tagDetailData['bn'].metaTitle,\r\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\r\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\r\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\r\n                  })\r\n            }}\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                        \tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n                            title=\"Area Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\n// import lib\r\nimport { EditOutlined } from '@ant-design/icons';\r\n\r\nimport {\r\n  Skeleton,\r\n  Empty,\r\n  Popconfirm,\r\n  Upload,\r\n  message,\r\n  Switch,\r\n  Select,\r\n  Button,\r\n  notification,\r\n  Table,\r\n  Space,\r\n  Input as CoolInput,\r\n  Tooltip,\r\n  Modal,\r\n} from 'antd';\r\n\r\n// import components\r\nimport { DataTableSkeleton } from '../../../components/Placeholders';\r\nimport TagEdit from './AreaEdit';\r\nimport moment from 'moment';\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\ninterface Props {\r\n  productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\r\n    {},\r\n    'dealerAreaDetail'\r\n  );\r\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\r\n    {},\r\n    'dealerListByArea'\r\n  );\r\n\r\n  const [tagEditVisible, setTagEditVisible] = useState(false);\r\n  const [tagDetailData, setTagDetailData] = useState({});\r\n\r\n  console.log('dealerListByArea', tagProductsState);\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const tagId = params['id'];\r\n\r\n  useEffect(() => {\r\n    const getBrandDetail = async () => {\r\n      const tagDetailRes = await handleTagDetailFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n\r\n      // @ts-ignore\r\n      if (tagDetailRes) {\r\n        console.log('tagDetailRes', tagDetailRes);\r\n        // @ts-ignore\r\n        setTagDetailData(tagDetailRes);\r\n      }\r\n    };\r\n\r\n    getBrandDetail();\r\n  }, [tagId]);\r\n\r\n  useEffect(() => {\r\n    const getTagProducts = async () => {\r\n      await handleTagProductsFetch({\r\n        urlOptions: {\r\n          placeHolders: {\r\n            id: tagId,\r\n          },\r\n        },\r\n      });\r\n    };\r\n\r\n    getTagProducts();\r\n  }, [tagId]);\r\n\r\n  console.log('tagProductsState', tagProductsState);\r\n\r\n  console.log('brandParams', params);\r\n\r\n  return (\r\n    <div className='brandDetailContainer'>\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Area Detail</h3>\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <>\r\n              <TagEdit\r\n                tagEditVisible={tagEditVisible}\r\n                setTagEditVisible={setTagEditVisible}\r\n                tagDetailData={tagDetailData}\r\n                setTagDetailData={setTagDetailData}\r\n              />\r\n              <Button\r\n                onClick={() => setTagEditVisible(true)}\r\n                type='link'\r\n                icon={<EditOutlined />}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </>\r\n          )}\r\n      </div>\r\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          !(Object.keys(tagDetailData).length > 0) && (\r\n            <Empty\r\n              description='No Area found'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          )}\r\n\r\n        {tagDetailState.done &&\r\n          tagDetailData &&\r\n          Object.keys(tagDetailData).length > 0 && (\r\n            <div className='brandDetailContainer__header'>\r\n              <div className='brandDetailContainer__header-info'>\r\n                <h2>{tagDetailData['name']}</h2>\r\n                {tagDetailData['url'] && (\r\n                  <h3>\r\n                    URL:\r\n                    <span>{tagDetailData['url']}</span>\r\n                  </h3>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n      </Skeleton>\r\n\r\n      <div className='brandDetailContainer__heading'>\r\n        <h3>Dealers</h3>\r\n      </div>\r\n      <div className='brandDetailContainer__body'>\r\n        {tagProductsState.isLoading && <DataTableSkeleton />}\r\n        {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n          <div\r\n            style={{\r\n              marginTop: '100px',\r\n            }}\r\n          >\r\n            <Empty\r\n              description='No Dealer exists for this area'\r\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {tagProductsState.done &&\r\n          tagProductsState.data &&\r\n          tagProductsState.data.length > 0 && (\r\n            <>\r\n              <Table\r\n                style={{\r\n                  paddingTop: '10px',\r\n                  borderRadius: '5px !important',\r\n                  overflow: 'hidden',\r\n                  boxShadow:\r\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\r\n                }}\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={tagProductsState.data}\r\n                tableLayout={'auto'}\r\n                onHeaderRow={(column) => {\r\n                  return {\r\n                    style: {\r\n                      color: 'red !important',\r\n                    },\r\n                  };\r\n                }}\r\n              >\r\n                <Column\r\n                  title='Code'\r\n                  dataIndex='code'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <>\r\n                      <h4\r\n                        onClick={() => {\r\n                          history.push(`/admin/dealer/${record.id}`);\r\n                          // setcategoryDetailVisible(true);\r\n                        }}\r\n                        style={{\r\n                          fontWeight: 400,\r\n                          color: '#555',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        {text}\r\n                      </h4>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Name'\r\n                  dataIndex='name'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <>\r\n                      <h4\r\n                        onClick={() => {\r\n                          history.push(`/admin/dealer/${record.id}`);\r\n                          // setcategoryDetailVisible(true);\r\n                        }}\r\n                        style={{\r\n                          fontWeight: 400,\r\n                          color: '#555',\r\n                          cursor: 'pointer',\r\n                        }}\r\n                      >\r\n                        {text}\r\n                      </h4>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Column\r\n                  title='Commission'\r\n                  dataIndex='commission'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  title='Deposit Money'\r\n                  dataIndex='depositMoney'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                  width={150}\r\n                  title='Created'\r\n                  dataIndex='created'\r\n                  key='id'\r\n                  className='classnameofthecolumn'\r\n                  render={(text, record: any) => (\r\n                    <Space size='middle'>\r\n                      <h5>\r\n                        {text && moment(text).format('MMMM Do YYYY, h:mm:ss a')}\r\n                      </h5>\r\n                    </Space>\r\n                  )}\r\n                />\r\n              </Table>\r\n            </>\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewBrandDetail;\r\n","import React from 'react';\r\n\r\n// import pages\r\nimport { Overview } from '../../pages/overview';\r\nimport { CategoryList, NewCategoryDetail } from '../../pages/category';\r\nimport {\r\n  ProductBundleDetail,\r\n  ProductBundleList,\r\n} from '../../pages/productBundle';\r\nimport { BrandList, AddNewBrand, NewBrandDetail } from '../../pages/brand';\r\nimport { ProductList, NewProductDetail } from '../../pages/product';\r\nimport { TagList, AddNewTag, NewTagDetail } from '../../pages/tag';\r\nimport { CouponList, CouponDetail } from '../../pages/coupon';\r\nimport { CustomerList, CustomerDetail } from '../../pages/customer';\r\nimport { PagesList, AddNewPage, PageDetail, PageEdit } from '../../pages/pages';\r\nimport { AttributeList } from '../../pages/attribute';\r\nimport {\r\n  OrderList,\r\n  AddNewOrder,\r\n  OrderDetail,\r\n  OrderAnalytics,\r\n  ConfigOrderStatus,\r\n} from '../../pages/order';\r\nimport {\r\n  Component,\r\n  ManageThemes,\r\n  Image,\r\n  Invoice,\r\n  SiteInfo,\r\n} from '../../pages/settings';\r\nimport { Delivery } from '../../pages/delivery';\r\nimport Sms from '../../pages/sms';\r\nimport { Email } from '../../pages/email';\r\nimport { NotificationList } from '../../pages/notification';\r\nimport { AdminList, AdminDetail } from '../../pages/admins';\r\nimport { PostList, PostDetail } from '../../pages/post';\r\nimport { StaffList, StaffDetail } from '../../pages/staff';\r\nimport {\r\n  SalaryReportDetail,\r\n  SalaryReportList,\r\n} from '../../pages/staff/salaryReport';\r\nimport { ExpenseList, ExpenseDetail } from '../../pages/expense';\r\nimport { DealerList, DealerDetail } from '../../pages/dealer';\r\nimport { AreaDetail, AreaList } from '../../pages/dealer/Area';\r\nimport {\r\n  PostTagList,\r\n  PostCategoryList,\r\n  NewPostCategoryDetail,\r\n  NewPostTagDetail,\r\n} from '../../pages/post';\r\n\r\n// import Login from '../../pages/auth/login';\r\n\r\n// import libraries\r\nimport { Layout } from 'antd';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface Props {}\r\n\r\nconst ContentComponent = (props: Props) => {\r\n  return (\r\n    <Content\r\n      hasSider={true}\r\n      style={{\r\n        backgroundColor: '#fff',\r\n        paddingTop: '20px',\r\n      }}\r\n    >\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => <Redirect to='/admin/overview' />}\r\n        />\r\n        <Route\r\n          exact\r\n          path='/admin'\r\n          render={() => <Redirect to='/admin/overview' />}\r\n        />\r\n        <Route path='/admin/overview' exact>\r\n          <Overview />\r\n        </Route>\r\n        <Route path='/admin/category' exact>\r\n          <CategoryList />\r\n        </Route>\r\n        <Route path='/admin/category/:id' exact>\r\n          <NewCategoryDetail />\r\n        </Route>\r\n        {/* <Route path='/admin/category/:name' exact>\r\n                    <CategoryDetail />\r\n                </Route> */}\r\n        {/* CategoryDetail */}\r\n        <Route path='/admin/brand/new' exact>\r\n          <AddNewBrand />\r\n        </Route>\r\n        <Route path='/admin/brand' exact>\r\n          <BrandList />\r\n        </Route>\r\n        <Route path='/admin/brand/:id' exact>\r\n          <NewBrandDetail />\r\n        </Route>\r\n        <Route path='/admin/product' exact>\r\n          <ProductList />\r\n        </Route>\r\n        <Route path='/admin/product/:id' exact>\r\n          <NewProductDetail />\r\n        </Route>\r\n        <Route path='/admin/bundle' exact>\r\n          <ProductBundleList />\r\n        </Route>\r\n        <Route path='/admin/bundle/:id' exact>\r\n          <ProductBundleDetail />\r\n        </Route>\r\n        <Route path='/admin/coupon' exact>\r\n          <CouponList />\r\n        </Route>\r\n        <Route path='/admin/posts' exact>\r\n          <PostList />\r\n        </Route>\r\n        <Route path='/admin/posts/tag' exact>\r\n          <PostTagList />\r\n        </Route>\r\n        <Route path='/admin/posts/category' exact>\r\n          <PostCategoryList />\r\n        </Route>\r\n        <Route path='/admin/posts/:id' exact>\r\n          <PostDetail />\r\n        </Route>\r\n        <Route path='/admin/posts/tag/:id' exact>\r\n          <NewPostTagDetail />\r\n        </Route>\r\n        <Route path='/admin/posts/category/:id' exact>\r\n          <NewPostCategoryDetail />\r\n        </Route>\r\n        <Route path='/admin/coupon/:id' exact>\r\n          <CouponDetail />\r\n        </Route>\r\n        <Route path='/admin/notification' exact>\r\n          <NotificationList />\r\n        </Route>\r\n        {/* <Route path='/product/new' exact>\r\n                     <AddNewProduct />\r\n                   </Route> */}\r\n        <Route path='/admin/tag' exact>\r\n          <TagList />\r\n        </Route>\r\n        <Route path='/admin/tag/new' exact>\r\n          <AddNewTag />\r\n        </Route>\r\n        <Route path='/admin/tag/:id' exact>\r\n          <NewTagDetail />\r\n        </Route>\r\n        <Route path='/admin/attribute' exact>\r\n          <AttributeList />\r\n        </Route>\r\n        <Route path='/admin/order' exact>\r\n          <OrderList />\r\n        </Route>\r\n        <Route path='/admin/order/new' exact>\r\n          <AddNewOrder />\r\n        </Route>\r\n        <Route path='/admin/order/overview' exact>\r\n          <OrderAnalytics />\r\n        </Route>\r\n        <Route path='/admin/order/config' exact>\r\n          <ConfigOrderStatus />\r\n        </Route>\r\n        <Route path='/admin/order/:id' exact>\r\n          <OrderDetail />\r\n        </Route>\r\n        <Route path='/admin/dealer' exact>\r\n          <DealerList />\r\n        </Route>\r\n        <Route path='/admin/dealer/area' exact>\r\n          <AreaList />\r\n        </Route>\r\n        <Route path='/admin/dealer/area/:id' exact>\r\n          <AreaDetail />\r\n        </Route>\r\n        <Route path='/admin/dealer/:id' exact>\r\n          <DealerDetail />\r\n        </Route>\r\n        <Route path='/admin/staff' exact>\r\n          <StaffList />\r\n        </Route>\r\n        <Route path='/admin/salaryReport' exact>\r\n          <SalaryReportList />\r\n        </Route>\r\n        <Route path='/admin/salaryReport/:id' exact>\r\n          <SalaryReportDetail />\r\n        </Route>\r\n        <Route path='/admin/staff/:id' exact>\r\n          <StaffDetail />\r\n        </Route>\r\n        <Route path='/admin/expense' exact>\r\n          <ExpenseList />\r\n        </Route>\r\n        <Route path='/admin/expense/:id' exact>\r\n          <ExpenseDetail />\r\n        </Route>\r\n\r\n        <Route path='/admin/acccounting/overview' exact>\r\n          <OrderList />\r\n        </Route>\r\n\r\n        <Route path='/admin/customer' exact>\r\n          <CustomerList />\r\n        </Route>\r\n        <Route path='/admin/customer/:id' exact>\r\n          <CustomerDetail />\r\n        </Route>\r\n        <Route path='/admin/page' exact>\r\n          <PagesList />\r\n        </Route>\r\n        <Route path='/admin/page/new' exact>\r\n          <AddNewPage />\r\n        </Route>\r\n        <Route path='/admin/page/edit/:id' exact>\r\n          <PageEdit />\r\n        </Route>\r\n\r\n        <Route path='/admin/page/:id' exact>\r\n          <PageDetail />\r\n        </Route>\r\n        <Route path='/admin/delivery' exact>\r\n          <Delivery />\r\n        </Route>\r\n        <Route path='/admin/settings/components' exact>\r\n          <Component />\r\n        </Route>\r\n        <Route path='/admin/settings/image' exact>\r\n          <Image />\r\n        </Route>\r\n        <Route path='/admin/settings/themes' exact>\r\n          <ManageThemes />\r\n        </Route>\r\n        <Route path='/admin/settings/invoice' exact>\r\n          <Invoice />\r\n        </Route>\r\n        <Route path='/admin/settings/siteInfo' exact>\r\n          <SiteInfo />\r\n        </Route>\r\n        <Route path='/admin/settings/admins' exact>\r\n          <AdminList />\r\n        </Route>\r\n        <Route path='/admin/settings/admins/:id' exact>\r\n          <AdminDetail />\r\n        </Route>\r\n        <Route path='/admin/sms' exact>\r\n          <Sms />\r\n        </Route>\r\n        <Route path='/admin/email' exact>\r\n          <Email />\r\n        </Route>\r\n      </Switch>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ContentComponent;\r\n","import Content from \"./Content\";\r\nexport default Content; ","import React, { useEffect } from 'react';\r\n\r\n// import pages\r\nimport Login from './pages/auth/login';\r\n\r\n// import layouts\r\nimport Sider from './layout/sider';\r\nimport Header from './layout/header';\r\nimport Content from './layout/content';\r\n// import Footer from './layout/footer';\r\n\r\n// import state\r\nimport { glboalOperations } from './state/ducks/globalState';\r\nimport { credentialsOperations } from './state/ducks/credentials';\r\nimport { connect } from 'react-redux';\r\n\r\n// import libraries\r\nimport { Layout } from 'antd';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from './hooks';\r\n\r\nconst App = ({ saveRoles, saveCredentials }) => {\r\n  const [\r\n    getAdminCredentialState,\r\n    handleAdminCredentCialsFetch,\r\n  ] = useHandleFetch({}, 'getAdminCredential');\r\n\r\n  useEffect(() => {\r\n    const getCredenCials = async () => {\r\n      const res = await handleAdminCredentCialsFetch({});\r\n      // saveCredentials(res);\r\n      // @ts-ignore\r\n      if (res && res['role']) {\r\n        saveRoles(res['role'] || []);\r\n      }\r\n    };\r\n    getCredenCials();\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path='/admin/login' exact>\r\n          <Login />\r\n        </Route>\r\n      </Switch>\r\n      <Switch>\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Header />\r\n\r\n          <Layout className='site-layout'>\r\n            <Sider />\r\n            <Content />\r\n          </Layout>\r\n          {/* <Footer /> */}\r\n        </Layout>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nconst mapDispathToProps = {\r\n  saveRoles: glboalOperations.saveRoles,\r\n  saveCredentials: credentialsOperations.saveCredentials,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  globalState: state.globalState,\r\n});\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, mapDispathToProps)(App);\r\n\r\n/* \r\n\r\n#product \r\n#order\r\n#category\r\n#order\r\n#customer\r\n#customer\r\n*/\r\n\r\n/*\r\n\r\nfix ===>\r\n\r\n// # product add -> category name search dile crash kore\r\n// # add order -> make delivery zone align as horizontal\r\n// # double notification -> when creating order \r\n// # customer detail -> customer er order history hobe\r\n// # customer list => add orderCount and totalOrderPrice field to show\r\n# customer List =>  user will be able to sort with them (sort=totalOrderPrice&sortOrder=-1) \r\n// # order analytics -> add metric=deliveryRegion \r\n# at the footer of analytic charts -> add a show data button -> on clicked show data as table \r\n# price price field - make input type number \r\n# delivery region edit\r\n# email api implementation\r\n# check if the tag edit works properly \r\n# on open product quick epit site crashes \r\n# product bundle detail -> show images in product bundle detail \r\n# fix the attach image in bundle \r\n# amount type will be drowpdown\r\n# add meta tags autofill in all items \r\n# add porst/add product => categories scrolbar\r\n# update all the item quick edit to item edit \r\n# make order edit functionality to quick order edit\r\n\r\n\r\nfeat ===> \r\n\r\n# dealer\r\n# bundle edit\r\n# coupon edit\r\n# post edit\r\n# post category edit\r\n# post tag edit (maybe)\r\n# notification\r\n# admin roles\r\n# dynamic order status\r\n# add dealer code at add order. \r\n# add coupon code at add order. \r\n*/\r\n\r\n/* \r\n\r\n*/\r\n\r\n/*\r\n\r\nissus ====> \r\n\r\nerror => product bundle ---> item not defined. \r\nerror => Cannot read property 'offer' of undefined. \r\nerror => coupon cover is coming as array in coupon list.\r\nerror => update post tag => Cannot read property 'name' of undefined. \r\nerror => add post category => checkMime is not defined probably because of the image.\r\npage update => {\"image\":\"selected image are not attached to page with given id\"}.\r\norder list => add delivery filtering drowndown\r\nrecipe category => fix recipe category edit and others'\r\nadd site map => at site info add a extra tab, --sitemap-- then in there show, site maps, and\r\nin below show update button which will update the site map. \r\nmake components images to update at once.  \r\n\r\n*/\r\n\r\n/* \r\n\r\nOff work left to do: \r\nFiltering order by deliveryzone\r\nmaking Post category work perfectly\r\nupdate component at once. \r\norder status is not working properly\r\nadmin roles\r\ngive resolved images when create a component\r\ncheck if productlist returns cover\r\nmake admin list section work properly\r\n*/\r\n\r\n/* \r\n\r\nThings that still left to do in mangshobazar: \r\n\r\nadd delete button in add new component\r\ncomplete salary report \r\nfix the order invoice \r\n\r\n\r\n*/\r\n","export function actionShouldBlock( meta ) {\r\n    return !meta || !meta.async || !meta.blocking;\r\n}\r\n\r\nexport function actionFinished ( type ) {\r\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\r\n}\r\n","import * as utils from \"./utils\";\r\n\r\nconst busyReducer = ( state = 0, action ) => {\r\n    if ( utils.actionShouldBlock( action.meta ) ) {\r\n        return state;\r\n    }\r\n    if ( utils.actionFinished( action.type ) ) {\r\n        return state - 1;\r\n    }\r\n    return state + 1;\r\n};\r\n\r\nexport default busyReducer;\r\n","import reducer from \"./reducers\";\r\n\r\nexport default reducer;\r\n","export function productPositionInCart(cart, product) {\r\n  return cart.map(item => item.product.id).indexOf(product.id);\r\n}\r\n\r\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\r\n  return {\r\n    product,\r\n    quantity,\r\n    isSelectedForCheckout,\r\n  };\r\n}\r\n","export function getCartItemQuantity(cart, id) {\r\n  return cart.find((item) => item.product.id === id).quantity;\r\n}\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n  if (!cartItems.length > 0) {\r\n    return 0;\r\n  }\r\n\r\n  const prices = cartItems.map((cartItem) => {\r\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\r\n  });\r\n\r\n  const totalPrice = prices.reduce((a, b) => {\r\n    return a + b;\r\n  }, 0);\r\n  return totalPrice;\r\n};\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as cartOperations from \"./operations\";\r\nimport * as cartSelectors from \"./selectors\";\r\n\r\nexport {\r\n    cartOperations,\r\n    cartSelectors,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { product, quantity, isSelectedForCheckout } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    if (index === -1) {\r\n      return [\r\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\r\n        ...state,\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.id\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n\r\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\r\n    const { cartItems } = action.payload;\r\n\r\n    if (cartItems.length > 0) {\r\n      return cartItems;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n\r\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\r\n    const { product } = action.payload;\r\n\r\n    const index = utils.productPositionInCart(state, product.product);\r\n    if (index === -1) {\r\n      return [...state, { ...product, isSelectedForCheckout: true }];\r\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\r\n      const tempArrayWithOutOldProduct = state.filter(\r\n        (item) => item.product.id !== product.product.id\r\n      );\r\n\r\n      return [\r\n        ...tempArrayWithOutOldProduct,\r\n        { ...product, isSelectedForCheckout: true },\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.product.id\r\n    );\r\n\r\n    return [\r\n      ...tempArrayWithOutOldProduct,\r\n      { ...product, isSelectedForCheckout: false },\r\n    ];\r\n  },\r\n\r\n  [types.CHANGE_QUANTITY]: (state, action) => {\r\n    const { product, quantity } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n\r\n    const updatedItem = Object.assign({}, state[index], { quantity });\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default cartReducer;\r\n","export const SET_CART = 'cart/SET';\r\nexport const TOGGLE = 'cart/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\r\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\r\nexport const REMOVE = 'cart/REMOVE';\r\nexport const CLEAR = 'cart/CLEAR';\r\n","export function productPositionInWishList(wishList, productId) {\r\n  return wishList.map(item => item).indexOf(productId);\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as wishListOperations from './operations';\r\nimport * as wishListSelectors from './selectors';\r\n\r\nexport { wishListOperations, wishListSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst wishListReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    if (index === -1) {\r\n      return [...state, productId];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item !== productId\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n  [types.ADD_WISHLIST]: (state, action) => {\r\n    const wishlist = action.payload;\r\n    return [...wishlist];\r\n  },\r\n\r\n  [types.REMOVE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default wishListReducer;\r\n","export const TOGGLE = 'wishList/TOGGLE';\r\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\r\nexport const REMOVE = 'wishList/REMOVE';\r\nexport const CLEAR = 'wishList/CLEAR';\r\n","export function getCartItemQuantity( cart, id ) {\r\n    return cart.find( item => item.product.id === id ).quantity;\r\n}\r\n\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n    if(!cartItems.length > 0){\r\n        return 0; \r\n    }\r\n\r\n    return cartItems.reduce((a,b) => {\r\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\r\n    },0); \r\n\r\n}","import reducer from './reducers';\r\n\r\nimport * as checkoutOperations from './operations';\r\nimport * as checkoutSelectors from './selectors';\r\n\r\nexport { checkoutOperations, checkoutSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst checkoutReducer = createReducer(initialState)({\r\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\r\n    const { products } = action.payload;\r\n\r\n    if (products.length > 0) {\r\n      const uniqueProductsOfCheckout = products.filter(function(product) {\r\n        return state.indexOf(product) == -1;\r\n      });\r\n      return uniqueProductsOfCheckout;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default checkoutReducer;\r\n","export const SET_CART = 'checkout/SET';\r\nexport const TOGGLE = 'checkout/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\r\nexport const REMOVE = 'checkout/REMOVE';\r\nexport const CLEAR = 'checkout/CLEAR';\r\n","export function productPositionInCart( cart, product ) {\r\n    return cart.map( item => item.product.id ).indexOf( product.id );\r\n}\r\n\r\nexport function newCartItem( product, quantity ) {\r\n    return {\r\n        product,\r\n        quantity,\r\n    };\r\n}\r\n","export const ADD = 'serach/ADD';\r\nexport const UPDATE = 'serach/UPDATE';\r\nexport const REMOVE = 'serach/REMOVE';\r\nexport const CLEAR = 'serach/CLEAR';\r\n","export function queryPositionInQueryList(queryList, query) {\r\n  return queryList.map(item => item.key).indexOf(query.key);\r\n}\r\n\r\nexport function newQueryItem(query) {\r\n  return query;\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as queryOperations from './operations';\r\nimport * as querySelectors from './selectors';\r\n\r\nexport { queryOperations, querySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n       id: uniqueId,\r\n       key: 'searchQuery',\r\n       value: string | product => {name,id,image}\r\n       created: Date,\r\n       lastUpdated: Date\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst searyQueryReducer = createReducer(initialState)({\r\n  [types.ADD]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, query);\r\n    if (index === -1) {\r\n      return [utils.newQueryItem(query), ...state];\r\n    }\r\n\r\n    const currentItem = state[index];\r\n    const updatedItem = Object.assign({}, currentItem);\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.UPDATE]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const oldQuery = state.find(item => item.key !== query.key);\r\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\r\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default searyQueryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\n/* State shape\r\n{\r\n    details: product,\r\n    list: [ product ],\r\n}\r\n*/\r\n\r\nconst detailsReducer = createReducer( null )( {\r\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\r\n} );\r\n\r\nconst listReducer = createReducer( [ ] )( {\r\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\r\n} );\r\n\r\nexport default combineReducers( {\r\n    details: detailsReducer,\r\n    list: listReducer,\r\n} );\r\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\r\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\r\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\r\n\r\nexport const FETCH_LIST = \"product/FETCH_LIST\";\r\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\r\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as productOperations from \"./operations\";\r\n\r\nexport {\r\n    productOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst authReducer = createReducer(false)({\r\n  [types.LOGIN]: () => true,\r\n  [types.LOGOUT]: () => false,\r\n});\r\n\r\nconst redirectAfterLoginReducer = createReducer(null)({\r\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated: authReducer,\r\n  redirectAfterLogin: redirectAfterLoginReducer,\r\n});\r\n","export const LOGIN = \"session/LOGIN\";\r\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\r\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\r\nexport const LOGOUT = \"session/LOGOUT\";\r\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\r\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\r\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as sessionOperations from \"./operations\";\r\n\r\nexport {\r\n    sessionOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_CATEGORIES]: (state, action) => {\r\n    const { categories } = action.payload;\r\n\r\n    if (categories) {\r\n      return categories;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_CATEGORIES]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\r\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\r\n","import reducer from './reducers';\r\n\r\nimport * as categoryOperations from './operations';\r\nimport * as categorySelectors from './selectors';\r\n\r\nexport { categoryOperations, categorySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = {};\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\r\n    const { response } = action.payload;\r\n\r\n    if (response) {\r\n      return { ...state, ...response };\r\n    }\r\n\r\n    return { ...state };\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\r\n","import reducer from './reducers';\r\n\r\nimport * as cacheOperations from './operations';\r\nimport * as cacheSelectors from './selectors';\r\n\r\nexport { cacheOperations, cacheSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_BRAND]: (state, action) => {\r\n    const { brands } = action.payload;\r\n\r\n    if (brands) {\r\n      return brands;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_BRAND]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_BRAND = 'category/ADD_BRAND';\r\nexport const GET_BRAND = 'category/GET_BRAND';\r\n","import reducer from './reducers';\r\n\r\nimport * as brandOperations from './operations';\r\nimport * as brandSelectors from './selectors';\r\n\r\nexport { brandOperations, brandSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_TAGS]: (state, action) => {\r\n    const { tags } = action.payload;\r\n\r\n    if (tags) {\r\n      return tags;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_TAGS]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_TAGS = 'tag/ADD_TAGS';\r\nexport const GET_TAGS = 'tag/GET_TAGS';\r\n","import reducer from './reducers';\r\n\r\nimport * as tagOperations from './operations';\r\nimport * as tagSelectors from './selectors';\r\n\r\nexport { tagOperations, tagSelectors };\r\n\r\nexport default reducer;\r\n","import { fetch } from \"../utils\";\r\n\r\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\r\n\r\nconst apiService = ( ) => ( next ) => ( action ) => {\r\n    const result = next( action );\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return result;\r\n    }\r\n\r\n    const { path, method = \"GET\", body } = action.meta;\r\n\r\n    if ( !path ) {\r\n        throw new Error( `'path' not specified for async action ${ action.type }` );\r\n    }\r\n\r\n    const url = `${ baseUrl }${ path }`;\r\n\r\n    return fetch( url, method, body ).then(\r\n        res => handleResponse( res, action, next ),\r\n        err => handleErrors( err, action, next ),\r\n    );\r\n};\r\n\r\nexport default apiService;\r\n\r\nfunction handleErrors( err, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_FAILED`,\r\n        payload: err,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return Promise.reject( err );\r\n}\r\n\r\nfunction handleResponse( res, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_COMPLETED`,\r\n        payload: res,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return res;\r\n}\r\n","const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\r\n    if ( !active ) {\r\n        return next( action );\r\n    }\r\n\r\n    const prevState = store.getState( );\r\n    const result = next( action );\r\n    const nextState = store.getState( );\r\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\r\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\r\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\r\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\r\n    logGroupEnd( );\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed( ...args ) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logGroupEnd( ...args ) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logInfo( ...args ) {\r\n    console.info( ...args );\r\n}\r\n\r\nfunction determineStyle( action ) {\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as reducers from './ducks';\r\nimport { apiService } from './middlewares';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistConfig = {\r\n  key: 'shop',\r\n  storage: storage,\r\n  // whitelist: ['session'], // which reducer want to store\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(\r\n    pReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(apiService),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n}\r\n\r\nconst store = configureStore({});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\n\n// importing react hot loader for hot loading\nimport { AppContainer } from 'react-hot-loader';\n\n\n// Wrap the rendering in a function:\nconst render = () => {\n\tReactDOM.render(\n\t\t<ReduxProvider store={store}>\n\t\t\t<AppContainer>\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</ReduxProvider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\n\n// Render once\nrender();\n\n\n\n// Webpack Hot Module Replacement API\nif (module['hot']) {\n\tmodule['hot'].accept('./App', () => {\n\t\trender();\n\t});\n}\n\n\n"],"sourceRoot":""}