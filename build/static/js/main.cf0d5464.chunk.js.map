{"version":3,"sources":["components/Field/Input.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","layout/sider/Sider.tsx","layout/sider/index.ts","components/Empty/index.ts","components/Empty/Empty.tsx","layout/header/Header.tsx","layout/header/index.ts","pages/overview/ApiVisits.tsx","pages/overview/OrderOverView.tsx","pages/overview/PlatformVisits.tsx","pages/overview/PageVisits.tsx","pages/overview/Overview.tsx","components/Placeholders/DataTableSkeleton.tsx","pages/category/CategoryList.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/MetaTags.tsx","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/category/CategoryEdit.tsx","pages/category/NewCategoryDetail.tsx","pages/productBundle/ProductBundleQuickEdit.tsx","components/Field/InputSmall.tsx","components/Notification/Notification.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","pages/productBundle/SelectProducts.tsx","pages/order/AddNewOrderProductItem.tsx","pages/productBundle/SelectedProductItems.tsx","pages/productBundle/AddNewProductBundle.tsx","pages/productBundle/ProductBundleList.tsx","pages/coupon/CouponProducts.tsx","pages/productBundle/ProductBundleDetail.tsx","pages/brand/AddNewBrand.tsx","pages/brand/QuickEdit.tsx","pages/brand/BrandList.tsx","pages/brand/BrandEdit.tsx","pages/brand/NewBrandDetail.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/QuickEdit.tsx","pages/product/ProductList.tsx","pages/product/ProductEdit.tsx","pages/product/NewProductDetail.tsx","pages/tag/QuickEdit.tsx","pages/tag/AddNewTag.tsx","pages/tag/TagList.tsx","pages/tag/TagEdit.tsx","pages/tag/NewTagDetail.tsx","pages/coupon/CouponEdit.tsx","pages/coupon/CouponDetail.tsx","pages/coupon/CouponQuickEdit.tsx","pages/coupon/OrderedProductsSelectProducts.tsx","pages/coupon/OrderedProductsSelectedProductItems.tsx","pages/coupon/AddNewCoupon.tsx","pages/coupon/CouponList.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/customer/CustomerEdit.tsx","pages/customer/CustomerDetail.tsx","pages/pages/PagesList.tsx","pages/pages/AddNewPage.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/order/OrderInvoice.jsx","pages/order/productItemForOrderDetail.tsx","pages/order/OrderEdit.tsx","pages/order/OrderDetail.tsx","pages/order/orderAnalytics/ThisMonthOrderReport.tsx","pages/order/orderAnalytics/ThisWeekOrderReport.tsx","pages/order/orderAnalytics/DateOrderReport.tsx","pages/order/orderAnalytics/HourOrderReport.tsx","pages/order/orderAnalytics/MonthOrderReport.tsx","pages/order/orderAnalytics/YearOrderReport.tsx","pages/order/orderAnalytics/index.ts","pages/order/orderAnalytics/OrderOverviewReport.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteInfo.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","pages/sms/SendCustomSMS.tsx","pages/sms/SMSConfiguaration.tsx","pages/sms/Sms.tsx","pages/sms/index.ts","pages/email/ConfigureSTMP.tsx","pages/email/NewCustomerTemplate.tsx","pages/email/OrderStatusTemplateAutoEmail.tsx","pages/email/OrderTemplateAutoEmail.tsx","pages/email/ConfigureAutoEmail.tsx","pages/email/ComposeCustomEmail.tsx","pages/email/Inbox.tsx","pages/email/Email.tsx","pages/notification/NotificationList.tsx","pages/admins/AccessCheckbox.tsx","pages/admins/QuickEdit.tsx","pages/admins/AddNewAdmin.tsx","pages/admins/AdminList.tsx","pages/admins/AdminEdit.tsx","pages/admins/AdminDetail.tsx","pages/post/PostQuickEdit.tsx","pages/post/Tags.tsx","pages/post/Categories.tsx","pages/post/SelectProducts.tsx","pages/post/SelectedProductItems.tsx","pages/post/AddNewPost.tsx","pages/post/PostList.tsx","pages/post/PostDetail.tsx","pages/post/postTags/QuickEdit.tsx","pages/post/postTags/AddNewPostTag.tsx","pages/post/postTags/PostTagList.tsx","pages/post/postTags/TagEdit.tsx","pages/post/postTags/NewPostTagDetail.tsx","pages/post/postCategory/MetaTags.tsx","pages/post/postCategory/AddNewPostCategory.tsx","pages/post/postCategory/PostCategoryList.tsx","pages/post/postCategory/PostCategoryEdit.tsx","pages/post/postCategory/QuickEdit.tsx","pages/post/postCategory/NewPostCategoryDetail.tsx","pages/staff/AddNewStaff.tsx","pages/staff/QuickEdit.tsx","pages/staff/StaffList.tsx","pages/staff/StaffEdit.tsx","pages/staff/StaffDetail.tsx","pages/expense/QuickEdit.tsx","pages/expense/AddNewExpense.tsx","pages/expense/ExpenseList.tsx","pages/expense/ExpenseEdit.tsx","pages/expense/ExpenseDetail.tsx","layout/content/Content.tsx","layout/content/index.ts","App.tsx","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","placeHolder","className","Item","validateStatus","help","style","borderRadius","placeholder","actionShouldBlock","meta","async","blocking","actionFinished","includes","reducer","state","action","utils","productPositionInCart","cart","product","map","item","id","indexOf","newCartItem","quantity","isSelectedForCheckout","initialState","reducerMap","url","method","body","options","headers","Accept","JSON","stringify","isomorphicFetch","then","res","status","Promise","resolve","reject","response","parseStatus","json","createReducer","payload","filter","cartItems","length","index","tempArrayWithOutOldProduct","updatedItem","Object","assign","slice","productPositionInWishList","wishList","productId","wishlist","products","ADD","queryPositionInQueryList","queryList","query","key","types","currentItem","oldQuery","find","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","isAuthenticated","redirectAfterLogin","cartReducer","categories","brands","tags","isObjectEmpty","keys","manupulateURL","urlOptions","params","placeHolders","split","currentValue","console","log","actualPlaceholderValue","replace","fuckValue","join","param","converter","resData","data","formatedData","category","_id","description","productCount","parent","cover","config","thumbnail","subCount","subCategory","children","subCat","icon","noti","heading","text","link","added","read","title","page","next","convertedData","regularPrice","price","offerPrice","unit","pricing","date","time","venue","brand","parseInt","available","minimum","items","cartItem","medium","cartKey","updated","avalable","isNext","post","preparationTime","servingSize","cookingTime","requiredProducts","cat","startDate","endDate","actualPrice","image","img","original","labels","alt","caption","visit","count","itemId","firstName","lastName","country","city","email","phone","address1","address2","created","code","minimumOrder","maximumOrder","orderedProducts","freeProducts","orderedProductsCount","freeProductsCount","amountType","amount","freeDelivery","maxUsePerUser","tag","success","customer","theme","components","component","region","pickUpLocation","countryCode","countryName","charge","availableStock","minimumStock","primaryCategory","inserted","order","shippingAddress","address","total","totalPrice","deliveryCharge","deliveryRegion","deliveryName","deliveryPickUpLocation","deliveryCountryName","date_created","paymentMethod","paymentStatus","payment","customerId","billingAddress","orders","generalFormat","dataMap","line_items","paymentItems","number","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","format","api","apiMap","server","credentials","Headers","fetch","baseURL","formattedData","error","connector","dataFetchReducer","isLoading","done","Error","useFetch","dependencies","initialData","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","validationSchema","Yup","shape","username","min","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","Sider","Layout","Header","Content","Footer","SubMenu","Menu","withRouter","props","useState","collapsed","setcollapsed","width","boxShadow","border","collapsible","onCollapse","selectable","mode","PieChartOutlined","to","GoldOutlined","RadarChartOutlined","BankOutlined","TagsOutlined","TagOutlined","BranchesOutlined","FireOutlined","CarOutlined","CalculatorOutlined","UsergroupAddOutlined","MoneyCollectOutlined","ShoppingCartOutlined","TeamOutlined","MailOutlined","MessageOutlined","FileOutlined","FileSearchOutlined","FileAddOutlined","SlidersOutlined","SettingOutlined","UserOutlined","UserAddOutlined","BgColorsOutlined","Empty","height","display","justifyContent","alignItems","PRESENTED_IMAGE_SIMPLE","history","useHistory","getAllNotificationState","handleGetAllNOticationFetch","getAllNotification","typeIcon","background","zIndex","transition","alignContent","push","color","marginTop","marginLeft","cursor","marginRight","placement","overlay","backgroundColor","padding","textAlign","fontSize","href","overflowCount","showZero","TwitterSquareFilled","fontWeight","BellOutlined","LogoutOutlined","Option","Select","MONTHS","TooltipContainerStyles","ApiVisits","selectedApiValue","setSelectedApiValue","demoGraphicVisitsState","handleDemoGraphicVisitsStateFetch","userData","setuserData","metricType","uservisitsDataRes","getDemoGraphicVisitsValue","Date","thisMonth","getMonth","bordered","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","size","x1","y1","x2","y2","offset","stopColor","vertical","strokeDasharray","stroke","dataKey","tickFormatter","moment","orientation","axisLine","tickLine","contentStyle","formatter","fill","orderAnalyticsVisitsState","handleOrderAnalyticsVisitsStateFetch","orderData","setorderData","ordersDataRes","getAnalyticsOrders","localOptions","COLORS","PlatformVisits","demographicData","setdemographicData","RADIAN","Math","PI","marginBottom","outerRadius","innerRadius","nameKey","cx","cy","midAngle","percent","radius","x","cos","y","sin","dominantBaseline","toFixed","labelLine","entry","CalendarOutlined","Column","Table","ColumnGroup","PageVisits","pageVisitsState","handlePageVisitsStateFetch","visitType","getPageVisitsValue","dataSource","tableLayout","onHeaderRow","column","dataIndex","render","record","textTransform","Overview","handleAnalyticsProductVisitCountFetch","handleAnalyticsCategoryVisitCountFetch","handleGetTotalUserCountFetch","getTotalUserCount","getProductVisitCount","getCategoryVisitCount","OrderOverView","DataTable","speed","viewBox","foregroundColor","rx","ry","r","metadata","github","filename","Search","MyTable","setcategoryList","visible","setvisible","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","handleDeleteCategory","deleteCategoryRes","message","notification","CheckCircleOutlined","newCategoryList","objectFit","align","EditOutlined","onConfirm","okText","cancelText","DeleteOutlined","categoryList","categoryState","handleCategoryListFetch","isSubCategory","productCountValue","setCategories","addNewCategoryVisible","setAddNewCategoryVisible","enterButton","handleSearch","PlusOutlined","DataTableSkeleton","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","MediaLibrary","setmyImages","isModalOpenForImages","setmyThumbnailImage","isModalOpenForThumbnail","myImages","myThumbnailImage","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","getImageList","limitNumber","imageListRes","handleUpload","formData","FormData","forEach","file","append","reqwest","processData","withCredentials","uploadProps","multiple","onRemove","filelist","newFileList","splice","beforeUpload","xflelist","handleAddToSelectedList","newselectedImages","handleUpdateSubmit","captoin","updateImageLibraryItemRes","positionInImageList","updateImageList","openErrorNotification","getisUpdateSubmitButtonDisabled","top","onOk","onCancel","bodyStyle","defaultActiveKey","tab","listType","FileImageOutlined","ArrowUpOutlined","lenght","CloseOutlined","CheckOutlined","ImageItemMenu","EllipsisOutlined","MetaTags","inputVisible","inputValue","editInputIndex","editInputValue","handleClose","removedTag","setTags","showInput","setState","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onBlur","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","preventDefault","React","Component","bnName","bnDescription","metaTitle","bnMetaTitle","metaDescription","bnMetaDescription","metaTags","bnMetaTags","AddNewCategory","addCategoryState","handleAddCategoryFetch","isparentCategoryChecked","setisparentcategoryChecked","setisModalOpenForThumbnail","setisModalOpenForImages","coverImageId","setCoverImageId","selectedParentId","setselectedParentId","imageUrl","setImageUrl","loadingThumnail","setLoadingThumbnail","imageFile","setImagefile","bnTags","setBnTags","imagesIds","trim","bn","addCategoryRes","resetForm","onSwitchChange","checked","handleCancel","onChangeSelect","callback","reader","FileReader","addEventListener","result","readAsDataURL","getBase64","uploadButton","LoadingOutlined","okButtonProps","htmlType","defaultChecked","InfoCircleOutlined","showUploadList","newImages","handleImagesDelete","FileImageFilled","QuickEdit","updateCategoryState","handleUpdateCategoryFetch","updateCategoryRes","positionInTag","updateCategoryList","AddNewBrand","categoryEditVisible","setCategoryEditVisible","categoryDetailData","setcategoryDetailData","updateBrandState","handleUpdateBrandFetch","brandDetailState","handleAttachImageToItemMultipleFetch","handleAttachImageToItemSingleFetch","handleDetachImageFromItemSingleFetch","handleSetImageAsThumbnailToItemFetch","visibleMedia","setvisibleMedia","myGoddamnImages","setMyGoddamnImages","handleSetImageAsThumnail","handleDetachSingleImage","imageId","collection","thumbnailRes","updateTagRes","NewBrandDetail","CoolInput","categoryDetailState","handleCategoryDetailFetch","categoryProductsState","handleCategoryProductsFetch","useParams","categoryId","categoryDetail","setcategoryDetail","categoryDetailDataRes","getCategoryDetail","getCategoryProducts","row","imgs","columns","localIndex","columnNumber","getImagesInCollumn","CategoryEdit","avatar","paragraph","paddingTop","overflow","ProductBundleQuickEdit","tagList","setTagList","updateTagState","updateTagList","allowClear","ExclamationCircleOutlined","CheckableTag","Tag","Tags","setTagIds","setSelectedTags","selectedTags","setoptions","tagState","handleTagListFetch","searchValue","setsearchValue","selectedCategoryIds","selectedcategory","tagListRes","tagOptions","borderColor","onSearch","categoryNames","newOptions","nextSelectedTags","t","Brands","setBrandId","brandId","productDetailState","setSelectedBrandId","brandState","brandListRes","brandOptions","setBrands","onFocus","val","Categories","setcategoryIds","categoryOptions","setCategoryOptions","categoryListRes","checkable","checkedKeys","onSelect","selectedKeys","info","onCheck","checkedIds","treeData","defaultExpandAll","checkStrictly","setProductIds","productIds","selectedOpions","setselectedOptions","selectItems","o","CartOverLayCartItem","productList","setProductList","variation","handleProductFetch","setProduct","setIsLoading","modifiedPrice","setModifiedPrice","selectedVariationId","setSelectedVariationId","getAndSetProduct","handleChangeQuantity","positionInAttribute","updateAttributeList","convertAttributeValuesToStringValue","attribute","attributeValue","pricingOptions","pricingItem","pricingOption","getPricingOptions","priceItem","regular","offer","getPriceByVariationId","tagId","handleAttributeChange","AddNewOrderSummary","flexDirection","AddNewOrderProductItem","bundlePrice","AddNewProduct","bundleList","setBundleList","addProductState","handleAddProductFetch","categoryids","tagIds","setPricing","setDescription","setPrice","model","addProductRes","err","i","newProductList","isTrue","editor","ClassicEditor","onInit","event","getData","InputSmall","SelectProducts","SelectedProductItems","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","TagList","newTagList","AddNewProductBundle","CouponProducts","handleProductDetailFetch","getProductDetail","brandList","setBrandList","addBrandRes","updatebrandState","updateBrandRes","positionInBrand","updateBrandList","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","handlebrandListFetch","brandDetailData","brandEditVisible","setBrandEditVisible","setBrandDetailData","handleBrandDetailFetch","brandProductsState","handleBrandProductsFetch","brandDetailRes","getBrandDetail","getBrandProducts","BrandEdit","Complete","setAttributeList","attributeList","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","manupulatedOptions","suggestedOption","toUpperCase","Pricing","handleAddPricing","handleUpdatePricing","isPricingEditActive","setprice","stock","setStock","attributeListItems","attributeKey","handlePriceChange","handleStockChange","Attributes","minHeight","purchaseLimit","bnUnit","setBNDescription","setMetaTags","setBnMetaTags","editpricingItem","setEditPricingItem","pricingTagActiveKey","setpricingTagActiveKey","seTisPricingEditActive","metaUnit","updatePricingList","animated","tabPosition","activeKey","handleEditPricing","newPricing","handleDeletePricing","textDecoration","updateProductState","handleUpdateProductFetch","updateProductRes","updateProductList","handleDeleteProductFetch","handleDeleteProduct","deleteProductRes","productState","handleProductListFetch","setProducts","productEditVisible","setProductEditVisible","productDetailData","setProductDetailData","setDateFeild","setTimeFeild","categoryIds","updatedProductRes","destroyOnClose","productDetailRes","ProductEdit","addTagState","handleAddTagFetch","addTagRes","AddNewTag","tagEditVisible","setTagEditVisible","tagDetailData","setTagDetailData","tagDetailState","handleTagDetailFetch","tagProductsState","handleTagProductsFetch","tagDetailRes","getTagProducts","TagEdit","CouponEdit","addCouponState","handleAddCouponStateFetch","freeProductIds","setFreeProductIds","freeProductList","setFreeProductList","OrderedProductsSelectProducts","OrderedProductsSelectedProductItems","CouponQuickEdit","Couponlist","AddNewCoupon","max","zipCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","customers","setCustomers","AddNewCustomer","customerDetailState","handleCustomerDetailFetch","orderListState","handleOrderListFetch","customerDetailData","setCustomerDetailData","customerDetailDataRes","getCustomerDetail","getOrderList","CustomerEdit","withTitle","handleDeletePageFetch","handleDeletePage","deletePageRes","PageList","pageList","setPageList","pageState","handlePagsListFetch","pages","setPages","Steps","Step","content","bnContent","AddNewPage","addPageState","handleAddPageFetch","setContent","setBnContent","handleAddPageSubmit","addOrderRes","EditableTagGroup","AttributeList","AddAttributeValues","setOrderList","handleUpdateOrderStatusFetch","handleUpdateOrderStatus","newStatus","newOrderstatus","updateOrderStatusRes","updateOrderList","StatusItemMenu","DownOutlined","orderList","orderState","handleRegionListFetch","regions","setOrders","newOrderList","memo","ShopOutlined","setCustomerId","setSelectedCustomerData","customerData","productListState","productOptions","additionalInfo","steps","AddNewOrder","addOrderState","handleOrderFetch","current","setCurrent","selectedCustomerData","customerListState","deliveryRegionState","handleDeliveryRegionFetch","deliveryRegionName","setDeliveryRegionName","selectedRegion","setSelectedRegion","regionDeliveryCharge","setregionDeliveryCharge","isDeliveryChargeExists","cityName","getAndSetShippingDeliveryCharge","handleCheckoutSubmit","delivery","CustomersId","AddProducts","Group","deliveryRegionItem","handleDeviliveryRegionChange","ClockCircleOutlined","CaretRightOutlined","CaretLeftOutlined","setShowInvoice","showInvoice","orderDetailState","handleOrderDetailFetch","getOrderDetail","window","print","cellPadding","cellSpacing","bgcolor","fontFamily","lineHeight","verticalAlign","letterSpacing","colSpan","borderBottom","whiteSpace","updateOrderState","handleUpdateOrderFetch","addRegionRes","OrderInvoice","OrderEdit","getMonthNameByOrder","WEEEK","getWeekNameByOrder","getHourFormatter","OrderOverviewReport","ThisWeekOrderReport","ThisMonthOrderReport","DateOrderReport","HourOrderReport","MonthOrderReport","YearOrderReport","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","Set","SaveOutlined","updateComponentByAddingItem","componentId","Panel","Collapse","genExtra","updateComponentByDeleting","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","handleUpdateComponentFetch","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","manupulatedLocalComponentForTheReq","updatedItems","manupulatedUpdatedItems","manupulatedUpdatedItem","updateComponentRes","accordion","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","footer","themeList","setThemeList","addThemeState","handleAddthemeFetch","setselectedThemeTypeValue","setname","thumbnailFile","setThumbnailFile","addThemeRes","path","InboxOutlined","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","getSiteSettings","addSiteInfoRes","invoiceTitle","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","handlSiteInvoiceSettingsFetch","updateInvoiceRes","updateSiteLogoAndIcon","handleUpdateSiteLogoAndIconFetch","logo","updateSiteIconAndLogoRes","AdminSiteInfo","SiteInfoInvoice","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","setdeliveryCharge","handleDeliveryChargeChange","AddNewRegion","regionList","setRegionList","addRegionState","handleRegionFetch","handleAddDeliveryCharge","updateRegionState","handleUpdateRegionFetch","updateRegionList","handleDeleteRegioFetch","handleDeleteRegion","deleteRegionRes","newRegionList","regionState","setRegions","SendCustomSMS","setText","recipient","setrecipient","tokenSeparators","SendOutlined","InfoCircleFilled","SMSConfiguaration","configureSMSStata","handleconfigureSMSFetch","Sms","ConfigureSTMP","emailConfigurationState","handleEmailConfigurationFetch","setIsAuthenticated","fromEmail","fromName","host","encryption","port","smtpUsername","smtpPassword","handleAuthenticatedChange","setVisible","autoEmailTemplate","handleAutoEmailTemplateFetch","subject","setcustomer","admin","setadmin","getConfigurationAutoEmailTemplateRes","eventName","getCustomerAutoEmail","overflowY","ConfigureAutoEmail","configureAutoEmailConfigurationState","handleAutoEmailConfigurationFetch","isnewCustomerAdmin","setnewCustomerAdmin","isnewCustomerCustomer","setnewCustomerCustomer","isorderAdmin","setorderAdmin","isorderStatusAdmin","setorderStatusAdmin","isorderCustomer","setorderCustomer","isorderStatusCustomer","setIsorderStatusCustomer","newcustomermodal","setnewcustomermodal","ordermodal","setordermodal","orderStatusmodal","setorderStatusmodal","handleUpdateAutoEmail","NewCustomerTemplate","OrderStatusTemplateAutoEmail","OrderTemplateAutoEmail","ComposeCustomEmail","sendCustomerEmailState","handleSendCustomEmailFetch","html","sethtml","Inbox","substring","PlusCircleOutlined","NotificationList","AccessCheckbox","checkedList","setCheckedList","plainOptions","interminate","setInterminate","checkAll","setCheckAll","indeterminate","accessItem","span","role","accesscheckedList","setAccessCheckedList","access","passwordConfirmation","oneOf","AddNewAdminRoles","password2","AddNewAdmin","AdminEdit","bnBody","bnPreparationTime","bnServingSize","bnCookingTime","setBody","setBnBody","categoryOne","tagsOne","AddNewPostCategory","AddNewStaff","StaffEdit","AddNewExpense","ExpenseEdit","hasSider","exact","NewCategoryDetail","BrandList","NewProductDetail","ProductBundleList","ProductBundleDetail","CouponList","PostList","PostTagList","PostCategoryList","PostDetail","NewPostTagDetail","NewPostCategoryDetail","CouponDetail","NewTagDetail","OrderList","OrderDetail","StaffList","StaffDetail","ExpenseList","ExpenseDetail","CustomerDetail","PagesList","Delivery","ManageThemes","SiteInfo","AdminList","AdminDetail","Email","App","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","whitelist","pReducer","persistReducer","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.cf0d5464.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    addonBefore?: string;\r\n    required?: boolean;\r\n    placeHolder?:string; \r\n}\r\n\r\nconst Demo = ({ required, addonBefore, label, \r\n    type, defaultValue,value, onChange, disabled,\r\n     isError, errorString, name,\r\n     placeHolder\r\n    }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                // hasFeedback={true}\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                // hasFeedback validateStatus=\"success\"\r\n                help={errorString}\r\n                // rules={[{ required: true }]}\r\n                >\r\n\r\n                <Input\r\n                    required={required}\r\n                    type={type}\r\n                    addonBefore={addonBefore}\r\n                    style={{\r\n                        borderRadius: '0'\r\n                    }}\r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName'\r\n                    placeholder={placeHolder}\r\n                     />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","export function actionShouldBlock( meta ) {\r\n    return !meta || !meta.async || !meta.blocking;\r\n}\r\n\r\nexport function actionFinished ( type ) {\r\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\r\n}\r\n","import * as utils from \"./utils\";\r\n\r\nconst busyReducer = ( state = 0, action ) => {\r\n    if ( utils.actionShouldBlock( action.meta ) ) {\r\n        return state;\r\n    }\r\n    if ( utils.actionFinished( action.type ) ) {\r\n        return state - 1;\r\n    }\r\n    return state + 1;\r\n};\r\n\r\nexport default busyReducer;\r\n","import reducer from \"./reducers\";\r\n\r\nexport default reducer;\r\n","export function productPositionInCart(cart, product) {\r\n  return cart.map(item => item.product.id).indexOf(product.id);\r\n}\r\n\r\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\r\n  return {\r\n    product,\r\n    quantity,\r\n    isSelectedForCheckout,\r\n  };\r\n}\r\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\r\n    const reducer = reducerMap[ action.type ];\r\n    return reducer ? reducer( state, action ) : state;\r\n};\r\n","import isomorphicFetch from 'isomorphic-fetch';\r\n\r\nexport default (url, method, body) => {\r\n\tconst options = {\r\n\t\tmethod,\r\n\t\theaders: requestHeaders(),\r\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\r\n\t};\r\n\r\n\treturn isomorphicFetch(url, options).then(res =>\r\n\t\tparseStatus(res.status, res.json())\r\n\t);\r\n};\r\n\r\nfunction parseStatus(status, res) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (status >= 200 && status < 300) {\r\n\t\t\tres.then(response => resolve(response));\r\n\t\t} else {\r\n\t\t\tres.then(response => reject({ status, response }));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction requestHeaders() {\r\n\treturn {\r\n\t\tAccept: 'application/json',\r\n\t\t'Content-Type': 'application/json'\r\n\t};\r\n}\r\n","export function getCartItemQuantity(cart, id) {\r\n  return cart.find((item) => item.product.id === id).quantity;\r\n}\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n  if (!cartItems.length > 0) {\r\n    return 0;\r\n  }\r\n\r\n  const prices = cartItems.map((cartItem) => {\r\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\r\n  });\r\n\r\n  const totalPrice = prices.reduce((a, b) => {\r\n    return a + b;\r\n  }, 0);\r\n  return totalPrice;\r\n};\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as cartOperations from \"./operations\";\r\nimport * as cartSelectors from \"./selectors\";\r\n\r\nexport {\r\n    cartOperations,\r\n    cartSelectors,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { product, quantity, isSelectedForCheckout } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    if (index === -1) {\r\n      return [\r\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\r\n        ...state,\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.id\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n\r\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\r\n    const { cartItems } = action.payload;\r\n\r\n    if (cartItems.length > 0) {\r\n      return cartItems;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n\r\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\r\n    const { product } = action.payload;\r\n\r\n    const index = utils.productPositionInCart(state, product.product);\r\n    if (index === -1) {\r\n      return [...state, { ...product, isSelectedForCheckout: true }];\r\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\r\n      const tempArrayWithOutOldProduct = state.filter(\r\n        (item) => item.product.id !== product.product.id\r\n      );\r\n\r\n      return [\r\n        ...tempArrayWithOutOldProduct,\r\n        { ...product, isSelectedForCheckout: true },\r\n      ];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item.product.id !== product.product.id\r\n    );\r\n\r\n    return [\r\n      ...tempArrayWithOutOldProduct,\r\n      { ...product, isSelectedForCheckout: false },\r\n    ];\r\n  },\r\n\r\n  [types.CHANGE_QUANTITY]: (state, action) => {\r\n    const { product, quantity } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n\r\n    const updatedItem = Object.assign({}, state[index], { quantity });\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default cartReducer;\r\n","export const SET_CART = 'cart/SET';\r\nexport const TOGGLE = 'cart/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\r\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\r\nexport const REMOVE = 'cart/REMOVE';\r\nexport const CLEAR = 'cart/CLEAR';\r\n","export function productPositionInWishList(wishList, productId) {\r\n  return wishList.map(item => item).indexOf(productId);\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as wishListOperations from './operations';\r\nimport * as wishListSelectors from './selectors';\r\n\r\nexport { wishListOperations, wishListSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst wishListReducer = createReducer(initialState)({\r\n  [types.TOGGLE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    if (index === -1) {\r\n      return [...state, productId];\r\n    }\r\n\r\n    const tempArrayWithOutOldProduct = state.filter(\r\n      (item) => item !== productId\r\n    );\r\n\r\n    return tempArrayWithOutOldProduct;\r\n  },\r\n  [types.ADD_WISHLIST]: (state, action) => {\r\n    const wishlist = action.payload;\r\n    return [...wishlist];\r\n  },\r\n\r\n  [types.REMOVE]: (state, action) => {\r\n    const { productId } = action.payload;\r\n    const index = utils.productPositionInWishList(state, productId);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default wishListReducer;\r\n","export const TOGGLE = 'wishList/TOGGLE';\r\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\r\nexport const REMOVE = 'wishList/REMOVE';\r\nexport const CLEAR = 'wishList/CLEAR';\r\n","export function getCartItemQuantity( cart, id ) {\r\n    return cart.find( item => item.product.id === id ).quantity;\r\n}\r\n\r\n\r\nexport const getTotalPriceOfCartItems = (cartItems) => {\r\n    if(!cartItems.length > 0){\r\n        return 0; \r\n    }\r\n\r\n    return cartItems.reduce((a,b) => {\r\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\r\n    },0); \r\n\r\n}","import reducer from './reducers';\r\n\r\nimport * as checkoutOperations from './operations';\r\nimport * as checkoutSelectors from './selectors';\r\n\r\nexport { checkoutOperations, checkoutSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n        product,\r\n        quantity,\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst checkoutReducer = createReducer(initialState)({\r\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\r\n    const { products } = action.payload;\r\n\r\n    if (products.length > 0) {\r\n      const uniqueProductsOfCheckout = products.filter(function(product) {\r\n        return state.indexOf(product) == -1;\r\n      });\r\n      return uniqueProductsOfCheckout;\r\n    } else {\r\n      return [...state];\r\n    }\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.productPositionInCart(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default checkoutReducer;\r\n","export const SET_CART = 'checkout/SET';\r\nexport const TOGGLE = 'checkout/TOGGLE';\r\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\r\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\r\nexport const REMOVE = 'checkout/REMOVE';\r\nexport const CLEAR = 'checkout/CLEAR';\r\n","export function productPositionInCart( cart, product ) {\r\n    return cart.map( item => item.product.id ).indexOf( product.id );\r\n}\r\n\r\nexport function newCartItem( product, quantity ) {\r\n    return {\r\n        product,\r\n        quantity,\r\n    };\r\n}\r\n","export const ADD = 'serach/ADD';\r\nexport const UPDATE = 'serach/UPDATE';\r\nexport const REMOVE = 'serach/REMOVE';\r\nexport const CLEAR = 'serach/CLEAR';\r\n","export function queryPositionInQueryList(queryList, query) {\r\n  return queryList.map(item => item.key).indexOf(query.key);\r\n}\r\n\r\nexport function newQueryItem(query) {\r\n  return query;\r\n}\r\n","import reducer from './reducers';\r\n\r\nimport * as queryOperations from './operations';\r\nimport * as querySelectors from './selectors';\r\n\r\nexport { queryOperations, querySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport * as utils from './utils';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n[\r\n    {\r\n       id: uniqueId,\r\n       key: 'searchQuery',\r\n       value: string | product => {name,id,image}\r\n       created: Date,\r\n       lastUpdated: Date\r\n    }\r\n]\r\n*/\r\n\r\nconst initialState = [];\r\n\r\nconst searyQueryReducer = createReducer(initialState)({\r\n  [types.ADD]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, query);\r\n    if (index === -1) {\r\n      return [utils.newQueryItem(query), ...state];\r\n    }\r\n\r\n    const currentItem = state[index];\r\n    const updatedItem = Object.assign({}, currentItem);\r\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\r\n  },\r\n  [types.UPDATE]: (state, action) => {\r\n    const { query } = action.payload;\r\n    const oldQuery = state.find(item => item.key !== query.key);\r\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\r\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\r\n  },\r\n  [types.REMOVE]: (state, action) => {\r\n    const { product } = action.payload;\r\n    const index = utils.queryPositionInQueryList(state, product);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n  [types.CLEAR]: () => [],\r\n});\r\n\r\nexport default searyQueryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\nimport { createReducer } from \"../../utils\";\r\n\r\n/* State shape\r\n{\r\n    details: product,\r\n    list: [ product ],\r\n}\r\n*/\r\n\r\nconst detailsReducer = createReducer( null )( {\r\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\r\n} );\r\n\r\nconst listReducer = createReducer( [ ] )( {\r\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\r\n} );\r\n\r\nexport default combineReducers( {\r\n    details: detailsReducer,\r\n    list: listReducer,\r\n} );\r\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\r\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\r\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\r\n\r\nexport const FETCH_LIST = \"product/FETCH_LIST\";\r\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\r\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as productOperations from \"./operations\";\r\n\r\nexport {\r\n    productOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\n/* State shape\r\n{\r\n    isAuthenticated: bool,\r\n    redirectAfterLogin: string\r\n}\r\n*/\r\n\r\nconst authReducer = createReducer(false)({\r\n  [types.LOGIN]: () => true,\r\n  [types.LOGOUT]: () => false,\r\n});\r\n\r\nconst redirectAfterLoginReducer = createReducer(null)({\r\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated: authReducer,\r\n  redirectAfterLogin: redirectAfterLoginReducer,\r\n});\r\n","export const LOGIN = \"session/LOGIN\";\r\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\r\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\r\nexport const LOGOUT = \"session/LOGOUT\";\r\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\r\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\r\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\r\n","import reducer from \"./reducers\";\r\n\r\nimport * as sessionOperations from \"./operations\";\r\n\r\nexport {\r\n    sessionOperations,\r\n};\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_CATEGORIES]: (state, action) => {\r\n    const { categories } = action.payload;\r\n\r\n    if (categories) {\r\n      return categories;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_CATEGORIES]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\r\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\r\n","import reducer from './reducers';\r\n\r\nimport * as categoryOperations from './operations';\r\nimport * as categorySelectors from './selectors';\r\n\r\nexport { categoryOperations, categorySelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = {};\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\r\n    const { response } = action.payload;\r\n\r\n    if (response) {\r\n      return { ...state, ...response };\r\n    }\r\n\r\n    return { ...state };\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\r\n","import reducer from './reducers';\r\n\r\nimport * as cacheOperations from './operations';\r\nimport * as cacheSelectors from './selectors';\r\n\r\nexport { cacheOperations, cacheSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_BRAND]: (state, action) => {\r\n    const { brands } = action.payload;\r\n\r\n    if (brands) {\r\n      return brands;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_BRAND]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_BRAND = 'category/ADD_BRAND';\r\nexport const GET_BRAND = 'category/GET_BRAND';\r\n","import reducer from './reducers';\r\n\r\nimport * as brandOperations from './operations';\r\nimport * as brandSelectors from './selectors';\r\n\r\nexport { brandOperations, brandSelectors };\r\n\r\nexport default reducer;\r\n","import * as types from './types';\r\nimport { createReducer } from '../../utils';\r\n\r\nconst initialState = [];\r\n\r\nconst cartReducer = createReducer(initialState)({\r\n  [types.ADD_TAGS]: (state, action) => {\r\n    const { tags } = action.payload;\r\n\r\n    if (tags) {\r\n      return tags;\r\n    }\r\n\r\n    return [...state];\r\n  },\r\n\r\n  [types.GET_TAGS]: (state, action) => {\r\n    return [...state];\r\n  },\r\n});\r\n\r\nexport default cartReducer;\r\n","export const ADD_TAGS = 'tag/ADD_TAGS';\r\nexport const GET_TAGS = 'tag/GET_TAGS';\r\n","import reducer from './reducers';\r\n\r\nimport * as tagOperations from './operations';\r\nimport * as tagSelectors from './selectors';\r\n\r\nexport { tagOperations, tagSelectors };\r\n\r\nexport default reducer;\r\n","const isObjectEmpty = value => {\r\n  return !value || !Object.keys(value).length > 0;\r\n};\r\n\r\nconst manupulateURL = (url, urlOptions = {}) => {\r\n  if (isObjectEmpty(urlOptions)) return url;\r\n\r\n  const params = urlOptions.params || {};\r\n  const placeHolders = urlOptions.placeHolders || {};\r\n\r\n\r\n\r\n  return url\r\n    .split('/')\r\n    .map(currentValue => {\r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders) && !currentValue.includes('?')) {\r\n        console.log('currentValue',currentValue);\r\n        let actualPlaceholderValue = placeHolders[currentValue.replace(':', '')];\r\n        console.log('actualPlaceholderValue',actualPlaceholderValue);\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n      \r\n      if (currentValue.includes(':') && !isObjectEmpty(placeHolders) && currentValue.includes('?')) {\r\n        let fuckValue = currentValue.split('?'); \r\n        if(fuckValue && fuckValue.length > 0){\r\n          fuckValue = fuckValue.map(item => {\r\n            return placeHolders[item.replace(':', '')] ? placeHolders[item.replace(':', '')] : item\r\n          })\r\n        }\r\n        console.log('fuckValue',fuckValue);\r\n        let actualPlaceholderValue = fuckValue.join('?');\r\n        console.log('actualPlaceholderValue',actualPlaceholderValue,'currentVAlue',currentValue);\r\n        console.log('placeHolders',placeHolders);\r\n        currentValue = actualPlaceholderValue;\r\n      }\r\n\r\n      if (currentValue.includes('?')) {\r\n        currentValue = currentValue\r\n          .split('&')\r\n          .map(currentValue => {\r\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\r\n            return currentValue.replace(param, params[param] || '');\r\n          })\r\n          .join('&');\r\n      }\r\n      return currentValue;\r\n    })\r\n    .join('/');\r\n};\r\n\r\nexport default manupulateURL;\r\n","import config from '../config.json';\r\nimport apiMap from '../apiMap.json';\r\nimport Converter from './converter.js';\r\n\r\n// import utils\r\nimport { manupulateURL } from './utils';\r\n\r\nlet converter = new Converter();\r\n\r\nclass Connector {\r\n  //TODO\r\n  constructor() {\r\n    this.options = {};\r\n  }\r\n\r\n  /**\r\n   * @method request sends request to server\r\n   * this function determines api url and method from config.json\r\n   * and sends request and converts recieved data to general format\r\n   * @param {String} item\r\n   * @param {String} format\r\n   * @param {Object} data optional\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async request(item, format = 'json', options = {}) {\r\n    let api = apiMap[config.server][item]; //api url & method\r\n\r\n    // configuring options for fetch request\r\n\r\n    this.options = {\r\n      ...this.options,\r\n      method: api.method,\r\n      credentials: 'include',\r\n      headers: new Headers({\r\n        ...(format === 'json' && {\r\n          'Content-Type': 'application/json',\r\n        }),\r\n        // \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        ...(options.headers && {\r\n          ...options.headers,\r\n        }),\r\n      }),\r\n\r\n      ...(format === 'json' ? {\r\n        body: api.method !== 'get' ? JSON.stringify(options.body) : null,\r\n      } : {\r\n          body: api.method !== 'get' ? options.body : null,\r\n        }),\r\n    };\r\n\r\n    //*replace variable parts in url with actual data if params exists |or| just return the url\r\n\r\n    const url = manupulateURL(api.url, options.urlOptions);\r\n    console.log('url',api.url)\r\n    console.log('manupulatedUrl',url);\r\n\r\n    // change the formate to text if the server is wooCommerce\r\n    if (config['server'] === 'wooCommerce') {\r\n      // format = 'text';\r\n    }\r\n\r\n    try {\r\n      let res = await fetch(config.baseURL + url, this.options);\r\n\r\n      if (res.status >= 200 && res.status < 300) {\r\n        let formattedData = await res['json'](); //await res.json(), res.text()\r\n        if (formattedData.status === 'error') {\r\n          throw formattedData.error;\r\n        }\r\n\r\n        let convertedData = await converter[item](formattedData); //convert recieved data to app general format\r\n        return convertedData;\r\n      } else {\r\n        let error = await res[format]();\r\n\r\n        throw error;\r\n      }\r\n    } catch (err) {\r\n\r\n      throw err;\r\n      //TODO: breakdown errors\r\n    }\r\n  }\r\n}\r\n\r\nexport default Connector;\r\n","import config from '../config.json';\r\nimport dataMap from '../dataMap.json';\r\nimport { product } from '../state/ducks';\r\n\r\nclass Converter {\r\n\t/**\r\n   * @public\r\n   * @method categoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\tname: category.name && category.name,\r\n\t\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\t\tproductCount: category.productCount || 0,\r\n\t\t\t\t\tparent: category.parent || '',\r\n\t\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\t\tsubCount:\r\n\t\t\t\t\t\tcategory.subCategory.length === 1\r\n\t\t\t\t\t\t\t? category.subCategory[0] && category.subCategory[0].name ? category.subCategory.length : 0\r\n\t\t\t\t\t\t\t: category.subCategory.length,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t};\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postCategoryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryList(resData) {\r\n\tconst data = resData.data && resData.data  ? resData.data : [];\r\n\r\n\tconst formatedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((category) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: category._id || '',\r\n\t\t\t\tkey: category._id || '',\r\n\t\t\t\tname: category.name && category.name,\r\n\t\t\t\tdescription: category.description && category.description,\r\n\t\t\t\tcover: category.cover ? `${config['baseURL']}${category.cover.thumbnail}` : null,\r\n\t\t\t\ticon: category.icon ? `${config['baseURL']}${category.icon}` : null,\r\n\t\t\t\t\r\n\t\t\t};\r\n\t\t});\r\n\r\n\treturn formatedData;\r\n};\r\n\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postCategoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postCategoryDetail(resData) {\r\n\tconst data = resData;\r\n\r\n\tif(Object.keys(data).length > 0){\r\n\t\treturn {\r\n\t\t\tid: data._id || '',\r\n\t\t\tkey: data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description,\r\n\t\t\tcover: data.cover ? `${config['baseURL']}${data.cover.thumbnail}` : null,\r\n\t\t\ticon: data.icon ? `${config['baseURL']}${data.icon}` : null,\r\n\t\t}\r\n\t}\r\n\t\r\n};\r\n\r\n\t/**\r\n* @public\r\n* @method getAllNotification convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync getAllNotification(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((noti) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: noti._id || '',\r\n\t\t\t\t\tkey: noti._id || '',\r\n\t\t\t\t\theading: noti.heading && noti.heading,\r\n\t\t\t\t\ttext: noti.text && noti.text,\r\n\t\t\t\t\ttype: noti.type,\r\n\t\t\t\t\tlink: noti.link || '',\r\n\t\t\t\t\tadded: noti.added || '',\r\n\t\t\t\t\tread: noti.read\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method categorySelectist convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync categorySelectist(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\ttitle: category.name && category.name,\r\n\t\t\t\t\t...(category.subCategory &&\r\n\t\t\t\t\t\tcategory.subCategory.length > 0 &&\r\n\t\t\t\t\t\tcategory.subCategory[0] &&\r\n\t\t\t\t\t\tcategory.subCategory[0]['name'] && {\r\n\t\t\t\t\t\tchildren: category.subCategory.map((subCat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\t\tkey: subCat._id,\r\n\t\t\t\t\t\t\t\ttitle: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.thumbnail ? subCat.cover.thumbnail : \"\"}` : ''\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\r\n\r\n\t\t/**\r\n\t* @public\r\n\t* @method categorySelectist convert api data from API to general format based on config server\r\n\t* @param {Object} data response objectc from alpha\r\n\t* @returns {Object}  converted data\r\n\t*/\r\n\tasync postSelectCategoryList(resData) {\r\n\r\n\t\tconst data = resData.data;\r\n\r\n\t\tconst formatedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((category) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: category._id || '',\r\n\t\t\t\t\tkey: category._id || '',\r\n\t\t\t\t\ttitle: category.name && category.name,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\tavailable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t: 0\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCart(resData) {\r\n\t\tconst cartItems = resData.items || [];\r\n\t\tconst convertedData =\r\n\t\t\tcartItems.length > 0 &&\r\n\t\t\tcartItems.map((cartItem) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: cartItem._id || '',\r\n\t\t\t\t\tname: cartItem.name && cartItem.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${cartItem.cover.medium}`,\r\n\t\t\t\t\tregularPrice: cartItem.price && cartItem.price['regular'],\r\n\t\t\t\t\tofferPrice: cartItem.price && cartItem.price['offer'],\r\n\t\t\t\t\tquantity: cartItem.quantity,\r\n\t\t\t\t\turl: cartItem.url,\r\n\t\t\t\t\tcartKey: cartItem.cartKey\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addtoCart convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addtoCart(resData) {\r\n\t\tlet data = false;\r\n\r\n\t\tif (resData['inserted']) {\r\n\t\t\tdata = {\r\n\t\t\t\tid: resData['inserted']._id || '',\r\n\t\t\t\tname: resData['inserted'].name && resData['inserted'].name,\r\n\t\t\t\tcover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\r\n\t\t\t\tregularPrice: resData['inserted'].price && resData['inserted'].price['regular'],\r\n\t\t\t\tofferPrice: resData['inserted'].price && resData['inserted'].price['offer'],\r\n\t\t\t\tquantity: resData['inserted'].quantity,\r\n\t\t\t\turl: resData['inserted'].url,\r\n\t\t\t\tcartKey: resData['inserted'].cartKey\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromCart(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData) {\r\n\t\t\tconvertedData = true;\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCartItem convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCartItem(resData) {\r\n\t\tlet convertedData = false;\r\n\t\tif (resData['updated']) {\r\n\t\t\tconvertedData = {\r\n\t\t\t\tquantity: resData.updated['quantity']\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method clearCart convert api data from API to general format based on config server\r\n   * @param {Object} resData response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync clearCart(data) {\r\n\t\tif (data && data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getWishlist(resData) {\r\n\t\t// const cartItems = resData.items || [];\r\n\t\tconst convertedData = resData;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeFromWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeFromWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method removeAllWishlist convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync removeAllWishlist(resData) {\r\n\t\tif (resData && resData['msg'] === 'wishlist updated') {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\tavalable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum'] : 0\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method brandProducts convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandProducts(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\tavalable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t: 0\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// return {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext: isNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productSearch convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productSearch(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((product) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${product.cover.thumbnail}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\t\tpricing: product.pricing\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t\tavailable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t: 0\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method postList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postList(resData) {\r\n\tconst data = resData.data;\r\n\t// const isNext = resData.page.next;\r\n\r\n\tlet convertedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((post) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: post._id || '',\r\n\t\t\t\tname: post.name && post.name,\r\n\t\t\t\tbody: post.body && post.body,\r\n\t\t\t\tpreparationTime: post.preparationTime && post.preparationTime,\r\n\t\t\t\tservingSize: post.servingSize && post.servingSize,\r\n\t\t\t\tcookingTime: post.cookingTime && post.cookingTime,\r\n\t\t\t\tcover: `${config['baseURL']}${(post.cover && post.cover['thumbnail']) || ''}`,\r\n\t\t\t\turl: post.url,\r\n\t\t\t\tcategory: post.category,\r\n\t\t\t\ttags: post.tags,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t// convertedData = {\r\n\t// \tdata: convertedData,\r\n\t// \tisNext\r\n\t// };\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method postDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postDetail(resData) {\r\n\tconst data = resData;\r\n\t// const isNext = resData.page.next;\r\n\r\n\tif(Object.keys(data).length > 0){\r\n\t\treturn {\r\n\t\t\tid: data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tbody: data.body && data.body,\r\n\t\t\tpreparationTime: data.preparationTime && data.preparationTime,\r\n\t\t\tservingSize: data.servingSize && data.servingSize,\r\n\t\t\tcookingTime: data.cookingTime && data.cookingTime,\r\n\t\t\tcover: `${config['baseURL']}${(data.cover && data.cover['medium']) || ''}`,\r\n\t\t\turl: data.url,\r\n\t\t\tproducts: data.requiredProducts,\r\n\t\t\tcategory:\r\n\t\t\t(data.category &&\r\n\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\tdata.category,\r\n\t \t\ttags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\t\t}\r\n\t}\r\n\telse return {}\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method bundleList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync bundleList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\turl: product.url,\r\n\t\t\t\t\tstartDate: product.startDate,\r\n\t\t\t\t\tendDate: product.endDate,\r\n\t\t\t\t\tactualPrice: product.actualPrice,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\tproduct: product['product'],\r\n\t\t\t\t\tproductCount: product['product'].length,\r\n\t\t\t\t\tprice:\r\n\t\t\t\t\t\tparseInt(product.price['offer']) > parseInt(product.price['regular'])\r\n\t\t\t\t\t\t\t? product.price['offer']\r\n\t\t\t\t\t\t\t: product.price['regular'],\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method bundleDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync bundleDetail(resData) {\r\n\t\tconst data = resData || {};\r\n\r\n\t\tif (Object.keys(data).length > 0) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t\tcover: `${config['baseURL']}${(data.cover && data.cover['thumbnail']) || ''}`,\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tstartDate: data.startDate,\r\n\t\t\t\tendDate: data.endDate,\r\n\t\t\t\tactualPrice: data.actualPrice,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory: data.category,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\ttime: data.time,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand,\r\n\t\t\t\ttags: data.tags,\r\n\t\t\t\tproducts: data.product,\r\n\t\t\t\tproductCount: data['product'].length,\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\t\t\timage:\r\n\t\t\t\t(data.image &&\r\n\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})) ||\r\n\t\t\t\t[],\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\telse return data;\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsPageVisits convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsPageVisits(resData) {\r\n\tconst data = resData && resData.data ? resData.data : [];\r\n\r\n\tconsole.log('getAnalyticsPageVisits',resData); \r\n\r\n\tlet convertedData =\r\n\t\tdata.length > 0 &&\r\n\t\tdata.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: item._id || '',\r\n\t\t\t\tvisit: item.count || '',\r\n\t\t\t\tname: item['detail'] && item['detail'][0] && item['detail'][0]['name'] ,\r\n\t\t\t\turl: item['detail'] && item['detail'][0] && item['detail'][0]['url'] ,\r\n\t\t\t\titemId: item['detail'] && item['detail'][0] && item['detail'][0]['_id'] ,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t// convertedData = {\r\n\t// \tdata: convertedData,\r\n\t// \tisNext\r\n\t// };\r\n\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsPageVisitCount convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async getAnalyticsPageVisitCount(resData) {\r\n\treturn resData; \r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsDemographicVisits convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  \tasync getAnalyticsDemographicVisits(resData) {\r\n\r\n\t\tconst data = resData && resData.data ? resData.data : [];\r\n\t\tif(data){\r\n\t\t\treturn data; \r\n\t\t}\r\n\t\telse return []\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method getAnalyticsOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n   async getAnalyticsOrders(resData) {\r\n\t   const data = resData.data || []; \r\n\t   return data; \r\n\r\n\t}\r\n\r\n\r\n\r\n\t\t/**\r\n\t * @public\r\n\t * @method getAnalyticsTotalUserCount convert api data from API to general format based on config server\r\n\t * @param {Object} data response objectc from wc\r\n\t * @returns {Object}  converted data\r\n\t */\r\n\tasync getAnalyticsTotalUserCount(resData) {\r\n\t\treturn resData; \r\n\t}\r\n\r\n\r\n\t\t/**\r\n\t * @public\r\n\t * @method customerDetail convert api data from API to general format based on config server\r\n\t * @param {Object} data response objectc from wc\r\n\t * @returns {Object}  converted data\r\n\t */\r\n\tasync customerDetail(resData) {\r\n\t\tif(resData){\r\n\t\t\treturn {\r\n\t\t\t\tid: resData._id || '',\r\n\t\t\t\tkey: resData._id || '',\r\n\t\t\t\tfirstName: resData.firstName || '',\r\n\t\t\t\tlastName: resData.lastName || '',\r\n\t\t\t\tname: resData.firstName + ' ' + resData.lastName,\r\n\t\t\t\tcountry: resData.country || '',\r\n\t\t\t\tcity: resData.city || '',\r\n\t\t\t\temail: resData.email || '',\r\n\t\t\t\tphone: resData.phone || '',\r\n\t\t\t\taddress1: resData.address1 || '',\r\n\t\t\t\taddress2: resData.address2 || '',\r\n\t\t\t\tcreated: resData.created || ''\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return resData; \r\n\t}\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method couponList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync couponList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tlet convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((product) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\tcode: product.code,\r\n\t\t\t\t\tminimumOrder: product.minimumOrder,\r\n\t\t\t\t\tmaximumOrder: product.maximumOrder,\r\n\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\torderedProducts: product.orderedProducts,\r\n\t\t\t\t\tfreeProducts: product.freeProducts,\r\n\t\t\t\t\torderedProductsCount: product.orderedProducts && product.orderedProducts.length,\r\n\t\t\t\t\tfreeProductsCount: product.freeProducts && product.orderedProducts.length,\r\n\t\t\t\t\tamountType: product.amountType,\r\n\t\t\t\t\tamount: product.amount,\r\n\t\t\t\t\tfreeDelivery: product.freeDelivery,\r\n\t\t\t\t\tstartDate: product.startDate,\r\n\t\t\t\t\tendDate: product.endDate,\r\n\t\t\t\t\tmaxUsePerUser: product.maxUsePerUser,\r\n\t\t\t\t\tactualPrice: product.actualPrice,\r\n\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\ttags: product.tags,\r\n\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method tagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync tagList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t\tdescription: tag.description && tag.description\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postTagList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync postTagList(resData) {\r\n\tconst data = resData.data;\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((tag) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: tag._id || '',\r\n\t\t\t\t\tkey: tag._id || '',\r\n\t\t\t\t\tname: tag.name && tag.name,\r\n\t\t\t\t\tdescription: tag.description && tag.description\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t\r\n\t\t/**\r\n   * @public\r\n   * @method postTagDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n  async postTagDetail(resData) {\r\n\tconst data = resData; \r\n\r\n\tif(Object.keys(data).length > 0){\r\n\t\treturn {\r\n\t\t\tid: data._id || '',\r\n\t\t\tkey: data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description\r\n\t\t}\r\n\t}\r\n\telse return {}\r\n\t}\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method brandList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync brandList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((brand) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: brand._id || '',\r\n\t\t\t\t\tkey: brand._id || '',\r\n\t\t\t\t\tname: brand.name && brand.name,\r\n\t\t\t\t\tdescription: brand.description && brand.description,\r\n\t\t\t\t\tcover: `${config['baseURL']}${brand.cover ? brand.cover.thumbnail : ''}`\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method setImageAsThumbnailToItem convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync setImageAsThumbnailToItem(resData) {\r\n\t\tif (resData.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method brandDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync brandDetail(resData) {\r\n\t\tconst data = Object.keys(resData).length > 0 ? resData : null;\r\n\t\tif (data) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tkey: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t\turl: data.url && data.url,\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method tagDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync tagDetail(resData) {\r\n\t\tconst data = Object.keys(resData).length > 0 ? resData : null;\r\n\t\tif (data) {\r\n\t\t\treturn {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tkey: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\turl: data.url && data.url,\r\n\t\t\t\tdescription: data.description && data.description,\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method customerList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync customerList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((customer) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: customer._id || '',\r\n\t\t\t\t\tkey: customer._id || '',\r\n\t\t\t\t\tfirstName: customer.firstName || '',\r\n\t\t\t\t\tlastName: customer.lastName || '',\r\n\t\t\t\t\tname: customer.firstName + ' ' + customer.lastName,\r\n\t\t\t\t\tcountry: customer.country || '',\r\n\t\t\t\t\tcity: customer.city || '',\r\n\t\t\t\t\temail: customer.email || '',\r\n\t\t\t\t\tphone: customer.phone || '',\r\n\t\t\t\t\taddress1: customer.address1 || '',\r\n\t\t\t\t\taddress2: customer.address2 || '',\r\n\t\t\t\t\tcreated: customer.created || ''\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method pageList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync pageList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((page) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...page\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method themeList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from alpha\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync themeList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((theme) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: theme._id || '',\r\n\t\t\t\t\tkey: theme._id || '',\r\n\t\t\t\t\tname: theme.name || '',\r\n\t\t\t\t\tadded: theme.added || '',\r\n\t\t\t\t\tthumbnail: `${config['baseURL']}${theme.thumbnail ? theme.thumbnail : \"\"}`,\r\n\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method componentList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync componentList(resData) {\r\n\t\tconst components = resData.components || {};\r\n\r\n\t\tif (components && components.length > 0) {\r\n\t\t\tconst convertedData =\r\n\t\t\t\tcomponents.length > 0 &&\r\n\t\t\t\tcomponents.map((component) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: component._id || '',\r\n\t\t\t\t\t\tkey: component._id || '',\r\n\t\t\t\t\t\tname: component.name || '',\r\n\t\t\t\t\t\titems: component.items.length > 0 ? component.items.map(item => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\t\t\timage: item.image.length > 0 ? item.image.map(img => {\r\n\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.thumbnail ? img.thumbnail : \"\"}`,\r\n\t\t\t\t\t\t\t\t\t\tid: img._id,\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}) : []\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method regionList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync regionList(data) {\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((region) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: region._id || '',\r\n\t\t\t\t\tkey: region._id || '',\r\n\t\t\t\t\tname: region.name || '',\r\n\t\t\t\t\tpickUpLocation: region.pickUpLocation || '',\r\n\t\t\t\t\tcountry: region.country || '',\r\n\t\t\t\t\tcountryCode: region.countryCode || '',\r\n\t\t\t\t\tcountryName: region.countryName || '',\r\n\t\t\t\t\tcity: region.city || '',\r\n\t\t\t\t\ttime: region.time || '',\r\n\t\t\t\t\tcharge: region.charge || {}\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method attributeList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync attributeList(data) {\r\n\t\tconst convertedData = Object.keys(data).length > 0 && data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync ImageListFromLibrary(resData) {\r\n\t\tconst data = resData.data || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((image) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: image._id || '',\r\n\t\t\t\t\tname: image.name && image.name,\r\n\t\t\t\t\tcover: `${config['baseURL']}${image.thumbnail}`,\r\n\t\t\t\t\tadded: image.added,\r\n\t\t\t\t\ttitle: image.title,\r\n\t\t\t\t\tlabels: image.labels,\r\n\t\t\t\t\talt: image.alt,\r\n\t\t\t\t\tcaption: image.caption\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method countryList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync countryList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((country) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: country._id || '',\r\n\t\t\t\t\tname: country.name && country.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getDeliveryRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\r\n   \r\n\tasync getDeliveryRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method cityList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync cityList(resData) {\r\n\t\tconst data = resData || [];\r\n\r\n\t\tconst convertedData =\r\n\t\t\tdata.length > 0 &&\r\n\t\t\tdata.map((city) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: city._id || '',\r\n\t\t\t\t\tname: city.name && city.name\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method forAnalytics convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync forAnalytics(resData) {\r\n\t\treturn resData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method productDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync productDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tminimumStock: data.minimumStock,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand && Object.key(data.brand).length > 0 ? {\r\n\t\t\t\t\tid: data.brand.id,\r\n\t\t\t\t\tname: data.brand.name,\r\n\r\n\t\t\t\t} : {},\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\ttags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[],\r\n\t\t\t\t\tavailable: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\t\t\t product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t\t : 0,\r\n\t\t\t\t\tminimum: product.pricing &&\r\n\t\t\t\t\tproduct.pricing.length > 0 ?\r\n\t\t\t\t\tproduct.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t: 0\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method couponDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync couponDetail(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || '',\r\n\t\t\t\tname: data.name && data.name,\r\n\t\t\t\tcode: data.code,\r\n\t\t\t\tminimumOrder: data.minimumOrder,\r\n\t\t\t\tmaximumOrder: data.maximumOrder,\r\n\t\t\t\torderedProducts: data.orderedProducts | [],\r\n\t\t\t\tfreeProducts: data.freeProducts || [],\r\n\t\t\t\torderedProductsCount: data.orderedProducts && data.orderedProducts.length,\r\n\t\t\t\tfreeProductsCount: data.freeProducts && data.orderedProducts.length,\r\n\t\t\t\tamountType: data.amountType,\r\n\t\t\t\tamount: data.amount,\r\n\t\t\t\tfreeDelivery: data.freeDelivery,\r\n\t\t\t\tstartDate: data.startDate,\r\n\t\t\t\tendDate: data.endDate,\r\n\t\t\t\tmaxUsePerUser: data.maxUsePerUser,\r\n\t\t\t\tactualPrice: data.actualPrice,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tcategory: data.category,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\ttime: data.time,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tbrand: data.brand,\r\n\t\t\t\ttags: data.tags,\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n    /**\r\n   * @public\r\n   * @method productDetailById convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync productDetailById(data) {\r\n\t\tconst convertedData =\r\n\t\t\t(Object.keys(data).length > 0 && {\r\n\t\t\t\tid: data._id || data.id || '',\r\n\t\t\t\tname: data.name || '',\r\n\t\t\t\tdescription: data.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.price && data.price['regular'],\r\n\t\t\t\tofferPrice: data.price && data.price['offer'],\r\n\t\t\t\turl: data.url,\r\n\t\t\t\tunit: data.unit,\r\n\t\t\t\tdate: data.date,\r\n\t\t\t\tvenue: data.venue,\r\n\t\t\t\tpricing: data.pricing,\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.price['offer']) > parseInt(data.price['regular'])\r\n\t\t\t\t\t\t? data.price['offer']\r\n\t\t\t\t\t\t: data.price['regular'],\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.category &&\r\n\t\t\t\t\t\tdata.category.length > 0 &&\r\n\t\t\t\t\t\tdata.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${cat.cover ? cat.cover.original && cat.cover.original : ''}`\r\n\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.category,\r\n\t\t\t\tbrand:\r\n\t\t\t\t\tdata.brand &&\r\n\t\t\t\t\t\tObject.keys(data.brand).length > 0 ? {\r\n\t\t\t\t\t\t\tid: data.brand._id,\r\n\t\t\t\t\t\t\tname: data.brand.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${data.brand.cover ? data.brand.cover.original && data.brand.cover.original : ''}`\r\n\t\t\t\t\t\t} :\r\n\t\t\t\t\t\tdata.brand,\r\n\t\t\t\tprimaryCategory: data.primaryCategory &&\r\n\t\t\t\t\tObject.keys(data.primaryCategory).length > 0 ? {\r\n\t\t\t\t\t\tid: data.primaryCategory._id,\r\n\t\t\t\t\t\tname: data.primaryCategory.name,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${data.primaryCategory.cover ? data.primaryCategory.cover.original && data.primaryCategory.cover.original : ''}`\r\n\t\t\t\t\t} :\r\n\t\t\t\t\tdata.primaryCategory,\r\n\t\t\t\ttags: data.tags && data.tags.length > 0 ? data.tags : [],\r\n\t\t\t\tavailableStock: data.availableStock,\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.image &&\r\n\t\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[]\r\n\t\t\t}) ||\r\n\t\t\t{};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateProduct(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tid: data.updated._id || data.updated.id || '',\r\n\t\t\t\tname: data.updated.name || '',\r\n\t\t\t\tdescription: data.updated.description.replace(/<[^>]+>/g, '') || '',\r\n\t\t\t\tregularPrice: data.updated.price && data.updated.price['regular'],\r\n\t\t\t\tofferPrice: data.updated.price && data.updated.price['offer'],\r\n\t\t\t\turl: data.updated.url,\r\n\t\t\t\tavailableStock: data.updated.availableStock,\r\n\t\t\t\tminimumStock: data.updated.minimumStock,\r\n\t\t\t\tunit: data.updated.unit,\r\n\t\t\t\tdate: data.updated.date,\r\n\t\t\t\tvenue: data.updated.venue,\r\n\t\t\t\tbrand: data.updated.brand && Object.key(data.updated.brand).length > 0 ? {\r\n\t\t\t\t\tid: data.updated.brand.id,\r\n\t\t\t\t\tname: data.updated.brand.name,\r\n\r\n\t\t\t\t} : {},\r\n\t\t\t\tprice:\r\n\t\t\t\t\tparseInt(data.updated.price['offer']) > parseInt(data.updated.price['regular'])\r\n\t\t\t\t\t\t? data.updated.price['offer']\r\n\t\t\t\t\t\t: data.updated.price['regular'],\r\n\t\t\t\tpricing: data.updated.pricing,\r\n\t\t\t\tcategory:\r\n\t\t\t\t\t(data.updated.category &&\r\n\t\t\t\t\t\tdata.updated.category.length > 0 &&\r\n\t\t\t\t\t\tdata.updated.category.map((cat) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: cat._id,\r\n\t\t\t\t\t\t\t\tname: cat.name\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\tdata.updated.category,\r\n\t\t\t\ttags: data.updated.tags && data.updated.tags.length > 0 ? data.updated.tags : [],\r\n\r\n\t\t\t\tcover: {\r\n\t\t\t\t\tcover: `${config['baseURL']}${data.updated.cover ? data.updated.cover.original && data.updated.cover.original : ''}`,\r\n\t\t\t\t\tid: data.updated.cover ? data.updated.cover._id : ''\r\n\t\t\t\t},\r\n\t\t\t\timage:\r\n\t\t\t\t\t(data.updated.image &&\r\n\t\t\t\t\t\tdata.updated.image.length > 0 &&\r\n\t\t\t\t\t\tdata.updated.image.map((img) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.original}`,\r\n\t\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})) ||\r\n\t\t\t\t\t[],\r\n\t\t\t\t\tstatus: 'ok'\r\n\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateComponent(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateTag(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updatePage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updatePage(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateBrand(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCategory(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateRegion(data) {\r\n\t\tconst convertedData = data;\r\n\r\n\t\tif (data && data.updated) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.updated,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBundle convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBundle(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCoupon convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCoupon(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method pageDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync pageDetail(data) {\r\n\t\tconst convertedData = data;\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateOrderStatus convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateOrderStatus(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteImageFromLibrary(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method deletePage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deletePage(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}; \r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postAddCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync postAddCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t};\r\n\t/**\r\n   * @public\r\n   * @method addProduct convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addProduct(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method addPost convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n  async addPost(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data.inserted) {\r\n\t\treturn {\r\n\t\t\t...data.inserted[0],\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method postAddTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync postAddTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t\r\n\t/**\r\n   * @public\r\n   * @method addOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\r\n\r\n  async addOrder(data) {\r\n\tconst convertedData = data;\r\n\tif (data && data.inserted) {\r\n\t\treturn {\r\n\t\t\t...data.inserted[0],\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\treturn convertedData;\r\n}\r\n\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method addTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method addPage convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync addPage(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method addComponent convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.inserted) {\r\n\t\t\treturn {\r\n\t\t\t\t...data.inserted[0],\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteTag convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteTag(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method logout convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logout(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method activeTheme convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync activeTheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deletetheme convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deletetheme(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCustomer convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCustomer(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method deleteComponent convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync deleteComponent(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteBrand convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteBrand(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteCategory convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteCategory(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method deleteRegion convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync deleteRegion(data) {\r\n\t\tconst convertedData = data;\r\n\t\tif (data && data.success) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method siteSettings convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync siteSettings(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method updateSiteSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateSiteSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n* @public\r\n* @method updateInvoiceSettings convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync updateInvoiceSettings(data) {\r\n\r\n\t\tif (data['updated']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync invoiceSettingsDetail(resData) {\r\n\t\tconst convertedData = resData;\r\n\r\n\t\tif (resData.data) {\r\n\t\t\treturn {\r\n\t\t\t\t...resData.data\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method categoryDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync categoryDetail(data) {\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tid: data.id || data._id || '',\r\n\t\t\tname: data.name && data.name,\r\n\t\t\tdescription: data.description && data.description,\r\n\t\t\tproductCount: data.productCount || 0,\r\n\t\t\ticon: data.icon ? `${config['baseURL']}${data.icon}` : '',\r\n\t\t\ttype: data.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name'] ? 'Top category' : 'Child category',\r\n\t\t\turl: data.url || '',\r\n\t\t\tsubCategory:\r\n\t\t\t\tdata.subCategory.length > 0 && data.subCategory[0] && data.subCategory[0]['name']\r\n\t\t\t\t\t? data.subCategory.map((subCat) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: subCat._id || '',\r\n\t\t\t\t\t\t\tname: subCat.name && subCat.name,\r\n\t\t\t\t\t\t\tdescription: subCat.description && subCat.description,\r\n\t\t\t\t\t\t\tcover: subCat.cover ? `${config['baseURL']}${subCat.cover.medium}` : ''\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [],\r\n\t\t\tcover: {\r\n\t\t\t\tcover: `${config['baseURL']}${data.cover ? data.cover.original && data.cover.original : ''}`,\r\n\t\t\t\tid: data.cover ? data.cover._id : ''\r\n\t\t\t},\r\n\t\t\timage:\r\n\t\t\t\t(data.image &&\r\n\t\t\t\t\tdata.image.length > 0 &&\r\n\t\t\t\t\tdata.image.map((img) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: img._id || '',\r\n\t\t\t\t\t\t\tname: img.name && img.name,\r\n\t\t\t\t\t\t\tcover: `${config['baseURL']}${img.medium}`,\r\n\t\t\t\t\t\t\tadded: img.added,\r\n\t\t\t\t\t\t\ttitle: img.title,\r\n\t\t\t\t\t\t\tlabels: img.labels,\r\n\t\t\t\t\t\t\talt: img.alt,\r\n\t\t\t\t\t\t\tcaption: img.caption\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})) ||\r\n\t\t\t\t[]\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\t/**\r\n   * @public\r\n   * @method createOrder convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync createOrder(data) {\r\n\t\t//map props\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\r\n\t\r\n\r\n\t\t/**\r\n   * @public\r\n   * @method adminRoleRegister convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync adminRoleRegister(data) {\r\n\t\t//map props\r\n\r\n\t\tif(data && data.length > 0){\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok',\r\n\t\t\t\t...data[0]\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return {}; \r\n\t}\r\n\r\n\r\n\t\t\t/**\r\n   * @public\r\n   * @method adminList convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync adminList(resData) {\r\n\t\t//map props\r\n\r\n\t\treturn resData; \r\n\t}; \r\n\r\n\r\n\t\t\t\t/**\r\n   * @public\r\n   * @method adminDetail convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n  async adminDetail(resData) {\r\n\t//map props\r\n\r\n\treturn resData; \r\n}; \r\n\r\n\r\n\t\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method orderDetail convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync orderDetail(data) {\r\n\t\t//map props\r\n\t\tconst order = data.order || false;\r\n\t\tif (order) {\r\n\t\t\treturn {\r\n\t\t\t\tid: order.id || order._id,\r\n\t\t\t\tshippingAddress: order.shippingAddress,\r\n\t\t\t\tname: order.shippingAddress['firstName'] + \" \" + order.shippingAddress['lastName'],\r\n\t\t\t\tcountry: order.shippingAddress['country'],\r\n\t\t\t\tcity: order.shippingAddress['city'],\r\n\t\t\t\taddress: order.shippingAddress['address'],\r\n\t\t\t\tphone: order.shippingAddress['phone'],\r\n\t\t\t\temail: order.shippingAddress['email'],\r\n\t\t\t\tstatus: order.status,\r\n\t\t\t\ttotal: order.totalPrice,\r\n\t\t\t\tdeliveryCharge: order.totalPrice,\r\n\t\t\t\tdeliveryRegion: order.deliveryRegion,\r\n\t\t\t\tdeliveryName: order.deliveryRegion && order.deliveryRegion['name'],\r\n\t\t\t\tdeliveryPickUpLocation: order.deliveryRegion && order.deliveryRegion['pickUpLocation'],\r\n\t\t\t\tdeliveryCountryName: order.deliveryRegion && order.deliveryRegion['countryName'],\r\n\t\t\t\tproducts: order.products && order.products.length > 0 ? order.products.map(product => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tid: product._id || '',\r\n\t\t\t\t\t\tname: product.name && product.name,\r\n\t\t\t\t\t\tdescription: product.description && product.description,\r\n\t\t\t\t\t\tcover: `${config['baseURL']}${(product.cover && product.cover['thumbnail']) || ''}`,\r\n\t\t\t\t\t\tregularPrice: product.price && product.price['regular'],\r\n\t\t\t\t\t\tofferPrice: product.price && product.price['offer'],\r\n\t\t\t\t\t\turl: product.url,\r\n\t\t\t\t\t\tunit: product.unit,\r\n\t\t\t\t\t\tcategory: product.category,\r\n\t\t\t\t\t\tpricing: product.pricing,\r\n\t\t\t\t\t\tdate: product.date,\r\n\t\t\t\t\t\ttime: product.time,\r\n\t\t\t\t\t\tvenue: product.venue,\r\n\t\t\t\t\t\tbrand: product.brand,\r\n\t\t\t\t\t\ttags: product.tags,\r\n\t\t\t\t\t\tprice: product.price,\r\n\t\t\t\t\t\tavailable: product.pricing &&\r\n\t\t\t\t\t\t product.pricing.length > 0 ?\r\n\t\t\t\t\t\t  product.pricing[0]['stock'] && product.pricing[0]['stock']['available']\r\n\t\t\t\t\t\t  : 0,\r\n\t\t\t\t\t\t  minimum: product.pricing &&\r\n\t\t\t\t\t\t product.pricing.length > 0 ?\r\n\t\t\t\t\t\t  product.pricing[0]['stock'] && product.pricing[0]['stock']['minimum']\r\n\t\t\t\t\t\t  : 0\r\n\t\t\t\t\t}\r\n\t\t\t\t}) : [],\r\n\t\t\t\tdate_created: order.added,\r\n\t\t\t\tpaymentMethod: order['payment']['paymentMethod'],\r\n\t\t\t\tpaymentStatus: order['payment']['status'],\r\n\t\t\t\tpayment: order['payment'],\r\n\t\t\t\tcustomerId: order['customer'] ? order['customer']['_id'] : ''\r\n\t\t\t}\r\n\t\t}\r\n\t\telse return {}\r\n\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signup convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signup(data) {\r\n\t\treturn {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method signin convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync signin(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method login convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync login(data) {\r\n\t\tif (data['msg']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method addImageToLibrary convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addImageToLibrary(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\r\n\r\n\t\tconst formatedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn formatedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\t...data\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync updateCurrentCustomerData(data) {\r\n\t\t//map props\r\n\t\t// let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData = {\r\n\t\t\tstatus: 'ok'\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method changePassword convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync changePassword(data) {\r\n\t\tif (data['success']) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getCurrentUserOrders(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\tconst isNext = resData.page.next;\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\tbillingAddress: item.billingAddress,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\tdate_created: item.date,\r\n\t\t\t\t\t\tpaymentMethod: item['payment']['paymentMethod'],\r\n\t\t\t\t\t\tcustomerId: item.customer['_id']\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\tconvertedData = {\r\n\t\t\tdata: convertedData,\r\n\t\t\tisNext\r\n\t\t};\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t/**\r\n* @public\r\n* @method orderList convert api data from API to general format based on config server\r\n* @param {Object} data response objectc from wc\r\n* @returns {Object}  converted data\r\n*/\r\n\tasync orderList(resData) {\r\n\t\tconst data = resData.data || [];\r\n\t\t// const isNext = resData.page.next;\r\n\r\n\t\tconsole.log('orderListDAta',data);\r\n\r\n\t\tlet convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\t\tshippingAddress: item.billingAddress,\r\n\t\t\t\t\t\t\tname: item.shippingAddress && item.shippingAddress['firstName'] && item.shippingAddress['firstName'] + \" \" +\r\n\t\t\t\t\t\t\t item.shippingAddress && item.shippingAddress['lastName'] && item.shippingAddress['lastName'],\r\n\t\t\t\t\t\t\tcountry: item.shippingAddress && item.shippingAddress['country'] && item.shippingAddress['country'],\r\n\t\t\t\t\t\t\tcity: item.shippingAddress && item.shippingAddress['city'] && item.shippingAddress['city'],\r\n\t\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\t\tdate_created: item.added,\r\n\t\t\t\t\t\t\tpaymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n\t\t\t\t\t\t\tpaymentStatus: item['payment'] && item['payment']['status'],\r\n\t\t\t\t\t\t\tpayment: item['payment'],\r\n\t\t\t\t\t\t\tcustomerId: item['customer'] ? item['customer']['_id'] : ''\r\n\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\t// convertedData = {\r\n\t\t// \tdata: convertedData,\r\n\t\t// \tisNext\r\n\t\t// };\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\r\n\t\t/**\r\n\t\t* @public\r\n\t\t* @method orderListForCustomer convert api data from API to general format based on config server\r\n\t\t* @param {Object} data response objectc from wc\r\n\t\t* @returns {Object}  converted data\r\n\t\t*/\r\n\t\tasync orderListForCustomer(resData) {\r\n\t\t\tconst data = resData.orders ? resData.orders.data : [];\r\n\t\t\t// const isNext = resData.page.next;\r\n\r\n\t\t\tlet convertedData =\r\n\t\t\t\t(data.length > 0 &&\r\n\t\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tid: item.id || item._id,\r\n\t\t\t\t\t\t\tshippingAddress: item.billingAddress,\r\n\t\t\t\t\t\t\tname: item.shippingAddress && item.shippingAddress['firstName'] && item.shippingAddress['firstName'] + \" \" +\r\n\t\t\t\t\t\t\t item.shippingAddress && item.shippingAddress['lastName'] && item.shippingAddress['lastName'],\r\n\t\t\t\t\t\t\tcountry: item.shippingAddress && item.shippingAddress['country'] && item.shippingAddress['country'],\r\n\t\t\t\t\t\t\tcity: item.shippingAddress && item.shippingAddress['city'] && item.shippingAddress['city'],\r\n\t\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\t\ttotal: item.totalPrice,\r\n\t\t\t\t\t\t\tproducts: item.products,\r\n\t\t\t\t\t\t\tdate_created: item.added,\r\n\t\t\t\t\t\t\tpaymentMethod: item['payment'] && item['payment']['paymentMethod'],\r\n\t\t\t\t\t\t\tpaymentStatus: item['payment'] && item['payment']['status'],\r\n\t\t\t\t\t\t\tpayment: item['payment'],\r\n\t\t\t\t\t\t\tcustomerId: item['customer'] ? item['customer']['_id'] : ''\r\n\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})) ||\r\n\t\t\t\t[];\r\n\r\n\t\t\t// convertedData = {\r\n\t\t\t// \tdata: convertedData,\r\n\t\t\t// \tisNext\r\n\t\t\t// };\r\n\r\n\t\t\treturn convertedData;\r\n\t\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method currentUserOrders convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync currentUserOrders(data) {\r\n\t\t//map props\r\n\t\tlet generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\r\n\r\n\t\tconst convertedData =\r\n\t\t\t(data.length > 0 &&\r\n\t\t\t\tdata.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...generalFormat,\r\n\t\t\t\t\t\tid: item.id,\r\n\t\t\t\t\t\tstatus: item.status,\r\n\t\t\t\t\t\ttotal: item.total,\r\n\t\t\t\t\t\tline_items: item.line_items,\r\n\t\t\t\t\t\tdate_created: item.date_created\r\n\t\t\t\t\t};\r\n\t\t\t\t})) ||\r\n\t\t\t[];\r\n\r\n\t\treturn convertedData;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method payment convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\r\n\tasync payment(data) {\r\n\t\tconst paymentItems = data.items;\r\n\t\tif (!paymentItems.length > 0) {\r\n\t\t\treturn paymentItems;\r\n\t\t}\r\n\r\n\t\tconst items = paymentItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tname: item.name || '',\r\n\t\t\t\tnumber: item.text || ''\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method welcome convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync welcome(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method logo convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync logo(data) {\r\n\t\tconst src = data.image && data.image.length > 0 ? `${config['baseURL']}${data.image[0]['original']}` : '';\r\n\t\treturn {\r\n\t\t\tsrc,\r\n\t\t\ttarget: data.target\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method hotline convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync hotline(data) {\r\n\t\treturn {\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method navLinks convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync navLinks(data) {\r\n\t\tconst navLinkItems = data.items;\r\n\t\tif (!navLinkItems.length > 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst items = navLinkItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttext: item.name || item.text,\r\n\t\t\t\ttarget: item.target\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method slider convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync slider(data) {\r\n\t\tconst sliderItems = data.items;\r\n\t\tif (!sliderItems.length > 0) {\r\n\t\t\treturn sliderItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method sliderRight convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync sliderRight(data) {\r\n\t\tconst sliderRightItems = data.items;\r\n\t\tif (!sliderRightItems.length > 0) {\r\n\t\t\treturn sliderRightItems;\r\n\t\t}\r\n\r\n\t\tconst images = sliderRightItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tsrc: `${config['baseURL']}${item.image[0]['medium']}`\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn images;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method address convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from alpha\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync address(data) {\r\n\t\treturn {\r\n\t\t\tname: data.name,\r\n\t\t\ttext: data.text\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Links convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Links(data) {\r\n\t\tconst servicesItems = data.items;\r\n\t\tif (!servicesItems.length > 0) {\r\n\t\t\treturn servicesItems;\r\n\t\t}\r\n\r\n\t\tconst items = servicesItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n   * @public\r\n   * @method Account convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync Account(data) {\r\n\t\tconst accountItems = data.items;\r\n\t\tif (!accountItems.length > 0) {\r\n\t\t\treturn accountItems;\r\n\t\t}\r\n\r\n\t\tconst items = accountItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'About Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync 'About Us'(data) {\r\n\t\tconst aboutUsItems = data.items;\r\n\t\tif (!aboutUsItems.length > 0) {\r\n\t\t\treturn aboutUsItems;\r\n\t\t}\r\n\r\n\t\tconst items = aboutUsItems.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\ttarget: item.target,\r\n\t\t\t\tname: item.name || item.text\r\n\t\t\t};\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method 'getTotalUserCount Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync getTotalUserCount(data) {\r\n\t\treturn data;\r\n\t}\r\n\r\n\r\n\t/**\r\n   * @public\r\n   * @method addCoupon Us' convert api data from API to general format based on config server\r\n   * @param {Object} data response objectc from wc\r\n   * @returns {Object}  converted data\r\n   */\r\n\tasync addCoupon(data) {\r\n\t\tif (data && data[0]) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'ok',\r\n\t\t\t\t...data[0]\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {};\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Converter;\r\n","import { useEffect, useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype Tdependecies = any[] | [];\r\ntype TItem = string;\r\ntype IFormat = string | undefined;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n          done: true,\r\n        },\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useFetch = (\r\n  dependencies: Tdependecies = [],\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  options?: any,\r\n  format?: IFormat\r\n): IState => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_INIT' });\r\n      try {\r\n        // @ts-ignore\r\n        let data = await connector.request(item, format, options);\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, dependencies);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import { useReducer } from 'react';\r\nimport Connector from '../lib/connector.js';\r\n\r\ntype TInitialData = any;\r\ntype TItem = string;\r\n\r\ntype Actions = {\r\n  type: string;\r\n  payload?: any;\r\n};\r\n\r\ninterface IState {\r\n  readonly isLoading: boolean;\r\n  readonly error: object;\r\n  readonly data: TInitialData;\r\n  readonly done: boolean;\r\n}\r\n\r\nconst connector = new Connector();\r\n\r\nconst dataFetchReducer = (state: IState, action: Actions) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: {\r\n          isError: false,\r\n          error: {},\r\n        },\r\n        done: false,\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        data: action.payload,\r\n        done: true,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: {\r\n          isError: true,\r\n          error: action.payload,\r\n        },\r\n        done: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst useHandleFetch = (\r\n  initialData: TInitialData,\r\n  item: TItem,\r\n  format?: string\r\n): [IState, (values: any) => void] => {\r\n  const initialState: IState = {\r\n    isLoading: false,\r\n    error: {\r\n      isError: false,\r\n      error: {},\r\n    },\r\n    data: initialData,\r\n    done: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\r\n\r\n  const handlePost = async (options: any) => {\r\n    dispatch({ type: 'FETCH_INIT' });\r\n\r\n    try {\r\n      // @ts-ignore\r\n      let data = await connector.request(item, format || 'json', options);\r\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      return data;\r\n    } catch (error) {\r\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\r\n      return initialData;\r\n    }\r\n  };\r\n\r\n  return [state, handlePost];\r\n};\r\n\r\nexport default useHandleFetch;\r\n","import React, { useState } from 'react';\r\nimport { Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tusername: Yup.string()\r\n\t\t.label('Username')\r\n\t\t.required('Username is required')\r\n\t\t.min(3, 'Username must have at least 3 characters'),\r\n\r\n\tpassword: Yup.string().label('Password').required('Password is required'),\r\n});\r\n\r\nconst initialValues = {\r\n\tusername: '',\r\n\tpassword: '',\r\n};\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst QuickEdit = ({ }: Props) => {\r\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleLoginFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tusername: values.username,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.username || !values.password || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmaxWidth: '400px',\r\n\t\t\t\t\t\t\tmargin: '20px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Username'\r\n\t\t\t\t\t\t\t\tvalue={values.username}\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tisError={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.username && errors.username) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('username');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import Login from './Login';\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Link, Switch, withRouter } from 'react-router-dom';\r\nimport { Layout, Menu, Upload, message } from 'antd';\r\n\r\n\r\nimport {\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    TagOutlined,\r\n    BranchesOutlined,\r\n    GoldOutlined,\r\n    FilterOutlined,\r\n    TagsOutlined,\r\n    CarOutlined,\r\n    ShoppingCartOutlined,\r\n    MailOutlined,\r\n    SettingOutlined,\r\n    InboxOutlined,\r\n    SlidersOutlined,\r\n    DesktopOutlined,\r\n    RadarChartOutlined,\r\n    MessageOutlined,\r\n    UserOutlined,\r\n    FileAddOutlined,\r\n    FileSearchOutlined,\r\n    BgColorsOutlined,\r\n    BankOutlined,\r\n    FireOutlined,\r\n    MailTwoTone,\r\n    UserAddOutlined,\r\n    FileExcelOutlined,\r\n    CalculatorOutlined,\r\n    CustomerServiceOutlined,\r\n    MoneyCollectOutlined,\r\n    UsergroupAddOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst SiderComponent = (props: any) => {\r\n    const [collapsed, setcollapsed] = useState(false);\r\n    const onCollapse = (collapsed: any) => {\r\n        // console.log(collapsed);\r\n        setcollapsed(collapsed);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Sider\r\n            width={260}\r\n            style={{\r\n                boxShadow: '7px 0 60px rgba(0,0,0,.05)',\r\n                border: 'none'\r\n            }}\r\n            collapsible collapsed={collapsed} onCollapse={onCollapse} theme='light'>\r\n\r\n            <Menu selectable={true} mode='inline'>\r\n                <Menu.Item key='1' icon={<PieChartOutlined />}>\r\n                    <Link to='/admin'>Dashboard</Link>\r\n                </Menu.Item>\r\n\r\n                {/* <SubMenu key='sub1' icon={<TagOutlined />} title='Category'>\r\n\t\t\t\t\t<Menu.Item key='2'>\r\n\t\t\t\t\t\t<Link to='/category'>List Categories</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                {/* <SubMenu key='sub2' icon={<BranchesOutlined />} title='Brand'>\r\n\r\n\t\t\t\t\t<Menu.Item key='5'>\r\n\t\t\t\t\t\t<Link to='/brand'>List Brand</Link>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</SubMenu> */}\r\n\r\n                <SubMenu\r\n                    key='sub3'\r\n                    icon={<GoldOutlined />}\r\n                    title='Product'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<RadarChartOutlined />}\r\n                        key='6'>\r\n                        <Link to='/admin/product'>Products</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<BankOutlined />}\r\n                        key='2222'>\r\n                        <Link to='/admin/bundle'>Bundle</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='9' icon={<TagsOutlined />}>\r\n                        <Link to='/admin/tag'>Tags</Link>\r\n\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='2' icon={<TagOutlined />}>\r\n                        <Link to='/admin/category'>Categories</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='5' icon={<BranchesOutlined />}>\r\n                        <Link to='/admin/brand'>Brand</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n                <SubMenu\r\n                    key='sub333'\r\n                    icon={<GoldOutlined />}\r\n                    title='Recipies'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<RadarChartOutlined />}\r\n                        key='655'>\r\n                        <Link to='/admin/posts'>List Recipe</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<TagOutlined />}\r\n                        key='2222444'>\r\n                        <Link to='/admin/posts/category'>Recipe Category</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item key='955' icon={<TagsOutlined />}>\r\n                        <Link to='/admin/posts/tag'>Recipe Tags</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n\r\n\r\n                {/* <Menu.Item key='9' icon={<TagsOutlined />}>\r\n\t\t\t\t\t<Link to='/tag'>Tags</Link>\r\n\t\t\t\t</Menu.Item> */}\r\n\r\n                {/* <Menu.Item key='1012' icon={<FileExcelOutlined />}>\r\n                    <Link to='/admin/posts'>\r\n                        Recipies\r\n                    </Link>\r\n                </Menu.Item> */}\r\n\r\n                <Menu.Item key='1011' icon={<FireOutlined />}>\r\n                    <Link to='/admin/coupon'>Coupon</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key='10' icon={<CarOutlined />}>\r\n                    <Link to='/admin/delivery'>Delivery</Link>\r\n                </Menu.Item>\r\n\r\n                \r\n                <SubMenu\r\n                    key='sub33'\r\n                    icon={<CalculatorOutlined />}\r\n                    title='Accounting'\r\n                // onTitleClick={() => props.history.push('/product')}\r\n                >\r\n                    <Menu.Item\r\n                        icon={<UsergroupAddOutlined />}\r\n                        key='66'>\r\n                        <Link to='/admin/staff'>\r\n                            Staff\r\n                        </Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<MoneyCollectOutlined />}\r\n                        key='67'>\r\n                        <Link to='/admin/expense'>\r\n                            Expense\r\n                        </Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n\r\n\r\n                <SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\r\n                    <Menu.Item key='11'>\r\n                        <Link to='/admin/order'>List Orders</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='11222'>\r\n                        <Link to='/admin/order/overview'>\r\n                            Order Analytics\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='12'>\r\n                        <Link to='/admin/order/new'>Add Order</Link>\r\n                    </Menu.Item>\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='13' icon={<TeamOutlined />}>\r\n                    <Link to='/admin/customer'>Customer</Link>\r\n                </Menu.Item>\r\n\r\n\r\n                <Menu.Item key='1888' icon={<MailOutlined />}>\r\n                    <Link to='/admin/email'>Email</Link>\r\n                </Menu.Item>\r\n\r\n\r\n                <Menu.Item key='199' icon={<MessageOutlined />}>\r\n                    <Link to='/admin/sms'>SMS</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\r\n                    <Menu.Item key='18'\r\n                        icon={<FileSearchOutlined />}\r\n                    >\r\n                        <Link to='/admin/page'> List Pages</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        icon={<FileAddOutlined />}\r\n                        key='17'>\r\n                        <Link to='/admin/page/new'> Add new Page</Link>\r\n                    </Menu.Item>\r\n\r\n                </SubMenu>\r\n\r\n                <Menu.Item key='23'\r\n                    icon={<SlidersOutlined />}\r\n                >\r\n                    <Link to='/admin/settings/components'>Components</Link>\r\n                </Menu.Item>\r\n\r\n                <SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\r\n                    <Menu.Item\r\n                        icon={<UserOutlined />}\r\n                        key='19'>\r\n                        <Link to='/admin/settings/siteInfo'>Site information</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<UserAddOutlined />}\r\n                        key='19999'>\r\n                        <Link to='/admin/settings/admins'>Admins</Link>\r\n                    </Menu.Item>\r\n\r\n                    <Menu.Item\r\n                        icon={<BgColorsOutlined />}\r\n                        key='20'>\r\n                        <Link to='/admin/settings/themes'>Themes</Link>\r\n                    </Menu.Item>\r\n\r\n                    {/* <Menu.Item key='21'>\r\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\r\n\t\t\t\t\t</Menu.Item> */}\r\n                    {/* <Menu.Item key='22'>\r\n                        <Link to='/admin/settings/invoice'>Invoice</Link>\r\n                    </Menu.Item> */}\r\n\r\n                </SubMenu>\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n};\r\n\r\nexport default withRouter(SiderComponent);\r\n","import Sider from \"./Sider\";\r\nexport default Sider; ","import Empty from \"./Empty\";\r\nexport default Empty; ","import React from 'react'\r\nimport { Empty } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n    height?: number\r\n}\r\n\r\nconst EmptyComponent = ({\r\n    title = 'No Data found',\r\n    height = 300\r\n}: Props) => {\r\n    return (\r\n        <div style={{\r\n            height: height,\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        }}>\r\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyComponent\r\n","import React, { useEffect } from 'react';\r\n\r\n\r\n// import hooks \r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\n// import { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import libraries \r\nimport { useHistory } from \"react-router\";\r\nimport { LogoutOutlined,\r\n     BellOutlined, \r\n     OrderedListOutlined,\r\n    TwitterSquareFilled,\r\n    ShoppingCartOutlined,\r\n    UserOutlined,\r\n     } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\r\nconst { Header } = Layout;\r\n\r\n\r\n// import styles\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst HeaderComponent = (props: Props) => {\r\n    const history = useHistory();\r\n\r\n    const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch({}, 'getAllNotification');\r\n\r\n\r\n    const handleMenuClick = (e) => {\r\n        if (e.key === '3') {\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getAllNotification = async () => {\r\n            await handleGetAllNOticationFetch({});\r\n        }\r\n\r\n        getAllNotification();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    console.log('getAllNotificationState',getAllNotificationState);\r\n\r\n\r\n    const typeIcon = {\r\n        customer: <UserOutlined />,\r\n        order: <ShoppingCartOutlined />\r\n    }\r\n\r\n    const menu = () => {\r\n\r\n        if (getAllNotificationState.isLoading) return (\r\n            <div style={{\r\n                height:'100%',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:'center',\r\n                backgroundColor:\"#fff\",\r\n                padding: '0 50px'\r\n            }}>\r\n                <Spin />\r\n            </div>\r\n        );\r\n\r\n        if (getAllNotificationState.done && getAllNotificationState.data && !getAllNotificationState.data[0]) {\r\n            return (\r\n                <div \r\n                className='notificationListItemContainer'\r\n                style={{\r\n                    height:'100%',\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    alignItems:'center',\r\n                    backgroundColor:\"#fff\",\r\n                    padding: '0 50px'\r\n                }}>\r\n                     <Empty title='No Notification found' />\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div \r\n            style={{\r\n                \r\n            }}\r\n            className='notificationListItemContainer'>\r\n                                 \r\n                                 {getAllNotificationState.done\r\n                 && getAllNotificationState.data[0]\r\n                 && (\r\n                    <div style={{\r\n                      \r\n                    }}>\r\n                    <div style={{\r\n                        width:'100%',\r\n                        display:'flex',\r\n                        justifyContent:\"space-around\",\r\n                    }}>\r\n                    <a\r\n                     style={{\r\n                          textAlign:'center',\r\n                          backgroundColor:'#f7f7f7' ,\r\n                          padding:\"10px\",\r\n                          width:'50%',\r\n                          fontSize:'13px'\r\n\r\n                     }}\r\n                      href=\"##\">\r\n                        CLEAR ALL\r\n                     </a>\r\n                     <a\r\n                     onClick={() => history.push('/admin/notification')}\r\n                     style={{\r\n                          textAlign:'center',\r\n                          backgroundColor:'#eee'   ,\r\n                          padding:\"10px\",\r\n                          width:'50%' ,\r\n                          fontSize:'13px'\r\n                     }}\r\n                      href=\"##\">\r\n                      SEE ALL \r\n                     </a>\r\n                    </div>\r\n                    </div>\r\n                 )\r\n               }\r\n\r\n            {getAllNotificationState.done\r\n            && getAllNotificationState.data[0]\r\n            && getAllNotificationState.data.map((item,index) => {\r\n                console.log('itemNotification',item);\r\n            return (\r\n            <div\r\n              onClick={() => history.push(`/admin/${item.type}/${item.id}`)}\r\n              className={!item.read ? 'notificationListItemContainer__item notificationListItemContainer__item-active' : 'notificationListItemContainer__item'}>\r\n                <span className='notificationListItemContainer__item-icon'>\r\n                  {typeIcon[item['type']]}\r\n                </span>\r\n                <div className='notificationListItemContainer__item-info'>\r\n                    <h3>\r\n                        {item.heading}\r\n                    </h3>\r\n                    <h4>\r\n                        {item.text}\r\n                    </h4>\r\n                    <h2>\r\n                    <Moment >\r\n                        {item.added}\r\n                    </Moment>\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    })}\r\n</div>\r\n\r\n          \r\n        )\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <Header\r\n            style={{\r\n                background: '#fff',\r\n                height: '60px',\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                boxShadow: '0 0.46875rem 2.1875rem rgba(8,10,37,.01), 0 0.9375rem 1.40625rem rgba(8,10,37,.01), 0 0.25rem 0.53125rem rgba(8,10,37,.02), 0 0.125rem 0.1875rem rgba(8,10,37,.01)',\r\n                zIndex: 10,\r\n                transition: ' all .2s',\r\n                alignItems: 'center',\r\n                alignContent: 'center'\r\n            }}\r\n        >\r\n            <h2\r\n\r\n                onClick={() => history.push('/admin')}\r\n                style={{\r\n                    color: '#0072EA', marginTop: '10px', marginLeft: '-20px',\r\n                    cursor: 'pointer'\r\n\r\n                }}\r\n            >\r\n                Admin\r\n            </h2>\r\n\r\n            <div\r\n                style={{\r\n                    marginRight: '-28px'\r\n                }}>\r\n\r\n\r\n                <Dropdown\r\n                    placement=\"bottomLeft\"\r\n\r\n                    overlay={menu}\r\n                // visible={this.state.visible}\r\n                >\r\n                    <a\r\n                        style={{\r\n                            marginRight: '10px'\r\n                        }}\r\n                        href='###' className='notificationIconContainer'>\r\n\r\n                        <Badge\r\n                            overflowCount={100}\r\n                            // @ts-ignore\r\n                            showZero={TwitterSquareFilled}\r\n                            count={getAllNotificationState.done && !getAllNotificationState.data ? 0 : getAllNotificationState.data.length ? getAllNotificationState.data.length : 0}\r\n                        >\r\n                            <span style={{\r\n                                marginLeft: '10px',\r\n                                fontWeight: 600,\r\n                                borderRadius: '25px',\r\n                                color: '#1890ff',\r\n                                padding: '2px 20px',\r\n                                cursor: 'pointer',\r\n                                marginRight: '-5px'\r\n                            }}>\r\n                                <BellOutlined />\r\n\r\n                            </span>\r\n                        </Badge>\r\n                    </a>\r\n                </Dropdown>\r\n\r\n\r\n\r\n\r\n                <a href='/admin/auth/logout'>\r\n                    <span style={{\r\n                        marginLeft: '10px',\r\n                        fontWeight: 600,\r\n                        borderRadius: '25px',\r\n                        color: '#1890ff',\r\n                        padding: '2px 20px',\r\n                        cursor: 'pointer'\r\n                    }}>\r\n                        <LogoutOutlined />\r\n                        <span style={{\r\n                            marginLeft: '10px',\r\n\r\n                        }}>\r\n                            logout\r\n                    </span>\r\n                    </span>\r\n                </a>\r\n\r\n            </div>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default HeaderComponent;\r\n","import Header from \"./Header\";\r\nexport default Header; ","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// import libraries \r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\nimport { Select, Button, Spin, Empty } from 'antd';\r\nimport Moment from \"react-moment\";\r\nimport moment from 'moment'; \r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\nexport const RAINFALL = {\r\n    \"2018\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 65.4\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 1.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 23\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 65.6\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 43.2\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 19.4\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 42.8\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 97.8\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 104.8\r\n        }\r\n    ],\r\n    \"2019\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 11.2\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 18.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 12\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 7.2\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 53.4\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 49.8\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 45.2\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 51.4\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 41\r\n        },\r\n        {\r\n            month: 10,\r\n            rainfall: 24\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 54.4\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 6.2\r\n        }\r\n    ]\r\n};\r\n\r\n\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    }, {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nconst ApiVisits = (props: Props) => {\r\n    const [selectedApiValue, setSelectedApiValue] = useState('date');\r\n\r\n\r\n\r\n    \r\n\r\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\r\n\r\n\r\n    const [userData, setuserData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getDemoGraphicVisitsValue = async () => {\r\n            const uservisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                    }\r\n                }\r\n            }); \r\n\r\n           console.log('uservisitsData',uservisitsDataRes); \r\n\r\n           // @ts-ignore\r\n           if(uservisitsDataRes){\r\n            // @ts-ignore\r\n            setuserData(uservisitsDataRes)\r\n           }\r\n\r\n\r\n           };\r\n\r\n\r\n           getDemoGraphicVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n\r\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState);\r\n\r\n\r\n\r\n    \r\n    const options = [\r\n        {\r\n            value: 'date',\r\n            name: 'Date'\r\n        },\r\n        {\r\n            value: 'hour',\r\n            name: 'Hour'\r\n        },\r\n        {\r\n            value: 'dayOfWeek',\r\n            name: 'Day of week'\r\n        },\r\n        {\r\n            value: 'dayOfMonth',\r\n            name: 'Day of month'\r\n        },\r\n         {\r\n            value: 'month',\r\n            name: 'Month'\r\n        },\r\n        {\r\n            value: 'year',\r\n            name: 'Year'\r\n        }\r\n    ]\r\n\r\n    \r\n\r\n    const date = new Date();\r\n    const thisMonth = MONTHS[date.getMonth()]\r\n    \r\n\r\n\r\n    const getFormateDateValue = (order) => {\r\n\r\n        if(selectedApiValue === 'day'){\r\n            return order ? moment(order).format('MMMM Do YYYY, h:mm:ss a') : order;\r\n        }\r\n        else if (selectedApiValue === 'date'){\r\n            return order ? moment(order).format('MMMM Do YYYY') : order;\r\n        }\r\n        else if (selectedApiValue === 'month'){\r\n            return order ? MONTHS[order - 1] : order; ;\r\n        }\r\n        return order; \r\n    }\r\n    \r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__userVisits'>\r\n            <div className='overviewContainer__body-apiVisits-header'>\r\n                <div className='overviewContainer__body-apiVisits-header-info'>\r\n                    <h2>\r\n                        Users \r\n                    </h2>\r\n\r\n                        <h3>\r\n                          All users that visited\r\n                        </h3>\r\n                </div>\r\n\r\n\r\n                <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n            </div>\r\n\r\n            <div className='overviewContainer__body-body'>\r\n            {demoGraphicVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                margin:'100px 0',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n              <Spin size='large' />\r\n            </div>\r\n\r\n            </>\r\n        )}\r\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No User visited`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n               {demoGraphicVisitsState.done && userData && userData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={userData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis dataKey={selectedApiValue} \r\n                        tickFormatter={getFormateDateValue}\r\n                         />\r\n                        <YAxis\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            unit={selectedApiValue === 'month' ? thisMonth : ''}\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n            </div>\r\n            {/* <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\tIn the last month\r\n\t\t\t\t</h3>\r\n            </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApiVisits\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n// import libraries \r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\nimport { Select, Button, Spin, Empty } from 'antd';\r\nimport Moment from \"react-moment\";\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\nexport const RAINFALL = {\r\n    \"2018\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 65.4\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 1.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 23\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 65.6\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 43.2\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 19.4\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 42.8\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 16.4\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 97.8\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 104.8\r\n        }\r\n    ],\r\n    \"2019\": [\r\n        {\r\n            month: 1,\r\n            rainfall: 11.2\r\n        },\r\n        {\r\n            month: 2,\r\n            rainfall: 18.6\r\n        },\r\n        {\r\n            month: 3,\r\n            rainfall: 12\r\n        },\r\n        {\r\n            month: 4,\r\n            rainfall: 7.2\r\n        },\r\n        {\r\n            month: 5,\r\n            rainfall: 53.4\r\n        },\r\n        {\r\n            month: 6,\r\n            rainfall: 49.8\r\n        },\r\n        {\r\n            month: 7,\r\n            rainfall: 45.2\r\n        },\r\n        {\r\n            month: 8,\r\n            rainfall: 51.4\r\n        },\r\n        {\r\n            month: 9,\r\n            rainfall: 41\r\n        },\r\n        {\r\n            month: 10,\r\n            rainfall: 24\r\n        },\r\n        {\r\n            month: 11,\r\n            rainfall: 54.4\r\n        },\r\n        {\r\n            month: 12,\r\n            rainfall: 6.2\r\n        }\r\n    ]\r\n};\r\n\r\n\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    MONTHS[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    }, {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n]\r\n\r\nconst ApiVisits = (props: Props) => {\r\n    const [selectedApiValue, setSelectedApiValue] = useState('date');\r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                    }\r\n                }\r\n            }); \r\n\r\n           console.log('ordersDataRes',ordersDataRes); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[selectedApiValue]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    const options = [\r\n        {\r\n            value: 'date',\r\n            name: 'Date'\r\n        },\r\n        {\r\n            value: 'hour',\r\n            name: 'Hour'\r\n        },\r\n        {\r\n            value: 'dayOfWeek',\r\n            name: 'Day of week'\r\n        },\r\n        {\r\n            value: 'dayOfMonth',\r\n            name: 'Day of month'\r\n        },\r\n         {\r\n            value: 'month',\r\n            name: 'Month'\r\n        },\r\n        {\r\n            value: 'year',\r\n            name: 'Year'\r\n        }\r\n    ]\r\n\r\n\r\n\r\n    const date = new Date();\r\n    const thisMonth = MONTHS[date.getMonth()]\r\n    \r\n\r\n    const getFormateDateValue = (order) => {\r\n\r\n        if(selectedApiValue === 'day'){\r\n            return order ? moment(order).format('MMMM Do YYYY, h:mm:ss a') : order;\r\n        }\r\n        else if (selectedApiValue === 'date'){\r\n            return order ? moment(order).format('MMMM Do YYYY') : order;\r\n        }\r\n        else if (selectedApiValue === 'month'){\r\n            return MONTHS[order - 1];\r\n        }\r\n        return order; \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='overviewContainer__userVisits'>\r\n            <div className='overviewContainer__body-apiVisits-header'>\r\n                <div className='overviewContainer__body-apiVisits-header-info'>\r\n                    <h2>\r\n                        Orders \r\n                    </h2>\r\n\r\n                        <h3>\r\n                          All orders that visited\r\n                        </h3>\r\n                </div>\r\n\r\n                <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n            </div>\r\n\r\n            <div className='overviewContainer__body-body'>\r\n            {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n\r\n            <div style={{\r\n                margin:'100px 0',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n                <Spin size='large' />\r\n             </div>\r\n            </>\r\n          )}\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Orders Created`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n               {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                        dataKey={selectedApiValue} \r\n                        tickFormatter={getFormateDateValue}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            unit={selectedApiValue === 'month' ? thisMonth : ''}\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n            </div>\r\n            {/* <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\tIn the last month\r\n\t\t\t\t</h3>\r\n            </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApiVisits\r\n","import React, { useState, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\n// import lib \r\n\r\nimport { ResponsiveContainer, PieChart, Tooltip, Pie, Cell } from \"recharts\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    UserOutlined,\r\n    CalendarOutlined,\r\n    GoldOutlined,\r\n    ShoppingCartOutlined,\r\n    TagOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Select, Button, Spin, Empty } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'browser',\r\n        name: 'Browser'\r\n    },\r\n    {\r\n        value: 'device',\r\n        name: 'Device'\r\n    },\r\n    {\r\n        value: 'os',\r\n        name: 'OS'\r\n    }, {\r\n        value: 'platform',\r\n        name: 'Platform'\r\n    },\r\n  \r\n\r\n];\r\n\r\n\r\nexport const AGE_GROUP = [\r\n    {\r\n        device: \"18-24\",\r\n        percentage: 14\r\n    },\r\n    {\r\n        device: \"25-34\",\r\n        percentage: 24\r\n    },\r\n    {\r\n        device: \"35-44\",\r\n        percentage: 22\r\n    },\r\n    {\r\n        device: \"45-54\",\r\n        percentage: 18\r\n    },\r\n    {\r\n        device: \"55-64\",\r\n        percentage: 16\r\n    },\r\n    {\r\n        device: \"65+\",\r\n        percentage: 6\r\n    }\r\n];\r\n\r\nexport const COLORS = [\r\n    '#1890ff',\r\n    '#20A39E',\r\n    '#61D095',\r\n    '#FFBA49',\r\n    '#EF5B5B',\r\n    '#A4036F',\r\n];\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\nconst PlatformVisits = (props: Props) => {\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('browser');\r\n\r\n\r\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\r\n\r\n\r\n    const [demographicData, setdemographicData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const getDemoGraphicVisitsValue = async () => {\r\n            const demograpicVisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: selectedApiValue,\r\n                    }\r\n                }\r\n            }); \r\n           };\r\n\r\n           getDemoGraphicVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        if(demoGraphicVisitsState.done && demoGraphicVisitsState.data){\r\n            setdemographicData(demoGraphicVisitsState.data); \r\n        }; \r\n    },[demoGraphicVisitsState])\r\n\r\n\r\n\r\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState)\r\n    console.log('demographicData',demographicData)\r\n\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n    const RADIAN = Math.PI / 180;\r\n\r\n\r\n    const renderCustomizedLabel = ({\r\n        cx,\r\n        cy,\r\n        midAngle,\r\n        innerRadius,\r\n        outerRadius,\r\n        value,\r\n        name,\r\n        index,\r\n        percent,\r\n    }) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN) - 10;\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n        console.log('percent..',percent);\r\n        return (\r\n            <text x={x} y={y} fill=\"white\" fontSize={12} dominantBaseline=\"central\">\r\n                {`${(percent * 100).toFixed(0)}%`}\r\n            </text>\r\n        );\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className='overviewContainer__body-platformVisits'>\r\n            <div className='overviewContainer__body-platformVisits-header'>\r\n                <div className='overviewContainer__body-platformVisits-header-info'>\r\n                    <h2>\r\n                        Demographic\r\n                        </h2>\r\n                    <h3>\r\n                       {selectedApiValue} demography\r\n                        </h3>\r\n                </div>\r\n                <div className='overviewContainer__body-platformVisits-header-controller'>\r\n                    <Select\r\n                        bordered={false}\r\n                        showSearch\r\n                        style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                        placeholder='Select Type'\r\n                        optionFilterProp='children'\r\n                        onChange={onChange}\r\n                        defaultValue={'browser'}\r\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    >\r\n                        {\r\n                            options.map((option) => {\r\n                                return <Option value={option.value}>{option.name}</Option>;\r\n                            })}\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-body\">\r\n\r\n            {demoGraphicVisitsState.isLoading && (\r\n            <>\r\n                <div style={{\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    alignItems:\"center\",\r\n                    marginTop:'100px',\r\n                    marginBottom:'100px',\r\n                }}>\r\n                <Spin\r\n                size='large'\r\n                />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n                    {demoGraphicVisitsState.done && demographicData && demographicData.length > 0 && (\r\n                        <ResponsiveContainer width=\"100%\" height={300}>\r\n                        <PieChart fontSize={14}>\r\n                            <Tooltip\r\n                                cursor={false}\r\n                                contentStyle={TooltipContainerStyles}\r\n                                formatter={(value, name) => [`${value}`, `${name}`]}\r\n                            />\r\n\r\n                            <Pie\r\n                                dataKey=\"count\"\r\n                                data={demographicData}\r\n                                outerRadius={100}\r\n                                innerRadius={40}\r\n                                name={selectedApiValue}\r\n                                nameKey={selectedApiValue}\r\n                                unit=\"%\"\r\n                                label={renderCustomizedLabel}\r\n                                labelLine={false}\r\n                            >\r\n                                {demographicData && demographicData.map((entry, index) => (\r\n                                    <Cell\r\n                                        key={`cell-${index}`}\r\n                                        fill={COLORS[index % COLORS.length]}\r\n                                    />\r\n                                ))}\r\n                            </Pie>\r\n                            </PieChart>\r\n                        </ResponsiveContainer>\r\n                    )}\r\n            </div>\r\n\r\n            <div className=\"overviewContainer__body-footer\">\r\n                <h3>\r\n                    <span>\r\n                        <CalendarOutlined />\r\n                    </span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlatformVisits\r\n\r\n\r\n// http://localhost:5000/admin/analytics/user?metric=day?start=date&end=datae\r\n// /http://localhost:5000/admin/analytics/item?type=product&item=534534534534&metric=day","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n\r\n    const history = useHistory(); \r\n\r\n\r\n    const [options, setoptions] = useState(localOptions);\r\n    const [selectedApiValue, setSelectedApiValue] = useState('product');\r\n    const [pageVisitsState, handlePageVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsPageVisits');\r\n\r\n\r\n    useEffect(()=>{\r\n        const getPageVisitsValue = async () => {\r\n            const pageVisitsDataRes =  await handlePageVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        visitType: selectedApiValue,\r\n                        item: 'item',\r\n                    }\r\n                }\r\n            }); \r\n           };\r\n\r\n           getPageVisitsValue(); \r\n\r\n    },[selectedApiValue])\r\n\r\n    const onChange = (value) => {\r\n        setSelectedApiValue(value);\r\n    }\r\n\r\n\r\n    console.log('pageVisitsState',pageVisitsState)\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    Popularity\r\n                    </h2>\r\n                <h3>\r\n                      All {selectedApiValue} that were visited\r\n                    </h3>\r\n            </div>\r\n            <div className='overviewContainer__body-apiVisits-header-controller'>\r\n                <Select\r\n                    bordered={false}\r\n                    showSearch\r\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\r\n                    placeholder='Select an api'\r\n                    optionFilterProp='children'\r\n                    onChange={onChange}\r\n                    defaultValue={selectedApiValue}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    {\r\n                        options.map((option) => {\r\n                            return <Option value={option.value}>{option.name}</Option>;\r\n                        })}\r\n                </Select>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {pageVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n                {pageVisitsState.done && !(pageVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {pageVisitsState.done && pageVisitsState.data && pageVisitsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={pageVisitsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                \r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                       <a href='##'>\r\n                                       <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/${selectedApiValue && selectedApiValue.toLowerCase()}/${record.itemId}`)\r\n                                            }}  \r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                textTransform:'uppercase',\r\n                                                cursor: 'pointer'\r\n                                            }}>\r\n                                            {text || `${selectedApiValue} Deleted`}\r\n                                        </h4>\r\n                                       </a>\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Count\"\r\n                                dataIndex=\"visit\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n// import components \r\nimport ApiVisits from \"./ApiVisits\";\r\nimport OrderOverView from \"./OrderOverView\";\r\nimport PlatformVisits from \"./PlatformVisits\";\r\nimport PageVisits from \"./PageVisits\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getTotalUserCount = async () => {\r\n\t\t\tawait handleGetTotalUserCountFetch({});\r\n\t\t}\r\n\r\n\t\tgetTotalUserCount();\r\n\t}, []);\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst getProductVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\r\n\t\t\t\tparams: 'product'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetProductVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst getCategoryVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\r\n\t\t\t\tparams: 'category'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetCategoryVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t{/* <div className=\"overviewContainer__header\">\r\n\r\n\t\t\t\t{totalUserCountState.done && totalUserCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Users\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{totalUserCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t{analyticsProductVisitCountState.done && analyticsProductVisitCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Products\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{analyticsProductVisitCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\t\t\t\t{analyticsCategoryVisitCountState.done && analyticsCategoryVisitCountState.data && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Category\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{analyticsCategoryVisitCountState.data['totalIndex'] || 0}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t<div className=\"overviewContainer__header-card\">\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\r\n\t\t\t\t\t\t\t<ShoppingCartOutlined />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t+ Orders\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t8503\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\tIn the last month\r\n\t\t\t\t\t     </h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n */}\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<PageVisits />\r\n\t\t\t\t<PlatformVisits />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t</div>\r\n\t\t\t<OrderOverView />\r\n\t\t\t<ApiVisits />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nconst DataTable = (props: any) => (\r\n\t<ContentLoader\r\n\t\tspeed={0.5}\r\n\t\twidth={1300}\r\n\t\theight={400}\r\n\t\tviewBox='0 0 1300 400'\r\n\t\tbackgroundColor='#f3f3f3'\r\n\t\tforegroundColor='#ecebeb'\r\n\t\t{...props}\r\n\t>\r\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\r\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='203' r='12' />\r\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='265' r='12' />\r\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='323' r='12' />\r\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\r\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='1456' cy='386' r='12' />\r\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\r\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\r\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\r\n\t\t<circle cx='37' cy='97' r='11' />\r\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\r\n\t\t<circle cx='1316' cy='88' r='11' />\r\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\r\n\t\t<circle cx='77' cy='96' r='11' />\r\n\t</ContentLoader>\r\n);\r\n\r\nDataTable.metadata = {\r\n\tname: 'Mohd Arif Un',\r\n\tgithub: 'arif-un',\r\n\tdescription: 'Data Table skeleton',\r\n\tfilename: 'DataTable'\r\n};\r\n\r\nexport default DataTable;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {AddNewCategory,QuickEdit} from \"../category\"\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Category Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n      // console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                   onClick={() => {\r\n                    history.push(`/admin/category/${record.id}`)\r\n                    // setcategoryDetailVisible(true);\r\n                    setactiveCategoryForEdit(record)\r\n                  }}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px',\r\n                  cursor: 'pointer'\r\n\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/category/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n       \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  \r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n          productCountValue: true \r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState); \r\n\r\n  \r\n\r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Categories\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onChange={e => handleSearch(e.target.value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{categoryState.done && \r\n    <AddNewCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\nconst { TextArea } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?: string;\r\n    value?: string;\r\n    onChange?: any;\r\n    disabled?: boolean;\r\n    isError?: boolean;\r\n    errorString?: string;\r\n    name?: string;\r\n    rows?: number\r\n    placeholder?:any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, \r\n    onChange, disabled, isError,\r\n     errorString, name, rows = 4,\r\n     placeholder\r\n     }: Props) => {\r\n    return (\r\n        <>\r\n            {label && (\r\n                <h3 className='inputFieldLabel'>\r\n                    {label}\r\n                </h3>\r\n            )}\r\n\r\n            <Form.Item\r\n                validateStatus={isError ? \"error\" : \"\"}\r\n                help={errorString}\r\n            // rules={[{ required: true }]}\r\n            >\r\n                <TextArea\r\n                    disabled={disabled}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    name={name}\r\n                    className='inputclassName'\r\n                    rows={rows} \r\n                    placeholder={placeholder}\r\n                    />\r\n\r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\n// import libraries\r\nimport { Upload, Button, Modal, Tabs, message, notification, Popconfirm, Menu, Dropdown, } from 'antd';\r\nimport reqwest from 'reqwest';\r\nimport { Formik } from 'formik';\r\nimport Moment from 'react-moment';\r\n// import * as Yup from 'yup';\r\n\r\n\r\nimport {\r\n\tCheckOutlined,\r\n\tArrowUpOutlined,\r\n\tCheckCircleOutlined,\r\n\tEllipsisOutlined,\r\n\tFileImageOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined\r\n\r\n} from '@ant-design/icons';\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nconst { Dragger } = Upload;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tvisible: boolean;\r\n\tsetvisible: (isVisible: any) => void;\r\n\tsetmyImages?: any;\r\n\tsetmyThumbnailImage?: any;\r\n\tisModalOpenForThumbnail?: boolean;\r\n\tisModalOpenForImages?: boolean;\r\n\tmyImages?: any;\r\n\tmyThumbnailImage?: any;\r\n\tsetMyGoddamnImages?: any;\r\n\tmyGoddamnImages?: any;\r\n}\r\n\r\n\r\nconst MediaLibrary = ({\r\n\tvisible,\r\n\tsetvisible,\r\n\tsetmyImages,\r\n\tisModalOpenForImages,\r\n\tisModalOpenForThumbnail,\r\n\tsetmyThumbnailImage,\r\n\tmyImages,\r\n\tmyThumbnailImage,\r\n\t...rest\r\n}: Props) => {\r\n\r\n\tconst [fileList, setfileList] = useState([]);\r\n\tconst [uploading, setuploading] = useState(false);\r\n\tconst [selectedimages, setselectedImages] = useState([]);\r\n\tconst [activeImageItem, setactiveImageItem] = useState(false);\r\n\tconst [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch({}, 'updateImageFromLibrary');\r\n\tconst [imageListFromLibraryState, handleImageListFromLibraryFetch] = useHandleFetch({}, 'ImageListFromLibrary');\r\n\tconst [deleteImageFromLibraryFetchState, handleDeleteImageFromLibraryFetch] = useHandleFetch({}, 'deleteImageFromLibrary');\r\n\tconst [localImageList, setLocalImageList] = useState([]);\r\n\tconst [isDoneOk, setisDoneOk] = useState(false);\r\n\r\n\r\n\tconst handleDeleteImageFromImageLibrary = async (id) => {\r\n\r\n\t\tconst deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteImageLibraryItemRes && deleteImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Imaged Deleted');\r\n\t\t\tconst newImageList = localImageList.filter(item => item.id !== id);\r\n\t\t\tsetLocalImageList(newImageList);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst getImageList = async () => {\r\n\t\tconst imageListRes = await handleImageListFromLibraryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tlimitNumber: 10000\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (imageListRes) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetLocalImageList(imageListRes);\r\n\t\t}\r\n\r\n\t\t// console.log('imageListRes', imageListRes);\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tgetImageList();\r\n\t}, [])\r\n\r\n\r\n\r\n\r\n\tconst handleUpload = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tfileList.forEach(file => {\r\n\t\t\tformData.append('images', file, file.name);\r\n\t\t});\r\n\r\n\t\tsetuploading(true);\r\n\r\n\t\t//  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n\t\t// \tbody: formData\r\n\t\t//   });\r\n\r\n\t\t//   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\t\t// You can use any AJAX library you like\r\n\t\treqwest({\r\n\t\t\turl: `${config.baseURL}/admin/api/image/add`,\r\n\t\t\tmethod: 'post',\r\n\t\t\tprocessData: false,\r\n\t\t\tdata: formData,\r\n\t\t\twithCredentials: true,\r\n\t\t\tsuccess: () => {\r\n\t\t\t\tsetfileList([]);\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tgetImageList();\r\n\t\t\t\tmessage.success('upload successfully.');\r\n\t\t\t},\r\n\t\t\terror: () => {\r\n\t\t\t\tsetuploading(false);\r\n\t\t\t\tmessage.error('upload failed.');\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\r\n\t\tif (isModalOpenForImages) {\r\n\t\t\tsetmyImages(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetmyThumbnailImage(selectedimages);\r\n\t\t\tsetisDoneOk(true);\r\n\t\t}\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (myImages && myImages.length > 0)\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t}, [myImages])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk && isModalOpenForImages && myImages) {\r\n\t\t\tsetselectedImages([...myImages]);\r\n\t\t}\r\n\t}, [myImages, isDoneOk]);\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isDoneOk) {\r\n\t\t\t// console.log('myThumbnail', myThumbnailImage)\r\n\t\t\t// setselectedImages([...myThumbnailImage]);\r\n\t\t}\r\n\t}, [myThumbnailImage, isDoneOk])\r\n\r\n\tconst uploadProps = {\r\n\t\t//  listType: 'picture',\r\n\t\tmultiple: true,\r\n\t\tonRemove: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst index = fileList.indexOf(file);\r\n\t\t\t\tconst newFileList = fileList.slice();\r\n\t\t\t\tnewFileList.splice(index, 1);\r\n\t\t\t\treturn newFileList;\r\n\t\t\t})\r\n\r\n\t\t},\r\n\t\tbeforeUpload: file => {\r\n\t\t\tsetfileList(filelist => {\r\n\t\t\t\tconst xflelist = filelist;\r\n\t\t\t\treturn [...xflelist, file]\r\n\t\t\t})\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tfileList,\r\n\t};\r\n\r\n\r\n\r\n\r\n\tconst handleAddToSelectedList = (image, id) => {\r\n\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (!isImageExist) {\r\n\t\t\t\tsetselectedImages([...selectedimages, image]);\r\n\t\t\t\tsetactiveImageItem(image);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst newselectedImages = selectedimages.filter(image => image.id !== id);\r\n\t\t\t\tsetselectedImages(newselectedImages);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetselectedImages([...selectedimages, image]);\r\n\t\t\tsetactiveImageItem(image);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst getisSelectedImage = (id) => {\r\n\t\tif (selectedimages && selectedimages.length > 0) {\r\n\t\t\tconst isImageExist = selectedimages.find(image => image.id === id);\r\n\t\t\tif (isImageExist) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleUpdateSubmit = async (values, actions) => {\r\n\t\tconst updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t\talt: values.alt,\r\n\t\t\t\ttitle: values.title,\r\n\t\t\t\tcaptoin: values.captoin,\r\n\t\t\t\tlabels: values.labels,\r\n\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateImageLibraryItemRes && updateImageLibraryItemRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Image Updated');\r\n\r\n\t\t\tconst positionInImageList = () => {\r\n\t\t\t\treturn localImageList.map(item => item.id).indexOf(values.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInImageList();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, localImageList[index], { ...updateImageLibraryItemRes });\r\n\t\t\tconst updateImageList = [...localImageList.slice(0, index), updatedItem, ...localImageList.slice(index + 1)];\r\n\t\t\tsetLocalImageList(updateImageList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t}\r\n\r\n\r\n\tconst getisUpdateSubmitButtonDisabled = (values, isValid) => {\r\n\t\t// if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\r\n\t\t// \treturn true; \r\n\t\t// }\r\n\t\tif (!isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// console.log('selectedimages', selectedimages)\r\n\r\n\tconst ImageItemMenu = (handleDeleteImageFromImageLibrary, id, handleAddToSelectedList, image) => {\r\n\t\treturn (\r\n\t\t\t(\r\n\t\t\t\t<Menu>\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleAddToSelectedList(image, id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<CheckOutlined />}>\r\n\t\t\t\t\t\tSelect\r\n\r\n\t\t\t\t\t</Menu.Item>\r\n\r\n\r\n\r\n\t\t\t\t\t<Menu.Item\r\n\t\t\t\t\t\tonClick={() => handleDeleteImageFromImageLibrary(id)}\r\n\t\t\t\t\t\tkey=\"1\" icon={<DeleteOutlined color='red' />}>\r\n\t\t\t\t\t\tDelete\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t</Menu >\r\n\t\t\t)\r\n\t\t)\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\ttop: '40px'\r\n\t\t\t\t}}\r\n\t\t\t\ttitle=\"Media Library\"\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tonOk={handleOk}\r\n\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\twidth={'80vw'}\r\n\t\t\t\tbodyStyle={{\r\n\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\tpadding: '0'\r\n\t\t\t\t}}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<div className='mediaLibraryBodyContainer'>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-left'>\r\n\r\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"2\" type=\"card\" size='middle'>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Upload New Media\" key=\"1\">\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-header'>\r\n\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Dragger\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='upload-list-inline'\r\n\t\t\t\t\t\t\t\t\t\t\tlistType='picture'\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: '#fff',\r\n\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: '8px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t{...uploadProps}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-drag-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className='ant-upload-hint'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSupport for a single or bulk upload.\r\n\t\t\t\t\t\t                \t</p>\r\n\t\t\t\t\t\t\t\t\t\t</Dragger>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\tonClick={handleUpload}\r\n\t\t\t\t\t\t\t\t\tdisabled={fileList.length === 0}\r\n\t\t\t\t\t\t\t\t\tloading={uploading}\r\n\t\t\t\t\t\t\t\t\ticon={<ArrowUpOutlined />}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '20px',\r\n\t\t\t\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t<TabPane tab=\"Media Library\" key=\"2\">\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{myImages && myImages.lenght > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tSelected Items\r\n                               </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t&& myImages.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-selectedImages-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-selectedImages-imgContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\r\n\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.length > 0\r\n\t\t\t\t\t\t\t\t\t\t&& localImageList.map(image => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={image.id}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='mediaLibraryBodyContainer-left-imageListContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{getisSelectedImage(image.id) ? <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div> : ''}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Dropdown overlay={() => ImageItemMenu(handleDeleteImageFromImageLibrary, image.id, handleAddToSelectedList, image)} placement=\"bottomRight\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-left-imageListContainer-item-menu'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EllipsisOutlined\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddToSelectedList(image, image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}} src={image.cover} alt='img' />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{imageListFromLibraryState.done && !(localImageList.length > 0) && (\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\t\twidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Empty title='No Image Found in the library' />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t</Tabs>\r\n\r\n\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='mediaLibraryBodyContainer-right'>\r\n\r\n\t\t\t\t\t\t{activeImageItem && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Formik\r\n\t\t\t\t\t\t\t\t\tonSubmit={(values, actions) => handleUpdateSubmit(values, actions)}\r\n\t\t\t\t\t\t\t\t\tvalidateOnBlur={false}\r\n\t\t\t\t\t\t\t\t\tenableReinitialize={true}\r\n\t\t\t\t\t\t\t\t\tinitialValues={\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t{ ...activeImageItem }\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{({\r\n\t\t\t\t\t\t\t\t\t\thandleChange,\r\n\t\t\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\t\t\t\t\tisValid,\r\n\t\t\t\t\t\t\t\t\t\tisSubmitting,\r\n\t\t\t\t\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched,\r\n\t\t\t\t\t\t\t\t\t\thandleReset,\r\n\t\t\t\t\t\t\t\t\t}) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAttachment Details\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={activeImageItem['cover']} alt='img' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='imageLibnameText'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['name']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{activeImageItem['added']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Moment>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t5000 X 500\r\n\t\t\t\t\t\t\t\t\t</h5> */}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Popconfirm\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteImageFromImageLibrary(activeImageItem['id'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='imageLibdeleteText'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete parmanently\r\n\t\t\t\t\t\t\t\t\t                       </h5>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Popconfirm>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Alternate Text'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.alt}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='alt'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.alt && errors.alt) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['alt'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('alt');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.title}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.title && errors.title) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['title'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('title');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Caption'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.caption}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.caption && errors.caption) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateMediaLibrary.error['error']['caption'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('caption');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype='default'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={getisUpdateSubmitButtonDisabled(values, isValid)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// marginTop: '20px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{!activeImageItem && (\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\theight: '100%',\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h4 style={{\r\n\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\t\tfontSize: \"13px\",\r\n\t\t\t\t\t\t\t\t\tcolor: '#8888'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\tSelect an image to preview details\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default MediaLibrary;\r\n","import MediaLibrary from './MediaLibrary';\r\nexport default MediaLibrary;\r\n","// @ts-nocheck\r\nimport React,{useEffect, useState} from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass MetaTags extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n\r\n\r\n  handleClose = removedTag => {\r\n    const {setTags,tags} = this.props;\r\n    const localTags = tags.filter(tag => tag !== removedTag);\r\n    setTags(localTags);\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n      console.log('handleInputConfirm',this.props);\r\n    const { inputValue } = this.state;\r\n    let { tags, setTags } = this.props;\r\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    setTags(tags);\r\n    this.setState({\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n    console.log('tagValue',e.target.value);\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ editInputIndex, editInputValue }) => {\r\n      return {\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n\r\n    const newTags = [...this.props.tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    this.props.setTags(newTags);\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    const { placeholder,tags } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {tags && tags.length > 0 && tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                placeholder={placeholder}\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={true}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus edit-tag\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaTags","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'addCategory');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tparent: selectedParentId,\r\n\t\t\t\ticon: imageFile,\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: tags.join(','),\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Category Created!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([{\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t},...categoryList])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\tconsole.log('addnewCategoryTags',tags);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetcategoryList?: any;\r\n\tcategoryList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t\tsetcategoryList(updateCategoryList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategoryEditVisible?: any;\r\n\tsetCategoryEditVisible?: any;\r\n\tcategoryDetailData?: any;\r\n\tsetcategoryDetailData?:any; \r\n}\r\n\r\nconst AddNewBrand = ({ categoryEditVisible, \r\n\tsetCategoryEditVisible,\r\n\t categoryDetailData,\r\n\t setcategoryDetailData }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateCategory');\r\n\tconst [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n\tconst [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n\tconst [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n\tconst [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n\tconst [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\r\n\t\t\tconst images = categoryDetailData.image;\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tsetmyImages(images);\r\n\t\t\t\tsetMyGoddamnImages(images);\r\n\t\t\t}\r\n\r\n\t\t\tif (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages([categoryDetailData.cover, ...images]);\r\n\t\t\t\tsetCoverImageId(categoryDetailData.cover['id']);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore\r\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n\t\t\tif (coverImageId !== myImages[0].id) {\r\n\t\t\t\tsetCoverImageId(myImages[0].id);\r\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}, [myImages])\r\n\r\n\r\n\tconst handleDetachSingleImage = async id => {\r\n\t\tawait handleDetachImageFromItemSingleFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconst handleSetImageAsThumnail = async image => {\r\n\r\n\t\tconst thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: image.id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (thumbnailRes && thumbnailRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Seted as thumbnail!')\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\r\n\t\t\t// const prevItem = brandList.find(item => item.id === categoryDetailData.id);\r\n\r\n\t\t\t// if (prevItem) {\r\n\t\t\t// \tconst updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n\t\t\t// \tconst updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t// \tsetBrandList(updateBrandList);\r\n\r\n\t\t\t// }\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('categoryDetailState', brandDetailState);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n\t\tif (brandDetailState && brandDetailState.done && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n\t\t\tif (images[0] && images.length > 1) {\r\n\t\t\t\tawait handleAttachImageToItemMultipleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: {\r\n\t\t\t\t\t\timage: images\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (images[0] && images.length < 1) {\r\n\t\t\t\tawait handleAttachImageToItemSingleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\timageId: images[0].id,\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tconst updateTagRes = await handleUpdateBrandFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ticon: imageFile,\r\n\t\t\t\ttype: 'bottom'\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\tsetcategoryDetailData({\r\n\t\t\t\t...categoryDetailData,\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...updateTagRes\r\n\t\t\t})\r\n\t\t\tconsole.log('updateTagRes',updateTagRes);\r\n\t\t\tconsole.log('categoryDetailData',categoryDetailData);\r\n\t\t\t// setcategoryDetailData()\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetCategoryEditVisible(false);\r\n\r\n\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\t\t\t// const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t// console.log('updateBrandList', updatedItem)\r\n\r\n\t\t\t// const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n\t\t\t// setBrandList(updateBrandList);\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData.type === 'top') {\r\n\t\t\t// setisparentcategoryChecked()\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetCategoryEditVisible(false);\r\n\t\tsetmyImages(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\t// @ts-ignore\r\n\t\tsetmyImages([]);\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\r\n\r\n\tconsole.log('cateogryDetailmyImages', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...categoryDetailData }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Category Edit\"\r\n\t\t\t\t\t\t\tvisible={categoryEditVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\trows={3}\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tonChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 400 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{brandList.length > 0 && brandList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n */}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\r\n\t\t\t\t\t\t\t\t{brandDetailState && (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCoverImageId(image.id);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSetImageAsThumnail(image);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleImagesDelete(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDetachSingleImage(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tmyGoddamnImages={myGoddamnImages}\r\n\t\t\t\t\t\t\tsetMyGoddamnImages={setMyGoddamnImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CategoryEdit from \"./CategoryEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const categoryId = params['id'];\r\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n    const [categoryDetail,setcategoryDetail] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(categoryDetailDataRes){\r\n                  // @ts-ignore\r\n                setcategoryDetail(categoryDetailDataRes)\r\n\r\n            }\r\n\r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryProducts = async () => {\r\n            await handleCategoryProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryProducts();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n    console.log('categoryProductsState', categoryProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = categoryDetailState.done && categoryDetail && categoryDetail['image'] ? getImagesInCollumn(categoryDetail['image']) : [];\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Category Detail\r\n                </h3>\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <CategoryEdit\r\n                            categoryEditVisible={categoryEditVisible}\r\n                            setCategoryEditVisible={setCategoryEditVisible}\r\n                            categoryDetailData={categoryDetail}\r\n                            setcategoryDetailData={setcategoryDetail}\r\n                        />\r\n\r\n                        <Button\r\n                            onClick={() => setCategoryEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={categoryDetailState.isLoading}>\r\n                {categoryDetailState.done && categoryDetail && !(Object.keys(categoryDetail).length > 0) && (\r\n                    <Empty description='No Category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                                <img src={categoryDetail['cover'] && categoryDetail['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {categoryDetail['name']}\r\n                                </h2>\r\n                                <h3>\r\n                                    {categoryDetail['description']}\r\n                                </h3>\r\n                                <h3>\r\n                                    Category type: <span>\r\n                                        {categoryDetail['type']}\r\n                                    </span>\r\n                                </h3>\r\n\r\n                                {categoryDetail['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {categoryDetail['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {categoryDetail['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img \r\n                                                            alt='..'\r\n                                                            src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['subCategory'] && categoryDetail['subCategory'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Child Categories\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='smallcatCardContainer'>\r\n                                    {categoryDetail['subCategory'].map(subCat => {\r\n                                        return (\r\n                                            <div\r\n                                                onClick={() => history.push(`/admin/category/${subCat.id}`)}\r\n                                                className='smallcatCardContainer__card'>\r\n                                                <div className='smallcatCardContainer__card-coverbox'>\r\n                                                    <img src={subCat.cover} alt=\"\" />\r\n                                                </div>\r\n                                                <div className='smallcatCardContainer__card-info'>\r\n                                                    <h3>\r\n                                                        {subCat.name}\r\n                                                    </h3>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists in this category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n\r\n                            size='small'\r\n                            dataSource={categoryProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                                // go to product detail\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n<Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    category: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    tagList: any;\r\n    setTagList: any;\r\n}\r\n\r\nconst ProductBundleQuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateBundle');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n                price: category.price,\r\n                ...category\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return tagList.map(item => item.id).indexOf(category.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default ProductBundleQuickEdit;\r\n","import React from 'react';\r\nimport { Form, Input } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    label?: string;\r\n    type?: string;\r\n    defaultValue?:string;\r\n    value?: string; \r\n    onChange?: any; \r\n    disabled?: boolean; \r\n    isError?: boolean; \r\n    errorString?: string; \r\n    name?:string;\r\n    size?: any; \r\n}\r\n\r\nconst Demo = ({ label, type, defaultValue, value, onChange, disabled, isError, errorString,  name, size='middle'}: Props) => {\r\n    return (\r\n        <>\r\n        {label && <h3 className='inputFieldLabel-small'>\r\n                {label}\r\n            </h3>}\r\n           \r\n            <Form.Item\r\n            validateStatus={isError ? \"error\" : \"\"}\r\n            // hasFeedback validateStatus=\"success\"\r\n            help={errorString}\r\n            // rules={[{ required: true }]}\r\n                >\r\n                     <Input\r\n                     size={size}\r\n                    allowClear \r\n                    name={name}\r\n                    disabled={disabled}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className='inputclassName-small' />\r\n               \r\n            </Form.Item>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Demo; ","import React from 'react';\r\nimport { notification } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Succeed',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <ExclamationCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nexport {\r\n    openSuccessNotification,\r\n    openErrorNotification\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('selectedTags', selectedTags)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Select, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n\tsetBrandId?: any;\r\n\tbrandId?: any;\r\n\tproductDetailState?: any;\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setBrandId, brandId, productDetailState }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [selectedBrandId, setSelectedBrandId] = useState('');\r\n\tconst [brandState, handleTagListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\tfunction onChange(value) {\r\n\t\tsetSelectedBrandId(value);\r\n\t\tsetBrandId(value);\r\n\t\t// console.log(`selected ${value}`);\r\n\t}\r\n\r\n\tfunction onBlur() {\r\n\t\t// console.log('blur');\r\n\t}\r\n\r\n\tfunction onFocus() {\r\n\t\t// console.log('focus');\r\n\t}\r\n\r\n\tfunction onSearch(val) {\r\n\t\t// console.log('search:', val);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setBrands = async () => {\r\n\t\t\tconst brandListRes = await handleTagListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (brandListRes && brandListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst brandOptions = brandListRes.map((brand) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: brand.id,\r\n\t\t\t\t\t\tname: brand.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetoptions(brandOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetBrands();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div></div>\r\n\r\n\t\t\t{brandState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t{brandState.done && !(brandState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No Brand found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{brandState.done && brandState.data && brandState.data.length > 0 && options.length > 0 && (\r\n\r\n\t\t\t\t<Select\r\n\t\t\t\t\tshowSearch\r\n\t\t\t\t\tstyle={{ width: '210px', borderRadius: '6px' }}\r\n\t\t\t\t\tplaceholder='Select a Brand'\r\n\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonFocus={onFocus}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tonSearch={onSearch}\r\n\t\t\t\t\tdefaultValue={brandId}\r\n\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t>\r\n\t\t\t\t\t{brandState.done &&\r\n\t\t\t\t\t\tbrandState.data.length > 0 &&\r\n\t\t\t\t\t\toptions.map((option) => {\r\n\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</Select>\r\n\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{/* \r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n\tcategoryOptions?: any;\r\n\tsetCategoryOptions?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds, categoryOptions, setCategoryOptions }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'categorySelectist');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tconst checkedIds = checkedKeys.checked || [];\r\n\t\tsetcategoryIds(checkedIds);\r\n\t\tsetCategoryOptions(checkedIds);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('categoryState', categoryState);\r\n\tconsole.log('optionsCat', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tcheckedKeys={categoryOptions}\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t{/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import lib \r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    setProductList?: any;\r\n    productList?: any;\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productList,\r\n    setProductList,\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const positionInAttribute = () => {\r\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\r\n    //     }\r\n\r\n    //     const index = positionInAttribute();\r\n\r\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n    //     setProductList(updateProductList);\r\n\r\n    // }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateProductList = productList.filter(item => item._id !== productId);\r\n        setProductList(updateProductList);\r\n    }\r\n\r\n\r\n    const handleChangeQuantity = async (value) => {\r\n        if (value === 'minus') {\r\n            if (quantity === 1) {\r\n                return;\r\n            }\r\n\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList);\r\n\r\n\r\n        } else {\r\n            const positionInAttribute = () => {\r\n                return productList.map(item => item._id).indexOf(productId);\r\n            }\r\n\r\n            const index = positionInAttribute();\r\n\r\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\r\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            setProductList(updateAttributeList)\r\n\r\n        }\r\n    };\r\n\r\n\r\n    const convertAttributeValuesToStringValue = (attribute) => {\r\n        const value = [];\r\n\r\n        let attributeValues = Object.values(attribute);\r\n        attributeValues.forEach(attributeValue => {\r\n            // @ts-ignore\r\n            value.push(attributeValue)\r\n        })\r\n\r\n        return value.join(',');\r\n    };\r\n\r\n\r\n\r\n\r\n    const getPricingOptions = (pricing) => {\r\n        if (pricing && pricing.length > 0) {\r\n            const pricingOptions = [];\r\n\r\n            pricing.forEach(pricingItem => {\r\n\r\n                if (Object.values(pricingItem.attribute).length > 0 && pricingItem._id) {\r\n                    let pricingOption = {\r\n                        value: pricingItem._id,\r\n                        label: `${convertAttributeValuesToStringValue(pricingItem.attribute) || ''}`\r\n                    }\r\n                    // @ts-ignore\r\n                    pricingOptions.push(pricingOption)\r\n                }\r\n\r\n            })\r\n\r\n            return pricingOptions;\r\n        }\r\n        else return false\r\n    };\r\n\r\n    const pricingOptions = item && Object.keys(item).length > 0 ? getPricingOptions(item.pricing) : [];\r\n\r\n\r\n    console.log('pricingOptions', pricingOptions);\r\n\r\n    const handleAttributeChange = (tagId) => {\r\n        setSelectedVariationId(tagId);\r\n\r\n        const positionInAttribute = () => {\r\n            return productList.map(item => item._id).indexOf(productId);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, productList[index], { ...item, quantity: 1 });\r\n        const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n        setProductList(updateAttributeList);\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getPriceByVariationId = (id) => {\r\n            const pricing = item && Object.keys(item).length > 0 ? item.pricing : false;\r\n            if (pricing) {\r\n                const priceItem = pricing.find(pricingItem => pricingItem._id === id);\r\n                console.log('priceItem', id);\r\n\r\n                if (priceItem && priceItem.price.regular) {\r\n                    return priceItem.price.offer\r\n                        && parseInt(priceItem.price.offer)\r\n                        ? priceItem.price.offer : priceItem.price.regular\r\n                }\r\n                else return false;\r\n            }\r\n        }\r\n\r\n        if (selectedVariationId) {\r\n            const price = getPriceByVariationId(selectedVariationId);\r\n            setModifiedPrice(price);\r\n        }\r\n\r\n    }, [selectedVariationId]);\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            {item && Object.keys(item).length > 0 && (\r\n                <div className='cart-item' key={''}>\r\n                    <div className='cart-item-quantityCounter'>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('plus');\r\n                            }}\r\n                            className='fa fa-chevron-up'\r\n\r\n                        ></i>\r\n                        <p className='item-amount'>{quantity}</p>\r\n                        <i\r\n                            onClick={() => {\r\n                                handleChangeQuantity('minus');\r\n                            }}\r\n                            className='fa fa-chevron-down'\r\n\r\n                        ></i>\r\n                    </div>\r\n\r\n\r\n                    <img\r\n\r\n                        src={item['cover'] && item['cover']}\r\n                        alt='Img'\r\n                        style={{\r\n                            cursor: 'pointer',\r\n                        }}\r\n                    />\r\n                    <div className='cart-item-info'>\r\n                        <h4\r\n\r\n                        >\r\n                            {item['name']}\r\n                        </h4>\r\n                        <h5\r\n                        >\r\n                            {modifiedPrice || item['price']}\r\n                        </h5>\r\n\r\n\r\n                        {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))}\r\n\r\n                        {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                    </div>\r\n                    {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"../product/Tags\";\r\nimport Brands from \"../product/Brands\";\r\nimport Categories from \"../product/Categories\";\r\nimport Pricing from \"../product/Pricing\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    bundlePrice: null,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    description: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList }: Props) => {\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addBundle');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [startDate, setStartDate] = useState('');\r\n    const [endDate, setEndDate] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                price: price,\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                image: imagesIds,\r\n                products,\r\n                // startDate, endDate,\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Bundle Created');\r\n\r\n            setBundleList([{\r\n                id: addProductRes['id'] || '',\r\n                key: addProductRes['id'] || '',\r\n                name: addProductRes['name'] || '',\r\n                description: addProductRes['description'] || '',\r\n                // @ts-ignore\r\n                ...addProductRes\r\n            },...bundleList])\r\n            setAddNewCategoryVisible(false)\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    const handleStartDataChange = (date, dateString) => {\r\n        setStartDate(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleEndDataChange = (date, dateString) => {\r\n        setEndDate(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Bundle\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Bundle Information\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                            <Input\r\n                                                label='Title'\r\n                                                value={values.name}\r\n                                                name='name'\r\n                                                isError={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n                                                errorString={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('name');\r\n                                                }}\r\n                                            />\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={description}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\r\n                                                <h4>\r\n                                                    Price\r\n\t\t\t                                \t</h4>\r\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n                                                        <InputSmall\r\n                                                            label='Regular'\r\n                                                            value={price.regular}\r\n                                                            name='regular'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                regular: e.target.value\r\n                                                            })}\r\n                                                        />\r\n\r\n\r\n                                                    </div>\r\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n                                                        <InputSmall\r\n                                                            label='Offer'\r\n                                                            value={price.offer}\r\n                                                            name='offer'\r\n                                                            onChange={(e) => setPrice({\r\n                                                                ...price,\r\n                                                                offer: e.target.value\r\n                                                            })}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        date={startDate}\r\n                                                        label='Start Date'\r\n                                                        onChange={handleStartDataChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        date={endDate}\r\n                                                        label='End Date'\r\n                                                        onChange={handleEndDataChange} />\r\n\r\n                                                </div>\r\n                                            </div> */}\r\n\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n                                            <div className='aboutToUploadImagesContainer'>\r\n                                                {myImages &&\r\n                                                    // @ts-ignore\r\n                                                    myImages.length > 0 && myImages.map((image, index) => {\r\n                                                        return (\r\n                                                            <div className='aboutToUploadImagesContainer__item'>\r\n                                                                <div\r\n                                                                    className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                    onClick={() => setCoverImageId(image.id)}\r\n                                                                >\r\n                                                                    <img src={image.cover} alt={image.alt} />\r\n                                                                </div>\r\n\r\n                                                                <span\r\n                                                                    onClick={() => handleImagesDelete(image.id)}\r\n                                                                    className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                    <CloseOutlined />\r\n                                                                </span>\r\n\r\n\r\n                                                                {coverImageId === image.id ? (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                ) : !coverImageId && index === 0 && (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })}\r\n\r\n\r\n                                                <Tooltip\r\n                                                    title={'Attach images'}>\r\n\r\n                                                    <div\r\n                                                        onClick={() => {\r\n                                                            setvisible(true);\r\n                                                            setisModalOpenForImages(true);\r\n                                                            setisModalOpenForThumbnail(false);\r\n                                                        }}\r\n                                                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                        {/* <FileAddOutlined />\r\n            <FileImageTwoTone />\r\n            <FileImageOutlined /> */}\r\n                                                        <FileImageFilled />\r\n                                                        {/* <h5>\r\n             Select From Library\r\n    <     /h5> */}\r\n                                                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                            <PlusOutlined />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleQuickEdit from \"./ProductBundleQuickEdit\"\r\nimport AddNewProductBundle from \"./AddNewProductBundle\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteBundle');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Bundle');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/bundle/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Price\"\r\n                    dataIndex=\"price\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Product\"\r\n                    dataIndex=\"productCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                {/* <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                <Moment >\r\n                                    {text}\r\n                                </Moment>\r\n\r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                /> */}\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <ProductBundleQuickEdit\r\n                tagList={data}\r\n                setTagList={setTagList}\r\n                setvisible={setvisible}\r\n                visible={visible}\r\n                category={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'bundleList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({});\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Bundles\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search bundles..\"\r\n                            onSearch={value => handleSearch(value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Bundle found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewProductBundle\r\n                productList={tagList}\r\n                setProductList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useEffect } from 'react';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n}\r\n\r\n\r\n\r\nconst CouponProducts = ({\r\n    productId,\r\n    quantity\r\n}: Props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n\r\n    useEffect(() => {\r\n        const getAndSetProduct = async () => {\r\n            await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n        };\r\n        getAndSetProduct();\r\n    }, []);\r\n\r\n\r\n    console.log('productDetailStatecoupon', productDetailState)\r\n\r\n\r\n    return (\r\n        <Skeleton\r\n            paragraph={{ rows: 2 }}\r\n            loading={productDetailState.isLoading}>\r\n            {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                <>\r\n                    <div className='couponDetailProductItem'>\r\n                        <div\r\n                            onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            className='couponDetailProductItem__cover'>\r\n                            <img src={productDetailState.data.cover} alt=\"\" />\r\n                        </div>\r\n                        <div className='couponDetailProductItem__info'>\r\n                            <h2\r\n                                onClick={() => history.push(`/admin/product/${productId}`)}\r\n                            >\r\n                                {productDetailState.data.name}\r\n                            </h2>\r\n                            <h3>\r\n                                {productDetailState.data.price}\r\n                            </h3>\r\n                            <h3>\r\n                                Quantity: {quantity}\r\n                            </h3>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n        </Skeleton>\r\n    )\r\n}\r\n\r\n\r\nexport default CouponProducts; ","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n// import moment\r\nimport Moment from \"react-moment\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleEdit from \"./ProductBundleEdit\";\r\nimport CouponProducts from \"../coupon/CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n\r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\r\n\r\n\r\n    console.log('bundleDetail', productDetailState);\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Bundle Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        {/* <ProductBundleEdit\r\n                            productEditVisible={productEditVisible}\r\n                            setProductEditVisible={setProductEditVisible}\r\n                            productDetailData={productDetailState.data}\r\n                        /> */}\r\n                        {/* <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button> */}\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\r\n                    <Empty description='No Bundle Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailState.data['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailState.data['price']}\r\n                                </h4>\r\n\r\n                                {productDetailState.data['description'] && (\r\n                                    <h3>\r\n                                    {productDetailState.data['description']}\r\n                                    </h3>\r\n                                )}\r\n                              \r\n\r\n                                {/* {productDetailState.data['startDate'] && (\r\n                                    <h3>\r\n                                        START DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['startDate']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                {productDetailState.data['endDate'] && (\r\n                                    <h3>\r\n                                        END DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['endDate']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )} */}\r\n\r\n\r\n\r\n                                {productDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailState.data['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailState.data['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                        {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data['products'] && (\r\n                            <div className='brandDetailContainer__heading'>\r\n                                <h3>\r\n                                    Products\r\n                       </h3>\r\n                            </div>\r\n                        )\r\n                        }\r\n\r\n\r\n                        <div className='brandDetailContainer__body'>\r\n                            {productDetailState.done && productDetailState.data && productDetailState.data['products'] && !(productDetailState.data['products'].length > 0) && (\r\n                                <div style={{\r\n                                    marginTop: '100px'\r\n                                }}>\r\n                                    <Empty description='No Products exists for this Bundle' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                </div>\r\n                            )}\r\n\r\n                            {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                                <>\r\n                                    {productDetailState.data['products'] && productDetailState.data['products'].length > 0 &&\r\n                                        productDetailState.data['products'].map(product => {\r\n                                            return (\r\n                                                <CouponProducts\r\n                                                    quantity={product.quantity}\r\n                                                    productId={product['_id']} />\r\n                                            )\r\n                                        })}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'addBrand');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\r\n\t\tconst addBrandRes = await handleUpdateBrandFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ttype: values.type,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: tags.join(','),\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addBrandRes && addBrandRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetBrandList([{\r\n\t\t\t\tid: addBrandRes['id'] || '',\r\n\t\t\t\tkey: addBrandRes['id'] || '',\r\n\t\t\t\tname: addBrandRes['name'] || '',\r\n\t\t\t\tdescription: addBrandRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addBrandRes\r\n\t\t\t},...brandList])\r\n\t\t\tactions.resetForm();\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\t// console.log(checked);\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Brand\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'microsoft,apple'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'প্রান,নোকিয়া'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tplaceholder={'This brand...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ব্র্যান্ড...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React,{useState} from 'react';\r\nimport { Modal, notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Updated',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tbrandList: any; \r\n\tsetBrandList?: any; \r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, brandList, setBrandList }: Props) => {\r\n\tconst [updatebrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateBrandRes = await handleUpdateBrandFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\r\n\t  \r\n\t \t  // @ts-ignore\r\n\t\t   if(updateBrandRes && updateBrandRes.status === 'ok'){\r\n\t\t\topenSuccessNotification(); \r\n\t\r\n\t\t\tconst positionInBrand = () => {\r\n\t\t\t\treturn brandList.map(item => item.id).indexOf(category.id);\r\n\t\t\t  }\r\n\t\r\n\t\t\t  const index = positionInBrand();\r\n\t\r\n\t\t\t  // @ts-ignore\r\n\t\t\t  const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t  const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t  setBrandList(updateBrandList); \r\n\t\t\t\r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification();\r\n\t\t  }\r\n\t\t\r\n\t\t  actions.setSubmitting(false);\r\n\t\t  setvisible(false)\r\n\r\n\r\n\t\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updatebrandState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewBrand from \"./AddNewBrand\"\r\nimport QuickEdit from \"./QuickEdit\"\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Brand Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch({}, 'deleteBrand');\r\n    const [brandDetailVisible,setBrandDetailVisible] = useState(false); \r\n    const history = useHistory(); \r\n\r\n\r\n \r\n      const handleDeleteBrand = async (id) => {\r\n        const deleteBrandRes = await handleDeleteBrandFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteBrandRes && deleteBrandRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Brand'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  // setBrandDetailVisible(true);\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/brand/${record.id}`)\r\n                  // setBrandDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n       <Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Brand'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteBrand(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    brandList={data}\r\n    setBrandList={setBrandList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n\r\n  const [brandList,setBrandList] = useState([]);\r\n\r\n  \r\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\r\n\r\n\r\n  useEffect(()=>{\r\n   const setBrands = async () => {\r\n     const brands = await handlebrandListFetch({}); \r\n     // @ts-ignore\r\n     setBrandList(brands); \r\n   }\r\n   setBrands(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(brandState.data.length > 0 ){\r\n      const newBrandList = brandState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setBrandList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search brand..\"\r\n          onChange={e => handleSearch(e.target.value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {brandState.done && brandList.length > 0 && <MyTable \r\n          setBrandList={setBrandList}\r\n        data={brandList} />}\r\n        {brandState.isLoading && <DataTableSkeleton />}\r\n        {brandState.done && !(brandList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '200px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Brand found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n    <AddNewBrand \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible} \r\n          setBrandList={setBrandList}\r\n          brandList={brandList}\r\n          />\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Brand Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    brandDetailData?: any;\r\n    brandEditVisible?: any;\r\n    setBrandEditVisible?: any;\r\n    setBrandDetailData?:any; \r\n}\r\n\r\nconst AddNewBrand = ({ brandDetailData, brandEditVisible, setBrandEditVisible,setBrandDetailData }: Props) => {\r\n\r\n    const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateBrand');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n\r\n            const images = brandDetailData.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n                setMyGoddamnImages(images);\r\n            }\r\n\r\n            if (brandDetailData.cover && brandDetailData.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([brandDetailData.cover, ...images]);\r\n                setCoverImageId(brandDetailData.cover['id']);\r\n            }\r\n\r\n        }\r\n    }, [brandDetailData])\r\n\r\n\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'brand',\r\n                    itemId: brandDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\r\n\r\n            // if (prevItem) {\r\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n            //     setBrandList(updateBrandList);\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        console.log('myReadyToGoImages', myImages);\r\n\r\n        if (brandDetailData && Object.keys(brandDetailData).length > 0) {\r\n            // @ts-ignore\r\n            const images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n            if (images[0] && images.length > 1) {\r\n                await handleAttachImageToItemMultipleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    },\r\n                    body: {\r\n                        image: images\r\n                    }\r\n                });\r\n            }\r\n            else if (images[0] && images.length < 1) {\r\n                await handleAttachImageToItemSingleFetch({\r\n                    urlOptions: {\r\n                        placeHolders: {\r\n                            imageId: images[0].id,\r\n                            collection: 'brand',\r\n                            itemId: brandDetailData.id\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        const updateBrandRes = await handleUpdateBrandFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: brandDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateBrandRes && updateBrandRes.status === 'ok') {\r\n            console.log('updateBrandRes',updateBrandRes);\r\n            setBrandDetailData({\r\n                ...brandDetailData,\r\n                // @ts-ignore\r\n                ...updateBrandRes\r\n            })\r\n            openSuccessNotification();\r\n            setBrandEditVisible(false);\r\n\r\n\r\n            // const positionInBrand = () => {\r\n            //     return brandList.map(item => item.id).indexOf(productRecord.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n            // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n            // console.log('updateBrandList', updatedItem)\r\n\r\n            // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n            // setBrandList(updateBrandList);\r\n\r\n\r\n            actions.resetForm();\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n\r\n\r\n    const onSwitchChange = (checked: any) => {\r\n        // console.log(checked);\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setBrandEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    console.log('myImages', myImages)\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...brandDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Brand Edit\"\r\n                            visible={brandEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                rows={3}\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateBrandState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <div className='addproductSection-left-header'\r\n\r\n                                style={{\r\n                                    marginBottom: '-5px'\r\n                                }}\r\n                            >\r\n                                <h3 className='inputFieldLabel'>Images</h3>\r\n                                {/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n                            </div>\r\n\r\n\r\n                            <div className='aboutToUploadImagesContainer'>\r\n\r\n                                {brandDetailData && Object.keys(brandDetailData).length > 0 && (\r\n                                    <>\r\n                                        {myImages &&\r\n                                            // @ts-ignore\r\n                                            myImages.length > 0 && myImages.map((image, index) => {\r\n                                                return (\r\n                                                    <div className='aboutToUploadImagesContainer__item'>\r\n                                                        <div\r\n                                                            className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                            onClick={() => {\r\n                                                                setCoverImageId(image.id);\r\n                                                                handleSetImageAsThumnail(image);\r\n                                                            }}\r\n                                                        >\r\n                                                            <img src={image.cover} alt={image.alt} />\r\n                                                        </div>\r\n\r\n                                                        <span\r\n                                                            onClick={() => {\r\n                                                                handleImagesDelete(image.id)\r\n                                                                handleDetachSingleImage(image.id)\r\n                                                            }\r\n\r\n                                                            }\r\n                                                            className='aboutToUploadImagesContainer__item-remove'>\r\n                                                            <CloseOutlined />\r\n                                                        </span>\r\n\r\n\r\n                                                        {coverImageId === image.id ? (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        ) : !coverImageId && index === 0 && (\r\n                                                            <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                <CheckOutlined />\r\n                                                            </span>\r\n                                                        )}\r\n\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        <Tooltip\r\n                                            title={'Attach images'}>\r\n\r\n                                            <div\r\n                                                onClick={() => {\r\n                                                    setvisibleMedia(true);\r\n                                                }}\r\n                                                className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                <FileImageFilled />\r\n                                                {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                    <PlusOutlined />\r\n                                                </span>\r\n                                            </div>\r\n                                        </Tooltip>\r\n                                    </>\r\n                                )}\r\n\r\n\r\n                            </div>\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            myGoddamnImages={myGoddamnImages}\r\n                            setMyGoddamnImages={setMyGoddamnImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport BrandEdit from \"./BrandEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'brandDetail');\r\n    const [brandProductsState, handleBrandProductsFetch] = useHandleFetch({}, 'brandProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const brandId = params['id'];\r\n    const [brandEditVisible, setBrandEditVisible] = useState(false);\r\n    const [brandDetailData, setBrandDetailData] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const getBrandDetail = async () => {\r\n            const brandDetailRes = await handleBrandDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(brandDetailRes){\r\n                // @ts-ignore\r\n                setBrandDetailData(brandDetailRes)\r\n            }; \r\n\r\n\r\n            console.log('brandDetailRes',brandDetailRes);\r\n\r\n\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [brandId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandProducts = async () => {\r\n            await handleBrandProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: brandId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandProducts();\r\n\r\n    }, [brandId]);\r\n\r\n\r\n\r\n\r\n    console.log('brandProductsState', brandProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n\r\n\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Brand Detail\r\n                </h3>\r\n\r\n\r\n                {brandDetailState.done && brandDetailData && (Object.keys(brandDetailData).length > 0) && (\r\n                    <>\r\n                        <BrandEdit\r\n                            brandEditVisible={brandEditVisible}\r\n                            setBrandEditVisible={setBrandEditVisible}\r\n                            brandDetailData={brandDetailData}\r\n                            setBrandDetailData={setBrandDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setBrandEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={brandDetailState.isLoading}>\r\n                {brandDetailState.done && brandDetailData && !(Object.keys(brandDetailData).length > 0) && (\r\n                    <Empty description='No Brand found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {brandDetailState.done && brandDetailData && (Object.keys(brandDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n                        <div className='brandDetailContainer__header-coverContainer'>\r\n                            <img src={brandDetailData['cover'] && brandDetailData['cover']['cover']} alt=\"\" />\r\n                        </div>\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {brandDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {brandDetailData['description']}\r\n                            </h3>\r\n\r\n                            {brandDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {brandDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {brandProductsState.isLoading && <DataTableSkeleton />}\r\n                {brandProductsState.done && !(brandProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this brand' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {brandProductsState.done && brandProductsState.data && brandProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={brandProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                            \r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\r\n\r\n    const [suggestedOptions, setsuggesteOptions] = useState([]);\r\n    const attributeLisState = useFetch([], [], 'attributeList', {});\r\n\r\n\r\n    const [attributeItem, setAttributeITem] = useState({\r\n        name: attribute.name,\r\n        value: attribute.value\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return attributeList.map(item => item.id).indexOf(attribute.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\r\n        const updateAttributeList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\r\n        setAttributeList(updateAttributeList);\r\n\r\n    }, [attributeItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateAttributeList = attributeList.filter(item => item.id !== attribute.id);\r\n        setAttributeList(updateAttributeList);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (attributeLisState.data && Object.keys(attributeLisState.data).length > 0) {\r\n            const options = Object.keys(attributeLisState.data);\r\n            const manupulatedOptions = options.map(option => {\r\n                return {\r\n                    value: option\r\n                }\r\n            })\r\n            setsuggesteOptions(manupulatedOptions);\r\n        };\r\n    }, [attributeLisState.data]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAttributeSelect = (value) => {\r\n\r\n        if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\r\n            if (attributeLisState.data[value]) {\r\n                setAttributeITem({\r\n                    ...attribute,\r\n                    name: value,\r\n                    value: attributeLisState.data[value]\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        else {\r\n            setAttributeITem({\r\n                ...attribute,\r\n                name: value\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleAttributeValueChange = (e) => {\r\n        setAttributeITem({\r\n            ...attribute,\r\n            value: e.target.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div\r\n                key={attribute.id}\r\n                className='addProductGridContainer__item-body-variationCard-item-attribute-item'>\r\n                <div\r\n                    onClick={handleAttributeDelete}\r\n                    className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'>\r\n                    <DeleteOutlined />\r\n                </div>\r\n\r\n                <h3 className='inputFieldLabel-small'>\r\n                    Name\r\n                </h3>\r\n                <AutoComplete\r\n                    value={attribute.name}\r\n                    style={{ width: '100%' }}\r\n                    options={suggestedOptions}\r\n                    placeholder=\"attribute\"\r\n                    onChange={handleAttributeSelect}\r\n                    filterOption={(inputValue, suggestedOption) =>\r\n                        suggestedOption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n                    }\r\n                />\r\n\r\n                {attribute.name && (\r\n                    <>\r\n                        <div style={{ marginTop: '10px' }}></div>\r\n                        <InputSmall\r\n                            label='Value'\r\n                            value={attribute.value}\r\n                            name='value'\r\n                            onChange={handleAttributeValueChange}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Attributes from \"./Attributes\";\r\nimport AddAttributeValues from \"../attribute/AddAttributeValues\";\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport { Button } from 'antd';\r\nimport {\r\n\r\n\tPlusOutlined,\r\n\tCheckOutlined\r\n} from '@ant-design/icons';\r\n\r\ninterface Props {\r\n\thandleAddPricing: any;\r\n\tpricingItem?:any; \r\n\thandleUpdatePricing?:any;\r\n\tisPricingEditActive?:any; \r\n}\r\n\r\nconst Pricing = ({\r\n\thandleAddPricing,\r\n\tpricingItem,\r\n\thandleUpdatePricing,\r\n\tisPricingEditActive\r\n}: Props) => {\r\n\r\n\tconst [price, setprice] = useState({\r\n\t\tregular: \"\",\r\n\t\toffer: \"\"\r\n\t});\r\n\tconst [stock, setStock] = useState({\r\n\t\tavailable: \"\",\r\n\t\tminimum: \"\"\r\n\t});\r\n\r\n\tconst [attributeList, setAttributeList] = useState([]);\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tif(pricingItem && Object.keys(pricingItem).length > 0){\r\n\t\t\tsetprice({\r\n\t\t\t\t...price,\r\n\t\t\t\t...pricingItem['price']\r\n\t\t\t})\r\n\r\n\t\t\tsetStock({\r\n\t\t\t\t...stock,\r\n\t\t\t\t...pricingItem['stock']\r\n\t\t\t}); \r\n\r\n\t\t\tconst attributeListItems = []; \r\n\t\t\tif(pricingItem.attribute && Object.keys(pricingItem.attribute).length > 0){\r\n\t\t\t\tconst attributeKeys = Object.keys(pricingItem.attribute); \r\n\t\t\t\tattributeKeys.forEach((attributeKey,index) => {\r\n\t\t\t\t\tattributeListItems.push({\r\n\t\t\t\t\t\tname : attributeKey,\r\n\t\t\t\t\t\tvalue : pricingItem.attribute[attributeKey],\r\n\t\t\t\t\t\tid: index\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tsetAttributeList(attributeListItems); \r\n\r\n\t\t}\r\n\t},[pricingItem])\r\n\r\n\tconsole.log('pricingItem',pricingItem); \r\n\tconsole.log('attributeList',attributeList); \r\n\r\n\r\n\r\n\tconst handlePriceChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\r\n\t\tsetprice({\r\n\t\t\t...price,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleStockChange = e => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetStock({\r\n\t\t\t...stock,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\r\n\tconst handleSavePricing = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (attributeList.length > 0) {\r\n\t\t\tconst attribute = {};\r\n\r\n\t\t\tfor (let item of attributeList) {\r\n\r\n\t\t\t\tconsole.log('itemofattribute', item);\r\n\t\t\t\tif (item['value'] && item['name']) {\r\n\t\t\t\t\tattribute[item['name']] = item['value']\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: attribute\r\n\t\t\t}\r\n\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t\tsetAttributeList([]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: {}\r\n\t\t\t}\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\tsetAttributeList([]);\r\n\t\t\thandleAddPricing(priceItem);\r\n\t\t}\r\n\r\n\t}; \r\n\r\n\r\n\r\n\t\r\n\tconst handleUpdatePricingItem = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (attributeList.length > 0) {\r\n\t\t\tconst attribute = {};\r\n\r\n\t\t\tfor (let item of attributeList) {\r\n\r\n\t\t\t\tconsole.log('itemofattribute', item);\r\n\t\t\t\tif (item['value'] && item['name']) {\r\n\t\t\t\t\tattribute[item['name']] = item['value']\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: attribute,\r\n\t\t\t\tid : pricingItem.id\r\n\t\t\t}\r\n\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\thandleUpdatePricing(priceItem);\r\n\t\t\tsetAttributeList([]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst priceItem = {\r\n\t\t\t\tprice: price,\r\n\t\t\t\tstock: stock,\r\n\t\t\t\tattribute: {},\r\n\t\t\t\tid : pricingItem.id\r\n\t\t\t}\r\n\r\n\t\t\tsetprice({\r\n\t\t\t\tregular: \"\",\r\n\t\t\t\toffer: \"\"\r\n\t\t\t})\r\n\t\t\tsetStock({ available: \"\", minimum: \"\" })\r\n\t\t\tsetAttributeList([]);\r\n\t\t\thandleUpdatePricing(priceItem);\r\n\t\t}\r\n\r\n\t}; \r\n\r\n\r\n\r\n\r\n\tconst handleAddAttribute = () => {\r\n\t\tsetAttributeList([...attributeList, {\r\n\t\t\tname: '',\r\n\t\t\tvalue: '',\r\n\t\t\tid: `${attributeList.length}`\r\n\t\t}])\r\n\t}\r\n\r\n\r\n\tconst getiCreatePricingIsDisabled = () => {\r\n\t\tif (!price.regular || !stock.available) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse return false;\r\n\t}\r\n\r\n\t// console.log('attributeList', attributeList);\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='addProductGridContainer__item-body-variationCard'>\r\n\r\n\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-left'>\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\tPrice\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\tlabel='Regular  *'\r\n\t\t\t\t\t\t\t\t\tvalue={price.regular}\r\n\t\t\t\t\t\t\t\t\tname='regular'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\tlabel='Offer'\r\n\t\t\t\t\t\t\t\t\tvalue={price.offer}\r\n\t\t\t\t\t\t\t\t\tname='offer'\r\n\t\t\t\t\t\t\t\t\tonChange={handlePriceChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-left'>\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\tlabel='Available  *'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.available}\r\n\t\t\t\t\t\t\t\t\t\tname='available'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-container-right'>\r\n\r\n\t\t\t\t\t\t\t\t\t<InputSmall\r\n\t\t\t\t\t\t\t\t\t\tlabel='Minimum'\r\n\t\t\t\t\t\t\t\t\t\tvalue={stock.minimum}\r\n\t\t\t\t\t\t\t\t\t\tname='minimum'\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleStockChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-right'>\r\n\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item'>\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-variationCard-item-attribute'>\r\n\r\n\t\t\t\t\t\t\t\t{attributeList.map(attribute => {\r\n\t\t\t\t\t\t\t\t\treturn <Attributes\r\n\t\t\t\t\t\t\t\t\t\tattribute={attribute}\r\n\t\t\t\t\t\t\t\t\t\tattributeList={attributeList} setAttributeList={setAttributeList} />\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t<Button size='small'\r\n\t\t\t\t\t\t\t\t\tonClick={handleAddAttribute}\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: '180px',\r\n\t\t\t\t\t\t\t\t\t\tminHeight: '75px',\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '0px',\r\n\t\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t\t}} type=\"dashed\" icon={<PlusOutlined />}>Add Attribute</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t{/* <Button\r\n          // type=\"primary\"\r\n         \r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n      </Button> */}\r\n\r\n\t\t\t<Button\r\n\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginLeft: '10px'\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={isPricingEditActive ? handleUpdatePricingItem :  handleSavePricing}\r\n\t\t\t\tdisabled={getiCreatePricingIsDisabled()}\r\n\t\t\t\tclassName='btnAddToPrice'\r\n\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t>\r\n\t\t\t\t{isPricingEditActive ? \"Update Pricing\" : \"Add To Pricing\"}\r\n\t\t\t\t\r\n\t\t\t\t</Button>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Pricing\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\tmodel: '',\r\n\tunit: '',\r\n\tregular: '',\r\n\toffer: '',\r\n\tavailable: '',\r\n\tminimum: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: '',\r\n\tpricing: [],\r\n\tvenue: '',\r\n\tdate: '',\r\n\ttime: '',\r\n\tpurchaseLimit: null,\r\n\tbnUnit: '',\r\n\tbnName: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tproductList?: any;\r\n\tsetProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList, setProductList }: Props) => {\r\n\r\n\tconst [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addProduct');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [categoryids, setcategoryIds] = useState([]);\r\n\tconst [tagIds, setTagIds] = useState([]);\r\n\tconst [brandId, setBrandId] = useState('');\r\n\tconst [pricing, setPricing] = useState([]);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [categoryOptions, setCategoryOptions] = useState([]);\r\n\tconst [selectedTags, setSelectedTags] = useState([]);\r\n\tconst [date, setDateFeild] = useState('');\r\n\tconst [time, setTimeFeild] = useState('');\r\n\tconst [description, setDescription] = useState('This product...');\r\n\tconst [bnDescription, setBNDescription] = useState('এই পণ্য...');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \r\n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('1');\r\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \r\n\r\n\tconst makeEmptyCategoryOptions = (setEmpty) => {\r\n\t\tsetEmpty([]);\r\n\t}\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst addProductRes = await handleAddProductFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: description,\r\n\t\t\t\tmodel: values.model,\r\n\t\t\t\tunit: values.unit,\r\n\t\t\t\tcategory: categoryids,\r\n\t\t\t\ttags: tagIds,\r\n\t\t\t\tbrand: brandId,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tpricing: pricing,\r\n\t\t\t\t// date: date,\r\n\t\t\t\t// time: time,\r\n\t\t\t\t// venue: values.venue,\r\n\t\t\t\t// purchaseLimit: values.purchaseLimit,\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: metaTags.join(','),\r\n\r\n\t\t\t\t\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tunit: values.metaUnit,\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addProductRes && addProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Product Created');\r\n\r\n\t\t\tsetProductList([{\r\n\t\t\t\tid: addProductRes['id'] || '',\r\n\t\t\t\tkey: addProductRes['id'] || '',\r\n\t\t\t\tname: addProductRes['name'] || '',\r\n\t\t\t\tdescription: addProductRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addProductRes\r\n\t\t\t},...productList])\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('');\r\n\t\t\tsetPricing([]);\r\n\t\t\tsetTagIds([]);\r\n\t\t\tsetSelectedTags([]);\r\n\t\t\tsetBrandId(\"\");\r\n\t\t\tsetcategoryIds([]);\r\n\t\t\tsetCategoryOptions([]);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// openErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\r\n\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addProductState['isLoading']) {\r\n\t\t\tconst error = addProductState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addProductState])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !(pricing.length > 0) || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\tconst handleDeleteFromSelectedImage = () => {\r\n\r\n\t};\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleAddPricing = (priceItem) => {\r\n\r\n\t\tsetPricing([{\r\n\t\t\t...priceItem,\r\n\t\t\tid: pricing.length\r\n\t\t}, ...pricing])\r\n\t\tmessage.info('Product Pricing Added');\r\n\t}\r\n\r\n\r\n\tconst handleUpdatePricing = (priceItem) => {\r\n\r\n\t\tconst positionInPricing = () => {\r\n\t\t\treturn pricing.map(item => item.id).indexOf(priceItem.id);\r\n\t\t  }\r\n\r\n\t\t  const index = positionInPricing();\r\n\r\n\t\t  // @ts-ignore\r\n\t\t  const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\r\n\t\t  const updatePricingList = [...pricing.slice(0, index), updatedItem, ...pricing.slice(index + 1)];\r\n\t\t\t \r\n\t\t  setPricing(updatePricingList); \r\n\r\n\t\tmessage.info('Product Pricing Updated');\r\n\t\tseTisPricingEditActive(true);\r\n\t\tsetpricingTagActiveKey('2'); \r\n\t}\r\n\r\n\r\n\tconst handleDeletePricing = (id) => {\r\n\t\tconst newPricing = pricing.filter(item => item.id !== id);\r\n\t\tsetPricing(newPricing);\r\n\t\tmessage.info('Product Pricing Deleted');\r\n\t}\r\n\r\n\tconst handleEditPricing = (id)=> {\r\n\t\tseTisPricingEditActive(true);\r\n\t\tconst pricingItem = pricing.find(item => item.id === id);\r\n\t\tif(pricingItem){\r\n\t\t\tsetEditPricingItem(pricingItem);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst isCategoryInValid = () => {\r\n\t\tif (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\telse if (categoryids && categoryids.length > 0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDateChange = (date, dateString) => {\r\n\t\tsetDateFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\tconst handleTimeChange = (date, dateString) => {\r\n\t\tsetTimeFeild(dateString);\r\n\t\t// console.log('date', date, dateString);\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('pricingingi',pricing);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px',\r\n\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\twidth={'70vw'}\r\n\t\t\t\t\t\t\ttitle=\"Add New Product\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Information\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Unit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.unit}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='unit'\r\n\t\t\t\t\t\t\t\t\t\t    \tplaceHolder={'KG,POUND,GM'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.unit && errors.unit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['unit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('unit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Unit'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnUnit}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'কেজি,গ্রাম'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnUnit'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnUnit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnUnit && errors.bnUnit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnUnit'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnUnit');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Model Number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='model'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.model && errors.model) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['model'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('model');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\r\n                                             </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__price'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProduct Pricing\r\n\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\t\t\t\t\t\tanimated={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttabPosition=\"top\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='card'\r\n\t\t\t\t\t\t\t\t\t\t\t\tactiveKey={pricingTagActiveKey}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey(`${value}`);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane tab=\"Add Variation\" key=\"1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Pricing \r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleAddPricing={handleAddPricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tpricingItem={editpricingItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleUpdatePricing={handleUpdatePricing}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisPricingEditActive={isPricingEditActive}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TabPane\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t tab=\"Pricing List\" key=\"2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{pricing.length > 0 && pricing.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingEditIcon' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditPricing(item.id); \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetpricingTagActiveKey('1');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='pricingDeleteIcon' onClick={() => handleDeletePricing(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPrice\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.offer}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: \"line-through\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.price.regular}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.stock && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.available}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"site-badge-count-4\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toverflowCount={999}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcount={item.stock.minimum} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.values(item.attribute).length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAttributes\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).length > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& Object.keys(item.attribute).map(attributeItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{attributeItem}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.attribute[attributeItem]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{!(pricing.length > 0) && <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Tabs>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body-container'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\tImage\r\n\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__image'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tMeta Data\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setMetaTags}\r\n\t\t\t\t\t\t\ttags={metaTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnMetaTags}\r\n\t\t\t\t\t\t\ttags={bnMetaTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__category'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCategories\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='red'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Select at least one category'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className={!(categoryids.length > 0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t&& !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Categories\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetCategoryOptions={setCategoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcategoryOptions={categoryOptions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetcategoryIds={setcategoryIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tTags\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Tags\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__brand'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tBrand\r\n\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Brands setBrandId={setBrandId} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</section>\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n\tnotification.success({\r\n\t\tmessage: 'Product Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetProductList?: any;\r\n\tproductList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, setProductList, productList }: Props) => {\r\n\tconst [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateProductRes = await handleUpdateProductFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\tcategory: category.category,\r\n\t\t\t\tpricing: category.pricing\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateProductRes && updateProductRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn productList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, productList[index], { ...updateProductRes });\r\n\t\t\tconst updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n\t\t\tsetProductList(updateProductList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter, useHistory } from 'react-router-dom';\r\nimport { notification, Empty, Table, Badge, Menu, Dropdown, Space, Tag, Button, Input, Tooltip, Popconfirm } from 'antd';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewProduct from \"./AddNewProduct\";\r\nimport ProductDetail from \"./ProductEdit\";\r\nimport QuickEdit from \"./QuickEdit\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = () => {\r\n  notification.success({\r\n    message: 'Product Deleted',\r\n    description: '',\r\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n  });\r\n};\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any;\r\n  setProductList: any;\r\n}\r\n\r\n\r\nconst MyTable = ({ data, setProductList }: myTableProps) => {\r\n  const [visible, setvisible] = useState(false);\r\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n  const [deleteProductState, handleDeleteProductFetch] = useHandleFetch({}, 'deleteProduct');\r\n  const [productDetailVisible, setproductDetailVisible] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleDeleteProduct = async (id) => {\r\n    const deleteProductRes = await handleDeleteProductFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n      }\r\n    });\r\n\r\n    // @ts-ignore\r\n    if (deleteProductRes && deleteProductRes.status === 'ok') {\r\n      openSuccessNotification();\r\n      const newProductList = data.filter(item => item.id !== id);\r\n      setProductList(newProductList);\r\n    }\r\n\r\n    // console.log('deleteProductRes', deleteProductRes)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        style={{\r\n          paddingTop: '10px',\r\n          borderRadius: '5px !important',\r\n          overflow: 'hidden',\r\n          boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n        }}\r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        tableLayout={'auto'}\r\n        onHeaderRow={column => {\r\n          return {\r\n            style: {\r\n              color: 'red !important'\r\n            }\r\n\r\n          };\r\n        }}\r\n      >\r\n        <Column\r\n          title=\"\"\r\n          dataIndex=\"cover\"\r\n          key=\"id\"\r\n          width={'80px'}\r\n\r\n          className='classnameofthecolumn'\r\n\r\n          render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n        />\r\n\r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/product/${record.id}`)\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n        <Column\r\n          title=\"Offer Price\"\r\n          dataIndex=\"offerPrice\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n\r\n        <Column\r\n          title=\"Price\"\r\n          dataIndex=\"price\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        />\r\n\r\n\r\n                      <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n\r\n        {/* <Column\r\n          title=\"Unit\"\r\n          dataIndex=\"unit\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n\r\n        /> */}\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n        {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n\r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n\r\n          className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record: any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n                <Tooltip\r\n\r\n                  placement=\"top\" title='Quick Edit Product'>\r\n                  <span className='iconSize' onClick={() => {\r\n                    setvisible(true)\r\n                    setactiveCategoryForEdit(record);\r\n                  }}>\r\n                    <EditOutlined />\r\n\r\n                  </span>\r\n                </Tooltip>\r\n              </a>\r\n\r\n              <Popconfirm\r\n\r\n                onConfirm={() => handleDeleteProduct(record.id)}\r\n                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                <span\r\n                  className='iconSize iconSize-danger'\r\n                >\r\n                  <DeleteOutlined />\r\n                </span>\r\n\r\n              </Popconfirm>\r\n\r\n\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n      {activeCategoryForEdit && <QuickEdit\r\n        productList={data}\r\n        setProductList={setProductList}\r\n        setvisible={setvisible}\r\n        visible={visible}\r\n        category={activeCategoryForEdit} />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst ProductList = ({ history }: Props) => {\r\n\r\n\r\n\r\n  const [productList, setProductList] = useState([]);\r\n\r\n  const [productState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\r\n\r\n  useEffect(() => {\r\n    const setProducts = async () => {\r\n      const products = await handleProductListFetch({});\r\n      // @ts-ignore\r\n      setProductList(products);\r\n    }\r\n    setProducts();\r\n  }, [])\r\n\r\n\r\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\r\n  // console.log('productState', productState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if (productState.data.length > 0) {\r\n      const newProductList = productState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n      setProductList(newProductList);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n      <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n\r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n            <h2 className='categoryListContainer__header-title'>\r\n              Products\r\n            </h2>\r\n\r\n\r\n            <Search\r\n              enterButton={false}\r\n              className='searchbarClassName'\r\n              placeholder=\"search products..\"\r\n              onChange={e => handleSearch(e.target.value)}\r\n            // style={{ width: 300 }}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            // type=\"primary\"\r\n            className='btnPrimaryClassNameoutline'\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setAddNewCategoryVisible(true)}\r\n          >\r\n            Add New\r\n      </Button>\r\n\r\n\r\n        </div>\r\n\r\n        <div className='categoryListContainer__afterHeader'>\r\n          {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n        </div>\r\n\r\n\r\n        <div className='categoryListContainer__categoryList'>\r\n          {productState.done && productList.length > 0 && <MyTable\r\n            setProductList={setProductList}\r\n            data={productList} />}\r\n          {productState.isLoading && <DataTableSkeleton />}\r\n          {productState.done && !(productList.length > 0) && (\r\n            <div style={{\r\n              marginTop: '200px'\r\n            }}>\r\n              <Empty description='No Products found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {productState.done &&\r\n        <AddNewProduct\r\n          addNewCategoryVisible={addNewCategoryVisible}\r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          productList={productState.data}\r\n          setProductList={setProductList}\r\n\r\n\r\n        />}\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProductList);\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge, Spin } from 'antd';\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    FileImageOutlined,\r\n    FileImageTwoTone,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport DatePicker from \"../../components/Field/DatePicker\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport Pricing from \"./Pricing\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    model: '',\r\n    unit: '',\r\n    regular: '',\r\n    offer: '',\r\n    available: '',\r\n    minimum: '',\r\n    image: [],\r\n    url: '',\r\n    cover: '',\r\n    pricing: [],\r\n    venue: '',\r\n    date: '',\r\n    time: '',\r\n    purchaseLimit: null\r\n}\r\n\r\ninterface Props {\r\n    productEditVisible?: any;\r\n    setProductEditVisible?: any;\r\n    productDetailData?: any;\r\n    setProductDetailData?:any; \r\n}\r\n\r\nconst AddNewProduct = ({ productEditVisible, \r\n    setProductEditVisible, \r\n    productDetailData,\r\n    setProductDetailData\r\n }: Props) => {\r\n\r\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productDetailData.id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productDetailData]);\r\n\r\n    useEffect(() => {\r\n\r\n        if (productDetailData && productDetailData.brand) {\r\n            setBrandId(productDetailData.brand['id']);\r\n        }\r\n        else {\r\n            setBrandId('');\r\n        }\r\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\r\n            // const tagIds = productDetailData.tags.map(item => item.id);\r\n            setSelectedTags(productDetailData.tags);\r\n        }\r\n        else {\r\n            setSelectedTags([]);\r\n\r\n        }\r\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\r\n            const categoryIds = productDetailData.category.map(item => item.id);\r\n            setCategoryOptions(categoryIds);\r\n        }\r\n        else {\r\n            setCategoryOptions([]);\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.pricing && productDetailData.pricing) {\r\n            setPricing(productDetailData.pricing)\r\n        }\r\n        else {\r\n            setPricing([]);\r\n\r\n        }\r\n\r\n\r\n        if (productDetailData && productDetailData.date && productDetailData.date) {\r\n            setDateFeild(productDetailData.date)\r\n        }\r\n        else {\r\n            setDateFeild('');\r\n\r\n        }\r\n\r\n        if (productDetailData && productDetailData.time && productDetailData.time) {\r\n            setTimeFeild(productDetailData.time);\r\n        }\r\n        else {\r\n            setTimeFeild('');\r\n        }\r\n\r\n\r\n\r\n    }, [productDetailData]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\r\n\r\n            const images = productDetailState.data.image;\r\n            if (images && images.length > 0) {\r\n                setmyImages(images);\r\n            }\r\n\r\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\r\n                // @ts-ignore\r\n                setmyImages([productDetailState.data.cover, ...images]);\r\n                console.log('catcat', [productDetailState.data.cover, ...images]);\r\n                setCoverImageId(productDetailState.data.cover['id']);\r\n            }\r\n        }\r\n    }, [productDetailState])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('thumnail', myImages);\r\n        // @ts-ignore\r\n        if (myImages && myImages[0] && myImages.length < 2) {\r\n            console.log('thumnail2', myImages);\r\n\r\n            if (coverImageId !== myImages[0].id) {\r\n                setCoverImageId(myImages[0].id);\r\n                handleSetImageAsThumnail(myImages[0]);\r\n            }\r\n\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n    const handleDetachSingleImage = async id => {\r\n        await handleDetachImageFromItemSingleFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const handleSetImageAsThumnail = async image => {\r\n\r\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    imageId: image.id,\r\n                    collection: 'product',\r\n                    itemId: productDetailData.id\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log('thumbnailRes', thumbnailRes);\r\n\r\n        // @ts-ignore\r\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\r\n            openSuccessNotification('Seted as thumbnail!')\r\n            // const positionInBrand = () => {\r\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\r\n            // }\r\n\r\n            // const index = positionInBrand();\r\n\r\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\r\n\r\n            // if (prevItem) {\r\n            //     console.log('prevItem--', prevItem, 'image--', image);\r\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\r\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\r\n            //     setProductList(updateProductList);\r\n\r\n            // }\r\n        }\r\n        else {\r\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const updatedProductRes = await handleUpdateProductFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: productDetailData.id\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: description,\r\n                model: values.model,\r\n                unit: values.unit,\r\n                category: categoryOptions,\r\n                tags: tagIds,\r\n                brand: brandId,\r\n                image: imagesIds,\r\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n                pricing: pricing,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updatedProductRes && updatedProductRes.status === 'ok') {\r\n            openSuccessNotification('Product Updated');\r\n            setProductEditVisible(false);\r\n            setProductDetailData({\r\n                // @ts-ignore\r\n                ...updatedProductRes,\r\n                category: productDetailData.category,\r\n                brand: productDetailData.brand,\r\n                tags: productDetailData.tags,\r\n                cover: productDetailData.cover,\r\n                image: productDetailData.image,\r\n            }); \r\n\r\n\r\n            console.log('updatedProductRes', updatedProductRes);\r\n            // setProductList([...productList, {\r\n            //     id: updatedProductRes['id'] || '',\r\n            //     key: updatedProductRes['id'] || '',\r\n            //     name: updatedProductRes['name'] || '',\r\n            //     description: updatedProductRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...updatedProductRes\r\n            // }])\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!updateProductState['isLoading']) {\r\n            const error = updateProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [updateProductState])\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setProductEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (updateProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n    console.log('productDetailData', productDetailData);\r\n    console.log('productDetailState', productDetailState);\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues, ...productDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Product Edit\"\r\n                            visible={productEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            destroyOnClose={true}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Product Information\r\n\t\t                                \t</h3>\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n                                            <Input\r\n                                                label='Title'\r\n                                                value={values.name}\r\n                                                name='name'\r\n                                                isError={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['name'])}\r\n\r\n                                                errorString={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['name'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('name');\r\n                                                }}\r\n                                            />\r\n                                            {/* <div style={{\r\n                                                display: 'flex',\r\n                                                justifyContent: 'space-between'\r\n                                            }}>\r\n                                                <div style={{\r\n                                                    width: '48%',\r\n                                                }}>\r\n                                                    <DatePicker\r\n                                                        time={time}\r\n                                                        date={date}\r\n                                                        label='Date'\r\n                                                        onChange={handleDateChange} />\r\n\r\n                                                </div>\r\n                                                <div style={{\r\n                                                    width: '48%'\r\n                                                }}>\r\n\r\n                                                    <DatePicker\r\n                                                        time={time}\r\n                                                        date={date}\r\n                                                        withTime={true}\r\n                                                        placeholder='Select time'\r\n                                                        label='Time'\r\n                                                        onChange={handleTimeChange} />\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n\r\n                                            <TextArea\r\n                                                rows={1}\r\n                                                label='Venue'\r\n                                                value={values.venue}\r\n                                                name='venue'\r\n                                                isError={(touched.venue && errors.venue) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['venue'])}\r\n\r\n                                                errorString={(touched.venue && errors.venue) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['venue'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('venue');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n\r\n                                            <Input\r\n                                                label='Purchase Limit'\r\n                                                value={values.purchaseLimit}\r\n                                                type='number'\r\n                                                name='purchaseLimit'\r\n                                                isError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n\r\n                                                errorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('purchaseLimit');\r\n                                                }}\r\n                                            /> */}\r\n\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Description\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={description}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setDescription(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}> </div>\r\n\r\n                                            <Input\r\n                                                label='Model Number'\r\n                                                value={values.model}\r\n                                                name='model'\r\n                                                isError={(touched.model && errors.model) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['model'])}\r\n\r\n                                                errorString={(touched.model && errors.model) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['model'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('model');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='Unit'\r\n                                                value={values.unit}\r\n                                                name='unit'\r\n                                                isError={(touched.unit && errors.unit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['unit'])}\r\n\r\n                                                errorString={(touched.unit && errors.unit) ||\r\n                                                    (!isSubmitting && updateProductState.error['error']['unit'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('unit');\r\n                                                }}\r\n                                            />\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Product Pricing\r\n\t\t\t</h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <Tabs\r\n                                                animated={true}\r\n                                                tabPosition=\"top\"\r\n                                                type='card'\r\n                                                defaultActiveKey='2'\r\n                                            >\r\n\r\n                                                <TabPane tab=\"Add Variation\" key=\"1\">\r\n                                                    <Pricing handleAddPricing={handleAddPricing} />\r\n                                                </TabPane>\r\n                                                <TabPane tab=\"Pricing List\" key=\"2\">\r\n                                                    <div className='addProductGridContainer__item-body-pricingContainer'>\r\n\r\n                                                        {pricing.length > 0 && pricing.map(item => {\r\n                                                            return (\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n                                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\r\n                                                                        {/* <span>\r\n\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t</span> */}\r\n                                                                        <span className='d' onClick={() => handleDeletePricing(item.id)}>\r\n                                                                            <DeleteOutlined />\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                                                        <div>\r\n                                                                            <h3>\r\n                                                                                Price\r\n\t\t\t\t\t\t</h3>\r\n                                                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n                                                                                {item.price.offer ? (\r\n                                                                                    <>\r\n                                                                                        <h4 >\r\n                                                                                            {item.price.offer}\r\n\r\n                                                                                        </h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{\r\n                                                                                            textDecoration: \"line-through\"\r\n                                                                                        }}>\r\n\r\n                                                                                            {item.price.regular}\r\n                                                                                        </h5>\r\n                                                                                    </>\r\n                                                                                ) : (\r\n                                                                                        <h4>\r\n                                                                                            {item.price.regular}\r\n\r\n                                                                                        </h4>\r\n                                                                                    )}\r\n\r\n\r\n                                                                            </div>\r\n                                                                        </div>\r\n\r\n                                                                        {item.stock && (\r\n                                                                            <div>\r\n                                                                                <Badge\r\n                                                                                    overflowCount={999}\r\n                                                                                    count={item.stock.available}>\r\n                                                                                    <h3>\r\n                                                                                        Stock\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n                                                                                </Badge>\r\n                                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                                    <div>\r\n                                                                                        <h6>\r\n                                                                                            min\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge\r\n                                                                                                className=\"site-badge-count-4\"\r\n                                                                                                overflowCount={999}\r\n                                                                                                count={item.stock.minimum} />\r\n                                                                                        </h6>\r\n\r\n\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        )}\r\n\r\n\r\n\r\n                                                                    </div>\r\n\r\n                                                                    {item.attribute\r\n                                                                        && Object.values(item.attribute).length > 0 && (\r\n                                                                            <>\r\n                                                                                <h3>\r\n                                                                                    Attributes\r\n\t\t\t\t\t\t</h3>\r\n                                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                                    {item.attribute\r\n                                                                                        && Object.keys(item.attribute).length > 0\r\n                                                                                        && Object.keys(item.attribute).map(attributeItem => {\r\n                                                                                            return (\r\n                                                                                                <div>\r\n                                                                                                    <h6>\r\n                                                                                                        {attributeItem}\r\n                                                                                                    </h6>\r\n                                                                                                    <h4>\r\n                                                                                                        {item.attribute[attributeItem]}\r\n                                                                                                    </h4>\r\n                                                                                                </div>\r\n                                                                                            )\r\n                                                                                        })}\r\n                                                                                </div>\r\n                                                                            </>\r\n                                                                        )}\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                        {!(pricing.length > 0) && <div style={{\r\n                                                            width: '100%',\r\n                                                            display: 'flex',\r\n                                                            justifyContent: 'center'\r\n                                                        }}>\r\n                                                            <Empty description='No Pricing added' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                                        </div>}\r\n                                                    </div>\r\n                                                </TabPane>\r\n\r\n                                            </Tabs>\r\n\r\n                                            <div className='addProductGridContainer__item-body-container'>\r\n\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n\t\t\t</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n\r\n                                        <div\r\n                                            style={{\r\n                                                padding: \"10px\"\r\n                                            }}\r\n                                            className='aboutToUploadImagesContainer'>\r\n                                            {productDetailState.isLoading && (\r\n                                                <div style={{\r\n                                                    padding: '20px 0'\r\n                                                }}>\r\n                                                    <Spin />\r\n                                                </div>\r\n                                            )}\r\n                                            {productDetailState.done && (\r\n                                                <>\r\n                                                    {myImages &&\r\n                                                        // @ts-ignore\r\n                                                        myImages.length > 0 && myImages.map((image, index) => {\r\n                                                            return (\r\n                                                                <div className='aboutToUploadImagesContainer__item'>\r\n                                                                    <div\r\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                        onClick={() => {\r\n                                                                            setCoverImageId(image.id);\r\n                                                                            handleSetImageAsThumnail(image);\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <img src={image.cover} alt={image.alt} />\r\n                                                                    </div>\r\n\r\n                                                                    <span\r\n                                                                        onClick={() => {\r\n                                                                            handleImagesDelete(image.id)\r\n                                                                            handleDetachSingleImage(image.id)\r\n                                                                        }\r\n\r\n                                                                        }\r\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                        <CloseOutlined />\r\n                                                                    </span>\r\n\r\n\r\n                                                                    {coverImageId === image.id ? (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    ) : !coverImageId && index === 0 && (\r\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                            <CheckOutlined />\r\n                                                                        </span>\r\n                                                                    )}\r\n\r\n\r\n                                                                </div>\r\n                                                            )\r\n                                                        })}\r\n\r\n\r\n                                                    <Tooltip\r\n                                                        title={'Attach images'}>\r\n\r\n                                                        <div\r\n                                                            onClick={() => {\r\n                                                                setvisible(true);\r\n                                                                setisModalOpenForImages(true);\r\n                                                                setisModalOpenForThumbnail(false);\r\n                                                            }}\r\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                                                            <FileImageFilled />\r\n                                                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                                <PlusOutlined />\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Categories\r\n\t\t\t\t</h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={updateProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !updateProductState.error['error']['category'] ? 'checkicon' : updateProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className='addProductGridContainer__brand'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Brand\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Brands\r\n                                                    productDetailState={productDetailState}\r\n                                                    brandId={brandId}\r\n                                                    setBrandId={setBrandId} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductEdit from \"./ProductEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'productDetailById');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n    const [productDetailData,setProductDetailData] = useState({}); \r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getProductDetail = async () => {\r\n            const productDetailRes = await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(productDetailRes){\r\n                // @ts-ignore\r\n                setProductDetailData(productDetailRes); \r\n            };\r\n\r\n            console.log('productDetailRes',productDetailRes);\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n\r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailData && productDetailData['image'] ? getImagesInCollumn(productDetailData['image']) : [];\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Product Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailData && (Object.keys(productDetailData).length > 0) && (\r\n                    <>\r\n                        <ProductEdit\r\n                            productEditVisible={productEditVisible}\r\n                            setProductEditVisible={setProductEditVisible}\r\n                            productDetailData={productDetailData}\r\n                            setProductDetailData={setProductDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailData && !(Object.keys(productDetailData).length > 0) && (\r\n                    <Empty description='No Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailData && (Object.keys(productDetailData).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailData['cover'] && productDetailData['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailData['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailData['price']}\r\n                                </h4>\r\n                                <h3>\r\n                                    {productDetailData['description']}\r\n                                </h3>\r\n\r\n\r\n                                {productDetailData['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailData['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailData['tags'] && productDetailData['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailData['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailData['category'] && productDetailData['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailData['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailData['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailData['icon'] && productDetailData['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailData['pricing'] && productDetailData['pricing'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Pricing\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__pricing'>\r\n                                    <div className='addProductGridContainer__item-body-pricingContainer'>\r\n                                        {productDetailData['pricing'].map(item => {\r\n                                            return (\r\n                                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\r\n\r\n                                                    <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\r\n                                                        <div>\r\n                                                            <h3>\r\n                                                                Price\r\n    </h3>\r\n                                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n\r\n\r\n                                                                {item.price.offer ? (\r\n                                                                    <>\r\n                                                                        <h4 >\r\n                                                                            {item.price.offer}\r\n\r\n                                                                        </h4>\r\n                                                        /\r\n                                                        <h5 style={{\r\n                                                                            textDecoration: \"line-through\"\r\n                                                                        }}>\r\n\r\n                                                                            {item.price.regular}\r\n                                                                        </h5>\r\n                                                                    </>\r\n                                                                ) : (\r\n                                                                        <h4>\r\n                                                                            {item.price.regular}\r\n\r\n                                                                        </h4>\r\n                                                                    )}\r\n\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        {item.stock && (\r\n                                                            <div>\r\n                                                                <Badge\r\n                                                                    overflowCount={999}\r\n                                                                    count={item.stock.available}>\r\n                                                                    <h3>\r\n                                                                        Stock\r\n                </h3>\r\n                                                                </Badge>\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                    <div>\r\n                                                                        <h6>\r\n                                                                            min\r\n                                                                        <Badge\r\n                                                                                className=\"site-badge-count-4\"\r\n                                                                                overflowCount={999}\r\n                                                                                count={item.stock.minimum} />\r\n                                                                        </h6>\r\n\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )}\r\n\r\n\r\n\r\n                                                    </div>\r\n\r\n                                                    {item.attribute\r\n                                                        && Object.values(item.attribute).length > 0 && (\r\n                                                            <>\r\n                                                                <h3>\r\n                                                                    Attributes\r\n    </h3>\r\n                                                                <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\r\n                                                                    {item.attribute\r\n                                                                        && Object.keys(item.attribute).length > 0\r\n                                                                        && Object.keys(item.attribute).map(attributeItem => {\r\n                                                                            return (\r\n                                                                                <div>\r\n                                                                                    <h6>\r\n                                                                                        {attributeItem}\r\n                                                                                    </h6>\r\n                                                                                    <h4>\r\n                                                                                        {item.attribute[attributeItem]}\r\n                                                                                    </h4>\r\n                                                                                </div>\r\n                                                                            )\r\n                                                                        })}\r\n                                                                </div>\r\n                                                            </>\r\n                                                        )}\r\n\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                        {productDetailData['image'] && productDetailData['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailData['brand'] && Object.keys(productDetailData['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailData['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailData['brand']['cover'] && productDetailData['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailData['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailData['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailData['primaryCategory'] && Object.keys(productDetailData['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailData['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailData['primaryCategory']['cover'] && productDetailData['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailData['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailData['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([{\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            },...tagList])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewTag from \"./AddNewTag\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tTags\r\n            </h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search tags..\"\r\n\t\t\t\t\t\t\tonChange={e => handleSearch(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '200px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewTag\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n                description: values.description,\r\n            })\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Tag Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCoupon');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Coupon Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponEdit from \"./CouponEdit\";\r\nimport CouponProducts from \"./CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'couponDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('tagDetailState', tagDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Coupon Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <CouponEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {tagDetailState.data['code']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                            {tagDetailState.data['code'] && (\r\n                                <h3>\r\n                                    CODE:\r\n                                    <span>\r\n                                        {tagDetailState.data['code']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n                            {tagDetailState.data['amount'] && (\r\n                                <h3>\r\n                                    AMOUT:\r\n                                    <span>\r\n                                        {tagDetailState.data['amount']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n                            {tagDetailState.data['freeDelivery'] && (\r\n                                <h3>\r\n                                    FREE DELIVERY:\r\n                                    <span>\r\n                                        {tagDetailState.data['freeDelivery']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            {/* <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Ordered Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailState.data && tagDetailState.data['orderedProducts'] && !(tagDetailState.data['orderedProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && (\r\n                    <>\r\n                        {tagDetailState.data['orderedProducts'] && tagDetailState.data['orderedProducts'].length > 0 &&\r\n                            tagDetailState.data['orderedProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div> */}\r\n            {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && tagDetailState.data['freeProducts'] && (\r\n                <div className='brandDetailContainer__heading'>\r\n                    <h3>\r\n                        Free Products\r\n                       </h3>\r\n                </div>\r\n            )\r\n            }\r\n\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagDetailState.done && tagDetailState.data && tagDetailState.data['freeProducts'] && !(tagDetailState.data['freeProducts'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && Object.keys(tagDetailState.data).length > 0 && (\r\n                    <>\r\n                        {tagDetailState.data['freeProducts'] && tagDetailState.data['freeProducts'].length > 0 &&\r\n                            tagDetailState.data['freeProducts'].map(product => {\r\n                                return (\r\n                                    <CouponProducts\r\n                                        quantity={product.quantity}\r\n                                        productId={product['_id']} />\r\n                                )\r\n                            })}\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    category: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    tagList: any;\r\n    setTagList: any;\r\n}\r\n\r\nconst ProductBundleQuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCoupon');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return tagList.map(item => item.id).indexOf(category.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default ProductBundleQuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport OrderedProductsSelectProducts from \"./OrderedProductsSelectProducts\";\r\nimport OrderedProductsSelectedProductItems from \"./OrderedProductsSelectedProductItems\";\r\nimport FreeSelectProducts from \"./FreeSelectProducts\";\r\nimport FreeSelectedProductItems from \"./FreeSelectedProductItems\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"name\": \"\",\r\n    \"code\": \"\",\r\n    \"minimumOrder\": null,\r\n    \"amount\": \"\",\r\n    \"amountType\": \"\",\r\n    \"orderedProducts\": [],\r\n    \"freeDelivery\": true,\r\n    \"freeProducts\": []\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addCouponState, handleAddCouponStateFetch] = useHandleFetch({}, 'addCoupon');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n    const [freeProductIds, setFreeProductIds] = useState([]);\r\n    const [freeProductList, setFreeProductList] = useState([]);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const orderedProducts = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addTagRes = await handleAddCouponStateFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                code: values.code.trim(),\r\n                minimumOrder: values.minimumOrder.trim(),\r\n                amount: values.amount.trim(),\r\n                amountType: values.amountType.trim(),\r\n                freeDelivery: false,\r\n                orderedProducts: orderedProducts,\r\n                freeProducts: freeProducts,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([{\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            },...tagList])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addCouponState['isLoading']) {\r\n            const error = addCouponState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addCouponState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (freeProductIds.length > 0) {\r\n            if (freeProductIds.length > freeProductList.length) {\r\n                const variation = freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 && freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setFreeProductList([...freeProductList, {\r\n                    ...freeProductIds[freeProductIds.length - 1],\r\n                    _id: freeProductIds[freeProductIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (freeProductIds.length < freeProductList.length) {\r\n                console.log('freeProductIds', freeProductIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = freeProductList.filter(item => {\r\n                    let isTrue = false;\r\n                    freeProductIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setFreeProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setFreeProductList([]);\r\n        }\r\n        // console.log('freeProductIds', freeProductIds)\r\n\r\n\r\n    }, [freeProductIds])\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            width={'45vw'}\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Coupon\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Name'\r\n                                        value={values.name}\r\n                                        name='name'\r\n                                        isError={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n\r\n                                        errorString={(touched.name && errors.name) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['name'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('name');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Code'\r\n                                        value={values.code}\r\n                                        name='code'\r\n                                        isError={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n\r\n                                        errorString={(touched.code && errors.code) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['code'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('code');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <Input\r\n                                label='Minimum Order'\r\n                                value={values.minimumOrder}\r\n                                name='minimumOrder'\r\n                                isError={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n\r\n                                errorString={(touched.minimumOrder && errors.minimumOrder) ||\r\n                                    (!isSubmitting && addCouponState.error['error']['minimumOrder'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('minimumOrder');\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Amount'\r\n                                        value={values.amount}\r\n                                        name='amount'\r\n                                        isError={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n\r\n                                        errorString={(touched.amount && errors.amount) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amount'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amount');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Amount Type'\r\n                                        value={values.amountType}\r\n                                        name='amountType'\r\n                                        isError={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n\r\n                                        errorString={(touched.amountType && errors.amountType) ||\r\n                                            (!isSubmitting && addCouponState.error['error']['amountType'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('amountType');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setProductIds}\r\n                                productIds={productIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Ordered Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={productList}\r\n                                setProductList={setProductList}\r\n                            />\r\n\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectProducts\r\n                                setProductIds={setFreeProductIds}\r\n                                productIds={freeProductIds}\r\n                            />\r\n\r\n                            <div style={{\r\n                                marginTop: \"15px\"\r\n                            }}></div>\r\n\r\n                            <h3 className='inputFieldLabel'>\r\n                                Selected Free Products\r\n                                </h3>\r\n\r\n                            <OrderedProductsSelectedProductItems\r\n                                productList={freeProductList}\r\n                                setProductList={setFreeProductList}\r\n                            />\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment'\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CouponQuickEdit from \"./CouponQuickEdit\"\r\nimport AddNewCoupon from \"./AddNewCoupon\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Coupon Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteCoupon');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Coupon');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/coupon/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Order Products\"\r\n                    dataIndex=\"orderedProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Free Products\"\r\n                    dataIndex=\"freeProductsCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                    \r\n                               <Moment>\r\n                                {text}\r\n                               </Moment>\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                    \r\n                               <Moment>\r\n                                {text}\r\n                               </Moment>\r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <CouponQuickEdit\r\n                tagList={data}\r\n                setTagList={setTagList}\r\n                setvisible={setvisible}\r\n                visible={visible}\r\n                category={activeCategoryForEdit} />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Couponlist = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'couponList');\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({});\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n    console.log('tagState', tagState)\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                            Coupons\r\n                       </h2>\r\n\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search coupon..\"\r\n                            onSearch={value => handleSearch(value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewCoupon\r\n                tagList={tagList}\r\n                setTagList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Couponlist;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([{\r\n\t\t\t\tid: addCustomerRes['id'] || '',\r\n\t\t\t\tkey: addCustomerRes['id'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t},...customerList])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewCustomer from \"./AddNewCustomer\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n   const history = useHistory(); \r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Customer'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/customer/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n           <Column\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              <Moment>\r\n                {text}\r\n              </Moment>\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({}); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Customers\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search customer..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Customer found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewCustomer \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined, EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .label('Firstname')\r\n        .required()\r\n        .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n        .label('Lastname')\r\n        .required()\r\n        .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n        .required('Please tell us your mobile number.')\r\n        .max(13, 'Please enter a valid mobile number.'),\r\n    address1: Yup.string()\r\n        .label('Address line 1')\r\n        .required()\r\n        .min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible }: Props) => {\r\n    const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateCustomerRes = await handleUpdateCustomerFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                phone: values.phone,\r\n                email: values.email,\r\n                password: values.password,\r\n                address1: values.address1,\r\n                address2: values.address2,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                country: selectedCountryValue,\r\n                city: selectedCityValue,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updateCustomerRes && updateCustomerRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return customerList.map(item => item.id).indexOf(customer.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n            // const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n            // setCustomerList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.phone ||\r\n            !values.address1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Customer Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        defaultValue={customer && customer.city}\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='More specific address'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import \r\nimport Moment from \"react-moment\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport CustomerEdit from \"./CustomerEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [customerDetailState, handleCustomerDetailFetch] = useHandleFetch({}, 'customerDetail');\r\n    const [orderListState, handleOrderListFetch] = useHandleFetch({}, 'orderListForCustomer');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [customerDetailData,setCustomerDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const customerId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getCustomerDetail = async () => {\r\n            const customerDetailDataRes = await handleCustomerDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: customerId\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if(customerDetailDataRes){\r\n                // @ts-ignore\r\n                setCustomerDetailData(customerDetailDataRes); \r\n            }\r\n\r\n            console.log('customerDetailDataRes',customerDetailDataRes)\r\n        };\r\n\r\n        getCustomerDetail();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getOrderList = async () => {\r\n            await handleOrderListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        customerId: customerId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderList();\r\n\r\n    }, [customerId]);\r\n\r\n\r\n\r\n\r\n    console.log('customerDetailData', customerDetailData);\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Customer Detail\r\n                </h3>\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <>\r\n                        <CustomerEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={customerDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={customerDetailState.isLoading}>\r\n                {customerDetailState.done && customerDetailData && !(Object.keys(customerDetailData).length > 0) && (\r\n                    <Empty description='No Customer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {customerDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {customerDetailData['description']}\r\n                            </h3>\r\n\r\n                            {customerDetailData['country'] && (\r\n                                <h3>\r\n                                    COUNTRY:\r\n                                    <span>\r\n                                        {customerDetailData['country']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {customerDetailData['city'] && (\r\n                                <h3>\r\n                                    CITY:\r\n                                    <span>\r\n                                        {customerDetailData['city']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                        \r\n\r\n\r\n                            {customerDetailData['address1'] && (\r\n                                <h3>\r\n                                    ADDRESS:\r\n                                    <span>\r\n                                        {customerDetailData['address1']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                         \r\n\r\n                            {customerDetailData['phone'] && (\r\n                                <h3>\r\n                                    PHONE:\r\n                                    <span>\r\n                                        {customerDetailData['phone']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                             {customerDetailData['email'] && (\r\n                                <h3>\r\n                                    EMAIL:\r\n                                    <span>\r\n                                        {customerDetailData['email']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Orders \r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {orderListState.isLoading && <DataTableSkeleton />}\r\n                {orderListState.done && !(orderListState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orders exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {orderListState.done && orderListState.data && orderListState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={orderListState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                          \r\n          \r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n               <Column\r\n                title=\"Country\" \r\n                dataIndex=\"country\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                \r\n                    />\r\n\r\n\r\n                <Column\r\n                title=\"City\" \r\n                dataIndex=\"city\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                title=\"Created\" \r\n                dataIndex=\"date_created\" \r\n                key=\"id\" \r\n                className='classnameofthecolumn'\r\n                render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n\r\n                }}>\r\n                  <Moment  withTitle>\r\n                    {text}\r\n                  </Moment>\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          <Column\r\n            width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n             <a href='##'>\r\n              <span\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n                {text}\r\n             </span> \r\n            </a>\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, {useState,useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Table,Empty, Popconfirm, Space,Button, Input,Tooltip, notification  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n/// import hooks\r\nimport {  useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\n\r\n\r\n\r\nconst { Column } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Page Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setBrandList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setBrandList}: myTableProps) => {\r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deletePageState, handleDeletePageFetch] = useHandleFetch({}, 'deletePage');\r\n\r\n    const history = useHistory(); \r\n      \r\n      const handleDeletePage = async (id) => {\r\n        const deletePageRes = await handleDeletePageFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deletePageRes && deletePageRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Page'); \r\n\t\t\t  const newBrandList =  data.filter(item => item.id !== id);\r\n\t\t\t  setBrandList(newBrandList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'100px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n           render={(cover, record: any) => (\r\n            <>\r\n              <img\r\n                onClick={() => {\r\n                  setactiveCategoryForEdit(record);\r\n                  history.push('/admin/page/pageName')\r\n                }}\r\n                src={cover} alt='cover img' style={{\r\n                  height: '40px',\r\n                  width: '40px',\r\n                  objectFit: \"contain\",\r\n                  borderRadius: '3px',\r\n                  cursor: 'pointer'\r\n                }} />\r\n\r\n\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  setactiveCategoryForEdit(record);\r\n                  history.push('/admin/page/pageName')\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n                <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Page'>\r\n              <span className='iconSize' onClick={() => {\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeletePage(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n           </Popconfirm>\r\n\r\n\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n  \r\n\r\n\r\n    \r\n\r\n\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst PageList = ({}: Props) => {\r\n\r\n\r\n  const [pageList,setPageList] = useState([]);\r\n  const [pageState, handlePagsListFetch] = useHandleFetch({}, 'pageList');\r\n\r\n  const history = useHistory(); \r\n\r\n  useEffect(()=>{\r\n   const setPages = async () => {\r\n     const pages = await handlePagsListFetch({}); \r\n     // @ts-ignore\r\n     setPageList(pages); \r\n   }\r\n   setPages(); \r\n  },[])\r\n\r\n\r\n\r\n\r\n    \r\n  const handleSearch = (value) => {\r\n    if(pageState.data.length > 0 ){\r\n      const newBrandList = pageState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setPageList(newBrandList); \r\n    }\r\n     \r\n  }\r\n\r\n\treturn (\r\n\t\t<>\r\n  \r\n    <div className='categoryListContainer'>\r\n        <div className='categoryListContainer__header'>\r\n           <div className='categoryListContainer__header-searchBar'>\r\n\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Pages\r\n            </h2>\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search pages..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/admin/page/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {pageState.done && pageList.length > 0 && <MyTable \r\n          setBrandList={setPageList}\r\n        data={pageList} />}\r\n        {pageState.isLoading && <DataTableSkeleton />}\r\n        {pageState.done && !(pageList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '200px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty description='No Page found'  image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default PageList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n// import hhooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Steps, Tooltip } from 'antd';\r\n\r\nimport {\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined,\r\n\tInfoCircleOutlined,\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled\r\n} from '@ant-design/icons';\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport MetaTags from \"../../pages/category/MetaTags\";\r\n\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Page Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tcontent: '',\r\n\tbnContent: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\turl: ''\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Billing Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Confirm Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewPage = ({ }: Props) => {\r\n\r\n\tconst [addPageState, handleAddPageFetch] = useHandleFetch({}, 'addPage');\r\n\tconst [content, setContent] = useState(\"<p>Hello from the new page !</p>\");\r\n\tconst [bnContent, setBnContent] = useState(\"<p>হ্যালো নতুন পেজ থেকে!</p>\");\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleAddPageSubmit = async (values: any, actions: any) => {\r\n\t\tconsole.log('fuckit', values);\r\n\t\tconsole.log('values', values);\r\n\t\t\r\n\t\tconst addOrderRes = await handleAddPageFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tcontent: content,\r\n\t\t\t\turl: values.name,\r\n\t\t\t\tcover: myImages ? myImages[0] && myImages[0].id : '',\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: tags.join(','),\r\n\r\n\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tcontent: values.setBnContent,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addOrderRes && addOrderRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't create page, Something went wrong\")\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\r\n\t\r\n    useEffect(() => {\r\n\t\tif (!addPageState['isLoading']) {\r\n\t\t\tconst error = addPageState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addPageState['isLoading'] &&\r\n\t\t\tObject.keys(addPageState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addPageState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Page Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n    }, [addPageState]);\r\n\r\n\r\n\r\n\r\n\tconsole.log('myImagesdx', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"addNewPageContainer\">\r\n\t\t\t\t\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\t\t\t\t\tAdd New Page\r\n\t\t                 \t</h3>\r\n\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__header'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder='About us,Contact us'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='BN Title'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'ব্লগ...'}\r\n\t\t\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='URL'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.url}\r\n\t\t\t\t\t\t\t\t\t\t\tname='url'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.url && errors.url) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['url'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.url && errors.url) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['url'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('url');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Thumbnail</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<p style={{\r\n\t\t\t\t\t\t\t\t\tcolor: '#ff4d4f',\r\n\t\t\t\t\t\t\t\t\tmarginTop:'-15px'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{addPageState.error['error']['cover']}\r\n\t\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__body'>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\tContent\r\n                               </h3>\r\n\r\n\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\tdata={content}\r\n\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\tsetContent(data);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\tBN Content\r\n                               </h3>\r\n\r\n\t\t\t\t\t\t\t\t<CKEditor\r\n\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\r\n\t\t\t\t\t\t\t\t\tdata={bnContent}\r\n\t\t\t\t\t\t\t\t\tonInit={editor => {\r\n\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\r\n\t\t\t\t\t\t\t\t\t\tsetBnContent(data);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addNewPageContainer__header'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='Meta Title'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Meta Title'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addPageState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tloading={addPageState.isLoading}\r\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCreate page\r\n                            </Button>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n<div className=\"addNewPageContainer\">\r\n\t\t\t<h3 className='addNewPageContainer__heading'>\r\n\t\t\t\tAdd New Order\r\n\t\t\t</h3>\r\n\t\t\t<div className='addNewPageContainer__header'>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div className='addNewPageContainer__body'>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n*/","import React,{useState} from 'react';\r\nimport { Modal  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tname: values.name,\r\n\t\t\tdescription: values.description,\r\n\t\t},\r\n\t  });\r\n\t\r\n\t  actions.setSubmitting(false);\r\n\t};\r\n\t\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!values.name || !values.description || !isValid){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...category}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n  >\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\t\t\t  <TextArea\r\n\t\t\t   label='Description' \r\n\t\t\t   value={values.description}\r\n\t\t\t   name='description'\r\n\t\t\t   isError={(touched.description && errors.description) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('description');\r\n\t\t\t\t}}\r\n\t\t\t\t />\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","// @ts-nocheck\r\n\r\nimport React from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass EditableTagGroup extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n  handleClose = removedTag => {\r\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n    this.setState({ tags });\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n    const { inputValue } = this.state;\r\n    let { tags } = this.state;\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    this.setState({\r\n      tags,\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\r\n      const newTags = [...tags];\r\n      newTags[editInputIndex] = editInputValue;\r\n\r\n      return {\r\n        tags: newTags,\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n  render() {\r\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    return (\r\n      <>\r\n        {tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTagGroup","import React, {useState} from 'react';\r\n\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\r\n\r\n} from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddAttributeValues from \"./AddAttributeValues\"\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n\tdescription: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({data}) => {\r\n    const [visible,setvisible] = useState(false);   \r\n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\r\n\tconst handleDeleteCategory = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n      }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n      \r\n      };\r\n    \r\n      const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n\r\n\r\n             \r\n              <Tooltip placement=\"top\" title='Delete Tag'>\r\n            \r\n\r\n             <span \r\n             className='iconSize iconSize-danger'\r\n             onClick={() => handleDeleteCategory(record.id)}\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n            \r\n          </Tooltip>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n\r\n\r\n     \r\n\r\n\t\t{activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst props = {\r\n\tname: 'file',\r\n\tmultiple: true,\r\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n\tonChange(info: any) {\r\n\t\tconst { status } = info.file;\r\n\t\tif (status !== 'uploading') {\r\n\t\t\t// console.log(info.file, info.fileList);\r\n\t\t}\r\n\t\tif (status === 'done') {\r\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\r\n\t\t} else if (status === 'error') {\r\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\r\n\t\t}\r\n\t}\r\n};\r\n\r\ninterface Props {}\r\n\r\nconst AttributeList = ({  }: Props) => {\r\n\tconst tagState = useFetch([], [], 'brandList', {\r\n\t\turlOptions: {\r\n\t\t  params: {\r\n\t\t\tisSubCategory: true,\r\n\t\t  },\r\n\t\t},\r\n\t  });\r\n\r\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n\t  const handleSubmit = async (values : any, actions : any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t  urlOptions: {\r\n\t\t\t  placeHolders: {\r\n\t\t\t\tid: values.id,\r\n\t\t\t  }\r\n\t\t\t},\r\n\t\t  body: {\r\n\t\t\t  name: values.name,\r\n\t\t\t  description: values.description,\r\n\t\t  },\r\n\t\t});\r\n\t  \r\n\t\tactions.setSubmitting(false);\r\n\t  };\r\n\t  \r\n \r\n  \r\n  \r\n  \r\n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\t  if(!values.name || !values.description || !isValid){\r\n\t\t\t  return true; \r\n\t\t  }\r\n\t\t  return false; \r\n\t\t}\r\n\r\n\r\n\r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  \r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n\treturn (\r\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\r\n\t\t\t<div className='addproductSectionTitleContainer'>\r\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\r\n\t\t\t\t<div className='addproductSection addproductSection-left'>\r\n\t\t\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...initialValues}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n  <Input \r\n\t\t\t   label='Title'\r\n\t\t\t   value={values.name}\r\n\t\t\t   name='name'\r\n\t\t\t   isError={(touched.name && errors.name) ||\r\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('name');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n\r\n\t\t\t   <div style={{\r\n\t\t\t\t   marginTop: '0px'\r\n\t\t\t   }}></div>\r\n\t\t\t  \r\n\r\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\r\n\t\t\t\t\r\n\t\t\t\t<AddAttributeValues />\r\n\t\t\t\t\t  <Button \r\n\t\t\t\t\t  style={{\r\n\t\t\t\t\t\t  display: 'block',\r\n\t\t\t\t\t\t  marginTop: '20px'\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\r\n\t\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t >\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</Button>\r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\r\n\r\n\t\t\t\t</div>\r\n                <div className='addproductSection addproductSection-right'> \r\n\r\n\t\t\t\t<div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar-tag'>\r\n          {/* <h2 className='categoryListContainer__header-title'>\r\n            Brand\r\n            </h2> */}\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search categories..\"\r\n          onSearch={value => console.log(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            {/* <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button> */}\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\r\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AttributeList;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckOutlined,CheckCircleOutlined,DownOutlined  } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewOrder from \"./AddNewOrder\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n\r\n// import lib \r\nimport Moment from \"react-moment\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setOrderList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setOrderList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch({}, 'deleteOrder');\r\n    const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch({}, 'updateOrderStatus');\r\n\r\n    const history = useHistory();\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteOrderRes = await handleDeleteOrderFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteOrderRes && deleteOrderRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Order'); \r\n\t\t\t  const newOrderList =  data.filter(item => item.id !== id);\r\n\t\t\t  setOrderList(newOrderList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n\r\n      \r\n      const handleUpdateOrderStatus = async (record,id,newStatus) => {\r\n        const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\r\n          urlOptions: {\r\n            params: {\r\n              newOrderstatus: newStatus,\r\n            },\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(updateOrderStatusRes && updateOrderStatusRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Updated Order Status'); \r\n\t\t\t  \r\n        const positionInTag = () => {\r\n          return data.map(item => item.id).indexOf(id);\r\n          }\r\n\r\n      const index = positionInTag();\r\n      console.log('recordis',record,index );\r\n\r\n      // @ts-ignore\r\n      const updatedItem = Object.assign({}, data[index], { status: newStatus });\r\n      const updateOrderList = [...data.slice(0, index), updatedItem, ...data.slice(index + 1)];\r\n      console.log('updateOrderList',updateOrderList,'-----',setOrderList );\r\n      setOrderList(updateOrderList);\r\n\r\n\r\n      }\r\n\r\n      \r\n      else {\r\n        openErrorNotification(\"Couldn't changed order status, Something went wrong\")\r\n      }\r\n\r\n      }\r\n      \r\n\r\n      const StatusItemMenu = (record,id) => {\r\n        return (\r\n          (\r\n            <Menu>\r\n\r\n<Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'pending')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Pending\r\n              </Menu.Item>\r\n  \r\n\r\n  \r\n              <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'complete')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Completed\r\n    \r\n              </Menu.Item>\r\n    \r\n              {/* <Menu.Item\r\n                onClick={() => handleUpdateOrderStatus(record,id,'deliver')}\r\n                key=\"1\" icon={<CheckOutlined />}>\r\n                Delivered\r\n              </Menu.Item>\r\n     */}\r\n            \r\n            </Menu >\r\n          )\r\n        )\r\n      };\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n         <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          \r\n        <Column\r\n          title=\"Name\"\r\n          dataIndex=\"name\"\r\n          key=\"id\"\r\n          className='classnameofthecolumn'\r\n          render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  // setvisible(true)\r\n                  history.push(`/admin/order/${record.id}`)\r\n                  setactiveCategoryForEdit(record); \r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n\r\n        />\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n          <Column\r\n           title=\"Created\" \r\n           dataIndex=\"date_created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n               \r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n\r\n                }}>\r\n                  <Moment  withTitle>\r\n                    {text}\r\n                  </Moment>\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          <Column\r\n          width={150}\r\n           title=\"Status\" \r\n           dataIndex=\"status\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n        <Dropdown overlay={() => StatusItemMenu(record,record.id)} placement=\"bottomRight\">\r\n           <a href='##'>\r\n            <span\r\n                // className={'product-attributeTag'}\r\n              style={{\r\n                fontSize:'12px'\r\n              }}\r\n                >\r\n\r\n                {text}\r\n                <span style={{\r\n                  marginLeft:\"5px\",\r\n                  fontSize:'10px'\r\n                }}>\r\n                   <DownOutlined />\r\n                </span>\r\n               \r\n            </span> \r\n            </a>\r\n\t\t\t\t\t</Dropdown>\r\n\r\n\r\n     \r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n              </span>\r\n\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n\r\n{/*    \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm> */}\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {/* {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    orderList={data}\r\n    setOrderList={setOrderList}\r\n\r\n    />\r\n\r\n    }\r\n     */}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [orderList,setOrderList] = useState([]); \r\n\r\n    const [orderState, handleRegionListFetch] = useHandleFetch({}, 'orderList');\r\n  \r\n\r\n    console.log('orderState',orderState);\r\n  \r\n    useEffect(()=>{\r\n     const setOrders = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setOrderList(regions); \r\n     }\r\n     setOrders(); \r\n    },[])\r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('orderState',orderState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(orderState.data.length > 0 ){\r\n      const newOrderList = orderState.data.filter(item => item.name.includes(value)); \r\n      setOrderList(newOrderList); \r\n    }\r\n     \r\n  }; \r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Orders \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search orders..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => history.push('/order/new')}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {orderState.done && orderList.length > 0 && <MyTable \r\n        setOrderList={setOrderList}\r\n        data={orderList} />}\r\n        {orderState.isLoading && <DataTableSkeleton />}\r\n\r\n        {orderState.done && !(orderList.length > 0) && (\r\n        <Empty title='No Order found'  />\r\n        )}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n      {/* {orderState.done && \r\n          <AddNewOrder \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          orderList={orderState.data}\r\n          setOrderList={setOrderList}\r\n           />} */}\r\n\r\n  \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, {memo} from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n                  <h3 className='addOrderContainer-sectionTitle'>\r\n                <span>\r\n                    <ShopOutlined />\r\n                </span>\r\n                Added Products\r\n            </h3>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(AddNewOrderSummary)\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\ninterface Props {\r\n    setCustomerId?: any;\r\n    setSelectedCustomerData?: any;\r\n    customerListState?:any; \r\n}\r\n\r\nconst { Option } = Select;\r\n\r\nconst Brands = ({ setCustomerId, setSelectedCustomerData }: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedBrandId, setSelectedBrandId] = useState('');\r\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n    function onChange(option) {\r\n        if (options && options.length > 0) {\r\n            const customerData = options.find(item => item.value === option);\r\n            if (customerData) {\r\n                setSelectedCustomerData(customerData);\r\n            }\r\n        }\r\n        setSelectedBrandId(option);\r\n        setCustomerId(option);\r\n        // console.log(`selected ${value}`);\r\n    }\r\n\r\n    function onBlur() {\r\n        // console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        // console.log('focus');\r\n    }\r\n\r\n    function onSearch(val) {\r\n        // console.log('search:', val);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setBrands = async () => {\r\n            const brandListRes = await handleTagListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (brandListRes && brandListRes.length > 0) {\r\n                // @ts-ignore\r\n                const brandOptions = brandListRes.map((brand) => {\r\n                    return {\r\n                        ...brand,\r\n                        value: brand.id,\r\n                        name: `${brand.firstName} ${brand.lastName}`\r\n                    };\r\n                });\r\n                setoptions(brandOptions);\r\n            }\r\n        };\r\n\r\n        setBrands();\r\n    }, []);\r\n\r\n    return (\r\n        <Skeleton loading={brandState.isLoading}>\r\n            <Select\r\n                showSearch\r\n                size='middle'\r\n                style={{ width: '100%' }}\r\n                placeholder='Select a Customer'\r\n                optionFilterProp='children'\r\n                onChange={onChange}\r\n                onFocus={onFocus}\r\n                onBlur={onBlur}\r\n                onSearch={onSearch}\r\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n            >\r\n                {brandState.done &&\r\n                    brandState.data.length > 0 &&\r\n                    options.map((option) => {\r\n                        return <Option value={option.value}>{option.name}</Option>;\r\n                    })}\r\n            </Select>\r\n        </Skeleton>\r\n\r\n    );\r\n};\r\n\r\nexport default Brands;\r\n","import React, { useEffect, useState,memo } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n    productListState?:any; \r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds,\r\n    productListState\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (productListState.done && productListState.data  && productListState.data.length > 0) {\r\n            // @ts-ignore\r\n            const productOptions = productListState.data.map((product) => {\r\n                return product.name\r\n            });\r\n            setoptions(productOptions);\r\n        }\r\n\r\n    }, [productListState]);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (productListState.done && productListState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = productListState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Skeleton loading={productListState.isLoading}>\r\n                {productListState.done && productListState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Tags);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n\r\n// import third party ui lib\r\nimport { Upload,Radio , message, Switch, Select, Button, notification, Modal, Empty, Steps, Form, Checkbox } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCaretRightOutlined,\r\n\tCaretLeftOutlined,\r\n\tCaretRightFilled,\r\n\tUserOutlined,\r\n\tInfoCircleOutlined,\r\n\tCarOutlined,\r\n\tClockCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport AddNewOrderSummary from './AddNewOrderSummary';\r\nimport CustomersId from './CustomersId';\r\nimport AddProducts from './AddProducts';\r\nimport { product } from '../../state/ducks';\r\n\r\n\r\n\r\n//import utils\r\nimport {getDeliveryChargeTotal} from '.././../utils'\r\n\r\n\r\nconst { Option } = Select;\r\nconst { Step } = Steps;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Order Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tadditionalInfo: '',\r\n\tcountry: '',\r\n\tcity: '',\r\n\r\n};\r\n\r\n\r\nconst steps = [\r\n\t{\r\n\t\ttitle: 'Order Information',\r\n\t\tcontent: '',\r\n\t\t// description: 'Add Customer & Products'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Shipping Address',\r\n\r\n\t},\r\n\t{\r\n\t\ttitle: 'Confirm Order',\r\n\t\tcontent: '',\r\n\t},\r\n];\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AddNewOrder = ({ }: Props) => {\r\n\r\n\tconst [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\tconst [customerId, setCustomerId] = useState([]);\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\tconst [current, setCurrent] = useState(0);\r\n\tconst [selectedCustomerData, setSelectedCustomerData] = useState({});\r\n\tconst [productIds, setProductIds] = useState([]);\r\n\tconst [productList, setProductList] = useState([]);\r\n\t\r\n\tconst [productListState, handleProductListFetch] = useHandleFetch({}, 'productList');\r\n\tconst [customerListState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n\r\n\r\n\r\n\tconst [deliveryRegionState, handleDeliveryRegionFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'getDeliveryRegion'\r\n\t  );\r\n\r\n\r\n\t  const [deliveryRegionName, setDeliveryRegionName] = useState('');\r\n\t  const [selectedRegion, setSelectedRegion] = useState({});\r\n\t  const [regionDeliveryCharge,setregionDeliveryCharge] = useState([]);\r\n\r\n\t  const isDeliveryChargeExists = (regions) => {\r\n\t\tif (!regions) {\r\n\t\t  return false;\r\n\t\t} else return true;\r\n\t  };\r\n\r\n\r\n\t  useEffect(() => {\r\n\t\tconst getAndSetShippingDeliveryCharge = async () => {\r\n\t\t\tconst deliveryRegionState = await handleDeliveryRegionFetch({\r\n\t\t\t  urlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  cityName: selectedCityValue,\r\n\t\t\t\t},\r\n\t\t\t  },\r\n\t\t\t});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetregionDeliveryCharge(deliveryRegionState);\r\n\t\t  };\r\n\t\r\n\t\t  getAndSetShippingDeliveryCharge();\r\n\t  }, [selectedCityValue]);\r\n\r\n\r\n\t  const handleDeviliveryRegionChange = (value) => {\r\n\t\tsetDeliveryRegionName(value);\r\n\r\n\t\tif (\r\n\t\t  isDeliveryChargeExists(\r\n\t\t\tregionDeliveryCharge.length > 0 &&\r\n\t\t\tregionDeliveryCharge\r\n\t\t  )\r\n\t\t) {\r\n\t\t  const deliveryRegions = regionDeliveryCharge; \r\n\t\r\n\t\t  const selectedRegion = deliveryRegions.find(\r\n\t\t\t(region) => region['_id'] === value\r\n\t\t  );\r\n\t\t  if (selectedRegion) {\r\n\t\t\tsetSelectedRegion(selectedRegion);\r\n\t\t  }\r\n\t\t}\r\n\t  };\r\n\t\r\n\t  useEffect(() => {\r\n\t\tif (\r\n\t\t  isDeliveryChargeExists(\r\n\t\t  regionDeliveryCharge.length > 0 &&\r\n\t\t\tregionDeliveryCharge\r\n\t\t  )\r\n\t\t) {\r\n\t\t  const deliveryRegions = regionDeliveryCharge;\r\n\t\r\n\t\t  const selectedRegion = deliveryRegions.find(\r\n\t\t\t(region, index) => 0 === index\r\n\t\t  );\r\n\t\t  if (selectedRegion) {\r\n\t\t\tsetDeliveryRegionName(selectedRegion['name']);\r\n\t\t\tsetSelectedRegion(selectedRegion);\r\n\t\t  }\r\n\t\t}\r\n\t  }, [regionDeliveryCharge]);\r\n\r\n\r\n\tconst getTotalPrice = (total, charge) => {\r\n    if (charge) {\r\n      return parseInt(total) + parseInt(charge);\r\n    } else {\r\n      return Math.floor(total);\r\n    }\r\n  };\r\n\r\n\r\n\t  console.log('deliveryRegionState',deliveryRegionState)\r\n\t  console.log('selectedRegion',selectedRegion)\r\n\t  console.log('regionDeliveryCharge',regionDeliveryCharge)\r\n\r\n\tuseEffect(() => {\r\n        const setProducts = async () => {\r\n            const productListRes = await handleProductListFetch({});\r\n        };\r\n\r\n        setProducts();\r\n    }, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n        const setCustomers = async () => {\r\n            const customerListRes = await handleCustomerListFetch({});\r\n        };\r\n        setCustomers();\r\n    }, []);\r\n\r\n\r\n\r\n\tconst next = () => {\r\n\t\tconst newCurrent = current + 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst prev = () => {\r\n\t\tconst newCurrent = current - 1;\r\n\t\tsetCurrent(newCurrent);\r\n\t}\r\n\r\n\r\n\tconst handleCheckoutSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\t\tconsole.log('values', values);\r\n\t\tconsole.log('productListcool', productList);\r\n\r\n\t\tconst products = productList && productList.length > 0 ? productList.map(item => {\r\n\t\t\treturn {\r\n\t\t\t\tproduct: item._id,\r\n\t\t\t\tquantity: item.quantity,\r\n\t\t\t\tvariation: item.variation\r\n\t\t\t}\r\n\t\t}) : [];\r\n\r\n\t\tconst addOrderRes = await handleOrderFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tshippingAddress: {\r\n\t\t\t\t\tphone: values.phone,\r\n\t\t\t\t\temail: values.email,\r\n\t\t\t\t\taddress1: values.address1,\r\n\t\t\t\t\taddress2: values.address2,\r\n\t\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\t\tlastName: values.lastName,\r\n\t\t\t\t\tcity: selectedCityValue || selectedCustomerData['city'],\r\n\t\t\t\t\tcountry: selectedCountryValue || selectedCustomerData['country'],\r\n\t\t\t\t},\r\n\t\t\t\titems: products,\r\n\t\t\t\tdelivery: deliveryRegionName,\r\n\t\t\t\tcustomerId: customerId\r\n\t\t\t\t// charge\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addOrderRes && addOrderRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't create order, Something went wrong\")\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!addOrderState['isLoading']) {\r\n\t\t\tconst error = addOrderState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addOrderState['isLoading'] &&\r\n\t\t\tObject.keys(addOrderState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addOrderState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Order Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [addOrderState]);\r\n\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.id,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\r\n\t};\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds && productIds.length > 0 && productList) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\t// console.log('productList', productList)\r\n\tconsole.log('selectedCustomerData', selectedCustomerData); \r\n\r\n\tconst radioStyle = {\r\n\t\tdisplay: 'block',\r\n\t\theight: '30px',\r\n\t\tlineHeight: '30px',\r\n\t  };\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleCheckoutSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...selectedCustomerData }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className='addOrderContainer'>\r\n\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\tAdd New Order\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<div className='addOrderContainer__container'>\r\n\t\t\t\t\t\t\t\t<Steps current={current}>\r\n\t\t\t\t\t\t\t\t\t{steps.map(item => (\r\n\t\t\t\t\t\t\t\t\t\t<Step\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.title}\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={item.title} />\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</Steps>\r\n\r\n\t\t\t\t\t\t\t\t{current === 0 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer'>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-left'>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 \r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{}}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='addOrderContainer-sectionTitle'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n                                            Customers And products\r\n                                           </h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t   <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tCustomer\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<CustomersId\r\n\t\t\t\t\t\t\t\t\t\t    \tcustomerListState={customerListState}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedCustomerData={setSelectedCustomerData}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetCustomerId={setCustomerId} />\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\tProducts\r\n\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddProducts\r\n\t\t\t\t\t\t\t\t\t\t    \tproductListState={productListState}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductIds={productIds}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductIds={setProductIds} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-OrderInfoContainer-right'>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 1 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.country}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.city}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address 2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 10 && (\r\n\t\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-address'>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={'Comoros'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelp={addOrderState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={values.city}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addOrderState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t{current === 2 && (\r\n\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t\t\t\t\tflexDirection: \"column\"\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<AddNewOrderSummary\r\n\t\t\t\t\t\t\t\t\t\t\tsetProductList={setProductList}\r\n\t\t\t\t\t\t\t\t\t\t\tproductList={productList} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<h3 \r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop:'20px',\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay:'block'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='addOrderContainer-sectionTitle'>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CarOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\tDelivery Region List ({selectedCityValue})\r\n\t\t\t\t\t\t\t\t\t    </h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\t\t\t\tvalue={deliveryRegionName}\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={deliveryRegionName}\r\n\t\t\t\t\t\t\t\t\t\t name=\"radiogroup\" >\r\n\t\t\t\t\t\t\t\t\t\t\t {regionDeliveryCharge.map(deliveryRegionItem => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t return (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleDeviliveryRegionChange(deliveryRegionItem._id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='deliveryRegionLabelContainer'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='deliveryRegionLabelContainer__radio'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Radio \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={deliveryRegionItem._id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Radio>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='deliveryRegionLabelContainer__info'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{deliveryRegionItem.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CarOutlined />\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{deliveryRegionItem.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ClockCircleOutlined />\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{deliveryRegionItem.time}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t )\r\n\t\t\t\t\t\t\t\t\t\t\t })}\r\n  \t\t\t\t\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t\t\t\t\t\t</div>\t\t\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '40px',\r\n\t\t\t\t\t\t\t\t\t\t\tmarginBottom: '50px'\r\n\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <h3\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#666'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tTotal\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<h3\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#333'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t500\r\n\t\t\t\t\t\t\t\t\t\t\t\t</h3> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tloading={addOrderState.isLoading}\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline-blue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{current > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: '15px', marginTop: '10px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => prev()}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretLeftOutlined />\tPrevious\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{current < steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (current === 1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrent(2)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnext()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tNext< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {current === 1 && <Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => setCurrent(2)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tUse different address< CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t} */}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{/* {current === steps.length - 1 && (\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tPlace Order\r\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t{/* <div className='addOrderContainer__container-left'>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\r\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewOrder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Empty, Spin } from 'antd';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst QuickEdit = ({ id, setShowInvoice, showInvoice }) => {\r\n    const [orderDetailState, handleOrderDetailFetch] = useHandleFetch({}, 'orderDetail');\r\n\r\n    useEffect(() => {\r\n        const getOrderDetail = async () => {\r\n            await handleOrderDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getOrderDetail();\r\n\r\n    }, [id]);\r\n\r\n\r\n    console.log('orderDetailState', orderDetailState)\r\n\r\n    const handleOk = () => {\r\n        window.print()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            title=\"Invoice\"\r\n            visible={showInvoice}\r\n            bodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n            onCancel={() => setShowInvoice(false)}\r\n            width={'60vw'}\r\n            okText='Print'\r\n            onOk={() => handleOk()}\r\n        >\r\n            {orderDetailState.isLoading && <Spin />}\r\n            {orderDetailState.data && Object.keys(orderDetailState.data).length > 0 && (\r\n                <>\r\n                    <div className='invoiceContainer'>\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td height={20} />\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                            style={{ borderRadius: \"10px 10px 0 0\" }}\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={40} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={30} />\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                {/* <tr>\r\n                                                                                    <td align=\"left\">\r\n                                                                                        {\" \"}\r\n                                                                                        // <img\r\n                                                                                        //     src=\"http://www.supah.it/dribbble/017/logo.png\"\r\n                                                                                        //     width={32}\r\n                                                                                        //     height={32}\r\n                                                                                        //     alt=\"logo\"\r\n                                                                                        //     border={0}\r\n                                                                                        // />\r\n                                                                                    </td>\r\n                                                                                </tr> */}\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={40} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"left\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Hello, {orderDetailState.data['name']}\r\n                                                                                        <br /> Thank you for your order.\r\n                                </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td height={5} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 21,\r\n                                                                                            color: \"#ff0000\",\r\n                                                                                            letterSpacing: \"-1px\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"right\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Invoice\r\n                                </td>\r\n                                                                                </tr>\r\n                                                                                <tr></tr>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={50} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            textAlign: \"right\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <small>ORDER</small> #{orderDetailState.data['id']}\r\n                                                                                        <br />\r\n                                                                                        <small>\r\n                                                                                            {orderDetailState.data['date_created']}\r\n\r\n                                                                                        </small>\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Header */}\r\n                        {/* Order Details */}\r\n                        {orderDetailState.data && orderDetailState.data['products'] && orderDetailState.data['products'].length > 0 && (\r\n                            <table\r\n                                width=\"100%\"\r\n                                border={0}\r\n                                cellPadding={0}\r\n                                cellSpacing={0}\r\n                                align=\"center\"\r\n                                className=\"fullTable\"\r\n                                bgcolor=\"#e1e1e1\"\r\n                            >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <table\r\n                                                width={600}\r\n                                                border={0}\r\n                                                cellPadding={0}\r\n                                                cellSpacing={0}\r\n                                                align=\"center\"\r\n                                                className=\"fullTable\"\r\n                                                bgcolor=\"#ffffff\"\r\n                                            >\r\n                                                <tbody>\r\n                                                    <tr></tr>\r\n                                                    <tr className=\"hiddenMobile\">\r\n                                                        <td height={60} />\r\n                                                    </tr>\r\n                                                    <tr className=\"visibleMobile\">\r\n                                                        <td height={40} />\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>\r\n                                                            <table\r\n                                                                width={480}\r\n                                                                border={0}\r\n                                                                cellPadding={0}\r\n                                                                cellSpacing={0}\r\n                                                                align=\"center\"\r\n                                                                className=\"fullPadding\"\r\n                                                            >\r\n                                                                <tbody>\r\n                                                                    <tr>\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#5b5b5b\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 10px 7px 0\"\r\n                                                                            }}\r\n                                                                            width=\"52%\"\r\n                                                                            align=\"left\"\r\n                                                                        >\r\n                                                                            Name\r\n                        </th>\r\n\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#5b5b5b\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 0 7px\"\r\n                                                                            }}\r\n                                                                            align=\"center\"\r\n                                                                        >\r\n                                                                            Quantity\r\n                        </th>\r\n                                                                        <th\r\n                                                                            style={{\r\n                                                                                fontSize: 12,\r\n                                                                                fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                color: \"#1e2b33\",\r\n                                                                                fontWeight: \"normal\",\r\n                                                                                lineHeight: 1.6,\r\n                                                                                verticalAlign: \"top\",\r\n                                                                                padding: \"0 0 7px\"\r\n                                                                            }}\r\n                                                                            align=\"right\"\r\n                                                                        >\r\n                                                                            Subtotal\r\n                        </th>\r\n                                                                    </tr>\r\n\r\n\r\n                                                                    {orderDetailState.data['products'].map(item => {\r\n                                                                        return (\r\n                                                                            <>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        height={1}\r\n                                                                                        style={{ background: \"#bebebe\" }}\r\n                                                                                        colSpan={4}\r\n                                                                                    />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td height={10} colSpan={4} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#ff0000\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        className=\"article\"\r\n                                                                                    >\r\n                                                                                        {item.name}\r\n                                                                                    </td>\r\n\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#646a6e\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        align=\"center\"\r\n                                                                                    >\r\n                                                                                        {item.quantity}\r\n                                                                                    </td>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#1e2b33\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\",\r\n                                                                                            padding: \"10px 0\"\r\n                                                                                        }}\r\n                                                                                        align=\"right\"\r\n                                                                                    >\r\n                                                                                        {item.quantity * item.price}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </>\r\n                                                                        )\r\n                                                                    })}\r\n\r\n\r\n                                                                    <tr>\r\n                                                                        <td\r\n                                                                            height={1}\r\n                                                                            colSpan={4}\r\n                                                                            style={{ borderBottom: \"1px solid #e4e4e4\" }}\r\n                                                                        />\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td height={20} />\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n                        {/* /Order Details */}\r\n                        {/* Total */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        {/* Table Total */}\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Total\r\n                        </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\",\r\n                                                                            whiteSpace: \"nowrap\"\r\n                                                                        }}\r\n                                                                        width={80}\r\n                                                                    >\r\n                                                                        {orderDetailState.data['total']}\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Shipping &amp; Handling\r\n                        </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#646a6e\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        $15.00\r\n                        </td>\r\n                                                                </tr> */}\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#000\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>Grand Total (Incl.Tax)</strong>\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#000\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <strong>$344.90</strong>\r\n                                                                    </td>\r\n                                                                </tr> */}\r\n                                                                {/* <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#b0b0b0\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <small>TAX</small>\r\n                                                                    </td>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            color: \"#b0b0b0\",\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"right\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        <small>$72.40</small>\r\n                                                                    </td>\r\n                                                                </tr> */}\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                        {/* /Table Total */}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Total */}\r\n                        {/* Information */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr></tr>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={60} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={40} />\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>BILLING INFORMATION</strong>\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {orderDetailState.data['name']}\r\n                                                                                        <br /> {orderDetailState.data['country']}\r\n                                                                                        <br /> {orderDetailState.data['city']}\r\n                                                                                        <br />{orderDetailState.data['address']}\r\n                                                                                        <br /> {orderDetailState.data['phone']}\r\n                                                                                        <br /> {orderDetailState.data['email']}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>Status</strong>\r\n\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {orderDetailState.data['paymentStatus']}\r\n\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"left\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={35} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    {/* <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        <strong>SHIPPING INFORMATION</strong>\r\n                                                                                    </td> */}\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    {/* <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        Sup Inc\r\n                                  <br /> Another Place, Somewhere\r\n                                  <br /> New York NY\r\n                                  <br /> 4468, United States\r\n                                  <br /> T: 202-555-0171\r\n                                </td> */}\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                        <table\r\n                                                                            width={220}\r\n                                                                            border={0}\r\n                                                                            cellPadding={0}\r\n                                                                            cellSpacing={0}\r\n                                                                            align=\"right\"\r\n                                                                            className=\"col\"\r\n                                                                        >\r\n                                                                            <tbody>\r\n                                                                                <tr className=\"hiddenMobile\">\r\n                                                                                    <td height={35} />\r\n                                                                                </tr>\r\n                                                                                <tr className=\"visibleMobile\">\r\n                                                                                    <td height={20} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 11,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* <strong>SHIPPING METHOD</strong> */}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td width=\"100%\" height={10} />\r\n                                                                                </tr>\r\n                                                                                <tr>\r\n                                                                                    <td\r\n                                                                                        style={{\r\n                                                                                            fontSize: 12,\r\n                                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                                            color: \"#5b5b5b\",\r\n                                                                                            lineHeight: 1.6,\r\n                                                                                            verticalAlign: \"top\"\r\n                                                                                        }}\r\n                                                                                    >\r\n                                                                                        {/* UPS: U.S. Shipping Services */}\r\n                                                                                    </td>\r\n                                                                                </tr>\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"hiddenMobile\">\r\n                                                    <td height={60} />\r\n                                                </tr>\r\n                                                <tr className=\"visibleMobile\">\r\n                                                    <td height={30} />\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {/* /Information */}\r\n                        <table\r\n                            width=\"100%\"\r\n                            border={0}\r\n                            cellPadding={0}\r\n                            cellSpacing={0}\r\n                            align=\"center\"\r\n                            className=\"fullTable\"\r\n                            bgcolor=\"#e1e1e1\"\r\n                        >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <table\r\n                                            width={600}\r\n                                            border={0}\r\n                                            cellPadding={0}\r\n                                            cellSpacing={0}\r\n                                            align=\"center\"\r\n                                            className=\"fullTable\"\r\n                                            bgcolor=\"#ffffff\"\r\n                                            style={{ borderRadius: \"0 0 10px 10px\" }}\r\n                                        >\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <table\r\n                                                            width={480}\r\n                                                            border={0}\r\n                                                            cellPadding={0}\r\n                                                            cellSpacing={0}\r\n                                                            align=\"center\"\r\n                                                            className=\"fullPadding\"\r\n                                                        >\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td\r\n                                                                        style={{\r\n                                                                            fontSize: 12,\r\n                                                                            color: \"#5b5b5b\",\r\n                                                                            fontFamily: '\"Open Sans\", sans-serif',\r\n                                                                            lineHeight: 1.6,\r\n                                                                            verticalAlign: \"top\",\r\n                                                                            textAlign: \"left\"\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Have a nice day.\r\n                        </td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr className=\"spacer\">\r\n                                                    <td height={50} />\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td height={20} />\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>;\r\n                </>\r\n            )}\r\n        </Modal>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n\r\n\r\n// import lib \r\nimport { Skeleton } from 'antd'\r\n\r\n\r\n\r\ninterface Props {\r\n    productId?: any;\r\n    quantity?: any;\r\n    item?: any\r\n    variation?: any;\r\n}\r\n\r\nconst CartOverLayCartItem = ({\r\n    productId,\r\n    quantity,\r\n    item,\r\n    variation\r\n}: Props) => {\r\n\r\n\r\n    const [productDetailState, handleProductFetch] = useHandleFetch(\r\n        {},\r\n        'productDetailById'\r\n    );\r\n    const [product, setProduct] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [modifiedPrice, setModifiedPrice] = useState('');\r\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const getAndSetProduct = async () => {\r\n            const product = await handleProductFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            setProduct(product);\r\n            setIsLoading(false);\r\n        };\r\n        getAndSetProduct()\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('modifiedPrice', modifiedPrice);\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={productDetailState.isLoading}>\r\n                {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                    <div className='cart-item' key={''}>\r\n\r\n\r\n                        <img\r\n\r\n                            src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']}\r\n                            alt='Img'\r\n                            style={{\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        />\r\n                        <div className='cart-item-info'>\r\n                            <h4\r\n\r\n                            >\r\n                                {productDetailState.data['name']}\r\n                            </h4>\r\n                            <h5\r\n                            >\r\n                                Quantity : {quantity}\r\n                            </h5>\r\n                            <h5\r\n                            >\r\n                                {item['unitPrice']}\r\n                            </h5>\r\n\r\n\r\n                            {/* {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\r\n                            <>\r\n                                <span\r\n                                    onClick={() => handleAttributeChange(tag.value)}\r\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\r\n                                    {tag.label}\r\n                                </span>\r\n                            </>\r\n                        ))} */}\r\n\r\n                            {/* <span\r\n             style={{\r\n               display: 'inline-block',\r\n               background: '#fafafa',\r\n               padding: '3px 3px',\r\n               borderRadius: 1,\r\n               fontSize: '12px',\r\n               marginRight: '5px',\r\n               color: '#777',\r\n               marginTop: '5px'\r\n             }}\r\n           >\r\n             15KG\r\n             </span> */}\r\n\r\n                        </div>\r\n                        {/* <span\r\n                        onClick={handleAttributeDelete}\r\n                        className='remove-item' >\r\n                        <i className='fa fa-times'></i>\r\n                    </span> */}\r\n\r\n                    </div>\r\n                )}\r\n            </Skeleton>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n// @ts-ignore\r\nexport default CartOverLayCartItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport OrderInvoice from \"./OrderInvoice.jsx\";\r\nimport ProductItemForOrderDetail from \"./productItemForOrderDetail\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    // name: Yup.string()\r\n    //     .label('Name')\r\n    //     .required()\r\n    //     .min(2, 'Name must have at least 2 characters '),\r\n    // pickUpLocation: Yup.string()\r\n    //     .label('Pick up Location')\r\n    //     .required()\r\n    //     .min(2, 'Pick up Location must have at least 2 characters '),\r\n    // time: Yup.string()\r\n    //     .label('Time')\r\n    //     .required()\r\n    //     .min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setTagEditVisible: any;\r\n    tagEditVisible: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible }: Props) => {\r\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\r\n\r\n    console.log('customerVie', customer);\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n    const [showInvoice, setShowInvoice] = useState(false);\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // console.log('selectedCityValue', selectedCityValue); \r\n        console.log('cooles', customer)\r\n\r\n        const addRegionRes = await handleUpdateOrderFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: customer.id,\r\n                }\r\n            },\r\n            body: {\r\n                billingAddress: {\r\n                    phone: values.phone,\r\n                    email: values.email,\r\n                    address1: values.address1,\r\n                    address2: values.address2,\r\n                    firstName: values.firstName,\r\n                    lastName: values.lastName,\r\n                    city: selectedCityValue || customer['billingAddress']['city'],\r\n                    country: selectedCountryValue || customer['billingAddress']['country'],\r\n                },\r\n                products: customer.products,\r\n                customerId: customer.customerId\r\n                // charge\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addRegionRes && addRegionRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return orderList.map(item => item.id).indexOf(customer.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\r\n            // const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\r\n            // setOrderList(updateRegionList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n\r\n    };\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.LastName) {\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer.billingAddress ? customer.billingAddress : {} }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Order Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                            width={'70vw'}\r\n                        >\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                                    <Form.Item\r\n                                        validateStatus={(updateOrderState.error['error']['country']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['country']}\r\n                                    // noStyle={true}\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.country}\r\n                                            notFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a Country'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCountry}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {countryListState.done &&\r\n                                                countryListState.data.length > 0 &&\r\n                                                countryOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n\r\n                                    </Form.Item>\r\n\r\n\r\n\r\n\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n                                    </h3>\r\n                                    <Form.Item\r\n                                        // noStyle={true}\r\n                                        validateStatus={(updateOrderState.error['error']['city']) ? \"error\" : \"\"}\r\n                                        help={updateOrderState.error['error']['city']}\r\n\r\n                                    >\r\n                                        <Select\r\n                                            defaultValue={values.city}\r\n                                            className='selectClassName'\r\n                                            notFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n                                            showSearch\r\n                                            style={{ width: '100%' }}\r\n                                            placeholder='Select a city'\r\n                                            optionFilterProp='children'\r\n                                            onChange={onChangeCity}\r\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                        >\r\n                                            {cityListState.done &&\r\n                                                cityListState.data.length > 0 &&\r\n                                                cityOptions.map((option) => {\r\n                                                    return <Option value={option.value}>{option.name}</Option>;\r\n                                                })}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address 2'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                                    {customer.products && customer.products.length > 0 && (\r\n                                        <h3 className='inputFieldLabel'>\r\n                                        Products \r\n                                    </h3>\r\n                                    )}\r\n\r\n\r\n                            {customer.products && customer.products.length > 0 && <> \r\n                            \r\n                                {customer.products.map(item => {\r\n                    return <ProductItemForOrderDetail\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                            </>}\r\n\r\n\r\n                            <div style={{\r\n                                marginTop: '20px'\r\n                            }}></div>\r\n                    <Button\r\n                    onClick={() => setShowInvoice(true)}\r\n                    className='btnPrimaryClassNameoutline'\r\n                    >\r\n                        Generate Invoice\r\n                        \r\n                        </Button>\r\n\r\n            <div style={{\r\n                                marginBottom: '20px'\r\n                            }}></div>\r\n\r\n            <OrderInvoice\r\n            id={customer.id}\r\n            setShowInvoice={setShowInvoice}\r\n             showInvoice={showInvoice} \r\n            />\r\n\r\n                            \r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n\r\n\r\n\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport OrderEdit from \"./OrderEdit\";\r\nimport { OrderDetail } from '.';\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'orderDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n        getBrandDetail()  ;\r\n    }, [tagId]);\r\n\r\n\r\n    console.log('orderDetailState', tagDetailState)\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('orderDetailState', tagDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Order Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <OrderEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            customer={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Order found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n\r\n                            {tagDetailState['data']['country'] && (\r\n                                <h3>\r\n                                    COUNTRY:\r\n                                    <span>\r\n                                        {tagDetailState['data']['country']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailState['data']['city'] && (\r\n                                <h3>\r\n                                    CITY:\r\n                                    <span>\r\n                                        {tagDetailState['data']['city']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                        \r\n\r\n\r\n                            {tagDetailState['data']['address1'] && (\r\n                                <h3>\r\n                                    ADDRESS:\r\n                                    <span>\r\n                                        {tagDetailState['data']['address1']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n                         \r\n\r\n                            {tagDetailState['data']['phone'] && (\r\n                                <h3>\r\n                                    PHONE:\r\n                                    <span>\r\n                                        {tagDetailState['data']['phone']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                             {tagDetailState['data']['email'] && (\r\n                                <h3>\r\n                                    EMAIL:\r\n                                    <span>\r\n                                        {tagDetailState['data']['email']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailState['data']['paymentMethod'] && (\r\n                                <h3>\r\n                                    PAYMENT METHOD:\r\n                                    <span>\r\n                                        {tagDetailState['data']['paymentMethod']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailState['data']['paymentStatus'] && (\r\n                                <h3>\r\n                                    PAYMENT STATUS:\r\n                                    <span>\r\n                                        {tagDetailState['data']['paymentStatus']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                            \r\n                        {tagDetailState['data']['status'] && (\r\n                                <h3>\r\n                                    ORDER STATUS:\r\n                                    <span>\r\n                                        {tagDetailState['data']['status']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n                            {tagDetailState['data']['deliveryCharge'] && (\r\n                                <h3>\r\n                                    DELIVERY CHARGE:\r\n                                    <span>\r\n                                        {tagDetailState['data']['deliveryCharge']}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n\r\n\r\n                        {tagDetailState['data']['deliveryName'] && (\r\n                                <h3>\r\n                                    DELIVERY LOCATION:\r\n                                    <span>\r\n                                        {`${tagDetailState['data']['deliveryName']}, ${tagDetailState['data']['deliveryPickUpLocation']}, ${tagDetailState['data']['deliveryCountryName']}`}\r\n                                    </span>\r\n                                </h3>\r\n                            )}\r\n\r\n                      \r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                    <h3>\r\n                        Products\r\n                    </h3>\r\n                </div>\r\n\r\n          \r\n           \r\n            <div className='brandDetailContainer__body'>\r\n\r\n\r\n                {tagDetailState.done \r\n                    && tagDetailState.data \r\n                    && (Object.keys(tagDetailState.data).length > 0) \r\n                    && tagDetailState.data['products'] && !(tagDetailState.data['products'].length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this order' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n\r\n                {tagDetailState.done \r\n                    && tagDetailState.data \r\n                    && (Object.keys(tagDetailState.data).length > 0) \r\n                    && tagDetailState.data['products'] \r\n                    && tagDetailState.data['products'].length > 0 && (\r\n                <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagDetailState.data['products']}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n                            \r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                        </Table>\r\n\r\n                </>\r\n            )}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\nconst date = new Date();\r\nconst thisMonth = MONTHS[date.getMonth()]\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n    `${order}${thisMonth}`;\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'dayOfMonth',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    This Month\r\n                </h2>\r\n                <h3>\r\n                      Order report by days of month \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'dayOfMonth'} \r\n                         tickFormatter={getMonthNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'dayOfWeek',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    This Week\r\n                </h2>\r\n                <h3>\r\n                      Order report by days of week \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n{orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'dayOfWeek'} \r\n                         tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'date',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                   BY DATE\r\n                </h2>\r\n                <h3>\r\n                      Order report by date\r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'date'} \r\n                        //  tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for date`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\nexport const getHourFormatter = (order: number): string | undefined =>\r\n    `${order}hr`;\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'hour',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    BY HOUR\r\n                </h2>\r\n                <h3>\r\n                      Order report by hours \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'hour'} \r\n                         tickFormatter={getHourFormatter}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for hours`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n                     </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\nconst MONTHS = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n];\r\n\r\n\r\nexport const getMonthNameByOrder = (order: number): string | undefined =>\r\n `${MONTHS[order - 1]}`;\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'month',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsStateMonth',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                   BY MONTH\r\n                </h2>\r\n                <h3>\r\n                   Order report by month\r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'month'} \r\n                         tickFormatter={getMonthNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this months`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                            In the last month\r\n         </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import React,{useState, useEffect} from 'react'\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\n\r\n// \r\n\r\n\r\n// import lib\r\nimport {\r\n    ResponsiveContainer,\r\n    AreaChart,\r\n    CartesianGrid,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n    Area,\r\n    Line\r\n} from \"recharts\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined,\r\n    CalendarOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst localOptions = [\r\n    {\r\n        value: 'category',\r\n        name: 'Category'\r\n    },\r\n     {\r\n        value: 'product',\r\n        name: 'Product'\r\n    }\r\n\r\n]\r\n\r\n\r\n\r\nconst WEEEK = [\r\n    \"Sat\",\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tues\",\r\n    \"Wed\",\r\n    \"Thur\",\r\n    \"Fri\"\r\n];\r\n\r\n\r\nexport const getWeekNameByOrder = (order: number): string | undefined =>\r\n    WEEEK[order - 1];\r\n\r\n\r\n\r\n\r\n\r\nexport const TooltipContainerStyles = {\r\n    border: 0,\r\n    borderRadius: \"8px\",\r\n    fontSize: 14,\r\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst PageVisits = (props: Props) => {\r\n    const history = useHistory(); \r\n  \r\n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\r\n    const [orderData, setorderData] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const getAnalyticsOrders = async () => {\r\n\r\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        metricType: 'year',\r\n                    }\r\n                }\r\n            }); \r\n\r\n           // @ts-ignore\r\n           if(ordersDataRes){\r\n            // @ts-ignore\r\n            setorderData(ordersDataRes);\r\n           }\r\n\r\n           };\r\n           getAnalyticsOrders(); \r\n\r\n    },[]); \r\n\r\n\r\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className='overviewContainer__body-apiVisits'>\r\n        <div className='overviewContainer__body-apiVisits-header'>\r\n            <div className='overviewContainer__body-apiVisits-header-info'>\r\n                <h2>\r\n                    By Year\r\n                </h2>\r\n                <h3>\r\n                      Order report by year \r\n                </h3>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='overviewContainer__body-body'>    \r\n        {orderAnalyticsVisitsState.isLoading && (\r\n            <>\r\n            <div style={{\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:\"center\",\r\n                margin:\"100px 0\"\r\n            }}>\r\n            <Spin\r\n            size='large'\r\n             />\r\n                </div>\r\n\r\n            </>\r\n        )}\r\n\r\n        \r\n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={orderData} fontSize={12}>\r\n                        <defs>\r\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\r\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid\r\n                            vertical={false}\r\n                            strokeDasharray=\"3 3\"\r\n                            stroke=\"#d6d9da\"\r\n                        />\r\n                        <XAxis \r\n                         dataKey={'year'} \r\n                        //  tickFormatter={getWeekNameByOrder}\r\n                         />\r\n                        <YAxis\r\n                            // unit=\"ml\"\r\n                            orientation=\"left\"\r\n                            width={20}\r\n                            axisLine={false}\r\n                            tickLine={false}\r\n                        />\r\n                        <Tooltip\r\n                            cursor={false}\r\n                            contentStyle={TooltipContainerStyles}\r\n                            formatter={(value, name) => [`${value}`, `${name}`]}\r\n                        />\r\n                        <Area\r\n                            dataKey=\"count\"\r\n                            name=\"Count\"\r\n                            type=\"basis\"\r\n                            fill=\"url(#rainGradient)\"\r\n                        />\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n               )}\r\n\r\n\r\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '00px'\r\n                    }}>\r\n                        <Empty description={`No Visits for this year`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n            \r\n\r\n        </div>\r\n        <div className=\"overviewContainer__body-footer\">\r\n            <h3>\r\n                <span>\r\n                    <CalendarOutlined />\r\n                </span>\r\n\r\n                    In the last year\r\n            </h3>\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PageVisits\r\n","import OrderOverviewReport from \"./OrderOverviewReport\";\r\nexport default OrderOverviewReport;","import React, { useEffect, useState } from 'react';\r\n\r\n// import components \r\nimport ThisMonthOrderReport from \"./ThisMonthOrderReport\";\r\nimport ThisWeekOrderReport from \"./ThisWeekOrderReport\";\r\nimport DateOrderReport from \"./DateOrderReport\";\r\nimport HourOrderReport from \"./HourOrderReport\";\r\nimport MonthOrderReport from \"./MonthOrderReport\";\r\nimport YearOrderReport from \"./YearOrderReport\";\r\n\r\n// import lib \r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tUserOutlined,\r\n\tCalendarOutlined,\r\n\tGoldOutlined,\r\n\tShoppingCartOutlined,\r\n\tTagOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n\r\ninterface Props { }\r\n\r\nconst Overview = (props: Props) => {\r\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\r\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst getTotalUserCount = async () => {\r\n\t\t\tawait handleGetTotalUserCountFetch({});\r\n\t\t}\r\n\r\n\t\tgetTotalUserCount();\r\n\t}, []);\r\n\r\n\r\n\t\r\n\tuseEffect(()=>{\r\n\t\tconst getProductVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\r\n\t\t\t\tparams: 'product'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetProductVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst getCategoryVisitCount = async () => {\r\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\r\n\t\t\t\tparams: 'category'\r\n\t\t\t})\r\n\t\t}; \r\n\t\tgetCategoryVisitCount();\r\n\t},[])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='overviewContainer'>\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<ThisWeekOrderReport />\r\n\t\t\t\t<ThisMonthOrderReport />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<DateOrderReport />\r\n\t\t\t\t<HourOrderReport />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"overviewContainer__body\">\r\n\t\t\t\t<MonthOrderReport />\r\n\t\t\t\t<YearOrderReport />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Overview;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Tooltip } from 'antd';\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: componentItem.title,\r\n        target: componentItem.target,\r\n        text: componentItem.text,\r\n        image: componentItem.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n    useEffect(() => {\r\n        const positionInAttribute = () => {\r\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\r\n        }\r\n\r\n        const index = positionInAttribute();\r\n\r\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\r\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\r\n        setItemsList(updateComponentList);\r\n\r\n    }, [localComponentItem])\r\n\r\n\r\n    const handleAttributeDelete = () => {\r\n\r\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\r\n        setItemsList(updateComponentList);\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, componentList, setComponentList }: Props) => {\r\n\r\n    const [addComponentState, handleAddComponentFetch] = useHandleFetch({}, 'addComponent');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [itemsList, setItemsList] = useState([])\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addComponentRes = await handleAddComponentFetch({\r\n            body: {\r\n                groupName: values.groupName,\r\n                items: itemsList\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addComponentRes && addComponentRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setComponentList([...componentList, {\r\n                id: addComponentRes['id'] || '',\r\n                key: addComponentRes['id'] || '',\r\n                groupName: addComponentRes['groupName'] || '',\r\n                // @ts-ignore\r\n                ...addComponentRes\r\n            }])\r\n            actions.resetForm();\r\n            setItemsList([])\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!addComponentState['isLoading']) {\r\n            const error = addComponentState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addComponentState])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddComponentItem = () => {\r\n        setItemsList([...itemsList, {\r\n            title: '',\r\n            target: '',\r\n            text: '',\r\n            image: [],\r\n            id: `${itemsList.length}`\r\n        }])\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Component\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            width={'50vw'}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Group Component Name'\r\n                                value={values.groupName}\r\n                                name='groupName'\r\n                                isError={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n\r\n                                errorString={(touched.groupName && errors.groupName) ||\r\n                                    (!isSubmitting && addComponentState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('groupName');\r\n                                }}\r\n                            />\r\n                            <div style={{\r\n                                marginTop: '15px',\r\n                            }}></div>\r\n                            <h3 className='inputFieldLabel'>Children</h3>\r\n\r\n                            <div className='componentItemsContainer'>\r\n                                {itemsList.map(itemComponent => {\r\n                                    return <ComponentItem\r\n                                        componentItem={itemComponent}\r\n                                        itemsList={itemsList} setItemsList={setItemsList} />\r\n                                })}\r\n\r\n                                <Button size='small'\r\n                                    onClick={handleAddComponentItem}\r\n                                    style={{\r\n                                        width: '290px',\r\n                                        minHeight: '145px',\r\n                                        marginTop: '0px',\r\n                                        borderRadius: '8px'\r\n                                    }} type=\"dashed\" icon={<PlusOutlined />}>Add Childrens</Button>\r\n                            </div>\r\n\r\n                            <div\r\n                                style={{\r\n                                    marginTop: '20px'\r\n                                }}\r\n                            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AutoComplete, Button, Tooltip } from 'antd';\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\nimport InputSmall from '../../components/Field/InputSmall';\r\nimport MediaLibrary from '../../components/MediaLibrary';\r\n\r\nimport { useFetch } from \"../../hooks\";\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined, \r\n    SaveOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate }) => {\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: item.title,\r\n        target: item.target,\r\n        text: item.text,\r\n        image: item.image,\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                // @ts-ignore\r\n                image: [...new Set([...localComponentItem.image, ...myImages])]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = localComponentItem.image && localComponentItem.image.length > 0 && localComponentItem.image.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            image: [...newImages]\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleComponentItemUpdate = () => {\r\n        componentUpdate(item,component,localComponentItem); \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    boxShadow: \"none\"\r\n                }}\r\n                className='componentItemsContainer__item'>\r\n                <InputSmall\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <InputSmall\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <InputSmall\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div style={{\r\n                    marginBottom: \"-1px\"\r\n                }}></div>\r\n\r\n\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {localComponentItem.image &&\r\n                        // @ts-ignore\r\n                        localComponentItem.image.length > 0 && localComponentItem.image.map((image, index) => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\r\n                                    <div\r\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                    >\r\n                                        <img src={image.cover} alt={image.alt} />\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-remove'>\r\n                                        <CloseOutlined />\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n\r\n                    <Tooltip\r\n                        title={'Attach images'}>\r\n\r\n                        <div\r\n                            onClick={() => {\r\n                                setvisibleMedia(true);\r\n                            }}\r\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\r\n                            {/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n                            <FileImageFilled />\r\n                            {/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                <PlusOutlined />\r\n                            </span>\r\n                        </div>\r\n                    </Tooltip>\r\n\r\n                </div>\r\n                <Button\r\n                style={{\r\n                    marginTop: '15px'\r\n                }}\r\n                    icon={<SaveOutlined />}\r\n          className='btnPrimaryClassNameoutline'\r\n          onClick={() => handleComponentItemUpdate()}\r\n        >\r\n        Save\r\n            \r\n            </Button>\r\n            </div>\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                myImages={myImages}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={true}\r\n\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Complete;\r\n","import React, { useState, useEffect } from 'react';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport ComponentItem from \"./ComponentItem\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    groupName: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    groupName: '',\r\n    items: [],\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    componentList?: any;\r\n    setComponentList?: any;\r\n    updateComponentByAddingItem?: any;\r\n    componentId?: any\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible,\r\n    setAddNewCategoryVisible, componentList,\r\n    setComponentList,\r\n    updateComponentByAddingItem, componentId }: Props) => {\r\n\r\n\r\n    const [localComponentItem, setlocalComponentItem] = useState({\r\n        title: '',\r\n        target: '',\r\n        text: '',\r\n        image: [],\r\n    })\r\n\r\n    const [myImages, setmyImages] = useState([]);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n\r\n    const handleComponentItemsChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        setlocalComponentItem({\r\n            ...localComponentItem,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.groupName) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (myImages.length > 0) {\r\n            const newImages = myImages.map(item => item.id);\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: [...newImages]\r\n            })\r\n        }\r\n        else {\r\n            setlocalComponentItem({\r\n                ...localComponentItem,\r\n                image: []\r\n            })\r\n        }\r\n\r\n    }, [myImages])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n    const handleAddItem = (e) => {\r\n        updateComponentByAddingItem(localComponentItem, componentId)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                destroyOnClose={true}\r\n                title=\"Add New Component Item\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={(e: any) => handleAddItem(e)}\r\n                onCancel={handleCancel}\r\n                okText='Add'\r\n                okButtonProps={{\r\n                    htmlType: \"submit\",\r\n                }}\r\n                width={'400px'}\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n                <Input\r\n                    label='Title'\r\n                    value={localComponentItem.title}\r\n                    name='title'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n                <Input\r\n                    label='Text'\r\n                    value={localComponentItem.text}\r\n                    name='text'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n                <Input\r\n                    label='Target'\r\n                    value={localComponentItem.target}\r\n                    name='target'\r\n                    onChange={handleComponentItemsChange}\r\n                />\r\n\r\n\r\n                <h3 className='inputFieldLabel-small'>Images</h3>\r\n                <div className='aboutToUploadImagesContainer'>\r\n                    {myImages &&\r\n                        // @ts-ignore\r\n                        myImages.length > 0 && myImages.map(image => {\r\n                            return (\r\n                                <div className='aboutToUploadImagesContainer__item'>\r\n                                    <div\r\n                                        onClick={() => handleImagesDelete(image.id)}\r\n                                        className='aboutToUploadImagesContainer__item-overlay'>\r\n                                        <DeleteOutlined />\r\n                                    </div>\r\n                                    <img src={image.cover} alt={image.alt} />\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setvisibleMedia(true);\r\n                        }}\r\n                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                        <FileAddOutlined />\r\n                    </div>\r\n                </div>\r\n                <MediaLibrary\r\n                    setvisible={setvisibleMedia}\r\n                    visible={visibleMedia}\r\n                    myImages={myImages}\r\n                    setmyImages={setmyImages}\r\n                    isModalOpenForImages={true} />\r\n\r\n            </Modal>\r\n        </>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Collapse, Button, Tooltip, Upload, Modal,Input, notification, Popconfirm } from 'antd';\r\nimport { CaretRightOutlined,CheckCircleOutlined,  PlusOutlined, DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport InputField from '../../components/Field/Input';\r\nimport Empty from '../../components/Empty';\r\nimport ComponentImageUpload from './ComponentImageUpload';\r\nimport {useHandleFetch} from '../../hooks';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewComponent from \"./AddNewComponent\";\r\nimport ComponentListComponentItem from './ComponentListComponentItem';\r\nimport AddNewComponentItem from './AddNewComponentItem';\r\nimport { category } from '../../state/ducks';\r\n\r\n\r\n\r\n\r\nconst { Panel } = Collapse;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Component Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\nconst text = `\r\n  A dog is a type of domesticated animal.\r\n  Known for its loyalty and faithfulness,\r\n  it can be found as a welcome guest in many households across the world.\r\n`;\r\n\r\nfunction getBase64(file: any) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.readAsDataURL(file);\r\n\t\treader.onload = () => resolve(reader.result);\r\n\t\treader.onerror = (error) => reject(error);\r\n\t});\r\n}\r\n\r\n\r\nconst genExtra = (updateComponentByDeleting,component,id) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</a>\r\n\t\t\r\n\t\t\t\r\n\t\t</Tooltip>\r\n\t\t\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t\t<Popconfirm \r\n               \r\n               onConfirm={() => updateComponentByDeleting(id,component)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n       \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\t</div>\r\n);\r\n\r\nconst genExtraForGroup = (setitemVisible: any, handleDeleteComponent:any, id: any,setComponentId:any) => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tdisplay: 'flex'\r\n\t\t}}\r\n\t>\r\n\t\t<Tooltip placement='top' title='Add new item Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<PlusOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t\tsetitemVisible(true);\r\n\t\t\t\t\tsetComponentId(id)\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<Tooltip placement='top' title='Edit Component'>\r\n\t\t<a href='##'>\r\n\t\t\t<EditOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\t// event.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t</a>\r\n\t\t</Tooltip>\r\n\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tmarginLeft: '15px'\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t   <a href='##' style={{\r\n\t\t\t\t   color:'rgb(241, 67, 67)'\r\n\t\t\t   }}>\r\n\t\t \r\n\t\t<Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteComponent(id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t   <DeleteOutlined\r\n\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t// If you don't want click extra trigger collapse, you can prevent this:\r\n\t\t\t\t\tevent.stopPropagation();\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t\r\n\t\t\r\n           </Popconfirm>\r\n\t\t   </a>\r\n\r\n\t\t\t\r\n\t</div>\r\n);\r\n\r\nconst Component = (props) => {\r\n\r\n\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [groupVisible, setgroupVisible] = useState(false);\r\n\tconst [itemVisible, setitemVisible] = useState(false);\r\n\tconst [componentId,setComponentId] = useState(''); \r\n\r\n\r\n\t\r\n\tconst [componentState, handleComponentListFetch] = useHandleFetch({}, 'componentList');\r\n\tconst [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch({}, 'deleteComponent');\r\n\tconst [updateComponentState, handleUpdateComponentFetch] = useHandleFetch({}, 'updateComponent');\r\n\t\r\n\tconst [componentList,setComponentList] = useState([]); \r\n  \r\n\tuseEffect(()=>{\r\n\t const setComponents = async () => {\r\n\t   const components = await handleComponentListFetch({}); \r\n\t   // @ts-ignore\r\n\t   setComponentList(components); \r\n\t }\r\n\t setComponents(); \r\n\t},[])\r\n\r\n\t\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif(componentState.data.length > 0 ){\r\n\t\t  const newComponentList = componentState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n\t\t  setComponentList(newComponentList); \r\n\t\t}\r\n\t\t \r\n\t  }\r\n\t\r\n\r\n\r\n\r\n\t  \r\n      const handleDeleteComponent = async (id) => {\r\n        const deleteComponentRes = await handleDeleteComponentFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteComponentRes && deleteComponentRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Component Deleted'); \r\n\t\t\t  const newComponentList =  componentList.filter(item => item.id !== id);\r\n\t\t\t  setComponentList(newComponentList); \r\n\t\t  }\r\n\t\t  else {\r\n\t\t\topenErrorNotification(\"Couldn't delete, Something went wrong\")\r\n\t\t  }\r\n\t  }\r\n\t  \r\n\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\tconst handleOkGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelGroup = (e: any) => {\r\n\t\tsetgroupVisible(false);\r\n\t};\r\n\r\n\r\n\tconst componentUpdate = async (item,component,localComponentItem) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(item.id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n\t\t  const itemIndex = positionInItemsOfComponent();\r\n\t\t  \r\n\r\n\t\t  const manupulatedLocalComponentForTheReq = localComponentItem.image.length > 0 ? \r\n\t\t  {\r\n\t\t\t...localComponentItem,\r\n\t\t\timage: localComponentItem.image.length > 0 ? localComponentItem.image.map(img => img.id) : []\r\n\t\t}\r\n\t\t  : localComponentItem;\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            localComponentItem,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t  const manupulatedUpdatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            manupulatedLocalComponentForTheReq,\r\n            ...component.items.slice(itemIndex + 1)\r\n\t\t  ];\r\n\t\t  \r\n\t\t\r\n\t\t  const manupulatedUpdatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: manupulatedUpdatedItems\r\n          });\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...manupulatedUpdatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Updated\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t}\r\n\r\n\r\n\tconst updateComponentByDeleting = async (id,component) => {\r\n\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(component.id);\r\n          };\r\n      \r\n          const positionInItemsOfComponent = () => {\r\n            return component.items.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n          const itemIndex = positionInItemsOfComponent();\r\n      \r\n          const updatedItems = [\r\n            ...component.items.slice(0, itemIndex),\r\n            ...component.items.slice(itemIndex + 1)\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...component,\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: component.id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item deleted\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\tconst updateComponentByAddingItem = async (localComponentItem,id) => {\r\n\t\tconst positionInComponents = () => {\r\n            return componentList.map(item => item.id).indexOf(id);\r\n          };\r\n      \r\n      \r\n          const componentIndex = positionInComponents();\r\n      \r\n    \r\n      \r\n          const updatedItems = [\r\n            ...componentList[componentIndex].items,\r\n            localComponentItem,\r\n          ];\r\n      \r\n          const updatedItem = Object.assign({}, componentList[componentIndex], {\r\n            ...componentList[componentIndex],\r\n            items: updatedItems\r\n          });\r\n      \r\n          const updateComponentList = [\r\n            ...componentList.slice(0, componentIndex),\r\n            updatedItem,\r\n            ...componentList.slice(componentIndex + 1)\r\n          ];\r\n\t\t\r\n\t\t  \r\n\r\n\r\n\t\tconst updateComponentRes = await handleUpdateComponentFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t  id: id,\r\n\t\t\t\t}\r\n\t\t\t  },\r\n\t\t\tbody: {\r\n\t\t\t\t...updatedItem,\r\n\t\t\t\tgroupName: updatedItem.name\r\n\t\t\t},\r\n\t\t  });\r\n\t\t\r\n\t\t\t   // @ts-ignore\r\n\t\t\t   if(updateComponentRes && updateComponentRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(\"Component Item Added\"); \r\n\t\t\t\tsetComponentList(updateComponentList);\r\n\t\t\t\tsetitemVisible(false);\r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Components\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search components..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n\t\t  onClick={() => setgroupVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n \r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n     \r\n        {componentState.isLoading && <DataTableSkeleton />}\r\n\r\n        {componentState.done && !(componentList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Component found' />\r\n\t\t\t</div>\r\n\t\t)}\r\n\r\n\t\t{componentState.done && componentList.length > 0 && (\r\n\t\t\t\t\t<div className='componentsItemContainer'>\r\n\t\t\t\t\t{componentList.map(component => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className='componentsItemContainer-item'>\r\n\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => <CaretRightOutlined rotate={isActive ? 90 : 0} />}\r\n\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\theader={component.name}\r\n\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\textra={genExtraForGroup(setitemVisible,handleDeleteComponent, component.id,setComponentId)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=' componentsItemContainer-white'>\r\n\t\t\t\t\t\t\t\t\t\t{component.items && component.items.length > 0 && component.items.map(item => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='componentsItemContainer-item-item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Collapse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\taccordion={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbordered={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIconPosition='left'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\texpandIcon={({ isActive }) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined rotate={isActive ? 90 : 0} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-collapse'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theader={item.title || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey='1'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='site-collapse-custom-panel'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\textra={genExtra(updateComponentByDeleting,component,item.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ComponentListComponentItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetComponentList={setComponentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentList={componentList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={component}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponentUpdate={componentUpdate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t{!(component.items.length > 0 ) && <Empty title='No item Found'/>}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Panel>\r\n\t\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n\t\t<AddNewComponent \r\n          addNewCategoryVisible={groupVisible} \r\n          setAddNewCategoryVisible={setgroupVisible} \r\n          setComponentList={setComponentList}\r\n          componentList={componentList}\r\n          />\r\n\t\t  <AddNewComponentItem \r\n          addNewCategoryVisible={itemVisible} \r\n          setAddNewCategoryVisible={setitemVisible} \r\n          setComponentList={setComponentList}\r\n\t\t  componentList={componentList}\r\n\t\t  updateComponentByAddingItem={updateComponentByAddingItem}\r\n\t\t  componentId={componentId}\r\n          />\r\n\r\n\r\n\t\t  \r\n\r\n\t\t\t<Modal\r\n\t\t\t\ttitle=\"Add New Group Component\"\r\n\t\t\t\tvisible={false}\r\n\t\t\t\tonOk={handleOkGroup}\r\n\t\t\t\tonCancel={handleCancelGroup}\r\n\t\t\t\tfooter={null}\r\n\t\t\t\tokText='Done'\r\n\t\t\t>\r\n\t\t\t\t<InputField label='Group Component Name' />\r\n\t\t\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Component;\r\n","import React, { useState } from 'react';\r\n\r\n// import third libraries\r\nimport { Upload, message, notification, Modal } from 'antd';\r\n// import { Formik } from 'formik';\r\n// import * as Yup from 'yup';\r\nimport reqwest from 'reqwest';\r\n\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import configs\r\nimport config from \"../../config.json\";\r\n\r\n\r\nimport {\r\n    InboxOutlined,\r\n    CheckCircleOutlined,\r\n    LoadingOutlined,\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\n\r\n// const validationSchema = Yup.object().shape({\r\n//     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n// });\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Brand Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n    image: [],\r\n    url: '',\r\n    cover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    themeList?: any;\r\n    setThemeList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\r\n\r\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme', 'form');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\r\n    const [fileList, setfileList] = useState([]);\r\n    const [uploading, setuploading] = useState(false);\r\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [name, setname] = useState('')\r\n    const [thumbnailFile, setThumbnailFile] = useState('')\r\n\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        setuploading(true);\r\n\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', thumbnailFile)\r\n\r\n\r\n        const addThemeRes = await handleAddthemeFetch({\r\n            body: formData,\r\n        });\r\n\r\n\r\n        setuploading(false);\r\n        // @ts-ignore\r\n        if (addThemeRes && addThemeRes.status === 'ok') {\r\n\r\n            setThemeList([...themeList, {\r\n                id: addThemeRes['_id'] || '',\r\n                key: addThemeRes['_id'] || '',\r\n                name: addThemeRes['name'] || '',\r\n                thumbnail: addThemeRes['thumbnail'] || '',\r\n                path: addThemeRes['path'] || '',\r\n                added: addThemeRes['added'] || '',\r\n                // @ts-ignore\r\n                ...addThemeRes\r\n            }]);\r\n\r\n            setfileList([]);\r\n            setuploading(false);\r\n            openSuccessNotification('Theme Uploaded!')\r\n            setAddNewCategoryVisible(false);\r\n            setname('');\r\n            setselectedThemeTypeValue('');\r\n\r\n\r\n\r\n\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification('Theme upload failed, Something went wrong');\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = () => {\r\n        if (addThemeState.isLoading) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        // @ts-ignore\r\n        else setmyThumbnailImage([]);\r\n    }\r\n\r\n\r\n    const onChangeThemeType = (value) => {\r\n        setselectedThemeTypeValue(value);\r\n    }\r\n\r\n\r\n\r\n    const uploadProps = {\r\n        //  listType: 'picture',\r\n        onRemove: file => {\r\n            setfileList(filelist => {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                newFileList.splice(index, 1);\r\n                return newFileList;\r\n            })\r\n\r\n        },\r\n        beforeUpload: file => {\r\n            setfileList(filelist => {\r\n                return [...fileList, file]\r\n            })\r\n            return false;\r\n        },\r\n        fileList,\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        fileList.forEach(file => {\r\n            formData.append('folder', file, file.name);\r\n        });\r\n        formData.append(\"name\", name);\r\n        formData.append('thumbnail', imageUrl)\r\n\r\n        setuploading(true);\r\n\r\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\r\n        // \tbody: formData\r\n        //   });\r\n\r\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // You can use any AJAX library you like\r\n        reqwest({\r\n            url: `${config.baseURL}/admin/theme/add`,\r\n            method: 'post',\r\n            processData: false,\r\n            data: formData,\r\n            withCredentials: true,\r\n            success: () => {\r\n                setfileList([]);\r\n                setuploading(false);\r\n                openSuccessNotification('Theme Uploaded!')\r\n                setAddNewCategoryVisible(false);\r\n                setname('');\r\n                setselectedThemeTypeValue('');\r\n                setThemeList([...themeList, {\r\n\r\n                }])\r\n                // setThemeList([...themeList, {\r\n                //     id: addCategoryRes['id'] || '',\r\n                //     key: addCategoryRes['id'] || '',\r\n                //     name: addCategoryRes['name'] || '',\r\n                //     description: addCategoryRes['description'] || '',\r\n                //     // @ts-ignore\r\n                //     ...addCategoryRes\r\n                // }])\r\n            },\r\n            error: () => {\r\n                setuploading(false);\r\n                openErrorNotification('Theme Upload failed!')\r\n                message.error('upload failed.');\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    function getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    function beforeUpload(file) {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n\r\n\r\n        getBase64(file, imageUrl => {\r\n            setImageUrl(imageUrl)\r\n            setThumbnailFile(file);\r\n            setLoadingThumbnail(false)\r\n        })\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div className=\"ant-upload-text\">Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                style={{\r\n                    top: '40px'\r\n                }}\r\n                title=\"Add New Theme\"\r\n                visible={addNewCategoryVisible}\r\n                onOk={handleSubmit}\r\n                onCancel={handleCancel}\r\n                okText='Upload Theme'\r\n                okButtonProps={{\r\n                    loading: uploading,\r\n                    htmlType: \"submit\",\r\n                    disabled: getisSubmitButtonDisabled()\r\n                }}\r\n\r\n                bodyStyle={{\r\n                    margin: '0',\r\n                    padding: '10px'\r\n                }}\r\n            >\r\n\r\n                <Input\r\n                    label='Name'\r\n                    value={name}\r\n                    name='name'\r\n                    onChange={(e: any) => setname(e.target.value)}\r\n                    isError={addThemeState.error['error']['name']}\r\n\r\n                    errorString={addThemeState.error['error']['name']}\r\n                />\r\n\r\n                <div style={{\r\n                    marginTop: '20px'\r\n                }}></div>\r\n\r\n\r\n                <h3 className='inputFieldLabel'>Thumbnail</h3>\r\n                <Upload\r\n                    name=\"avatar\"\r\n                    listType=\"picture-card\"\r\n                    className=\"avatar-uploader\"\r\n                    showUploadList={false}\r\n                    beforeUpload={beforeUpload}\r\n                    multiple={false}\r\n                >\r\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n\r\n\r\n\r\n                <div style={{\r\n                    marginTop: '3px'\r\n                }}></div>\r\n                <h3 className='inputFieldLabel'>\r\n                    Theme Folder (.zip)\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n                <Dragger\r\n                    multiple={false}\r\n                    className='upload-list-inline'\r\n                    listType='picture'\r\n                    style={{\r\n                        background: '#fff'\r\n                    }}\r\n                    {...uploadProps}\r\n                >\r\n                    <p className='ant-upload-drag-icon'>\r\n                        <InboxOutlined />\r\n                    </p>\r\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\r\n                    <p className='ant-upload-hint'>\r\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\r\n                        other band files\r\n\t\t\t\t\t\t\t</p>\r\n                </Dragger>\r\n\r\n                {addThemeState.error['error']['folder'] && (\r\n                    <p style={{\r\n                        color: 'rgba(255, 0, 0, 0.507)'\r\n                    }}>{addThemeState.error['error']['folder']}</p>\r\n                )}\r\n\r\n\r\n\r\n\r\n\r\n            </Modal>\r\n\r\n            <MediaLibrary\r\n                setvisible={setvisibleMedia}\r\n                visible={visibleMedia}\r\n                setmyImages={setmyImages}\r\n                isModalOpenForImages={false}\r\n                setmyThumbnailImage={setmyThumbnailImage}\r\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                myThumbnailImage={myThumbnailImage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Button, Input,Tooltip, Modal, notification, Popconfirm,Badge} from 'antd';\r\nimport { \r\n  PlusOutlined, EditOutlined, \r\n  DeleteOutlined,EditFilled,\r\n  CheckOutlined,\r\n  CheckCircleOutlined,\r\n  CheckCircleTwoTone } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewTheme from \"./AddNewTheme\";\r\n\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [themeList,setThemeList] = useState([]); \r\n\r\n    const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\r\n    const [activeThemeState, handleActiveThemeFetch] = useHandleFetch({}, 'activeTheme');\r\n    const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch({}, 'deletetheme');\r\n  \r\n\r\n    \r\n    useEffect(()=>{\r\n     const setThemes = async () => {\r\n       const themes = await handleThemeListFetch({}); \r\n       // @ts-ignore\r\n       setThemeList(themes); \r\n     }\r\n     setThemes(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(themeState.data.length > 0 ){\r\n      const newThemeList = themeState.data.filter(item => item.name.includes(value)); \r\n      setThemeList(newThemeList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\r\n  const handleActiveTheme = async (id) => {\r\n    const activeThemeRes = await handleActiveThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(activeThemeRes && activeThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme activated'); \r\n   \r\n  }\r\n  else {\r\n    openErrorNotification(\"Couldn't activate the theme, Something went wrong\")\r\n  }\r\n     \r\n     \r\n  }\r\n\r\n\r\n  const handleDeleteTheme = async (id) => {\r\n    const deleteThemeRes = await handleDeleteThemeFetch({\r\n      urlOptions: {\r\n        placeHolders: {\r\n          id,\r\n        }\r\n        }\r\n      });\r\n\r\n        // @ts-ignore\r\n  if(deleteThemeRes && deleteThemeRes.status === 'ok'){\r\n    openSuccessNotification('Theme Deleted'); \r\n    const newThemeList =  themeList.filter(item => item.id !== id);\r\n    setThemeList(newThemeList); \r\n  }\r\n  else {\r\n  openErrorNotification(\"Couldn't delete, Something went wrong\")\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n\t\t Themes\r\n \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search themes..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {themeState.done && themeList.length > 0 && (\r\n   \r\n   <div className='categoryListContainer__bodyContainerList'>\r\n\t\t\r\n          {themeList.map(theme => {\r\n            return (\r\n              <div className='categoryListContainer__bodyContainerList-item'>\r\n              {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n               \r\n                  </Badge> */}\r\n                  <div className='categoryListContainer__bodyContainerList-item-top'>\r\n                  <img\r\n                    alt='theme img'\r\n                    src={theme.thumbnail}\r\n                  />\r\n                </div>\r\n                <div className='categoryListContainer__bodyContainerList-item-body'>\r\n                  <h3> {theme.name} </h3>\r\n     \r\n                  <div\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Tooltip placement='top' title='Active this theme'>\r\n                    <Button\r\n                  \r\n                   size='small'\r\n                   className='btnPrimaryClassNameoutline'\r\n                   icon={<CheckOutlined />}\r\n                   onClick={() => handleActiveTheme(theme.id)}\r\n                  >\r\n                    <span style={{\r\n                      fontSize:'11px'\r\n                    }}>\r\n                    Set Active\r\n                 \r\n                    </span>\r\n                \r\n                 </Button>\r\n     \r\n     \r\n                      \r\n                    </Tooltip>\r\n     \r\n                    <Tooltip placement='top' title='Delete theme'>\r\n                    <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteTheme(theme.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <Button\r\n                        size='small'\r\n                        type='link'\r\n                        danger={true}\r\n                        icon={<DeleteOutlined />}\r\n                      >\r\n                        \r\n                        </Button>\r\n           </Popconfirm>\r\n\r\n\r\n                     \r\n     \r\n                        \r\n                        </Tooltip>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n          })}\r\n         </div>\r\n\t\t)}\r\n\r\n\r\n        {themeState.isLoading && <DataTableSkeleton />}\r\n\r\n        {themeState.done && !(themeList.length > 0) && (\r\n        <Empty title='No Theme found'  />\r\n        )}\r\n        \r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n    {themeState.done && \r\n    <AddNewTheme \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          themeList={themeState.data}\r\n          setThemeList={setThemeList}\r\n           />}\r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Image = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Image\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react';\r\n\r\ninterface Props {}\r\n\r\nconst Invoice = (props: Props) => {\r\n\treturn <div>Invoice</div>;\r\n};\r\n\r\nexport default Invoice;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string()\r\n        .label('Title')\r\n        .required('Site title can not be empty'),\r\n    adminEmail: Yup.string()\r\n        .label('Admin Email')\r\n        .required('Admin Email can not be empty'),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    adminName: '',\r\n    adminEmail: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateSiteSettings');\r\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'siteSettings');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [UpdateSiteSettingsState])\r\n\r\n\r\n    // console.log('siteSettingsState', siteSettingsState);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\r\n\r\n            body: {\r\n                title: values.title,\r\n                adminName: values.adminName,\r\n                adminEmail: values.adminEmail,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.title || !values.adminEmail || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\r\n            return { ...siteSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Site Title'\r\n                                    value={values.title}\r\n                                    name='title'\r\n                                    isError={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n\r\n                                    errorString={(touched.title && errors.title) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['title'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('title');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Admin Name'\r\n                                    value={values.adminName}\r\n                                    name='adminName'\r\n                                    isError={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n\r\n                                    errorString={(touched.adminName && errors.adminName) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminName'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminName');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <Input\r\n                                    label='Admin Email'\r\n                                    value={values.adminEmail}\r\n                                    name='adminEmail'\r\n                                    isError={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n\r\n                                    errorString={(touched.adminEmail && errors.adminEmail) ||\r\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['adminEmail'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('adminEmail');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Admin Info\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n\r\n                    </>\r\n                )}\r\n        </Formik >\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n//","import React, { useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { notification, Button } from 'antd';\r\n\r\nimport {\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n// import MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    invoiceTitle: Yup.string().label('Title').required('Invoice title is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Site Info Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    invoiceTitle: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n    additionalText: \"\"\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n\r\n}\r\n\r\nconst UpdateSiteinfo = ({ }: Props) => {\r\n\r\n    const [updateInfovSettingsState, handleUpdateInvoiceSettingsFetch] = useHandleFetch({}, 'updateInvoiceSettings');\r\n    const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch({}, 'invoiceSettingsDetail');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getSiteSettings = async () => {\r\n            const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\r\n\r\n            // console.log('siteSettingsRes', siteSettingsRes)\r\n        }\r\n        getSiteSettings();\r\n    }, [updateInfovSettingsState])\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\r\n\r\n            body: {\r\n                invoiceTitle: values.invoiceTitle,\r\n                address: values.address,\r\n                phone: values.phone,\r\n                email: values.email,\r\n                additionalText: values.additionalText\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            // setBrandList([...brandList, {\r\n            //     id: addBrandRes['id'] || '',\r\n            //     key: addBrandRes['id'] || '',\r\n            //     name: addBrandRes['name'] || '',\r\n            //     description: addBrandRes['description'] || '',\r\n            //     // @ts-ignore\r\n            //     ...addBrandRes\r\n            // }]);\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.invoiceTitle || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const getInitialValues = () => {\r\n        if (InvoiceSettingsState.data && Object.keys(InvoiceSettingsState.data).length > 0) {\r\n            return { ...InvoiceSettingsState.data }\r\n        }\r\n        else {\r\n            return initialValues\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                getInitialValues()\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <div className='siteInfoContainer__item'>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Company Name'\r\n                                    value={values.invoiceTitle}\r\n                                    name='invoiceTitle'\r\n                                    isError={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n\r\n                                    errorString={(touched.invoiceTitle && errors.invoiceTitle) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['invoiceTitle'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('invoiceTitle');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Phone Number'\r\n                                    value={values.phone}\r\n                                    name='phone'\r\n                                    isError={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n\r\n                                    errorString={(touched.phone && errors.phone) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['phone'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('phone');\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Email'\r\n                                    value={values.email}\r\n                                    name='email'\r\n                                    isError={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n\r\n                                    errorString={(touched.email && errors.email) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['email'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('email');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item'>\r\n                                <Input\r\n                                    label='Additional Text'\r\n                                    value={values.additionalText}\r\n                                    name='additionalText'\r\n                                    isError={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n\r\n                                    errorString={(touched.additionalText && errors.additionalText) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['additionalText'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('additionalText');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className='siteInfoContainer__item-item-left'>\r\n                                <TextArea\r\n                                    label='Address'\r\n                                    value={values.address}\r\n                                    name='address'\r\n                                    isError={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n\r\n                                    errorString={(touched.address && errors.address) ||\r\n                                        (!isSubmitting && updateInfovSettingsState.error['error']['address'])}\r\n                                    onChange={(e: any) => {\r\n                                        handleChange(e);\r\n                                        setFieldTouched('address');\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div style={{\r\n                            marginTop: '10px'\r\n                        }}></div>\r\n\r\n                        <Button\r\n\r\n                            onClick={(e: any) => handleSubmit(e)}\r\n                            loading={isSubmitting}\r\n                            disabled={getisSubmitButtonDisabled(values, isValid)}\r\n                            className='btnPrimaryClassNameoutline'\r\n                        >\r\n                            Update Admin Info\r\n                            </Button>\r\n\r\n                        <div style={{\r\n                            marginBottom: '10px'\r\n                        }}></div>\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateSiteinfo;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs, Tooltip } from 'antd';\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tCheckOutlined,\r\n\tCloseOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AdminSiteInfo from \"./AdminSiteInfo\";\r\nimport SiteInfoInvoice from \"./SiteInfoInvoice\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Brand Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible?: any;\r\n\tsetAddNewCategoryVisible?: any;\r\n\tbrandList?: any;\r\n\tsetBrandList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, brandList, setBrandList }: Props) => {\r\n\r\n\tconst [updateSiteLogoAndIcon, handleUpdateSiteLogoAndIconFetch] = useHandleFetch({}, 'updateSiteLogoAndIcon');\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n\r\n\tconst handleSubmit = async () => {\r\n\r\n\r\n\t\tconst updateSiteIconAndLogoRes = await handleUpdateSiteLogoAndIconFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tlogo: myImages ? myImages[0] && myImages[0].id : '',\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateSiteIconAndLogoRes && updateSiteIconAndLogoRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Updated Site Logo');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't updated site logo, Something went wrong\");\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='siteInfoContainer'>\r\n\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\" >\r\n\t\t\t\t\t<TabPane tab=\"Site Info\" key=\"1\">\r\n\t\t\t\t\t\t<AdminSiteInfo />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t\t<TabPane tab=\"Site logo\" key=\"2\">\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '20px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Logo</h3>\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\r\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* \r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'> Icon</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{myImages ? !myImages[0] && (\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t) : <Tooltip\r\n\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div> */}\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<Button\r\n\r\n\t\t\t\t\t\t\tloading={updateSiteLogoAndIcon.isLoading}\r\n\t\t\t\t\t\t\tonClick={() => handleSubmit()}\r\n\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tUpdate site Logo\r\n                            </Button>\r\n\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginBottom: '10px'\r\n\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t</TabPane>\r\n\r\n\r\n\t\t\t\t\t<TabPane tab=\"Admin Information\" key=\"3\">\r\n\r\n\t\t\t\t\t\t<SiteInfoInvoice />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t</Tabs>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t<MediaLibrary\r\n\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t/>\r\n\t\t</>\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n\r\n\r\n\r\n/*\r\n\t<div className='categoryListContainer__bodyContainerList'>\r\n\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t<Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item'>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-top'>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\talt='theme img'\r\n\t\t\t\t\t\t\t\t\tsrc='https://homebazarshibchar.com/images/homeBazar.zip-thumb-homebazarLogo.jpg'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='categoryListContainer__bodyContainerList-item-body'>\r\n\t\t\t\t\t\t\t\t<h3>Home Bazar</h3>\r\n\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Active this theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='primary'\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<CheckOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSet Active\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t\t\t<Tooltip placement='top' title='Delete theme'>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\ttype='link'\r\n\t\t\t\t\t\t\t\t\t\t\tdanger={true}\r\n\t\t\t\t\t\t\t\t\t\t\ticon={<DeleteOutlined />}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => console.log('upload thme')}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n*/","import React, { useState, useEffect } from 'react';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\n\r\ninterface Props {\r\n\tsetdeliveryChargeList: any;\r\n\tdeliveryChargeList: any;\r\n\tdeliveryChargeItem: any;\r\n}\r\n\r\nconst DeliveryCharge = ({ deliveryChargeItem, setdeliveryChargeList, deliveryChargeList }: Props) => {\r\n\tconst [ deliveryCharge, setdeliveryCharge ] = useState({\r\n\t\tminimumOrder: deliveryChargeItem.minimumOrder,\r\n\t\tcharge: deliveryChargeItem.charge\r\n\t});\r\n\r\n\tconst handleDeliveryChargeChange = (e) => {\r\n\t\tconst name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\r\n\t\tsetdeliveryCharge({\r\n\t\t\t...deliveryCharge,\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t};\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst positionInAttribute = () => {\r\n\t\t\t\treturn deliveryChargeList.map((item) => item.id).indexOf(deliveryChargeItem.id);\r\n\t\t\t};\r\n\r\n\t\t\tconst index = positionInAttribute();\r\n\r\n\t\t\tconst updatedItem = Object.assign({}, deliveryChargeList[index], { ...deliveryCharge });\r\n\t\t\tconst updateAttributeList = [\r\n\t\t\t\t...deliveryChargeList.slice(0, index),\r\n\t\t\t\tupdatedItem,\r\n\t\t\t\t...deliveryChargeList.slice(index + 1)\r\n\t\t\t];\r\n\t\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t\t},\r\n\t\t[ deliveryCharge ]\r\n\t);\r\n\r\n\tconst handleAttributeDelete = () => {\r\n\t\tconst updateAttributeList = deliveryChargeList.filter((item) => item.id !== deliveryChargeItem.id);\r\n\t\tsetdeliveryChargeList(updateAttributeList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='dubbleRowInputs'>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Minimum Order'\r\n\t\t\t\t\tvalue={deliveryCharge.minimumOrder}\r\n\t\t\t\t\tname='minimumOrder'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t<Input\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\taddonBefore='Charge'\r\n\t\t\t\t\tvalue={deliveryCharge.charge}\r\n\t\t\t\t\tname='charge'\r\n\t\t\t\t\tonChange={handleDeliveryChargeChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DeliveryCharge;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport DeliveryCharge from './DeliveryCharge';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tpickUpLocation: '',\r\n\ttime: '',\r\n};\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst AddNewRegion = ({ addNewCategoryVisible, setAddNewCategoryVisible, regionList, setRegionList }: Props) => {\r\n\r\n\tconst [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\tconst [deliveryChargeList, setdeliveryChargeList] = useState([{\r\n\t\tminimumOrder: '',\r\n\t\tcharge: '',\r\n\t\tid: '0'\r\n\t}]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue', selectedCityValue)\r\n\r\n\t\tif (deliveryChargeList.length > 0) {\r\n\t\t\tconst charge = {};\r\n\r\n\t\t\tfor (let item of deliveryChargeList) {\r\n\t\t\t\tif (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\r\n\t\t\t\t\tcharge[item['minimumOrder']] = item['charge']\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([{\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t},...regionList])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst addRegionRes = await handleRegionFetch({\r\n\r\n\t\t\t\tbody: {\r\n\t\t\t\t\tname: values.name,\r\n\t\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\t\ttime: values.time,\r\n\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\t\tcharge: {}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\t\topenSuccessNotification();\r\n\r\n\t\t\t\tsetRegionList([...regionList, {\r\n\t\t\t\t\tid: addRegionRes['id'] || '',\r\n\t\t\t\t\tkey: addRegionRes['id'] || '',\r\n\t\t\t\t\tname: addRegionRes['name'] || '',\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t...addRegionRes\r\n\t\t\t\t}])\r\n\t\t\t\tsetAddNewCategoryVisible(false)\r\n\t\t\t\tactions.resetForm();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleAddDeliveryCharge = () => {\r\n\t\tsetdeliveryChargeList([...deliveryChargeList, {\r\n\t\t\tminimumOrder: '',\r\n\t\t\tcharge: '',\r\n\t\t\tid: `${deliveryChargeList.length}`\r\n\t\t}])\r\n\t};\r\n\r\n\r\n\r\n\r\n\t// console.log('deliveryChargeList', deliveryChargeList)\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Region\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\tmode=\"multiple\"\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\tDelivery Charges\r\n            </h3>\r\n\r\n\t\t\t\t\t\t\t{deliveryChargeList.map(deliveryChargeItem => {\r\n\t\t\t\t\t\t\t\treturn <DeliveryCharge\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeItem={deliveryChargeItem}\r\n\t\t\t\t\t\t\t\t\tdeliveryChargeList={deliveryChargeList} setdeliveryChargeList={setdeliveryChargeList} />\r\n\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '5px',\r\n\t\t\t\t\t\t\t}}></div>\r\n\t\t\t\t\t\t\t<Button size='middle'\r\n\t\t\t\t\t\t\t\tonClick={handleAddDeliveryCharge}\r\n\t\t\t\t\t\t\t\ttype=\"dashed\" icon={<PlusOutlined />}>Add Charge</Button>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewRegion;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string()\r\n\t\t.label('Name')\r\n\t\t.required()\r\n\t\t.min(2, 'Name must have at least 2 characters '),\r\n\tpickUpLocation: Yup.string()\r\n\t\t.label('Pick up Location')\r\n\t\t.required()\r\n\t\t.min(2, 'Pick up Location must have at least 2 characters '),\r\n\ttime: Yup.string()\r\n\t\t.label('Time')\r\n\t\t.required()\r\n\t\t.min(2, 'Time must have at least 2 characters '),\r\n\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tregionList?: any;\r\n\tsetRegionList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, setRegionList, regionList }: Props) => {\r\n\tconst [updateRegionState, handleUpdateRegionFetch] = useHandleFetch({}, 'updateRegion');\r\n\r\n\r\n\tconsole.log('DeliveryRegion',customer);\r\n\r\n\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// console.log('selectedCityValue',selectedCityValue)\r\n\r\n\t\tconst addRegionRes = await handleUpdateRegionFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tpickUpLocation: values.pickUpLocation,\r\n\t\t\t\ttime: values.time,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t\tcharge: customer.charge\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addRegionRes && addRegionRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn regionList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, regionList[index], { ...addRegionRes });\r\n\t\t\tconst updateRegionList = [...regionList.slice(0, index), updatedItem, ...regionList.slice(index + 1)];\r\n\t\t\tsetRegionList(updateRegionList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.name ||\r\n\t\t\t!values.pickUpLocation ||\r\n\t\t\t!values.time) {\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...customer }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Region Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Pick up Location'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.pickUpLocation}\r\n\t\t\t\t\t\t\t\t\t\tname='pickUpLocation'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.pickUpLocation && errors.pickUpLocation) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['pickUpLocation'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('pickUpLocation');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\tvalue={values.time}\r\n\t\t\t\t\t\t\t\t\tname='time'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.time && errors.time) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateRegionState.error['error']['time'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('time');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n            </h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, Space, Tag,Button, Input,Tooltip, Modal, notification, Popconfirm } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewRegion from \"./AddNewRegion\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Region Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setRegionList: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setRegionList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch({}, 'deleteRegion');\r\n\r\n\r\n      const handleDeleteRegion = async (id) => {\r\n        const deleteRegionRes = await handleDeleteRegioFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n            // @ts-ignore\r\n\t\t  if(deleteRegionRes && deleteRegionRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Region'); \r\n\t\t\t  const newRegionList =  data.filter(item => item.id !== id);\r\n\t\t\t  setRegionList(newRegionList); \r\n\t\t  }\r\n\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n         \r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Pick up Location\" \r\n           dataIndex=\"pickUpLocation\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n\r\n<Column\r\n           title=\"Country\" \r\n           dataIndex=\"countryName\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n<Column\r\n           title=\"Time\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n<Column\r\n           title=\"Charge\" \r\n           dataIndex=\"time\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <a href='##'>\r\n               <Tooltip placement=\"top\" title='Edit Region'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n              </a>\r\n\r\n\r\n   \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteRegion(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n\r\n\r\n             \r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}\r\n    regionList={data}\r\n    setRegionList={setRegionList}\r\n\r\n    />\r\n\r\n    }\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n    const [regionList,setRegionList] = useState([]); \r\n\r\n    const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setRegions = async () => {\r\n       const regions = await handleRegionListFetch({}); \r\n       // @ts-ignore\r\n       setRegionList(regions); \r\n     }\r\n     setRegions(); \r\n    },[])\r\n\r\n\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  console.log('regionState',regionState)\r\n\r\n\r\n  const handleSearch = (value) => {\r\n    if(regionState.data.length > 0 ){\r\n      const newTagList = regionState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setRegionList(newTagList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Regions \r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search regions..\"\r\n          onSearch={value => handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {regionState.done && regionList.length > 0 && <MyTable \r\n        setRegionList={setRegionList}\r\n        data={regionList} />}\r\n        {regionState.isLoading && <DataTableSkeleton />}\r\n\r\n        {regionState.done && !(regionList.length > 0) && (\r\n\t\t<Empty title='No Region found'  />\r\n\t\t)}\r\n        \r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{regionState.done && \r\n    <AddNewRegion \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          regionList={regionState.data}\r\n          setRegionList={setRegionList}\r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useEffect, useState } from 'react'\r\n\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\n\r\n// import lib \r\nimport { Select, Button, notification } from 'antd';\r\n\r\nimport {\r\n    SendOutlined,\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SendCustomSMS = (props: Props) => {\r\n    const [text, setText] = useState('');\r\n    const [recipient, setrecipient] = useState([]);\r\n\r\n\r\n    function handleChange(value) {\r\n        const recipient = `${value}`.split(',');\r\n        setrecipient(recipient)\r\n    }\r\n\r\n\r\n    const handleMsgSend = () => {\r\n\r\n    }\r\n\r\n\r\n    const getMsgSendIsDisabled = () => {\r\n        return !text || !recipient[0]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                width: '450px'\r\n            }}>\r\n                <h3 className='inputFieldLabel'>\r\n                    Recipient\r\n                </h3>\r\n\r\n                <Select\r\n                    style={{\r\n                        height: '30px',\r\n                        borderRadius: '3px',\r\n                        borderColor: '#eee !important',\r\n                        width: '100%'\r\n                    }}\r\n                    mode=\"tags\" onChange={handleChange} tokenSeparators={[',']}>\r\n                </Select>\r\n\r\n                <div style={{\r\n                    marginTop: \"15px\"\r\n                }}></div>\r\n                <TextArea\r\n                    label='Text'\r\n                    value={text}\r\n                    name='text'\r\n                    onChange={(e: any) => {\r\n                        setText(e.target.value);\r\n                    }}\r\n                />\r\n\r\n                <Button\r\n\r\n                    style={{\r\n                        marginTop: '10px'\r\n                    }}\r\n                    onClick={handleMsgSend}\r\n                    disabled={getMsgSendIsDisabled()}\r\n\r\n                    className='btnAddToPrice'\r\n                >\r\n                    Send <span style={{\r\n                        marginLeft: '10px'\r\n                    }}> <SendOutlined /></span>\r\n                </Button>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SendCustomSMS\r\n","import React from 'react';\r\n\r\n// import components \r\nimport TextArea from \"../../components/Field/TextArea\";\r\nimport Input from \"../../components/Field/Input\";\r\n\r\n\r\n// import lib \r\nimport { Button, notification } from 'antd';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport {\r\n    CheckCircleOutlined,\r\n    InfoCircleFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'SMS sent successfully',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <InfoCircleFilled style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst SMSConfiguaration = (props: Props) => {\r\n    const [configureSMSStata, handleconfigureSMSFetch] = useHandleFetch({}, 'configureSMS');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleconfigureSMSFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            // validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Input\r\n                            label='Title'\r\n                            value={values.name}\r\n                            name='name'\r\n                            isError={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n\r\n                            errorString={(touched.name && errors.name) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['name'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('name');\r\n                            }}\r\n                        />\r\n                        <TextArea\r\n                            label='Description'\r\n                            value={values.description}\r\n                            name='description'\r\n                            isError={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n\r\n                            errorString={(touched.description && errors.description) ||\r\n                                (!isSubmitting && configureSMSStata.error['error']['description'])}\r\n                            onChange={(e: any) => {\r\n                                handleChange(e);\r\n                                setFieldTouched('description');\r\n                            }}\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n    )\r\n}\r\n\r\nexport default SMSConfiguaration\r\n","import React from 'react';\r\n\r\n\r\n// import lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n// import components \r\nimport SendCustomSMS from \"./SendCustomSMS\";\r\nimport SMSConfiguaration from \"./SMSConfiguaration\";\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sms = (props: Props) => {\r\n    return (\r\n        <>\r\n            <div className='siteInfoContainer'>\r\n\r\n                <Tabs defaultActiveKey=\"1\" >\r\n                    <TabPane tab=\"Send custom SMS\" key=\"1\">\r\n                        <SendCustomSMS />\r\n                    </TabPane>\r\n\r\n                    <TabPane tab=\"SMS configuaration\" key=\"2\">\r\n                        <SMSConfiguaration />\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sms\r\n","import Sms from \"./Sms\";\r\nexport default Sms; ","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"fromEmail\": \"\",\r\n    \"fromName\": \"\",\r\n    \"host\": \"\",\r\n    \"encryption\":\"\",\r\n    \"port\":'',\r\n    \"smtpUsername\":\"\",\r\n    \"smtpPassword\": \"\"\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ConfigureSTMP = ({  }: Props) => {\r\n\r\n    const [getEmailConfigurationState, handleGetEmailConfigurationFetch] = useHandleFetch({}, 'getEmailConfiguration');\r\n    const [emailConfigurationState, handleEmailConfigurationFetch] = useHandleFetch({}, 'configureEmailSTMP');\r\n \r\n    const [isAuthenticated,setIsAuthenticated] = useState(true);\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleEmailConfigurationFetch({\r\n            body: {\r\n                \"fromEmail\": values.fromEmail.trim(),\r\n                \"fromName\": values.fromName.trim(),\r\n                \"host\": values.host.trim(),\r\n                \"encryption\":values.encryption.trim(),\r\n                \"port\":values.port.trim(),\r\n                \"authentication\": isAuthenticated,\r\n                \"smtpUsername\":values.smtpUsername.trim(),\r\n                \"smtpPassword\": values.smtpPassword.trim()\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification('STMP Configuration Updated!');\r\n        }\r\n        else {\r\n            openErrorNotification(\"Something went wrong, Couldn't updated STMP configuration\");\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const handleAuthenticatedChange = (e) => {\r\n        setIsAuthenticated(e.target.checked);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                                         \t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='From Email'\r\n                                                    value={values.fromEmail}\r\n                                                    name='fromEmail'\r\n                                                    isError={(touched.fromEmail && errors.fromEmail) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\r\n\r\n                                                    errorString={(touched.fromEmail && errors.fromEmail) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('fromEmail');\r\n                                                    }}\r\n                                                     />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='From Name'\r\n                                                    value={values.fromName}\r\n                                                    name='fromName'\r\n                                                    isError={(touched.fromName && errors.fromName) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\r\n\r\n                                                    errorString={(touched.fromName && errors.fromName) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('fromName');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='Port'\r\n                                                    value={values.port}\r\n                                                    name='port'\r\n                                                    isError={(touched.port && errors.port) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\r\n\r\n                                                    errorString={(touched.port && errors.port) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('port');\r\n                                                    }}\r\n                                                    />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='Encryption'\r\n                                                    value={values.encryption}\r\n                                                    name='encryption'\r\n                                                    isError={(touched.encryption && errors.encryption) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\r\n\r\n                                                    errorString={(touched.encryption && errors.encryption) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('encryption');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='STMP Username'\r\n                                                    value={values.smtpUsername}\r\n                                                    name='smtpUsername'\r\n                                                    isError={(touched.smtpUsername && errors.smtpUsername) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\r\n\r\n                                                    errorString={(touched.smtpUsername && errors.smtpUsername) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('smtpUsername');\r\n                                                    }}\r\n                                                    />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='STMP Password'\r\n                                                    value={values.smtpPassword}\r\n                                                    name='smtpPassword'\r\n                                                    isError={(touched.smtpPassword && errors.smtpPassword) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\r\n\r\n                                                    errorString={(touched.smtpPassword && errors.smtpPassword) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('smtpPassword');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n                                            <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                     <Input\r\n                                                    label='Host'\r\n                                                    value={values.host}\r\n                                                    name='host'\r\n                                                    type='number'\r\n                                                    isError={(touched.host && errors.host) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\r\n\r\n                                                    errorString={(touched.host && errors.host) ||\r\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('host');\r\n                                                    }}\r\n                                                     />\r\n                                            </div>\r\n\r\n                                        \r\n                                            <Checkbox onChange={handleAuthenticatedChange}>\r\n                                                    <span className='checkBoxFieldLabel'>\r\n                                                        Authentication\r\n                                                    </span>\r\n                                                    \r\n                                                </Checkbox>    \r\n\r\n\r\n\r\n<div style={{\r\n    marginTop:'20px'\r\n}}></div>\r\n                                      <div style={{\r\n                                          display:'block',\r\n                                          marginBottom:'20px',\r\n                                          marginTop:'20px',\r\n                                      }}>\r\n                                                    \r\n                                      <Button\r\n\r\n                                        onClick={(e: any) => handleSubmit(e)}\r\n                                        loading={emailConfigurationState.isLoading}\r\n                                        className='btnPrimaryClassNameoutline'\r\n                                        >\r\n                                        Update Email Configuration\r\n                                        </Button>      \r\n                                          </div>      \r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ConfigureSTMP;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"newCustomer\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'newCustomer'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"New Customer Event Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n    <Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"orderStatus\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'orderStatus'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"Order Status Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n    <Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal,Tabs } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'New Customer Template Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n   visible: boolean;\r\n   setVisible: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\r\n\r\n    const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch({}, 'configureAutoEmailTemplate');\r\n    const [getConfigureAutoEmailTemplate, handleGetConfigureAutoEmailTemplateFetch] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\r\n    \r\n    \r\n    const [customer, setcustomer] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const [admin, setadmin] = useState({\r\n        subject:'',\r\n        body:'',\r\n    }); \r\n\r\n    const handleSubmit = async () => {\r\n        const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch({\r\n            body: {\r\n                \"event\": \"order\",\r\n                \"customer\":{\r\n                    ...customer\r\n                },\r\n                \"admin\":{\r\n                    ...admin\r\n                }\r\n            \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (getConfigurationAutoEmailTemplateRes && getConfigurationAutoEmailTemplateRes.status === 'ok') {\r\n            openSuccessNotification();\r\n            setVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        const getCustomerAutoEmail = async () => {\r\n            const res = await handleAutoEmailTemplateFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        eventName: 'order'\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // set auto email template to customer and admin\r\n        }; \r\n        getCustomerAutoEmail(); \r\n\r\n    },[]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setVisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n        width={'80vw'}\r\n        style={{\r\n            top: '40px'\r\n        }}\r\n        title=\"Order Event Template\"\r\n        visible={visible}\r\n        onOk={(e: any) => handleSubmit()}\r\n        onCancel={handleCancel}\r\n        okText='Submit'\r\n        okButtonProps={{\r\n            loading: autoEmailTemplate.isLoading,\r\n            htmlType: \"submit\",\r\n            // disabled: getisSubmitButtonDisabled(values, isValid)\r\n        }}\r\n        bodyStyle={{\r\n            margin: '10px',\r\n            padding: '10px'\r\n        }}\r\n    >\r\n     <Tabs defaultActiveKey=\"1\" >\r\n     <TabPane tab=\"Customer\" key=\"1\">\r\n        \r\n        <div style={{\r\n            display:'flex',\r\n\r\n        }}>\r\n            <div style={{\r\n                width:'70%'\r\n            }}>\r\n            <Input\r\n            label='Subject'\r\n            value={customer.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setcustomer({\r\n                    ...customer,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={customer.body}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            setcustomer({\r\n                ...customer,\r\n                body: data\r\n            })\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n            </div>\r\n\r\n            <div style={{\r\n                width:'30%',\r\n                overflowY:'auto',\r\n                background:\"#f7f7f7\",\r\n                marginLeft:'20px',\r\n                padding:'10px',\r\n                borderRadius:'8px'\r\n            }}>\r\n                <h4>Information Tags</h4>\r\n                <p style={{\r\n                    fontSize:'12px'\r\n                }}>\r\n                    Place the following tags to replace them with actual data while sending email\r\n                </p>\r\n                <ul style={{\r\n                    padding:'15px'\r\n                }}>\r\n                    <li style={{\r\n                        fontSize:'12px',\r\n                        marginBottom:'10px',\r\n                        lineHeight:1.7,\r\n                        fontWeight:500\r\n                    }}><b style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}>&lt;?=order.added?&gt; :</b> Order time</li>\r\n                    <li\r\n                    style={{\r\n                        fontSize:'12px',\r\n                        lineHeight:2,\r\n                        fontWeight:500\r\n                    }}\r\n                    ><b\r\n                    style={{\r\n                        borderRadius:\"15px\",\r\n                        backgroundColor:'#ddd',\r\n                        padding:\"1px 10px\"\r\n                    }}\r\n                    >&lt;?shippingAddress.firstName?&gt; :</b> Shipping first Name</li>\r\n                </ul>\r\n\r\n        </div>\r\n        </div>\r\n\r\n     </TabPane>\r\n\r\n    <TabPane tab=\"Admin\" key=\"2\">\r\n    <Input\r\n            label='Subject'\r\n            value={admin.subject}\r\n            name='subject'\r\n            onChange={(e:any) => {\r\n                setadmin({\r\n                    ...admin,\r\n                    subject: e.target.value\r\n                })\r\n            }}\r\n        />\r\n\r\n<h3 className='inputFieldLabel'>\r\n\tBody\r\n</h3>\r\n\r\n\r\n<CKEditor\r\neditor={ClassicEditor}\r\ndata={admin.body}\r\nonInit={editor => {\r\n    // You can store the \"editor\" and use when it is needed.\r\n    console.log('Editor is ready to use!', editor);\r\n}}\r\nonChange={(event, editor) => {\r\n    const data = editor.getData();\r\n    setadmin({\r\n        ...admin,\r\n        body: data\r\n    })\r\n}}\r\nonBlur={(event, editor) => {\r\n    console.log('Blur.', editor);\r\n}}\r\nonFocus={(event, editor) => {\r\n    console.log('Focus.', editor);\r\n}}\r\n/>\r\n\r\n     \r\n    </TabPane>\r\n\r\n</Tabs>\r\n\r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled,\r\n    EditOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport NewCustomerTemplate from \"./NewCustomerTemplate\";\r\nimport OrderStatusTemplateAutoEmail from \"./OrderStatusTemplateAutoEmail\";\r\nimport OrderTemplateAutoEmail from \"./OrderTemplateAutoEmail\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ConfigureAutoEmail = ({  }: Props) => {\r\n\r\n    const [getAutoEmailConfigurationState, handleGetAutoEmailConfigurationFetch] = useHandleFetch({}, 'getAutoEmailConfiguration');\r\n    const [configureAutoEmailConfigurationState, handleAutoEmailConfigurationFetch] = useHandleFetch({}, 'configureAutoEmail');\r\n \r\n    const [isnewCustomerAdmin,setnewCustomerAdmin] = useState(true);\r\n    const [isnewCustomerCustomer,setnewCustomerCustomer] = useState(true);\r\n    const [isorderAdmin,setorderAdmin] = useState(true);\r\n    const [isorderStatusAdmin,setorderStatusAdmin] = useState(true);\r\n    const [isorderCustomer,setorderCustomer] = useState(true);\r\n    const [isorderStatusCustomer,setIsorderStatusCustomer] = useState(true);\r\n\r\n    const [newcustomermodal, setnewcustomermodal] = useState(false);\r\n    const [ordermodal, setordermodal] = useState(false);\r\n    const [orderStatusmodal, setorderStatusmodal] = useState(false);\r\n\r\n\r\n    const handleUpdateAutoEmail = async () => {\r\n        const updateAutoEmailRes = await handleAutoEmailConfigurationFetch({\r\n            body: {\r\n                \"newCustomerAdmin\": isnewCustomerAdmin,\r\n                \"newCustomerCustomer\": isnewCustomerCustomer,\r\n                \"orderAdmin\": isorderAdmin, \r\n                \"orderCustomer\": isorderStatusAdmin, \r\n                \"orderStatusAdmin\": isorderCustomer, \r\n                \"orderStatusCustomer\": isorderStatusCustomer\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification('Auto email Configuration Updated!');\r\n        }\r\n        else {\r\n            openErrorNotification(\"Something went wrong, Couldn't updated Auto email configuration\");\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n                                <div style={{\r\n                                    display:'flex',\r\n                                    flexDirection:'column'\r\n                                }}>\r\n                                <div style={{\r\n                                }}>\r\n                                    \r\n                                    <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\"\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                                <h3 className='checkBoxFieldLabel'>\r\n                                                New Customer\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setnewcustomermodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n                                          <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}></div>\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                   checked={isnewCustomerAdmin}\r\n                                                   defaultChecked={isnewCustomerAdmin}\r\n                                                    onChange={(e) => setnewCustomerAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                  checked={isnewCustomerCustomer}\r\n                                                  defaultChecked={isnewCustomerCustomer}\r\n                                                onChange={(e) => setnewCustomerCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n</div>\r\n\r\n                                    <div>\r\n\r\n\r\n                                    <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\",\r\n                                            marginTop:'30px'\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                                <h3 className='checkBoxFieldLabel'>\r\n                                                 Order\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setordermodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n\r\n\r\n                                    <div style={{\r\n                                                marginTop:\"5px\"\r\n                                            }}></div>\r\n\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px',\r\n                                                \r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                      checked={isorderAdmin}\r\n                                                      defaultChecked={isorderAdmin}\r\n                                                    onChange={(e) => setorderAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                  checked={isorderCustomer}\r\n                                                  defaultChecked={isorderCustomer}\r\n                                                onChange={(e) => setorderCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                                \r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                                <div>\r\n                                                <div style={{\r\n                                                    display:'flex',\r\n                                                    alignItems:\"center\",\r\n                                                    marginTop:\"30px\"\r\n                                                }}>\r\n                                                <div style={{\r\n                                                    marginRight:'15px',\r\n                                                    marginTop:\"10px\"\r\n                                                }}>\r\n                                           <h3 className='checkBoxFieldLabel'>\r\n                                                 Order status\r\n                                                 </h3>\r\n                                                </div>\r\n                                                 <Button\r\n                                                 className='templateEditSmall'\r\n                                                    onClick={() => setorderStatusmodal(true)}\r\n                                                    type='link'\r\n                                                    icon={<EditOutlined />}\r\n                                                >\r\n                                                    configure Template\r\n                                                </Button>\r\n                                                </div>\r\n                                            <div style={{\r\n                                                marginTop:\"15px\"\r\n                                            }}></div>\r\n                                        <div style={{\r\n                                                display: 'flex',\r\n                                                marginTop:'15px'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n                                                        marginRight:'20px',\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n                                                    \r\n                                                   <Checkbox\r\n                                                    checked={isorderStatusAdmin}\r\n                                                    defaultChecked={isorderStatusAdmin}\r\n                                                    onChange={(e) => setorderStatusAdmin(e.target.checked)}\r\n                                                    >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                        Admin\r\n                                                   </span>                            \r\n                                                </Checkbox> \r\n                                               </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                <Checkbox \r\n                                                 checked={isorderStatusCustomer}\r\n                                                 defaultChecked={isorderStatusCustomer}\r\n                                                onChange={(e) => setIsorderStatusCustomer(e.target.checked)}\r\n                                                   >\r\n                                                    <span className='checkBoxSmallFieldLabel'>\r\n                                                    Customer\r\n                                                    </span>                            \r\n                                               </Checkbox> \r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n                                                <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n                                              \r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n</div>\r\n                                        \r\n\r\n\r\n                                        \r\n\r\n    </div>\r\n\r\n    <div style={{\r\n                                                marginTop:\"25px\"\r\n                                            }}></div>\r\n\r\n    <Button\r\n\r\n                                            onClick={(e: any) => handleUpdateAutoEmail()}\r\n                                            loading={configureAutoEmailConfigurationState.isLoading}\r\n                                            className='btnPrimaryClassNameoutline'\r\n                                            >\r\n                                            Update Auto Email Configuration\r\n                                            </Button>\r\n\r\n                                            \r\n                                            <div style={{\r\n                                                marginTop:\"5px\"\r\n                                            }}></div>\r\n\r\n        \r\n\r\n        <NewCustomerTemplate \r\n        visible={newcustomermodal}\r\n        setVisible={setnewcustomermodal}\r\n        />\r\n\r\n<OrderStatusTemplateAutoEmail \r\n        visible={orderStatusmodal}\r\n        setVisible={setorderStatusmodal}\r\n        />\r\n\r\n\r\n        <OrderTemplateAutoEmail \r\n        visible={ordermodal}\r\n        setVisible={setordermodal}\r\n        />\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\nexport default ConfigureAutoEmail;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    \"recipient\": \"\",\r\n    \"subject\": \"\",\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst ComposeCustomEmail = ({  }: Props) => {\r\n\r\n    const [sendCustomerEmailState, handleSendCustomEmailFetch] = useHandleFetch({}, 'sendCustomEmail');\r\n \r\n    const [isAuthenticated,setIsAuthenticated] = useState(true);\r\n    const [html,sethtml] = useState('');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleSendCustomEmailFetch({\r\n            body: {\r\n                \"recipient\": values.recipient.trim(),\r\n                \"subject\": values.subject.trim(),\r\n               \r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification('Email Sent!');\r\n        }\r\n        else {\r\n            openErrorNotification(\"Something went wrong, Couldn't send email\");\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    const handleAuthenticatedChange = (e) => {\r\n        setIsAuthenticated(e.target.checked);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n\r\n                                         \t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\r\n                                                    label='To'\r\n                                                    value={values.recipient}\r\n                                                    name='recipient'\r\n                                                    isError={(touched.recipient && errors.recipient) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['recipient'])}\r\n\r\n                                                    errorString={(touched.recipient && errors.recipient) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['recipient'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('recipient');\r\n                                                    }}\r\n                                                     />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n                                                    <Input\r\n                                                    label='Subject'\r\n                                                    value={values.subject}\r\n                                                    name='subject'\r\n                                                    isError={(touched.subject && errors.subject) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['subject'])}\r\n\r\n                                                    errorString={(touched.subject && errors.subject) ||\r\n                                                        (!isSubmitting && sendCustomerEmailState.error['error']['subject'])}\r\n                                                    onChange={(e: any) => {\r\n                                                        handleChange(e);\r\n                                                        setFieldTouched('subject');\r\n                                                    }}\r\n                                                />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\r\n\r\n            <h3 className='inputFieldLabel'>\r\n                Body\r\n            </h3>\r\n\r\n\r\n        <CKEditor\r\n        editor={ClassicEditor}\r\n        data={html}\r\n        onInit={editor => {\r\n            // You can store the \"editor\" and use when it is needed.\r\n            console.log('Editor is ready to use!', editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n            const data = editor.getData();\r\n            sethtml(data);\r\n        }}\r\n        onBlur={(event, editor) => {\r\n            console.log('Blur.', editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n            console.log('Focus.', editor);\r\n        }}\r\n        />\r\n    \r\n\r\n                                       <div style={{\r\n                                           marginTop:'20px'\r\n                                       }}></div>         \r\n                                          <Button\r\n\r\n                                            onClick={(e: any) => handleSubmit(e)}\r\n                                            loading={sendCustomerEmailState.isLoading}\r\n                                            className='btnPrimaryClassNameoutline'\r\n                                            >\r\n                                            Send\r\n                                            </Button>     \r\n\r\n                                            \r\n                                       <div style={{\r\n                                           marginTop:'10px'\r\n                                       }}></div>       \r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default ComposeCustomEmail;\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Inbox = (props: Props) => {\r\n    return (\r\n        <div className='sentEmailListContainer'>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            <div className=\"sentEmailListContainer__item\">\r\n                <h3>\r\n                    Tawhid Abdullah\r\n                </h3>\r\n                <h4>\r\n                {`Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                   Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                   voluptate! Laudantium omnis laboriosam pariatur,\r\n                    reiciendis exercitationem aliquam ducimus sed,\r\n                     reprehenderit, tenetur nihil delectus adipisci sapiente?`.length > 130 ? `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                     Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                     voluptate! Laudantium omnis laboriosam pariatur,\r\n                      reiciendis exercitationem aliquam ducimus sed,\r\n                       reprehenderit, tenetur nihil delectus adipisci sapiente?`.substring(0, 130) + '...' : `Lorem ipsum dolor, sit amet consectetur adipisicing elit. \r\n                       Repellat sapiente reprehenderit tempore aperiam! Ipsa, \r\n                       voluptate! Laudantium omnis laboriosam pariatur,\r\n                        reiciendis exercitationem aliquam ducimus sed,\r\n                         reprehenderit, tenetur nihil delectus adipisci sapiente?`}\r\n\r\n                 \r\n                </h4>\r\n                <h3>\r\n                   4:09PM\r\n                </h3>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inbox\r\n","import React from 'react';\r\n\r\n\r\n// import lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tabs } from 'antd';\r\n\r\n// import components \r\nimport ConfigureSTMP from \"./ConfigureSTMP\";\r\nimport ConfigureAutoEmail from \"./ConfigureAutoEmail\";\r\nimport ComposeCustomEmail from \"./ComposeCustomEmail\";\r\nimport Inbox from \"./Inbox\";\r\n\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined,\r\n\tFileImageFilled,\r\n\tFileImageOutlined,\r\n\tFileImageTwoTone,\r\n\tPlusOutlined,\r\n\tPlusCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n    InfoCircleOutlined,\r\n    InboxOutlined,\r\n    SettingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Sms = (props: Props) => {\r\n    return (\r\n        <>\r\n            <div className='siteInfoContainer'>\r\n\r\n                <Tabs defaultActiveKey=\"1\" >\r\n                <TabPane \r\n                    tab={\r\n                        <span>\r\n                        <InboxOutlined />\r\n                        Inbox\r\n                        </span>\r\n                    }\r\n             key=\"1\">\r\n                        <Inbox />\r\n                    </TabPane>\r\n\r\n                    <TabPane \r\n                    \r\n                    tab={\r\n                        <span>\r\n                        <PlusCircleOutlined />\r\n                        Compose Email\r\n                        </span>\r\n                    } key=\"2\">\r\n                        <ComposeCustomEmail />\r\n                    </TabPane>\r\n\r\n                    <TabPane \r\n                     tab={\r\n                        <span>\r\n                        <SettingOutlined />\r\n                        Configure STMP\r\n                        </span>\r\n                    }\r\n                    \r\n                   key=\"3\">\r\n                        <ConfigureSTMP />\r\n                    </TabPane>\r\n\r\n                    <TabPane\r\n                    \r\n                    tab={\r\n                        <span>\r\n                        <SettingOutlined />\r\n                        Configure Auto Email     \r\n                        </span>\r\n                    }\r\n                     key=\"4\">\r\n                        <ConfigureAutoEmail />\r\n                    </TabPane>\r\n\r\n                </Tabs>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sms\r\n","import React, {useEffect} from 'react'\r\n\r\n\r\n\r\n// import components\r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n\r\n\r\n// import lib\r\nimport { useHistory } from \"react-router\";\r\nimport { LogoutOutlined,\r\n    BellOutlined, \r\n    OrderedListOutlined,\r\n   TwitterSquareFilled,\r\n   ShoppingCartOutlined,\r\n   UserOutlined,\r\n    } from '@ant-design/icons';\r\n\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n\r\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\r\n\r\nconst { Header } = Layout;\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst NotificationList = (props: Props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch({}, 'getAllNotification');\r\n\r\n\r\n    const handleMenuClick = (e) => {\r\n        if (e.key === '3') {\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const getAllNotification = async () => {\r\n            await handleGetAllNOticationFetch({});\r\n        }\r\n\r\n        getAllNotification();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    console.log('getAllNotificationState',getAllNotificationState);\r\n\r\n\r\n    const typeIcon = {\r\n        customer: <UserOutlined />,\r\n        order: <ShoppingCartOutlined />\r\n    }\r\n\r\n    const menu = () => {\r\n\r\n        if (getAllNotificationState.isLoading) return (\r\n            <div style={{\r\n                height:'100%',\r\n                display:'flex',\r\n                justifyContent:'center',\r\n                alignItems:'center',\r\n                marginTop:'100px'\r\n            }}>\r\n                <Spin />\r\n            </div>\r\n        );\r\n\r\n\r\n\r\n        if (getAllNotificationState.done && getAllNotificationState.data && !getAllNotificationState.data[0]) {\r\n            return (\r\n                <div style={{\r\n                    height:'100%',\r\n                    display:'flex',\r\n                    justifyContent:'center',\r\n                    alignItems:'center',\r\n                    marginTop:'100px'\r\n                }}>\r\n                     <Empty title='No Notification found' />\r\n                </div>\r\n            )\r\n        }; \r\n\r\n\r\n        return (\r\n            <div className='notificationListItemContainer'>\r\n                        {getAllNotificationState.done\r\n                        && getAllNotificationState.data[0]\r\n                        && getAllNotificationState.data.map((item,index) => {\r\n                        return (\r\n                        <div\r\n                          onClick={() => history.push(`/admin/${item.type}/${item.id}`)}\r\n                          className='notificationListItemContainer__item'>\r\n                            <span className='notificationListItemContainer__item-icon'>\r\n                              {typeIcon[item['type']]}\r\n                            </span>\r\n                            <div className='notificationListItemContainer__item-info'>\r\n                                <h3>\r\n                                    {item.heading}\r\n                                </h3>\r\n                                <h4>\r\n                                    {item.text}\r\n                                </h4>\r\n                                <h2>\r\n                                <Moment >\r\n                                    {item.added}\r\n                                </Moment>\r\n                                </h2>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n        <div className='notificationList'>\r\n        <h3 className='notificationList__heading'>\r\n\t\t\tNotification\r\n\t    </h3>\r\n            {menu()}\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default NotificationList\r\n","import React, { useState } from 'react'; \r\nimport { Checkbox, Row, Col } from 'antd';\r\n\r\n\r\n\r\n\r\n\r\nconst AccessCheckbox = ({checkedList,setCheckedList,plainOptions,defaultValue=[]}) => {\r\n\r\n    const [interminate,setInterminate] = useState(true);\r\n    const [checkAll,setCheckAll] = useState(false); \r\n\r\n    const onChange = checkedList => {\r\n        setCheckedList(checkedList); \r\n        setInterminate(!!checkedList.length && checkedList.length < plainOptions.length); \r\n        setCheckAll(checkedList.length === plainOptions.length); \r\n      };\r\n      \r\n      const onCheckAllChange = e => {\r\n        setCheckedList(e.target.checked ? plainOptions : []); \r\n        setInterminate(false); \r\n        setCheckAll(e.target.checked)\r\n      };\r\n\r\n\r\n      console.log('defaultValue',defaultValue);\r\n\r\n    return (\r\n        <>\r\n        <div\r\n        style={{\r\n            borderBottom:\"1px solid #eee\",\r\n            marginBottom:'10px'\r\n        }}\r\n         className=\"site-checkbox-all-wrapper\">\r\n                <Checkbox\r\n                    style={{\r\n                        marginBottom:\"10px\"\r\n                    }}\r\n                    indeterminate={interminate}\r\n                    onChange={onCheckAllChange}\r\n                    checked={checkAll}\r\n                >\r\n                    Super Admin\r\n                </Checkbox>\r\n        </div>\r\n        <Checkbox.Group \r\n        style={{ width: '100%' }}\r\n         value={checkedList}\r\n         defaultValue={defaultValue}\r\n         onChange={onChange}>\r\n      <Row>\r\n      {plainOptions.map(accessItem => {\r\n          return (\r\n            <Col \r\n            style={{\r\n                marginBottom:\"10px\"\r\n            }}\r\n            span={8}>\r\n            <Checkbox value={accessItem}>\r\n                {accessItem}\r\n            </Checkbox>\r\n          </Col>\r\n          )\r\n      })}\r\n    </Row>\r\n  </Checkbox.Group>\r\n  </>\r\n    )\r\n}\r\n\r\nexport default AccessCheckbox; ","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\nimport AccessCheckbox from \"./AccessCheckbox\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Admin Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst plainOptions = [\r\n    'getCatalogue', 'postCatalogue', \r\n    'getDelivery', 'postDelivery', \r\n    'getOrder', 'postOrder',\r\n    'getBlog', 'postBlog', \r\n    'getPage', 'postPage',\r\n    'analytics',\r\n    'accounts'\r\n];\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateAdminRole');\r\n\tconst [accesscheckedList,setAccessCheckedList] = useState(category.role && category.role.length ? [...category.role]: [] );\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\taccess: accesscheckedList\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n                                    Select Admin Access \r\n                                </h3>\r\n\r\n\t\t\t\t\t\t\t<AccessCheckbox \r\n\t\t\t\t\t\t\tdefaultValue={category.role}\r\n                            plainOptions={plainOptions}\r\n                            checkedList={accesscheckedList}\r\n                            setCheckedList={setAccessCheckedList}\r\n                            />\r\n                           \r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport AccessCheckbox from \"./AccessCheckbox\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    phone: Yup.string()\r\n    .required('Please tell us your mobile number.')\r\n    .max(13, 'Please enter a valid mobile number.'),\r\n   password: Yup.string()\r\n    .label('Password')\r\n    .required()\r\n    .min(6, 'Password must have at least 6 characters'),\r\n  passwordConfirmation: Yup.string()\r\n    .label('Confirm password')\r\n    .required()\r\n    .min(6, 'Confirm password must have at least 6 characters')\r\n    .oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Admin Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirmation: '',\r\n    access: [],\r\n}\r\n\r\n\r\nconst plainOptions = [\r\n    'getCatalogue', 'postCatalogue', \r\n    'getDelivery', 'postDelivery', \r\n    'getOrder', 'postOrder',\r\n    'getBlog', 'postBlog', \r\n    'getPage', 'postPage',\r\n    'analytics',\r\n    'accounts'\r\n];\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewAdminRoles = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'adminRoleRegister');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [accesscheckedList,setAccessCheckedList] = useState([]);\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                email: values.email.trim(),\r\n                phone: values.phone,\r\n                password: values.password,\r\n                password2: values.passwordConfirmation,\r\n                access: accesscheckedList,\r\n\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            // openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\t\tif (!addTagState['isLoading']) {\r\n\t\t\tconst error = addTagState['error'];\r\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\t\t\t\tif (error['error']['registerError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\r\n\t\t\t\t} else if (error['error']['checkoutError']) {\r\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// setServerErrors(error['error']);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst errors =\r\n\t\t\t\t\tObject.values(error['error']).length > 0\r\n\t\t\t\t\t\t? Object.values(error['error'])\r\n\t\t\t\t\t\t: [];\r\n\t\t\t\terrors.forEach((err, i) => {\r\n\t\t\t\t\tif (typeof err === 'string') {\r\n\t\t\t\t\t\topenErrorNotification(err);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof err === 'object') {\r\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\r\n\t\t\t\t\t\t\tconst errs = Object.values(err);\r\n\t\t\t\t\t\t\terrs.forEach(err => {\r\n\t\t\t\t\t\t\t\topenErrorNotification(err);\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!addTagState['isLoading'] &&\r\n\t\t\tObject.keys(addTagState.data).length > 0\r\n\t\t) {\r\n\t\t\tif (addTagState['data']['status'] === 'ok') {\r\n\t\t\t\topenSuccessNotification('Admin Created Successfully');\r\n\t\t\t\t// history.push({\r\n\t\t\t\t//   pathname: '/orderDetails',\r\n\t\t\t\t//   state: checkoutState['data']\r\n\t\t\t\t// })\r\n\r\n\t\t\t\t// clearCart();\r\n\t\t\t\t// setIsModalShown(true);\r\n\t\t\t}\r\n\t\t}\r\n    }, [addTagState]);\r\n    \r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.phone || !values.password || !values.passwordConfirmation || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Register New Admin\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Name'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Phone'\r\n                                value={values.phone}\r\n                                name='phone'\r\n                                isError={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && addTagState.error['error']['phone'])}\r\n\r\n                                errorString={(touched.phone && errors.phone) ||\r\n                                    (!isSubmitting && addTagState.error['error']['phone'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('phone');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Email'\r\n                                value={values.email}\r\n                                name='email'\r\n                                isError={(touched.email && errors.email) ||\r\n                                    (!isSubmitting && addTagState.error['error']['email'])}\r\n\r\n                                errorString={(touched.email && errors.email) ||\r\n                                    (!isSubmitting && addTagState.error['error']['email'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('email');\r\n                                }}\r\n                            />\r\n                           \r\n\r\n                           <Input\r\n                                label='Password'\r\n                                value={values.password}\r\n                                name='password'\r\n                                type='password'\r\n                                isError={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password'])}\r\n\r\n                                errorString={(touched.password && errors.password) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('password');\r\n                                }}\r\n                            />\r\n\r\n\r\n                            <Input\r\n                                label='Confirm Password'\r\n                                value={values.passwordConfirmation}\r\n                                name='passwordConfirmation'\r\n                                type='password'\r\n                                isError={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && addTagState.error['error']['passwordConfirmation'])}\r\n\r\n                                errorString={(touched.passwordConfirmation && errors.passwordConfirmation) ||\r\n                                    (!isSubmitting && addTagState.error['error']['password2'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('passwordConfirmation');\r\n                                }}\r\n                            />\r\n\r\n                                <h3 className='inputFieldLabel'>\r\n                                    Select Admin Access \r\n                                </h3>\r\n\r\n                            <AccessCheckbox \r\n                            plainOptions={plainOptions}\r\n                            checkedList={accesscheckedList}\r\n                            setCheckedList={setAccessCheckedList}\r\n                            />\r\n                           \r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewAdminRoles;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select,Tag, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewAdmin from \"./AddNewAdmin\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Admin Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Admin');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Email\"\r\n\t\t\t\t\tdataIndex=\"email\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Phone\"\r\n\t\t\t\t\tdataIndex=\"phone\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Roles\"\r\n\t\t\t\t\tdataIndex=\"role\"\r\n\t\t\t\t\tkey=\"role\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={tags => (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t{tags && tags.length > 0 && tags.slice(0,3).map((tag) => (\r\n\t\t\t\t\t\t\t<Tag \r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tborderRadius:\"5px\"\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tcolor=\"blue\" key={tag}>\r\n\t\t\t\t\t\t\t{tag}\r\n\t\t\t\t\t\t\t</Tag>\r\n\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t{tags && tags.length === 3 && '.......'}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'adminList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconsole.log('adminListState',tagState);\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tAdmins\r\n            </h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search admins..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Admin found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewAdmin\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Admin Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n                description: values.description,\r\n            })\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Admin Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AdminEdit from \"./AdminEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'adminDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Admin Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <AdminEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Admin found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Bundle Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    category: any;\r\n    setvisible: any;\r\n    visible: any;\r\n    tagList: any;\r\n    setTagList: any;\r\n}\r\n\r\nconst ProductBundleQuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateBundle');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n                price: category.price,\r\n                ...category\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            const positionInTag = () => {\r\n                return tagList.map(item => item.id).indexOf(category.id);\r\n            }\r\n\r\n            const index = positionInTag();\r\n\r\n            // @ts-ignore\r\n            const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...category }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default ProductBundleQuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n\r\n// import libraries \r\nimport { Button, Tag, Input, Spin } from 'antd';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nconst { CheckableTag } = Tag;\r\nconst { Search } = Input;\r\n\r\ninterface Props {\r\n  setTagIds?: any;\r\n  selectedTags?: any;\r\n  setSelectedTags?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n  setTagIds,\r\n  setSelectedTags,\r\n  selectedTags\r\n\r\n}: Props) => {\r\n  const [options, setoptions] = useState([]);\r\n  const [selectedOpions, setselectedOptions] = useState([]);\r\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'postTagList');\r\n  const [searchValue, setsearchValue] = useState('');\r\n\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n\r\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\r\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.id;\r\n        }\r\n      });\r\n      setTagIds(selectedCategoryIds);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\r\n      const selectedCategoryIds = selectedTags.map((item) => {\r\n        const selectedcategory = tagState.data.find(\r\n          (cat) => cat.id === item\r\n        );\r\n        if (selectedcategory) {\r\n          return selectedcategory.name;\r\n        }\r\n      });\r\n      setSelectedTags(selectedCategoryIds);\r\n    }\r\n  }, [tagState]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const setTags = async () => {\r\n      const tagListRes = await handleTagListFetch({\r\n        urlOptions: {\r\n          params: {\r\n            isSubCategory: false\r\n          }\r\n        }\r\n      });\r\n\r\n      // @ts-ignoref\r\n      if (tagListRes && tagListRes.length > 0) {\r\n        // @ts-ignore\r\n        const tagOptions = tagListRes.map((tag) => {\r\n          return tag.name\r\n        });\r\n        setoptions(tagOptions);\r\n      }\r\n\r\n    };\r\n\r\n    setTags();\r\n  }, []);\r\n\r\n\r\n\r\n  // const handleChange = (selectItems) => {\r\n  //   setselectedOptions(selectItems)\r\n\r\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n  //     const selectedCategoryIds = selectItems.map((item) => {\r\n  //       const selectedcategory = tagState.data.find(\r\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n  //       );\r\n  //       if (selectedcategory) {\r\n  //         return selectedcategory.id;\r\n  //       }\r\n  //     });\r\n  //     setTagIds(selectedCategoryIds);\r\n  //   }\r\n\r\n\r\n  // }\r\n\r\n\r\n  const onSearchChange = (e) => {\r\n    setsearchValue(e.target.value);\r\n\r\n    if (e.target.value === '') {\r\n      if (tagState.data && tagState.data.length > 0) {\r\n        // @ts-ignore\r\n        const categoryNames = tagState.data.map((cat) => cat.name);\r\n        setoptions(categoryNames);\r\n      }\r\n    } else {\r\n      const newOptions =\r\n        options.length > 0\r\n          ? options.filter((option) => {\r\n            return option.toLowerCase().includes(searchValue.toLowerCase());\r\n          })\r\n          : [];\r\n\r\n      setoptions(newOptions);\r\n    }\r\n  };\r\n\r\n\r\n  console.log('selectedTags', selectedTags)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      {tagState.isLoading && (\r\n        <div style={{\r\n          padding: '15px 0',\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Spin />\r\n        </div>\r\n      )}\r\n\r\n\r\n\r\n      {tagState.done && !(tagState.data.length > 0) && (\r\n        <div style={{\r\n          width: '100%',\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}>\r\n          <Empty title='No Tag found' height={100} />\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* \r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\r\n        mode=\"multiple\"\r\n        placeholder=\"search tags\"\r\n        value={selectedOpions}\r\n        onChange={handleChange}\r\n        style={{ width: '100%' }}\r\n      >\r\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n          <Select.Option key={item} value={item}>\r\n            {item}\r\n          </Select.Option>\r\n        ))}\r\n      </Select>} */}\r\n\r\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\r\n        <>\r\n          <div className='addProduct__categoryBoxContainer-searchBox'>\r\n            <Search\r\n              width={'90%'}\r\n              style={{\r\n                height: '30px',\r\n                borderRadius: '3px !important',\r\n                borderColor: '#eee !important'\r\n              }}\r\n              size='middle'\r\n              placeholder='top, hot'\r\n              onSearch={(value) => console.log(value)}\r\n              onChange={onSearchChange}\r\n            />\r\n          </div>\r\n\r\n          {options.map(tag => (\r\n            <>\r\n              <CheckableTag\r\n                key={tag}\r\n                checked={selectedTags.indexOf(tag) > -1}\r\n                onChange={checked => handleChange(tag, checked)}\r\n              >\r\n                {tag}\r\n              </CheckableTag>\r\n            </>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n\r\n\r\n\r\n      {/* \r\n      <div style={{\r\n        marginTop: '15px'\r\n      }}>\r\n\r\n      </div>\r\n      <Button\r\n\r\n        // type=\"primary\"\r\n        className='btnSecondaryPlusOutline'\r\n        icon={<PlusOutlined />}\r\n      >\r\n        Add New\r\n      </Button> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import components \r\nimport Empty from \"../../components/Empty\";\r\n\r\n// import hoooks\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Input, Tree, Button, Spin } from 'antd';\r\nimport {\r\n\tPlusOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\ninterface Props {\r\n\tsetcategoryIds?: any;\r\n\tcategoryOptions?: any;\r\n\tsetCategoryOptions?: any;\r\n}\r\n\r\n\r\nconst Categories = ({ setcategoryIds, categoryOptions, setCategoryOptions }: Props) => {\r\n\tconst [options, setoptions] = useState([]);\r\n\tconst [searchValue, setsearchValue] = useState('');\r\n\r\n\tconst [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'postSelectCategoryList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCategories = async () => {\r\n\t\t\tconst categoryListRes = await handleCategoryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (categoryListRes && categoryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetoptions(categoryListRes);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCategories();\r\n\t}, []);\r\n\r\n\tconst onSelect = (selectedKeys, info) => {\r\n\t\t// console.log('selectedKeys', selectedKeys, info);\r\n\t};\r\n\r\n\r\n\tconst onCheck = (checkedKeys, info) => {\r\n\t\tconst checkedIds = checkedKeys.checked || [];\r\n\t\tsetcategoryIds(checkedIds);\r\n\t\tsetCategoryOptions(checkedIds);\r\n\t};\r\n\r\n\tconst onSearchChange = (e) => {\r\n\t\tsetsearchValue(e.target.value);\r\n\r\n\t\tif (e.target.value === '') {\r\n\t\t\tif (categoryState.data && categoryState.data.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst categoryNames = categoryState.data.map((cat) => cat.name);\r\n\t\t\t\tsetoptions(categoryNames);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst newOptions =\r\n\t\t\t\toptions.length > 0\r\n\t\t\t\t\t? options.filter((option) => {\r\n\t\t\t\t\t\treturn option.toLowerCase().includes(searchValue.toLowerCase());\r\n\t\t\t\t\t})\r\n\t\t\t\t\t: [];\r\n\r\n\t\t\tsetoptions(newOptions);\r\n\t\t}\r\n\t};\r\n\r\n\tconsole.log('categoryState', categoryState);\r\n\tconsole.log('optionsCat', options);\r\n\r\n\r\n\treturn (\r\n\t\t<div className='addProduct__categoryBoxContainer'>\r\n\r\n\t\t\t{categoryState.isLoading && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tpadding: '15px 0',\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Spin />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\r\n\t\t\t{categoryState.done && !(categoryState.data.length > 0) && (\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\talignItems: 'center'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<Empty title='No category found' height={100} />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{categoryState.done && categoryState.data.length > 0 && options.length > 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='addProduct__categoryBoxContainer-searchBox'>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\twidth={'100%'}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\theight: '30px',\r\n\t\t\t\t\t\t\t\tborderRadius: '3px !important',\r\n\t\t\t\t\t\t\t\tborderColor: '#eee !important'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='middle'\r\n\t\t\t\t\t\t\tplaceholder='cloths, grocery'\r\n\t\t\t\t\t\t\tonSearch={(value) => console.log(value)}\r\n\t\t\t\t\t\t\tonChange={onSearchChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t// marginLeft: \"-20px\",\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{options.length > 0 && (\r\n\t\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\t\tcheckable\r\n\t\t\t\t\t\t\t\tcheckedKeys={categoryOptions}\r\n\t\t\t\t\t\t\t\tonSelect={onSelect}\r\n\t\t\t\t\t\t\t\tonCheck={onCheck}\r\n\t\t\t\t\t\t\t\ttreeData={options}\r\n\t\t\t\t\t\t\t\tdefaultExpandAll={true}\r\n\t\t\t\t\t\t\t\tcheckStrictly={true}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\r\n\t\t\t)}\r\n\t\t\t{/* <div style={{\r\n\t\t\t\tmarginTop: '15px'\r\n\t\t\t}}>\r\n\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\r\n\t\t\t\t// type=\"primary\"\r\n\t\t\t\tclassName='btnSecondaryPlusOutline'\r\n\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t>\r\n\t\t\t\tAdd New\r\n      </Button> */}\r\n\r\n\t\t\t{/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { Select, Skeleton } from 'antd';\r\n\r\n\r\ninterface Props {\r\n    setProductIds?: any;\r\n    productIds?: any;\r\n}\r\n\r\n\r\nconst Tags = ({\r\n    setProductIds,\r\n    productIds\r\n}: Props) => {\r\n    const [options, setoptions] = useState([]);\r\n    const [selectedOpions, setselectedOptions] = useState([]);\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tagListRes = await handleTagListFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        isSubCategory: false\r\n                    }\r\n                }\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (tagListRes && tagListRes.length > 0) {\r\n                // @ts-ignore\r\n                const tagOptions = tagListRes.map((tag) => {\r\n                    return tag.name\r\n                });\r\n                setoptions(tagOptions);\r\n            }\r\n\r\n        };\r\n\r\n        setTags();\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (selectItems) => {\r\n        setselectedOptions(selectItems);\r\n\r\n        console.log('selectedProducts', selectItems);\r\n\r\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\r\n            const selectedCategoryIds = selectItems.map((item) => {\r\n                const selectedcategory = tagState.data.find(\r\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\r\n                );\r\n                if (selectedcategory) {\r\n                    return selectedcategory;\r\n                }\r\n            });\r\n            console.log('selectedCategoryIds', selectedCategoryIds);\r\n            setProductIds(selectedCategoryIds);\r\n        }\r\n        else {\r\n            setProductIds([])\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    // console.log('selectedOpions', selectedOpions);\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Skeleton loading={tagState.isLoading}>\r\n                {tagState.done && tagState.data.length > 0 && <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"search products\"\r\n                    value={selectedOpions}\r\n                    onChange={handleChange}\r\n                    style={{ width: '100%' }}\r\n                >\r\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\r\n                        <Select.Option key={item} value={item}>\r\n                            {item}\r\n                        </Select.Option>\r\n                    ))}\r\n                </Select>}\r\n            </Skeleton>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\n\r\n// import components\r\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\r\nimport Empty from \"../../components/Empty\";\r\n\r\nimport {\r\n    ShopOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\ninterface Props {\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewOrderSummary = ({\r\n    setProductList,\r\n    productList\r\n}: Props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                // @ts-ignore\r\n                flexDirection: 'flex'\r\n            }}\r\n            className='addOrderContainer__container-orderSummary'>\r\n            <div className='addOrderContainer__container-productItemContainer'>\r\n                {productList && productList.length > 0 && productList.map(item => {\r\n                    return <AddNewOrderProductItem\r\n                        setProductList={setProductList}\r\n                        productList={productList}\r\n                        productId={item._id}\r\n                        quantity={item.quantity}\r\n                        item={item}\r\n                        variation={item.variation}\r\n                    />;\r\n                })}\r\n\r\n                {!(productList.length > 0) && (\r\n                    <div style={{\r\n                        marginLeft: '32px'\r\n                    }}>\r\n                        <Empty title='No Product Added' height={150} />\r\n                    </div>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewOrderSummary\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import hooks \r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\n// import libraries \r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n\r\nimport {\r\n    DeleteOutlined,\r\n    FileAddOutlined,\r\n    CheckCircleOutlined,\r\n    FileImageFilled,\r\n    PlusOutlined,\r\n    PlusCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\r\nimport MetaTags from \"../category/MetaTags\";\r\n\r\n\r\nimport Tags from \"./Tags\";\r\nimport Brands from \"./Brands\";\r\nimport Categories from \"./Categories\";\r\nimport SelectProducts from \"./SelectProducts\";\r\nimport SelectedProductItems from \"./SelectedProductItems\";\r\n\r\n\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    url: \"\",\r\n    preparationTime: \"\",\r\n    servingSize: \"\",\r\n    cookingTime: '',\r\n    body: '',\r\n    bnName: '',\r\n\tbnBody: '',\r\n\tbnPreparationTime: '',\r\n\tbnServingSize: '',\r\n\tbnCookingTime: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible: any;\r\n    setAddNewCategoryVisible: any;\r\n    productList?: any;\r\n    setProductList?: any;\r\n}\r\n\r\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList }: Props) => {\r\n\r\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addPost');\r\n    const [visible, setvisible] = useState(false);\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n    const [categoryids, setcategoryIds] = useState([]);\r\n    const [tagIds, setTagIds] = useState([]);\r\n    const [brandId, setBrandId] = useState('');\r\n    const [pricing, setPricing] = useState([]);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [date, setDateFeild] = useState('');\r\n    const [time, setTimeFeild] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [bnBody, setBnBody] = useState('');\r\n    const [productIds, setProductIds] = useState([]);\r\n    const [productList, setProductList] = useState([]);\r\n\tconst [bnDescription, setBNDescription] = useState('এই পণ্য...');\r\n\tconst [metaTags,setMetaTags] = useState([]);\r\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\r\n\r\n\r\n    const [price, setPrice] = useState({\r\n        regular: null,\r\n        offer: null,\r\n    });\r\n\r\n\r\n    const makeEmptyCategoryOptions = (setEmpty) => {\r\n        setEmpty([]);\r\n    }\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        // @ts-ignore\r\n        const imagesIds = myImages ? myImages.map(image => {\r\n            return image.id;\r\n        }) : [];\r\n\r\n        const products = productList.length > 0 ? productList.map(product => {\r\n            return {\r\n                _id: product._id,\r\n                variation: product.variation,\r\n                quantity: product.quantity,\r\n            }\r\n        }) : [];\r\n\r\n\r\n        const addProductRes = await handleAddProductFetch({\r\n            body: {\r\n                name: values.name.trim(),\r\n                category: categoryids,\r\n                tags: tagIds,\r\n                brand: [brandId],\r\n                image: imagesIds,\r\n                body: body,\r\n                requiredProducts: products,\r\n                preparationTime: values.preparationTime,\r\n                servingSize: values.servingSize,\r\n                bnName: '',\r\n                bnBody: '',\r\n                bnPreparationTime: '',\r\n                bnServingSize: '',\r\n                bnCookingTime: '',\r\n                metaTitle: '',\r\n                bnMetaTitle: '',\r\n                metaDescription: '',\r\n                bnMetaDescription: '',\r\n                metaTags: '',\r\n                bnMetaTags: '',\r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tpreparationTime: values.bnPreparationTime,\r\n\t\t\t\t\tbody: values.bnBody,\r\n\t\t\t\t\tservingSize: values.bnServingSize,\r\n\t\t\t\t\tcookingTime: values.bnCookingTime,\r\n\t\t\t\t}\r\n            }\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (addProductRes && addProductRes.status === 'ok') {\r\n            openSuccessNotification('Recipe Created');\r\n            setAddNewCategoryVisible(false)\r\n\r\n            setBundleList([...bundleList, {\r\n                id: addProductRes['id'] || '',\r\n                key: addProductRes['id'] || '',\r\n                name: addProductRes['name'] || '',\r\n                // @ts-ignore\r\n                ...addProductRes\r\n            }])\r\n            // @ts-ignore\r\n            setmyImages([]);\r\n            setCoverImageId('');\r\n            setPricing([]);\r\n            setTagIds([]);\r\n            setSelectedTags([]);\r\n            setBrandId(\"\");\r\n            setcategoryIds([]);\r\n            setCategoryOptions([]);\r\n            actions.resetForm();\r\n        }\r\n        else {\r\n            // openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!addProductState['isLoading']) {\r\n            const error = addProductState['error'];\r\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\r\n\r\n\r\n                const errors =\r\n                    Object.values(error['error']).length > 0\r\n                        ? Object.values(error['error'])\r\n                        : [];\r\n                errors.forEach((err, i) => {\r\n                    if (typeof err === 'string') {\r\n                        openErrorNotification(err)\r\n                    }\r\n                    else if (typeof err === 'object') {\r\n                        if (err && Object.keys(err).length > 0) {\r\n                            const errs = Object.values(err);\r\n                            errs.forEach(err => {\r\n                                openErrorNotification(err)\r\n                            })\r\n\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }, [addProductState])\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (productIds.length > 0) {\r\n            if (productIds.length > productList.length) {\r\n                const variation = productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\r\n                console.log('variation', variation)\r\n\r\n                setProductList([...productList, {\r\n                    ...productIds[productIds.length - 1],\r\n                    _id: productIds[productIds.length - 1]['id'],\r\n                    variation: variation,\r\n                    quantity: 1\r\n                }]);\r\n            }\r\n\r\n\r\n            else if (productIds.length < productList.length) {\r\n                console.log('productIds', productIds);\r\n                console.log('productList', productList);\r\n\r\n                const newProductList = productList.filter(item => {\r\n                    let isTrue = false;\r\n                    productIds.forEach(product => {\r\n                        if (product.id === item._id) {\r\n                            isTrue = true;\r\n                        }\r\n                    });\r\n                    return isTrue;\r\n                })\r\n                setProductList(newProductList);\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            setProductList([]);\r\n        }\r\n        // console.log('productIds', productIds)\r\n\r\n\r\n    }, [productIds])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !(pricing.length > 0) || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n    const handleDeleteFromSelectedImage = () => {\r\n\r\n    };\r\n\r\n    const handleThumbnailImageDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        if (newImages.length > 0) {\r\n            setmyThumbnailImage(newImages);\r\n\r\n        }\r\n        else setmyThumbnailImage(false);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handleAddPricing = (priceItem) => {\r\n        setPricing([{\r\n            ...priceItem,\r\n            id: pricing.length\r\n        }, ...pricing])\r\n        message.info('Product Pricing Added');\r\n    }\r\n\r\n\r\n    const handleDeletePricing = (id) => {\r\n        const newPricing = pricing.filter(item => item.id !== id);\r\n        setPricing(newPricing);\r\n        message.info('Product Pricing Deleted');\r\n    }\r\n\r\n\r\n\r\n    const isCategoryInValid = () => {\r\n        if (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\r\n            return true;\r\n        }\r\n        else if (categoryids && categoryids.length > 0) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const handleDateChange = (date, dateString) => {\r\n        setDateFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n    const handleTimeChange = (date, dateString) => {\r\n        setTimeFeild(dateString);\r\n        // console.log('date', date, dateString);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px',\r\n\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: 0,\r\n                                padding: 0,\r\n                            }}\r\n                            width={'70vw'}\r\n                            title=\"Add New Recipe\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                            }}\r\n                        >\r\n\r\n                            <section className='addProductGridContainer'>\r\n                                <div className='addProductGridContainer__left'>\r\n                                    <div className='addProductGridContainer__name'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                             Recipe Information\r\n\t\t\t                                </h3>\r\n\r\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <Input\r\n                                                label='Name'\r\n                                                placeHolder='Rafti oxy'\r\n                                                value={values.name}\r\n                                                name='name'\r\n                                                isError={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n\r\n                                                errorString={(touched.name && errors.name) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['name'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('name');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='BN Name'\r\n                                                value={values.bnName}\r\n                                                placeHolder={'রাফতি অক্স'}\r\n                                                name='bnName'\r\n                                                isError={(touched.bnName && errors.bnName) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnName'])}\r\n\r\n                                                errorString={(touched.bnName && errors.bnName) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnName'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('bnName');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='Preparation Time'\r\n                                                value={values.preparationTime}\r\n                                                placeHolder='15 min'\r\n                                                name='preparationTime'\r\n                                                isError={(touched.preparationTime && errors.preparationTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['preparationTime'])}\r\n\r\n                                                errorString={(touched.preparationTime && errors.preparationTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['preparationTime'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('preparationTime');\r\n                                                }}\r\n                                            />\r\n\r\n                                                <Input\r\n                                                label='BN Preparation Time'\r\n                                                value={values.bnPreparationTime}\r\n                                                placeHolder={'১৫ মিনিট'}\r\n                                                name='bnPreparationTime'\r\n                                                isError={(touched.bnPreparationTime && errors.bnPreparationTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnPreparationTime'])}\r\n\r\n                                                errorString={(touched.bnPreparationTime && errors.bnPreparationTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnPreparationTime'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('bnPreparationTime');\r\n                                                }}\r\n                                            />\r\n\r\n                                           \r\n\r\n                                            \r\n                                            <Input\r\n                                                label='Cooking Time'\r\n                                                placeHolder={'30 min'}\r\n                                                value={values.cookingTime}\r\n                                                name='cookingTime'\r\n                                                isError={(touched.cookingTime && errors.cookingTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['cookingTime'])}\r\n\r\n                                                errorString={(touched.cookingTime && errors.cookingTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['cookingTime'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('cookingTime');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n                                            <Input\r\n                                                label='BN Cooking Time'\r\n                                                placeHolder={'৩০ মিনিট'}\r\n                                                value={values.bnCookingTime}\r\n                                                name='bnCookingTime'\r\n                                                isError={(touched.bnCookingTime && errors.bnCookingTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnCookingTime'])}\r\n\r\n                                                errorString={(touched.bnCookingTime && errors.bnCookingTime) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnCookingTime'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('bnCookingTime');\r\n                                                }}\r\n                                            />\r\n\r\n                                            <Input\r\n                                                label='Serving Size'\r\n                                                value={values.servingSize}\r\n                                                name='servingSize'\r\n                                                isError={(touched.servingSize && errors.servingSize) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['servingSize'])}\r\n\r\n                                                errorString={(touched.servingSize && errors.servingSize) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['servingSize'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('servingSize');\r\n                                                }}\r\n                                            />\r\n\r\n<Input\r\n                                                label='BN Serving Size'\r\n                                                value={values.bnServingSize}\r\n                                                name='bnServingSize'\r\n                                                isError={(touched.bnServingSize && errors.bnServingSize) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnServingSize'])}\r\n\r\n                                                errorString={(touched.bnServingSize && errors.bnServingSize) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['bnServingSize'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('bnServingSize');\r\n                                                }}\r\n                                            />\r\n\r\n                                            <Input\r\n                                                label='URL'\r\n                                                value={values.url}\r\n                                                name='url'\r\n                                                isError={(touched.url && errors.url) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['url'])}\r\n\r\n                                                errorString={(touched.url && errors.url) ||\r\n                                                    (!isSubmitting && addProductState.error['error']['url'])}\r\n                                                onChange={(e: any) => {\r\n                                                    handleChange(e);\r\n                                                    setFieldTouched('url');\r\n                                                }}\r\n                                            />\r\n\r\n\r\n\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Body\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={body}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setBody(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            <div style={{\r\n                                                marginTop:'15px'\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                BN Body\r\n                                            </h3>\r\n\r\n                                            <div style={{\r\n                                                width: '100%',\r\n                                                maxWidth: '100%'\r\n                                            }}>\r\n                                                <CKEditor\r\n                                                    editor={ClassicEditor}\r\n                                                    data={bnBody}\r\n                                                    onInit={editor => {\r\n                                                        // You can store the \"editor\" and use when it is needed.\r\n                                                        console.log('Editor is ready to use!', editor);\r\n                                                    }}\r\n                                                    onChange={(event, editor) => {\r\n                                                        const data = editor.getData();\r\n                                                        setBnBody(data);\r\n                                                    }}\r\n                                                    onBlur={(event, editor) => {\r\n                                                        console.log('Blur.', editor);\r\n                                                    }}\r\n                                                    onFocus={(event, editor) => {\r\n                                                        console.log('Focus.', editor);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n\r\n                                            {/* <div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\r\n                                            <div style={{\r\n                                                marginBottom: '15px'\r\n                                            }}></div>\r\n                                            {/* \r\n\t\t\t\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\r\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/> */}\r\n\r\n                                      \r\n\r\n\r\n\r\n                                  \r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__price'>\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Products\r\n\t\t                                    </h3>\r\n\r\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\r\n                                                <CheckCircleOutlined />\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Products\r\n                                            </h3>\r\n                                            <SelectProducts\r\n                                                setProductIds={setProductIds}\r\n                                                productIds={productIds}\r\n                                            />\r\n\r\n                                            <div style={{\r\n                                                marginTop: \"15px\"\r\n                                            }}></div>\r\n\r\n                                            <h3 className='inputFieldLabel'>\r\n                                                Selcted Products\r\n                                            </h3>\r\n\r\n                                            <SelectedProductItems\r\n                                                productList={productList}\r\n                                                setProductList={setProductList}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n                                        <div className='addProductGridContainer__item-header'>\r\n                                            <h3>\r\n                                                Image\r\n</h3>\r\n\r\n                                            <Tooltip\r\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n                                                <a href='###'>\r\n                                                    <InfoCircleOutlined />\r\n                                                </a>\r\n                                            </Tooltip>\r\n                                        </div>\r\n                                        <div className='addProductGridContainer__item-body'>\r\n\r\n\r\n\r\n                                            <div className='aboutToUploadImagesContainer'>\r\n                                                {myImages &&\r\n                                                    // @ts-ignore\r\n                                                    myImages.length > 0 && myImages.map((image, index) => {\r\n                                                        return (\r\n                                                            <div className='aboutToUploadImagesContainer__item'>\r\n                                                                <div\r\n                                                                    className='aboutToUploadImagesContainer__item-imgContainer'\r\n                                                                    onClick={() => setCoverImageId(image.id)}\r\n                                                                >\r\n                                                                    <img src={image.cover} alt={image.alt} />\r\n                                                                </div>\r\n\r\n                                                                <span\r\n                                                                    onClick={() => handleImagesDelete(image.id)}\r\n                                                                    className='aboutToUploadImagesContainer__item-remove'>\r\n                                                                    <CloseOutlined />\r\n                                                                </span>\r\n\r\n\r\n                                                                {coverImageId === image.id ? (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                ) : !coverImageId && index === 0 && (\r\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\r\n                                                                        <CheckOutlined />\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })}\r\n\r\n\r\n                                                <Tooltip\r\n                                                    title={'Attach images'}>\r\n\r\n                                                    <div\r\n                                                        onClick={() => {\r\n                                                            setvisible(true);\r\n                                                            setisModalOpenForImages(true);\r\n                                                            setisModalOpenForThumbnail(false);\r\n                                                        }}\r\n                                                        className='aboutToUploadImagesContainer__uploadItem'>\r\n                                                        {/* <FileAddOutlined />\r\n                                                        <FileImageTwoTone />\r\n                                                        <FileImageOutlined /> */}\r\n                                                        <FileImageFilled />\r\n                                                        {/* <h5>\r\n                                                                        Select From Library\r\n                                                                <     /h5> */}\r\n                                                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n                                                            <PlusOutlined />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n\r\n\r\n                                    <div className='addProductGridContainer__image'>\r\n\r\n<div className='addProductGridContainer__item-header'>\r\n    <h3>\r\n    Meta Data\r\n</h3>\r\n\r\n    <Tooltip\r\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\r\n        <a href='###'>\r\n            <InfoCircleOutlined />\r\n        </a>\r\n    </Tooltip>\r\n</div>\r\n<div className='addProductGridContainer__item-body'>\r\n\r\n                \r\n<Input\r\nlabel='Meta title'\r\nvalue={values.metaTitle}\r\nplaceHolder={'category...'}\r\nname='metaTitle'\r\nisError={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\n\r\nerrorString={(touched.metaTitle && errors.metaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaTitle')\r\n}}\r\n/>\r\n\r\n<Input\r\nlabel='BN Meta title'\r\nvalue={values.bnMetaTitle}\r\nplaceHolder={'ক্যাটাগড়ি...'}\r\nname='bnMetaTitle'\r\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\n\r\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaTitle');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='Meta description'\r\nvalue={values.metaDescription}\r\nplaceholder={'meta...'}\r\nname='metaDescription'\r\nisError={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\n\r\nerrorString={(touched.metaDescription && errors.metaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('metaDescription');\r\n}}\r\n/>\r\n\r\n<TextArea\r\nlabel='BN Meta Description'\r\nvalue={values.bnMetaDescription}\r\nplaceholder={'এইয় মেট...'}\r\nname='bnMetaDescription'\r\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\n\r\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\r\nonChange={(e: any) => {\r\nhandleChange(e);\r\nsetFieldTouched('bnMetaDescription');\r\n}}\r\n/>\r\n\r\n<h3 className='inputFieldLabel'>\r\nMeta Tags (grocery,fashion)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n<div style={{\r\nmarginTop:'15px'\r\n}}></div>\r\n\r\n<h3 className='inputFieldLabel'>\r\nBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n</h3>\r\n\r\n<MetaTags\r\n// @ts-ignore\r\nsetTags={setBnMetaTags}\r\ntags={metaTags}\r\n/>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n                                </div>\r\n                                <div className='addProductGridContainer__right'>\r\n                                    <div className='addProductGridContainer__category'>\r\n\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                    Recipe Categories\r\n\t\t\t\t                                </h3>\r\n\r\n                                                <Tooltip\r\n                                                    color='red'\r\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\r\n                                                    placement=\"left\" title={'Select at least one category'}>\r\n                                                    <div className={!(categoryids.length > 0)\r\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\r\n                                                        <CheckCircleOutlined />\r\n                                                    </div>\r\n                                                </Tooltip>\r\n\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Categories\r\n                                                    setCategoryOptions={setCategoryOptions}\r\n                                                    categoryOptions={categoryOptions}\r\n                                                    setcategoryIds={setcategoryIds} />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                    <div className='addProductGridContainer__tag'>\r\n                                        <div className='addProductGridContainer-rightItemContainer'>\r\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\r\n                                                <h3>\r\n                                                Recipe Tags\r\n\t\t\t\t</h3>\r\n                                            </div>\r\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\r\n                                                <Tags\r\n                                                    setSelectedTags={setSelectedTags}\r\n                                                    selectedTags={selectedTags}\r\n                                                    setTagIds={setTagIds} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisible}\r\n                            visible={visible}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            setmyThumbnailImage={setmyThumbnailImage}\r\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\r\n                            isModalOpenForImages={isModalOpenForImages}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewProduct;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\nProduct variation ---->\r\n\r\nPrice [title]\r\n\t[regular input field] [offer inputfield]\r\n\r\nStock [title]\r\n\t[available input field] [minimum inputfield]\r\n\r\ndefault [default can be set to true]\r\n\r\nattributes [title]\r\n\t[add attributes name]\r\n\t\t[add attrubutes value]\r\n\r\n\t[add attributes name]\r\n\t\t[add attrubutes value\r\n\r\n*///","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\nimport Moment from 'react-moment';\r\n\r\n\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleQuickEdit from \"./PostQuickEdit\"\r\nimport AddNewProductBundle from \"./AddNewPost\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Recipe Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n    const [visible, setvisible] = useState(false);\r\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteBundle');\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleDeleteTag = async (id) => {\r\n        const deleteTagRes = await handleDeleteTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id,\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n        // @ts-ignore\r\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\r\n            openSuccessNotification('Deleted Recipe');\r\n            const newtagList = data.filter(item => item.id !== id);\r\n            setTagList(newtagList);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleOk = (e: any) => {\r\n        setvisible(false);\r\n\r\n    };\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                // expandable={{\r\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                //   }}\r\n                // bordered={true}\r\n                size='small'\r\n                // pagination={false}\r\n                dataSource={data}\r\n            >\r\n\r\n                <Column\r\n                    title=\"\"\r\n                    dataIndex=\"cover\"\r\n                    key=\"id\"\r\n                    width={'80px'}\r\n\r\n                    className='classnameofthecolumn'\r\n\r\n                    render={(cover, record: any) => (\r\n                        <>\r\n                            <img\r\n                                onClick={() => {\r\n                                    history.push(`/admin/posts/${record.id}`)\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                src={cover} alt='cover img' style={{\r\n                                    height: '40px',\r\n                                    width: '40px',\r\n                                    objectFit: \"contain\",\r\n                                    borderRadius: '3px',\r\n                                    cursor: 'pointer'\r\n                                }} />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Name\"\r\n                    dataIndex=\"name\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n\r\n                            <h4\r\n                                onClick={() => {\r\n                                    history.push(`/admin/posts/${record.id}`)\r\n                                    // setBrandDetailVisible(true);\r\n                                    setactiveCategoryForEdit(record)\r\n                                }}\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                {text}\r\n                            </h4>\r\n\r\n\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Column\r\n                    title=\"Price\"\r\n                    dataIndex=\"price\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n\r\n                <Column\r\n                    title=\"Product\"\r\n                    dataIndex=\"productCount\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                />\r\n\r\n                <Column\r\n                    title=\"Start Date\"\r\n                    dataIndex=\"startDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n                    render={(text, record: any) => (\r\n                        <>\r\n                            <h4\r\n                                style={{\r\n                                    fontWeight: 400,\r\n                                    color: '#555',\r\n                                    cursor: 'pointer'\r\n                                }}>\r\n                                <Moment >\r\n                                    {text}\r\n                                </Moment>\r\n\r\n                            </h4>\r\n                        </>\r\n                    )}\r\n\r\n                />\r\n\r\n                <Column\r\n                    title=\"End Date\"\r\n                    dataIndex=\"endDate\"\r\n                    key=\"id\"\r\n                    className='classnameofthecolumn'\r\n\r\n                />\r\n\r\n                <Column\r\n\r\n                    className='classnameofthecolumn'\r\n                    title=\"\"\r\n                    key=\"action\"\r\n                    align='right'\r\n                    render={(text, record: any) => (\r\n                        <Space size=\"middle\">\r\n                            <a href='##'>\r\n                                <Tooltip placement=\"top\" title='Quick Edit recipe'>\r\n                                    <span className='iconSize' onClick={() => {\r\n                                        setvisible(true)\r\n                                        setactiveCategoryForEdit(record);\r\n                                    }}>\r\n                                        <EditOutlined />\r\n                                    </span>\r\n                                </Tooltip>\r\n                            </a>\r\n\r\n\r\n\r\n                            <Popconfirm\r\n                                onConfirm={() => handleDeleteTag(record.id)}\r\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n                                <span\r\n                                    className='iconSize iconSize-danger'\r\n                                >\r\n                                    <DeleteOutlined />\r\n                                </span>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {activeCategoryForEdit && <ProductBundleQuickEdit\r\n                tagList={data}\r\n                setTagList={setTagList}\r\n                setvisible={setvisible}\r\n                visible={visible}\r\n                category={activeCategoryForEdit}\r\n                 />}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n    const [tagList, setTagList] = useState([]);\r\n\r\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'postList');\r\n\r\n\r\n\r\n    console.log('postListData',tagState);\r\n\r\n\r\n    useEffect(() => {\r\n        const setTags = async () => {\r\n            const tags = await handleTagListFetch({});\r\n            // @ts-ignore\r\n            setTagList(tags);\r\n        }\r\n        setTags();\r\n    }, [])\r\n\r\n\r\n\r\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    const handleOkAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n\r\n    };\r\n\r\n    const handleCancelAddNewCategory = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n    const handleSearch = (value) => {\r\n        if (tagState.data.length > 0) {\r\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n            setTagList(newTagList);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='categoryListContainer'>\r\n                <div className='categoryListContainer__header'>\r\n                    <div className='categoryListContainer__header-searchBar-tag'>\r\n                        <h2 className='categoryListContainer__header-title'>\r\n                        Recipes\r\n                       </h2>\r\n                        <Search\r\n                            enterButton={false}\r\n                            className='searchbarClassName'\r\n                            placeholder=\"search recipes..\"\r\n                            onSearch={value => handleSearch(value)}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        // type=\"primary\"\r\n                        className='btnPrimaryClassNameoutline'\r\n                        icon={<PlusOutlined />}\r\n                        onClick={() => setAddNewCategoryVisible(true)}\r\n                    >\r\n                        Add New\r\n\t\t\t\t\t</Button>\r\n                </div>\r\n                <div className='categoryListContainer__categoryList'>\r\n                    {tagState.done && tagList.length > 0 && <MyTable\r\n                        setTagList={setTagList}\r\n                        data={tagList} />}\r\n                    {tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n                    {tagState.done && !(tagList.length > 0) && (\r\n                        <div style={{\r\n                            marginTop: '200px'\r\n                        }}>\r\n                            <Empty description='No Recipe found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <AddNewProductBundle\r\n                productList={tagList}\r\n                setProductList={setTagList}\r\n                addNewCategoryVisible={addNewCategoryVisible}\r\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\r\n\r\n\r\n// import moment\r\nimport Moment from \"react-moment\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ProductBundleEdit from \"./PostEdit\";\r\nimport CouponProducts from \"../coupon/CouponProducts\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'postDetail');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const productId = params['id'];\r\n\r\n    const [productEditVisible, setProductEditVisible] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const getProductDetail = async () => {\r\n            console.log('fuckit')\r\n            await handleProductDetailFetch({\r\n                urlOptions: {\r\n                    params: {\r\n                        categoryOne: 1,\r\n                        tagsOne: 1\r\n                    },\r\n                    placeHolders: {\r\n                        id: productId,\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getProductDetail();\r\n\r\n    }, [productId]);\r\n\r\n\r\n    \r\n\r\n    console.log('productDetailState', productDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\r\n\r\n\r\n    console.log('bundleDetail', productDetailState);\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipe Detail\r\n                </h3>\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        {/* <ProductBundleEdit\r\n                            productEditVisible={productEditVisible}\r\n                            setProductEditVisible={setProductEditVisible}\r\n                            productDetailData={productDetailState.data}\r\n                        /> */}\r\n                        {/* <Button\r\n                            onClick={() => setProductEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button> */}\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={productDetailState.isLoading}>\r\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\r\n                    <Empty description='No Recipe found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\r\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {productDetailState.data['name']}\r\n                                </h2>\r\n                                <h4>\r\n                                    {productDetailState.data['price']}\r\n                                </h4>\r\n                                <h3>\r\n                                    {productDetailState.data['description']}\r\n                                </h3>\r\n\r\n                                {productDetailState.data['startDate'] && (\r\n                                    <h3>\r\n                                        START DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                                {productDetailState.data['endDate'] && (\r\n                                    <h3>\r\n                                        END DATE:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n\r\n\r\n                                {productDetailState.data['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {productDetailState.data['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n                                {/* \r\n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            TAGS:\r\n                                        {productDetailState.data['tags'].map(tag => {\r\n                                            return (\r\n                                                <span>\r\n                                                    {tag.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n\r\n                                    </>)\r\n                                } */}\r\n\r\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\r\n                                    (<>\r\n                                        <h3>\r\n                                            CATEGORIES:\r\n                                        {productDetailState.data['category'].map(cat => {\r\n                                            return (\r\n                                                <span\r\n                                                    onClick={() => history.push(`/admin/posts/category/${cat.id}`)}\r\n\r\n                                                >\r\n                                                    {cat.name}\r\n                                                </span>\r\n                                            )\r\n                                        })}\r\n                                        </h3>\r\n                                    </>)\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {productDetailState.data['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                            </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n\r\n                        {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data['products'] && (\r\n                            <div className='brandDetailContainer__heading'>\r\n                                <h3>\r\n                                    Products\r\n                               </h3>\r\n                            </div>\r\n                        )\r\n                        }\r\n\r\n\r\n                        <div className='brandDetailContainer__body'>\r\n                            {productDetailState.done && productDetailState.data && productDetailState.data['products'] && !(productDetailState.data['products'].length > 0) && (\r\n                                <div style={{\r\n                                    marginTop: '100px'\r\n                                }}>\r\n                                    <Empty description='No Products exists for this Recipe' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                                </div>\r\n                            )}\r\n\r\n                            {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\r\n                                <>\r\n                                    {productDetailState.data['products'] && productDetailState.data['products'].length > 0 &&\r\n                                        productDetailState.data['products'].map(product => {\r\n                                            return (\r\n                                                <CouponProducts\r\n                                                    quantity={product.quantity}\r\n                                                    productId={product['_id']} />\r\n                                            )\r\n                                        })}\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Brand\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\r\n\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['brand']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['brand']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Primary Category\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\r\n                                    className='brandDetailContainer__brand'>\r\n                                    <div className='brandDetailContainer__brand-coverbox'>\r\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\r\n                                    </div>\r\n                                    <div className='brandDetailContainer__brand-info'>\r\n                                        <h2>\r\n                                            {productDetailState.data['primaryCategory']['name']}\r\n                                        </h2>\r\n                                        <h3>\r\n                                            {productDetailState.data['primaryCategory']['description']}\r\n                                        </h3>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n                    </>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"../../../pages/category/MetaTags\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postAddTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n    const [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n                metaTitle: values.metaTitle,\r\n                metaDescription: values.metaDescription,\r\n                metaTags: tags.join(','),\r\n\r\n\r\n                \r\n                bn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Post Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                  \t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tplaceHolder={'new,fresh'}\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'নতুন,ফ্রেশ'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n                                name='description'\r\n                                placeholder={'This tag...'}\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ট্যাগ...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n                                \r\n<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewTag from \"./AddNewPostTag\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Recipe Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Recipe Tag');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/posts/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Recipe tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'postTagList');\r\n\r\n\tconsole.log('recipetaglist',tagState); \r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tRecipe Tags\r\n         \t\t\t\t</h2>\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search recipe tags..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '200px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Recipe tags found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewTag\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n    setTagDetailData?:any; \r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            setTagDetailData({\r\n                id:values.id,\r\n                key:values.id,\r\n                name: values.name,\r\n                description: values.description,\r\n            })\r\n            console.log('categoryupdateTagRes',updateTagRes);\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Tag Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport TagEdit from \"./TagEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'postTagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n    const [tagDetailData,setTagDetailData] = useState({}); \r\n\r\n    \r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            const tagDetailRes =  await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(tagDetailRes){\r\n                console.log('tagDetailRes',tagDetailRes);\r\n                // @ts-ignore\r\n                setTagDetailData(tagDetailRes);\r\n            }\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Recipe Tag Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <>\r\n                        <TagEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailData}\r\n                            setTagDetailData={setTagDetailData}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\r\n                    <Empty description='No Recipe Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailData['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailData['description']}\r\n                            </h3>\r\n                            {tagDetailData['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailData['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                \r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this recipe tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","// @ts-nocheck\r\nimport React,{useEffect, useState} from 'react'; \r\nimport { Tag, Input, Tooltip } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nclass MetaTags extends React.Component {\r\n  state = {\r\n    tags: [],\r\n    inputVisible: false,\r\n    inputValue: '',\r\n    editInputIndex: -1,\r\n    editInputValue: '',\r\n  };\r\n\r\n\r\n\r\n  handleClose = removedTag => {\r\n    const {setTags,tags} = this.props;\r\n    const localTags = tags.filter(tag => tag !== removedTag);\r\n    setTags(localTags);\r\n  };\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleInputConfirm = () => {\r\n      console.log('handleInputConfirm',this.props);\r\n    const { inputValue } = this.state;\r\n    let { tags, setTags } = this.props;\r\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\r\n      tags = [...tags, inputValue];\r\n    }\r\n    setTags(tags);\r\n    this.setState({\r\n      inputVisible: false,\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  handleEditInputChange = e => {\r\n    this.setState({ editInputValue: e.target.value });\r\n    console.log('tagValue',e.target.value);\r\n  };\r\n\r\n  handleEditInputConfirm = () => {\r\n    this.setState(({ editInputIndex, editInputValue }) => {\r\n      return {\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n      };\r\n    });\r\n\r\n    const newTags = [...this.props.tags];\r\n    newTags[editInputIndex] = editInputValue;\r\n    this.props.setTags(newTags);\r\n  };\r\n\r\n  saveInputRef = input => {\r\n    this.input = input;\r\n  };\r\n\r\n  saveEditInputRef = input => {\r\n    this.editInput = input;\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n    const { placeholder,tags } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {tags && tags.length > 0 && tags.map((tag, index) => {\r\n          if (editInputIndex === index) {\r\n            return (\r\n              <Input\r\n                ref={this.saveEditInputRef}\r\n                key={tag}\r\n                size=\"small\"\r\n                placeholder={placeholder}\r\n                className=\"tag-input\"\r\n                value={editInputValue}\r\n                onChange={this.handleEditInputChange}\r\n                onBlur={this.handleEditInputConfirm}\r\n                onPressEnter={this.handleEditInputConfirm}\r\n              />\r\n            );\r\n          }\r\n\r\n          const isLongTag = tag.length > 20;\r\n\r\n          const tagElem = (\r\n            <Tag\r\n              className=\"edit-tag\"\r\n              key={tag}\r\n              closable={index !== 0}\r\n              onClose={() => this.handleClose(tag)}\r\n            >\r\n              <span\r\n                onDoubleClick={e => {\r\n                  if (index !== 0) {\r\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\r\n                      this.editInput.focus();\r\n                    });\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n              </span>\r\n            </Tag>\r\n          );\r\n          return isLongTag ? (\r\n            <Tooltip title={tag} key={tag}>\r\n              {tagElem}\r\n            </Tooltip>\r\n          ) : (\r\n            tagElem\r\n          );\r\n        })}\r\n        {inputVisible && (\r\n          <Input\r\n          style={{\r\n            margin: \"10px 0\"\r\n          }}\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            className=\"tag-input\"\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag className=\"site-tag-plus edit-tag\" onClick={this.showInput}>\r\n            <PlusOutlined /> New Value\r\n          </Tag>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaTags","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message } from 'antd';\r\n\r\nimport {\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tFileImageFilled,\r\n\tPlusOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\n\r\n// import ReactQuill from 'react-quill';\r\n// import 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\nimport MetaTags from \"./MetaTags\";\r\n\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tbnName: '',\r\n\tdescription: '',\r\n\tbnDescription: '',\r\n\tmetaTitle: '',\r\n\tbnMetaTitle: '',\r\n\tmetaDescription: '',\r\n\tbnMetaDescription: '',\r\n\tmetaTags: '',\r\n\tbnMetaTags: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcategoryList?: any;\r\n\tsetcategoryList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\r\n\r\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postAddCategory');\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\r\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [tags,setTags] = useState([]);\r\n\tconst [bnTags,setBnTags] = useState([]);\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\t// @ts-ignore\r\n\t\tconst imagesIds = myImages ? myImages.map(image => {\r\n\t\t\treturn image.id;\r\n\t\t}) : [];\r\n\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tformData.append(\"name\", values.name.trim());\r\n\t\tformData.append(\"description\", values.description);\r\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\r\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\r\n\t\tformData.append(\"parent\", selectedParentId);\r\n\t\tformData.append('icon', imageFile)\r\n\r\n\r\n\r\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\timage: imagesIds,\r\n\t\t\t\tcover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\r\n\t\t\t\tparent: selectedParentId,\r\n\t\t\t\ticon: imageFile,\r\n\t\t\t\tmetaTitle: values.metaTitle,\r\n\t\t\t\tmetaDescription: values.metaDescription,\r\n\t\t\t\tmetaTags: tags.join(','),\r\n\t\t\t\tbn: {\r\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\r\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\r\n\t\t\t\t\tmetaTags: bnTags.join(','),\r\n\t\t\t\t\tname: values.bnName.trim(),\r\n\t\t\t\t\tdescription: values.bnDescription,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Post Category Created!');\r\n\t\t\tsetAddNewCategoryVisible(false)\r\n\r\n\t\t\tsetcategoryList([...categoryList, {\r\n\t\t\t\tid: addCategoryRes['_id'] || '',\r\n\t\t\t\tkey: addCategoryRes['_id'] || '',\r\n\t\t\t\tname: addCategoryRes['name'] || '',\r\n\t\t\t\tdescription: addCategoryRes['description'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCategoryRes\r\n\t\t\t}])\r\n\r\n\t\t\tactions.resetForm();\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetmyImages([]);\r\n\t\t\tsetCoverImageId('')\r\n\t\t\tsetselectedParentId('')\r\n\t\t\tsetisparentcategoryChecked(true);\r\n\t\t\tsetImageUrl('');\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onSwitchChange = (checked: any) => {\r\n\t\tsetisparentcategoryChecked(checked)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tsetmyImages(newImages);\r\n\t}\r\n\r\n\r\n\tconst handleThumbnailImageDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\tif (newImages.length > 0) {\r\n\t\t\tsetmyThumbnailImage(newImages);\r\n\r\n\t\t}\r\n\t\telse setmyThumbnailImage(false);\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\tconsole.log('addnewCategoryTags',tags);\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Post Category\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Name'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Name'\r\n\t\t\t\t\t\t\t\tvalue={values.bnName}\r\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\r\n\t\t\t\t\t\t\t\tname='bnName'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked onChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 300 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{categoryList.length > 0 && categoryList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\r\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\r\n\t\t\t\t\t\t\t\tname='metaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\r\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Meta description'\r\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\r\n\t\t\t\t\t\t\t\tname='metaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\r\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\r\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\r\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\r\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setTags}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\t />\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop:'15px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\r\n\t\t\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t\t\t<MetaTags\r\n\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\tsetTags={setBnTags}\r\n\t\t\t\t\t\t\ttags={bnTags}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\r\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\r\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Table, notification,  Space, Tag,Button, Input,Tooltip, Popconfirm  } from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,CheckCircleOutlined } from '@ant-design/icons';\r\n\r\nimport {QuickEdit} from \"../../category\"; \r\nimport AddNewPostCategory from \"./AddNewPostCategory\";\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport Empty from \"../../../components/Empty\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Post Recipe Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setcategoryList?:any; \r\n  history?: any; \r\n} \r\n\r\n\r\nconst MyTable = ({data, setcategoryList, history}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n    const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch({}, 'deleteCategory');\r\n      // console.log('activeCategoryForEdit',activeCategoryForEdit); \r\n\r\n\r\n      const handleDeleteCategory = async (id) => {\r\n        const deleteCategoryRes = await handleDeleteCategoryFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n          \t  // @ts-ignore\r\n\t\t  if(deleteCategoryRes && deleteCategoryRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Recipe Category'); \r\n\t\t\t  const newCategoryList =  data.filter(item => item.id !== id);\r\n\t\t\t  setcategoryList(newCategoryList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n            <Column \r\n          title=\"\"\r\n           dataIndex=\"cover\"\r\n            key=\"id\" \r\n            width={'80px'}\r\n            \r\n           className='classnameofthecolumn'\r\n\r\n            render={(cover,record: any) => (\r\n                <>\r\n                <img src={cover} \r\n                   onClick={() => {\r\n                    history.push(`/admin/posts/category/${record.id}`)\r\n                    // setcategoryDetailVisible(true);\r\n                    setactiveCategoryForEdit(record)\r\n                  }}\r\n                alt='cover img' \r\n                style={{\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    objectFit: \"contain\",\r\n                    borderRadius:'3px',\r\n                    cursor: 'pointer'\r\n                }} />\r\n                </>\r\n              )}\r\n            />\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/posts/category/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n\r\n                }}>\r\n                {text}\r\n              </h4>\r\n\r\n\r\n            </>\r\n          )}\r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"Description\" \r\n           dataIndex=\"description\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n         <Column\r\n           title=\"Sub Cateogory\" \r\n           dataIndex=\"subCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n        <Column\r\n           title=\"Product\" \r\n           dataIndex=\"productCount\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Category'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n\r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCategory(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n\t\t        <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    setcategoryList={setcategoryList}\r\n    categoryList={data}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    category={activeCategoryForEdit}/>}\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CategoryList = ({history}: Props) => {\r\n\r\n  const [categoryState, handleCategoryListFetch] = useHandleFetch({}, 'postCategoryList');\r\n  const [categoryList,setcategoryList] = useState([]); \r\n\r\n\r\n  useEffect(()=>{\r\n   const setCategories = async () => {\r\n     const categories = await handleCategoryListFetch({\r\n      urlOptions: {\r\n        params: {\r\n          isSubCategory: true,\r\n          productCountValue: true \r\n        },\r\n      },\r\n     }); \r\n     // @ts-ignore\r\n     setcategoryList(categories); \r\n   }\r\n   setCategories(); \r\n  },[])\r\n\r\n\r\n  \r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  const handleOkAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  const handleCancelAddNewCategory = (e: any) => {\r\n    setAddNewCategoryVisible(false);\r\n  };\r\n\r\n  // console.log('categoryState',categoryState); \r\n\r\n  \r\n\r\n  const handleSearch = (value) => {\r\n    if(categoryState.data.length > 0 ){\r\n      const newCategoryList = categoryState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setcategoryList(newCategoryList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n  console.log('postCategoryList', categoryState);\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n              Recipe Categories\r\n          </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search recipe categories..\"\r\n          onSearch={value => handleSearch(value)}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n            Add New\r\n        </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n                placeholder=\"search categories..\"\r\n                size=\"large\"\r\n                onSearch={value => console.log(value)}\r\n                style={{ width: 300 }}\r\n           /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {categoryState.done && categoryList.length > 0 && <MyTable \r\n        history={history}\r\n        setcategoryList={setcategoryList}\r\n        data={categoryList} />}\r\n        {categoryState.isLoading && <DataTableSkeleton />}\r\n\r\n        {categoryState.done && !(categoryList.length > 0) && (\r\n\t\t\t<div style={{\r\n\t\t\t\tmarginTop: '50px'\r\n\t\t\t}}>\r\n\t\t\t\t<Empty title='No Recipe Category found'   />\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n        {categoryState.done && \r\n          <AddNewPostCategory \r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          categoryList={categoryList}\r\n          setcategoryList={setcategoryList}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CategoryList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip, Spin } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tFileAddOutlined,\r\n\tDeleteOutlined,\r\n\tCheckCircleOutlined,\r\n\tCloseOutlined,\r\n\tCheckOutlined,\r\n\tInfoCircleOutlined,\r\n\tPlusOutlined,\r\n\tFileImageFilled,\r\n\tLoadingOutlined\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Recipe Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: '',\r\n\timage: [],\r\n\turl: '',\r\n\tcover: ''\r\n}\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategoryEditVisible?: any;\r\n\tsetCategoryEditVisible?: any;\r\n\tcategoryDetailData?: any;\r\n\tsetcategoryDetailData?:any; \r\n}\r\n\r\nconst AddNewBrand = ({ categoryEditVisible, \r\n\tsetCategoryEditVisible,\r\n\t categoryDetailData,\r\n\t setcategoryDetailData }: Props) => {\r\n\r\n\tconst [updateBrandState, handleUpdateBrandFetch] = useHandleFetch({}, 'updateCategory');\r\n\tconst [brandDetailState, handleBrandDetailFetch] = useHandleFetch({}, 'categoryDetail');\r\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\r\n\tconst [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\r\n\tconst [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\r\n\tconst [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\r\n\tconst [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\r\n\r\n\r\n\tconst [myImages, setmyImages] = useState(false);\r\n\tconst [visibleMedia, setvisibleMedia] = useState(false);\r\n\tconst [coverImageId, setCoverImageId] = useState('');\r\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\r\n\tconst [selectedParentId, setselectedParentId] = useState('');\r\n\tconst [imageUrl, setImageUrl] = useState('');\r\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\r\n\tconst [imageFile, setImagefile] = useState('');\r\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\r\n\r\n\t\t\tconst images = categoryDetailData.image;\r\n\t\t\tif (images && images.length > 0) {\r\n\t\t\t\tsetmyImages(images);\r\n\t\t\t\tsetMyGoddamnImages(images);\r\n\t\t\t}\r\n\r\n\t\t\tif (categoryDetailData.cover && categoryDetailData.cover['id']) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tsetmyImages([categoryDetailData.cover, ...images]);\r\n\t\t\t\tsetCoverImageId(categoryDetailData.cover['id']);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// @ts-ignore\r\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\r\n\r\n\t\t\tif (coverImageId !== myImages[0].id) {\r\n\t\t\t\tsetCoverImageId(myImages[0].id);\r\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}, [myImages])\r\n\r\n\r\n\tconst handleDetachSingleImage = async id => {\r\n\t\tawait handleDetachImageFromItemSingleFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconst handleSetImageAsThumnail = async image => {\r\n\r\n\t\tconst thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\timageId: image.id,\r\n\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (thumbnailRes && thumbnailRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Seted as thumbnail!')\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\r\n\t\t\t// const prevItem = brandList.find(item => item.id === categoryDetailData.id);\r\n\r\n\t\t\t// if (prevItem) {\r\n\t\t\t// \tconst updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\r\n\t\t\t// \tconst updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\t\t\t// \tsetBrandList(updateBrandList);\r\n\r\n\t\t\t// }\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('categoryDetailState', brandDetailState);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\r\n\t\tif (brandDetailState && brandDetailState.done && Object.keys(categoryDetailData).length > 0) {\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst images = myImages && myImages.length > 0 ? myImages.map(item => item.id) : [];\r\n\r\n\t\t\tif (images[0] && images.length > 1) {\r\n\t\t\t\tawait handleAttachImageToItemMultipleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbody: {\r\n\t\t\t\t\t\timage: images\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (images[0] && images.length < 1) {\r\n\t\t\t\tawait handleAttachImageToItemSingleFetch({\r\n\t\t\t\t\turlOptions: {\r\n\t\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\t\timageId: images[0].id,\r\n\t\t\t\t\t\t\tcollection: 'category',\r\n\t\t\t\t\t\t\titemId: categoryDetailData.id\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tconst updateTagRes = await handleUpdateBrandFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: categoryDetailData.id\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t\ticon: imageFile,\r\n\t\t\t\ttype: 'bottom'\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\tsetcategoryDetailData({\r\n\t\t\t\t...categoryDetailData,\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...updateTagRes\r\n\t\t\t})\r\n\t\t\tconsole.log('updateTagRes',updateTagRes);\r\n\t\t\tconsole.log('categoryDetailData',categoryDetailData);\r\n\t\t\t// setcategoryDetailData()\r\n\t\t\topenSuccessNotification();\r\n\t\t\tsetCategoryEditVisible(false);\r\n\r\n\r\n\t\t\t// const positionInBrand = () => {\r\n\t\t\t// \treturn brandList.map(item => item.id).indexOf(categoryDetailData.id);\r\n\t\t\t// }\r\n\r\n\t\t\t// const index = positionInBrand();\r\n\t\t\t// const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\r\n\t\t\t// console.log('updateBrandList', updatedItem)\r\n\r\n\t\t\t// const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\r\n\r\n\t\t\t// setBrandList(updateBrandList);\r\n\r\n\r\n\t\t\tactions.resetForm();\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (categoryDetailData.type === 'top') {\r\n\t\t\t// setisparentcategoryChecked()\r\n\t\t}\r\n\t}, [categoryDetailData])\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetCategoryEditVisible(false);\r\n\t\tsetmyImages(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst onChangeSelect = (value) => {\r\n\t\tsetselectedParentId(value);\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction getBase64(img, callback) {\r\n\t\tconst reader = new FileReader();\r\n\t\treader.addEventListener('load', () => callback(reader.result));\r\n\t\treader.readAsDataURL(img);\r\n\t}\r\n\r\n\r\n\tfunction beforeUpload(file) {\r\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n\t\tif (!isJpgOrPng) {\r\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\r\n\t\t}\r\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\r\n\t\tif (!isLt2M) {\r\n\t\t\tmessage.error('Image must smaller than 2MB!');\r\n\t\t}\r\n\r\n\r\n\t\tgetBase64(file, imageUrl => {\r\n\t\t\tsetImageUrl(imageUrl)\r\n\t\t\tsetImagefile(file)\r\n\t\t\tsetLoadingThumbnail(false)\r\n\t\t})\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tconst handleImagesDelete = (id) => {\r\n\t\t// @ts-ignore\r\n\t\tconst newImages = myImages && myImages.filter(image => {\r\n\t\t\treturn image.id !== id;\r\n\t\t})\r\n\r\n\t\t// @ts-ignore\r\n\t\tsetmyImages([]);\r\n\t}\r\n\r\n\r\n\tconst uploadButton = (\r\n\t\t<div>\r\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\r\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n\r\n\r\n\r\n\tconsole.log('cateogryDetailmyImages', myImages)\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues, ...categoryDetailData }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Recipe Category Edit\"\r\n\t\t\t\t\t\t\tvisible={categoryEditVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\trows={3}\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateBrandState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t{/* <div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '25px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\t\t\t\t\t\t\t<div className='switchLabelContainer'>\r\n\t\t\t\t\t\t\t\t<Switch\r\n\t\t\t\t\t\t\t\t\tchecked={isparentCategoryChecked}\r\n\t\t\t\t\t\t\t\t\tonChange={onSwitchChange} />\r\n\t\t\t\t\t\t\t\t<div className='switchLabelContainer-textContainer'>\r\n\t\t\t\t\t\t\t\t\t<h5 >Top level Category</h5>\r\n\t\t\t\t\t\t\t\t\t<h5 className='switchLabelContainer-desc'>Disable to select a Parent Category</h5>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{!isparentCategoryChecked && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Parent Category</h3>\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: 400 }}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Parent Category'\r\n\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\t// onFocus={onFocus}\r\n\t\t\t\t\t\t\t\t\t\t// onBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\t\t// onSearch={onSearch}\r\n\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option: any) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{brandList.length > 0 && brandList.map(category => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <Option value={category.id}>{category.name}</Option>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' >\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\r\n\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\r\n\t\t\t\t\t\t\t\t\t<a href='###'>\r\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<Upload\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname=\"avatar\"\r\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\r\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\r\n\t\t\t\t\t\t\t\tshowUploadList={false}\r\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\r\n\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\r\n\t\t\t\t\t\t\t</Upload>\r\n */}\r\n\r\n\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='addproductSection-left-header'\r\n\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '-5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\r\n\t\t\t\t\t\t\t\t{/* <div  >\r\n\t\t\t\t\t<FileOutlined />\r\n\t\t\t\t\t<span>Media Center</span>\r\n\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\r\n\r\n\t\t\t\t\t\t\t\t{brandDetailState && (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t{myImages &&\r\n\t\t\t\t\t\t\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCoverImageId(image.id);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleSetImageAsThumnail(image);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleImagesDelete(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDetachSingleImage(image.id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetvisibleMedia(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\r\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t\t<MediaLibrary\r\n\t\t\t\t\t\t\tsetvisible={setvisibleMedia}\r\n\t\t\t\t\t\t\tvisible={visibleMedia}\r\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\r\n\t\t\t\t\t\t\tmyImages={myImages}\r\n\t\t\t\t\t\t\tmyGoddamnImages={myGoddamnImages}\r\n\t\t\t\t\t\t\tsetMyGoddamnImages={setMyGoddamnImages}\r\n\t\t\t\t\t\t\tisModalOpenForImages={true}\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../../components/Field/Input';\r\nimport TextArea from '../../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../../hooks';\r\n\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Category Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\tsetcategoryList?: any;\r\n\tcategoryList?: any;\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\r\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\r\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\r\n\t\t\tsetcategoryList(updateCategoryList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    EditOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\r\nimport CategoryEdit from \"./PostCategoryEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\r\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryProducts');\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const categoryId = params['id'];\r\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\r\n    const [categoryDetail,setcategoryDetail] = useState({}); \r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryDetail = async () => {\r\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            }); \r\n\r\n            // @ts-ignore\r\n            if(categoryDetailDataRes){\r\n                  // @ts-ignore\r\n                setcategoryDetail(categoryDetailDataRes)\r\n\r\n            }\r\n\r\n        };\r\n\r\n        getCategoryDetail();\r\n\r\n    }, [categoryId]);\r\n\r\n    useEffect(() => {\r\n\r\n        const getCategoryProducts = async () => {\r\n            await handleCategoryProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: categoryId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getCategoryProducts();\r\n\r\n    }, [categoryId]);\r\n\r\n\r\n\r\n\r\n    console.log('postcategoryDetailState', categoryDetailState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    const getImagesInCollumn = (imgs) => {\r\n        if (!imgs[0]) return false;\r\n        imgs = imgs.map(item => item.cover);\r\n        const columns = {};\r\n\r\n        let localIndex = 0;\r\n        let columnNumber = 0;\r\n\r\n\r\n        imgs.forEach((item, index) => {\r\n            if (localIndex < 3) {\r\n                if (columns[columnNumber]) {\r\n                    columns[columnNumber] = [...columns[columnNumber], item]\r\n                }\r\n                else columns[columnNumber] = [item];\r\n\r\n                localIndex = localIndex + 1;\r\n                columnNumber = columnNumber + 1;\r\n\r\n            }\r\n            else {\r\n                localIndex = 0;\r\n                columnNumber = 0;\r\n                console.log('localIndex', localIndex)\r\n            }\r\n        });\r\n\r\n        return columns;\r\n    }\r\n\r\n\r\n    const row = categoryDetailState.done && categoryDetail && categoryDetail['image'] ? getImagesInCollumn(categoryDetail['image']) : [];\r\n\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                   Recipe Category Detail\r\n                </h3>\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <CategoryEdit\r\n                            categoryEditVisible={categoryEditVisible}\r\n                            setCategoryEditVisible={setCategoryEditVisible}\r\n                            categoryDetailData={categoryDetail}\r\n                            setcategoryDetailData={setcategoryDetail}\r\n                        />\r\n\r\n                        <Button\r\n                            onClick={() => setCategoryEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n            <Skeleton\r\n                avatar paragraph={{ rows: 3 }}\r\n                loading={categoryDetailState.isLoading}>\r\n                {categoryDetailState.done && categoryDetail && !(Object.keys(categoryDetail).length > 0) && (\r\n                    <Empty description='No Recipe category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n\r\n\r\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\r\n                    <>\r\n                        <div className='brandDetailContainer__header'>\r\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\r\n                                <img src={categoryDetail['cover'] && categoryDetail['cover']['cover']} alt=\"\" />\r\n                            </div>\r\n                            <div className='brandDetailContainer__header-info'>\r\n                                <h2>\r\n                                    {categoryDetail['name']}\r\n                                </h2>\r\n                                <h3>\r\n                                    {categoryDetail['description']}\r\n                                </h3>\r\n                          \r\n                                {categoryDetail['url'] && (\r\n                                    <h3>\r\n                                        URL:\r\n                                        <span>\r\n                                            {categoryDetail['url']}\r\n                                        </span>\r\n\r\n                                    </h3>\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        {categoryDetail['icon'] && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Icon\r\n                                    </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__inlineBox'>\r\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\r\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Image Gallary\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='brandDetailContainer__imageGallary'>\r\n                                    <div className='imgGallaryContainer'>\r\n\r\n                                        <div className=\"imgGallary-row\">\r\n                                            {row && Object.keys(row).map(column => {\r\n                                                return (\r\n                                                    <div className=\"imgGallary-column\">\r\n                                                        {row[column] && row[column].map(img => {\r\n                                                            return <img \r\n                                                            alt='..'\r\n                                                            src={img} style={{\r\n                                                                width: '100%'\r\n                                                            }} />\r\n                                                        })}\r\n\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                        {categoryDetail['subCategory'] && categoryDetail['subCategory'].length > 0 && (\r\n                            <>\r\n                                <div className='brandDetailContainer__heading'>\r\n                                    <h3>\r\n                                        Child recipe categories\r\n                                   </h3>\r\n                                </div>\r\n\r\n                                <div className='smallcatCardContainer'>\r\n                                    {categoryDetail['subCategory'].map(subCat => {\r\n                                        return (\r\n                                            <div\r\n                                                onClick={() => history.push(`/admin/category/${subCat.id}`)}\r\n                                                className='smallcatCardContainer__card'>\r\n                                                <div className='smallcatCardContainer__card-coverbox'>\r\n                                                    <img src={subCat.cover} alt=\"\" />\r\n                                                </div>\r\n                                                <div className='smallcatCardContainer__card-info'>\r\n                                                    <h3>\r\n                                                        {subCat.name}\r\n                                                    </h3>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n\r\n                                </div>\r\n\r\n                                <div style={{\r\n                                    marginBottom: \"25px\"\r\n                                }}></div>\r\n                            </>\r\n                        )}\r\n\r\n\r\n                    </>\r\n\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\r\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists in this recipe category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n\r\n                            size='small'\r\n                            dataSource={categoryProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                                // go to product detail\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Available\"\r\n                                dataIndex=\"available\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Minimum\"\r\n                                dataIndex=\"minimum\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                            />\r\n\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tDeleteOutlined,\r\n\tFileAddOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tfirstName: Yup.string()\r\n\t\t.label('First name')\r\n\t\t.required()\r\n\t\t.min(2, 'First name must have at least 2 characters '),\r\n\tlastName: Yup.string()\r\n\t\t.label('Lastname')\r\n\t\t.required()\r\n\t\t.min(2, 'Last name must have at least 2 characters '),\r\n\tphone: Yup.string()\r\n\t\t.required('Please tell us your mobile number.')\r\n\t\t.max(13, 'Please enter a valid mobile number.'),\r\n\tpassword: Yup.string()\r\n\t\t.label('Password')\r\n\t\t.required()\r\n\t\t.min(6, 'Password must have at least 6 characters'),\r\n\taddress1: Yup.string()\r\n\t\t.label('Address line 1')\r\n\t\t.required()\r\n\t\t.min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst initialValues = {\r\n\tphone: '',\r\n\temail: '',\r\n\tfirstName: '',\r\n\tlastName: '',\r\n\taddress1: '',\r\n\taddress2: '',\r\n\tzipCode: '',\r\n\tpassword: ''\r\n};\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Tag Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\ninterface Props {\r\n\taddNewCategoryVisible: any;\r\n\tsetAddNewCategoryVisible: any;\r\n\tcustomerList?: any;\r\n\tsetCustomerList?: any;\r\n}\r\n\r\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\r\n\r\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addCustomer');\r\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\r\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n\tconst [countryOptions, setcountryOptions] = useState([]);\r\n\tconst [cityOptions, setcityOptions] = useState([]);\r\n\r\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\r\n\t\t[],\r\n\t\t'countryList'\r\n\t);\r\n\r\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n\tconst [countryList, setCountryList] = useState([]);\r\n\tconst [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\r\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\r\n\r\n\t\t\tbody: {\r\n\t\t\t\tphone: values.phone,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\taddress1: values.address1,\r\n\t\t\t\taddress2: values.address2,\r\n\t\t\t\tfirstName: values.firstName,\r\n\t\t\t\tlastName: values.lastName,\r\n\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\tcity: selectedCityValue,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetCustomerList([...customerList, {\r\n\t\t\t\tid: addCustomerRes['id'] || '',\r\n\t\t\t\tkey: addCustomerRes['id'] || '',\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\t...addCustomerRes\r\n\t\t\t}])\r\n\t\t\tsetAddNewCategoryVisible(false);\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t};\r\n\r\n\r\n\r\n\tconst onChangeCity = (value) => {\r\n\t\tsetselectedCityValue(value);\r\n\t}\r\n\r\n\tconst onChangeCountry = (value) => {\r\n\t\tsetselectedCountryValue(value);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n\t}, []);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n\t\t\t\turlOptions: {\r\n\t\t\t\t\tplaceHolders: {\r\n\t\t\t\t\t\tcountry: selectedCountryValue,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n\t}, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!isValid ||\r\n\t\t\t!values.firstName ||\r\n\t\t\t!values.lastName ||\r\n\t\t\t!values.password ||\r\n\t\t\t!values.phone ||\r\n\t\t\t!values.address1) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n\tconsole.log('cityListState', cityListState)\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...initialValues }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttop: '40px'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\tbodyStyle={{\r\n\t\t\t\t\t\t\t\tmargin: '0',\r\n\t\t\t\t\t\t\t\tpadding: '10px'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttitle=\"Add New Customer\"\r\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Create'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\r\n\t\t\t\t\t\t\t\t\t\tname='firstName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\r\n\t\t\t\t\t\t\t\t\t\tname='lastName'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\r\n\t\t\t\t\t\t\t\t\t\tname='phone'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginRight: '10px'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\r\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\r\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\r\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t</h3>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['country']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['country']}\r\n\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a Country'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCountry}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{countryListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\r\n\t\t\t\t\t\t\t\t\t\tCity\r\n                                    </h3>\r\n\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t// noStyle={true}\r\n\t\t\t\t\t\t\t\t\t\tvalidateStatus={(addCustomerState.error['error']['city']) ? \"error\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\thelp={addCustomerState.error['error']['city']}\r\n\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\tclassName='selectClassName'\r\n\t\t\t\t\t\t\t\t\t\t\tnotFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\r\n\t\t\t\t\t\t\t\t\t\t\tshowSearch\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select a city'\r\n\t\t\t\t\t\t\t\t\t\t\toptionFilterProp='children'\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeCity}\r\n\t\t\t\t\t\t\t\t\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{cityListState.done &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t\tmarginTop: '12px'\r\n\t\t\t\t\t\t\t}}></div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address1}\r\n\t\t\t\t\t\t\t\t\t\tname='address1'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address1'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address1');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tlabel='More specific address'\r\n\t\t\t\t\t\t\t\t\t\tvalue={values.address2}\r\n\t\t\t\t\t\t\t\t\t\tname='address2'\r\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\r\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address2'])}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address2');\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\r\n\r\n\r\n\t);\r\n};\r\n\r\nexport default AddNewCategory;\r\n","import React,{useState, useEffect} from 'react';\r\nimport { Modal, Select,notification  } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport {useHandleFetch} from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .label('Firstname')\r\n      .required()\r\n      .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n      .label('Lastname')\r\n      .required()\r\n      .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n      .required('Please tell us your mobile number.')\r\n      .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n      .label('Password')\r\n      .required()\r\n      .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n      .label('Address line 1')\r\n      .required()\r\n      .min(3, 'Address line 1 must have at least 3 characters '),\r\n  \r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n  });\r\n\r\n\r\n\r\n  \r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Tag Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n\tcustomer: any;\r\n\tsetvisible: any; \r\n\tvisible: any;\r\n\tcustomerList?: any; \r\n\tsetCustomerList?:any\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\r\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \r\n    const [selectedCityValue,setselectedCityValue] = useState(''); \r\n\r\n    const [countryOptions,setcountryOptions] = useState([]); \r\n    const [cityOptions,setcityOptions] = useState([]); \r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n      );\r\n    \r\n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n    \r\n      const [countryList, setCountryList] = useState([]);\r\n      const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n\tconst handleSubmit = async (values : any, actions : any) => {\r\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\r\n\t\turlOptions: {\r\n\t\t\tplaceHolders: {\r\n\t\t\t  id: values.id,\r\n\t\t\t}\r\n\t\t  },\r\n\t\tbody: {\r\n\t\t\tphone: values.phone,\r\n            email: values.email,\r\n            password: values.password,\r\n            address1: values.address1,\r\n            address2: values.address2,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            country: selectedCountryValue,\r\n            city: selectedCityValue,\r\n\t\t},\r\n\t  });\r\n\t\r\n\r\n\t   \t  // @ts-ignore\r\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\r\n\t\t\t\topenSuccessNotification(); \r\n\t\t\r\n\t\t\t\tconst positionInTag = () => {\r\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\r\n\t\t\t\t  }\r\n\t\t\r\n\t\t\t\t  const index = positionInTag();\r\n\t\t\r\n\t\t\t\t  // @ts-ignore\r\n\t\t\t\t  const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n\t\t\t\t  setCustomerList(updateTagList); \r\n\t\t\t\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\topenErrorNotification();\r\n\t\t\t  }\r\n\t\t\t\r\n\t\t\t  actions.setSubmitting(false);\r\n\t\t\t  setvisible(false)\r\n\t};\r\n\t\r\n\r\n\t\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value); \r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value); \r\n    }\r\n    \r\n\tuseEffect(() => {\r\n\t\tconst setCountries = async () => {\r\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: country.name,\r\n\t\t\t\t\t\tname: country.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcountryOptions(countryOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCountries();\r\n    }, []);\r\n    \r\n\r\n    useEffect(() => {\r\n\t\tconst setCities = async () => {\r\n\t\t\tconst cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                      country: selectedCountryValue,\r\n                    },\r\n                  },\r\n            });\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (cityListRes && cityListRes.length > 0) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tvalue: city.name,\r\n\t\t\t\t\t\tname: city.name\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t\tsetcityOptions(cityOptions);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n        setvisible(false);\r\n      };\r\n\r\n\r\n\r\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\r\n\t\tif(!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1){\r\n\t\t\treturn true; \r\n\t\t}\r\n\t\treturn false; \r\n\t  }\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\tvalidationSchema={validationSchema}\r\n\t\tvalidateOnBlur={false}\r\n\t\tenableReinitialize={true}\r\n\t\tinitialValues={\r\n\t\t  {...customer}\r\n\t\t}\r\n\t  >\r\n\t\t{({\r\n\t\t  handleChange,\r\n\t\t  values,\r\n\t\t  handleSubmit,\r\n\t\t  errors,\r\n\t\t  isValid,\r\n\t\t  isSubmitting,\r\n\t\t  touched,\r\n\t\t  handleBlur,\r\n\t\t  setFieldTouched,\r\n\t\t  handleReset,\r\n\t\t}) => (\r\n\t\t\t<>\r\n\t\t\t<Modal\r\n\t\t\ttitle=\"Quick Edit\"\r\n\t\t\tvisible={visible}\r\n\t\t\tonOk={(e : any) => handleSubmit(e)}\r\n\t\t\tonCancel={handleCancel}\r\n\t\t\tokText='Update'\r\n\t\t\tokButtonProps={{\r\n\t\t\tloading: isSubmitting,\r\n\t\t\thtmlType: \"submit\",\r\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t}}\r\n\t\t\tbodyStyle={{\r\n                margin: '0',\r\n                padding: '10px'\r\n            }}\r\n  >\r\n      <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='First Name'\r\n\t\t\t   value={values.firstName}\r\n\t\t\t   name='firstName'\r\n\t\t\t   isError={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.firstName && errors.firstName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('firstName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Last Name'\r\n\t\t\t   value={values.lastName}\r\n\t\t\t   name='lastName'\r\n\t\t\t   isError={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.lastName && errors.lastName) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('lastName');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\t\t\t \r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Phone'\r\n\t\t\t   value={values.phone}\r\n\t\t\t   name='phone'\r\n\t\t\t   isError={(touched.phone && errors.phone) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.phone && errors.phone) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('phone');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Email'\r\n\t\t\t   value={values.email}\r\n\t\t\t   name='email'\r\n\t\t\t   isError={(touched.email && errors.email) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.email && errors.email) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('email');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n            \r\n\r\n\r\n    \r\n<div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                Country\r\n            </h3>\r\n         <Select\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a Country'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tdefaultValue={customer && customer.country}\r\n\t\t\tonChange={onChangeCountry}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{countryListState.done &&\r\n\t\t\t\tcountryListState.data.length > 0 &&\r\n\t\t\t\tcountryOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <h3 className='inputFieldLabel'>\r\n                City\r\n            </h3>\r\n         <Select\r\n\t\t\tdefaultValue={customer && customer.city}\r\n\t\t\tshowSearch\r\n\t\t\tstyle={{ width: '100%' }}\r\n\t\t\tplaceholder='Select a city'\r\n\t\t\toptionFilterProp='children'\r\n\t\t\tonChange={onChangeCity}\r\n\t\t\tfilterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n\t\t>\r\n\t\t\t{cityListState.done &&\r\n\t\t\t\tcityListState.data.length > 0 &&\r\n\t\t\t\tcityOptions.map((option) => {\r\n\t\t\t\t\treturn <Option value={option.value}>{option.name}</Option>;\r\n\t\t\t\t})}\r\n\t\t</Select>\r\n         </div>\r\n\r\n            </div>\r\n\r\n            <div style={{\r\n                marginTop: '12px'\r\n            }}></div>\r\n\r\n\r\n\r\n            <div className='dubbleRowInputs'>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='Address'\r\n\t\t\t   value={values.address1}\r\n\t\t\t   name='address1'\r\n\t\t\t   isError={(touched.address1 && errors.address1) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address1 && errors.address1) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address1');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n         <div className='dubbleRowInputs__item'>\r\n         <Input \r\n\t\t\t   label='More specific address'\r\n\t\t\t   value={values.address2}\r\n\t\t\t   name='address2'\r\n\t\t\t   isError={(touched.address2 && errors.address2) ||\r\n\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t  \r\n\t\t\t\t  errorString={(touched.address2 && errors.address2) ||\r\n\t\t\t\t\t  (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\t\t\t   onChange={(e : any) => {\r\n\t\t\t\t  handleChange(e);\r\n\t\t\t\t  setFieldTouched('address2');\r\n\t\t\t\t}}\r\n\t\t\t   />\r\n         </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n  </Modal>\r\n\t\t\t  \r\n\t\t\t</>\r\n\t\t  )}\r\n\t  </Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {withRouter, useHistory} from 'react-router-dom';\r\nimport { Table, Badge, Menu, Dropdown, notification, Space, Tag,Button, Input,Tooltip, Modal , Popconfirm} from 'antd';\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\nimport Moment from 'react-moment';\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport AddNewStaff from \"./AddNewStaff\";\r\nimport QuickEdit from \"./QuickEdit\";\r\nimport Empty from \"../../components/Empty\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Staffs Created',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n  const openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t  message: message || 'Something Went Wrong',\r\n\t  description: '',\r\n\t  icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n  };\r\n\r\n\r\n\r\n\r\n\r\ninterface myTableProps {\r\n  data: any; \r\n  setCustomerList?:any; \r\n} \r\n\r\n\r\nconst MyTable = ({data,setCustomerList}: myTableProps) => {\r\n    const [visible,setvisible] = useState(false);   \r\n    const [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \r\n\r\n   const history = useHistory(); \r\n\r\n    const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch({}, 'deleteCustomer');\r\n      const handleDeleteCustomer = async (id) => {\r\n        const deleteCustomerRes = await handleDeleteCustomerFetch({\r\n          urlOptions: {\r\n            placeHolders: {\r\n              id,\r\n            }\r\n            }\r\n          });\r\n\r\n\r\n           // @ts-ignore\r\n\t\t  if(deleteCustomerRes && deleteCustomerRes.status === 'ok'){\r\n\t\t\t  openSuccessNotification('Deleted Staffs'); \r\n\t\t\t  const newCustomerList =  data.filter(item => item.id !== id);\r\n\t\t\t  setCustomerList(newCustomerList); \r\n\t\t  }\r\n      }\r\n      \r\n\r\n    return (\r\n        <>\r\n        <Table \r\n        // expandable={{\r\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n        //     rowExpandable: record => record.name !== 'Not Expandable',\r\n        //   }}\r\n        // bordered={true}\r\n        size='small'\r\n        // pagination={false}\r\n        dataSource={data}\r\n        >\r\n\r\n          <Column\r\n           title=\"Name\" \r\n           dataIndex=\"name\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record: any) => (\r\n            <>\r\n              <h4\r\n                onClick={() => {\r\n                  history.push(`/admin/customer/${record.id}`)\r\n                  // setcategoryDetailVisible(true);\r\n                  setactiveCategoryForEdit(record)\r\n                }}\r\n                style={{\r\n                  fontWeight: 400,\r\n                  color: '#555',\r\n                  cursor: 'pointer'\r\n                }}>\r\n                {text}\r\n              </h4>\r\n            </>\r\n          )}\r\n            />\r\n\r\n         \r\n          <Column\r\n           title=\"Phone\" \r\n           dataIndex=\"phone\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"Country\" \r\n           dataIndex=\"country\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n\r\n          <Column\r\n           title=\"City\" \r\n           dataIndex=\"city\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n         \r\n            />\r\n\r\n           <Column\r\n           title=\"Created\" \r\n           dataIndex=\"created\" \r\n           key=\"id\" \r\n           className='classnameofthecolumn'\r\n           render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n            \r\n            <h5>\r\n              <Moment>\r\n                {text}\r\n              </Moment>\r\n            </h5>\r\n             \r\n            </Space>\r\n          )}\r\n            />\r\n\r\n\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\r\n\r\n          {/* <Column \r\n          \r\n          className='classnameofthecolumn'\r\n\r\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\r\n        \r\n        {/* <Column\r\n          title=\"Tags\"\r\n          dataIndex=\"tags\"\r\n          key=\"tags\"\r\n          render={tags => (\r\n            <>\r\n              {tags.map((tag : any) => (\r\n                <Tag color=\"blue\" key={tag}>\r\n                  {tag}\r\n                </Tag>\r\n              ))}\r\n            </>\r\n          )}\r\n        /> */}\r\n        <Column\r\n        \r\n        className='classnameofthecolumn'\r\n          title=\"\"\r\n          key=\"action\"\r\n          align='right'\r\n          render={(text, record : any) => (\r\n            <Space size=\"middle\">\r\n              <a href='##'>\r\n               <Tooltip placement=\"top\" title='Quick Edit Customer'>\r\n              <span className='iconSize' onClick={() => {\r\n                setvisible(true)\r\n                setactiveCategoryForEdit(record); \r\n              }}> \r\n              <EditOutlined />\r\n            \r\n              </span>\r\n               </Tooltip>\r\n               </a>\r\n\r\n             \r\n\r\n              \r\n               <Popconfirm \r\n               \r\n               onConfirm={() => handleDeleteCustomer(record.id)}\r\n               title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n           \r\n           <span \r\n             className='iconSize iconSize-danger'\r\n             > \r\n             <DeleteOutlined/>\r\n            </span>\r\n       \r\n           </Popconfirm>\r\n             \r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n    \r\n\r\n    {activeCategoryForEdit &&   <QuickEdit \r\n    customerList={data}\r\n    setCustomerList={setCustomerList}\r\n    setvisible={setvisible}\r\n    visible={visible}\r\n    customer={activeCategoryForEdit}/>}\r\n    \r\n    \r\n    </>\r\n    )\r\n}\r\n\r\n\r\ninterface Props {\r\n    history: any; \r\n}\r\n\r\nconst CustomerList = ({history}: Props) => {\r\n\r\n\r\n    const [customerList,setCustomerList] = useState([]); \r\n\r\n    const [customerState, handleCustomerListFetch] = useHandleFetch({}, 'customerList');\r\n  \r\n  \r\n    useEffect(()=>{\r\n     const setCustomers = async () => {\r\n       const customers = await handleCustomerListFetch({}); \r\n       // @ts-ignore\r\n       setCustomerList(customers); \r\n     }\r\n     setCustomers(); \r\n    },[])\r\n\r\n\r\n    \r\n\r\n  \r\n  const handleSearch = (value) => {\r\n    if(customerState.data.length > 0 ){\r\n      const newCustomerList = customerState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase())); \r\n      setCustomerList(newCustomerList); \r\n    }\r\n     \r\n  }\r\n\r\n\r\n\r\n    \r\n\r\n  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \r\n\r\n  // console.log('customerState',customerState)\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    {/* <h2 className='containerPageTitle'>\r\n      Categories\r\n    </h2> */}\r\n    <div className='categoryListContainer'>\r\n            <div className='categoryListContainer__header'>\r\n           \r\n\r\n          <div className='categoryListContainer__header-searchBar'>\r\n          <h2 className='categoryListContainer__header-title'>\r\n            Staffs\r\n            </h2>\r\n\r\n\r\n          <Search\r\n            enterButton={false}\r\n            className='searchbarClassName'\r\n          placeholder=\"search staffs..\"\r\n          onSearch={value =>handleSearch(value)}\r\n          // style={{ width: 300 }}\r\n        />\r\n          </div>\r\n            <Button\r\n          // type=\"primary\"\r\n          className='btnPrimaryClassNameoutline'\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setAddNewCategoryVisible(true)}\r\n        >\r\n        Add New\r\n            \r\n            </Button>\r\n            </div>\r\n\r\n            <div className='categoryListContainer__afterHeader'>\r\n            {/* <Search\r\n      placeholder=\"search categories..\"\r\n      size=\"large\"\r\n      onSearch={value => console.log(value)}\r\n      style={{ width: 300 }}\r\n    /> */}\r\n            </div>\r\n\r\n     \r\n\t\t\t\r\n\t\t\t<div className='categoryListContainer__categoryList'>\r\n        {customerState.done && customerList.length > 0 && <MyTable\r\n        setCustomerList={setCustomerList}\r\n         data={customerList} />}\r\n        {customerState.isLoading && <DataTableSkeleton />}\r\n        {customerState.done && !(customerList.length > 0) && (\r\n\t\t\t<Empty title='No Staff found'  />\r\n\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n{customerState.done && \r\n    <AddNewStaff \r\n    setCustomerList={setCustomerList}\r\n          addNewCategoryVisible={addNewCategoryVisible} \r\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\r\n          customerList={customerState.data}\r\n          \r\n           />}\r\n\r\n      \r\n\r\n        \r\n    </>\r\n\t);\r\n};\r\n\r\nexport default withRouter(CustomerList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Select, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined, EditFilled, CheckCircleOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport { useHandleFetch } from '../../hooks';\r\n\r\n\r\nconst { Option } = Select;\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n        .label('Firstname')\r\n        .required()\r\n        .min(2, 'First name must have at least 2 characters '),\r\n    lastName: Yup.string()\r\n        .label('Lastname')\r\n        .required()\r\n        .min(2, 'Lastname must have at least 2 characters '),\r\n    phone: Yup.string()\r\n        .required('Please tell us your mobile number.')\r\n        .max(13, 'Please enter a valid mobile number.'),\r\n    password: Yup.string()\r\n        .label('Password')\r\n        .required()\r\n        .min(6, 'Password must have at least 6 characters'),\r\n    address1: Yup.string()\r\n        .label('Address line 1')\r\n        .required()\r\n        .min(3, 'Address line 1 must have at least 3 characters '),\r\n\r\n    email: Yup.string().label('Email').email('Please enter a valid email'),\r\n});\r\n\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface Props {\r\n    customer: any;\r\n    setvisible: any;\r\n    visible: any;\r\n\r\n\r\n}\r\n\r\nconst QuickEdit = ({ customer, setvisible, visible }: Props) => {\r\n    const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateCustomer');\r\n\r\n\r\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\r\n    const [selectedCityValue, setselectedCityValue] = useState('');\r\n\r\n    const [countryOptions, setcountryOptions] = useState([]);\r\n    const [cityOptions, setcityOptions] = useState([]);\r\n\r\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\r\n        [],\r\n        'countryList'\r\n    );\r\n\r\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\r\n\r\n    const [countryList, setCountryList] = useState([]);\r\n    const [cityList, setCityList] = useState([]);\r\n\r\n\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateCustomerRes = await handleUpdateCustomerFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                phone: values.phone,\r\n                email: values.email,\r\n                password: values.password,\r\n                address1: values.address1,\r\n                address2: values.address2,\r\n                firstName: values.firstName,\r\n                lastName: values.lastName,\r\n                country: selectedCountryValue,\r\n                city: selectedCityValue,\r\n            },\r\n        });\r\n\r\n\r\n        // @ts-ignore\r\n        if (updateCustomerRes && updateCustomerRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return customerList.map(item => item.id).indexOf(customer.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateCustomerRes });\r\n            // const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\r\n            // setCustomerList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setvisible(false)\r\n    };\r\n\r\n\r\n\r\n    const onChangeCity = (value) => {\r\n        setselectedCityValue(value);\r\n    }\r\n\r\n    const onChangeCountry = (value) => {\r\n        setselectedCountryValue(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setCountries = async () => {\r\n            const CountryListRes = await handleCountryListFetch({});\r\n\r\n            // @ts-ignore\r\n            if (CountryListRes && CountryListRes.length > 0) {\r\n                // @ts-ignore\r\n                const countryOptions = CountryListRes.map((country) => {\r\n                    return {\r\n                        value: country.name,\r\n                        name: country.name\r\n                    };\r\n                });\r\n                setcountryOptions(countryOptions);\r\n            }\r\n        };\r\n\r\n        setCountries();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        const setCities = async () => {\r\n            const cityListRes = await handleCityListFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        country: selectedCountryValue,\r\n                    },\r\n                },\r\n            });\r\n\r\n            // @ts-ignore\r\n            if (cityListRes && cityListRes.length > 0) {\r\n                // @ts-ignore\r\n                const cityOptions = cityListRes.map((city) => {\r\n                    return {\r\n                        value: city.name,\r\n                        name: city.name\r\n                    };\r\n                });\r\n                setcityOptions(cityOptions);\r\n            }\r\n        };\r\n\r\n        setCities();\r\n    }, [selectedCountryValue]);\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setvisible(false);\r\n    };\r\n\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!isValid ||\r\n            !values.firstName ||\r\n            !values.lastName ||\r\n            !values.password ||\r\n            !values.phone ||\r\n            !values.address1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...customer }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Quick Edit\"\r\n                            visible={visible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                            bodyStyle={{\r\n                                margin: '0',\r\n                                padding: '10px'\r\n                            }}\r\n                        >\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='First Name'\r\n                                        value={values.firstName}\r\n                                        name='firstName'\r\n                                        isError={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n\r\n                                        errorString={(touched.firstName && errors.firstName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['firstName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('firstName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Last Name'\r\n                                        value={values.lastName}\r\n                                        name='lastName'\r\n                                        isError={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n\r\n                                        errorString={(touched.lastName && errors.lastName) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['lastName'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('lastName');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Phone'\r\n                                        value={values.phone}\r\n                                        name='phone'\r\n                                        isError={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n\r\n                                        errorString={(touched.phone && errors.phone) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['phone'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('phone');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Email'\r\n                                        value={values.email}\r\n                                        name='email'\r\n                                        isError={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n\r\n                                        errorString={(touched.email && errors.email) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['email'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('email');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        Country\r\n            </h3>\r\n                                    <Select\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a Country'\r\n                                        optionFilterProp='children'\r\n                                        defaultValue={customer && customer.country}\r\n                                        onChange={onChangeCountry}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {countryListState.done &&\r\n                                            countryListState.data.length > 0 &&\r\n                                            countryOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <h3 className='inputFieldLabel'>\r\n                                        City\r\n            </h3>\r\n                                    <Select\r\n                                        defaultValue={customer && customer.city}\r\n                                        showSearch\r\n                                        style={{ width: '100%' }}\r\n                                        placeholder='Select a city'\r\n                                        optionFilterProp='children'\r\n                                        onChange={onChangeCity}\r\n                                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                                    >\r\n                                        {cityListState.done &&\r\n                                            cityListState.data.length > 0 &&\r\n                                            cityOptions.map((option) => {\r\n                                                return <Option value={option.value}>{option.name}</Option>;\r\n                                            })}\r\n                                    </Select>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                            <div style={{\r\n                                marginTop: '12px'\r\n                            }}></div>\r\n\r\n\r\n\r\n                            <div className='dubbleRowInputs'>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='Address'\r\n                                        value={values.address1}\r\n                                        name='address1'\r\n                                        isError={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n\r\n                                        errorString={(touched.address1 && errors.address1) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address1'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address1');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <div className='dubbleRowInputs__item'>\r\n                                    <Input\r\n                                        label='More specific address'\r\n                                        value={values.address2}\r\n                                        name='address2'\r\n                                        isError={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n\r\n                                        errorString={(touched.address2 && errors.address2) ||\r\n                                            (!isSubmitting && updateCustomerState.error['error']['address2'])}\r\n                                        onChange={(e: any) => {\r\n                                            handleChange(e);\r\n                                            setFieldTouched('address2');\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport StaffEdit from \"./StaffEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Staff Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <StaffEdit\r\n                            visible={tagEditVisible}\r\n                            setvisible={setTagEditVisible}\r\n                            customer={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Staffs found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Orderss exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Expense Updated',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\ninterface Props {\r\n\tcategory: any;\r\n\tsetvisible: any;\r\n\tvisible: any;\r\n\ttagList: any;\r\n\tsetTagList: any;\r\n\r\n}\r\n\r\nconst QuickEdit = ({ category, setvisible, visible, tagList, setTagList }: Props) => {\r\n\tconst [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst updateTagRes = await handleUpdateCategoryFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name,\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (updateTagRes && updateTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tconst positionInTag = () => {\r\n\t\t\t\treturn tagList.map(item => item.id).indexOf(category.id);\r\n\t\t\t}\r\n\r\n\t\t\tconst index = positionInTag();\r\n\r\n\t\t\t// @ts-ignore\r\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n\t\t\tsetTagList(updateTagList);\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\topenErrorNotification();\r\n\t\t}\r\n\r\n\t\tactions.setSubmitting(false);\r\n\t\tsetvisible(false)\r\n\t};\r\n\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tvalidateOnBlur={false}\r\n\t\t\tenableReinitialize={true}\r\n\t\t\tinitialValues={\r\n\t\t\t\t{ ...category }\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleChange,\r\n\t\t\t\tvalues,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\tisValid,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tsetFieldTouched,\r\n\t\t\t\thandleReset,\r\n\t\t\t}) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Modal\r\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\r\n\t\t\t\t\t\t\tvisible={visible}\r\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\r\n\t\t\t\t\t\t\tonCancel={handleCancel}\r\n\t\t\t\t\t\t\tokText='Update'\r\n\t\t\t\t\t\t\tokButtonProps={{\r\n\t\t\t\t\t\t\t\tloading: isSubmitting,\r\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\r\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={values.name}\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\tlabel='Description'\r\n\t\t\t\t\t\t\t\tvalue={values.description}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\r\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['description'])}\r\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\r\n\t\t\t\t\t\t\t\t\thandleChange(e);\r\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Modal>\r\n\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nimport { useHandleFetch } from '../../hooks';\r\n// import third party ui lib\r\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\r\n\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    FileAddOutlined,\r\n    DeleteOutlined,\r\n    CheckCircleOutlined,\r\n    CloseOutlined,\r\n    CheckOutlined,\r\n    InfoCircleOutlined,\r\n    PlusOutlined,\r\n    FileImageFilled\r\n} from '@ant-design/icons';\r\n\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport MediaLibrary from \"../../components/MediaLibrary\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Tag Created',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.error({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    description: '',\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    addNewCategoryVisible?: any;\r\n    setAddNewCategoryVisible?: any;\r\n    tagList?: any;\r\n    setTagList?: any;\r\n\r\n}\r\n\r\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\r\n\r\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n    const [myImages, setmyImages] = useState(false);\r\n    const [visibleMedia, setvisibleMedia] = useState(false);\r\n    const [coverImageId, setCoverImageId] = useState('');\r\n\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const addTagRes = await handleAddTagFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name.trim(),\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (addTagRes && addTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            setTagList([...tagList, {\r\n                id: addTagRes['id'] || '',\r\n                key: addTagRes['id'] || '',\r\n                name: addTagRes['name'] || '',\r\n                description: addTagRes['description'] || '',\r\n            }])\r\n            actions.resetForm();\r\n            setAddNewCategoryVisible(false);\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n\r\n        actions.setSubmitting(false);\r\n\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setAddNewCategoryVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleImagesDelete = (id) => {\r\n        // @ts-ignore\r\n        const newImages = myImages && myImages.filter(image => {\r\n            return image.id !== id;\r\n        })\r\n\r\n        setmyImages(newImages);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...initialValues }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            style={{\r\n                                top: '40px'\r\n                            }}\r\n                            title=\"Add New Tag\"\r\n                            visible={addNewCategoryVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Create'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && addTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && addTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && addTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n\r\n                        </Modal>\r\n\r\n                        <MediaLibrary\r\n                            setvisible={setvisibleMedia}\r\n                            visible={visibleMedia}\r\n                            setmyImages={setmyImages}\r\n                            myImages={myImages}\r\n                            isModalOpenForImages={true}\r\n\r\n                        />\r\n                    </>\r\n                )}\r\n        </Formik>\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AddNewBrand;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// import third party ui lib\r\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\n\r\nimport {\r\n\tFileOutlined,\r\n\tInboxOutlined,\r\n\tRadiusUpleftOutlined,\r\n\tRadiusUprightOutlined,\r\n\tRadiusBottomleftOutlined,\r\n\tRadiusBottomrightOutlined,\r\n\tPlusOutlined,\r\n\tDeleteOutlined,\r\n\tEditOutlined,\r\n\tCheckCircleOutlined\r\n} from '@ant-design/icons';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\n\r\n/// import hooks\r\nimport { useFetch, useHandleFetch } from \"../../hooks\";\r\n\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport QuickEdit from \"./QuickEdit\"\r\nimport AddNewExpense from \"./AddNewExpense\"\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n\tnotification.success({\r\n\t\tmessage: message || 'Expense Created',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n\t});\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n\tnotification.error({\r\n\t\tmessage: message || 'Something Went Wrong',\r\n\t\tdescription: '',\r\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n\t});\r\n};\r\n\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n});\r\n\r\n\r\nconst initialValues = {\r\n\tname: '',\r\n\tdescription: ''\r\n}\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\n\r\nconst MyTable = ({ data, setTagList }) => {\r\n\tconst [visible, setvisible] = useState(false);\r\n\tconst [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\r\n\tconst [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\r\n\r\n\tconst history = useHistory();\r\n\r\n\r\n\tconst handleDeleteTag = async (id) => {\r\n\t\tconst deleteTagRes = await handleDeleteTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid,\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (deleteTagRes && deleteTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification('Deleted Expense');\r\n\t\t\tconst newtagList = data.filter(item => item.id !== id);\r\n\t\t\tsetTagList(newtagList);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\tconst handleOk = (e: any) => {\r\n\t\tsetvisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancel = (e: any) => {\r\n\t\tsetvisible(false);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Table\r\n\t\t\t\t// expandable={{\r\n\t\t\t\t//     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n\t\t\t\t//     rowExpandable: record => record.name !== 'Not Expandable',\r\n\t\t\t\t//   }}\r\n\t\t\t\t// bordered={true}\r\n\t\t\t\tsize='small'\r\n\t\t\t\t// pagination={false}\r\n\t\t\t\tdataSource={data}\r\n\t\t\t>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Name\"\r\n\t\t\t\t\tdataIndex=\"name\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t<h4\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\thistory.push(`/admin/tag/${record.id}`)\r\n\t\t\t\t\t\t\t\t\t// setBrandDetailVisible(true);\r\n\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: 400,\r\n\t\t\t\t\t\t\t\t\tcolor: '#555',\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</h4>\r\n\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Description\"\r\n\t\t\t\t\tdataIndex=\"description\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<Column\r\n\t\t\t\t\ttitle=\"Product\"\r\n\t\t\t\t\tdataIndex=\"productCount\"\r\n\t\t\t\t\tkey=\"id\"\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Column\r\n\r\n\t\t\t\t\tclassName='classnameofthecolumn'\r\n\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\tkey=\"action\"\r\n\t\t\t\t\talign='right'\r\n\t\t\t\t\trender={(text, record: any) => (\r\n\t\t\t\t\t\t<Space size=\"middle\">\r\n\t\t\t\t\t\t\t<a href='##'>\r\n\t\t\t\t\t\t\t\t<Tooltip placement=\"top\" title='Quick Edit Tag'>\r\n\t\t\t\t\t\t\t\t\t<span className='iconSize' onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetvisible(true)\r\n\t\t\t\t\t\t\t\t\t\tsetactiveCategoryForEdit(record);\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</a>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\tonConfirm={() => handleDeleteTag(record.id)}\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tclassName='iconSize iconSize-danger'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</Table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t{activeCategoryForEdit && <QuickEdit\r\n\t\t\t\ttagList={data}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\tsetvisible={setvisible}\r\n\t\t\t\tvisible={visible}\r\n\t\t\t\tcategory={activeCategoryForEdit} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\ninterface Props { }\r\n\r\nconst TagList = ({ }: Props) => {\r\n\r\n\r\n\tconst [tagList, setTagList] = useState([]);\r\n\r\n\tconst [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst setTags = async () => {\r\n\t\t\tconst tags = await handleTagListFetch({});\r\n\t\t\t// @ts-ignore\r\n\t\t\tsetTagList(tags);\r\n\t\t}\r\n\t\tsetTags();\r\n\t}, [])\r\n\r\n\r\n\r\n\tconst [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\r\n\tconst [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\r\n\r\n\tconst handleSubmit = async (values: any, actions: any) => {\r\n\t\tconst addTagRes = await handleAddTagFetch({\r\n\t\t\turlOptions: {\r\n\t\t\t\tplaceHolders: {\r\n\t\t\t\t\tid: values.id,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbody: {\r\n\t\t\t\tname: values.name.trim(),\r\n\t\t\t\tdescription: values.description,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\t// @ts-ignore\r\n\t\tif (addTagRes && addTagRes.status === 'ok') {\r\n\t\t\topenSuccessNotification();\r\n\r\n\t\t\tsetTagList([...tagList, {\r\n\t\t\t\tid: addTagRes['id'] || '',\r\n\t\t\t\tkey: addTagRes['id'] || '',\r\n\t\t\t\tname: addTagRes['name'] || '',\r\n\t\t\t\tdescription: addTagRes['description'] || '',\r\n\t\t\t}])\r\n\t\t\tactions.resetForm();\r\n\t\t}\r\n\t\tactions.setSubmitting(false);\r\n\r\n\t};\r\n\r\n\r\n\r\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\r\n\t\tif (!values.name || !isValid) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tconst handleOkAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\r\n\t};\r\n\r\n\tconst handleCancelAddNewCategory = (e: any) => {\r\n\t\tsetAddNewCategoryVisible(false);\r\n\t};\r\n\r\n\tconst handleSearch = (value) => {\r\n\t\tif (tagState.data.length > 0) {\r\n\t\t\tconst newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\r\n\t\t\tsetTagList(newTagList);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\r\n\t\t\t<div className='categoryListContainer'>\r\n\t\t\t\t<div className='categoryListContainer__header'>\r\n\t\t\t\t\t<div className='categoryListContainer__header-searchBar-tag'>\r\n\t\t\t\t\t\t<h2 className='categoryListContainer__header-title'>\r\n\t\t\t\t\t\t\tExpenses\r\n                       </h2>\r\n\r\n\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tenterButton={false}\r\n\t\t\t\t\t\t\tclassName='searchbarClassName'\r\n\t\t\t\t\t\t\tplaceholder=\"search expense..\"\r\n\t\t\t\t\t\t\tonSearch={value => handleSearch(value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\t// type=\"primary\"\r\n\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\r\n\t\t\t\t\t\ticon={<PlusOutlined />}\r\n\t\t\t\t\t\tonClick={() => setAddNewCategoryVisible(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd New\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='categoryListContainer__categoryList'>\r\n\t\t\t\t\t{tagState.done && tagList.length > 0 && <MyTable\r\n\t\t\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\t\t\tdata={tagList} />}\r\n\t\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\r\n\r\n\r\n\t\t\t\t\t{tagState.done && !(tagList.length > 0) && (\r\n\t\t\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\tmarginTop: '50px'\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Empty description='No Expense found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddNewExpense\r\n\t\t\t\ttagList={tagList}\r\n\t\t\t\tsetTagList={setTagList}\r\n\t\t\t\taddNewCategoryVisible={addNewCategoryVisible}\r\n\t\t\t\tsetAddNewCategoryVisible={setAddNewCategoryVisible}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default TagList;\r\n","import React, { useState } from 'react';\r\nimport { Modal, notification } from 'antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// import components\r\nimport Input from '../../components/Field/Input';\r\nimport TextArea from '../../components/Field/TextArea';\r\nimport { useHandleFetch } from '../../hooks';\r\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\r\n    description: Yup.string().label('Description').required('Description is required')\r\n});\r\n\r\n\r\n\r\nconst openSuccessNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Expense Updated',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\r\n    });\r\n};\r\n\r\n\r\nconst openErrorNotification = (message?: any) => {\r\n    notification.success({\r\n        message: message || 'Something Went Wrong',\r\n        description: '',\r\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\r\n    });\r\n};\r\n\r\n\r\ninterface Props {\r\n    tagEditVisible?: any;\r\n    setTagEditVisible?: any;\r\n    tagDetailData?: any;\r\n}\r\n\r\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData }: Props) => {\r\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateTag');\r\n\r\n    const handleSubmit = async (values: any, actions: any) => {\r\n        const updateTagRes = await handleUpdateCategoryFetch({\r\n            urlOptions: {\r\n                placeHolders: {\r\n                    id: values.id,\r\n                }\r\n            },\r\n            body: {\r\n                name: values.name,\r\n                description: values.description,\r\n            },\r\n        });\r\n\r\n        // @ts-ignore\r\n        if (updateTagRes && updateTagRes.status === 'ok') {\r\n            openSuccessNotification();\r\n\r\n            // const positionInTag = () => {\r\n            //     return tagList.map(item => item.id).indexOf(category.id);\r\n            // }\r\n\r\n            // const index = positionInTag();\r\n\r\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\r\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\r\n            // setTagList(updateTagList);\r\n\r\n        }\r\n        else {\r\n            openErrorNotification();\r\n        }\r\n\r\n        actions.setSubmitting(false);\r\n        setTagEditVisible(false)\r\n    };\r\n\r\n\r\n    const handleCancel = (e: any) => {\r\n        setTagEditVisible(false);\r\n    };\r\n\r\n\r\n    const getisSubmitButtonDisabled = (values, isValid) => {\r\n        if (!values.name || !values.description || !isValid) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            validationSchema={validationSchema}\r\n            validateOnBlur={false}\r\n            enableReinitialize={true}\r\n            initialValues={\r\n                { ...tagDetailData }\r\n            }\r\n        >\r\n            {({\r\n                handleChange,\r\n                values,\r\n                handleSubmit,\r\n                errors,\r\n                isValid,\r\n                isSubmitting,\r\n                touched,\r\n                handleBlur,\r\n                setFieldTouched,\r\n                handleReset,\r\n            }) => (\r\n                    <>\r\n                        <Modal\r\n                            title=\"Expense Edit\"\r\n                            visible={tagEditVisible}\r\n                            onOk={(e: any) => handleSubmit(e)}\r\n                            onCancel={handleCancel}\r\n                            okText='Update'\r\n                            okButtonProps={{\r\n                                loading: isSubmitting,\r\n                                htmlType: \"submit\",\r\n                                disabled: getisSubmitButtonDisabled(values, isValid)\r\n                            }}\r\n                        >\r\n                            <Input\r\n                                label='Title'\r\n                                value={values.name}\r\n                                name='name'\r\n                                isError={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n\r\n                                errorString={(touched.name && errors.name) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['name'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('name');\r\n                                }}\r\n                            />\r\n                            <TextArea\r\n                                label='Description'\r\n                                value={values.description}\r\n                                name='description'\r\n                                isError={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n\r\n                                errorString={(touched.description && errors.description) ||\r\n                                    (!isSubmitting && updateTagState.error['error']['description'])}\r\n                                onChange={(e: any) => {\r\n                                    handleChange(e);\r\n                                    setFieldTouched('description');\r\n                                }}\r\n                            />\r\n                        </Modal>\r\n\r\n                    </>\r\n                )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\n\r\nexport default QuickEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router\";\r\n\r\n\r\n// import hooks\r\nimport { useHandleFetch } from \"../../hooks\";\r\n\r\n// import lib\r\nimport {\r\n    FileOutlined,\r\n    InboxOutlined,\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n    PlusOutlined,\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    CheckCircleOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\r\n\r\n\r\n// import components\r\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\r\nimport ExpenseEdit from \"./ExpenseEdit\";\r\n\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Search } = CoolInput;\r\n\r\n\r\ninterface Props {\r\n    productRecord?: any;\r\n}\r\n\r\nconst NewBrandDetail = (props: Props) => {\r\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\r\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\r\n    const [tagEditVisible, setTagEditVisible] = useState(false);\r\n\r\n\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const tagId = params['id'];\r\n\r\n    useEffect(() => {\r\n\r\n        const getBrandDetail = async () => {\r\n            await handleTagDetailFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getBrandDetail();\r\n\r\n    }, [tagId]);\r\n\r\n    useEffect(() => {\r\n        const getTagProducts = async () => {\r\n            await handleTagProductsFetch({\r\n                urlOptions: {\r\n                    placeHolders: {\r\n                        id: tagId\r\n                    }\r\n                }\r\n            })\r\n        };\r\n\r\n        getTagProducts();\r\n\r\n    }, [tagId]);\r\n\r\n\r\n\r\n\r\n    console.log('tagProductsState', tagProductsState);\r\n\r\n    console.log('brandParams', params);\r\n\r\n\r\n    return (\r\n        <div className='brandDetailContainer'>\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Expense Detail\r\n                </h3>\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <>\r\n                        <ExpenseEdit\r\n                            tagEditVisible={tagEditVisible}\r\n                            setTagEditVisible={setTagEditVisible}\r\n                            tagDetailData={tagDetailState.data}\r\n                        />\r\n                        <Button\r\n                            onClick={() => setTagEditVisible(true)}\r\n                            type='link'\r\n                            icon={<EditOutlined />}\r\n                        >\r\n                            Edit\r\n                      </Button>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <Skeleton\r\n                paragraph={{ rows: 2 }}\r\n                loading={tagDetailState.isLoading}>\r\n                {tagDetailState.done && tagDetailState.data && !(Object.keys(tagDetailState.data).length > 0) && (\r\n                    <Empty description='No Expense found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                )}\r\n\r\n                {tagDetailState.done && tagDetailState.data && (Object.keys(tagDetailState.data).length > 0) && (\r\n                    <div className='brandDetailContainer__header'>\r\n\r\n                        <div className='brandDetailContainer__header-info'>\r\n                            <h2>\r\n                                {tagDetailState.data['name']}\r\n                            </h2>\r\n                            <h3>\r\n                                {tagDetailState.data['description']}\r\n                            </h3>\r\n                            {tagDetailState.data['url'] && (\r\n                                <h3>\r\n                                    URL:\r\n                                    <span>\r\n                                        {tagDetailState.data['url']}\r\n                                    </span>\r\n\r\n                                </h3>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n            </Skeleton>\r\n\r\n            <div className='brandDetailContainer__heading'>\r\n                <h3>\r\n                    Products\r\n                </h3>\r\n            </div>\r\n            <div className='brandDetailContainer__body'>\r\n                {tagProductsState.isLoading && <DataTableSkeleton />}\r\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\r\n                    <div style={{\r\n                        marginTop: '100px'\r\n                    }}>\r\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                    </div>\r\n                )}\r\n\r\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\r\n                    <>\r\n                        <Table\r\n                            style={{\r\n                                paddingTop: '10px',\r\n                                borderRadius: '5px !important',\r\n                                overflow: 'hidden',\r\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\r\n                            }}\r\n                            // expandable={{\r\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\r\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\r\n                            //   }}\r\n                            // bordered={true}\r\n                            size='small'\r\n                            // pagination={false}\r\n                            dataSource={tagProductsState.data}\r\n                            tableLayout={'auto'}\r\n                            onHeaderRow={column => {\r\n                                return {\r\n                                    style: {\r\n                                        color: 'red !important'\r\n                                    }\r\n\r\n                                };\r\n                            }}\r\n                        >\r\n                            <Column\r\n                                title=\"\"\r\n                                dataIndex=\"cover\"\r\n                                key=\"id\"\r\n                                width={'80px'}\r\n\r\n                                className='classnameofthecolumn'\r\n\r\n                                render={(cover, record: any) => (\r\n                                    <>\r\n                                        <img\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            src={cover} alt='cover img' style={{\r\n                                                height: '40px',\r\n                                                width: '40px',\r\n                                                objectFit: \"contain\",\r\n                                                borderRadius: '3px',\r\n                                                cursor: 'pointer'\r\n                                            }} />\r\n\r\n\r\n\r\n\r\n                                    </>\r\n                                )}\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Name\"\r\n                                dataIndex=\"name\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n                                render={(text, record: any) => (\r\n                                    <>\r\n                                        <h4\r\n                                            onClick={() => {\r\n                                                history.push(`/admin/product/${record.id}`)\r\n                                            }}\r\n                                            style={{\r\n                                                fontWeight: 400,\r\n                                                color: '#555',\r\n                                                cursor: 'pointer'\r\n\r\n                                            }}>\r\n                                            {text}\r\n                                        </h4>\r\n\r\n\r\n                                    </>\r\n                                )}\r\n\r\n                            />\r\n\r\n                            <Column\r\n                                title=\"Offer Price\"\r\n                                dataIndex=\"offerPrice\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n\r\n                            <Column\r\n                                title=\"Price\"\r\n                                dataIndex=\"price\"\r\n                                key=\"id\"\r\n                                className='classnameofthecolumn'\r\n\r\n                            />\r\n\r\n                        </Table>\r\n                    </>\r\n                )}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewBrandDetail\r\n","import React from 'react'\r\n\r\n\r\n// import pages\r\nimport { Overview } from '../../pages/overview';\r\nimport { CategoryList, NewCategoryDetail } from '../../pages/category';\r\nimport { ProductBundleDetail, ProductBundleList } from '../../pages/productBundle';\r\nimport { BrandList, AddNewBrand, NewBrandDetail } from '../../pages/brand';\r\nimport { ProductList, NewProductDetail } from '../../pages/product';\r\nimport { TagList, AddNewTag, NewTagDetail } from '../../pages/tag';\r\nimport { CouponList, CouponDetail } from '../../pages/coupon';\r\nimport { CustomerList, CustomerDetail } from '../../pages/customer';\r\nimport { PagesList, AddNewPage } from '../../pages/pages';\r\nimport { AttributeList } from '../../pages/attribute';\r\nimport { OrderList, AddNewOrder, OrderDetail,OrderAnalytics } from '../../pages/order';\r\nimport { Component, ManageThemes, Image, Invoice, SiteInfo } from '../../pages/settings';\r\nimport { Delivery } from '../../pages/delivery';\r\nimport Sms from '../../pages/sms';\r\nimport {Email} from '../../pages/email';\r\nimport {NotificationList} from '../../pages/notification';\r\nimport {AdminList, AdminDetail} from '../../pages/admins';\r\nimport {PostList, PostDetail } from '../../pages/post';\r\nimport {StaffList, StaffDetail} from '../../pages/staff';\r\nimport {ExpenseList, ExpenseDetail} from '../../pages/expense';\r\nimport {PostTagList, PostCategoryList, NewPostCategoryDetail, NewPostTagDetail} from '../../pages/post';\r\n\r\n\r\n// import Login from '../../pages/auth/login';\r\n\r\n\r\n// import libraries\r\nimport { Layout } from 'antd';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nconst { Content } = Layout;\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ContentComponent = (props: Props) => {\r\n    return (\r\n        <Content\r\n            hasSider={true}\r\n            style={{\r\n                backgroundColor: '#fff',\r\n                paddingTop: '20px'\r\n            }}\r\n        >\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path='/'\r\n                    render={() => <Redirect to='/admin/overview' />}\r\n                />\r\n\r\n                <Route\r\n                    exact\r\n                    path='/admin'\r\n                    render={() => <Redirect to='/admin/overview' />}\r\n                />\r\n\r\n                <Route path='/admin/overview' exact>\r\n                    <Overview />\r\n                </Route>\r\n                <Route path='/admin/category' exact>\r\n                    <CategoryList />\r\n                </Route>\r\n                <Route path='/admin/category/:id' exact>\r\n                    <NewCategoryDetail />\r\n                </Route>\r\n                {/* <Route path='/admin/category/:name' exact>\r\n                    <CategoryDetail />\r\n                </Route> */}\r\n\r\n                {/* CategoryDetail */}\r\n                <Route path='/admin/brand/new' exact>\r\n                    <AddNewBrand />\r\n                </Route>\r\n                <Route path='/admin/brand' exact>\r\n                    <BrandList />\r\n                </Route>\r\n                <Route path='/admin/brand/:id' exact>\r\n                    <NewBrandDetail />\r\n                </Route>\r\n                <Route path='/admin/product' exact>\r\n                    <ProductList />\r\n                </Route>\r\n                <Route path='/admin/product/:id' exact>\r\n                    <NewProductDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/bundle' exact>\r\n                    <ProductBundleList />\r\n                </Route>\r\n\r\n                <Route path='/admin/bundle/:id' exact>\r\n                    <ProductBundleDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/coupon' exact>\r\n                    <CouponList />\r\n                </Route>\r\n\r\n\r\n                <Route path='/admin/posts' exact>\r\n                    <PostList />\r\n                </Route>\r\n\r\n             \r\n\r\n        \r\n                <Route path='/admin/posts/tag' exact>\r\n                    <PostTagList />\r\n                </Route>\r\n\r\n                <Route path='/admin/posts/category' exact>\r\n                    <PostCategoryList />\r\n                </Route>\r\n\r\n                <Route path='/admin/posts/:id' exact>\r\n                    <PostDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/posts/tag/:id' exact>\r\n                    <NewPostTagDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/posts/category/:id' exact>\r\n                     <NewPostCategoryDetail />\r\n                </Route>\r\n                \r\n                <Route path='/admin/coupon/:id' exact>\r\n                    <CouponDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/notification' exact>\r\n                    <NotificationList />\r\n                </Route>\r\n\r\n                {/* <Route path='/product/new' exact>\r\n                     <AddNewProduct />\r\n                   </Route> */}\r\n\r\n\r\n                <Route path='/admin/tag' exact>\r\n                    <TagList />\r\n                </Route>\r\n                <Route path='/admin/tag/new' exact>\r\n                    <AddNewTag />\r\n                </Route>\r\n                <Route path='/admin/tag/:id' exact>\r\n                    <NewTagDetail />\r\n                </Route>\r\n                <Route path='/admin/attribute' exact>\r\n                    <AttributeList />\r\n                </Route>\r\n                <Route path='/admin/order' exact>\r\n                    <OrderList />\r\n                </Route>\r\n                <Route path='/admin/order/new' exact>\r\n                    <AddNewOrder />\r\n                </Route>\r\n                <Route path='/admin/order/overview' exact>\r\n                    <OrderAnalytics />\r\n                </Route>\r\n\r\n                <Route path='/admin/order/:id' exact>\r\n                    <OrderDetail />\r\n                </Route>\r\n               \r\n                <Route path='/admin/staff' exact>\r\n                    <StaffList />\r\n                </Route>\r\n                <Route path='/admin/staff/:id' exact>\r\n                    <StaffDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/expense' exact>\r\n                    <ExpenseList />\r\n                </Route>\r\n\r\n                <Route path='/admin/expense/:id' exact>\r\n                    <ExpenseDetail />\r\n                </Route>\r\n\r\n                <Route path='/admin/customer' exact>\r\n                    <CustomerList />\r\n                </Route>\r\n                <Route path='/admin/customer/:id' exact>\r\n                    <CustomerDetail />\r\n                </Route>\r\n                <Route path='/admin/page' exact>\r\n                    <PagesList />\r\n                </Route>\r\n                <Route path='/admin/delivery' exact>\r\n                    <Delivery />\r\n                </Route>\r\n                <Route path='/admin/page/new' exact>\r\n                    <AddNewPage />\r\n                </Route>\r\n                <Route path='/admin/settings/components' exact>\r\n                    <Component />\r\n                </Route>\r\n                <Route path='/admin/settings/image' exact>\r\n                    <Image />\r\n                </Route>\r\n                <Route path='/admin/settings/themes' exact>\r\n                    <ManageThemes />\r\n                </Route>\r\n                <Route path='/admin/settings/invoice' exact>\r\n                    <Invoice />\r\n                </Route>\r\n                <Route path='/admin/settings/siteInfo' exact>\r\n                    <SiteInfo />\r\n                </Route>\r\n                <Route path='/admin/settings/admins' exact>\r\n                    <AdminList />\r\n                </Route>\r\n                <Route path='/admin/settings/admins/:id' exact>\r\n                    <AdminDetail />\r\n                </Route>\r\n                <Route path='/admin/sms' exact>\r\n                    <Sms />\r\n                </Route>\r\n\r\n                <Route path='/admin/email' exact>\r\n                    <Email />\r\n                </Route>\r\n\r\n            </Switch>\r\n        </Content>\r\n    )\r\n}\r\n\r\nexport default ContentComponent\r\n","import Content from \"./Content\";\r\nexport default Content; ","import React from 'react';\n\n// import pages\nimport Login from './pages/auth/login';\n\n\n\n// import layouts\nimport Sider from \"./layout/sider\";\nimport Header from './layout/header';\nimport Content from './layout/content';\n// import Footer from './layout/footer';\n\n// import libraries\nimport { Layout } from 'antd';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path='/admin/login' exact>\n\t\t\t\t\t<Login />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t\t<Switch>\n\n\t\t\t\t<Layout style={{ minHeight: '100vh' }}>\n\t\t\t\t\t<Header />\n\n\t\t\t\t\t<Layout className='site-layout'>\n\t\t\t\t\t\t<Sider />\n\t\t\t\t\t\t<Content />\n\t\t\t\t\t</Layout>\n\t\t\t\t\t{/* <Footer /> */}\n\t\t\t\t</Layout>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","import { fetch } from \"../utils\";\r\n\r\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\r\n\r\nconst apiService = ( ) => ( next ) => ( action ) => {\r\n    const result = next( action );\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return result;\r\n    }\r\n\r\n    const { path, method = \"GET\", body } = action.meta;\r\n\r\n    if ( !path ) {\r\n        throw new Error( `'path' not specified for async action ${ action.type }` );\r\n    }\r\n\r\n    const url = `${ baseUrl }${ path }`;\r\n\r\n    return fetch( url, method, body ).then(\r\n        res => handleResponse( res, action, next ),\r\n        err => handleErrors( err, action, next ),\r\n    );\r\n};\r\n\r\nexport default apiService;\r\n\r\nfunction handleErrors( err, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_FAILED`,\r\n        payload: err,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return Promise.reject( err );\r\n}\r\n\r\nfunction handleResponse( res, action, next ) {\r\n    next( {\r\n        type: `${ action.type }_COMPLETED`,\r\n        payload: res,\r\n        meta: action.meta,\r\n    } );\r\n\r\n    return res;\r\n}\r\n","const REGULAR = [\r\n    \"background: blue\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst SUCCESS = [\r\n    \"background: green\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst STARTED = [\r\n    \"background: darkorange\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst FAILURE = [\r\n    \"background: red\",\r\n    \"color: white\",\r\n].join( \";\" );\r\n\r\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\r\n    if ( !active ) {\r\n        return next( action );\r\n    }\r\n\r\n    const prevState = store.getState( );\r\n    const result = next( action );\r\n    const nextState = store.getState( );\r\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\r\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\r\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\r\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\r\n    logGroupEnd( );\r\n    return result;\r\n};\r\n\r\nexport default createLogger;\r\n\r\nfunction logGroupCollapsed( ...args ) {\r\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logGroupEnd( ...args ) {\r\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\r\n    logFunction( ...args );\r\n}\r\n\r\nfunction logInfo( ...args ) {\r\n    console.info( ...args );\r\n}\r\n\r\nfunction determineStyle( action ) {\r\n    if ( !action.meta || !action.meta.async ) {\r\n        return REGULAR;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\r\n        return SUCCESS;\r\n    }\r\n\r\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\r\n        return FAILURE;\r\n    }\r\n\r\n    return STARTED;\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport * as reducers from './ducks';\r\nimport { apiService } from './middlewares';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst persistConfig = {\r\n  key: 'shop',\r\n  storage: storage,\r\n  whitelist: ['session'], // which reducer want to store\r\n};\r\n\r\nconst pReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nfunction configureStore(initialState) {\r\n  return createStore(\r\n    pReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(apiService),\r\n      window.__REDUX_DEVTOOLS_EXTENSION__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : (f) => f\r\n    )\r\n  );\r\n}\r\n\r\nconst store = configureStore({});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\n\n// importing react hot loader for hot loading\nimport { AppContainer } from 'react-hot-loader';\n\n\n// Wrap the rendering in a function:\nconst render = () => {\n\tReactDOM.render(\n\t\t<ReduxProvider store={store}>\n\t\t\t<AppContainer>\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</ReduxProvider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\n\n// Render once\nrender();\n\n\n\n// Webpack Hot Module Replacement API\nif (module['hot']) {\n\tmodule['hot'].accept('./App', () => {\n\t\trender();\n\t});\n}\n\n\n"],"sourceRoot":""}