{"version":3,"sources":["components/Field/Input.tsx","lib/utils/manupulateURL.js","lib/connector.js","lib/converter.js","hooks/useFetch.ts","hooks/useHandleFetch.ts","pages/auth/login/Login.tsx","pages/auth/login/index.ts","state/utils/createReducer.js","state/utils/fetch.js","state/ducks/globalState/reducers.js","state/ducks/globalState/types.js","state/ducks/globalState/actions.js","state/ducks/globalState/index.js","utils/index.ts","layout/sider/Sider.tsx","layout/sider/index.ts","components/Empty/index.ts","components/Empty/Empty.tsx","layout/header/Header.tsx","layout/header/index.ts","pages/overview/ApiVisits.tsx","pages/overview/OrderOverView.tsx","pages/overview/PlatformVisits.tsx","pages/overview/PageVisits.tsx","pages/overview/Overview.tsx","components/Field/TextArea.tsx","components/MediaLibrary/MediaLibrary.tsx","components/MediaLibrary/index.ts","pages/category/MetaTags.tsx","pages/category/CategoryNewQuickEdit.tsx","components/Placeholders/DataTableSkeleton.tsx","pages/category/CategoryList.tsx","pages/category/AddNewCategory.tsx","pages/category/QuickEdit.tsx","pages/category/CategoryNewEdit.tsx","pages/category/NewCategoryDetail.tsx","components/Field/InputSmall.tsx","components/Notification/Notification.tsx","pages/product/Tags.tsx","pages/product/Brands.tsx","pages/product/Categories.tsx","pages/productBundle/ProductBundleQuickEdit.tsx","pages/productBundle/SelectProducts.tsx","pages/order/AddNewOrderProductItem.tsx","pages/productBundle/SelectedProductItems.tsx","pages/productBundle/AddNewProductBundle.tsx","pages/productBundle/ProductBundleList.tsx","pages/productBundle/ProductBundleEdit.tsx","pages/coupon/CouponProducts.tsx","pages/productBundle/ProductBundleDetail.tsx","pages/brand/AddNewBrand.tsx","pages/brand/BrandQuickEdit.tsx","pages/brand/BrandList.tsx","pages/brand/BrandEdit.tsx","pages/brand/NewBrandDetail.tsx","pages/product/Attributes.tsx","pages/product/Pricing.tsx","pages/product/AddNewProduct.tsx","pages/product/ProductQuickEdit.tsx","pages/product/ProductList.tsx","pages/product/ProductEdit.tsx","pages/product/NewProductDetail.tsx","pages/tag/TagQuickEdit.tsx","pages/tag/AddNewTag.tsx","pages/tag/TagList.tsx","pages/tag/TagEdit.tsx","pages/tag/NewTagDetail.tsx","pages/coupon/OrderedProductsSelectProducts.tsx","pages/coupon/OrderedProductsSelectedProductItems.tsx","pages/coupon/CouponEdit.tsx","pages/coupon/CouponDetail.tsx","pages/coupon/CouponQuickEdit.tsx","pages/coupon/AddNewCoupon.tsx","pages/coupon/CouponList.tsx","pages/customer/AddNewCustomer.tsx","pages/customer/QuickEdit.tsx","pages/customer/CustomerList.tsx","pages/customer/CustomerEdit.tsx","pages/customer/CustomerDetail.tsx","pages/pages/PagesList.tsx","pages/pages/PageDetail.tsx","pages/pages/AddNewPage.tsx","pages/pages/PageEdit.tsx","pages/attribute/QuickEdit.tsx","pages/attribute/AddAttributeValues.tsx","pages/attribute/AttributeList.tsx","pages/order/OrderInvoice.jsx","pages/order/productItemForOrderDetail.tsx","pages/order/QuickEdit.tsx","pages/order/OrderList.tsx","pages/order/AddNewOrderSummary.tsx","pages/order/CustomersId.tsx","pages/order/AddProducts.tsx","pages/order/AddNewOrder.tsx","pages/order/OrderEdit.tsx","pages/order/OrderNoteEdit.tsx","pages/order/OrderDetail.tsx","pages/order/orderAnalytics/ThisMonthOrderReport.tsx","pages/order/orderAnalytics/ThisWeekOrderReport.tsx","pages/order/orderAnalytics/DateOrderReport.tsx","pages/order/orderAnalytics/HourOrderReport.tsx","pages/order/orderAnalytics/MonthOrderReport.tsx","pages/order/orderAnalytics/YearOrderReport.tsx","pages/order/orderAnalytics/DeliveryRegionReport.tsx","pages/order/orderAnalytics/index.ts","pages/order/orderAnalytics/OrderOverviewReport.tsx","pages/order/ConfigOrderStatus.tsx","pages/settings/ComponentItem.tsx","pages/settings/AddNewComponent.tsx","pages/settings/ComponentListComponentItem.tsx","pages/settings/AddNewComponentItem.tsx","pages/settings/Component.tsx","pages/settings/AddNewTheme.tsx","pages/settings/ManageThemes.tsx","pages/settings/Image.tsx","pages/settings/Invoice.tsx","pages/settings/AdminSiteInfo.tsx","pages/settings/SiteInfoInvoice.tsx","pages/settings/SiteSeo.tsx","pages/settings/ChangeAdminPassword.tsx","pages/settings/SiteInfo.tsx","pages/delivery/CitySelectForDeliveryRegion.tsx","pages/delivery/DeliveryCharge.tsx","pages/delivery/AddNewRegion.tsx","pages/delivery/QuickEdit.tsx","pages/delivery/Delivery.tsx","pages/sms/ConfigureSMS.tsx","pages/sms/NewCustomerTemplate.tsx","pages/sms/NewDealerAutoEventsTemplate.tsx","pages/sms/OrderStatusTemplateAutoEmail.tsx","pages/sms/OrderTemplateAutoEmail.tsx","pages/sms/ConfigureAutoEmail.tsx","pages/sms/ComposeCustomSMS.tsx","pages/sms/InboxEmailDetails.tsx","pages/sms/Inbox.tsx","pages/sms/Sms.tsx","pages/sms/index.ts","pages/email/ConfigureSTMP.tsx","pages/email/NewCustomerTemplate.tsx","pages/email/NewDealerAutoEventsTemplate.tsx","pages/email/OrderStatusTemplateAutoEmail.tsx","pages/email/OrderTemplateAutoEmail.tsx","pages/email/ConfigureAutoEmail.tsx","pages/email/ComposeCustomEmail.tsx","pages/email/InboxEmailDetails.tsx","pages/email/Inbox.tsx","pages/email/Email.tsx","pages/notification/NotificationList.tsx","pages/admins/AccessCheckbox.tsx","state/ducks/credentials/reducers.js","state/ducks/credentials/types.js","state/ducks/credentials/actions.js","state/ducks/credentials/index.js","pages/admins/QuickEdit.tsx","pages/admins/AddNewAdmin.tsx","pages/admins/AdminList.tsx","pages/admins/AdminEdit.tsx","pages/admins/AdminDetail.tsx","pages/post/Tags.tsx","pages/post/Categories.tsx","pages/post/SelectProducts.tsx","pages/post/SelectedProductItems.tsx","pages/post/PostQuickEdit.tsx","pages/post/AddNewPost.tsx","pages/post/PostList.tsx","pages/post/PostEdit.tsx","pages/post/PostDetail.tsx","pages/post/postTags/QuickEdit.tsx","pages/post/postTags/AddNewPostTag.tsx","pages/post/postTags/PostTagList.tsx","pages/post/postTags/TagEdit.tsx","pages/post/postTags/NewPostTagDetail.tsx","pages/post/postCategory/MetaTags.tsx","pages/post/postCategory/QuickEdit.tsx","pages/post/postCategory/AddNewPostCategory.tsx","pages/post/postCategory/PostCategoryList.tsx","pages/post/postCategory/PostCategoryEdit.tsx","pages/post/postCategory/NewPostCategoryDetail.tsx","components/Field/DatePicker.tsx","pages/staff/AddNewStaff.tsx","pages/staff/QuickEdit.tsx","pages/staff/StaffList.tsx","pages/staff/StaffEdit.tsx","pages/staff/StaffDetail.tsx","pages/staff/salaryReport/ComponentItem.tsx","pages/staff/salaryReport/AddNewSalaryReport.tsx","pages/staff/salaryReport/SalaryReportList.tsx","pages/staff/salaryReport/SalaryReportDetail.tsx","pages/expense/QuickEdit.tsx","pages/expense/AddNewExpense.tsx","pages/expense/ExpenseList.tsx","pages/expense/ExpenseEdit.tsx","pages/expense/ExpenseDetail.tsx","pages/dealer/Areas.tsx","pages/dealer/AddNewDealer.tsx","pages/dealer/QuickEdit.tsx","pages/dealer/DealerList.tsx","pages/dealer/DealerEdit.tsx","pages/dealer/DealerDetail.tsx","pages/dealer/Area/AreaQuickEdit.tsx","pages/dealer/Area/AddNewArea.tsx","pages/dealer/Area/AreaList.tsx","pages/dealer/Area/AreaEdit.tsx","pages/dealer/Area/AreaDetail.tsx","layout/content/Content.tsx","layout/content/index.ts","App.tsx","state/ducks/busy/utils.js","state/ducks/busy/reducers.js","state/ducks/busy/index.js","state/ducks/cart/utils.js","state/ducks/cart/selectors.js","state/ducks/cart/index.js","state/ducks/cart/reducers.js","state/ducks/cart/types.js","state/ducks/wishList/utils.js","state/ducks/wishList/index.js","state/ducks/wishList/reducers.js","state/ducks/wishList/types.js","state/ducks/checkout/selectors.js","state/ducks/checkout/index.js","state/ducks/checkout/reducers.js","state/ducks/checkout/types.js","state/ducks/checkout/utils.js","state/ducks/search/types.js","state/ducks/search/utils.js","state/ducks/search/index.js","state/ducks/search/reducers.js","state/ducks/product/reducers.js","state/ducks/product/types.js","state/ducks/product/index.js","state/ducks/session/reducers.js","state/ducks/session/types.js","state/ducks/session/index.js","state/ducks/category/reducers.js","state/ducks/category/types.js","state/ducks/category/index.js","state/ducks/cache/reducers.js","state/ducks/cache/types.js","state/ducks/cache/index.js","state/ducks/brand/reducers.js","state/ducks/brand/types.js","state/ducks/brand/index.js","state/ducks/tag/reducers.js","state/ducks/tag/types.js","state/ducks/tag/index.js","state/middlewares/apiService.js","state/middlewares/logger.js","state/store.js","index.tsx"],"names":["Demo","Input","TextArea","required","addonBefore","label","type","value","defaultValue","onChange","disabled","isError","errorString","name","placeHolder","min","className","Item","validateStatus","help","onKeyDown","event","key","preventDefault","style","borderRadius","placeholder","isObjectEmpty","Object","keys","length","manupulateURL","url","urlOptions","params","placeHolders","console","log","split","map","currentValue","includes","actualPlaceholderValue","replace","fuckValue","item","join","param","slice","indexOf","converter","resData","data","formatedData","category","id","_id","description","productCount","parent","cover","config","thumbnail","icon","image","img","medium","added","title","labels","alt","caption","subCount","subCategory","children","subCat","original","notiData","forEach","not","read","push","noti","heading","text","link","page","next","convertedData","product","regularPrice","price","offerPrice","unit","pricing","date","time","venue","brand","tags","parseInt","available","minimum","cartItems","items","cartItem","quantity","cartKey","updated","status","avalable","isNext","post","body","preparationTime","servingSize","cookingTime","requiredProducts","detail","category2","cat","anotherPrice","startDate","endDate","actualPrice","products","visit","count","itemId","firstName","lastName","country","city","email","phone","address1","address2","created","code","minimumOrder","maximumOrder","freeProducts","orderedProductsCount","orderedProducts","freeProductsCount","amountType","amount","freeDelivery","maxUsePerUser","tag","recipient","subject","html","sms","success","msg","succes","customer","dealerName","dealer","address","commission","depositMoney","theme","components","component","region","pickUpLocation","countryCode","countryName","charge","availableStock","minimumStock","primaryCategory","inserted","staff","topic","order","shippingAddress","shortCode","total","totalPrice","deliveryCharge","deliveryRegion","deliveryName","deliveryPickUpLocation","deliveryCountryName","date_created","paymentMethod","paymentStatus","payment","customerId","billingAddress","generalFormat","dataMap","line_items","paymentItems","number","src","target","navLinkItems","sliderItems","images","sliderRightItems","servicesItems","accountItems","aboutUsItems","Connector","this","options","getUrlOptions","getUrl","api","method","limitNumber","format","apiMap","server","credentials","headers","Headers","JSON","stringify","fetch","baseURL","res","formattedData","error","connector","dataFetchReducer","state","action","isLoading","done","payload","Error","useFetch","dependencies","initialData","initialState","useReducer","dispatch","useEffect","didCancel","a","request","fetchData","useHandleFetch","validationSchema","Yup","shape","username","password","initialValues","Login","loginState","handleLoginFetch","handleSubmit","values","actions","setSubmitting","getisSubmitButtonDisabled","isValid","onSubmit","validateOnBlur","enableReinitialize","handleChange","errors","isSubmitting","touched","setFieldTouched","handleBlur","handleReset","maxWidth","margin","e","onClick","loading","reducerMap","reducer","Accept","isomorphicFetch","then","Promise","resolve","reject","response","parseStatus","json","globalState","createReducer","roles","saveRoles","isAccess","role","adminRoles","Sider","Layout","Header","Content","Footer","SubMenu","Menu","mapDispathToProps","glboalOperations","connect","useState","collapsed","setcollapsed","width","boxShadow","border","collapsible","onCollapse","selectable","mode","PieChartOutlined","to","GoldOutlined","RadarChartOutlined","TagsOutlined","TagOutlined","BranchesOutlined","FireOutlined","CarOutlined","ShoppingCartOutlined","UserOutlined","MailOutlined","MessageOutlined","FileOutlined","FileSearchOutlined","FileAddOutlined","SettingOutlined","UserAddOutlined","SlidersOutlined","BgColorsOutlined","Empty","height","display","justifyContent","alignItems","PRESENTED_IMAGE_SIMPLE","props","history","useHistory","getAllNotificationState","handleGetAllNOticationFetch","handleMarkNotificationAsReadFetch","handleMarkAllNotificationAsReadFetch","notificationList","setnotificationList","sortItem","sortOrderValue","getAllNotification","handleNotificationAsRead","handleAllNotificationAsRead","notification","message","CheckCircleOutlined","color","typeIcon","background","zIndex","transition","alignContent","marginTop","marginLeft","cursor","marginRight","placement","overlay","backgroundColor","padding","textAlign","fontSize","href","index","eventId","moment","overflowCount","showZero","TwitterSquareFilled","fontWeight","BellOutlined","LogoutOutlined","Option","Select","RangePicker","DatePicker","MONTHS","TooltipContainerStyles","ApiVisits","selectedApiValue","setSelectedApiValue","setStartDate","setEndDate","demoGraphicVisitsState","handleDemoGraphicVisitsStateFetch","userData","setuserData","metricType","startDateValue","endDateValue","uservisitsDataRes","getDemoGraphicVisitsValue","Date","thisMonth","getMonth","bordered","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","size","x1","y1","x2","y2","offset","stopColor","vertical","strokeDasharray","stroke","dataKey","tickFormatter","orientation","axisLine","tickLine","contentStyle","formatter","fill","showTime","picker","orderAnalyticsVisitsState","handleOrderAnalyticsVisitsStateFetch","orderData","setorderData","ordersDataRes","getAnalyticsOrders","localOptions","COLORS","PlatformVisits","demographicData","setdemographicData","RADIAN","Math","PI","marginBottom","outerRadius","innerRadius","nameKey","cx","cy","midAngle","percent","radius","x","cos","y","sin","dominantBaseline","toFixed","labelLine","entry","CalendarOutlined","Column","Table","ColumnGroup","PageVisits","pageVisitsState","handlePageVisitsStateFetch","visitType","getPageVisitsValue","pagination","defaultPageSize","dataSource","tableLayout","onHeaderRow","column","dataIndex","render","record","textTransform","Overview","handleAnalyticsProductVisitCountFetch","handleAnalyticsCategoryVisitCountFetch","handleGetTotalUserCountFetch","getTotalUserCount","getProductVisitCount","getCategoryVisitCount","OrderOverView","rows","Dragger","Upload","TabPane","Tabs","openSuccessNotification","MediaLibrary","visible","setvisible","setmyImages","isModalOpenForImages","myImages","isModalOpenForThumbnail","setmyThumbnailImage","myThumbnailImage","mediaLibTagActiveKey","setmediaLibTagActiveKey","fileList","setfileList","uploading","setuploading","selectedimages","setselectedImages","activeImageItem","setactiveImageItem","updateMediaLibrary","handleUpdateMediaLibraryFetch","imageListFromLibraryState","handleImageListFromLibraryFetch","handleDeleteImageFromLibraryFetch","localImageList","setLocalImageList","isDoneOk","setisDoneOk","handleDeleteImageFromImageLibrary","deleteImageLibraryItemRes","newImageList","filter","getImageList","imageListRes","handleUpload","formData","FormData","file","append","reqwest","processData","withCredentials","uploadProps","multiple","onRemove","filelist","newFileList","splice","beforeUpload","xflelist","handleAddToSelectedList","find","newselectedImages","handleUpdateSubmit","updateImageLibraryItemRes","positionInImageList","updatedItem","assign","updateImageList","openErrorNotification","InfoCircleOutlined","getisUpdateSubmitButtonDisabled","top","onOk","onCancel","bodyStyle","okText","activeKey","tab","listType","FileImageOutlined","ArrowUpOutlined","lenght","CloseOutlined","CheckOutlined","DeleteOutlined","ImageItemMenu","EllipsisOutlined","onConfirm","cancelText","MetaTags","inputVisible","inputValue","editInputIndex","editInputValue","handleClose","removedTag","setTags","showInput","setState","focus","handleInputChange","handleInputConfirm","handleEditInputChange","handleEditInputConfirm","newTags","saveInputRef","saveEditInputRef","editInput","ref","onBlur","onPressEnter","isLongTag","tagElem","closable","onClose","onDoubleClick","PlusOutlined","React","Component","bnName","bnDescription","metaTitle","bnMetaTitle","metaDescription","bnMetaDescription","metaTags","bnMetaTags","displayOrder","ModalChildComponent","addNewCategoryVisible","setAddNewCategoryVisible","categoryList","setcategoryList","categoryDetailData","categoryList2","addCategoryState","handleAddCategoryFetch","categoryDetailState","handleCategoryDetailFetch","handleUpdateCategoryIconFetch","handleUpdateCategoryThumbnailFetch","isparentCategoryChecked","setisparentcategoryChecked","setisModalOpenForThumbnail","setisModalOpenForImages","selectedParentId","setselectedParentId","imageFile","setImagefile","imageUrl","setImageUrl","thumbnailImageFile","setThumbnailImagefile","thumbnailImageUrl","setThumbnailImageUrl","loadingThumnail","setLoadingThumbnail","bnTags","setBnTags","coverImageId","setCoverImageId","handleAttachImageToItemMultipleFetch","handleAttachImageToItemSingleFetch","handleDetachImageFromItemSingleFetch","handleSetImageAsThumbnailToItemFetch","getProductDetail","mahImages","handleSetImageAsThumnail","handleDetachSingleImage","imageId","collection","thumbnailRes","imagesIds","trim","aboutToUpdatedImageIds","bn","addCategoryRes","getCover","positionInTag","updateTagList","resetForm","err","i","onSwitchChange","checked","onChangeSelect","getBase64","callback","reader","FileReader","addEventListener","result","readAsDataURL","setNewIcon","beforeThumbnailUpload","iconUrl","uploadButton","LoadingOutlined","defaultChecked","showUploadList","newImages","handleImagesDelete","FileImageFilled","AddNewCategory","destroyOnClose","footer","okButtonProps","htmlType","DataTable","speed","viewBox","foregroundColor","rx","ry","r","metadata","github","filename","Search","MyTable","data2","activeCategoryForEdit","setactiveCategoryForEdit","handleDeleteCategoryFetch","handleDeleteCategory","deleteCategoryRes","newCategoryList","paddingTop","overflow","align","EditOutlined","CategoryNewQuickEdit","withRouter","categoryState","handleCategoryListFetch","setcategoryList2","isSubCategory","productCountValue","categories","setCategories","enterButton","handleSearch","DataTableSkeleton","bnData","bnFormData","get","handleCancel","setcategoryDetailData","CoolInput","categoryProductsState","handleCategoryProductsFetch","useParams","categoryId","categoryEditVisible","setCategoryEditVisible","categoryDetail","setcategoryDetail","categoryDetailDataRes","getCategoryDetail","getCategoryProducts","row","imgs","columns","localIndex","columnNumber","getImagesInCollumn","CategoryNewEdit","avatar","paragraph","objectFit","allowClear","ExclamationCircleOutlined","CheckableTag","Tag","Tags","setTagIds","setSelectedTags","selectedTags","setoptions","tagState","handleTagListFetch","searchValue","setsearchValue","selectedCategoryName","selectedcategory","tagListRes","tagOptions","borderColor","onSearch","categoryNames","newOptions","nextSelectedTags","t","selectedCategoryIds","Brands","setBrandId","brandId","productDetailState","setSelectedBrandId","brandState","brandListRes","brandOptions","setBrands","onFocus","val","Categories","setcategoryIds","categoryOptions","setCategoryOptions","categoryListRes","maxHeight","checkable","checkedKeys","onSelect","selectedKeys","info","onCheck","checkedIds","treeData","defaultExpandAll","checkStrictly","bundlePrice","AddNewProduct","bundleList","productList","setBundleList","setProductList","productDetailData","updateProductState","handleProductDetailFetch","categoryids","tagIds","setPricing","setDateFeild","setTimeFeild","setDescription","setBNDescription","setMetaTags","setBnMetaTags","productIds","setProductIds","addProductState","handleAddProductFetch","regular","offer","setPrice","variation","model","metaUnit","addProductRes","positionInAttribute","updateProductList","newProductList","isTrue","categoryIds","editor","ClassicEditor","onInit","getData","InputSmall","selectedOpions","setselectedOptions","isProductIdsfirstTime","selectItems","o","CartOverLayCartItem","productId","handleProductFetch","setProduct","setIsLoading","modifiedPrice","setModifiedPrice","selectedVariationId","setSelectedVariationId","getAndSetProduct","handleChangeQuantity","updateAttributeList","convertAttributeValuesToStringValue","attribute","attributeValue","pricingOptions","pricingItem","pricingOption","getPricingOptions","priceItem","getPriceByVariationId","tagId","handleAttributeChange","AddNewOrderSummary","flexDirection","AddNewOrderProductItem","SelectProducts","SelectedProductItems","setTagList","handleDeleteTagFetch","handleDeleteTag","deleteTagRes","newtagList","ProductBundleQuickEdit","TagList","tagList","productType","newTagList","AddNewProductBundle","CouponProducts","NewBrandDetail","productEditVisible","setProductEditVisible","ProductBundleEdit","AddNewBrand","brandList","setBrandList","updateBrandState","handleUpdateBrandFetch","visibleMedia","setvisibleMedia","addBrandRes","ModalComponentChildItem","brandDetailData","setBrandEditVisible","brandEditVisible","brandDetailState","handleBrandDetailFetch","myGoddamnImages","setMyGoddamnImages","getBrandDetail","updateBrandRes","handleDeleteBrandFetch","handleDeleteBrand","deleteBrandRes","newBrandList","BrandQuickEdit","handlebrandListFetch","brands","setBrandDetailData","brandProductsState","handleBrandProductsFetch","brandDetailRes","getBrandProducts","BrandEdit","Complete","setAttributeList","attributeList","suggestedOptions","setsuggesteOptions","attributeLisState","attributeItem","setAttributeITem","manupulatedOptions","suggestedOption","toUpperCase","Pricing","handleAddPricing","handleUpdatePricing","isPricingEditActive","setprice","stock","setStock","maximumPurchaseLimit","setMaximumPurchaseLimit","attributeListItems","attributeKey","handlePriceChange","handleStockChange","Attributes","minHeight","purchaseLimit","bnUnit","editpricingItem","setEditPricingItem","pricingTagActiveKey","setpricingTagActiveKey","seTisPricingEditActive","updatePricingList","animated","tabPosition","handleEditPricing","newPricing","handleDeletePricing","textDecoration","Boolean","handleUpdateProductFetch","selectedTagNames","selectedTagIds","updatedProductRes","handleDeleteProductFetch","handleUpdateOrderStatusFetch","handleDeleteProduct","deleteProductRes","handleUpdateOrderStatus","newStatus","inStock","updateOrderStatusRes","updateOrderList","StatusItemMenu","DownOutlined","ProductQuickEdit","productState","handleProductListFetch","setProducts","setProductDetailData","productDetailRes","ProductEdit","QuickEdit","tagEditVisible","setTagEditVisible","tagDetailData","updateTagState","handleUpdateCategoryFetch","updateTagRes","addTagState","handleAddTagFetch","addTagRes","TagQuickEdit","AddNewTag","setTagDetailData","tagDetailState","handleTagDetailFetch","tagProductsState","handleTagProductsFetch","tagDetailRes","getTagProducts","TagEdit","selecttedOptions","addCouponState","handleAddCouponStateFetch","couponDetailState","handleCouponDetailFetch","freeProductIds","freeProductList","setFreeProductList","handleStartEndDateRangeDate","undefined","OrderedProductsSelectProducts","OrderedProductsSelectedProductItems","CouponEdit","CouponQuickEdit","Couponlist","AddNewCoupon","zipCode","dealerCode","customerList","setCustomerList","addCustomerState","handleAddCustomerFetch","selectedCountryValue","setselectedCountryValue","selectedCityValue","setselectedCityValue","countryOptions","setcountryOptions","cityOptions","setcityOptions","countryListState","handleCountryListFetch","cityListState","handleCityListFetch","toggleReferralCode","settoggleReferralCode","addCustomerRes","onChangeCity","onChangeCountry","CountryListRes","setCountries","cityListRes","setCities","notFoundContent","updateCustomerState","handleUpdateCustomerFetch","updateCustomerRes","handleDeleteCustomerFetch","handleDeleteCustomer","deleteCustomerRes","newCustomerList","customerState","handleCustomerListFetch","orderStatusFilterValue","setorderStatusFilterValue","getSorttingvalue","customers","setCustomers","AddNewCustomer","setCustomerDetailData","customerDetailState","handleCustomerDetailFetch","orderListState","handleOrderListFetch","customerDetailData","customerDetailDataRes","getCustomerDetail","getOrderList","CustomerEdit","handleDeletePageFetch","handleDeletePage","deletePageRes","pageList","setPageList","pageState","handlePagsListFetch","pages","setPages","ReactHtmlParser","Steps","Step","content","bnContent","AddNewPage","addPageState","handleAddPageFetch","setContent","setBnContent","handleAddPageSubmit","addOrderRes","updateCategoryState","EditableTagGroup","AttributeList","AddAttributeValues","ComponentToPrint","orderDetailState","invoiceSettingsState","anotherRef","cellPadding","cellSpacing","bgcolor","borderBottom","paddingBottom","lineHeight","verticalAlign","colSpan","unitPrice","whiteSpace","OrderInvoice","setShowInvoice","showInvoice","handleOrderDetailFetch","componentRef","useRef","createRef","handlSiteInvoiceSettingsFetch","getSiteSettings","getOrderDetail","window","print","targetRef","toPdf","FilePdfOutlined","documentTitle","trigger","PrinterOutlined","current","setOrderList","orderList","updateOrderState","handleUpdateOrderFetch","addRegionRes","updateRegionList","newOrderstatus","orderState","deliveryRegionNameValue","setdeliveryRegionNameValue","statusValue","regions","setOrders","regionList","setRegionList","handleRegionListFetch","regionListOptions","setRegions","joiningDate","Status","newOrderList","DownloadOutlined","memo","ShopOutlined","setCustomerId","setSelectedCustomerData","customerData","productListState","productOptions","additionalInfo","steps","AddNewOrder","addOrderState","handleOrderFetch","selectedCustomerData","setCurrent","customerListState","handleDeliveryRegionFetch","deliveryRegionName","setDeliveryRegionName","setSelectedRegion","regionDeliveryCharge","setregionDeliveryCharge","isDeliveryChargeExists","cityName","deliveryRegionState","getAndSetShippingDeliveryCharge","selectedRegion","handleCheckoutSubmit","delivery","CustomersId","AddProducts","Group","flexWrap","deliveryRegionItem","handleDeviliveryRegionChange","ClockCircleOutlined","CaretRightOutlined","CaretLeftOutlined","summary","note","setOrderNotes","orderNotes","activeNote","orderDetailNotesState","handleOrderDetailNotesFetch","handleDeleteOrderNoteFetch","activeOrderNote","setActiveOrderNote","isOrderNoteEdit","setIsOrderNoteEdit","isInvoiceShow","setIsInvoiceShow","handleDeleteOrderNote","newOrderNoteList","OrderNoteEdit","OrderEdit","EyeOutlined","flex","minWidth","noteItem","getMonthNameByOrder","WEEEK","getWeekNameByOrder","getHourFormatter","DeliveryRegionReport","OrderOverviewReport","ThisWeekOrderReport","ThisMonthOrderReport","DateOrderReport","HourOrderReport","MonthOrderReport","YearOrderReport","ConfigOrderStatus","setItemsList","itemsList","componentItem","localComponentItem","setlocalComponentItem","handleComponentItemsChange","updateComponentList","groupName","componentList","setComponentList","addComponentState","handleAddComponentFetch","addComponentRes","handleAddComponentItem","itemComponent","ComponentItem","componentUpdate","isLoadingUpdate","Set","SaveOutlined","updateComponentByAddingItem","componentId","Panel","Collapse","genExtra","updateComponentByDeleting","stopPropagation","genExtraForGroup","setitemVisible","handleDeleteComponent","setComponentId","groupVisible","setgroupVisible","itemVisible","componentState","handleComponentListFetch","handleDeleteComponentFetch","updateComponentState","handleUpdateComponentFetch","imageValue","setComponents","deleteComponentRes","newComponentList","positionInItemsOfComponent","componentIndex","positionInComponents","itemIndex","manupulatedLocalComponentForTheReq","componentItems","imgItem","updatedItems","manupulatedUpdatedItems","manupulatedUpdatedItem","updateComponentRes","accordion","expandIconPosition","expandIcon","isActive","rotate","header","extra","ComponentListComponentItem","AddNewComponent","AddNewComponentItem","themeList","setThemeList","addThemeState","handleAddthemeFetch","setselectedThemeTypeValue","setname","thumbnailFile","setThumbnailFile","addThemeRes","path","InboxOutlined","themeState","handleThemeListFetch","handleActiveThemeFetch","handleDeleteThemeFetch","themes","setThemes","handleActiveTheme","activeThemeRes","handleDeleteTheme","deleteThemeRes","newThemeList","danger","AddNewTheme","Image","Invoice","adminEmail","adminName","adminPhone","UpdateSiteinfo","UpdateSiteSettingsState","handleUpdateSiteSettingsFetch","siteSettingsState","handlSiteSettingsFetch","addSiteInfoRes","invoiceTitle","additionalText","updateInfovSettingsState","handleUpdateInvoiceSettingsFetch","InvoiceSettingsState","updateInvoiceRes","injectHTML","UpdateSiteSEO","newPassword","newPassword2","oneOf","newPass","ChangeAdminPassword","newPassRepeat","paddingRight","SiteInfo","handleUpdateSiteLogoAndIconFetch","iconimageUrl","setIconImageUrl","loadingIcon","setloadingIcon","appLogo","setAppLogo","loadingAppLogo","setloadingAppLogo","iconUploadButton","appIconUploadButton","defaultActiveKey","AdminSiteInfo","onError","SiteSeo","SiteInfoInvoice","AccessCheckbox","checkedList","setCheckedList","plainOptions","checkAll","setCheckAll","setPlainOptions","setInterminate","checkedCities","accessItem","span","DeliveryCharge","deliveryChargeItem","setdeliveryChargeList","deliveryChargeList","handleDeliveryChargeChange","updatedValue","handleAttributeDelete","AddNewRegion","addRegionState","handleRegionFetch","accesscheckedList","setAccessCheckedList","floor","random","handleAddDeliveryCharge","CitySelectForDeliveryRegion","updateRegionState","handleUpdateRegionFetch","deliveryChargeListFromRegionDetail","chargeKey","handleDeleteRegioFetch","handleDeleteRegion","deleteRegionRes","newRegionList","charges","regionState","ConfigureSTMP","getEmailConfigurationState","handleGetEmailConfigurationFetch","emailConfigurationState","handleEmailConfigurationFetch","isAuthenticated","setIsAuthenticated","isArraySupport","setIsArraySupport","configurationData","setConfigurationData","setMethod","protocol","setProtocol","getEmailConfiguration","authentication","parameters","recipientKey","arraySupport","separator","textKey","mask","maskKey","maskValue","usernameKey","usernameValue","passwordKey","passwordValue","additional","MsgType","additionalMsgType","handleAuthenticatedChange","prottocolOptions","methodOptions","handleMethodChange","handleProtocolChange","setVisible","autoEmailTemplate","handleAutoEmailTemplateFetch","handleGetConfigureAutoEmailTemplateFetch","setcustomer","admin","setadmin","getConfigurationAutoEmailTemplateRes","eventName","getCustomerAutoEmail","overflowY","user","ConfigureAutoEmail","getAutoEmailConfigurationState","handleGetAutoEmailConfigurationFetch","configureAutoEmailConfigurationState","handleAutoEmailConfigurationFetch","isnewCustomerAdmin","setnewCustomerAdmin","isnewCustomerCustomer","setnewCustomerCustomer","isnewDealerAdmin","setnewDealerAdmin","isnewDealer","setnewDealerDealer","isorderAdmin","setorderAdmin","isorderStatusAdmin","setorderStatusAdmin","isorderCustomer","setorderCustomer","isorderStatusCustomer","setIsorderStatusCustomer","newcustomermodal","setnewcustomermodal","newDealermodal","setnewDealermodal","ordermodal","setordermodal","orderStatusmodal","setorderStatusmodal","autoEmailData","setAutoEmailData","getAutoEmailConfiguration","handleUpdateAutoEmail","newCustomer","orderStatus","newDealer","updateAutoEmailRes","NewCustomerTemplate","NewDealerAutoEventsTemplate","OrderStatusTemplateAutoEmail","OrderTemplateAutoEmail","ComposeCustomEmail","sendCustomerEmailState","handleSendCustomEmailFetch","setText","setrecipient","handleMsgSend","tokenSeparators","SendOutlined","InboxEmailDetails","setSelectedEmailId","getEmailDetailState","handleGetEmailListFetch","LeftOutlined","Inbox","emailList","getEmailListState","setEmailList","selectedEmailId","substring","Sms","limitCount","sortItemValue","PlusCircleOutlined","SMS","fromEmail","fromName","host","encryption","port","smtpUsername","smtpPassword","sethtml","NotificationList","saveCredentials","credentialsOperations","access","password2","passwordConfirmation","AddNewAdminRoles","deleteTagState","AddNewAdmin","AdminEdit","bnBody","bnPreparationTime","bnServingSize","bnCookingTime","ModalComponentChild","setBody","setBnBody","tagsOne","categoryOne","tagNames","setPostDetailData","postDetailData","AddNewPostCategory","DatePickerComponent","withTime","salary","designation","fatherName","motherName","NID","handleTimeChange","dateString","StaffQuickEdit","AddNewStaff","setCustomer","customerDetail","setCustomerDetail","StaffEdit","month","setMonthFeild","convertedYear","convertedMonth","convertedStaffs","bonus","convince","negative","year","handleMonthChange","UsergroupAddOutlined","months","totalSalary","totalBonus","totalConvince","totalExtra","totalNegative","AddNewExpense","ExpenseEdit","max","dealerArea","Areas","area","areas","registeredCustomerListState","handleRegisteredCustomerListFetch","getRegisteredOrderList","hasSider","exact","NewCategoryDetail","BrandList","NewProductDetail","ProductBundleList","ProductBundleDetail","CouponList","PostList","PostTagList","PostCategoryList","PostDetail","NewPostTagDetail","NewPostCategoryDetail","CouponDetail","NewTagDetail","OrderList","OrderDetail","DealerList","AreaList","AreaDetail","DealerDetail","StaffList","SalaryReportList","SalaryReportDetail","StaffDetail","ExpenseList","ExpenseDetail","CustomerDetail","PagesList","PageEdit","PageDetail","Delivery","ManageThemes","AdminList","AdminDetail","Email","handleAdminCredentCialsFetch","getCredenCials","actionShouldBlock","meta","async","blocking","actionFinished","utils","productPositionInCart","cart","newCartItem","isSelectedForCheckout","tempArrayWithOutOldProduct","productPositionInWishList","wishList","wishlist","ADD","queryPositionInQueryList","queryList","query","types","currentItem","oldQuery","tempArrayWithOutOldQueries","detailsReducer","listReducer","combineReducers","details","list","authReducer","redirectAfterLoginReducer","redirectUrl","redirectAfterLogin","cartReducer","baseUrl","document","apiService","handleResponse","handleErrors","rootReducer","reducers","persistConfig","storage","pReducer","persistReducer","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","persistStore","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.597fcbad.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst { TextArea } = Input;\n\ninterface Props {\n  label?: string;\n  type?: string;\n  defaultValue?: string;\n  value?: string;\n  onChange?: any;\n  disabled?: boolean;\n  isError?: boolean;\n  errorString?: string;\n  name?: string;\n  addonBefore?: string;\n  required?: boolean;\n  placeHolder?: string;\n  min?: any;\n}\n\nconst Demo = ({\n  required,\n  addonBefore,\n  label,\n  type,\n  defaultValue,\n  value,\n  onChange,\n  disabled,\n  isError,\n  errorString,\n  name,\n  placeHolder,\n  min,\n}: Props) => {\n  return (\n    <>\n      {label && <h3 className='inputFieldLabel'>{label}</h3>}\n\n      <Form.Item\n        // hasFeedback={true}\n        validateStatus={isError ? 'error' : ''}\n        // hasFeedback validateStatus=\"success\"\n        help={errorString}\n        // rules={[{ required: true }]}\n      >\n        <Input\n          onKeyDown={(event) => {\n            if (type === 'number') {\n              if (event.key === 'e' || event.key === '-') {\n                event.preventDefault();\n              }\n            }\n          }}\n          min={min}\n          required={required}\n          type={type}\n          addonBefore={addonBefore}\n          style={{\n            borderRadius: '0',\n          }}\n          name={name}\n          disabled={disabled}\n          value={value}\n          onChange={onChange}\n          className='inputclassName'\n          placeholder={placeHolder}\n        />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default Demo;\n","const isObjectEmpty = (value) => {\n  return !value || !Object.keys(value).length > 0;\n};\n\nconst manupulateURL = (url, urlOptions = {}) => {\n  if (isObjectEmpty(urlOptions)) return url;\n\n  const params = urlOptions.params || {};\n  const placeHolders = urlOptions.placeHolders || {};\n\n  console.log('99fsdfads', urlOptions);\n  return url\n    .split('/')\n    .map((currentValue) => {\n      if (\n        currentValue.includes(':') &&\n        !isObjectEmpty(placeHolders) &&\n        !currentValue.includes('?')\n      ) {\n        console.log('currentValue', currentValue);\n        let actualPlaceholderValue =\n          placeHolders[currentValue.replace(':', '')];\n        console.log('actualPlaceholderValue', actualPlaceholderValue);\n        currentValue = actualPlaceholderValue;\n      }\n\n      if (\n        currentValue.includes(':') &&\n        !isObjectEmpty(placeHolders) &&\n        currentValue.includes('?')\n      ) {\n        let fuckValue = currentValue.split('?');\n        if (fuckValue && fuckValue.length > 0) {\n          fuckValue = fuckValue.map((item) => {\n            return placeHolders[item.replace(':', '')]\n              ? placeHolders[item.replace(':', '')]\n              : item;\n          });\n        }\n        console.log('fuckValue', fuckValue);\n        let actualPlaceholderValue = fuckValue.join('?');\n        console.log(\n          'actualPlaceholderValue',\n          actualPlaceholderValue,\n          'currentVAlue',\n          currentValue\n        );\n        console.log('placeHolders', placeHolders);\n        currentValue = actualPlaceholderValue;\n      }\n\n      if (currentValue.includes('?')) {\n        currentValue = currentValue\n          .split('&')\n          .map((currentValue) => {\n            const param = currentValue.slice(currentValue.indexOf('=') + 1);\n            return currentValue.replace(param, params[param] || '');\n          })\n          .join('&');\n      }\n      return currentValue;\n    })\n    .join('/');\n};\n\nexport default manupulateURL;\n","import config from '../config.json';\nimport apiMap from '../apiMap.json';\nimport Converter from './converter.js';\n\n// import utils\nimport { manupulateURL } from './utils';\n\nlet converter = new Converter();\n\nclass Connector {\n  //TODO\n  constructor() {\n    this.options = {};\n  }\n\n  /**\n   * @method request sends request to server\n   * this function determines api url and method from config.json\n   * and sends request and converts recieved data to general format\n   * @param {String} item\n   * @param {String} format\n   * @param {Object} data optional\n   * @returns {Object}  converted data\n   */\n\n  async request(item, format = 'json', options = {}) {\n    let api = apiMap[config.server][item]; //api url & method\n\n    // configuring options for fetch request\n\n    this.options = {\n      ...this.options,\n      method: api.method,\n      credentials: 'include',\n      headers: new Headers({\n        ...(format === 'json' && {\n          'Content-Type': 'application/json',\n        }),\n        ...(options.headers && {\n          ...options.headers,\n        }),\n      }),\n\n      ...(format === 'json'\n        ? {\n            body: api.method !== 'get' ? JSON.stringify(options.body) : null,\n          }\n        : {\n            body: api.method !== 'get' ? options.body : null,\n          }),\n    };\n\n    function getUrlOptions(urlOptions) {\n      if (api.method === 'get') {\n        const params = {\n          limitNumber: 100000000000,\n        };\n        return {\n          ...(urlOptions && {\n            ...urlOptions,\n          }),\n          params: {\n            ...(urlOptions &&\n              urlOptions.params && {\n                ...urlOptions.params,\n              }),\n            ...params,\n          },\n        };\n      }\n      return urlOptions;\n    }\n\n    function getUrl(url) {\n      if (url && api.method === 'get') {\n        return url.includes('?')\n          ? url + '&limit=limitNumber'\n          : url + '?limit=limitNumber';\n      }\n      return url;\n    }\n\n    //*replace variable parts in url with actual data if params exists |or| just return the url\n\n    console.log('myUrl', getUrl(api.url), getUrlOptions(options.urlOptions));\n\n    const url = manupulateURL(\n      getUrl(api.url),\n      getUrlOptions(options.urlOptions)\n    );\n\n    console.log('myUrl', url);\n\n    // change the formate to text if the server is wooCommerce\n    if (config['server'] === 'wooCommerce') {\n      // format = 'text';\n    }\n\n    try {\n      let res = await fetch(config.baseURL + url, this.options);\n\n      if (res.status >= 200 && res.status < 300) {\n        let formattedData = await res['json'](); //await res.json(), res.text()\n        if (formattedData.status === 'error') {\n          throw formattedData.error;\n        }\n\n        let convertedData = await converter[item || ''](formattedData); //convert recieved data to app general format\n        return convertedData;\n      } else {\n        let error = await res['json']();\n\n        throw error;\n      }\n    } catch (err) {\n      throw err;\n      //TODO: breakdown errors\n    }\n  }\n}\n\nexport default Connector;\n","import config from '../config.json';\nimport dataMap from '../dataMap.json';\nimport moment from 'moment';\n\nclass Converter {\n  /**\n   * @public\n   * @method categoryList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async categoryList(resData) {\n    const data = resData.data || [];\n\n    const formatedData =\n      data.length > 0 &&\n      data.map((category) => {\n        return {\n          ...category,\n          id: category._id || '',\n          key: category._id || '',\n          name: category.name && category.name,\n          description: category.description && category.description,\n          productCount: category.productCount || 0,\n          parent: category.parent || '',\n          cover: category.cover\n            ? `${config['baseURL']}${category.cover.thumbnail}`\n            : null,\n          icon: category.icon ? `${config['baseURL']}${category.icon}` : null,\n          thumbnail: category.thumbnail ? `${config['baseURL']}${category.thumbnail}` : null,\n          image:\n            (data.image &&\n              data.image.length > 0 &&\n              data.image.map((img) => {\n                return {\n                  id: img._id || '',\n                  name: img.name && img.name,\n                  cover: `${config['baseURL']}${img.medium}`,\n                  added: img.added,\n                  title: img.title,\n                  labels: img.labels,\n                  alt: img.alt,\n                  caption: img.caption,\n                };\n              })) ||\n            [],\n          subCount:\n            category.subCategory.length === 1\n              ? category.subCategory[0] && category.subCategory[0].name\n                ? category.subCategory.length\n                : 0\n              : category.subCategory.length,\n          ...(category.subCategory &&\n            category.subCategory.length > 0 &&\n            category.subCategory[0] &&\n            category.subCategory[0]['name'] && {\n              children: category.subCategory.map((subCat) => {\n                return {\n                  id: subCat._id || '',\n                  key: subCat._id,\n                  name: subCat.name && subCat.name,\n                  description: subCat.description && subCat.description,\n                  cover: subCat.cover\n                    ? `${config['baseURL']}${subCat.cover.thumbnail}`\n                    : '',\n                };\n              }),\n            }),\n        };\n      });\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method postCategoryList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async postCategoryList(resData) {\n    const data = resData.data && resData.data ? resData.data : [];\n\n    const formatedData =\n      data.length > 0 &&\n      data.map((category) => {\n        return {\n          id: category._id || '',\n          key: category._id || '',\n          name: category.name && category.name,\n          description: category.description && category.description,\n          cover: category.cover\n            ? `${config['baseURL']}${category.cover.thumbnail}`\n            : null,\n          icon: category.icon ? `${config['baseURL']}${category.icon}` : null,\n        };\n      });\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method postCategoryDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async postCategoryDetail(resData) {\n    const data = resData;\n\n    if (Object.keys(data).length > 0) {\n      return {\n        ...data,\n        id: data._id || '',\n        name: data.name && data.name,\n        cover: {\n          cover: `${config['baseURL']}${\n            data.cover ? data.cover.original && data.cover.original : ''\n          }`,\n          id: data.cover ? data.cover._id : '',\n        },\n        url: data.url,\n        image:\n          (data.image &&\n            data.image.length > 0 &&\n            data.image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.original}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n      };\n    }\n  }\n\n  /**\n   * @public\n   * @method getAllNotification convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getAllNotification(resData) {\n    const data = resData.data || [];\n\n    let notiData = [];\n    if (data && data.length > 0) {\n      data.forEach((not) => {\n        if (!not.read) {\n          notiData.push(not);\n        }\n      });\n    }\n\n    return notiData;\n  }\n\n  /**\n   * @public\n   * @method getAllNotificationPage convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getAllNotificationPage(resData) {\n    const data = resData.data || [];\n    const formatedData =\n      data.length > 0 &&\n      data.map((noti) => {\n        return {\n          id: noti._id || '',\n          key: noti._id || '',\n          heading: noti.heading && noti.heading,\n          text: noti.text && noti.text,\n          type: noti.type,\n          link: noti.link || '',\n          added: noti.added || '',\n          read: noti.read,\n        };\n      });\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method categorySelectist convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async categorySelectist(resData) {\n    const data = resData.data || [];\n\n    const formatedData =\n      data.length > 0 &&\n      data.map((category) => {\n        return {\n          id: category._id || '',\n          key: category._id || '',\n          title: category.name && category.name,\n          ...(category.subCategory &&\n            category.subCategory.length > 0 &&\n            category.subCategory[0] &&\n            category.subCategory[0]['name'] && {\n              children: category.subCategory.map((subCat) => {\n                return {\n                  id: subCat._id || '',\n                  key: subCat._id,\n                  title: subCat.name && subCat.name,\n                  cover: subCat.cover\n                    ? `${config['baseURL']}${\n                        subCat.cover.thumbnail ? subCat.cover.thumbnail : ''\n                      }`\n                    : '',\n                };\n              }),\n            }),\n        };\n      });\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method categorySelectist convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async postSelectCategoryList(resData) {\n    const data = resData.data;\n\n    const formatedData =\n      data.length > 0 &&\n      data.map((category) => {\n        return {\n          id: category._id || '',\n          key: category._id || '',\n          title: category.name && category.name,\n        };\n      });\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method categoryProducts convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async categoryProducts(resData) {\n    const data = resData.data || [];\n    const isNext = resData.page.next;\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((product) => {\n        return {\n          id: product._id || '',\n          name: product.name && product.name,\n          description: product.description && product.description,\n          cover: `${config['baseURL']}${\n            (product.cover && product.cover['thumbnail']) || ''\n          }`,\n          regularPrice: product.price && product.price['regular'],\n          offerPrice: product.price && product.price['offer'],\n          url: product.url,\n          unit: product.unit,\n          category: product.category,\n          pricing: product.pricing,\n          date: product.date,\n          time: product.time,\n          venue: product.venue,\n          brand: product.brand,\n          tags: product.tags,\n          price:\n            parseInt(product.price['offer']) >\n            parseInt(product.price['regular'])\n              ? product.price['offer']\n              : product.price['regular'],\n          available:\n            product.pricing && product.pricing.length > 0\n              ? product.pricing[0]['stock'] &&\n                product.pricing[0]['stock']['available']\n              : 0,\n          minimum:\n            product.pricing && product.pricing.length > 0\n              ? product.pricing[0]['stock'] &&\n                product.pricing[0]['stock']['minimum']\n              : 0,\n        };\n      });\n\n    // return {\n    // \tdata: convertedData,\n    // \tisNext: isNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getCart convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getCart(resData) {\n    const cartItems = resData.items || [];\n    const convertedData =\n      cartItems.length > 0 &&\n      cartItems.map((cartItem) => {\n        return {\n          id: cartItem._id || '',\n          name: cartItem.name && cartItem.name,\n          cover: `${config['baseURL']}${cartItem.cover.medium}`,\n          regularPrice: cartItem.price && cartItem.price['regular'],\n          offerPrice: cartItem.price && cartItem.price['offer'],\n          quantity: cartItem.quantity,\n          url: cartItem.url,\n          cartKey: cartItem.cartKey,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addtoCart convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async addtoCart(resData) {\n    let data = false;\n\n    if (resData['inserted']) {\n      data = {\n        id: resData['inserted']._id || '',\n        name: resData['inserted'].name && resData['inserted'].name,\n        cover: `${config['baseURL']}${resData['inserted'].cover.medium}`,\n        regularPrice:\n          resData['inserted'].price && resData['inserted'].price['regular'],\n        offerPrice:\n          resData['inserted'].price && resData['inserted'].price['offer'],\n        quantity: resData['inserted'].quantity,\n        url: resData['inserted'].url,\n        cartKey: resData['inserted'].cartKey,\n      };\n    }\n\n    const convertedData = data;\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method removeFromCart convert api data from API to general format based on config server\n   * @param {Object} resData response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async removeFromCart(resData) {\n    let convertedData = false;\n    if (resData) {\n      convertedData = true;\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateCartItem convert api data from API to general format based on config server\n   * @param {Object} resData response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async updateCartItem(resData) {\n    let convertedData = false;\n    if (resData['updated']) {\n      convertedData = {\n        quantity: resData.updated['quantity'],\n      };\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method clearCart convert api data from API to general format based on config server\n   * @param {Object} resData response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async clearCart(data) {\n    if (data && data['msg']) {\n      return {\n        status: 'ok',\n      };\n    }\n    return data;\n  }\n\n  /**\n   * @public\n   * @method getWishlist convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getWishlist(resData) {\n    // const cartItems = resData.items || [];\n    const convertedData = resData;\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addWishlist convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async addWishlist(resData) {\n    if (resData && resData['msg'] === 'wishlist updated') {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return false;\n  }\n\n  /**\n   * @public\n   * @method removeFromWishlist convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async removeFromWishlist(resData) {\n    if (resData && resData['msg'] === 'wishlist updated') {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return false;\n  }\n\n  /**\n   * @public\n   * @method removeAllWishlist convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async removeAllWishlist(resData) {\n    if (resData && resData['msg'] === 'wishlist updated') {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return false;\n  }\n\n  /**\n   * @public\n   * @method tagProducts convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async tagProducts(resData) {\n    const data = resData.data || [];\n    const isNext = resData.page.next;\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((product) => {\n        return {\n          id: product._id || '',\n          name: product.name && product.name,\n          description: product.description && product.description,\n          cover: `${config['baseURL']}${\n            (product.cover && product.cover['thumbnail']) || ''\n          }`,\n          regularPrice: product.price && product.price['regular'],\n          offerPrice: product.price && product.price['offer'],\n          url: product.url,\n          unit: product.unit,\n          category: product.category,\n          pricing: product.pricing,\n          date: product.date,\n          time: product.time,\n          venue: product.venue,\n          brand: product.brand,\n          tags: product.tags,\n          price:\n            parseInt(product.price['offer']) >\n            parseInt(product.price['regular'])\n              ? product.price['offer']\n              : product.price['regular'],\n          avalable:\n            product.pricing && product.pricing.length > 0\n              ? product.pricing[0]['stock'] &&\n                product.pricing[0]['stock']['available']\n              : 0,\n          minimum:\n            product.pricing && product.pricing.length > 0\n              ? product.pricing[0]['stock'] &&\n                product.pricing[0]['stock']['minimum']\n              : 0,\n        };\n      });\n\n    // return {\n    // \tdata: convertedData,\n    // \tisNext: isNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method brandProducts convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async brandProducts(resData) {\n    const data = resData.data || [];\n    const isNext = resData.page.next;\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((product) => {\n        return {\n          id: product._id || '',\n          name: product.name && product.name,\n          description: product.description && product.description,\n          cover: `${config['baseURL']}${\n            (product.cover && product.cover['thumbnail']) || ''\n          }`,\n          regularPrice: product.price && product.price['regular'],\n          offerPrice: product.price && product.price['offer'],\n          url: product.url,\n          unit: product.unit,\n          category: product.category,\n          pricing: product.pricing,\n          date: product.date,\n          time: product.time,\n          venue: product.venue,\n          brand: product.brand,\n          tags: product.tags,\n          price:\n            parseInt(product.price['offer']) >\n            parseInt(product.price['regular'])\n              ? product.price['offer']\n              : product.price['regular'],\n          avalable:\n            product.pricing && product.pricing.length > 0\n              ? product.pricing[0]['stock'] &&\n                product.pricing[0]['stock']['available']\n              : 0,\n          minimum:\n            product.pricing && product.pricing.length > 0\n              ? product.pricing[0]['stock'] &&\n                product.pricing[0]['stock']['minimum']\n              : 0,\n        };\n      });\n\n    // return {\n    // \tdata: convertedData,\n    // \tisNext: isNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method productSearch convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async productSearch(resData) {\n    const data = resData.data || [];\n    const isNext = resData.page.next;\n\n    const convertedData =\n      (data.length > 0 &&\n        data.map((product) => {\n          return {\n            id: product._id || '',\n            name: product.name && product.name,\n            description: product.description && product.description,\n            cover: `${config['baseURL']}${product.cover.thumbnail}`,\n            regularPrice: product.price && product.price['regular'],\n            offerPrice: product.price && product.price['offer'],\n            url: product.url,\n            unit: product.unit,\n            date: product.date,\n            venue: product.venue,\n            pricing: product.pricing,\n          };\n        })) ||\n      [];\n\n    return {\n      data: convertedData,\n      isNext,\n    };\n  }\n\n  /**\n   * @public\n   * @method productList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async productList(resData) {\n    const data = resData.data || [];\n    const isNext = resData.page.next;\n\n    let convertedData =\n      data.length > 0 &&\n      data.map((product) => {\n        return {\n          ...product,\n          id: product._id || '',\n          name: product.name && product.name,\n          description: product.description && product.description,\n          cover: product.cover\n            ? `${config['baseURL']}${\n                (product.cover && product.cover['thumbnail']) || ''\n              }`\n            : product.cover,\n          regularPrice: product.price && product.price['regular'],\n          offerPrice: product.price && product.price['offer'],\n          url: product.url,\n          unit: product.unit,\n          category: product.category,\n          image:\n            (data.image &&\n              data.image.length > 0 &&\n              data.image.map((img) => {\n                return {\n                  id: img._id || '',\n                  name: img.name && img.name,\n                  cover: `${config['baseURL']}${img.original}`,\n                  added: img.added,\n                  title: img.title,\n                  labels: img.labels,\n                  alt: img.alt,\n                  caption: img.caption,\n                };\n              })) ||\n            [],\n          pricing: product.pricing,\n          date: product.date,\n          time: product.time,\n          venue: product.venue,\n          brand: product.brand,\n          tags: product.tags,\n          price:\n            parseInt(product.price['offer']) >\n            parseInt(product.price['regular'])\n              ? product.price['offer']\n              : product.price['regular'],\n          available:\n            product.pricing && product.pricing.length > 0\n              ? product.pricing[0]['stock'] &&\n                product.pricing[0]['stock']['available']\n              : 0,\n          minimum:\n            product.pricing && product.pricing.length > 0\n              ? product.pricing[0]['stock'] &&\n                product.pricing[0]['stock']['minimum']\n              : 0,\n        };\n      });\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postList(resData) {\n    const data = resData.data;\n    // const isNext = resData.page.next;\n\n    let convertedData =\n      data.length > 0 &&\n      data.map((post) => {\n        return {\n          ...post,\n          id: post._id || '',\n          name: post.name && post.name,\n          body: post.body && post.body,\n          preparationTime: post.preparationTime && post.preparationTime,\n          servingSize: post.servingSize && post.servingSize,\n          cookingTime: post.cookingTime && post.cookingTime,\n          cover: post.cover\n            ? `${config['baseURL']}${\n                (post.cover && post.cover['thumbnail']) || ''\n              }`\n            : null,\n          url: post.url,\n          category: post.category,\n          tags: post.tags,\n        };\n      });\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method tagPostList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async tagPostList(resData) {\n    const data = resData.data;\n    // const isNext = resData.page.next;\n\n    let convertedData =\n      data.length > 0 &&\n      data.map((post) => {\n        return {\n          ...post,\n          id: post._id || '',\n          name: post.name && post.name,\n          body: post.body && post.body,\n          preparationTime: post.preparationTime && post.preparationTime,\n          servingSize: post.servingSize && post.servingSize,\n          cookingTime: post.cookingTime && post.cookingTime,\n          cover: `${config['baseURL']}${\n            (post.cover && post.cover['thumbnail']) || ''\n          }`,\n          url: post.url,\n          category: post.category,\n          tags: post.tags,\n        };\n      });\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method categoryPostList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async categoryPostList(resData) {\n    const data = resData.data;\n    // const isNext = resData.page.next;\n\n    let convertedData =\n      data.length > 0 &&\n      data.map((post) => {\n        return {\n          ...post,\n          id: post._id || '',\n          name: post.name && post.name,\n          body: post.body && post.body,\n          preparationTime: post.preparationTime && post.preparationTime,\n          servingSize: post.servingSize && post.servingSize,\n          cookingTime: post.cookingTime && post.cookingTime,\n          cover: `${config['baseURL']}${\n            (post.cover && post.cover['thumbnail']) || ''\n          }`,\n          url: post.url,\n          category: post.category,\n          tags: post.tags,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postDetail(resData) {\n    const data = resData;\n    // const isNext = resData.page.next;\n\n    console.log('upconvertedpostDetail', resData);\n\n    if (Object.keys(data).length > 0) {\n      return {\n        ...data,\n        id: data._id || '',\n        name: data.name && data.name,\n        body: data.body && data.body,\n        preparationTime: data.preparationTime && data.preparationTime,\n        servingSize: data.servingSize && data.servingSize,\n        cookingTime: data.cookingTime && data.cookingTime,\n        cover: `${config['baseURL']}${\n          (data.cover && data.cover['medium']) || ''\n        }`,\n        url: data.url,\n        requiredProducts:\n          data.requiredProducts && data.requiredProducts.length > 0\n            ? data.requiredProducts.map((item) => {\n                return {\n                  ...item,\n                  id: item.id,\n                  ...(item.detail &&\n                    Object.keys(item.detail).length > 0 && {\n                      ...item.detail,\n                      cover: {\n                        cover: `${config['baseURL']}${\n                          item.detail.cover\n                            ? item.detail.cover.original &&\n                              item.detail.cover.original\n                            : ''\n                        }`,\n                        id: item.detail.cover ? item.detail.cover._id : '',\n                      },\n                      price:\n                        parseInt(item.detail.price['offer']) >\n                        parseInt(item.detail.price['regular'])\n                          ? item.detail.price['offer']\n                          : item.detail.price['regular'],\n                      image:\n                        (item.detail.image &&\n                          item.detail.image.length > 0 &&\n                          item.detail.image.map((img) => {\n                            return {\n                              id: img._id || '',\n                              name: img.name && img.name,\n                              cover: `${config['baseURL']}${img.original}`,\n                              added: img.added,\n                              title: img.title,\n                              labels: img.labels,\n                              alt: img.alt,\n                              caption: img.caption,\n                            };\n                          })) ||\n                        [],\n                    }),\n                };\n              })\n            : [],\n        category2:\n          (data.category &&\n            data.category.length > 0 &&\n            data.category.map((cat) => {\n              return {\n                id: cat._id,\n                name: cat.name,\n              };\n            })) ||\n          data.category,\n        category:\n          (data.category &&\n            data.category.length > 0 &&\n            data.category.map((cat) => {\n              return cat._id;\n            })) ||\n          data.category,\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\n        image:\n          (data.image &&\n            data.image.length > 0 &&\n            data.image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.original}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n      };\n    } else return {};\n  }\n\n  /**\n   * @public\n   * @method postDetailEdit convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postDetailEdit(resData) {\n    const data = resData;\n    // const isNext = resData.page.next;\n\n    console.log('upconvertedpostDetail', resData);\n\n    if (Object.keys(data).length > 0) {\n      return {\n        ...data,\n        id: data._id || '',\n        name: data.name && data.name,\n        body: data.body && data.body,\n        preparationTime: data.preparationTime && data.preparationTime,\n        servingSize: data.servingSize && data.servingSize,\n        cookingTime: data.cookingTime && data.cookingTime,\n        cover: `${config['baseURL']}${\n          (data.cover && data.cover['medium']) || ''\n        }`,\n        url: data.url,\n        requiredProducts:\n          data.requiredProducts && data.requiredProducts.length > 0\n            ? data.requiredProducts.map((item) => {\n                return {\n                  ...item,\n                  id: item.id,\n                  ...(item.detail &&\n                    Object.keys(item.detail).length > 0 && {\n                      ...item.detail,\n                      cover: {\n                        cover: `${config['baseURL']}${\n                          item.detail.cover\n                            ? item.detail.cover.original &&\n                              item.detail.cover.original\n                            : ''\n                        }`,\n                        id: item.detail.cover ? item.detail.cover._id : '',\n                      },\n                      price:\n                        parseInt(item.detail.price['offer']) >\n                        parseInt(item.detail.price['regular'])\n                          ? item.detail.price['offer']\n                          : item.detail.price['regular'],\n                      image:\n                        (item.detail.image &&\n                          item.detail.image.length > 0 &&\n                          item.detail.image.map((img) => {\n                            return {\n                              id: img._id || '',\n                              name: img.name && img.name,\n                              cover: `${config['baseURL']}${img.original}`,\n                              added: img.added,\n                              title: img.title,\n                              labels: img.labels,\n                              alt: img.alt,\n                              caption: img.caption,\n                            };\n                          })) ||\n                        [],\n                    }),\n                };\n              })\n            : [],\n        category: data.category,\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\n        image:\n          (data.image &&\n            data.image.length > 0 &&\n            data.image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.original}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n      };\n    } else return {};\n  }\n\n  /**\n   * @public\n   * @method bundleList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async bundleList(resData) {\n    const data = resData.data || [];\n\n    let convertedData =\n      data.length > 0 &&\n      data.map((product) => {\n        return {\n          ...product,\n          anotherPrice: product.price,\n          id: product._id || '',\n          name: product.name && product.name,\n          description: product.description && product.description,\n          cover: product.cover\n            ? `${config['baseURL']}${\n                (product.cover && product.cover['thumbnail']) || ''\n              }`\n            : product.cover,\n          regularPrice: product.price && product.price['regular'],\n          offerPrice: product.price && product.price['offer'],\n          url: product.url,\n          startDate: product.startDate,\n          endDate: product.endDate,\n          actualPrice: product.actualPrice,\n          unit: product.unit,\n          category: product.category,\n          pricing: product.pricing,\n          date: product.date,\n          time: product.time,\n          venue: product.venue,\n          brand: product.brand,\n          tags: product.tags,\n          product: product['product'],\n          productCount: product['product'].length,\n          price:\n            parseInt(product.price['offer']) >\n            parseInt(product.price['regular'])\n              ? product.price['offer']\n              : product.price['regular'],\n        };\n      });\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method bundleDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async bundleDetail(resData) {\n    const data = resData || {};\n\n    if (Object.keys(data).length > 0) {\n      return {\n        id: data._id || '',\n        name: data.name && data.name,\n        description: data.description && data.description,\n        cover: data.cover\n          ? `${config['baseURL']}${\n              (data.cover && data.cover['thumbnail']) || ''\n            }`\n          : '',\n        regularPrice: data.price && data.price['regular'],\n        offerPrice: data.price && data.price['offer'],\n        url: data.url,\n        startDate: data.startDate,\n        endDate: data.endDate,\n        actualPrice: data.actualPrice,\n        unit: data.unit,\n        category: data.category,\n        pricing: data.pricing,\n        date: data.date,\n        time: data.time,\n        venue: data.venue,\n        brand: data.brand,\n        tags: data.tags,\n        products: data.product,\n        productCount: data['product'].length,\n        price:\n          parseInt(data.price['offer']) > parseInt(data.price['regular'])\n            ? data.price['offer']\n            : data.price['regular'],\n        image:\n          (data.image &&\n            data.image.length > 0 &&\n            data.image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.original}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n      };\n    } else return data;\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n  }\n\n  /**\n   * @public\n   * @method getAnalyticsPageVisits convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getAnalyticsPageVisits(resData) {\n    const data = resData && resData.data ? resData.data : [];\n\n    console.log('getAnalyticsPageVisits', resData);\n\n    let convertedData =\n      data.length > 0 &&\n      data.map((item) => {\n        return {\n          id: item._id || '',\n          visit: item.count || '',\n          name:\n            item['detail'] && item['detail'][0] && item['detail'][0]['name'],\n          url: item['detail'] && item['detail'][0] && item['detail'][0]['url'],\n          itemId:\n            item['detail'] && item['detail'][0] && item['detail'][0]['_id'],\n        };\n      });\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getAnalyticsPageVisitCount convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getAnalyticsPageVisitCount(resData) {\n    return resData;\n  }\n\n  /**\n   * @public\n   * @method getAnalyticsDemographicVisits convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getAnalyticsDemographicVisits(resData) {\n    const data = resData && resData.data ? resData.data : [];\n    if (data) {\n      return data;\n    } else return [];\n  }\n\n  /**\n   * @public\n   * @method getAnalyticsOrders convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getAnalyticsOrders(resData) {\n    const data = resData.data || [];\n    return data;\n  }\n\n  /**\n   * @public\n   * @method getAnalyticsTotalUserCount convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getAnalyticsTotalUserCount(resData) {\n    return resData;\n  }\n\n  /**\n   * @public\n   * @method customerDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async customerDetail(resData) {\n    if (resData) {\n      return {\n        ...resData,\n        id: resData._id || '',\n        key: resData._id || '',\n        firstName: resData.firstName || '',\n        lastName: resData.lastName || '',\n        name: resData.firstName + ' ' + resData.lastName,\n        country: resData.country || '',\n        city: resData.city || '',\n        email: resData.email || '',\n        phone: resData.phone || '',\n        address1: resData.address1 || '',\n        address2: resData.address2 || '',\n        created: resData.created || '',\n      };\n    } else return resData;\n  }\n\n  /**\n   * @public\n   * @method couponList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async couponList(resData) {\n    const data = resData || [];\n\n    let convertedData =\n      data.length > 0 &&\n      data.map((product) => {\n        return {\n          ...data,\n          id: product._id || '',\n          name: product.name && product.name,\n          code: product.code,\n          cover: product.cover\n            ? `${config['baseURL']}${\n                (product.cover && product.cover['thumbnail']) || ''\n              }`\n            : null,\n          minimumOrder: product.minimumOrder,\n          maximumOrder: product.maximumOrder,\n          offerPrice: product.price && product.price['offer'],\n          freeProducts: product.freeProducts,\n          orderedProductsCount:\n            product.orderedProducts && product.orderedProducts.length,\n          freeProductsCount:\n            product.freeProducts && product.freeProducts.length,\n          amountType: product.amountType,\n          amount: product.amount,\n          freeDelivery: product.freeDelivery,\n          startDate: product.startDate,\n          endDate: product.endDate,\n          maxUsePerUser: product.maxUsePerUser,\n          actualPrice: product.actualPrice,\n          unit: product.unit,\n          category: product.category,\n          pricing: product.pricing,\n          date: product.date,\n          time: product.time,\n        };\n      });\n\n    console.log('convertedCouponData55', convertedData);\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method tagList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async tagList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((tag) => {\n        return {\n          ...tag,\n          id: tag._id || '',\n          key: tag._id || '',\n          name: tag.name && tag.name,\n          description: tag.description && tag.description,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getSetEmailList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getSetEmailList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((email) => {\n        return {\n          ...email,\n          id: email._id || '',\n          key: email._id || '',\n          recipient: email.recipient,\n          subject: email.subject,\n          html: email.html,\n          text: email.text,\n          time: email.time,\n          event: email.event,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getSentSMSList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getSentSMSList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((sms) => {\n        return {\n          ...sms,\n          id: sms._id || '',\n          key: sms._id || '',\n          recipient: sms.recipient,\n          text: sms.text,\n          time: sms.time,\n          event: sms.event,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postTagList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async postTagList(resData) {\n    const data = resData.data;\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((tag) => {\n        return {\n          id: tag._id || '',\n          key: tag._id || '',\n          name: tag.name && tag.name,\n          description: tag.description && tag.description,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postTagDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async postTagDetail(resData) {\n    const data = resData;\n\n    if (Object.keys(data).length > 0) {\n      return {\n        ...data,\n        id: data._id || '',\n        key: data._id || '',\n        name: data.name && data.name,\n        description: data.description && data.description,\n      };\n    } else return {};\n  }\n\n  /**\n   * @public\n\t\n   * @method dealerAreaDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async dealerAreaDetail(resData) {\n    const data = resData;\n\n    if (Object.keys(data).length > 0) {\n      return {\n        ...data,\n        id: data._id || '',\n        key: data._id || '',\n        name: data.name && data.name,\n      };\n    } else return {};\n  }\n\n  /**\n   * @public\n   * @method brandList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async brandList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((brand) => {\n        return {\n          ...brand,\n          id: brand._id || '',\n          key: brand._id || '',\n          name: brand.name && brand.name,\n          description: brand.description && brand.description,\n          cover: brand.cover\n            ? `${config['baseURL']}${brand.cover ? brand.cover.thumbnail : ''}`\n            : null,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method setImageAsThumbnailToItem convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async setImageAsThumbnailToItem(resData) {\n    if (resData.success) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method deleteAdmin convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async deleteAdmin(resData) {\n    if (resData.success) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method markAllNotificationAsRead convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async markAllNotificationAsRead(resData) {\n    if (resData.success) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method configureEmailSTMP convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async configureEmailSTMP(resData) {\n    if (resData.success) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method configureSMS convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async configureSMS(resData) {\n    if (resData.success) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method getEmailConfiguration convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getEmailConfiguration(resData) {\n    if (resData && Object.keys(resData).length > 0) {\n      return {\n        ...resData,\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method getSMSConfiguration convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getSMSConfiguration(resData) {\n    if (resData && Object.keys(resData).length > 0) {\n      return {\n        ...resData,\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method sendCustomEmail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async sendCustomEmail(resData) {\n    if (resData && resData.msg) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method configureAutoEmailTemplate convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async configureAutoEmailTemplate(resData) {\n    if (resData && resData.success) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method getConfigureAutoEmailTemplate convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getConfigureAutoEmailTemplate(resData) {\n    if (resData && Object.keys(resData).length > 0) {\n      return {\n        ...resData,\n        id: resData._id,\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method getConfigureAutoSMSTemplate convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async getConfigureAutoSMSTemplate(resData) {\n    if (resData && Object.keys(resData).length > 0) {\n      return {\n        ...resData,\n        id: resData._id,\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method sendCustomSMS convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async sendCustomSMS(resData) {\n    if (resData && resData.success) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method updateSiteLogoAndIcon convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async updateSiteLogoAndIcon(resData) {\n    if (resData.success) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method updateStock convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async updateStock(resData) {\n    if (resData.succes) {\n      return {\n        status: 'ok',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method brandDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async brandDetail(resData) {\n    const data = Object.keys(resData).length > 0 ? resData : null;\n    if (data) {\n      return {\n        ...data,\n        id: data._id || '',\n        key: data._id || '',\n        name: data.name && data.name,\n        description: data.description && data.description,\n        url: data.url && data.url,\n        cover: {\n          cover: `${config['baseURL']}${\n            data.cover ? data.cover.original && data.cover.original : ''\n          }`,\n          id: data.cover ? data.cover._id : '',\n        },\n        image:\n          (data.image &&\n            data.image.length > 0 &&\n            data.image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.thumbnail}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n      };\n    }\n\n    return {};\n  }\n\n  /**\n   * @public\n   * @method tagDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async tagDetail(resData) {\n    const data = Object.keys(resData).length > 0 ? resData : null;\n    if (data) {\n      return {\n        ...data,\n        id: data._id || '',\n        key: data._id || '',\n        name: data.name && data.name,\n        url: data.url && data.url,\n        description: data.description && data.description,\n      };\n    }\n\n    return {};\n  }\n\n  /**\n   * @public\n   * @method customerList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async customerList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((customer) => {\n        return {\n          ...customer,\n          id: customer._id || '',\n          key: customer._id || '',\n          firstName: customer.firstName || '',\n          lastName: customer.lastName || '',\n          name: customer.firstName + ' ' + customer.lastName,\n          dealerName:\n            customer.dealer && Object.keys(customer.dealer).length > 0\n              ? customer['dealer'].firstName + ' ' + customer['dealer'].lastName\n              : 'None',\n          country: customer.country || '',\n          city: customer.city || '',\n          email: customer.email || '',\n          phone: customer.phone || '',\n          address1: customer.address1 || '',\n          address2: customer.address2 || '',\n          created: customer.added || '',\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method staffList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async staffList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((customer) => {\n        return {\n          ...customer,\n          id: customer._id || '',\n          key: customer._id || '',\n          firstName: customer.firstName || '',\n          lastName: customer.lastName || '',\n          name: customer.firstName + ' ' + customer.lastName,\n          country: customer.country || '',\n          city: customer.city || '',\n          email: customer.email || '',\n          phone: customer.phone || '',\n          address: customer.address || '',\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method dealerRegisteredCustomerList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async dealerRegisteredCustomerList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((customer) => {\n        return {\n          ...customer,\n          id: customer._id || '',\n          key: customer._id || '',\n          firstName: customer.firstName || '',\n          lastName: customer.lastName || '',\n          name: customer.firstName + ' ' + customer.lastName,\n          dealerName:\n            customer.dealer && Object.keys(customer.dealer).length > 0\n              ? customer['dealer'].firstName + ' ' + customer['dealer'].lastName\n              : 'None',\n          country: customer.country || '',\n          city: customer.city || '',\n          email: customer.email || '',\n          phone: customer.phone || '',\n          address1: customer.address1 || '',\n          address2: customer.address2 || '',\n          created: customer.added || '',\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method dealerList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async dealerList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((customer) => {\n        return {\n          ...customer,\n          id: customer._id || '',\n          key: customer._id || '',\n          code: customer.code || '',\n          commission: customer.commission || '',\n          depositMoney: customer.depositMoney || '',\n          name: customer.firstName + ' ' + customer.lastName,\n          country: customer.country || '',\n          city: customer.city || '',\n          email: customer.email || '',\n          phone: customer.phone || '',\n          address1: customer.address1 || '',\n          address2: customer.address2 || '',\n          created: customer.added || '',\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method dealerListByArea convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async dealerListByArea(resData) {\n    const data = resData || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((customer) => {\n        return {\n          ...customer,\n          id: customer._id || '',\n          key: customer._id || '',\n          code: customer.code || '',\n          commission: customer.commission || '',\n          depositMoney: customer.depositMoney || '',\n          name: customer.firstName + ' ' + customer.lastName,\n          country: customer.country || '',\n          city: customer.city || '',\n          email: customer.email || '',\n          phone: customer.phone || '',\n          address1: customer.address1 || '',\n          address2: customer.address2 || '',\n          created: customer.added || '',\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method dealerDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async dealerDetail(resData) {\n    if (resData) {\n      return {\n        ...resData,\n        id: resData._id || '',\n        key: resData._id || '',\n        code: resData.code || '',\n        commission: resData.commission || '',\n        depositMoney: resData.depositMoney || '',\n        name: resData.firstName + ' ' + resData.lastName,\n        country: resData.country || '',\n        city: resData.city || '',\n        email: resData.email || '',\n        phone: resData.phone || '',\n        address1: resData.address1 || '',\n        address2: resData.address2 || '',\n        created: resData.added || '',\n      };\n    } else return resData;\n  }\n\n  /**\n   * @public\n   * @method pageList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async pageList(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((page) => {\n        return {\n          ...page,\n          id: page._id || '',\n          key: page._id || '',\n          name: page.name && page.name,\n          description: page.description && page.description,\n          cover: page.cover\n            ? `${config['baseURL']}${page.cover ? page.cover.thumbnail : ''}`\n            : null,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method themeList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async themeList(resData) {\n    const data = resData || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((theme) => {\n        return {\n          id: theme._id || '',\n          key: theme._id || '',\n          name: theme.name || '',\n          added: theme.added || '',\n          thumbnail: `${config['baseURL']}${\n            theme.thumbnail ? theme.thumbnail : ''\n          }`,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method componentList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async componentList(resData) {\n    const components = resData.components || {};\n\n    if (components && components.length > 0) {\n      const convertedData =\n        components.length > 0 &&\n        components.map((component) => {\n          return {\n            id: component._id || '',\n            key: component._id || '',\n            name: component.name || '',\n            items:\n              component.items.length > 0\n                ? component.items.map((item) => {\n                    return {\n                      ...item,\n                      image:\n                        item.image.length > 0\n                          ? item.image.map((img) => {\n                              return {\n                                cover: `${config['baseURL']}${\n                                  img.thumbnail ? img.thumbnail : ''\n                                }`,\n                                id: img._id,\n                                name: img.name && img.name,\n                                added: img.added,\n                                title: img.title,\n                                labels: img.labels,\n                                alt: img.alt,\n                                caption: img.caption,\n                              };\n                            })\n                          : [],\n                    };\n                  })\n                : [],\n          };\n        });\n\n      return convertedData;\n    }\n\n    return [];\n  }\n\n  /**\n   * @public\n   * @method regionList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async regionList(data) {\n    const convertedData =\n      data.length > 0 &&\n      data.map((region) => {\n        return {\n          id: region._id || '',\n          key: region._id || '',\n          name: region.name || '',\n          pickUpLocation: region.pickUpLocation || '',\n          country: region.country || '',\n          countryCode: region.countryCode || '',\n          countryName: region.countryName || '',\n          city: region.city || '',\n          time: region.time || '',\n          charge: region.charge || {},\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method attributeList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async attributeList(data) {\n    const convertedData = Object.keys(data).length > 0 && data;\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method ImageListFromLibrary convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async ImageListFromLibrary(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((image) => {\n        return {\n          id: image._id || '',\n          name: image.name && image.name,\n          cover: `${config['baseURL']}${image.thumbnail}`,\n          added: image.added,\n          title: image.title,\n          labels: image.labels,\n          alt: image.alt,\n          caption: image.caption,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method countryList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async countryList(resData) {\n    const data = resData || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((country) => {\n        return {\n          id: country._id || '',\n          name: country.name && country.name,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getDeliveryRegion convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n\n  async getDeliveryRegion(data) {\n    const convertedData = data;\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method cityList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async cityList(resData) {\n    const data = resData || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((city) => {\n        return {\n          id: city._id || '',\n          name: city.name && city.name,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method forAnalytics convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async forAnalytics(resData) {\n    return resData;\n  }\n\n  /**\n   * @public\n   * @method productDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n\n  async productDetail(data) {\n    const convertedData =\n      (Object.keys(data).length > 0 && {\n        ...data,\n        id: data._id || data.id || '',\n        name: data.name || '',\n        description: data.description.replace(/<[^>]+>/g, '') || '',\n        regularPrice: data.price && data.price['regular'],\n        offerPrice: data.price && data.price['offer'],\n        url: data.url,\n        availableStock: data.availableStock,\n        minimumStock: data.minimumStock,\n        unit: data.unit,\n        date: data.date,\n        venue: data.venue,\n        brand:\n          data.brand && Object.key(data.brand).length > 0\n            ? {\n                id: data.brand.id,\n                name: data.brand.name,\n              }\n            : {},\n        price:\n          parseInt(data.price['offer']) > parseInt(data.price['regular'])\n            ? data.price['offer']\n            : data.price['regular'],\n        pricing: data.pricing,\n        category:\n          (data.category &&\n            data.category.length > 0 &&\n            data.category.map((cat) => {\n              return {\n                id: cat._id,\n                name: cat.name,\n              };\n            })) ||\n          data.category,\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\n\n        cover: {\n          cover: `${config['baseURL']}${\n            data.cover ? data.cover.original && data.cover.original : ''\n          }`,\n          id: data.cover ? data.cover._id : '',\n        },\n        image:\n          (data.image &&\n            data.image.length > 0 &&\n            data.image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.original}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n        available:\n          data.pricing && data.pricing.length > 0\n            ? data.pricing[0]['stock'] && data.pricing[0]['stock']['available']\n            : 0,\n        minimum:\n          data.pricing && data.pricing.length > 0\n            ? data.pricing[0]['stock'] && data.pricing[0]['stock']['minimum']\n            : 0,\n      }) ||\n      {};\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method couponDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n\n  async couponDetail(data) {\n    const convertedData =\n      (Object.keys(data).length > 0 && {\n        ...data,\n        id: data._id || '',\n        name: data.name && data.name,\n        cover: {\n          cover: `${config['baseURL']}${\n            data.cover ? data.cover.original && data.cover.original : ''\n          }`,\n          id: data.cover ? data.cover._id : '',\n        },\n        code: data.code,\n        minimumOrder: data.minimumOrder,\n        maximumOrder: data.maximumOrder,\n        freeProducts: data.freeProducts || [],\n        orderedProducts:\n          data.orderedProducts && data.orderedProducts.length > 0\n            ? data.orderedProducts.map((item) => {\n                console.log('fuckingOrderProduct', item);\n                return {\n                  ...item,\n                  id: item.id,\n                  ...(item.detail &&\n                    Object.keys(item.detail).length > 0 && {\n                      ...item.detail,\n                      cover: {\n                        cover: `${config['baseURL']}${\n                          item.detail.cover\n                            ? item.detail.cover.original &&\n                              item.detail.cover.original\n                            : ''\n                        }`,\n                        id: item.detail.cover ? item.detail.cover._id : '',\n                      },\n                      price:\n                        parseInt(item.detail.price['offer']) >\n                        parseInt(item.detail.price['regular'])\n                          ? item.detail.price['offer']\n                          : item.detail.price['regular'],\n                    }),\n                };\n              })\n            : [],\n        freeProductsCount: data.freeProducts && data.orderedProducts.length,\n        amountType: data.amountType,\n        amount: data.amount,\n        freeDelivery: data.freeDelivery,\n        startDate: data.startDate,\n        endDate: data.endDate,\n        maxUsePerUser: data.maxUsePerUser,\n        actualPrice: data.actualPrice,\n        unit: data.unit,\n        category: data.category,\n        pricing: data.pricing,\n        date: data.date,\n        time: data.time,\n        venue: data.venue,\n        brand: data.brand,\n        tags: data.tags,\n      }) ||\n      {};\n\n    console.log('fuckingOrderProduct', convertedData);\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method productDetailById convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async productDetailById(data) {\n    const convertedData =\n      (Object.keys(data).length > 0 && {\n        ...data,\n        id: data._id || data.id || '',\n        name: data.name || '',\n        description: data.description.replace(/<[^>]+>/g, '') || '',\n        regularPrice: data.price && data.price['regular'],\n        offerPrice: data.price && data.price['offer'],\n        url: data.url,\n        unit: data.unit,\n        date: data.date,\n        venue: data.venue,\n        pricing: data.pricing,\n        price:\n          parseInt(data.price['offer']) > parseInt(data.price['regular'])\n            ? data.price['offer']\n            : data.price['regular'],\n        category:\n          (data.category &&\n            data.category.length > 0 &&\n            data.category.map((cat) => {\n              return {\n                id: cat._id,\n                name: cat.name,\n                cover: `${config['baseURL']}${\n                  cat.cover ? cat.cover.original && cat.cover.original : ''\n                }`,\n              };\n            })) ||\n          data.category,\n        brand:\n          data.brand && Object.keys(data.brand).length > 0\n            ? {\n                id: data.brand._id,\n                name: data.brand.name,\n                cover: `${config['baseURL']}${\n                  data.brand.cover\n                    ? data.brand.cover.original && data.brand.cover.original\n                    : ''\n                }`,\n              }\n            : data.brand,\n        primaryCategory:\n          data.primaryCategory && Object.keys(data.primaryCategory).length > 0\n            ? {\n                id: data.primaryCategory._id,\n                name: data.primaryCategory.name,\n                cover: `${config['baseURL']}${\n                  data.primaryCategory.cover\n                    ? data.primaryCategory.cover.original &&\n                      data.primaryCategory.cover.original\n                    : ''\n                }`,\n              }\n            : data.primaryCategory,\n        tags: data.tags && data.tags.length > 0 ? data.tags : [],\n        availableStock: data.availableStock,\n        cover: {\n          cover: `${config['baseURL']}${\n            data.cover ? data.cover.original && data.cover.original : ''\n          }`,\n          id: data.cover ? data.cover._id : '',\n        },\n        image:\n          (data.image &&\n            data.image.length > 0 &&\n            data.image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.original}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n      }) ||\n      {};\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateProduct convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateProduct(data) {\n    const convertedData = data;\n\n    if (data && data.updated && Object.keys(data.updated).length > 0) {\n      return {\n        ...data.updated,\n        id: data.updated._id || data.updated.id || '',\n        name: data.updated.name || '',\n        description: data.updated.description.replace(/<[^>]+>/g, '') || '',\n        regularPrice: data.updated.price && data.updated.price['regular'],\n        offerPrice: data.updated.price && data.updated.price['offer'],\n        url: data.updated.url,\n        availableStock: data.updated.availableStock,\n        minimumStock: data.updated.minimumStock,\n        unit: data.updated.unit,\n        date: data.updated.date,\n        venue: data.updated.venue,\n        brand:\n          data.updated.brand && Object.keys(data.updated.brand).length > 0\n            ? {\n                id: data.updated.brand.id,\n                name: data.updated.brand.name,\n              }\n            : {},\n        price:\n          parseInt(data.updated.price['offer']) >\n          parseInt(data.updated.price['regular'])\n            ? data.updated.price['offer']\n            : data.updated.price['regular'],\n        pricing: data.updated.pricing,\n        category:\n          (data.updated.category &&\n            data.updated.category.length > 0 &&\n            data.updated.category.map((cat) => {\n              return {\n                id: cat._id,\n                name: cat.name,\n              };\n            })) ||\n          data.updated.category,\n        tags:\n          data.updated.tags && data.updated.tags.length > 0\n            ? data.updated.tags\n            : [],\n\n        cover: {\n          cover: `${config['baseURL']}${\n            data.updated.cover\n              ? data.updated.cover.original && data.updated.cover.original\n              : ''\n          }`,\n          id: data.updated.cover ? data.updated.cover._id : '',\n        },\n        image:\n          (data.updated.image &&\n            data.updated.image.length > 0 &&\n            data.updated.image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.original}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updatePost convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async updatePost(data) {\n    const convertedData = data;\n\n    if (data && data.updated && data.updated[0]) {\n      console.log('dataUpdate', data.updated);\n      return {\n        ...data.updated[0],\n        id: data.updated[0]._id || data.updated[0].id || '',\n        name: data.updated[0].name || '',\n        url: data.updated[0].url,\n        category: data.updated[0].category,\n        tags:\n          data.updated[0].tags && data.updated[0].tags.length > 0\n            ? data.updated[0].tags\n            : [],\n\n        cover: {\n          cover: `${config['baseURL']}${\n            data.updated[0].cover\n              ? data.updated[0].cover.original && data.updated[0].cover.original\n              : ''\n          }`,\n          id: data.updated[0].cover ? data.updated[0].cover._id : '',\n        },\n        image:\n          (data.updated[0].image &&\n            data.updated[0].image.length > 0 &&\n            data.updated[0].image.map((img) => {\n              return {\n                id: img._id || '',\n                name: img.name && img.name,\n                cover: `${config['baseURL']}${img.original}`,\n                added: img.added,\n                title: img.title,\n                labels: img.labels,\n                alt: img.alt,\n                caption: img.caption,\n              };\n            })) ||\n          [],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateComponent convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateComponent(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateCoupon convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateCoupon(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method categoryUpdateIcon convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async categoryUpdateIcon(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n\n    /**\n   * @public\n   * @method categoryUpdateThumbnail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async categoryUpdateThumbnail(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateImageFromLibrary convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateImageFromLibrary(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateTag convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateTag(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateDealerArea convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateDealerArea(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateDealer convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateDealer(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updatePage convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updatePage(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateBrand convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateBrand(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateBundle convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateBundle(data) {\n    const convertedData = data;\n\n    if (data && Object.keys(data).length > 0) {\n      return {\n        ...data,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateCategory convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateCategory(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateCustomer convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateCustomer(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateStaff convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateStaff(data) {\n    const convertedData = data;\n\n    if (data && Object.keys(data).length > 0) {\n      return {\n        ...convertedData,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateRegion convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateRegion(data) {\n    const convertedData = data;\n\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteProduct convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteProduct(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteExpense convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteExpense(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postCategoryDelete convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postCategoryDelete(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deletePost convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deletePost(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteBundle convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteBundle(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteCoupon convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteCoupon(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method pageDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async pageDetail(data) {\n    const convertedData = data;\n    if (convertedData && Object.keys(convertedData).length > 0) {\n      return {\n        ...convertedData,\n        id: convertedData._id,\n        cover: {\n          cover: `${config['baseURL']}${\n            convertedData.cover\n              ? convertedData.cover.original && convertedData.cover.original\n              : ''\n          }`,\n          id: convertedData.cover ? convertedData.cover._id : '',\n        },\n      };\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateOrderStatus convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateOrderStatus(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        ...data,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postUpdateTag convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postUpdateTag(data) {\n    const convertedData = data;\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n\n        name: data.updated.name && data.updated.name,\n        description: data.updated.description && data.updated.description,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateExpense convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateExpense(data) {\n    const convertedData = data;\n    if (data && Object.keys(convertedData).length > 0) {\n      return {\n        ...data,\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteImageFromLibrary convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteImageFromLibrary(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deletePage convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deletePage(data) {\n    const convertedData = data;\n    if (data && data.msg) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addTag convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addTag(data) {\n    const convertedData = data;\n    if (data && data[0]) {\n      return {\n        ...data[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addExpense convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addExpense(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addStaff convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addStaff(data) {\n    const convertedData = data;\n    if (data && data.inserted && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method generateSalaryReport convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async generateSalaryReport(data) {\n    const convertedData = data;\n    if (data && data && data[0]) {\n      return {\n        ...data[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getSalaryReport convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getSalaryReport(resData) {\n    const data = resData.data || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((customer) => {\n        return {\n          ...customer,\n          id: customer._id || '',\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getSalaryReportDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getSalaryReportDetail(resData) {\n    const data = resData || [];\n\n    if (data && Object.keys(data).length > 0) {\n      return {\n        ...data,\n        id: data._id || '',\n        staff:\n          data.staff && data.staff.length > 0\n            ? data.staff.map((customer) => {\n                return {\n                  ...customer,\n                  id: customer._id || '',\n                  key: customer._id || '',\n                  firstName: customer.firstName || '',\n                  lastName: customer.lastName || '',\n                  name: customer.firstName + ' ' + customer.lastName,\n                  country: customer.country || '',\n                  city: customer.city || '',\n                  email: customer.email || '',\n                  phone: customer.phone || '',\n                  address: customer.address || '',\n                };\n              })\n            : [],\n      };\n    } else return {};\n  }\n\n  /**\n   * @public\n   * @method staffDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async staffDetail(data) {\n    const convertedData = data;\n    if (convertedData && Object.keys(convertedData).length > 0) {\n      return {\n        ...convertedData,\n        id: convertedData._id || '',\n        key: convertedData._id || '',\n        firstName: convertedData.firstName || '',\n        lastName: convertedData.lastName || '',\n        name: convertedData.firstName + ' ' + convertedData.lastName,\n        country: convertedData.country || '',\n        city: convertedData.city || '',\n        email: convertedData.email || '',\n        phone: convertedData.phone || '',\n        address: convertedData.address || '',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method expenseDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async expenseDetail(data) {\n    const convertedData = data;\n    if (convertedData && Object.keys(convertedData).length > 0) {\n      return {\n        ...convertedData,\n        id: convertedData._id || '',\n        key: convertedData._id || '',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addDealerArea convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addDealerArea(data) {\n    const convertedData = data;\n    if (data && data[0]) {\n      return {\n        ...data[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postAddCategory convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postAddCategory(data) {\n    const convertedData = data;\n    if (data && data[0]) {\n      return {\n        ...data[0],\n        cover: data[0].cover\n          ? `${config['baseURL']}${\n              data[0].cover ? data[0].cover.thumbnail : ''\n            }`\n          : '',\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postCategoryUpdate convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postCategoryUpdate(data) {\n    const convertedData = data;\n    if (data && data.updated) {\n      return {\n        ...data['updated'],\n        cover: data['updated'].cover\n          ? `${config['baseURL']}${\n              data['updated'].cover ? data['updated'].cover.thumbnail : ''\n            }`\n          : '',\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method dealerAreaList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async dealerAreaList(resData) {\n    const data = resData || [];\n\n    const convertedData =\n      data.length > 0 &&\n      data.map((tag) => {\n        return {\n          ...tag,\n          id: tag._id || '',\n          key: tag._id || '',\n          name: tag.name && tag.name,\n        };\n      });\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method expenseList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async expenseList(resData) {\n    const data = resData.data || [];\n\n    console.log('expenseList', data);\n    const convertedData =\n      data.length > 0 &&\n      data.map((tag) => {\n        return {\n          ...tag,\n          id: tag._id || '',\n          key: tag._id || '',\n          topic: tag.topic && tag.topic,\n          amount: tag.amount && tag.amount,\n        };\n      });\n\n    return convertedData;\n  }\n  tag;\n  /**\n   * @public\n   * @method addDealer convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addDealer(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addCategory convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async addCategory(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n        cover: data.inserted[0].cover\n          ? `${config['baseURL']}${\n              data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\n            }`\n          : '',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postAddCategory convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postAddCategory(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addProduct convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async addProduct(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n        cover: data.inserted[0].cover\n          ? `${config['baseURL']}${\n              data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\n            }`\n          : '',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addPost convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async addPost(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n        cover: data.inserted[0].cover\n          ? `${config['baseURL']}${\n              data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\n            }`\n          : '',\n      };\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addOrderNote convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async addOrderNote(data) {\n    const convertedData = data;\n    if (data && data[0]) {\n      return {\n        ...data[0],\n        status: 'ok',\n      };\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateOrderNote convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async updateOrderNote(data) {\n    const convertedData = data;\n    if (data && data['updated']) {\n      return {\n        ...data['updated'],\n        status: 'ok',\n      };\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateAdminRole convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async updateAdminRole(data) {\n    const convertedData = data;\n    if (data && data.updated) {\n      return {\n        ...data.updated,\n        status: 'ok',\n      };\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postAddTag convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async postAddTag(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addOrder convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async addOrder(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getOrderNote convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async getOrderNote(data) {\n    const convertedData = data;\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addTheme convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addTheme(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method postDeleteTag convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async postDeleteTag(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteSalaryReport convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteSalaryReport(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteOrderNote convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteOrderNote(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addPage convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addPage(data) {\n    const convertedData = data;\n    if (data && data[0]) {\n      return {\n        ...data[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addBrand convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addBrand(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n        cover: data.inserted[0].cover\n          ? `${config['baseURL']}${\n              data.inserted[0].cover ? data.inserted[0].cover.thumbnail : ''\n            }`\n          : '',\n      };\n    }\n\n    return convertedData;\n  }\n  /**\n   * @public\n   * @method addComponent convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addComponent(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addCustomer convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addCustomer(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method addRegion convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addRegion(data) {\n    const convertedData = data;\n    if (data && data.inserted) {\n      return {\n        ...data.inserted[0],\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteTag convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteTag(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteDealerArea convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteDealerArea(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteDealer convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteDealer(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method logout convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async logout(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method activeTheme convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async activeTheme(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deletetheme convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deletetheme(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteCustomer convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteCustomer(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteStaff convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteStaff(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteComponent convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteComponent(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteBrand convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteBrand(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteCategory convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteCategory(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method deleteRegion convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async deleteRegion(data) {\n    const convertedData = data;\n    if (data && data.success) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method siteSettings convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async siteSettings(resData) {\n    const convertedData = resData;\n\n    if (resData.data) {\n      return {\n        ...resData.data,\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getSiteSEO convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getSiteSEO(resData) {\n    const convertedData = resData;\n\n    if (resData.data) {\n      return {\n        ...resData.data,\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method getAdminCredential convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getAdminCredential(resData) {\n    const convertedData = resData;\n\n    if (resData.data) {\n      return {\n        ...resData.data,\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateSiteSettings convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateSiteSettings(data) {\n    if (data['updated']) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return data;\n  }\n\n  /**\n   * @public\n   * @method updateSiteSEO convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateSiteSEO(data) {\n    if (data['updated']) {\n      return {\n        ...data['updated'],\n        status: 'ok',\n      };\n    }\n\n    return data;\n  }\n\n  /**\n   * @public\n   * @method updateAdminCredential convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateAdminCredential(data) {\n    if (data && Object.keys(data).length > 0) {\n      return {\n        ...data,\n        status: 'ok',\n      };\n    }\n\n    return data;\n  }\n\n  /**\n   * @public\n   * @method adminUpdatePassword convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async adminUpdatePassword(data) {\n    if (data['updated']) {\n      return {\n        ...data['updated'],\n        status: 'ok',\n      };\n    }\n\n    return data;\n  }\n\n  /**\n   * @public\n   * @method updateInvoiceSettings convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateInvoiceSettings(data) {\n    if (data['updated']) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return data;\n  }\n\n  /**\n   * @public\n   * @method invoiceSettingsDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async invoiceSettingsDetail(resData) {\n    const convertedData = resData;\n\n    if (resData.data) {\n      return {\n        ...resData.data,\n      };\n    }\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method categoryDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async categoryDetail(data) {\n    const convertedData = {\n      ...data,\n      id: data.id || data._id || '',\n      name: data.name && data.name,\n      description: data.description && data.description,\n      productCount: data.productCount || 0,\n      icon: data.icon ? `${config['baseURL']}${data.icon}` : '',\n      thumbnail: data.thumbnail ? `${config['baseURL']}${data.thumbnail}` : null,\n      type:\n        data.subCategory.length > 0 &&\n        data.subCategory[0] &&\n        data.subCategory[0]['name']\n          ? 'Top category'\n          : 'Child category',\n      url: data.url || '',\n      subCategory:\n        data.subCategory.length > 0 &&\n        data.subCategory[0] &&\n        data.subCategory[0]['name']\n          ? data.subCategory.map((subCat) => {\n              return {\n                id: subCat._id || '',\n                name: subCat.name && subCat.name,\n                description: subCat.description && subCat.description,\n                cover: subCat.cover\n                  ? `${config['baseURL']}${subCat.cover.medium}`\n                  : '',\n              };\n            })\n          : [],\n      cover: {\n        cover: `${config['baseURL']}${\n          data.cover ? data.cover.original && data.cover.original : ''\n        }`,\n        id: data.cover ? data.cover._id : '',\n      },\n      image:\n        (data.image &&\n          data.image.length > 0 &&\n          data.image.map((img) => {\n            return {\n              id: img._id || '',\n              name: img.name && img.name,\n              cover: `${config['baseURL']}${img.medium}`,\n              added: img.added,\n              title: img.title,\n              labels: img.labels,\n              alt: img.alt,\n              caption: img.caption,\n            };\n          })) ||\n        [],\n    };\n\n    return convertedData;\n  }\n  /**\n   * @public\n   * @method createOrder convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async createOrder(data) {\n    //map props\n\n    const formatedData = {\n      ...data,\n    };\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method adminRoleRegister convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async adminRoleRegister(data) {\n    //map props\n\n    if (data && data.length > 0) {\n      return {\n        status: 'ok',\n        ...data[0],\n      };\n    } else return {};\n  }\n\n  /**\n   * @public\n   * @method adminList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async adminList(resData) {\n    //map props\n    return resData;\n  }\n\n  /**\n   * @public\n   * @method adminDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async adminDetail(resData) {\n    //map props\n\n    return resData;\n  }\n\n  /**\n   * @public\n   * @method orderDetail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async orderDetail(data) {\n    //map props\n    const order = data.order || false;\n    if (order) {\n      return {\n        ...order,\n        id: order.id || order._id,\n        shippingAddress: order.shippingAddress,\n        name:\n          order.shippingAddress['firstName'] +\n          ' ' +\n          order.shippingAddress['lastName'],\n        country: order.shippingAddress['country'],\n        city: order.shippingAddress['city'],\n        address: order.shippingAddress['address'],\n        phone: order.shippingAddress['phone'],\n        email: order.shippingAddress['email'],\n        shortCode: order.shortCode || '',\n        status:\n          typeof order.status === 'string'\n            ? order.status\n            : order.status && Object.keys(order.status).length > 0\n            ? order.status['name']\n            : 'pending',\n        total: order.totalPrice,\n        deliveryCharge: order.totalPrice,\n        deliveryRegion: order.deliveryRegion,\n        deliveryName: order.deliveryRegion && order.deliveryRegion['name'],\n        deliveryPickUpLocation:\n          order.deliveryRegion && order.deliveryRegion['pickUpLocation'],\n        deliveryCountryName:\n          order.deliveryRegion && order.deliveryRegion['countryName'],\n        products:\n          order.products && order.products.length > 0\n            ? order.products.map((product) => {\n                return {\n                  ...product,\n                  id: product._id || '',\n                  name: product.name && product.name,\n                  description: product.description && product.description,\n                  cover: `${config['baseURL']}${\n                    (product.cover && product.cover['thumbnail']) || ''\n                  }`,\n                  regularPrice: product.price && product.price['regular'],\n                  offerPrice: product.price && product.price['offer'],\n                  url: product.url,\n                  unit: product.unit,\n                  category: product.category,\n                  pricing: product.pricing,\n                  date: product.date,\n                  time: product.time,\n                  venue: product.venue,\n                  brand: product.brand,\n                  tags: product.tags,\n                  price: product.price,\n                  available:\n                    product.pricing && product.pricing.length > 0\n                      ? product.pricing[0]['stock'] &&\n                        product.pricing[0]['stock']['available']\n                      : 0,\n                  minimum:\n                    product.pricing && product.pricing.length > 0\n                      ? product.pricing[0]['stock'] &&\n                        product.pricing[0]['stock']['minimum']\n                      : 0,\n                };\n              })\n            : [],\n        date_created: order.added,\n        paymentMethod: order['payment']['paymentMethod'],\n        paymentStatus: order['payment']['status'],\n        payment: order['payment'],\n        customerId: order['customer'] ? order['customer']['_id'] : '',\n      };\n    } else return {};\n  }\n\n  /**\n   * @public\n   * @method signup convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async signup(data) {\n    return {\n      status: 'ok',\n    };\n  }\n\n  /**\n   * @public\n   * @method signin convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async signin(data) {\n    if (data['msg']) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return false;\n  }\n\n  /**\n   * @public\n   * @method login convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async login(data) {\n    if (data['msg']) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return false;\n  }\n\n  /**\n   * @public\n   * @method addImageToLibrary convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addImageToLibrary(data) {\n    return data;\n  }\n\n  /**\n   * @public\n   * @method getCurrentUserData convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getCurrentCustomerData(data) {\n    //map props\n    // let generalFormat = dataMap[config['server']]['getCurrentUserData']; //get genereal format from dataMap\n\n    const formatedData = {\n      ...data,\n    };\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method getAutoEmailConfiguration convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getAutoEmailConfiguration(data) {\n    const formatedData = {\n      ...data,\n    };\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method getAutoSMSConfiguration convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getAutoSMSConfiguration(data) {\n    const formatedData = {\n      ...data,\n    };\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method getEmailDetails convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getEmailDetails(data) {\n    const formatedData = {\n      ...data,\n    };\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method getSMSDetails convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getSMSDetails(data) {\n    const formatedData = {\n      ...data,\n    };\n\n    return formatedData;\n  }\n\n  /**\n   * @public\n   * @method currentCustomerData convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async currentCustomerData(data) {\n    //map props\n    // let generalFormat = dataMap[config['server']]['currentCustomerData']; //get genereal format from dataMap\n\n    const convertedData = {\n      ...data,\n    };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method updateCurrentCustomerData convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async updateCurrentCustomerData(data) {\n    //map props\n    // let generalFormat = dataMap[config['server']]['updateCurrentCustomerData']; //get genereal format from dataMap\n\n    const convertedData = {\n      status: 'ok',\n    };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method changePassword convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async changePassword(data) {\n    if (data['success']) {\n      return {\n        status: 'ok',\n      };\n    }\n\n    return data;\n  }\n\n  /**\n   * @public\n   * @method configureAutoEmail convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async configureAutoEmail(data) {\n    if (data['success']) {\n      return {\n        status: 'ok',\n      };\n    }\n    return data;\n  }\n\n  /**\n   * @public\n   * @method configureAutoSMS convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async configureAutoSMS(data) {\n    if (data['success']) {\n      return {\n        status: 'ok',\n      };\n    }\n    return data;\n  }\n\n  /**\n   * @public\n   * @method getCurrentUserOrders convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getCurrentUserOrders(resData) {\n    const data = resData.data || [];\n    const isNext = resData.page.next;\n\n    let convertedData =\n      (data.length > 0 &&\n        data.map((item) => {\n          return {\n            ...item,\n            id: item.id || item._id,\n            billingAddress: item.billingAddress,\n            status: item.status,\n            total: item.totalPrice,\n            products: item.products,\n            date_created: item.date,\n            paymentMethod: item['payment']['paymentMethod'],\n            customerId: item.customer['_id'],\n          };\n        })) ||\n      [];\n\n    convertedData = {\n      data: convertedData,\n      isNext,\n    };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method orderList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async orderList(resData) {\n    const data = resData.data || [];\n    // const isNext = resData.page.next;\n\n    console.log('orderListDAta', data);\n\n    let convertedData =\n      (data.length > 0 &&\n        data.map((item) => {\n          return {\n            ...item,\n            id: item.id || item._id,\n            shippingAddress: item.billingAddress,\n            shortCode: item.shortCode || '',\n            name:\n              item.shippingAddress &&\n              item.shippingAddress['firstName'] &&\n              item.shippingAddress['firstName'] + ' ' + item.shippingAddress &&\n              item.shippingAddress['lastName'] &&\n              item.shippingAddress['lastName'],\n            country:\n              item.shippingAddress &&\n              item.shippingAddress['country'] &&\n              item.shippingAddress['country'],\n            city:\n              item.shippingAddress &&\n              item.shippingAddress['city'] &&\n              item.shippingAddress['city'],\n            status:\n              typeof item.status === 'string'\n                ? item.status\n                : item.status && Object.keys(item.status).length > 0\n                ? item.status['name']\n                : 'pending',\n            total: item.totalPrice,\n            products: item.products,\n            date_created: item.added,\n            paymentMethod: item['payment'] && item['payment']['paymentMethod'],\n            paymentStatus: item['payment'] && item['payment']['status'],\n            payment: item['payment'],\n            customerId: item['customer'] ? item['customer']['_id'] : '',\n            deliveryName:\n              item.deliveryRegion && Object.keys(item.deliveryRegion).length > 0\n                ? `${item.deliveryRegion['name']}`\n                : '',\n          };\n        })) ||\n      [];\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method dealerOrderList convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async dealerOrderList(resData) {\n    const data = resData.data || [];\n    // const isNext = resData.page.next;\n\n    console.log('orderListDAta', data);\n\n    let convertedData =\n      (data.length > 0 &&\n        data.map((item) => {\n          return {\n            ...item,\n            id: item.id || item._id,\n            shippingAddress: item.billingAddress,\n            shortCode: item.shortCode || '',\n            name:\n              item.shippingAddress &&\n              item.shippingAddress['firstName'] &&\n              item.shippingAddress['firstName'] + ' ' + item.shippingAddress &&\n              item.shippingAddress['lastName'] &&\n              item.shippingAddress['lastName'],\n            country:\n              item.shippingAddress &&\n              item.shippingAddress['country'] &&\n              item.shippingAddress['country'],\n            city:\n              item.shippingAddress &&\n              item.shippingAddress['city'] &&\n              item.shippingAddress['city'],\n            status:\n              typeof item.status === 'string'\n                ? item.status\n                : item.status && Object.keys(item.status).length > 0\n                ? item.status['name']\n                : 'pending',\n            total: item.totalPrice,\n            products: item.products,\n            date_created: item.added,\n            paymentMethod: item['payment'] && item['payment']['paymentMethod'],\n            paymentStatus: item['payment'] && item['payment']['status'],\n            payment: item['payment'],\n            customerId: item['customer'] ? item['customer']['_id'] : '',\n          };\n        })) ||\n      [];\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method orderListForCustomer convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async orderListForCustomer(resData) {\n    const data = resData.data || [];\n    // const isNext = resData.page.next;\n\n    let convertedData =\n      (data.length > 0 &&\n        data.map((item) => {\n          return {\n            id: item.id || item._id,\n            shortCode: item.shortCode || '',\n            shippingAddress: item.billingAddress,\n            status:\n              typeof item.status === 'string'\n                ? item.status\n                : item.status && Object.keys(item.status).length > 0\n                ? item.status['name']\n                : 'pending',\n            name:\n              item.shippingAddress &&\n              item.shippingAddress['firstName'] &&\n              item.shippingAddress['firstName'] + ' ' + item.shippingAddress &&\n              item.shippingAddress['lastName'] &&\n              item.shippingAddress['lastName'],\n            country:\n              item.shippingAddress &&\n              item.shippingAddress['country'] &&\n              item.shippingAddress['country'],\n            city:\n              item.shippingAddress &&\n              item.shippingAddress['city'] &&\n              item.shippingAddress['city'],\n            total: item.totalPrice,\n            products: item.products,\n            date_created: item.added,\n            paymentMethod: item['payment'] && item['payment']['paymentMethod'],\n            paymentStatus: item['payment'] && item['payment']['status'],\n            payment: item['payment'],\n            customerId: item['customer'] ? item['customer']['_id'] : '',\n            deliveryName:\n              item.deliveryRegion && Object.keys(item.deliveryRegion).length > 0\n                ? `${item.deliveryRegion['name']}`\n                : '',\n          };\n        })) ||\n      [];\n\n    // convertedData = {\n    // \tdata: convertedData,\n    // \tisNext\n    // };\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method currentUserOrders convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async currentUserOrders(data) {\n    //map props\n    let generalFormat = dataMap[config['server']]['currentUserOrders']; //get genereal format from dataMap\n\n    const convertedData =\n      (data.length > 0 &&\n        data.map((item) => {\n          return {\n            ...generalFormat,\n            id: item.id,\n            status: item.status,\n            total: item.total,\n            line_items: item.line_items,\n            date_created: item.date_created,\n          };\n        })) ||\n      [];\n\n    return convertedData;\n  }\n\n  /**\n   * @public\n   * @method payment convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n\n  async payment(data) {\n    const paymentItems = data.items;\n    if (!paymentItems.length > 0) {\n      return paymentItems;\n    }\n\n    const items = paymentItems.map((item) => {\n      return {\n        name: item.name || '',\n        number: item.text || '',\n      };\n    });\n    return items;\n  }\n\n  /**\n   * @public\n   * @method welcome convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async welcome(data) {\n    return {\n      text: data.text,\n    };\n  }\n\n  /**\n   * @public\n   * @method logo convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async logo(data) {\n    const src =\n      data.image && data.image.length > 0\n        ? `${config['baseURL']}${data.image[0]['original']}`\n        : '';\n    return {\n      src,\n      target: data.target,\n    };\n  }\n\n  /**\n   * @public\n   * @method hotline convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async hotline(data) {\n    return {\n      text: data.text,\n    };\n  }\n\n  /**\n   * @public\n   * @method navLinks convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async navLinks(data) {\n    const navLinkItems = data.items;\n    if (!navLinkItems.length > 0) {\n      return [];\n    }\n\n    const items = navLinkItems.map((item) => {\n      return {\n        text: item.name || item.text,\n        target: item.target,\n      };\n    });\n\n    return items;\n  }\n\n  /**\n   * @public\n   * @method slider convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async slider(data) {\n    const sliderItems = data.items;\n    if (!sliderItems.length > 0) {\n      return sliderItems;\n    }\n\n    const images = sliderItems.map((item) => {\n      return {\n        target: item.target,\n        src: `${config['baseURL']}${item.image[0]['medium']}`,\n      };\n    });\n    return images;\n  }\n\n  /**\n   * @public\n   * @method sliderRight convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async sliderRight(data) {\n    const sliderRightItems = data.items;\n    if (!sliderRightItems.length > 0) {\n      return sliderRightItems;\n    }\n\n    const images = sliderRightItems.map((item) => {\n      return {\n        target: item.target,\n        src: `${config['baseURL']}${item.image[0]['medium']}`,\n      };\n    });\n    return images;\n  }\n\n  /**\n   * @public\n   * @method address convert api data from API to general format based on config server\n   * @param {Object} data response objectc from alpha\n   * @returns {Object}  converted data\n   */\n  async address(data) {\n    return {\n      name: data.name,\n      text: data.text,\n    };\n  }\n\n  /**\n   * @public\n   * @method Links convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async Links(data) {\n    const servicesItems = data.items;\n    if (!servicesItems.length > 0) {\n      return servicesItems;\n    }\n\n    const items = servicesItems.map((item) => {\n      return {\n        target: item.target,\n        name: item.name || item.text,\n      };\n    });\n    return items;\n  }\n\n  /**\n   * @public\n   * @method Account convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async Account(data) {\n    const accountItems = data.items;\n    if (!accountItems.length > 0) {\n      return accountItems;\n    }\n\n    const items = accountItems.map((item) => {\n      return {\n        target: item.target,\n        name: item.name || item.text,\n      };\n    });\n    return items;\n  }\n\n  /**\n   * @public\n   * @method 'About Us' convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async 'About Us'(data) {\n    const aboutUsItems = data.items;\n    if (!aboutUsItems.length > 0) {\n      return aboutUsItems;\n    }\n\n    const items = aboutUsItems.map((item) => {\n      return {\n        target: item.target,\n        name: item.name || item.text,\n      };\n    });\n    return items;\n  }\n\n  /**\n   * @public\n   * @method 'getTotalUserCount Us' convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async getTotalUserCount(data) {\n    return data;\n  }\n\n  /**\n   * @public\n   * @method addCoupon Us' convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addCoupon(data) {\n    if (data && data[0]) {\n      return {\n        status: 'ok',\n        ...data[0],\n        cover: data[0].cover\n          ? `${config['baseURL']}${\n              data[0].cover ? data[0].cover.thumbnail : ''\n            }`\n          : '',\n      };\n    }\n    return {};\n  }\n\n  /**\n   * @public\n   * @method addBundle Us convert api data from API to general format based on config server\n   * @param {Object} data response objectc from wc\n   * @returns {Object}  converted data\n   */\n  async addBundle(data) {\n    if (data && data[0]) {\n      return {\n        status: 'ok',\n        ...data[0],\n        price:\n          parseInt(data[0].price['offer']) > parseInt(data[0].price['regular'])\n            ? data[0].price['offer']\n            : data[0].price['regular'],\n        cover: data[0].cover\n          ? `${config['baseURL']}${\n              data[0].cover ? data[0].cover.thumbnail : ''\n            }`\n          : '',\n      };\n    }\n    return {};\n  }\n}\n\nexport default Converter;\n","import { useEffect, useReducer } from 'react';\nimport Connector from '../lib/connector.js';\n\ntype TInitialData = any;\ntype Tdependecies = any[] | [];\ntype TItem = string;\ntype IFormat = string | undefined;\n\ntype Actions = {\n  type: string;\n  payload?: any;\n};\n\ninterface IState {\n  readonly isLoading: boolean;\n  readonly error: object;\n  readonly data: TInitialData;\n  readonly done: boolean;\n}\n\nconst connector = new Connector();\n\nconst dataFetchReducer = (state: IState, action: Actions) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        error: {\n          isError: false,\n          error: {},\n        },\n        done: false,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n        done: true,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        error: {\n          isError: true,\n          error: action.payload,\n          done: true,\n        },\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useFetch = (\n  dependencies: Tdependecies = [],\n  initialData: TInitialData,\n  item: TItem,\n  options?: any,\n  format?: IFormat\n): IState => {\n  const initialState: IState = {\n    isLoading: false,\n    error: {\n      isError: false,\n      error: {},\n    },\n    data: initialData,\n    done: false,\n  };\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\n\n  useEffect(() => {\n    let didCancel = false;\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' });\n      try {\n        // @ts-ignore\n        let data = await connector.request(item, format, options);\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_SUCCESS', payload: data });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE', payload: error });\n        }\n      }\n    };\n    fetchData();\n    return () => {\n      didCancel = true;\n    };\n  }, dependencies);\n\n  return state;\n};\n\nexport default useFetch;\n","import { useReducer } from 'react';\nimport Connector from '../lib/connector.js';\n\ntype TInitialData = any;\ntype TItem = string;\n\ntype Actions = {\n  type: string;\n  payload?: any;\n};\n\ninterface IState {\n  readonly isLoading: boolean;\n  readonly error: object;\n  readonly data: TInitialData;\n  readonly done: boolean;\n}\n\nconst connector = new Connector();\n\nconst dataFetchReducer = (state: IState, action: Actions) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        error: {\n          isError: false,\n          error: {},\n        },\n        done: false,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n        done: true,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        error: {\n          isError: true,\n          error: action.payload,\n        },\n        done: true,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useHandleFetch = (\n  initialData: TInitialData,\n  item: TItem,\n  format?: string\n): [IState, (values: any) => void] => {\n  const initialState: IState = {\n    isLoading: false,\n    error: {\n      isError: false,\n      error: {},\n    },\n    data: initialData,\n    done: false,\n  };\n\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\n\n  const handlePost = async (options: any) => {\n    dispatch({ type: 'FETCH_INIT' });\n\n    try {\n      // @ts-ignore\n      let data = await connector.request(item, format || 'json', options);\n      dispatch({ type: 'FETCH_SUCCESS', payload: data });\n      return data;\n    } catch (error) {\n      dispatch({ type: 'FETCH_FAILURE', payload: error });\n      return initialData;\n    }\n  };\n\n  return [state, handlePost];\n};\n\nexport default useHandleFetch;\n","import React, { useState } from 'react';\nimport { Button } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport { useHandleFetch } from '../../../hooks';\n\nconst validationSchema = Yup.object().shape({\n\tusername: Yup.string()\n\t\t.label('Username')\n\t\t.required('Username is required')\n\t\t.min(3, 'Username must have at least 3 characters'),\n\n\tpassword: Yup.string().label('Password').required('Password is required'),\n});\n\nconst initialValues = {\n\tusername: '',\n\tpassword: '',\n};\n\ninterface Props {\n\n}\n\nconst QuickEdit = ({ }: Props) => {\n\tconst [loginState, handleLoginFetch] = useHandleFetch({}, 'login');\n\n\tconst handleSubmit = async (values: any, actions: any) => {\n\t\tconst updateCategoryRes = await handleLoginFetch({\n\t\t\tbody: {\n\t\t\t\tusername: values.username,\n\t\t\t\tpassword: values.password,\n\t\t\t},\n\t\t});\n\n\t\tactions.setSubmitting(false);\n\t};\n\n\n\n\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\n\t\tif (!values.username || !values.password || !isValid) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\treturn (\n\t\t<Formik\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tvalidateOnBlur={false}\n\t\t\tenableReinitialize={true}\n\t\t\tinitialValues={\n\t\t\t\t{ ...initialValues }\n\t\t\t}\n\t\t>\n\t\t\t{({\n\t\t\t\thandleChange,\n\t\t\t\tvalues,\n\t\t\t\thandleSubmit,\n\t\t\t\terrors,\n\t\t\t\tisValid,\n\t\t\t\tisSubmitting,\n\t\t\t\ttouched,\n\t\t\t\thandleBlur,\n\t\t\t\tsetFieldTouched,\n\t\t\t\thandleReset,\n\t\t\t}) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\tmaxWidth: '400px',\n\t\t\t\t\t\t\tmargin: '20px'\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Username'\n\t\t\t\t\t\t\t\tvalue={values.username}\n\t\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\t\tisError={(touched.username && errors.username) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.username && errors.username) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['username'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('username');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\n\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && loginState.error['error']['password'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype='primary'\n\t\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\n\t\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values, isValid)}\n\t\t\t\t\t\t\t\tloading={isSubmitting}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t// marginTop: '20px'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\n\nexport default QuickEdit;\n","import Login from './Login';\nexport default Login;\n","export default ( initialState ) => ( reducerMap ) => ( state = initialState, action ) => {\n    const reducer = reducerMap[ action.type ];\n    return reducer ? reducer( state, action ) : state;\n};\n","import isomorphicFetch from 'isomorphic-fetch';\n\nexport default (url, method, body) => {\n\tconst options = {\n\t\tmethod,\n\t\theaders: requestHeaders(),\n\t\tbody: method !== 'GET' ? JSON.stringify(body) : null\n\t};\n\n\treturn isomorphicFetch(url, options).then(res =>\n\t\tparseStatus(res.status, res.json())\n\t);\n};\n\nfunction parseStatus(status, res) {\n\treturn new Promise((resolve, reject) => {\n\t\tif (status >= 200 && status < 300) {\n\t\t\tres.then(response => resolve(response));\n\t\t} else {\n\t\t\tres.then(response => reject({ status, response }));\n\t\t}\n\t});\n}\n\nfunction requestHeaders() {\n\treturn {\n\t\tAccept: 'application/json',\n\t\t'Content-Type': 'application/json'\n\t};\n}\n","import { combineReducers } from 'redux';\nimport * as types from './types';\nimport { createReducer } from '../../utils';\n\n/* State shape\n{\n    isAuthenticated: bool,\n    redirectAfterLogin: string\n}\n*/\n\nconst globalState = createReducer([])({\n  [types.SAVE_ROLES]: (state, action) => {\n    const roles = action.payload;\n    return [...roles];\n  },\n});\n\nexport default globalState; ","export const SAVE_ROLES = \"session/SAVE_ROLES\";\n","import * as types from \"./types\";\n\nexport const saveRoles = (roles) => ({\n    type: types.SAVE_ROLES,\n    payload: roles\n});\n","import reducer from \"./reducers\";\n\nimport * as glboalOperations from \"./operations\";\n\nexport {\n    glboalOperations,\n};\n\nexport default reducer;\n","import getDeliveryChargeTotal from './getDeliveryChargeTotal';\n\nconst allRoles = [\n  'getCatalogue',\n  'postCatalogue',\n  'getDelivery',\n  'postDelivery',\n  'getOrder',\n  'postOrder',\n  'getBlog',\n  'postBlog',\n  'getPage',\n  'postPage',\n  'analytics',\n  'accounts',\n  'getDealer',\n  'postDealer',\n];\n\nconst isAccess = (role, adminRoles) => {\n  if (!adminRoles || !adminRoles[0]) return false;\n  if (adminRoles.includes('superAdmin')) return true;\n  return adminRoles.includes(role);\n};\n\nexport { getDeliveryChargeTotal, isAccess };\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Switch,\n  withRouter,\n} from 'react-router-dom';\nimport { Layout, Menu, Upload, message } from 'antd';\n\nimport {\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  TagOutlined,\n  BranchesOutlined,\n  GoldOutlined,\n  FilterOutlined,\n  TagsOutlined,\n  CarOutlined,\n  ShoppingCartOutlined,\n  MailOutlined,\n  SettingOutlined,\n  InboxOutlined,\n  SlidersOutlined,\n  DesktopOutlined,\n  RadarChartOutlined,\n  MessageOutlined,\n  UserOutlined,\n  FileAddOutlined,\n  FileSearchOutlined,\n  BgColorsOutlined,\n  BankOutlined,\n  FireOutlined,\n  MailTwoTone,\n  UserAddOutlined,\n  GlobalOutlined,\n  CalculatorOutlined,\n  UsergroupAddOutlined,\n  MoneyCollectOutlined,\n} from '@ant-design/icons';\n\n// import state\nimport { glboalOperations } from '../../state/ducks/globalState';\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nconst SiderComponent = ({ roles }: any) => {\n  const [collapsed, setcollapsed] = useState(false);\n  const onCollapse = (collapsed: any) => {\n    // console.log(collapsed);\n    setcollapsed(collapsed);\n  };\n\n  return (\n    <Sider\n      width={260}\n      style={{\n        boxShadow: '7px 0 60px rgba(0,0,0,.05)',\n        border: 'none',\n      }}\n      collapsible\n      collapsed={collapsed}\n      onCollapse={onCollapse}\n      theme='light'\n    >\n      <Menu selectable={true} mode='inline'>\n        {isAccess('analytics', roles) && (\n          <Menu.Item key='1' icon={<PieChartOutlined />}>\n            <Link to='/admin'>Dashboard</Link>\n          </Menu.Item>\n        )}\n\n        {isAccess('getCatalogue', roles) && (\n          <SubMenu\n            key='sub3'\n            icon={<GoldOutlined />}\n            title='Product'\n            // onTitleClick={() => props.history.push('/product')}\n          >\n            <Menu.Item icon={<RadarChartOutlined />} key='6'>\n              <Link to='/admin/product'>Products</Link>\n            </Menu.Item>\n\n            {/* <Menu.Item\n                      icon={<BankOutlined />}\n                      key='2222'>\n                      <Link to='/admin/bundle'>Bundle</Link>\n                  </Menu.Item> */}\n\n            <Menu.Item key='9' icon={<TagsOutlined />}>\n              <Link to='/admin/tag'>Tags</Link>\n            </Menu.Item>\n\n            <Menu.Item key='2' icon={<TagOutlined />}>\n              <Link to='/admin/category'>Categories</Link>\n            </Menu.Item>\n\n            <Menu.Item key='5' icon={<BranchesOutlined />}>\n              <Link to='/admin/brand'>Brand</Link>\n            </Menu.Item>\n          </SubMenu>\n        )}\n\n        {/* <SubMenu\n          key='sub333'\n          icon={<GoldOutlined />}\n          title='Recipes'\n          // onTitleClick={() => props.history.push('/product')}\n        >\n          <Menu.Item icon={<RadarChartOutlined />} key='655'>\n            <Link to='/admin/posts'>List Recipe</Link>\n          </Menu.Item>\n\n          <Menu.Item icon={<TagOutlined />} key='2222444'>\n            <Link to='/admin/posts/category'>Recipe Category</Link>\n          </Menu.Item>\n\n          <Menu.Item key='955' icon={<TagsOutlined />}>\n            <Link to='/admin/posts/tag'>Recipe Tags</Link>\n          </Menu.Item>\n        </SubMenu> */}\n\n        {/* <Menu.Item key='1012' icon={<FileExcelOutlined />}>\n                    <Link to='/admin/posts'>\n                        Recipies\n                    </Link>\n                </Menu.Item> */}\n\n        <Menu.Item key='1011' icon={<FireOutlined />}>\n          <Link to='/admin/coupon'>Coupon</Link>\n        </Menu.Item>\n\n        {isAccess('getDelivery', roles) && (\n          <Menu.Item key='10' icon={<CarOutlined />}>\n            <Link to='/admin/delivery'>Delivery</Link>\n          </Menu.Item>\n        )}\n\n        {/* {isAccess('accounts', roles) && (\n          <SubMenu key='sub33' icon={<CalculatorOutlined />} title='Accounting'>\n            <SubMenu key='sub3355' icon={<CalculatorOutlined />} title='Staff'>\n              <Menu.Item icon={<UsergroupAddOutlined />} key='66'>\n                <Link to='/admin/staff'>Staffs</Link>\n              </Menu.Item>\n              <Menu.Item icon={<MoneyCollectOutlined />} key='65257'>\n                <Link to='/admin/salaryReport'>Salary report</Link>\n              </Menu.Item>\n            </SubMenu>\n\n            <Menu.Item icon={<MoneyCollectOutlined />} key='67'>\n              <Link to='/admin/expense'>Expense</Link>\n            </Menu.Item>\n\n            <Menu.Item key='675454'>\n              <Link to='/admin/acccounting/overview'>Order report</Link>\n            </Menu.Item>\n          </SubMenu>\n        )} */}\n\n        {isAccess('getOrder', roles) && (\n          <SubMenu key='sub4' icon={<ShoppingCartOutlined />} title='Orders'>\n            <Menu.Item key='11'>\n              <Link to='/admin/order'>List Orders</Link>\n            </Menu.Item>\n            <Menu.Item key='11222'>\n              <Link to='/admin/order/overview'>Order Analytics</Link>\n            </Menu.Item>\n            <Menu.Item key='12'>\n              <Link to='/admin/order/new'>Add Order</Link>\n            </Menu.Item>\n            {/* <Menu.Item key='12'>\n                          <Link to='/admin/order/config'>\n                              Configure order status\n                          </Link>\n                      </Menu.Item> */}\n          </SubMenu>\n        )}\n\n        {/* {isAccess('getDealer', roles) && (\n          <SubMenu\n            key='sub5553'\n            icon={<TeamOutlined />}\n            title='Dealer'\n            // onTitleClick={() => props.history.push('/product')}\n          >\n            <Menu.Item icon={<TeamOutlined />} key='666655'>\n              <Link to='/admin/dealer'>List dealer</Link>\n            </Menu.Item>\n\n            <Menu.Item icon={<GlobalOutlined />} key='22534522444'>\n              <Link to='/admin/dealer/area'>Dealer Areas</Link>\n            </Menu.Item>\n          </SubMenu>\n        )} */}\n\n        <Menu.Item key='13' icon={<UserOutlined />}>\n          <Link to='/admin/customer'>Customer</Link>\n        </Menu.Item>\n        <Menu.Item key='1888' icon={<MailOutlined />}>\n          <Link to='/admin/email'>Email</Link>\n        </Menu.Item>\n        <Menu.Item key='199' icon={<MessageOutlined />}>\n          <Link to='/admin/sms'>SMS</Link>\n        </Menu.Item>\n\n        {isAccess('getDealer', roles) && (\n          <SubMenu key='sub6' icon={<FileOutlined />} title='Pages'>\n            <Menu.Item key='18' icon={<FileSearchOutlined />}>\n              <Link to='/admin/page'> List Pages</Link>\n            </Menu.Item>\n            <Menu.Item icon={<FileAddOutlined />} key='17'>\n              <Link to='/admin/page/new'> Add new Page</Link>\n            </Menu.Item>\n          </SubMenu>\n        )}\n\n        <SubMenu key='sub7' icon={<SettingOutlined />} title='Settings'>\n          <Menu.Item icon={<UserOutlined />} key='19'>\n            <Link to='/admin/settings/siteInfo'>Site information</Link>\n          </Menu.Item>\n\n          <Menu.Item icon={<UserAddOutlined />} key='19999'>\n            <Link to='/admin/settings/admins'>Admins</Link>\n          </Menu.Item>\n\n          <Menu.Item key='23' icon={<SlidersOutlined />}>\n            <Link to='/admin/settings/components'>Components</Link>\n          </Menu.Item>\n\n          <Menu.Item icon={<BgColorsOutlined />} key='20'>\n            <Link to='/admin/settings/themes'>Themes</Link>\n          </Menu.Item>\n\n          {/* <Menu.Item key='21'>\n\t\t\t\t\t\t<Link to='/settings/image'>Image</Link>\n\t\t\t\t\t</Menu.Item> */}\n          {/* <Menu.Item key='22'>\n                        <Link to='/admin/settings/invoice'>Invoice</Link>\n                    </Menu.Item> */}\n        </SubMenu>\n      </Menu>\n    </Sider>\n  );\n};\n\nconst mapDispathToProps = {\n  saveRoles: glboalOperations.saveRoles,\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, mapDispathToProps)(SiderComponent);\n\n/* \ngit checkout commit3 && git checkout -b newBranch && git cherry-pick 20ead887\naf2f73c541465d9067c3c6c70c398ac2\n*/\n","import Sider from \"./Sider\";\nexport default Sider; ","import Empty from \"./Empty\";\nexport default Empty; ","import React from 'react'\nimport { Empty } from 'antd';\n\n\ninterface Props {\n    title?: string;\n    height?: number\n}\n\nconst EmptyComponent = ({\n    title = 'No Data found',\n    height = 300\n}: Props) => {\n    return (\n        <div style={{\n            height: height,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n        }}>\n            <Empty description={title} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n        </div>\n    )\n}\n\nexport default EmptyComponent\n","// @ts-nocheck\n\nimport React, { useEffect, useState } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import components\n// import { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\nimport Empty from '../../components/Empty';\n\n// import libraries\nimport { useHistory } from 'react-router';\nimport {\n  LogoutOutlined,\n  BellOutlined,\n  OrderedListOutlined,\n  TwitterSquareFilled,\n  ShoppingCartOutlined,\n  CheckCircleOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\nimport Moment from 'react-moment';\nimport { Layout, Badge, Dropdown, Menu, Spin, notification } from 'antd';\nimport moment from 'moment';\nconst { Header } = Layout;\n\n// import styles\n\nconst openSuccessNotification = (msg?: any) => {\n  notification.success({\n    message: msg || 'Product Deleted',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\ninterface Props {}\n\nconst HeaderComponent = (props: Props) => {\n  const history = useHistory();\n\n  const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch(\n    {},\n    'getAllNotification'\n  );\n  const [\n    getMarkNotificationAsReadState,\n    handleMarkNotificationAsReadFetch,\n  ] = useHandleFetch({}, 'markNotificationAsRead');\n  const [\n    getMarkAllNotificationAsReadState,\n    handleMarkAllNotificationAsReadFetch,\n  ] = useHandleFetch({}, 'markAllNotificationAsRead');\n\n  const [notificationList, setnotificationList] = useState({});\n\n  const handleMenuClick = (e) => {\n    if (e.key === '3') {\n    }\n  };\n\n  useEffect(() => {\n    const getAllNotification = async () => {\n      const res = await handleGetAllNOticationFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n            limitNumber: 100000,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (res) {\n        // @ts-ignore\n        setnotificationList(res);\n      }\n    };\n\n    getAllNotification();\n  }, []);\n\n  const handleNotificationAsRead = async (id) => {\n    await handleMarkNotificationAsReadFetch({\n      body: {\n        id: [id],\n      },\n    });\n  };\n\n  const handleAllNotificationAsRead = async () => {\n    const res = await handleMarkAllNotificationAsReadFetch({});\n    // @ts-ignore\n    if (res && res.status === 'ok') {\n      openSuccessNotification('Notification cleared!');\n      setnotificationList([]);\n    }\n  };\n\n  console.log('getAllNotificationState', getAllNotificationState);\n\n  const typeIcon = {\n    customer: <UserOutlined />,\n    order: <ShoppingCartOutlined />,\n  };\n\n  const menu = () => {\n    if (getAllNotificationState.isLoading)\n      return (\n        <div\n          style={{\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            backgroundColor: '#fff',\n            padding: '0 50px',\n          }}\n        >\n          <Spin />\n        </div>\n      );\n\n    if (\n      getAllNotificationState.done &&\n      notificationList &&\n      !notificationList[0]\n    ) {\n      return (\n        <div\n          className='notificationListItemContainer'\n          style={{\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            backgroundColor: '#fff',\n            padding: '0 50px',\n          }}\n        >\n          <Empty title='No Notification found' />\n        </div>\n      );\n    }\n    return (\n      <div style={{}} className='notificationListItemContainer'>\n        {getAllNotificationState.done && notificationList[0] && (\n          <div style={{}}>\n            <div\n              style={{\n                width: '100%',\n                display: 'flex',\n                justifyContent: 'space-around',\n              }}\n            >\n              <a\n                onClick={() => handleAllNotificationAsRead()}\n                style={{\n                  textAlign: 'center',\n                  backgroundColor: '#f7f7f7',\n                  padding: '10px',\n                  width: '50%',\n                  fontSize: '13px',\n                }}\n                href='##'\n              >\n                CLEAR ALL\n              </a>\n              <a\n                onClick={() => history.push('/admin/notification')}\n                style={{\n                  textAlign: 'center',\n                  backgroundColor: '#eee',\n                  padding: '10px',\n                  width: '50%',\n                  fontSize: '13px',\n                }}\n                href='##'\n              >\n                SEE ALL\n              </a>\n            </div>\n          </div>\n        )}\n\n        {getAllNotificationState.done &&\n          notificationList[0] &&\n          notificationList.map((item, index) => {\n            console.log('notificationItem', item);\n            return (\n              <div\n                onClick={() => {\n                  handleNotificationAsRead(item._id);\n                  history.push(`/admin/${item.type}/${item.eventId}`);\n                }}\n                className={\n                  !item.read\n                    ? 'notificationListItemContainer__item notificationListItemContainer__item-active'\n                    : 'notificationListItemContainer__item'\n                }\n              >\n                <span className='notificationListItemContainer__item-icon'>\n                  {typeIcon[item['type']]}\n                </span>\n                <div className='notificationListItemContainer__item-info'>\n                  <h3>{item.heading}</h3>\n                  <h4>{item.text}</h4>\n                  <h2>\n                    {item.added &&\n                      moment(item.added).format('MMMM Do YYYY, h:mm a')}\n                  </h2>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    );\n  };\n\n  console.log('notificationList', notificationList);\n\n  return (\n    <Header\n      style={{\n        background: '#fff',\n        height: '60px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        boxShadow:\n          '0 0.46875rem 2.1875rem rgba(8,10,37,.01), 0 0.9375rem 1.40625rem rgba(8,10,37,.01), 0 0.25rem 0.53125rem rgba(8,10,37,.02), 0 0.125rem 0.1875rem rgba(8,10,37,.01)',\n        zIndex: 10,\n        transition: ' all .2s',\n        alignItems: 'center',\n        alignContent: 'center',\n      }}\n    >\n      <h2\n        onClick={() => history.push('/admin')}\n        style={{\n          color: '#0072EA',\n          marginTop: '10px',\n          marginLeft: '-20px',\n          cursor: 'pointer',\n        }}\n      >\n        Admin\n      </h2>\n\n      <div\n        style={{\n          marginRight: '-28px',\n        }}\n      >\n        <Dropdown\n          placement='bottomLeft'\n          overlay={menu}\n          // visible={this.state.visible}\n        >\n          <a\n            style={{\n              marginRight: '10px',\n            }}\n            href='###'\n            className='notificationIconContainer'\n          >\n            <Badge\n              overflowCount={100}\n              // @ts-ignore\n              showZero={TwitterSquareFilled}\n              count={\n                getAllNotificationState.done && !notificationList\n                  ? 0\n                  : notificationList && notificationList.length\n                  ? notificationList.length\n                  : 0\n              }\n            >\n              <span\n                style={{\n                  marginLeft: '10px',\n                  fontWeight: 600,\n                  borderRadius: '25px',\n                  color: '#1890ff',\n                  padding: '2px 20px',\n                  cursor: 'pointer',\n                  marginRight: '-5px',\n                }}\n              >\n                <BellOutlined />\n              </span>\n            </Badge>\n          </a>\n        </Dropdown>\n\n        <a href='/admin/auth/logout'>\n          <span\n            style={{\n              marginLeft: '10px',\n              fontWeight: 600,\n              borderRadius: '25px',\n              color: '#1890ff',\n              padding: '2px 20px',\n              cursor: 'pointer',\n            }}\n          >\n            <LogoutOutlined />\n            <span\n              style={{\n                marginLeft: '10px',\n              }}\n            >\n              logout\n            </span>\n          </span>\n        </a>\n      </div>\n    </Header>\n  );\n};\n\nexport default HeaderComponent;\n","import Header from \"./Header\";\nexport default Header; ","import React, { useState, useEffect } from 'react'\n\n\n\n// import libraries \nimport {\n    ResponsiveContainer,\n    AreaChart,\n    CartesianGrid,\n    XAxis,\n    YAxis,\n    Tooltip,\n    Legend,\n    Area,\n    Line\n} from \"recharts\";\n\nimport {\n    DeleteOutlined,\n    FileAddOutlined,\n    CheckCircleOutlined,\n    FileImageFilled,\n    FileImageOutlined,\n    FileImageTwoTone,\n    PlusOutlined,\n    PlusCircleOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined,\n    UserOutlined,\n    CalendarOutlined,\n    GoldOutlined,\n    ShoppingCartOutlined,\n    TagOutlined\n} from '@ant-design/icons';\n\n\nimport { useHandleFetch } from \"../../hooks\";\n\n\n\nimport { Select, Button, Spin, Empty,DatePicker } from 'antd';\nimport Moment from \"react-moment\";\nimport moment from 'moment'; \n\nconst { Option } = Select;\n\nconst { RangePicker } = DatePicker;\n\n\n\n\n\nexport const RAINFALL = {\n    \"2018\": [\n        {\n            month: 1,\n            rainfall: 65.4\n        },\n        {\n            month: 2,\n            rainfall: 1.6\n        },\n        {\n            month: 3,\n            rainfall: 23\n        },\n        {\n            month: 4,\n            rainfall: 16.4\n        },\n        {\n            month: 5,\n            rainfall: 65.6\n        },\n        {\n            month: 6,\n            rainfall: 43.2\n        },\n        {\n            month: 7,\n            rainfall: 19.4\n        },\n        {\n            month: 8,\n            rainfall: 42.8\n        },\n        {\n            month: 9,\n            rainfall: 16.4\n        },\n        {\n            month: 11,\n            rainfall: 97.8\n        },\n        {\n            month: 12,\n            rainfall: 104.8\n        }\n    ],\n    \"2019\": [\n        {\n            month: 1,\n            rainfall: 11.2\n        },\n        {\n            month: 2,\n            rainfall: 18.6\n        },\n        {\n            month: 3,\n            rainfall: 12\n        },\n        {\n            month: 4,\n            rainfall: 7.2\n        },\n        {\n            month: 5,\n            rainfall: 53.4\n        },\n        {\n            month: 6,\n            rainfall: 49.8\n        },\n        {\n            month: 7,\n            rainfall: 45.2\n        },\n        {\n            month: 8,\n            rainfall: 51.4\n        },\n        {\n            month: 9,\n            rainfall: 41\n        },\n        {\n            month: 10,\n            rainfall: 24\n        },\n        {\n            month: 11,\n            rainfall: 54.4\n        },\n        {\n            month: 12,\n            rainfall: 6.2\n        }\n    ]\n};\n\n\nconst MONTHS = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n];\n\n\n\n\nexport const TooltipContainerStyles = {\n    border: 0,\n    borderRadius: \"8px\",\n    fontSize: 14,\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\n};\n\n\n\n\ninterface Props {\n\n}\n\nconst localOptions = [\n    {\n        value: 'category',\n        name: 'Category'\n    }, {\n        value: 'product',\n        name: 'Product'\n    }\n\n]\n\nconst ApiVisits = (props: Props) => {\n    const [selectedApiValue, setSelectedApiValue] = useState('date');\n    const [startDate,setStartDate] = useState('');\n    const [endDate,setEndDate] = useState('');\n\n\n\n    \n\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\n\n\n    const [userData, setuserData] = useState([]);\n\n    useEffect(()=>{\n        const getDemoGraphicVisitsValue = async () => {\n            const uservisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\n                urlOptions: {\n                    params: {\n                        metricType: selectedApiValue,\n                        startDateValue: startDate,\n                        endDateValue: endDate\n                    }\n                }\n            }); \n\n           console.log('uservisitsData',uservisitsDataRes); \n\n           // @ts-ignore\n           if(uservisitsDataRes){\n            // @ts-ignore\n            setuserData(uservisitsDataRes)\n           }\n\n\n           };\n\n\n           getDemoGraphicVisitsValue(); \n\n    },[selectedApiValue,startDate,endDate])\n\n\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState);\n\n\n\n    \n    const options = [\n        {\n            value: 'date',\n            name: 'Date'\n        },\n        {\n            value: 'hour',\n            name: 'Hour'\n        },\n        {\n            value: 'dayOfWeek',\n            name: 'Day of week'\n        },\n        {\n            value: 'dayOfMonth',\n            name: 'Day of month'\n        },\n         {\n            value: 'month',\n            name: 'Month'\n        },\n        {\n            value: 'year',\n            name: 'Year'\n        }\n    ]\n\n    \n\n    const date = new Date();\n    const thisMonth = MONTHS[date.getMonth()]\n    \n\n\n    const getFormateDateValue = (order) => {\n\n        if(selectedApiValue === 'day'){\n            return order ? moment(order).format('MMMM Do YYYY, h:mm:ss a') : order;\n        }\n        else if (selectedApiValue === 'date'){\n            return order ? moment(order).format('MMMM Do YYYY') : order;\n        }\n        else if (selectedApiValue === 'month'){\n            return order ? MONTHS[order - 1] : order; ;\n        }\n        return order; \n    }\n    \n\n    const onChange = (value) => {\n        setSelectedApiValue(value);\n    }\n\n\n    const handleStartEndDateRangeDate = (e) => {\n       if(e && e[0]){\n        const startDate = new Date(moment(e[0]).format()); \n        const endDate = new Date(moment(e[1]).format()); \n        // @ts-ignore\n        setStartDate(startDate);\n        // @ts-ignore\n        setEndDate(endDate);\n       }\n      \n    }; \n\n\n\n    return (\n        <div className='overviewContainer__userVisits'>\n            <div className='overviewContainer__body-apiVisits-header'>\n                <div className='overviewContainer__body-apiVisits-header-info'>\n                    <h2>\n                        Users \n                    </h2>\n\n                        <h3>\n                          All users that visited\n                        </h3>\n                </div>\n\n\n                <div className='overviewContainer__body-apiVisits-header-controller'>\n                <Select\n                    bordered={false}\n                    showSearch\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\n                    placeholder='Select an api'\n                    optionFilterProp='children'\n                    onChange={onChange}\n                    defaultValue={selectedApiValue}\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >\n                    {\n                        options.map((option) => {\n                            return <Option value={option.value}>{option.name}</Option>;\n                        })}\n                </Select>\n            </div>\n            </div>\n\n            <div className='overviewContainer__body-body'>\n            {demoGraphicVisitsState.isLoading && (\n            <>\n            <div style={{\n                margin:'100px 0',\n                display:'flex',\n                justifyContent:'center',\n                alignItems:\"center\"\n            }}>\n              <Spin size='large' />\n            </div>\n\n            </>\n        )}\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '00px'\n                    }}>\n                        <Empty description={`No User visited`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n\n               {demoGraphicVisitsState.done && userData && userData.length > 0 && (\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                    <AreaChart data={userData} fontSize={12}>\n                        <defs>\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid\n                            vertical={false}\n                            strokeDasharray=\"3 3\"\n                            stroke=\"#d6d9da\"\n                        />\n                        <XAxis dataKey={selectedApiValue} \n                        tickFormatter={getFormateDateValue}\n                         />\n                        <YAxis\n                            orientation=\"left\"\n                            width={20}\n                            axisLine={false}\n                            tickLine={false}\n                        />\n                        <Tooltip\n                            cursor={false}\n                            contentStyle={TooltipContainerStyles}\n                            formatter={(value, name) => [`${value}`, `${name}`]}\n                        />\n                        <Area\n                            dataKey=\"count\"\n                            name=\"Count\"\n                            type=\"basis\"\n                            unit={selectedApiValue === 'month' ? thisMonth : ''}\n                            fill=\"url(#rainGradient)\"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n               )}\n\n\n            </div>\n            <div className=\"overviewContainer__body-footer\">\n                  <RangePicker \n                  showTime={true}\n                  onChange={handleStartEndDateRangeDate}\n                  bordered={false}\n                  picker=\"date\" />\n            </div>\n\n        </div>\n    )\n}\n\nexport default ApiVisits\n","import React, { useState, useEffect } from 'react';\n\n// import libraries\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Area,\n} from 'recharts';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  FileImageOutlined,\n  FileImageTwoTone,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  UserOutlined,\n  CalendarOutlined,\n  GoldOutlined,\n  ShoppingCartOutlined,\n  TagOutlined,\n} from '@ant-design/icons';\n\nimport { useHandleFetch } from '../../hooks';\n\nimport { Select, Button, Spin, Empty, DatePicker } from 'antd';\nimport moment from 'moment';\n\nconst { Option } = Select;\n\nconst { RangePicker } = DatePicker;\n\nexport const RAINFALL = {\n  '2018': [\n    {\n      month: 1,\n      rainfall: 65.4,\n    },\n    {\n      month: 2,\n      rainfall: 1.6,\n    },\n    {\n      month: 3,\n      rainfall: 23,\n    },\n    {\n      month: 4,\n      rainfall: 16.4,\n    },\n    {\n      month: 5,\n      rainfall: 65.6,\n    },\n    {\n      month: 6,\n      rainfall: 43.2,\n    },\n    {\n      month: 7,\n      rainfall: 19.4,\n    },\n    {\n      month: 8,\n      rainfall: 42.8,\n    },\n    {\n      month: 9,\n      rainfall: 16.4,\n    },\n    {\n      month: 11,\n      rainfall: 97.8,\n    },\n    {\n      month: 12,\n      rainfall: 104.8,\n    },\n  ],\n  '2019': [\n    {\n      month: 1,\n      rainfall: 11.2,\n    },\n    {\n      month: 2,\n      rainfall: 18.6,\n    },\n    {\n      month: 3,\n      rainfall: 12,\n    },\n    {\n      month: 4,\n      rainfall: 7.2,\n    },\n    {\n      month: 5,\n      rainfall: 53.4,\n    },\n    {\n      month: 6,\n      rainfall: 49.8,\n    },\n    {\n      month: 7,\n      rainfall: 45.2,\n    },\n    {\n      month: 8,\n      rainfall: 51.4,\n    },\n    {\n      month: 9,\n      rainfall: 41,\n    },\n    {\n      month: 10,\n      rainfall: 24,\n    },\n    {\n      month: 11,\n      rainfall: 54.4,\n    },\n    {\n      month: 12,\n      rainfall: 6.2,\n    },\n  ],\n};\n\nconst MONTHS = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nexport const getMonthNameByOrder = (order: number): string | undefined =>\n  MONTHS[order - 1];\n\nexport const TooltipContainerStyles = {\n  border: 0,\n  borderRadius: '8px',\n  fontSize: 14,\n  boxShadow: '2px 2px 5px 3px rgba(0,0,0,0.15)',\n};\n\ninterface Props {}\n\nconst localOptions = [\n  {\n    value: 'category',\n    name: 'Category',\n  },\n  {\n    value: 'product',\n    name: 'Product',\n  },\n];\n\nconst ApiVisits = (props: Props) => {\n  const [selectedApiValue, setSelectedApiValue] = useState('date');\n  const [\n    orderAnalyticsVisitsState,\n    handleOrderAnalyticsVisitsStateFetch,\n  ] = useHandleFetch({}, 'getAnalyticsOrders');\n  const [orderData, setorderData] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  useEffect(() => {\n    const getAnalyticsOrders = async () => {\n      const ordersDataRes = await handleOrderAnalyticsVisitsStateFetch({\n        urlOptions: {\n          params: {\n            metricType: selectedApiValue,\n            startDateValue: startDate,\n            endDateValue: endDate,\n          },\n        },\n      });\n\n      console.log('ordersDataRes', ordersDataRes);\n\n      // @ts-ignore\n      if (ordersDataRes) {\n        // @ts-ignore\n        setorderData(ordersDataRes);\n      }\n    };\n    getAnalyticsOrders();\n  }, [selectedApiValue, startDate, endDate]);\n\n  console.log('orderAnalyticsVisitsState', orderAnalyticsVisitsState);\n\n  const onChange = (value) => {\n    setSelectedApiValue(value);\n  };\n\n  const options = [\n    {\n      value: 'date',\n      name: 'Date',\n    },\n    {\n      value: 'hour',\n      name: 'Hour',\n    },\n    {\n      value: 'dayOfWeek',\n      name: 'Day of week',\n    },\n    {\n      value: 'dayOfMonth',\n      name: 'Day of month',\n    },\n    {\n      value: 'month',\n      name: 'Month',\n    },\n    {\n      value: 'year',\n      name: 'Year',\n    },\n  ];\n\n  const date = new Date();\n  const thisMonth = MONTHS[date.getMonth()];\n\n  const getFormateDateValue = (order) => {\n    if (selectedApiValue === 'day') {\n      return order ? moment(order).format('MMMM Do YYYY, h:mm:ss a') : order;\n    } else if (selectedApiValue === 'date') {\n      return order ? moment(order).format('MMMM Do YYYY') : order;\n    } else if (selectedApiValue === 'month') {\n      return MONTHS[order - 1];\n    }\n    return order;\n  };\n\n  const getDatePickerValue = () => {\n    if (selectedApiValue === 'hour') {\n      return 'time';\n    }\n    if (selectedApiValue === 'month') {\n      return 'month';\n    } else if (selectedApiValue === 'dayOfWeek') {\n      return 'week';\n    } else if (selectedApiValue === 'year') {\n      return 'year';\n    }\n\n    return 'date';\n  };\n\n  const handleStartEndDateRangeDate = (e) => {\n    console.log('dateOrder', moment(e[0]).format());\n    console.log('dateOff', moment(e[1]).format());\n    const startDate = new Date(moment(e[0]).format());\n    const endDate = new Date(moment(e[1]).format());\n    // @ts-ignore\n    setStartDate(startDate);\n    // @ts-ignore\n    setEndDate(endDate);\n  };\n\n  return (\n    <div className='overviewContainer__userVisits'>\n      <div className='overviewContainer__body-apiVisits-header'>\n        <div className='overviewContainer__body-apiVisits-header-info'>\n          <h2>Orders</h2>\n\n          <h3>All orders that visited</h3>\n        </div>\n\n        <div className='overviewContainer__body-apiVisits-header-controller'>\n          <Select\n            bordered={false}\n            showSearch\n            style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\n            placeholder='Select an api'\n            optionFilterProp='children'\n            onChange={onChange}\n            defaultValue={selectedApiValue}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            {options.map((option) => {\n              return <Option value={option.value}>{option.name}</Option>;\n            })}\n          </Select>\n        </div>\n      </div>\n\n      <div className='overviewContainer__body-body'>\n        {orderAnalyticsVisitsState.isLoading && (\n          <>\n            <div\n              style={{\n                margin: '100px 0',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Spin size='large' />\n            </div>\n          </>\n        )}\n        {orderAnalyticsVisitsState.done &&\n          !(orderAnalyticsVisitsState.data.length > 0) && (\n            <div\n              style={{\n                marginTop: '00px',\n              }}\n            >\n              <Empty\n                description={`No Orders Created`}\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n\n        {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\n          <ResponsiveContainer width='100%' height={300}>\n            <AreaChart data={orderData} fontSize={12}>\n              <defs>\n                <linearGradient id='rainGradient' x1='0' y1='0' x2='0' y2='1'>\n                  <stop offset='0%' stopColor='#1890ff' />\n                  <stop offset='100%' stopColor='#3066BE22' />\n                </linearGradient>\n              </defs>\n              <CartesianGrid\n                vertical={false}\n                strokeDasharray='3 3'\n                stroke='#d6d9da'\n              />\n              <XAxis\n                dataKey={selectedApiValue}\n                tickFormatter={getFormateDateValue}\n              />\n              <YAxis\n                // unit=\"ml\"\n                orientation='left'\n                width={20}\n                axisLine={false}\n                tickLine={false}\n              />\n              <Tooltip\n                cursor={false}\n                contentStyle={TooltipContainerStyles}\n                formatter={(value, name) => [`${value}`, `${name}`]}\n              />\n              <Area\n                dataKey='count'\n                name='Count'\n                unit={selectedApiValue === 'month' ? thisMonth : ''}\n                type='basis'\n                fill='url(#rainGradient)'\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        )}\n      </div>\n      <div className='overviewContainer__body-footer'>\n        <RangePicker\n          showTime={true}\n          onChange={handleStartEndDateRangeDate}\n          picker={'date'}\n          bordered={false}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ApiVisits;\n","import React, { useState, useEffect } from 'react'\n\n\n\n\n// import lib \n\nimport { ResponsiveContainer, PieChart, Tooltip, Pie, Cell } from \"recharts\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\nimport {\n    DeleteOutlined,\n    FileAddOutlined,\n    CheckCircleOutlined,\n    FileImageFilled,\n    FileImageOutlined,\n    FileImageTwoTone,\n    PlusOutlined,\n    PlusCircleOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined,\n    UserOutlined,\n    CalendarOutlined,\n    GoldOutlined,\n    ShoppingCartOutlined,\n    TagOutlined\n} from '@ant-design/icons';\n\nimport { Select, Button, Spin, Empty } from 'antd';\n\nconst { Option } = Select;\n\n\n\n\ninterface Props {\n\n}\n\nconst localOptions = [\n    {\n        value: 'browser',\n        name: 'Browser'\n    },\n    {\n        value: 'device',\n        name: 'Device'\n    },\n    {\n        value: 'os',\n        name: 'OS'\n    }, {\n        value: 'platform',\n        name: 'Platform'\n    },\n  \n\n];\n\n\nexport const AGE_GROUP = [\n    {\n        device: \"18-24\",\n        percentage: 14\n    },\n    {\n        device: \"25-34\",\n        percentage: 24\n    },\n    {\n        device: \"35-44\",\n        percentage: 22\n    },\n    {\n        device: \"45-54\",\n        percentage: 18\n    },\n    {\n        device: \"55-64\",\n        percentage: 16\n    },\n    {\n        device: \"65+\",\n        percentage: 6\n    }\n];\n\nexport const COLORS = [\n    '#1890ff',\n    '#20A39E',\n    '#61D095',\n    '#FFBA49',\n    '#EF5B5B',\n    '#A4036F',\n];\n\n\n\n\nexport const TooltipContainerStyles = {\n    border: 0,\n    borderRadius: \"8px\",\n    fontSize: 14,\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\n};\n\n\n\n\nconst PlatformVisits = (props: Props) => {\n    const [options, setoptions] = useState(localOptions);\n    const [selectedApiValue, setSelectedApiValue] = useState('browser');\n\n\n    const [demoGraphicVisitsState, handleDemoGraphicVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsDemographicVisits');\n\n\n    const [demographicData, setdemographicData] = useState([]);\n\n    useEffect(()=>{\n        const getDemoGraphicVisitsValue = async () => {\n            const demograpicVisitsDataRes =  await handleDemoGraphicVisitsStateFetch({\n                urlOptions: {\n                    params: {\n                        metricType: selectedApiValue,\n                    }\n                }\n            }); \n           };\n\n           getDemoGraphicVisitsValue(); \n\n    },[selectedApiValue])\n\n\n\n    useEffect(()=>{\n        if(demoGraphicVisitsState.done && demoGraphicVisitsState.data){\n            setdemographicData(demoGraphicVisitsState.data); \n        }; \n    },[demoGraphicVisitsState])\n\n\n\n    console.log('demoGraphicVisitsState',demoGraphicVisitsState)\n    console.log('demographicData',demographicData)\n\n\n    const onChange = (value) => {\n        setSelectedApiValue(value);\n    }\n\n    const RADIAN = Math.PI / 180;\n\n\n    const renderCustomizedLabel = ({\n        cx,\n        cy,\n        midAngle,\n        innerRadius,\n        outerRadius,\n        value,\n        name,\n        index,\n        percent,\n    }) => {\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n        const x = cx + radius * Math.cos(-midAngle * RADIAN) - 10;\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n        console.log('percent..',percent);\n        return (\n            <text x={x} y={y} fill=\"white\" fontSize={12} dominantBaseline=\"central\">\n                {`${(percent * 100).toFixed(0)}%`}\n            </text>\n        );\n    };\n\n\n\n    return (\n        <div className='overviewContainer__body-platformVisits'>\n            <div className='overviewContainer__body-platformVisits-header'>\n                <div className='overviewContainer__body-platformVisits-header-info'>\n                    <h2>\n                        Demographic\n                        </h2>\n                    <h3>\n                       {selectedApiValue} demography\n                        </h3>\n                </div>\n                <div className='overviewContainer__body-platformVisits-header-controller'>\n                    <Select\n                        bordered={false}\n                        showSearch\n                        style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\n                        placeholder='Select Type'\n                        optionFilterProp='children'\n                        onChange={onChange}\n                        defaultValue={'browser'}\n                        filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        {\n                            options.map((option) => {\n                                return <Option value={option.value}>{option.name}</Option>;\n                            })}\n                    </Select>\n                </div>\n            </div>\n\n            <div className=\"overviewContainer__body-body\">\n\n            {demoGraphicVisitsState.isLoading && (\n            <>\n                <div style={{\n                    display:'flex',\n                    justifyContent:'center',\n                    alignItems:\"center\",\n                    marginTop:'100px',\n                    marginBottom:'100px',\n                }}>\n                <Spin\n                size='large'\n                />\n                </div>\n\n            </>\n        )}\n                {demoGraphicVisitsState.done && !(demoGraphicVisitsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '00px'\n                    }}>\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n\n                    {demoGraphicVisitsState.done && demographicData && demographicData.length > 0 && (\n                        <ResponsiveContainer width=\"100%\" height={300}>\n                        <PieChart fontSize={14}>\n                            <Tooltip\n                                cursor={false}\n                                contentStyle={TooltipContainerStyles}\n                                formatter={(value, name) => [`${value}`, `${name}`]}\n                            />\n\n                            <Pie\n                                dataKey=\"count\"\n                                data={demographicData}\n                                outerRadius={100}\n                                innerRadius={40}\n                                name={selectedApiValue}\n                                nameKey={selectedApiValue}\n                                unit=\"%\"\n                                label={renderCustomizedLabel}\n                                labelLine={false}\n                            >\n                                {demographicData && demographicData.map((entry, index) => (\n                                    <Cell\n                                        key={`cell-${index}`}\n                                        fill={COLORS[index % COLORS.length]}\n                                    />\n                                ))}\n                            </Pie>\n                            </PieChart>\n                        </ResponsiveContainer>\n                    )}\n            </div>\n\n            <div className=\"overviewContainer__body-footer\">\n                <h3>\n                    <span>\n                        <CalendarOutlined />\n                    </span>\n\n\t\t\t\t\t\t\t\tIn the last month\n\t\t\t\t\t     </h3>\n            </div>\n\n        </div>\n    )\n}\n\nexport default PlatformVisits\n\n\n// http://localhost:5000/admin/analytics/user?metric=day?start=date&end=datae\n// /http://localhost:5000/admin/analytics/item?type=product&item=534534534534&metric=day","import React,{useState, useEffect} from 'react'\n\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\n\n// \n\n\n// import lib\nimport { useHistory } from \"react-router-dom\";\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined,\n    CalendarOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Spin } from 'antd';\n\n\nconst { Option } = Select;\n\nconst { Column, ColumnGroup } = Table;\n\n\n\ninterface Props {\n    \n}\n\nconst localOptions = [\n    {\n        value: 'category',\n        name: 'Category'\n    },\n     {\n        value: 'product',\n        name: 'Product'\n    }\n\n]\n\n\nconst PageVisits = (props: Props) => {\n\n    const history = useHistory(); \n\n\n    const [options, setoptions] = useState(localOptions);\n    const [selectedApiValue, setSelectedApiValue] = useState('product');\n    const [pageVisitsState, handlePageVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsPageVisits');\n\n\n    useEffect(()=>{\n        const getPageVisitsValue = async () => {\n            const pageVisitsDataRes =  await handlePageVisitsStateFetch({\n                urlOptions: {\n                    params: {\n                        visitType: selectedApiValue,\n                        item: 'item',\n                    }\n                }\n            }); \n           };\n\n           getPageVisitsValue(); \n\n    },[selectedApiValue])\n\n    const onChange = (value) => {\n        setSelectedApiValue(value);\n    }\n\n\n    console.log('pageVisitsState',pageVisitsState)\n\n\n    return (\n\n        <div className='overviewContainer__body-apiVisits'>\n        <div className='overviewContainer__body-apiVisits-header'>\n            <div className='overviewContainer__body-apiVisits-header-info'>\n                <h2>\n                    Popularity\n                    </h2>\n                <h3>\n                      All {selectedApiValue} that were visited\n                    </h3>\n            </div>\n            <div className='overviewContainer__body-apiVisits-header-controller'>\n                <Select\n                    bordered={false}\n                    showSearch\n                    style={{ width: '130px', borderRadius: '6px', color: '#1890ff' }}\n                    placeholder='Select an api'\n                    optionFilterProp='children'\n                    onChange={onChange}\n                    defaultValue={selectedApiValue}\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >\n                    {\n                        options.map((option) => {\n                            return <Option value={option.value}>{option.name}</Option>;\n                        })}\n                </Select>\n            </div>\n        </div>\n\n        <div className='overviewContainer__body-body'>    \n        {pageVisitsState.isLoading && (\n            <>\n            <div style={{\n                display:'flex',\n                justifyContent:'center',\n                alignItems:\"center\"\n            }}>\n            <Spin\n            size='large'\n             />\n                </div>\n\n            </>\n        )}\n                {pageVisitsState.done && !(pageVisitsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '00px'\n                    }}>\n                        <Empty description={`No Visits for ${selectedApiValue}`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {pageVisitsState.done && pageVisitsState.data && pageVisitsState.data.length > 0 && (\n                    <>\n                        <Table\n                        pagination={{ defaultPageSize: 6}}\n                            style={{\n                            }}\n                            // expandable={{\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\n                            //   }}\n                            // bordered={true}\n                            size='small'\n                            // pagination={false}\n                            dataSource={pageVisitsState.data}\n                            tableLayout={'auto'}\n                            onHeaderRow={column => {\n                                return {\n                                    style: {\n                                        color: 'red !important'\n                                    }\n\n                                };\n                            }}\n                        >\n                \n\n                            <Column\n                                title=\"Name\"\n                                dataIndex=\"name\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n                                render={(text, record: any) => (\n                                    <>\n                                       <a href='##'>\n                                       <h4\n                                            onClick={() => {\n                                                history.push(`/admin/${selectedApiValue && selectedApiValue.toLowerCase()}/${record.itemId}`)\n                                            }}  \n                                            style={{\n                                                fontWeight: 400,\n                                                color: '#555',\n                                                textTransform:'uppercase',\n                                                cursor: 'pointer'\n                                            }}>\n                                            {text || `${selectedApiValue} Deleted`}\n                                        </h4>\n                                       </a>\n                                    </>\n                                )}\n                            />\n\n                            <Column\n                                title=\"Count\"\n                                dataIndex=\"visit\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n\n                        </Table>\n                    </>\n                )}\n\n        </div>\n        <div className=\"overviewContainer__body-footer\">\n            <h3>\n                <span>\n                    <CalendarOutlined />\n                </span>\n\n                            In the last month\n                     </h3>\n        </div>\n\n    </div>\n\n    )\n}\n\nexport default PageVisits\n","import React, { useEffect, useState } from 'react';\n\n// import components \nimport ApiVisits from \"./ApiVisits\";\nimport OrderOverView from \"./OrderOverView\";\nimport PlatformVisits from \"./PlatformVisits\";\nimport PageVisits from \"./PageVisits\";\n\n// import lib \nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\n\nimport {\n\tDeleteOutlined,\n\tFileAddOutlined,\n\tCheckCircleOutlined,\n\tFileImageFilled,\n\tFileImageOutlined,\n\tFileImageTwoTone,\n\tPlusOutlined,\n\tPlusCircleOutlined,\n\tCloseOutlined,\n\tCheckOutlined,\n\tInfoCircleOutlined,\n\tUserOutlined,\n\tCalendarOutlined,\n\tGoldOutlined,\n\tShoppingCartOutlined,\n\tTagOutlined\n} from '@ant-design/icons';\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n\ninterface Props { }\n\nconst Overview = (props: Props) => {\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\n\n\n\n\tuseEffect(() => {\n\n\t\tconst getTotalUserCount = async () => {\n\t\t\tawait handleGetTotalUserCountFetch({});\n\t\t}\n\n\t\tgetTotalUserCount();\n\t}, []);\n\n\n\t\n\tuseEffect(()=>{\n\t\tconst getProductVisitCount = async () => {\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\n\t\t\t\tparams: 'product'\n\t\t\t})\n\t\t}; \n\t\tgetProductVisitCount();\n\t},[])\n\n\n\n\tuseEffect(()=>{\n\t\tconst getCategoryVisitCount = async () => {\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\n\t\t\t\tparams: 'category'\n\t\t\t})\n\t\t}; \n\t\tgetCategoryVisitCount();\n\t},[])\n\n\n\n\n\n\n\treturn (\n\t\t<div className='overviewContainer'>\n\t\t\t{/* <div className=\"overviewContainer__header\">\n\n\t\t\t\t{totalUserCountState.done && totalUserCountState.data && (\n\t\t\t\t\t<>\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\n\t\t\t\t\t\t\t<UserOutlined />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t+ Users\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t{totalUserCountState.data['totalIndex'] || 0}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<CalendarOutlined />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\tIn the last month\n\t\t\t\t\t     </h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\n\t\t\t\t{analyticsProductVisitCountState.done && analyticsProductVisitCountState.data && (\n\t\t\t\t\t<>\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\n\t\t\t\t\t\t\t<UserOutlined />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t+ Products\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t{analyticsProductVisitCountState.data['totalIndex'] || 0}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<CalendarOutlined />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\tIn the last month\n\t\t\t\t\t     </h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\n\n\n\t\t\t\t{analyticsCategoryVisitCountState.done && analyticsCategoryVisitCountState.data && (\n\t\t\t\t\t<>\n\t\t\t\t\t<div className=\"overviewContainer__header-card\">\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\n\t\t\t\t\t\t\t<UserOutlined />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t+ Category\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t{analyticsCategoryVisitCountState.data['totalIndex'] || 0}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<CalendarOutlined />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\tIn the last month\n\t\t\t\t\t     </h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\n\n\t\t\t\t<div className=\"overviewContainer__header-card\">\n\t\t\t\t\t<div className=\"overviewContainer__header-card-body\">\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-iconbox'>\n\t\t\t\t\t\t\t<ShoppingCartOutlined />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='overviewContainer__header-card-body-info'>\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t+ Orders\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t8503\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"overviewContainer__header-card-footer\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<CalendarOutlined />\n\t\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t\t\tIn the last month\n\t\t\t\t\t     </h3>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\n\t\t\t</div>\n */}\n\n\t\t\t<div className=\"overviewContainer__body\">\n\t\t\t\t<PageVisits />\n\t\t\t\t<PlatformVisits />\n\t\t\t</div>\n\t\t\t<div className=\"overviewContainer__body\">\n\t\t\t</div>\n\t\t\t<OrderOverView />\n\t\t\t<ApiVisits />\n\t\t</div>\n\t);\n};\n\nexport default Overview;\n","import React from 'react';\nimport { Form, Input } from 'antd';\n\nconst { TextArea } = Input;\n\n\n\ninterface Props {\n    label?: string;\n    type?: string;\n    defaultValue?: string;\n    value?: string;\n    onChange?: any;\n    disabled?: boolean;\n    isError?: boolean;\n    errorString?: string;\n    name?: string;\n    rows?: number\n    placeholder?:any; \n}\n\nconst Demo = ({ label, type, defaultValue, value, \n    onChange, disabled, isError,\n     errorString, name, rows = 4,\n     placeholder\n     }: Props) => {\n    return (\n        <>\n            {label && (\n                <h3 className='inputFieldLabel'>\n                    {label}\n                </h3>\n            )}\n\n            <Form.Item\n                validateStatus={isError ? \"error\" : \"\"}\n                help={errorString}\n            // rules={[{ required: true }]}\n            >\n                <TextArea\n                    disabled={disabled}\n                    onChange={onChange}\n                    value={value}\n                    name={name}\n                    className='inputclassName'\n                    rows={rows} \n                    placeholder={placeholder}\n                    />\n\n            </Form.Item>\n        </>\n    );\n};\n\nexport default Demo; ","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\n\n// import libraries\nimport {\n  Upload,\n  Button,\n  Modal,\n  Tabs,\n  message,\n  notification,\n  Popconfirm,\n  Menu,\n  Dropdown,\n  Spin,\n} from 'antd';\nimport reqwest from 'reqwest';\nimport { Formik } from 'formik';\nimport moment from 'moment';\n// import * as Yup from 'yup';\n\nimport {\n  CheckOutlined,\n  ArrowUpOutlined,\n  CheckCircleOutlined,\n  EllipsisOutlined,\n  FileImageOutlined,\n  DeleteOutlined,\n  CloseOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport Empty from '../../components/Empty';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import configs\nimport config from '../../config.json';\n\nconst { Dragger } = Upload;\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Category Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  visible: boolean;\n  setvisible: (isVisible: any) => void;\n  setmyImages?: any;\n  setmyThumbnailImage?: any;\n  isModalOpenForThumbnail?: boolean;\n  isModalOpenForImages?: boolean;\n  myImages?: any;\n  myThumbnailImage?: any;\n  setMyGoddamnImages?: any;\n  myGoddamnImages?: any;\n}\n\nconst MediaLibrary = ({\n  visible,\n  setvisible,\n  setmyImages,\n  isModalOpenForImages,\n  isModalOpenForThumbnail,\n  setmyThumbnailImage,\n  myImages,\n  myThumbnailImage,\n  ...rest\n}: Props) => {\n  const [mediaLibTagActiveKey, setmediaLibTagActiveKey] = useState('2');\n  const [fileList, setfileList] = useState([]);\n  const [uploading, setuploading] = useState(false);\n  const [selectedimages, setselectedImages] = useState([]);\n  const [activeImageItem, setactiveImageItem] = useState(false);\n  const [updateMediaLibrary, handleUpdateMediaLibraryFetch] = useHandleFetch(\n    {},\n    'updateImageFromLibrary'\n  );\n  const [\n    imageListFromLibraryState,\n    handleImageListFromLibraryFetch,\n  ] = useHandleFetch({}, 'ImageListFromLibrary');\n  const [\n    deleteImageFromLibraryFetchState,\n    handleDeleteImageFromLibraryFetch,\n  ] = useHandleFetch({}, 'deleteImageFromLibrary');\n  const [localImageList, setLocalImageList] = useState([]);\n  const [isDoneOk, setisDoneOk] = useState(false);\n\n  const handleDeleteImageFromImageLibrary = async (id) => {\n    const deleteImageLibraryItemRes = await handleDeleteImageFromLibraryFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (\n      deleteImageLibraryItemRes &&\n      deleteImageLibraryItemRes.status === 'ok'\n    ) {\n      openSuccessNotification('Imaged Deleted');\n      const newImageList = localImageList.filter((item) => item.id !== id);\n      setLocalImageList(newImageList);\n    }\n  };\n\n  const getImageList = async () => {\n    const imageListRes = await handleImageListFromLibraryFetch({\n      urlOptions: {\n        params: {\n          limitNumber: 10000,\n          sortItem: 'added',\n          sortOrderValue: '-1',\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (imageListRes) {\n      // @ts-ignore\n      setLocalImageList(imageListRes);\n    }\n\n    // console.log('imageListRes', imageListRes);\n  };\n\n  useEffect(() => {\n    getImageList();\n  }, []);\n\n  const handleUpload = async () => {\n    const formData = new FormData();\n    fileList.forEach((file) => {\n      formData.append('images', file, file.name);\n    });\n\n    setuploading(true);\n\n    //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\n    // \tbody: formData\n    //   });\n\n    //   console.log('addImageToLibraryRes',addImageToLibraryRes)\n\n    // You can use any AJAX library you like\n    reqwest({\n      url: `${config.baseURL}/admin/api/image/add`,\n      method: 'post',\n      processData: false,\n      data: formData,\n      withCredentials: true,\n      success: (res) => {\n        console.log('successResOfMediaLib', res);\n        setfileList([]);\n        setuploading(false);\n        getImageList();\n        message.success('upload successfully.');\n\n        if (res && res.inserted && res.inserted[0]) {\n          setactiveImageItem({\n            cover: `${config['baseURL']}${\n              res.inserted[0].thumbnail && res.inserted[0].thumbnail\n            }`,\n            ...res.inserted[0],\n          });\n        }\n        setmediaLibTagActiveKey('2');\n\n        /* \n\t\tadded: \"2020-09-22T07:53:43.710Z\"\n\t\talt: \"\"\n\t\tcaption: \"\"\n\t\tcover: \"http://localhost:5000\\images\\library\\thumbnail\\24582-group-2497.jpg\"\n\t\tid: \"5f69ad8786d83f2becfe2d10\"\n\t\tlabels: []\n\t\tname: \"Group 2497.png\"\n\t\ttitle: \"\"\n\t\t\n\t\t*/\n      },\n      error: () => {\n        setuploading(false);\n        message.error('upload failed.');\n      },\n    });\n  };\n\n  const handleOk = (e: any) => {\n    if (isModalOpenForImages) {\n      setmyImages(selectedimages);\n      setisDoneOk(true);\n    } else {\n      console.log('');\n      console.log('selectedimages,,,', selectedimages[0]);\n      setmyImages(\n        selectedimages && selectedimages[0] ? [selectedimages[0]] : []\n      );\n      setisDoneOk(true);\n    }\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  useEffect(() => {\n    if (myImages && myImages.length > 0) setselectedImages([...myImages]);\n  }, [myImages]);\n\n  useEffect(() => {\n    if (isDoneOk && isModalOpenForImages && myImages) {\n      setselectedImages([...myImages]);\n    }\n  }, [myImages, isDoneOk]);\n\n  useEffect(() => {\n    if (isDoneOk) {\n      // console.log('myThumbnail', myThumbnailImage)\n      // setselectedImages([...myThumbnailImage]);\n    }\n  }, [myThumbnailImage, isDoneOk]);\n\n  const uploadProps = {\n    //  listType: 'picture',\n    multiple: true,\n    onRemove: (file) => {\n      setfileList((filelist) => {\n        const index = fileList.indexOf(file);\n        const newFileList = fileList.slice();\n        newFileList.splice(index, 1);\n        return newFileList;\n      });\n    },\n    beforeUpload: (file) => {\n      setfileList((filelist) => {\n        const xflelist = filelist;\n        return [...xflelist, file];\n      });\n      return false;\n    },\n    fileList,\n  };\n\n  const handleAddToSelectedList = (image, id) => {\n    if (selectedimages && selectedimages.length > 0) {\n      const isImageExist = selectedimages.find((image) => image.id === id);\n      if (!isImageExist) {\n        setselectedImages([image, ...selectedimages]);\n        setactiveImageItem(image);\n      } else {\n        const newselectedImages = selectedimages.filter(\n          (image) => image.id !== id\n        );\n        setselectedImages(newselectedImages);\n      }\n    } else {\n      setselectedImages([image, ...selectedimages]);\n      setactiveImageItem(image);\n    }\n  };\n\n  const getisSelectedImage = (id) => {\n    if (selectedimages && selectedimages.length > 0) {\n      const isImageExist = selectedimages.find((image) => image.id === id);\n      if (isImageExist) {\n        return true;\n      }\n      return false;\n    } else {\n      return false;\n    }\n  };\n\n  const handleUpdateSubmit = async (values, actions) => {\n    const updateImageLibraryItemRes = await handleUpdateMediaLibraryFetch({\n      body: {\n        id: values.id,\n        alt: values.alt,\n        title: values.title,\n        caption: values.caption,\n        labels: values.labels,\n      },\n    });\n\n    // @ts-ignore\n    if (\n      updateImageLibraryItemRes &&\n      updateImageLibraryItemRes.status === 'ok'\n    ) {\n      openSuccessNotification('Image Updated');\n\n      const positionInImageList = () => {\n        return localImageList.map((item) => item.id).indexOf(values.id);\n      };\n\n      const index = positionInImageList();\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, localImageList[index], {\n        ...updateImageLibraryItemRes,\n      });\n      const updateImageList = [\n        ...localImageList.slice(0, index),\n        updatedItem,\n        ...localImageList.slice(index + 1),\n      ];\n      setLocalImageList(updateImageList);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const getisUpdateSubmitButtonDisabled = (values, isValid) => {\n    // if(!values.alt || !values.title || !values.title || !values.caption || !isValid){\n    // \treturn true;\n    // }\n    if (!isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  // console.log('selectedimages', selectedimages)\n\n  const ImageItemMenu = (\n    handleDeleteImageFromImageLibrary,\n    id,\n    handleAddToSelectedList,\n    image\n  ) => {\n    return (\n      <Menu>\n        <Menu.Item\n          onClick={() => handleAddToSelectedList(image, id)}\n          key='1'\n          icon={<CheckOutlined />}\n        >\n          Select\n        </Menu.Item>\n\n        <Menu.Item\n          onClick={() => handleDeleteImageFromImageLibrary(id)}\n          key='1'\n          icon={<DeleteOutlined color='red' />}\n        >\n          Delete\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  console.log('imageListFromLibraryState', imageListFromLibraryState);\n  console.log('activeImageItem', activeImageItem);\n\n  return (\n    <>\n      <Modal\n        style={{\n          top: '40px',\n        }}\n        title='Media Library'\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        width={'80vw'}\n        bodyStyle={{\n          margin: '0',\n          padding: '0',\n        }}\n        okText='Done'\n      >\n        <div className='mediaLibraryBodyContainer'>\n          <div className='mediaLibraryBodyContainer-left'>\n            <Tabs\n              onChange={(value) => {\n                setmediaLibTagActiveKey(`${value}`);\n              }}\n              activeKey={mediaLibTagActiveKey}\n              type='card'\n              size='middle'\n            >\n              <TabPane tab='Upload New Media' key='1'>\n                <div className='mediaLibraryBodyContainer-left-header'>\n                  <div>\n                    <Dragger\n                      className='upload-list-inline'\n                      listType='picture'\n                      style={{\n                        background: '#fff',\n                        borderRadius: '8px',\n                      }}\n                      {...uploadProps}\n                    >\n                      <p className='ant-upload-drag-icon'>\n                        <FileImageOutlined />\n                      </p>\n                      <p className='ant-upload-text'>\n                        Click or drag file to this area to upload\n                      </p>\n                      <p className='ant-upload-hint'>\n                        Support for a single or bulk upload.\n                      </p>\n                    </Dragger>\n                  </div>\n                </div>\n\n                <Button\n                  className='btnPrimaryClassNameoutline'\n                  type='primary'\n                  onClick={handleUpload}\n                  disabled={fileList.length === 0}\n                  loading={uploading}\n                  icon={<ArrowUpOutlined />}\n                  style={{\n                    marginTop: '20px',\n                    marginBottom: '10px',\n                  }}\n                >\n                  Upload\n                </Button>\n              </TabPane>\n              <TabPane tab='Media Library' key='2'>\n                <>\n                  {myImages && myImages.lenght > 0 && (\n                    <>\n                      <h3 className='inputFieldLabel'>Selected Items</h3>\n                      <div className='mediaLibraryBodyContainer-selectedImages'>\n                        {imageListFromLibraryState.done &&\n                          myImages.length > 0 &&\n                          myImages.map((image) => {\n                            return (\n                              <div\n                                key={image.id}\n                                className='mediaLibraryBodyContainer-selectedImages-imageListContainer-item'\n                              >\n                                <div\n                                  onClick={() => {\n                                    handleAddToSelectedList(image, image.id);\n                                  }}\n                                  className='mediaLibraryBodyContainer-selectedImages-imageListContainer-item-menu'\n                                >\n                                  <CloseOutlined />\n                                </div>\n\n                                <div className='mediaLibraryBodyContainer-selectedImages-imgContainer'>\n                                  <img src={image.cover} alt='img' />\n                                </div>\n                              </div>\n                            );\n                          })}\n                      </div>\n                    </>\n                  )}\n                </>\n\n                <div className='mediaLibraryBodyContainer-left-imageListContainer'>\n                  {imageListFromLibraryState.done &&\n                    localImageList.length > 0 &&\n                    localImageList.map((image) => {\n                      return (\n                        <div\n                          key={image.id}\n                          className='mediaLibraryBodyContainer-left-imageListContainer-item'\n                        >\n                          {getisSelectedImage(image.id) ? (\n                            <div className='mediaLibraryBodyContainer-left-imageListContainer-item-icon'>\n                              <CheckOutlined />\n                            </div>\n                          ) : (\n                            ''\n                          )}\n\n                          <Dropdown\n                            overlay={() =>\n                              ImageItemMenu(\n                                handleDeleteImageFromImageLibrary,\n                                image.id,\n                                handleAddToSelectedList,\n                                image\n                              )\n                            }\n                            placement='bottomRight'\n                          >\n                            <div className='mediaLibraryBodyContainer-left-imageListContainer-item-menu'>\n                              <EllipsisOutlined />\n                            </div>\n                          </Dropdown>\n\n                          <img\n                            onClick={() => {\n                              handleAddToSelectedList(image, image.id);\n                            }}\n                            src={image.cover}\n                            alt='img'\n                          />\n                        </div>\n                      );\n                    })}\n\n                  {imageListFromLibraryState.done &&\n                    !(localImageList.length > 0) && (\n                      <div\n                        style={{\n                          display: 'flex',\n                          justifyContent: 'center',\n                          width: '100%',\n                        }}\n                      >\n                        <Empty title='No Image Found in the library' />\n                      </div>\n                    )}\n\n                  {imageListFromLibraryState.isLoading && (\n                    <div\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        width: '100%',\n                        margin: '100px 0 50px 0',\n                      }}\n                    >\n                      <Spin size='large' />\n                    </div>\n                  )}\n                </div>\n              </TabPane>\n            </Tabs>\n          </div>\n          <div className='mediaLibraryBodyContainer-right'>\n            {activeImageItem && (\n              <>\n                <Formik\n                  onSubmit={(values, actions) =>\n                    handleUpdateSubmit(values, actions)\n                  }\n                  validateOnBlur={false}\n                  enableReinitialize={true}\n                  initialValues={\n                    // @ts-ignore\n                    { ...activeImageItem }\n                  }\n                >\n                  {({\n                    handleChange,\n                    values,\n                    handleSubmit,\n                    errors,\n                    isValid,\n                    isSubmitting,\n                    touched,\n                    handleBlur,\n                    setFieldTouched,\n                    handleReset,\n                  }) => (\n                    <>\n                      <h4>Attachment Details</h4>\n                      <div className='mediaLibraryBodyContainer-right-ImageDetails'>\n                        <div className='mediaLibraryBodyContainer-right-ImageDetails-imageContainer'>\n                          <img src={activeImageItem['cover']} alt='img' />\n                        </div>\n                        <div className='mediaLibraryBodyContainer-right-ImageDetails-infoContainer'>\n                          <h5 className='imageLibnameText'>\n                            {activeImageItem['name']}\n                          </h5>\n                          <h5>\n                            {activeImageItem['added'] &&\n                              moment(activeImageItem['added']).format(\n                                'MMMM Do YYYY, h:mm a'\n                              )}\n                          </h5>\n                          {/* <h5>\n\t\t\t\t\t\t\t\t\t\t5000 X 500\n\t\t\t\t\t\t\t\t\t</h5> */}\n\n                          <Popconfirm\n                            onConfirm={() =>\n                              handleDeleteImageFromImageLibrary(\n                                activeImageItem['id']\n                              )\n                            }\n                            title='Are you sure？'\n                            okText='Yes'\n                            cancelText='No'\n                          >\n                            <h5 className='imageLibdeleteText'>\n                              Delete parmanently\n                            </h5>\n                          </Popconfirm>\n                        </div>\n                      </div>\n\n                      <Input\n                        label='Alternate Text'\n                        value={values.alt}\n                        name='alt'\n                        isError={\n                          (touched.alt && errors.alt) ||\n                          (!isSubmitting &&\n                            updateMediaLibrary.error['error']['alt'])\n                        }\n                        errorString={\n                          (touched.alt && errors.alt) ||\n                          (!isSubmitting &&\n                            updateMediaLibrary.error['error']['alt'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('alt');\n                        }}\n                      />\n\n                      <Input\n                        label='Title'\n                        value={values.title}\n                        name='title'\n                        isError={\n                          (touched.title && errors.title) ||\n                          (!isSubmitting &&\n                            updateMediaLibrary.error['error']['title'])\n                        }\n                        errorString={\n                          (touched.title && errors.title) ||\n                          (!isSubmitting &&\n                            updateMediaLibrary.error['error']['title'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('title');\n                        }}\n                      />\n\n                      <Input\n                        label='Caption'\n                        value={values.caption}\n                        name='caption'\n                        isError={\n                          (touched.caption && errors.caption) ||\n                          (!isSubmitting &&\n                            updateMediaLibrary.error['error']['caption'])\n                        }\n                        errorString={\n                          (touched.caption && errors.caption) ||\n                          (!isSubmitting &&\n                            updateMediaLibrary.error['error']['caption'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('caption');\n                        }}\n                      />\n\n                      <Button\n                        type='default'\n                        onClick={(e: any) => handleSubmit(e)}\n                        disabled={getisUpdateSubmitButtonDisabled(\n                          values,\n                          isValid\n                        )}\n                        loading={isSubmitting}\n                        style={\n                          {\n                            // marginTop: '20px'\n                          }\n                        }\n                      >\n                        Update\n                      </Button>\n                    </>\n                  )}\n                </Formik>\n              </>\n            )}\n\n            {!activeImageItem && (\n              <div\n                style={{\n                  height: '100%',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <h4\n                  style={{\n                    textAlign: 'center',\n                    fontSize: '13px',\n                    color: '#8888',\n                  }}\n                >\n                  Select an image to preview details\n                </h4>\n              </div>\n            )}\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default MediaLibrary;\n","import MediaLibrary from './MediaLibrary';\nexport default MediaLibrary;\n","// @ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport { Tag, Input, Tooltip } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nclass MetaTags extends React.Component {\n  state = {\n    tags: [],\n    inputVisible: false,\n    inputValue: '',\n    editInputIndex: -1,\n    editInputValue: '',\n  };\n\n  handleClose = (removedTag) => {\n    const { setTags, tags } = this.props;\n    const localTags = tags.filter((tag) => tag !== removedTag);\n    setTags(localTags);\n  };\n\n  showInput = () => {\n    this.setState({ inputVisible: true }, () => this.input.focus());\n  };\n\n  handleInputChange = (e) => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleInputConfirm = () => {\n    console.log('handleInputConfirm', this.props);\n    const { inputValue } = this.state;\n    let { tags, setTags } = this.props;\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\n      tags = [...tags, inputValue];\n    }\n    setTags(tags);\n    this.setState({\n      inputVisible: false,\n      inputValue: '',\n    });\n  };\n\n  handleEditInputChange = (e) => {\n    this.setState({ editInputValue: e.target.value });\n    console.log('tagValue', e.target.value);\n  };\n\n  handleEditInputConfirm = () => {\n    this.setState(({ editInputIndex, editInputValue }) => {\n      return {\n        editInputIndex: -1,\n        editInputValue: '',\n      };\n    });\n\n    const newTags = [...this.props.tags];\n    newTags[editInputIndex] = editInputValue;\n    this.props.setTags(newTags);\n  };\n\n  saveInputRef = (input) => {\n    this.input = input;\n  };\n\n  saveEditInputRef = (input) => {\n    this.editInput = input;\n  };\n\n  render() {\n    const {\n      inputVisible,\n      inputValue,\n      editInputIndex,\n      editInputValue,\n    } = this.state;\n    const { placeholder, tags } = this.props;\n\n    return (\n      <>\n        {tags &&\n          tags.length > 0 &&\n          tags.map((tag, index) => {\n            if (editInputIndex === index) {\n              return (\n                <Input\n                  ref={this.saveEditInputRef}\n                  key={tag}\n                  size='small'\n                  placeholder={placeholder}\n                  className='tag-input'\n                  value={editInputValue}\n                  onChange={this.handleEditInputChange}\n                  onBlur={this.handleEditInputConfirm}\n                  onPressEnter={this.handleEditInputConfirm}\n                />\n              );\n            }\n\n            const isLongTag = tag.length > 20;\n\n            const tagElem = (\n              <Tag\n                className='edit-tag'\n                key={tag}\n                closable={true}\n                onClose={() => this.handleClose(tag)}\n              >\n                <span\n                  onDoubleClick={(e) => {\n                    if (index !== 0) {\n                      this.setState(\n                        { editInputIndex: index, editInputValue: tag },\n                        () => {\n                          this.editInput.focus();\n                        }\n                      );\n                      e.preventDefault();\n                    }\n                  }}\n                >\n                  {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n                </span>\n              </Tag>\n            );\n            return isLongTag ? (\n              <Tooltip title={tag} key={tag}>\n                {tagElem}\n              </Tooltip>\n            ) : (\n              tagElem\n            );\n          })}\n        {inputVisible && (\n          <Input\n            style={{\n              margin: '10px 0',\n            }}\n            ref={this.saveInputRef}\n            type='text'\n            size='small'\n            className='tag-input'\n            value={inputValue}\n            onChange={this.handleInputChange}\n            onBlur={this.handleInputConfirm}\n            onPressEnter={this.handleInputConfirm}\n          />\n        )}\n        {!inputVisible && (\n          <Tag className='site-tag-plus edit-tag' onClick={this.showInput}>\n            <PlusOutlined /> New Value\n          </Tag>\n        )}\n      </>\n    );\n  }\n}\n\nexport default MetaTags;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Switch,\n  Select,\n  notification,\n  Modal,\n  Tooltip,\n  Upload,\n  message,\n  Button,\n  Spin,\n} from 'antd';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  FileImageFilled,\n  PlusOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  LoadingOutlined,\n} from '@ant-design/icons';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport MetaTags from './MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  //   name: Yup.string()\n  //     .label('Name')\n  //     .required('Name is required')\n  //     .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Category Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n  image: [],\n  url: '',\n  cover: '',\n  displayOrder: null,\n};\n\nconst { Option } = Select;\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  categoryList?: any;\n  setcategoryList?: any;\n  categoryDetailData?: any;\n  categoryList2?:any; \n}\n\nconst ModalChildComponent = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  categoryList,\n  setcategoryList,\n  categoryDetailData,\n  categoryList2\n}) => {\n  console.log('categoryList211',categoryList2)\n  const [addCategoryState, handleAddCategoryFetch] = useHandleFetch(\n    {},\n    'updateCategory'\n  );\n  const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch(\n    {},\n    'categoryDetail'\n  );\n\n  const [\n    updateCategoryIconState,\n    handleUpdateCategoryIconFetch,\n  ] = useHandleFetch({}, 'categoryUpdateIcon', 'form');\n\n  const [\n    updateCategoryThumbnailState,\n    handleUpdateCategoryThumbnailFetch,\n  ] = useHandleFetch({}, 'categoryUpdateThumbnail', 'form');\n\n\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [selectedParentId, setselectedParentId] = useState('');\n  const [imageFile, setImagefile] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [thumbnailImageFile, setThumbnailImagefile] = useState('');\n  const [thumbnailImageUrl, setThumbnailImageUrl] = useState('');\n  const [loadingThumnail, setLoadingThumbnail] = useState(false);\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\n\n  const [\n    attachImageToItemMultipleState,\n    handleAttachImageToItemMultipleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\n  const [\n    attachImageToItemSingleState,\n    handleAttachImageToItemSingleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\n  const [\n    detachImageFromItemMultipleState,\n    handleDetachImageFromItemMultipleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n  useEffect(() => {\n    const getProductDetail = async () => {\n      await handleCategoryDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: categoryDetailData.id,\n          },\n        },\n      });\n    };\n\n    getProductDetail();\n  }, [categoryDetailData]);\n\n  useEffect(() => {\n    if (\n      categoryDetailState.done &&\n      Object.keys(categoryDetailState).length > 0\n    ) {\n      const images = categoryDetailState.data.image;\n      let mahImages = [];\n\n      if (images && images.length > 0) {\n        mahImages = images;\n      }\n\n      if (\n        categoryDetailState.data.cover &&\n        categoryDetailState.data.cover['id']\n      ) {\n        const ixists = images.find(\n          (item) => item.id === categoryDetailState.data.cover['id']\n        );\n        if (!ixists) {\n          mahImages = [categoryDetailState.data.cover, ...mahImages];\n        }\n\n        setCoverImageId(categoryDetailState.data.cover['id']);\n      }\n\n      // @ts-ignore\n      setmyImages(mahImages);\n    }\n  }, [categoryDetailState.done]);\n\n  useEffect(() => {\n    console.log('thumnail', myImages);\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      console.log('thumnail2', myImages);\n\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  const handleDetachSingleImage = async (id) => {\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'category',\n          itemId: categoryDetailData.id,\n        },\n      },\n    });\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'category',\n          itemId: categoryDetailData.id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      openSuccessNotification('Set as thumbnail!');\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    const formData = new FormData();\n\n    formData.append('name', values.name?.trim());\n    formData.append('description', values.description);\n    formData.append('image', JSON.stringify(imagesIds));\n    formData.append('cover', coverImageId || imagesIds[0] ? imagesIds[0] : '');\n    formData.append('parent', selectedParentId);\n    formData.append('icon', imageFile);\n    formData.append('thumbnail', thumbnailImageFile);\n\n    console.log('categoryDetailData', categoryDetailData);\n\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const aboutToUpdatedImageIds = [];\n\n      if (imagesIds && imagesIds.length > 0) {\n        imagesIds.forEach((imageId) => {\n          if (categoryDetailData && categoryDetailData['image']) {\n            if (!categoryDetailData['image'].includes(imageId)) {\n              aboutToUpdatedImageIds.push(imageId);\n            }\n          }\n        });\n      }\n\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n        await handleAttachImageToItemMultipleFetch({\n          urlOptions: {\n            placeHolders: {\n              collection: 'category',\n              itemId: categoryDetailData.id,\n            },\n          },\n          body: {\n            image: aboutToUpdatedImageIds,\n          },\n        });\n      } else if (\n        aboutToUpdatedImageIds[0] &&\n        aboutToUpdatedImageIds.length < 1\n      ) {\n        await handleAttachImageToItemSingleFetch({\n          urlOptions: {\n            placeHolders: {\n              imageId: aboutToUpdatedImageIds[0].id,\n              collection: 'category',\n              itemId: categoryDetailData.id,\n            },\n          },\n        });\n      }\n    }\n\n    const addCategoryRes = await handleAddCategoryFetch({\n      urlOptions: {\n        placeHolders: {\n          id: categoryDetailData.id,\n        },\n      },\n      body: {\n        name: values.name?.trim(),\n        description: values.description,\n        displayOrder: values.displayOrder,\n        image: imagesIds,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        parent: selectedParentId,\n        icon: imageFile,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\n          name: values.bnName?.trim(),\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addCategoryRes && addCategoryRes.status === 'ok') {\n      openSuccessNotification('Category Updated!');\n      setAddNewCategoryVisible(false);\n      const positionInTag = () => {\n        return categoryList.map((item) => item.id).indexOf(values.id);\n      };\n\n      const getCover = (id) => {\n        if (!id || !myImages || !myImages[0]) {\n          return '';\n        } else {\n          if (myImages && myImages.length > 0) {\n            const item = myImages.find((item) => item.id === id);\n            if (item) {\n              return item.cover;\n            }\n          }\n        }\n      };\n\n      const index = positionInTag();\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, categoryList[index], {\n        name: addCategoryRes['name'] || '',\n        description: addCategoryRes['description'] || '',\n        id: categoryDetailData.id,\n        key: categoryDetailData['id'] || '',\n        // @ts-ignore\n        ...addCategoryRes,\n        cover: getCover(coverImageId),\n      });\n      const updateTagList = [\n        ...categoryList.slice(0, index),\n        updatedItem,\n        ...categoryList.slice(index + 1),\n      ];\n      setcategoryList(updateTagList);\n\n      actions.resetForm();\n      // @ts-ignore\n      setmyImages([]);\n      setCoverImageId('');\n      setselectedParentId('');\n      setisparentcategoryChecked(true);\n      setImageUrl('');\n      setThumbnailImageUrl('');\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addCategoryState['isLoading']) {\n      const error = addCategoryState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addCategoryState]);\n\n  const onSwitchChange = (checked: any) => {\n    setisparentcategoryChecked(checked);\n  };\n\n  const handleCancel = (e: any) => {\n    setTags([]);\n    setBnTags([]);\n    setAddNewCategoryVisible(false);\n    setImagefile('');\n    setCoverImageId('');\n    setselectedParentId('');\n    setmyImages(false);\n  };\n\n  const onChangeSelect = (value) => {\n    setselectedParentId(value);\n  };\n\n  function getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  function beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setImageUrl(imageUrl);\n      setImagefile(file);\n      const setNewIcon = async () => {\n        const formData = new FormData();\n        formData.append('icon', file);\n        // const addCategoryRes = await handleAddCategoryFetch({\n        // \tbody: formData,\n        // });\n        const res = await handleUpdateCategoryIconFetch({\n          urlOptions: {\n            placeHolders: {\n              id: categoryDetailData.id,\n            },\n          },\n          body: formData,\n        });\n\n        // @ts-ignore\n        if (res && res.status === 'ok') {\n          openSuccessNotification('Category Icon updated!');\n        } else {\n          openErrorNotification(\n            \"Couldn't update category icon, Something went wrong\"\n          );\n        }\n      };\n\n      setNewIcon();\n      setLoadingThumbnail(false);\n    });\n\n    return false;\n  }\n\n\n  function beforeThumbnailUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setThumbnailImageUrl(imageUrl)\n      setThumbnailImagefile(file)\n      const setNewIcon = async () => {\n        const formData = new FormData();\n        formData.append('thumbnail', file);\n        // const addCategoryRes = await handleAddCategoryFetch({\n        // \tbody: formData,\n        // });\n        const res = await handleUpdateCategoryThumbnailFetch({\n          urlOptions: {\n            placeHolders: {\n              id: categoryDetailData.id,\n            },\n          },\n          body: formData,\n        });\n\n        // @ts-ignore\n        if (res && res.status === 'ok') {\n          openSuccessNotification('Category Thumbnail updated!');\n        } else {\n          openErrorNotification(\n            \"Couldn't update category Thumbnail, Something went wrong\"\n          );\n        }\n      };\n\n      setNewIcon();\n      setLoadingThumbnail(false);\n    });\n\n    return false;\n  }\n\n\n\n  \n  useEffect(() => {\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const iconUrl = categoryDetailData.icon && categoryDetailData.icon;\n\n      setImageUrl(iconUrl);\n    }\n  }, []);\n\n\n  useEffect(() => {\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const thumbnailImageUrl = categoryDetailData.thumbnail && categoryDetailData.thumbnail;\n      setThumbnailImageUrl(thumbnailImageUrl);\n    }\n  }, []);\n\n\n  const uploadButton = (\n    <div>\n      {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\n      <div className='ant-upload-text'>Upload</div>\n    </div>\n  );\n\n  useEffect(() => {\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const metaTags =\n        categoryDetailData.metaTags && categoryDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        categoryDetailData.bn &&\n        categoryDetailData.bn['metaTags'] &&\n        categoryDetailData.bn['metaTags'].split(',');\n      setTags(metaTags || []);\n      setBnTags(bnMetaTags || []);\n    }\n  }, []);\n\n\n  return (\n    <>\n      <Formik\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        enableReinitialize={true}\n        initialValues={{\n          ...initialValues,\n          ...categoryDetailData,\n          ...(categoryDetailData &&\n            Object.keys(categoryDetailData).length > 0 && {\n              bnMetaTitle:\n                categoryDetailData['bn'] &&\n                categoryDetailData['bn'].metaTitle &&\n                categoryDetailData['bn'].metaTitle,\n              bnMetaDescription:\n                categoryDetailData['bn'] &&\n                categoryDetailData['bn'].metaDescription &&\n                categoryDetailData['bn'].metaDescription,\n              bnName:\n                categoryDetailData['bn'] &&\n                categoryDetailData['bn'].name &&\n                categoryDetailData['bn'].name,\n              bnDescription:\n                categoryDetailData['bn'] &&\n                categoryDetailData['bn'].description &&\n                categoryDetailData['bn'].description,\n            }),\n        }}\n      >\n        {({\n          handleChange,\n          values,\n          handleSubmit,\n          errors,\n          isValid,\n          isSubmitting,\n          touched,\n          handleBlur,\n          setFieldTouched,\n          handleReset,\n        }) => (\n          <>\n            <section className='addProductGridContainer'>\n              <div className='addProductGridContainer__left'>\n                <div className='addProductGridContainer__name'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Category Information *</h3>\n                    <div\n                      className={\n                        values.name && values.name.length > 2\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <Input\n                      label='Name *'\n                      value={values.name}\n                      placeHolder={'grocery,fashion'}\n                      name='name'\n                      isError={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['name'])\n                      }\n                      errorString={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['name'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('name');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Name'\n                      value={values.bnName}\n                      placeHolder={'মুদিখানা,ফ্যাশন'}\n                      name='bnName'\n                      isError={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['bnName'])\n                      }\n                      errorString={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['bnName'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnName');\n                      }}\n                    />\n\n                    <TextArea\n                      label='Description'\n                      value={values.description}\n                      placeholder={'This category...'}\n                      name='description'\n                      isError={\n                        (touched.description && errors.description) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['description'])\n                      }\n                      errorString={\n                        (touched.description && errors.description) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['description'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('description');\n                      }}\n                    />\n\n                    <TextArea\n                      label='BN Description'\n                      value={values.bnDescription}\n                      placeholder={'এই ক্যাটাগড়ি...'}\n                      name='bnDescription'\n                      isError={\n                        (touched.bnDescription && errors.bnDescription) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['bnDescription'])\n                      }\n                      errorString={\n                        (touched.bnDescription && errors.bnDescription) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['bnDescription'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnDescription');\n                      }}\n                    />\n\n                    <Input\n                      label='Display Order'\n                      value={values.displayOrder}\n                      placeHolder={'1,3,7'}\n                      name='displayOrder'\n                      type='number'\n                      isError={\n                        (touched.displayOrder && errors.displayOrder) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['displayOrder'])\n                      }\n                      errorString={\n                        (touched.displayOrder && errors.displayOrder) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['displayOrder'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('displayOrder');\n                      }}\n                    />\n\n                    <div\n                      style={{\n                        marginTop: '25px',\n                      }}\n                    ></div>\n\n                    <div className='switchLabelContainer'>\n                      <Switch\n                        checked={isparentCategoryChecked}\n                        defaultChecked\n                        onChange={onSwitchChange}\n                      />\n                      <div className='switchLabelContainer-textContainer'>\n                        <h5>Top level Category</h5>\n                        <h5 className='switchLabelContainer-desc'>\n                          Disable to select a Parent Category\n                        </h5>\n                      </div>\n                    </div>\n\n                    {!isparentCategoryChecked && (\n                      <>\n                        <h3 className='inputFieldLabel'>Parent Category</h3>\n                        <Select\n                          showSearch\n                          style={{ width: 300 }}\n                          placeholder='Select a Parent Category'\n                          optionFilterProp='children'\n                          onChange={onChangeSelect}\n                          // onFocus={onFocus}\n                          // onBlur={onBlur}\n                          // onSearch={onSearch}\n                          filterOption={(input, option: any) =>\n                            option.children\n                              .toLowerCase()\n                              .indexOf(input.toLowerCase()) >= 0\n                          }\n                        >\n                          {categoryList2 && categoryList2.length > 0 &&\n                            categoryList2.map((category) => {\n                              return (\n                                <Option value={category.id}>\n                                  {category.name}\n                                </Option>\n                              );\n                            })}\n                        </Select>\n                      </>\n                    )}\n\n                    <div\n                      style={{\n                        marginTop: '20px',\n                      }}\n                    />\n\n                    <div className='addproductSection-left-header'>\n                      <h3 className='inputFieldLabel'>Icon </h3>\n                      <Tooltip\n                        placement='left'\n                        title={'Add Icon image for this category'}\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n                    </div>\n\n                    <Upload\n                      style={{\n                        borderRadius: '8px',\n                      }}\n                      name='avatar'\n                      listType='picture-card'\n                      className='avatar-uploader'\n                      showUploadList={false}\n                      beforeUpload={beforeUpload}\n                      multiple={false}\n                    >\n                      {imageUrl ? (\n                        <img\n                          src={imageUrl}\n                          alt='avatar'\n                          style={{ width: '100%' }}\n                        />\n                      ) : (\n                        uploadButton\n                      )}\n                    </Upload>\n\n\n                    \n                    <div\n                      style={{\n                        marginTop: '20px',\n                      }}\n                    />\n\n                    <div className='addproductSection-left-header'>\n                      <h3 className='inputFieldLabel'>Thumbnail</h3>\n                      <Tooltip\n                        placement='left'\n                        title={'Add thumbnail image for this category'}\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n                    </div>\n\n                    <Upload\n                      style={{\n                        borderRadius: '8px',\n                      }}\n                      name='avatar'\n                      listType='picture-card'\n                      className='avatar-uploader'\n                      showUploadList={false}\n                      beforeUpload={beforeThumbnailUpload}\n                      multiple={false}\n                    >\n                      {thumbnailImageUrl ? (\n                        <img\n                          src={thumbnailImageUrl}\n                          alt='avatar'\n                          style={{ width: '100%' }}\n                        />\n                      ) : (\n                        uploadButton\n                      )}\n                    </Upload>\n\n\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__image'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Image</h3>\n\n                    <Tooltip\n                      placement='left'\n                      title={\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\n                      }\n                    >\n                      <a href='###'>\n                        <InfoCircleOutlined />\n                      </a>\n                    </Tooltip>\n                  </div>\n\n                  <div\n                    style={{\n                      padding: '10px',\n                    }}\n                    className='aboutToUploadImagesContainer'\n                  >\n                    {categoryDetailState.isLoading && (\n                      <div\n                        style={{\n                          padding: '20px 0',\n                        }}\n                      >\n                        <Spin />\n                      </div>\n                    )}\n                    {categoryDetailState.done && (\n                      <>\n                        {myImages &&\n                          // @ts-ignore\n                          myImages.length > 0 &&\n                          myImages.map((image, index) => {\n                            return (\n                              <div className='aboutToUploadImagesContainer__item'>\n                                <div\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\n                                  onClick={() => {\n                                    setCoverImageId(image.id);\n                                    handleSetImageAsThumnail(image);\n                                  }}\n                                >\n                                  <img src={image.cover} alt={image.alt} />\n                                </div>\n\n                                <span\n                                  onClick={() => {\n                                    handleImagesDelete(image.id);\n                                    handleDetachSingleImage(image.id);\n                                  }}\n                                  className='aboutToUploadImagesContainer__item-remove'\n                                >\n                                  <CloseOutlined />\n                                </span>\n\n                                {coverImageId === image.id ? (\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                  </span>\n                                ) : (\n                                  !coverImageId &&\n                                  index === 0 && (\n                                    <span className='aboutToUploadImagesContainer__item-cover'>\n                                      <CheckOutlined />\n                                    </span>\n                                  )\n                                )}\n                              </div>\n                            );\n                          })}\n\n                        <Tooltip title={'Attach images'}>\n                          <div\n                            onClick={() => {\n                              setvisible(true);\n                              setisModalOpenForImages(true);\n                              setisModalOpenForThumbnail(false);\n                            }}\n                            className='aboutToUploadImagesContainer__uploadItem'\n                          >\n                            {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                            <FileImageFilled />\n                            {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                              <PlusOutlined />\n                            </span>\n                          </div>\n                        </Tooltip>\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className='addProductGridContainer__right'>\n                <div className='addProductGridContainer__category'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Meta Tags</h3>\n\n                      <Tooltip\n                        placement='left'\n                        title={\n                          \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                        }\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n\n                      {/* <Tooltip\n                        color='red'\n                        visible={\n                          addCategoryState.error['error']['category'] &&\n                          !(categoryids.length > 0)\n                        }\n                        placement='left'\n                        title={'Select at least one category'}\n                      >\n                        <div\n                          className={\n                            !(categoryids.length > 0) &&\n                            !addCategoryState.error['error']['category']\n                              ? 'checkicon'\n                              : addCategoryState.error['error']['category']\n                              ? 'checkicon-error'\n                              : 'checkicon-active'\n                          }\n                        >\n                          <CheckCircleOutlined />\n                        </div>\n                      </Tooltip> */}\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Input\n                        label='Meta title'\n                        value={values.metaTitle}\n                        placeHolder={'...'}\n                        name='metaTitle'\n                        isError={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['metaTitle'])\n                        }\n                        errorString={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['metaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaTitle');\n                        }}\n                      />\n\n                      <Input\n                        label='BN Meta title'\n                        value={values.bnMetaTitle}\n                        placeHolder={'...'}\n                        name='bnMetaTitle'\n                        isError={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['bnMetaTitle'])\n                        }\n                        errorString={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['bnMetaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaTitle');\n                        }}\n                      />\n\n                      <TextArea\n                        label='Meta description'\n                        value={values.metaDescription}\n                        placeholder={'meta...'}\n                        name='metaDescription'\n                        isError={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['metaDescription'])\n                        }\n                        errorString={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['metaDescription'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaDescription');\n                        }}\n                      />\n\n                      <TextArea\n                        label='BN Meta Description'\n                        value={values.bnMetaDescription}\n                        placeholder={'এইয় মেট...'}\n                        name='bnMetaDescription'\n                        isError={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        errorString={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaDescription');\n                        }}\n                      />\n\n                      <h3 className='inputFieldLabel'>Meta Tags </h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setTags}\n                        tags={tags}\n                      />\n\n                      <div\n                        style={{\n                          marginTop: '15px',\n                        }}\n                      ></div>\n\n                      <h3 className='inputFieldLabel'>BN Meta Tags </h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setBnTags}\n                        tags={bnTags}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            <div\n              style={{\n                padding: '15px',\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  color: '#555',\n                  marginRight: '10px',\n                }}\n                className='btnPrimaryClassNameoutline-cancle'\n                onClick={() => setAddNewCategoryVisible(false)}\n                type='default'\n              >\n                Cancel\n              </Button>\n\n              <Button\n                className='btnPrimaryClassNameoutline'\n                onClick={handleSubmit}\n                loading={addCategoryState.isLoading}\n                type='link'\n                icon={<CheckOutlined />}\n              >\n                Update\n              </Button>\n            </div>\n\n            <MediaLibrary\n              setvisible={setvisible}\n              visible={visible}\n              setmyImages={setmyImages}\n              myImages={myImages}\n              setmyThumbnailImage={setmyThumbnailImage}\n              isModalOpenForThumbnail={isModalOpenForThumbnail}\n              isModalOpenForImages={isModalOpenForImages}\n            />\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nconst AddNewCategory = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  categoryList,\n  setcategoryList,\n  categoryDetailData,\n  categoryList2\n}: Props) => {\n  const handleCancel = () => {\n    setAddNewCategoryVisible(false);\n  };\n  return (\n    <Modal\n      destroyOnClose={true}\n      style={{\n        top: '40px',\n      }}\n      bodyStyle={{\n        margin: 0,\n        padding: 0,\n      }}\n      title='Edit Category'\n      visible={addNewCategoryVisible}\n      onCancel={handleCancel}\n      footer={false}\n      okText='Update'\n      width={'70vw'}\n      okButtonProps={{\n        // loading: isSubmitting,\n        htmlType: 'submit',\n      }}\n    >\n      <ModalChildComponent\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n        categoryList={categoryList}\n        setcategoryList={setcategoryList}\n        categoryDetailData={categoryDetailData}\n        categoryList2={categoryList2}\n      />\n    </Modal>\n  );\n};\n\nexport default AddNewCategory;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst DataTable = (props: any) => (\n\t<ContentLoader\n\t\tspeed={0.5}\n\t\twidth={1300}\n\t\theight={400}\n\t\tviewBox='0 0 1300 400'\n\t\tbackgroundColor='#f3f3f3'\n\t\tforegroundColor='#ecebeb'\n\t\t{...props}\n\t>\n\t\t<rect x='27' y='139' rx='4' ry='4' width='20' height='20' />\n\t\t<rect x='67' y='140' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='188' y='141' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='402' y='140' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='523' y='141' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='731' y='139' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='852' y='138' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1424' y='137' rx='10' ry='10' width='68' height='19' />\n\t\t<rect x='26' y='196' rx='4' ry='4' width='20' height='20' />\n\t\t<rect x='66' y='197' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='187' y='198' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='401' y='197' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='522' y='198' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='730' y='196' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='851' y='195' rx='10' ry='10' width='85' height='19' />\n\t\t<circle cx='1456' cy='203' r='12' />\n\t\t<rect x='26' y='258' rx='4' ry='4' width='20' height='20' />\n\t\t<rect x='66' y='259' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='187' y='260' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='401' y='259' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='522' y='260' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='730' y='258' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='851' y='257' rx='10' ry='10' width='85' height='19' />\n\t\t<circle cx='1456' cy='265' r='12' />\n\t\t<rect x='26' y='316' rx='4' ry='4' width='20' height='20' />\n\t\t<rect x='66' y='317' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='187' y='318' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='401' y='317' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='522' y='318' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='730' y='316' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='851' y='315' rx='10' ry='10' width='85' height='19' />\n\t\t<circle cx='1456' cy='323' r='12' />\n\t\t<rect x='26' y='379' rx='4' ry='4' width='20' height='20' />\n\t\t<rect x='66' y='380' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='187' y='381' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='401' y='380' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='522' y='381' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='730' y='379' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='851' y='378' rx='10' ry='10' width='85' height='19' />\n\t\t<circle cx='1456' cy='386' r='12' />\n\t\t<rect x='978' y='138' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='977' y='195' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='977' y='257' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='977' y='315' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='977' y='378' rx='10' ry='10' width='169' height='19' />\n\t\t<rect x='1183' y='139' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1182' y='196' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1182' y='258' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1182' y='316' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1182' y='379' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1305' y='137' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1304' y='194' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1304' y='256' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1304' y='314' rx='10' ry='10' width='85' height='19' />\n\t\t<rect x='1304' y='377' rx='10' ry='10' width='85' height='19' />\n\t\t<circle cx='37' cy='97' r='11' />\n\t\t<rect x='26' y='23' rx='5' ry='5' width='153' height='30' />\n\t\t<circle cx='1316' cy='88' r='11' />\n\t\t<rect x='1337' y='94' rx='0' ry='0' width='134' height='3' />\n\t\t<circle cx='77' cy='96' r='11' />\n\t</ContentLoader>\n);\n\nDataTable.metadata = {\n\tname: 'Mohd Arif Un',\n\tgithub: 'arif-un',\n\tdescription: 'Data Table skeleton',\n\tfilename: 'DataTable'\n};\n\nexport default DataTable;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  Table,\n  notification,\n  Space,\n  Tag,\n  Button,\n  Input,\n  Tooltip,\n  Popconfirm,\n} from \"antd\";\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n} from \"@ant-design/icons\";\n\nimport { AddNewCategory, QuickEdit } from \"../category\";\nimport CategoryNewQuickEdit from \"./CategoryNewQuickEdit\";\n\n/// import hooks\nimport { useFetch, useHandleFetch } from \"../../hooks\";\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport Empty from \"../../components/Empty\";\n\n// import state\nimport { isAccess } from \"../../utils\";\nimport { connect } from \"react-redux\";\nimport { setNestedObjectValues } from \"formik\";\n\nconst { Column } = Table;\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || \"Category Created\",\n    description: \"\",\n    icon: <CheckCircleOutlined style={{ color: \"rgba(0, 128, 0, 0.493)\" }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || \"Something Went Wrong\",\n    description: \"\",\n    icon: <CheckCircleOutlined style={{ color: \"rgb(241, 67, 67)\" }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setcategoryList?: any;\n  history?: any;\n  roles?: any;\n  data2?: any;\n}\n\nconst MyTable = ({\n  data,\n  setcategoryList,\n  history,\n  roles,\n  data2,\n}: myTableProps) => {\n  console.log(\"categoryList22222\", data2);\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch(\n    {},\n    \"deleteCategory\"\n  );\n  // console.log('activeCategoryForEdit',activeCategoryForEdit);\n\n  const handleDeleteCategory = async (id) => {\n    const deleteCategoryRes = await handleDeleteCategoryFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteCategoryRes && deleteCategoryRes.status === \"ok\") {\n      openSuccessNotification(\"Deleted Category\");\n      const newCategoryList = data.filter((item) => item.id !== id);\n      setcategoryList(newCategoryList);\n    }\n  };\n\n  const getCover = (record: any) => {\n    if (record.cover) {\n      return record.cover;\n    } else if (!record.cover && record.icon) {\n      return record.icon;\n    } else return \"\";\n  };\n\n  console.log(\"catshit\", data2);\n  return (\n    <>\n      <Table\n        style={{\n          paddingTop: \"10px\",\n          borderRadius: \"5px !important\",\n          overflow: \"hidden\",\n          boxShadow:\n            \"0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)\",\n        }}\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size=\"small\"\n        // pagination={false}\n        dataSource={data}\n        tableLayout={\"auto\"}\n        onHeaderRow={(column) => {\n          return {\n            style: {\n              color: \"red !important\",\n            },\n          };\n        }}\n      >\n        <Column\n          title=\"\"\n          dataIndex=\"cover\"\n          key=\"id\"\n          width={\"80px\"}\n          className=\"classnameofthecolumn\"\n          render={(cover, record: any) => (\n            <>\n              <div\n                className=\"listCoverImage\"\n                onClick={() => {\n                  history.push(`/admin/category/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n              >\n                <img src={getCover(record)} alt=\"\" />\n              </div>\n            </>\n          )}\n        />\n        <Column\n          title=\"Name\"\n          dataIndex=\"name\"\n          key=\"id\"\n          className=\"classnameofthecolumn\"\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/category/${record.id}`);\n                  // setcategoryDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: \"#555\",\n                  cursor: \"pointer\",\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title=\"Sub Cateogory\"\n          dataIndex=\"subCount\"\n          key=\"id\"\n          className=\"classnameofthecolumn\"\n        />\n\n        <Column\n          title=\"Product\"\n          dataIndex=\"productCount\"\n          key=\"id\"\n          className=\"classnameofthecolumn\"\n        />\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n\n        {isAccess(\"postCatalogue\", roles) && (\n          <Column\n            className=\"classnameofthecolumn\"\n            title=\"\"\n            key=\"action\"\n            align=\"right\"\n            render={(text, record: any) => (\n              <Space size=\"middle\">\n                <a href=\"##\">\n                  <Tooltip placement=\"top\" title=\"Edit Category\">\n                    <span\n                      className=\"iconSize\"\n                      onClick={() => {\n                        setvisible(true);\n                        setactiveCategoryForEdit(record);\n                      }}\n                    >\n                      <EditOutlined />\n                    </span>\n                  </Tooltip>\n                </a>\n                <Popconfirm\n                  onConfirm={() => handleDeleteCategory(record.id)}\n                  title=\"Are you sure？\"\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <span className=\"iconSize iconSize-danger\">\n                    <DeleteOutlined />\n                  </span>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        )}\n      </Table>\n\n      {activeCategoryForEdit && (\n        <CategoryNewQuickEdit\n          categoryDetailData={activeCategoryForEdit}\n          setcategoryList={setcategoryList}\n          categoryList={data}\n          setAddNewCategoryVisible={setvisible}\n          addNewCategoryVisible={visible}\n          categoryList2={data2}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  history: any;\n  roles?: any;\n}\n\nconst CategoryList = ({ history, roles }: Props) => {\n  const [categoryState, handleCategoryListFetch] = useHandleFetch(\n    {},\n    \"categoryList\"\n  );\n  const [categoryList, setcategoryList] = useState([]);\n  const [categoryList2, setcategoryList2] = useState([]);\n\n  useEffect(() => {\n    const setCategories = async () => {\n      const categories = await handleCategoryListFetch({\n        urlOptions: {\n          params: {\n            isSubCategory: true,\n            productCountValue: true,\n            sortItem: \"added\",\n            sortOrderValue: \"-1\",\n            limitNumber: 5000000,\n          },\n        },\n      });\n      // @ts-ignore\n      setcategoryList(categories);\n      // @ts-ignore\n      setcategoryList2(categories);\n    };\n    setCategories();\n  }, []);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  // console.log('categoryState',categoryState);\n\n  const handleSearch = (value) => {\n    if (categoryState.data.length > 0) {\n      const newCategoryList = categoryState.data.filter((item) => {\n        if (item.name.toLowerCase().includes(value.toLowerCase())) {\n          return true;\n        }\n        if (\n          item.subCategory &&\n          item.subCategory.length > 0 &&\n          item.subCategory[0] &&\n          item.subCategory[0][\"name\"]\n            ?.toLowerCase()\n            .includes(value?.toLowerCase())\n        ) {\n          return true;\n        }\n        return false;\n      });\n      setcategoryList(newCategoryList);\n    }\n  };\n\n  console.log(\"categoryList22\", categoryList2);\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className=\"categoryListContainer\">\n        <div className=\"categoryListContainer__header\">\n          <div className=\"categoryListContainer__header-searchBar\">\n            <h2 className=\"categoryListContainer__header-title\">Categories</h2>\n\n            <Search\n              enterButton={false}\n              className=\"searchbarClassName\"\n              placeholder=\"search categories..\"\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n\n          {isAccess(\"postCatalogue\", roles) && (\n            <Button\n              // type=\"primary\"\n              className=\"btnPrimaryClassNameoutline\"\n              icon={<PlusOutlined />}\n              onClick={() => {\n                setAddNewCategoryVisible(true);\n              }}\n            >\n              Add New\n            </Button>\n          )}\n        </div>\n\n        <div className=\"categoryListContainer__afterHeader\">\n          {/* <Search\n              placeholder=\"search categories..\"\n              size=\"large\"\n              onSearch={value => console.log(value)}\n              style={{ width: 300 }}\n            /> */}\n        </div>\n\n        <div className=\"categoryListContainer__categoryList\">\n          {categoryState.done && categoryList.length > 0 && (\n            <MyTable\n              roles={roles}\n              history={history}\n              setcategoryList={setcategoryList}\n              data={categoryList}\n              data2={categoryList2}\n            />\n          )}\n          {categoryState.isLoading && <DataTableSkeleton />}\n\n          {categoryState.done && !(categoryList.length > 0) && (\n            <div\n              style={{\n                marginTop: \"50px\",\n              }}\n            >\n              <Empty title=\"No Category found\" />\n            </div>\n          )}\n        </div>\n      </div>\n\n      {categoryState.done && (\n        <AddNewCategory\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          categoryList={categoryList}\n          setcategoryList={setcategoryList}\n          categoryList2={categoryList2}\n        />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(withRouter(CategoryList));\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Switch,\n  Select,\n  notification,\n  Modal,\n  Tooltip,\n  Upload,\n  message,\n} from 'antd';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  FileImageFilled,\n  PlusOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  LoadingOutlined,\n} from '@ant-design/icons';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport MetaTags from './MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Category Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n  image: [],\n  url: '',\n  cover: '',\n  displayOrder: null,\n};\n\nconst { Option } = Select;\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  categoryList?: any;\n  setcategoryList?: any;\n  categoryList2?:any; \n}\n\nconst AddNewCategory = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  categoryList,\n  setcategoryList,\n  categoryList2\n}: Props) => {\n  const [addCategoryState, handleAddCategoryFetch] = useHandleFetch(\n    {},\n    'addCategory',\n    'form'\n  );\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [selectedParentId, setselectedParentId] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [thumbnailImageUrl, setThumbnailImageUrl] = useState('');\n  const [loadingThumnail, setLoadingThumbnail] = useState(false);\n  const [imageFile, setImagefile] = useState('');\n  const [thumbnailImageFile, setThumbnailImagefile] = useState('');\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    const formData = new FormData();\n\n    const bn = {\n      metaTitle: values.bnMetaTitle,\n      metaDescription: values.bnMetaDescription,\n      metaTags: bnTags.join(','),\n      name: values.bnName?.trim(),\n      description: values.bnDescription,\n    };\n\n    formData.append('name', values.name?.trim());\n    formData.append('description', values.description);\n    formData.append('image', JSON.stringify(imagesIds));\n    formData.append('cover', coverImageId || imagesIds[0] ? imagesIds[0] : '');\n    formData.append('parent', selectedParentId);\n    formData.append('icon', imageFile);\n    formData.append('thumbnail', thumbnailImageFile);\n    formData.append('metaTitle', values.metaTitle);\n    formData.append('displayOrder', values.displayOrder);\n    formData.append('metaDescription', values.metaDescription);\n    formData.append('metaTags', tags);\n\n    const bnData = JSON.stringify(bn);\n    const bnFormData = new FormData();\n    bnFormData.append('bn', bnData);\n\n    formData.append('bn', bnFormData.get('bn'));\n\n    console.log('addcategoryREsBody', {\n      ...formData,\n      // ...bnFormData\n    });\n\n    const addCategoryRes = await handleAddCategoryFetch({\n      body: formData,\n    });\n\n    // @ts-ignore\n    if (addCategoryRes && addCategoryRes.status === 'ok') {\n      openSuccessNotification('Category Created!');\n      setAddNewCategoryVisible(false);\n\n      setcategoryList([\n        {\n          id: addCategoryRes['_id'] || '',\n          key: addCategoryRes['_id'] || '',\n          name: addCategoryRes['name'] || '',\n          description: addCategoryRes['description'] || '',\n          cover: addCategoryRes['cover'] || '',\n          // @ts-ignore\n          ...addCategoryRes,\n        },\n        ...categoryList,\n      ]);\n\n      actions.resetForm();\n      // @ts-ignore\n      setmyImages([]);\n      setCoverImageId('');\n      setselectedParentId('');\n      setisparentcategoryChecked(true);\n      setImageUrl('');\n      setThumbnailImageUrl('');\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  console.log('addCategoryState', addCategoryState);\n\n  useEffect(() => {\n    if (!addCategoryState['isLoading']) {\n      const error = addCategoryState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addCategoryState]);\n\n  const onSwitchChange = (checked: any) => {\n    setisparentcategoryChecked(checked);\n  };\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleThumbnailImageDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myThumbnailImage &&\n      myThumbnailImage.filter((image) => {\n        return image.id !== id;\n      });\n\n    if (newImages.length > 0) {\n      setmyThumbnailImage(newImages);\n    } else setmyThumbnailImage(false);\n  };\n\n  const onChangeSelect = (value) => {\n    setselectedParentId(value);\n  };\n\n  function getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  function beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setImageUrl(imageUrl);\n      setImagefile(file);\n      setLoadingThumbnail(false);\n    });\n\n    return false;\n  }\n\n  function beforeThumbnailUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setThumbnailImageUrl(imageUrl);\n      setThumbnailImagefile(file); \n      setLoadingThumbnail(false);\n    });\n\n    return false;\n  }\n\n\n  \n\n  const uploadButton = (\n    <div>\n      {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\n      <div className='ant-upload-text'>Upload</div>\n    </div>\n  );\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Add New Category'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n            }}\n          >\n            <Input\n              label='Name *'\n              value={values.name}\n              placeHolder={''}\n              name='name'\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addCategoryState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addCategoryState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='BN Name'\n              value={values.bnName}\n              placeHolder={''}\n              name='bnName'\n              isError={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addCategoryState.error['error']['bnName'])\n              }\n              errorString={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addCategoryState.error['error']['bnName'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnName');\n              }}\n            />\n\n            <TextArea\n              label='Description'\n              value={values.description}\n              placeholder={'This category...'}\n              name='description'\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n\n            <TextArea\n              label='BN Description'\n              value={values.bnDescription}\n              placeholder={'এই ক্যাটাগড়ি...'}\n              name='bnDescription'\n              isError={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['bnDescription'])\n              }\n              errorString={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['bnDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnDescription');\n              }}\n            />\n\n            <Input\n              label='Display Order'\n              value={values.displayOrder}\n              placeHolder={'1,3,7'}\n              name='displayOrder'\n              type='number'\n              isError={\n                (touched.displayOrder && errors.displayOrder) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['displayOrder'])\n              }\n              errorString={\n                (touched.displayOrder && errors.displayOrder) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['displayOrder'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('displayOrder');\n              }}\n            />\n\n            <div\n              style={{\n                marginTop: '25px',\n              }}\n            ></div>\n\n            <div className='switchLabelContainer'>\n              <Switch\n                checked={isparentCategoryChecked}\n                defaultChecked\n                onChange={onSwitchChange}\n              />\n              <div className='switchLabelContainer-textContainer'>\n                <h5>Top level Category</h5>\n                <h5 className='switchLabelContainer-desc'>\n                  Disable to select a Parent Category\n                </h5>\n              </div>\n            </div>\n\n            {!isparentCategoryChecked && (\n              <>\n                <h3 className='inputFieldLabel'>Parent Category</h3>\n                <Select\n                  showSearch\n                  style={{ width: 300 }}\n                  placeholder='Select a Parent Category'\n                  optionFilterProp='children'\n                  onChange={onChangeSelect}\n                  // onFocus={onFocus}\n                  // onBlur={onBlur}\n                  // onSearch={onSearch}\n                  filterOption={(input, option: any) =>\n                    option.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  {categoryList2.length > 0 &&\n                    categoryList2.map((category) => {\n                      return (\n                        <Option value={category.id}>{category.name}</Option>\n                      );\n                    })}\n                </Select>\n              </>\n            )}\n\n            <div\n              style={{\n                marginTop: '20px',\n              }}\n            />\n\n            <div className='addproductSection-left-header'>\n              <h3 className='inputFieldLabel'>Icon </h3>\n              <Tooltip\n                placement='left'\n                title={'Add Icon image for this category'}\n              >\n                <a href='###'>\n                  <InfoCircleOutlined />\n                </a>\n              </Tooltip>\n            </div>\n\n            <Upload\n              style={{\n                borderRadius: '8px',\n              }}\n              name='avatar'\n              listType='picture-card'\n              className='avatar-uploader'\n              showUploadList={false}\n              beforeUpload={beforeUpload}\n              multiple={false}\n            >\n              {imageUrl ? (\n                <img src={imageUrl} alt='avatar' style={{ width: '100%' }} />\n              ) : (\n                uploadButton\n              )}\n            </Upload>\n\n            <div\n              style={{\n                marginTop: '20px',\n              }}\n            />\n            <div className='addproductSection-left-header'>\n              <h3 className='inputFieldLabel'>Thumbnail</h3>\n              <Tooltip\n                placement='left'\n                title={'Add thumbnail image for this category'}\n              >\n                <a href='###'>\n                  <InfoCircleOutlined />\n                </a>\n              </Tooltip>\n            </div>\n\n            <Upload\n              style={{\n                borderRadius: '8px',\n              }}\n              name='avatar'\n              listType='picture-card'\n              className='avatar-uploader'\n              showUploadList={false}\n              beforeUpload={beforeThumbnailUpload}\n              multiple={false}\n            >\n              {thumbnailImageUrl ? (\n                <img src={thumbnailImageUrl} alt='avatar' style={{ width: '100%' }} />\n              ) : (\n                uploadButton\n              )}\n            </Upload>\n\n            <div\n              style={{\n                marginTop: '10px',\n              }}\n            />\n\n            <div\n              className='addproductSection-left-header'\n              style={{\n                marginBottom: '-5px',\n              }}\n            >\n              <h3 className='inputFieldLabel'>Images</h3>\n              <Tooltip\n                placement='left'\n                title={\n                  'Click on the image to select cover image, By default 1st image is selected as cover'\n                }\n              >\n                <a href='###'>\n                  <InfoCircleOutlined />\n                </a>\n              </Tooltip>\n            </div>\n            <div className='aboutToUploadImagesContainer'>\n              {myImages &&\n                // @ts-ignore\n                myImages.length > 0 &&\n                myImages.map((image, index) => {\n                  return (\n                    <div className='aboutToUploadImagesContainer__item'>\n                      <div\n                        className='aboutToUploadImagesContainer__item-imgContainer'\n                        onClick={() => setCoverImageId(image.id)}\n                      >\n                        <img src={image.cover} alt={image.alt} />\n                      </div>\n\n                      <span\n                        onClick={() => handleImagesDelete(image.id)}\n                        className='aboutToUploadImagesContainer__item-remove'\n                      >\n                        <CloseOutlined />\n                      </span>\n\n                      {coverImageId === image.id ? (\n                        <span className='aboutToUploadImagesContainer__item-cover'>\n                          <CheckOutlined />\n                        </span>\n                      ) : (\n                        !coverImageId &&\n                        index === 0 && (\n                          <span className='aboutToUploadImagesContainer__item-cover'>\n                            <CheckOutlined />\n                          </span>\n                        )\n                      )}\n                    </div>\n                  );\n                })}\n\n              <Tooltip title={'Attach images'}>\n                <div\n                  onClick={() => {\n                    setvisible(true);\n                    setisModalOpenForImages(true);\n                    setisModalOpenForThumbnail(false);\n                  }}\n                  className='aboutToUploadImagesContainer__uploadItem'\n                >\n                  {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                  <FileImageFilled />\n                  {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                  <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                    <PlusOutlined />\n                  </span>\n                </div>\n              </Tooltip>\n            </div>\n\n            <Input\n              label='Meta title'\n              value={values.metaTitle}\n              placeHolder={'...'}\n              name='metaTitle'\n              isError={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && addCategoryState.error['error']['metaTitle'])\n              }\n              errorString={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && addCategoryState.error['error']['metaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaTitle');\n              }}\n            />\n\n            <Input\n              label='BN Meta title'\n              value={values.bnMetaTitle}\n              placeHolder={'...'}\n              name='bnMetaTitle'\n              isError={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['bnMetaTitle'])\n              }\n              errorString={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['bnMetaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaTitle');\n              }}\n            />\n\n            <TextArea\n              label='Meta description'\n              value={values.metaDescription}\n              placeholder={'meta...'}\n              name='metaDescription'\n              isError={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['metaDescription'])\n              }\n              errorString={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['metaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaDescription');\n              }}\n            />\n\n            <TextArea\n              label='BN Meta Description'\n              value={values.bnMetaDescription}\n              placeholder={'এইয় মেট...'}\n              name='bnMetaDescription'\n              isError={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['bnMetaDescription'])\n              }\n              errorString={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  addCategoryState.error['error']['bnMetaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaDescription');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setTags}\n              tags={tags}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setBnTags}\n              tags={bnTags}\n            />\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisible}\n            visible={visible}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            setmyThumbnailImage={setmyThumbnailImage}\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\n            isModalOpenForImages={isModalOpenForImages}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewCategory;\n","import React, { useState } from 'react';\nimport { Modal, notification } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { useHandleFetch } from '../../hooks';\n\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\n\n\n\nconst validationSchema = Yup.object().shape({\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\n\n\n\n\nconst openSuccessNotification = (message?: any) => {\n\tnotification.success({\n\t\tmessage: message || 'Category Updated',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n\t});\n};\n\n\nconst openErrorNotification = (message?: any) => {\n\tnotification.success({\n\t\tmessage: message || 'Something Went Wrong',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n\t});\n};\n\n\n\n\n\ninterface Props {\n\tcategory: any;\n\tsetvisible: any;\n\tvisible: any;\n\tsetcategoryList?: any;\n\tcategoryList?: any;\n}\n\nconst QuickEdit = ({ category, setvisible, visible, categoryList, setcategoryList }: Props) => {\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\n\n\tconst handleSubmit = async (values: any, actions: any) => {\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\n\t\t\turlOptions: {\n\t\t\t\tplaceHolders: {\n\t\t\t\t\tid: values.id,\n\t\t\t\t}\n\t\t\t},\n\t\t\tbody: {\n\t\t\t\tname: values.name,\n\t\t\t\tdescription: values.description,\n\t\t\t},\n\t\t});\n\n\t\t//   console.log('updateCategoryRes',updateCategoryRes); \n\n\t\t// @ts-ignore\n\t\tif (updateCategoryRes && updateCategoryRes.status === 'ok') {\n\t\t\topenSuccessNotification();\n\n\t\t\tconst positionInTag = () => {\n\t\t\t\treturn categoryList.map(item => item.id).indexOf(category.id);\n\t\t\t}\n\n\t\t\tconst index = positionInTag();\n\n\t\t\t// @ts-ignore\n\t\t\tconst updatedItem = Object.assign({}, categoryList[index], { ...updateCategoryRes });\n\t\t\tconst updateCategoryList = [...categoryList.slice(0, index), updatedItem, ...categoryList.slice(index + 1)];\n\t\t\tsetcategoryList(updateCategoryList);\n\n\t\t}\n\t\telse {\n\t\t\topenErrorNotification();\n\t\t}\n\n\t\tactions.setSubmitting(false);\n\t\tsetvisible(false)\n\n\t};\n\n\n\tconst handleCancel = (e: any) => {\n\t\tsetvisible(false);\n\t};\n\n\n\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\n\t\tif (!values.name || !isValid) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\treturn (\n\t\t<Formik\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tvalidateOnBlur={false}\n\t\t\tenableReinitialize={true}\n\t\t\tinitialValues={\n\t\t\t\t{ ...category }\n\t\t\t}\n\t\t>\n\t\t\t{({\n\t\t\t\thandleChange,\n\t\t\t\tvalues,\n\t\t\t\thandleSubmit,\n\t\t\t\terrors,\n\t\t\t\tisValid,\n\t\t\t\tisSubmitting,\n\t\t\t\ttouched,\n\t\t\t\thandleBlur,\n\t\t\t\tsetFieldTouched,\n\t\t\t\thandleReset,\n\t\t\t}) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\ttitle=\"Quick Edit\"\n\t\t\t\t\t\t\tvisible={visible}\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\n\t\t\t\t\t\t\tonCancel={handleCancel}\n\t\t\t\t\t\t\tokText='Update'\n\t\t\t\t\t\t\tokButtonProps={{\n\t\t\t\t\t\t\t\tloading: isSubmitting,\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Title'\n\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['name'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='Description'\n\t\t\t\t\t\t\t\tvalue={values.description}\n\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCategoryState.error['error']['description'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Modal>\n\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\n\nexport default QuickEdit;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Switch,\n  Select,\n  notification,\n  Modal,\n  Tooltip,\n  Upload,\n  message,\n  Button,\n  Spin,\n} from 'antd';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  FileImageFilled,\n  PlusOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  LoadingOutlined,\n} from '@ant-design/icons';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport MetaTags from './MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  //   name: Yup.string()\n  //     .label('Name')\n  //     .required('Name is required')\n  //     .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Category Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n  image: [],\n  url: '',\n  cover: '',\n  displayOrder: null,\n};\n\nconst { Option } = Select;\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  setcategoryDetailData?: any;\n  categoryDetailData?: any;\n  categoryList?: any;\n}\n\nconst ModalChildComponent = ({\n  setAddNewCategoryVisible,\n  categoryList,\n  categoryDetailData,\n  setcategoryDetailData,\n}) => {\n  const [addCategoryState, handleAddCategoryFetch] = useHandleFetch(\n    {},\n    'updateCategory'\n  );\n  const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch(\n    {},\n    'categoryDetail'\n  );\n\n  const [\n    updateCategoryIconState,\n    handleUpdateCategoryIconFetch,\n  ] = useHandleFetch({}, 'categoryUpdateIcon', 'form');\n\n  \n  const [\n    updateCategoryThumbnailState,\n    handleUpdateCategoryThumbnailFetch,\n  ] = useHandleFetch({}, 'categoryUpdateThumbnail', 'form');\n\n\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [selectedParentId, setselectedParentId] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [loadingThumnail, setLoadingThumbnail] = useState(false);\n  const [imageFile, setImagefile] = useState('');\n  const [thumbnailImageFile, setThumbnailImagefile] = useState('');\n  const [thumbnailImageUrl, setThumbnailImageUrl] = useState('');\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\n\n  const [\n    attachImageToItemMultipleState,\n    handleAttachImageToItemMultipleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\n  const [\n    attachImageToItemSingleState,\n    handleAttachImageToItemSingleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\n  const [\n    detachImageFromItemMultipleState,\n    handleDetachImageFromItemMultipleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n  useEffect(() => {\n    const getProductDetail = async () => {\n      await handleCategoryDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: categoryDetailData.id,\n          },\n        },\n      });\n    };\n\n    getProductDetail();\n  }, [categoryDetailData]);\n\n  useEffect(() => {\n    if (\n      categoryDetailState.done &&\n      Object.keys(categoryDetailState).length > 0\n    ) {\n      const images = categoryDetailState.data.image;\n      let mahImages = [];\n\n      if (images && images.length > 0) {\n        mahImages = images;\n      }\n\n      if (\n        categoryDetailState.data.cover &&\n        categoryDetailState.data.cover['id']\n      ) {\n        const ixists = images.find(\n          (item) => item.id === categoryDetailState.data.cover['id']\n        );\n        if (!ixists) {\n          mahImages = [categoryDetailState.data.cover, ...mahImages];\n        }\n\n        setCoverImageId(categoryDetailState.data.cover['id']);\n      }\n\n      // @ts-ignore\n      setmyImages(mahImages);\n    }\n  }, [categoryDetailState.done]);\n\n  useEffect(() => {\n    console.log('thumnail', myImages);\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      console.log('thumnail2', myImages);\n\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  const handleDetachSingleImage = async (id) => {\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'category',\n          itemId: categoryDetailData.id,\n        },\n      },\n    });\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'category',\n          itemId: categoryDetailData.id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      openSuccessNotification('Set as thumbnail!');\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    const formData = new FormData();\n\n    formData.append('name', values.name?.trim());\n    formData.append('description', values.description);\n    formData.append('image', JSON.stringify(imagesIds));\n    formData.append('cover', coverImageId || imagesIds[0] ? imagesIds[0] : '');\n    formData.append('parent', selectedParentId);\n    formData.append('icon', imageFile);\n    formData.append('thumbnail', thumbnailImageFile);\n\n    console.log('categoryDetailData', categoryDetailData);\n\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const aboutToUpdatedImageIds = [];\n\n      if (imagesIds && imagesIds.length > 0) {\n        imagesIds.forEach((imageId) => {\n          if (categoryDetailData && categoryDetailData['image']) {\n            if (!categoryDetailData['image'].includes(imageId)) {\n              aboutToUpdatedImageIds.push(imageId);\n            }\n          }\n        });\n      }\n\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n        await handleAttachImageToItemMultipleFetch({\n          urlOptions: {\n            placeHolders: {\n              collection: 'category',\n              itemId: categoryDetailData.id,\n            },\n          },\n          body: {\n            image: aboutToUpdatedImageIds,\n          },\n        });\n      } else if (\n        aboutToUpdatedImageIds[0] &&\n        aboutToUpdatedImageIds.length < 1\n      ) {\n        await handleAttachImageToItemSingleFetch({\n          urlOptions: {\n            placeHolders: {\n              imageId: aboutToUpdatedImageIds[0].id,\n              collection: 'category',\n              itemId: categoryDetailData.id,\n            },\n          },\n        });\n      }\n    }\n\n    const addCategoryRes = await handleAddCategoryFetch({\n      urlOptions: {\n        placeHolders: {\n          id: categoryDetailData.id,\n        },\n      },\n      body: {\n        name: values.name?.trim(),\n        description: values.description,\n        displayOrder: values.displayOrder,\n        image: imagesIds,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        parent: selectedParentId,\n        icon: imageFile,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\n          name: values.bnName?.trim(),\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addCategoryRes && addCategoryRes.status === 'ok') {\n      openSuccessNotification('Category Updated!');\n      setAddNewCategoryVisible(false);\n\n      setcategoryDetailData({\n        name: addCategoryRes['name'] || '',\n        description: addCategoryRes['description'] || '',\n        cover: categoryDetailData['cover'] || '',\n        id: categoryDetailData.id,\n        key: categoryDetailData['id'] || '',\n        // @ts-ignore\n        ...addCategoryRes,\n      });\n\n      actions.resetForm();\n      // @ts-ignore\n      setmyImages([]);\n      setCoverImageId('');\n      setselectedParentId('');\n      setisparentcategoryChecked(true);\n      setImageUrl('');\n      setThumbnailImageUrl('');\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addCategoryState['isLoading']) {\n      const error = addCategoryState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addCategoryState]);\n\n  const onSwitchChange = (checked: any) => {\n    setisparentcategoryChecked(checked);\n  };\n\n  const handleCancel = (e: any) => {\n    setTags([]);\n    setBnTags([]);\n    setAddNewCategoryVisible(false);\n    setImagefile('');\n    setCoverImageId('');\n    setselectedParentId('');\n    setmyImages(false);\n  };\n\n  const onChangeSelect = (value) => {\n    setselectedParentId(value);\n  };\n\n  function getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  function beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setImageUrl(imageUrl);\n      setImagefile(file);\n      const setNewIcon = async () => {\n        const formData = new FormData();\n        formData.append('icon', file);\n        // const addCategoryRes = await handleAddCategoryFetch({\n        // \tbody: formData,\n        // });\n        const res = await handleUpdateCategoryIconFetch({\n          urlOptions: {\n            placeHolders: {\n              id: categoryDetailData.id,\n            },\n          },\n          body: formData,\n        });\n\n        // @ts-ignore\n        if (res && res.status === 'ok') {\n          openSuccessNotification('Category Icon updated!');\n        } else {\n          openErrorNotification(\n            \"Couldn't update category icon, Something went wrong\"\n          );\n        }\n      };\n\n      setNewIcon();\n      setLoadingThumbnail(false);\n    });\n\n    return false;\n  }\n\n\n\n  \n  function beforeThumbnailUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setThumbnailImageUrl(imageUrl)\n      setThumbnailImagefile(file)\n      const setNewIcon = async () => {\n        const formData = new FormData();\n        formData.append('thumbnail', file);\n        // const addCategoryRes = await handleAddCategoryFetch({\n        // \tbody: formData,\n        // });\n        const res = await handleUpdateCategoryThumbnailFetch({\n          urlOptions: {\n            placeHolders: {\n              id: categoryDetailData.id,\n            },\n          },\n          body: formData,\n        });\n\n        // @ts-ignore\n        if (res && res.status === 'ok') {\n          openSuccessNotification('Category Thumbnail updated!');\n        } else {\n          openErrorNotification(\n            \"Couldn't update category Thumbnail, Something went wrong\"\n          );\n        }\n      };\n\n      setNewIcon();\n      setLoadingThumbnail(false);\n    });\n\n    return false;\n  }\n\n\n\n\n\n  useEffect(() => {\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const iconUrl = categoryDetailData.icon && categoryDetailData.icon;\n\n      setImageUrl(iconUrl);\n    }\n  }, []);\n\n\n  \n  useEffect(() => {\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const thumbnailImageUrl = categoryDetailData.thumbnail && categoryDetailData.thumbnail;\n      setThumbnailImageUrl(thumbnailImageUrl);\n    }\n  }, []);\n\n\n\n  const uploadButton = (\n    <div>\n      {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\n      <div className='ant-upload-text'>Upload</div>\n    </div>\n  );\n\n  useEffect(() => {\n    if (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n      const metaTags =\n        categoryDetailData.metaTags && categoryDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        categoryDetailData.bn &&\n        categoryDetailData.bn['metaTags'] &&\n        categoryDetailData.bn['metaTags'].split(',');\n      setTags(metaTags || []);\n      setBnTags(bnMetaTags || []);\n    }\n  }, []);\n\n  return (\n    <>\n      <Formik\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        enableReinitialize={true}\n        initialValues={{\n          ...initialValues,\n          ...categoryDetailData,\n          ...(categoryDetailData &&\n            Object.keys(categoryDetailData).length > 0 && {\n              bnMetaTitle:\n                categoryDetailData['bn'] &&\n                categoryDetailData['bn'].metaTitle &&\n                categoryDetailData['bn'].metaTitle,\n              bnMetaDescription:\n                categoryDetailData['bn'] &&\n                categoryDetailData['bn'].metaDescription &&\n                categoryDetailData['bn'].metaDescription,\n              bnName:\n                categoryDetailData['bn'] &&\n                categoryDetailData['bn'].name &&\n                categoryDetailData['bn'].name,\n              bnDescription:\n                categoryDetailData['bn'] &&\n                categoryDetailData['bn'].description &&\n                categoryDetailData['bn'].description,\n            }),\n        }}\n      >\n        {({\n          handleChange,\n          values,\n          handleSubmit,\n          errors,\n          isValid,\n          isSubmitting,\n          touched,\n          handleBlur,\n          setFieldTouched,\n          handleReset,\n        }) => (\n          <>\n            <section className='addProductGridContainer'>\n              <div className='addProductGridContainer__left'>\n                <div className='addProductGridContainer__name'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Category Information *</h3>\n                    <div\n                      className={\n                        values.name && values.name.length > 2\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <Input\n                      label='Name *'\n                      value={values.name}\n                      placeHolder={''}\n                      name='name'\n                      isError={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['name'])\n                      }\n                      errorString={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['name'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('name');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Name'\n                      value={values.bnName}\n                      placeHolder={''}\n                      name='bnName'\n                      isError={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['bnName'])\n                      }\n                      errorString={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['bnName'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnName');\n                      }}\n                    />\n\n                    <TextArea\n                      label='Description'\n                      value={values.description}\n                      placeholder={'This category...'}\n                      name='description'\n                      isError={\n                        (touched.description && errors.description) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['description'])\n                      }\n                      errorString={\n                        (touched.description && errors.description) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['description'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('description');\n                      }}\n                    />\n\n                    <TextArea\n                      label='BN Description'\n                      value={values.bnDescription}\n                      placeholder={'এই ক্যাটাগড়ি...'}\n                      name='bnDescription'\n                      isError={\n                        (touched.bnDescription && errors.bnDescription) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['bnDescription'])\n                      }\n                      errorString={\n                        (touched.bnDescription && errors.bnDescription) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['bnDescription'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnDescription');\n                      }}\n                    />\n\n                    <Input\n                      label='Display Order'\n                      value={values.displayOrder}\n                      placeHolder={'1,3,7'}\n                      name='displayOrder'\n                      type='number'\n                      isError={\n                        (touched.displayOrder && errors.displayOrder) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['displayOrder'])\n                      }\n                      errorString={\n                        (touched.displayOrder && errors.displayOrder) ||\n                        (!isSubmitting &&\n                          addCategoryState.error['error']['displayOrder'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('displayOrder');\n                      }}\n                    />\n\n                    <div\n                      style={{\n                        marginTop: '25px',\n                      }}\n                    ></div>\n\n                    <div className='switchLabelContainer'>\n                      <Switch\n                        checked={isparentCategoryChecked}\n                        defaultChecked\n                        onChange={onSwitchChange}\n                      />\n                      <div className='switchLabelContainer-textContainer'>\n                        <h5>Top level Category</h5>\n                        <h5 className='switchLabelContainer-desc'>\n                          Disable to select a Parent Category\n                        </h5>\n                      </div>\n                    </div>\n\n                    {!isparentCategoryChecked && (\n                      <>\n                        <h3 className='inputFieldLabel'>Parent Category</h3>\n                        <Select\n                          showSearch\n                          style={{ width: 300 }}\n                          placeholder='Select a Parent Category'\n                          optionFilterProp='children'\n                          onChange={onChangeSelect}\n                          // onFocus={onFocus}\n                          // onBlur={onBlur}\n                          // onSearch={onSearch}\n                          filterOption={(input, option: any) =>\n                            option.children\n                              .toLowerCase()\n                              .indexOf(input.toLowerCase()) >= 0\n                          }\n                        >\n                          {categoryList.length > 0 &&\n                            categoryList.map((category) => {\n                              return (\n                                <Option value={category.id}>\n                                  {category.name}\n                                </Option>\n                              );\n                            })}\n                        </Select>\n                      </>\n                    )}\n\n                    <div\n                      style={{\n                        marginTop: '20px',\n                      }}\n                    />\n\n                    <div className='addproductSection-left-header'>\n                      <h3 className='inputFieldLabel'>Icon </h3>\n                      <Tooltip\n                        placement='left'\n                        title={'Add Icon image for this category'}\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n                    </div>\n\n                    <Upload\n                      style={{\n                        borderRadius: '8px',\n                      }}\n                      name='avatar'\n                      listType='picture-card'\n                      className='avatar-uploader'\n                      showUploadList={false}\n                      beforeUpload={beforeUpload}\n                      multiple={false}\n                    >\n                      {imageUrl ? (\n                        <img\n                          src={imageUrl}\n                          alt='avatar'\n                          style={{ width: '100%' }}\n                        />\n                      ) : (\n                        uploadButton\n                      )}\n                    </Upload>\n\n\n                    <div\n                      style={{\n                        marginTop: '20px',\n                      }}\n                    />\n\n                    <div className='addproductSection-left-header'>\n                      <h3 className='inputFieldLabel'>Thumbnail</h3>\n                      <Tooltip\n                        placement='left'\n                        title={'Add thumbnail image for this category'}\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n                    </div>\n\n                    <Upload\n                      style={{\n                        borderRadius: '8px',\n                      }}\n                      name='avatar'\n                      listType='picture-card'\n                      className='avatar-uploader'\n                      showUploadList={false}\n                      beforeUpload={beforeThumbnailUpload}\n                      multiple={false}\n                    >\n                      {thumbnailImageUrl ? (\n                        <img\n                          src={thumbnailImageUrl}\n                          alt='avatar'\n                          style={{ width: '100%' }}\n                        />\n                      ) : (\n                        uploadButton\n                      )}\n                    </Upload>\n\n\n\n\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__image'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Image</h3>\n\n                    <Tooltip\n                      placement='left'\n                      title={\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\n                      }\n                    >\n                      <a href='###'>\n                        <InfoCircleOutlined />\n                      </a>\n                    </Tooltip>\n                  </div>\n\n                  <div\n                    style={{\n                      padding: '10px',\n                    }}\n                    className='aboutToUploadImagesContainer'\n                  >\n                    {categoryDetailState.isLoading && (\n                      <div\n                        style={{\n                          padding: '20px 0',\n                        }}\n                      >\n                        <Spin />\n                      </div>\n                    )}\n                    {categoryDetailState.done && (\n                      <>\n                        {myImages &&\n                          // @ts-ignore\n                          myImages.length > 0 &&\n                          myImages.map((image, index) => {\n                            return (\n                              <div className='aboutToUploadImagesContainer__item'>\n                                <div\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\n                                  onClick={() => {\n                                    setCoverImageId(image.id);\n                                    handleSetImageAsThumnail(image);\n                                  }}\n                                >\n                                  <img src={image.cover} alt={image.alt} />\n                                </div>\n\n                                <span\n                                  onClick={() => {\n                                    handleImagesDelete(image.id);\n                                    handleDetachSingleImage(image.id);\n                                  }}\n                                  className='aboutToUploadImagesContainer__item-remove'\n                                >\n                                  <CloseOutlined />\n                                </span>\n\n                                {coverImageId === image.id ? (\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                  </span>\n                                ) : (\n                                  !coverImageId &&\n                                  index === 0 && (\n                                    <span className='aboutToUploadImagesContainer__item-cover'>\n                                      <CheckOutlined />\n                                    </span>\n                                  )\n                                )}\n                              </div>\n                            );\n                          })}\n\n                        <Tooltip title={'Attach images'}>\n                          <div\n                            onClick={() => {\n                              setvisible(true);\n                              setisModalOpenForImages(true);\n                              setisModalOpenForThumbnail(false);\n                            }}\n                            className='aboutToUploadImagesContainer__uploadItem'\n                          >\n                            {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                            <FileImageFilled />\n                            {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                              <PlusOutlined />\n                            </span>\n                          </div>\n                        </Tooltip>\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className='addProductGridContainer__right'>\n                <div className='addProductGridContainer__category'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Meta Tags</h3>\n\n                      <Tooltip\n                        placement='left'\n                        title={\n                          \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                        }\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n\n                      {/* <Tooltip\n                        color='red'\n                        visible={\n                          addCategoryState.error['error']['category'] &&\n                          !(categoryids.length > 0)\n                        }\n                        placement='left'\n                        title={'Select at least one category'}\n                      >\n                        <div\n                          className={\n                            !(categoryids.length > 0) &&\n                            !addCategoryState.error['error']['category']\n                              ? 'checkicon'\n                              : addCategoryState.error['error']['category']\n                              ? 'checkicon-error'\n                              : 'checkicon-active'\n                          }\n                        >\n                          <CheckCircleOutlined />\n                        </div>\n                      </Tooltip> */}\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Input\n                        label='Meta title'\n                        value={values.metaTitle}\n                        placeHolder={'...'}\n                        name='metaTitle'\n                        isError={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['metaTitle'])\n                        }\n                        errorString={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['metaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaTitle');\n                        }}\n                      />\n\n                      <Input\n                        label='BN Meta title'\n                        value={values.bnMetaTitle}\n                        placeHolder={'...'}\n                        name='bnMetaTitle'\n                        isError={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['bnMetaTitle'])\n                        }\n                        errorString={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['bnMetaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaTitle');\n                        }}\n                      />\n\n                      <TextArea\n                        label='Meta description'\n                        value={values.metaDescription}\n                        placeholder={'meta...'}\n                        name='metaDescription'\n                        isError={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['metaDescription'])\n                        }\n                        errorString={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error']['metaDescription'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaDescription');\n                        }}\n                      />\n\n                      <TextArea\n                        label='BN Meta Description'\n                        value={values.bnMetaDescription}\n                        placeholder={'এইয় মেট...'}\n                        name='bnMetaDescription'\n                        isError={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        errorString={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            addCategoryState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaDescription');\n                        }}\n                      />\n\n                      <h3 className='inputFieldLabel'>Meta Tags </h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setTags}\n                        tags={tags}\n                      />\n\n                      <div\n                        style={{\n                          marginTop: '15px',\n                        }}\n                      ></div>\n\n                      <h3 className='inputFieldLabel'>BN Meta Tags </h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setBnTags}\n                        tags={bnTags}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            <div\n              style={{\n                padding: '15px',\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  color: '#555',\n                  marginRight: '10px',\n                }}\n                className='btnPrimaryClassNameoutline-cancle'\n                onClick={() => setAddNewCategoryVisible(false)}\n                type='default'\n              >\n                Cancel\n              </Button>\n\n              <Button\n                className='btnPrimaryClassNameoutline'\n                onClick={handleSubmit}\n                loading={addCategoryState.isLoading}\n                type='link'\n                icon={<CheckOutlined />}\n              >\n                Update\n              </Button>\n            </div>\n\n            <MediaLibrary\n              setvisible={setvisible}\n              visible={visible}\n              setmyImages={setmyImages}\n              myImages={myImages}\n              setmyThumbnailImage={setmyThumbnailImage}\n              isModalOpenForThumbnail={isModalOpenForThumbnail}\n              isModalOpenForImages={isModalOpenForImages}\n            />\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nconst AddNewCategory = ({\n  setAddNewCategoryVisible,\n  addNewCategoryVisible,\n  categoryList,\n  categoryDetailData,\n  setcategoryDetailData,\n}: Props) => {\n  const handleCancel = () => {\n    setAddNewCategoryVisible(false);\n  };\n  return (\n    <Modal\n      destroyOnClose={true}\n      style={{\n        top: '40px',\n      }}\n      bodyStyle={{\n        margin: 0,\n        padding: 0,\n      }}\n      title='Edit Category'\n      visible={addNewCategoryVisible}\n      onCancel={handleCancel}\n      footer={false}\n      okText='Update'\n      width={'70vw'}\n      okButtonProps={{\n        // loading: isSubmitting,\n        htmlType: 'submit',\n      }}\n    >\n      <ModalChildComponent\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n        categoryList={categoryList}\n        categoryDetailData={categoryDetailData}\n        setcategoryDetailData={setcategoryDetailData}\n      />\n    </Modal>\n  );\n};\n\nexport default AddNewCategory;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport { EditOutlined } from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Button,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport CategoryEdit from './CategoryEdit';\nimport CategoryNewEdit from './CategoryNewEdit';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n  roles?: any;\n}\n\nconst NewBrandDetail = ({ roles }: Props) => {\n  const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch(\n    {},\n    'categoryDetail'\n  );\n  const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch(\n    {},\n    'categoryProducts'\n  );\n\n  const [categoryState, handleCategoryListFetch] = useHandleFetch(\n    {},\n    'categoryList'\n  );\n  const [categoryList, setcategoryList] = useState([]);\n\n  useEffect(() => {\n    const setCategories = async () => {\n      const categories = await handleCategoryListFetch({\n        urlOptions: {\n          params: {\n            isSubCategory: true,\n            productCountValue: true,\n            sortItem: 'added',\n            sortOrderValue: '-1',\n            limitNumber: 5000000,\n          },\n        },\n      });\n      // @ts-ignore\n      setcategoryList(categories);\n    };\n    setCategories();\n  }, []);\n\n  const params = useParams();\n  const history = useHistory();\n  const categoryId = params['id'];\n  const [categoryEditVisible, setCategoryEditVisible] = useState(false);\n  const [categoryDetail, setcategoryDetail] = useState({});\n\n  useEffect(() => {\n    const getCategoryDetail = async () => {\n      const categoryDetailDataRes = await handleCategoryDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: categoryId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (categoryDetailDataRes) {\n        // @ts-ignore\n        setcategoryDetail(categoryDetailDataRes);\n      }\n    };\n\n    getCategoryDetail();\n  }, [categoryId]);\n\n  useEffect(() => {\n    const getCategoryProducts = async () => {\n      await handleCategoryProductsFetch({\n        urlOptions: {\n          placeHolders: {\n            id: categoryId,\n          },\n        },\n      });\n    };\n\n    getCategoryProducts();\n  }, [categoryId]);\n\n  console.log('categoryProductsState', categoryProductsState);\n\n  console.log('brandParams', params);\n\n  const getImagesInCollumn = (imgs) => {\n    if (!imgs[0]) return false;\n    imgs = imgs.map((item) => item.cover);\n    const columns = {};\n\n    let localIndex = 0;\n    let columnNumber = 0;\n\n    imgs.forEach((item, index) => {\n      if (localIndex < 3) {\n        if (columns[columnNumber]) {\n          columns[columnNumber] = [...columns[columnNumber], item];\n        } else columns[columnNumber] = [item];\n\n        localIndex = localIndex + 1;\n        columnNumber = columnNumber + 1;\n      } else {\n        localIndex = 0;\n        columnNumber = 0;\n        console.log('localIndex', localIndex);\n      }\n    });\n\n    return columns;\n  };\n\n  const row =\n    categoryDetailState.done && categoryDetail && categoryDetail['image']\n      ? getImagesInCollumn(categoryDetail['image'])\n      : [];\n\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Category Detail</h3>\n\n        {categoryDetailState.done &&\n          categoryDetail &&\n          Object.keys(categoryDetail).length > 0 && (\n            <>\n              <CategoryNewEdit\n                addNewCategoryVisible={categoryEditVisible}\n                setAddNewCategoryVisible={setCategoryEditVisible}\n                categoryDetailData={categoryDetail}\n                setcategoryDetailData={setcategoryDetail}\n                categoryList={categoryList}\n              />\n\n              {isAccess('postCatalogue', roles) && (\n                <Button\n                  onClick={() => setCategoryEditVisible(true)}\n                  type='link'\n                  icon={<EditOutlined />}\n                >\n                  Edit\n                </Button>\n              )}\n            </>\n          )}\n      </div>\n      <Skeleton\n        avatar\n        paragraph={{ rows: 3 }}\n        loading={categoryDetailState.isLoading}\n      >\n        {categoryDetailState.done &&\n          categoryDetail &&\n          !(Object.keys(categoryDetail).length > 0) && (\n            <Empty\n              description='No Category found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {categoryDetailState.done &&\n          categoryDetail &&\n          Object.keys(categoryDetail).length > 0 && (\n            <>\n              <div className='brandDetailContainer__header'>\n                <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\n                  <img\n                    src={\n                      categoryDetail['cover'] &&\n                      categoryDetail['cover']['cover']\n                    }\n                    alt=''\n                  />\n                </div>\n                <div className='brandDetailContainer__header-info'>\n                  <h2>{categoryDetail['name']}</h2>\n                  <h3>{categoryDetail['description']}</h3>\n                  <h3>\n                    Category type: <span>{categoryDetail['type']}</span>\n                  </h3>\n\n                  {categoryDetail['url'] && (\n                    <h3>\n                      URL:\n                      <span>{categoryDetail['url']}</span>\n                    </h3>\n                  )}\n                </div>\n              </div>\n\n              {categoryDetail['icon'] && (\n                <>\n                  <div className='brandDetailContainer__heading'>\n                    <h3>Icon</h3>\n                  </div>\n\n                  <div className='brandDetailContainer__inlineBox'>\n                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\n                      <img\n                        src={categoryDetail['icon'] && categoryDetail['icon']}\n                        alt=''\n                      />\n                    </div>\n                  </div>\n\n                  <div\n                    style={{\n                      marginBottom: '25px',\n                    }}\n                  ></div>\n                </>\n              )}\n\n\n          {categoryDetail['thumbnail'] && (\n                <>\n                  <div className='brandDetailContainer__heading'>\n                    <h3>Thumbnail</h3>\n                  </div>\n\n                  <div className='brandDetailContainer__inlineBox'>\n                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-thumbnail'>\n                      <img\n                        src={categoryDetail['thumbnail'] && categoryDetail['thumbnail']}\n                        alt=''\n                      />\n                    </div>\n                  </div>\n\n                  <div\n                    style={{\n                      marginBottom: '25px',\n                    }}\n                  ></div>\n                </>\n              )}\n\n\n\n              {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\n                <>\n                  <div className='brandDetailContainer__heading'>\n                    <h3>Image Gallary</h3>\n                  </div>\n\n                  <div className='brandDetailContainer__imageGallary'>\n                    <div className='imgGallaryContainer'>\n                      <div className='imgGallary-row'>\n                        {row &&\n                          Object.keys(row).map((column) => {\n                            return (\n                              <div className='imgGallary-column'>\n                                {row[column] &&\n                                  row[column].map((img) => {\n                                    return (\n                                      <img\n                                        alt='..'\n                                        src={img}\n                                        style={{\n                                          width: '100%',\n                                        }}\n                                      />\n                                    );\n                                  })}\n                              </div>\n                            );\n                          })}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    style={{\n                      marginBottom: '25px',\n                    }}\n                  ></div>\n                </>\n              )}\n\n              {categoryDetail['subCategory'] &&\n                categoryDetail['subCategory'].length > 0 && (\n                  <>\n                    <div className='brandDetailContainer__heading'>\n                      <h3>Child Categories</h3>\n                    </div>\n\n                    <div className='smallcatCardContainer'>\n                      {categoryDetail['subCategory'].map((subCat) => {\n                        return (\n                          <div\n                            onClick={() =>\n                              history.push(`/admin/category/${subCat.id}`)\n                            }\n                            className='smallcatCardContainer__card'\n                          >\n                            <div className='smallcatCardContainer__card-coverbox'>\n                              <img src={subCat.cover} alt='' />\n                            </div>\n                            <div className='smallcatCardContainer__card-info'>\n                              <h3>{subCat.name}</h3>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n\n                    <div\n                      style={{\n                        marginBottom: '25px',\n                      }}\n                    ></div>\n                  </>\n                )}\n            </>\n          )}\n      </Skeleton>\n\n      <div className='brandDetailContainer__heading'>\n        <h3>Products</h3>\n      </div>\n      <div className='brandDetailContainer__body'>\n        {categoryProductsState.isLoading && <DataTableSkeleton />}\n        {categoryProductsState.done &&\n          !(categoryProductsState.data.length > 0) && (\n            <div\n              style={{\n                marginTop: '100px',\n              }}\n            >\n              <Empty\n                description='No Products exists in this category'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n\n        {categoryProductsState.done &&\n          categoryProductsState.data &&\n          categoryProductsState.data.length > 0 && (\n            <>\n              <Table\n                style={{\n                  paddingTop: '10px',\n                  borderRadius: '5px !important',\n                  overflow: 'hidden',\n                  boxShadow:\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\n                }}\n                size='small'\n                dataSource={categoryProductsState.data}\n                tableLayout={'auto'}\n                onHeaderRow={(column) => {\n                  return {\n                    style: {\n                      color: 'red !important',\n                    },\n                  };\n                }}\n              >\n                <Column\n                  title=''\n                  dataIndex='cover'\n                  key='id'\n                  width={'80px'}\n                  className='classnameofthecolumn'\n                  render={(cover, record: any) => (\n                    <>\n                      <img\n                        onClick={() => {\n                          history.push(`/admin/product/${record.id}`);\n                          // go to product detail\n                        }}\n                        src={cover}\n                        alt='cover img'\n                        style={{\n                          height: '40px',\n                          width: '40px',\n                          objectFit: 'contain',\n                          borderRadius: '3px',\n                          cursor: 'pointer',\n                        }}\n                      />\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Name'\n                  dataIndex='name'\n                  key='id'\n                  className='classnameofthecolumn'\n                  render={(text, record: any) => (\n                    <>\n                      <h4\n                        onClick={() => {\n                          history.push(`/admin/product/${record.id}`);\n                        }}\n                        style={{\n                          fontWeight: 400,\n                          color: '#555',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        {text}\n                      </h4>\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Offer Price'\n                  dataIndex='offerPrice'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Price'\n                  dataIndex='price'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Available'\n                  dataIndex='available'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Minimum'\n                  dataIndex='minimum'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n              </Table>\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(NewBrandDetail);\n","import React from 'react';\nimport { Form, Input } from 'antd';\n\ninterface Props {\n  label?: string;\n  type?: string;\n  defaultValue?: string;\n  value?: string;\n  onChange?: any;\n  disabled?: boolean;\n  isError?: boolean;\n  errorString?: string;\n  name?: string;\n  size?: any;\n  min?: any;\n}\n\nconst Demo = ({\n  min,\n  label,\n  type,\n  defaultValue,\n  value,\n  onChange,\n  disabled,\n  isError,\n  errorString,\n  name,\n  size = 'middle',\n}: Props) => {\n  return (\n    <>\n      {label && <h3 className='inputFieldLabel-small'>{label}</h3>}\n\n      <Form.Item\n        validateStatus={isError ? 'error' : ''}\n        // hasFeedback validateStatus=\"success\"\n        help={errorString}\n        // rules={[{ required: true }]}\n      >\n        <Input\n          onKeyDown={(event) => {\n            if (type === 'number') {\n              if (event.key === 'e' || event.key === '-') {\n                event.preventDefault();\n              }\n            }\n          }}\n          min={min}\n          type={type}\n          size={size}\n          allowClear\n          name={name}\n          disabled={disabled}\n          value={value}\n          onChange={onChange}\n          className='inputclassName-small'\n        />\n      </Form.Item>\n    </>\n  );\n};\n\nexport default Demo;\n","import React from 'react';\nimport { notification } from 'antd';\n\nimport {\n    CheckCircleOutlined,\n    ExclamationCircleOutlined\n} from '@ant-design/icons';\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Succeed',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.error({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <ExclamationCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nexport {\n    openSuccessNotification,\n    openErrorNotification\n}","import React, { useEffect, useState } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import components\nimport Empty from '../../components/Empty';\n\n// import libraries\nimport { Button, Tag, Input, Spin } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst { CheckableTag } = Tag;\nconst { Search } = Input;\n\ninterface Props {\n  setTagIds?: any;\n  selectedTags?: any;\n  setSelectedTags?: any;\n}\n\nconst Tags = ({ setTagIds, setSelectedTags, selectedTags }: Props) => {\n  const [options, setoptions] = useState([]);\n  const [selectedOpions, setselectedOptions] = useState([]);\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\n  const [searchValue, setsearchValue] = useState('');\n\n  const handleChange = (tag, checked) => {\n    const nextSelectedTags = checked\n      ? [...selectedTags, tag]\n      : selectedTags.filter((t) => t !== tag);\n    setSelectedTags(nextSelectedTags);\n\n    if (\n      tagState.done &&\n      tagState.data.length > 0 &&\n      nextSelectedTags.length > 0\n    ) {\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\n        const selectedcategory = tagState.data.find(\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\n        );\n        if (selectedcategory) {\n          return selectedcategory.id;\n        }\n      });\n      setTagIds(selectedCategoryIds);\n    }\n  };\n\n  useEffect(() => {\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\n      const selectedCategoryName = selectedTags.map((item) => {\n        const selectedcategory = tagState.data.find((cat) => cat.name === item);\n        if (selectedcategory) {\n          return selectedcategory.name;\n        }\n      });\n\n      const selectedCategoryIds = selectedTags.map((item) => {\n        const selectedcategory = tagState.data.find((cat) => cat.name === item);\n        if (selectedcategory) {\n          return selectedcategory.id;\n        }\n      });\n\n      setSelectedTags(selectedCategoryName);\n      // setTagIds(selectedCategoryIds);\n    }\n  }, [tagState]);\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tagListRes = await handleTagListFetch({\n        urlOptions: {\n          params: {\n            isSubCategory: false,\n          },\n        },\n      });\n\n      // @ts-ignoref\n      if (tagListRes && tagListRes.length > 0) {\n        // @ts-ignore\n        const tagOptions = tagListRes.map((tag) => {\n          return tag.name;\n        });\n        setoptions(tagOptions);\n      }\n    };\n\n    setTags();\n  }, []);\n\n  // const handleChange = (selectItems) => {\n  //   setselectedOptions(selectItems)\n\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\n  //     const selectedCategoryIds = selectItems.map((item) => {\n  //       const selectedcategory = tagState.data.find(\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\n  //       );\n  //       if (selectedcategory) {\n  //         return selectedcategory.id;\n  //       }\n  //     });\n  //     setTagIds(selectedCategoryIds);\n  //   }\n\n  // }\n\n  const onSearchChange = (e) => {\n    setsearchValue(e.target.value);\n\n    if (e.target.value === '') {\n      if (tagState.data && tagState.data.length > 0) {\n        // @ts-ignore\n        const categoryNames = tagState.data.map((cat) => cat.name);\n        setoptions(categoryNames);\n      }\n    } else {\n      const newOptions =\n        options.length > 0\n          ? options.filter((option) => {\n              return option.toLowerCase().includes(searchValue.toLowerCase());\n            })\n          : [];\n\n      setoptions(newOptions);\n    }\n  };\n\n  console.log('selectedTags', selectedTags);\n\n  return (\n    <>\n      {tagState.isLoading && (\n        <div\n          style={{\n            padding: '15px 0',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Spin />\n        </div>\n      )}\n\n      {tagState.done && (\n        <div className='addProduct__categoryBoxContainer-searchBox'>\n          <Search\n            width={'90%'}\n            style={{\n              height: '30px',\n              borderRadius: '3px !important',\n              borderColor: '#eee !important',\n            }}\n            size='middle'\n            placeholder='top, hot'\n            onSearch={(value) => console.log(value)}\n            onChange={onSearchChange}\n          />\n        </div>\n      )}\n\n      {tagState.done && !(options.length > 0) && (\n        <div\n          style={{\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Empty title='No Tags found' height={100} />\n        </div>\n      )}\n\n      {/* \n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\n        mode=\"multiple\"\n        placeholder=\"search tags\"\n        value={selectedOpions}\n        onChange={handleChange}\n        style={{ width: '100%' }}\n      >\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\n          <Select.Option key={item} value={item}>\n            {item}\n          </Select.Option>\n        ))}\n      </Select>} */}\n\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\n        <>\n          {options.map((tag) => (\n            <>\n              <CheckableTag\n                key={tag}\n                checked={selectedTags.indexOf(tag) > -1}\n                onChange={(checked) => handleChange(tag, checked)}\n              >\n                {tag}\n              </CheckableTag>\n            </>\n          ))}\n        </>\n      )}\n\n      {/* \n      <div style={{\n        marginTop: '15px'\n      }}>\n\n      </div>\n      <Button\n\n        // type=\"primary\"\n        className='btnSecondaryPlusOutline'\n        icon={<PlusOutlined />}\n      >\n        Add New\n      </Button> */}\n    </>\n  );\n};\n\nexport default Tags;\n","import React, { useEffect, useState } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import components\nimport Empty from '../../components/Empty';\n\n// import libraries\nimport { Select, Button, Spin } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\ninterface Props {\n  setBrandId?: any;\n  brandId?: any;\n  productDetailState?: any;\n}\n\nconst { Option } = Select;\n\nconst Brands = ({ setBrandId, brandId, productDetailState }: Props) => {\n  const [options, setoptions] = useState([]);\n  const [selectedBrandId, setSelectedBrandId] = useState('');\n  const [brandState, handleTagListFetch] = useHandleFetch({}, 'brandList');\n\n  function onChange(value) {\n    setSelectedBrandId(value);\n    setBrandId(value);\n    // console.log(`selected ${value}`);\n  }\n\n  function onBlur() {\n    // console.log('blur');\n  }\n\n  function onFocus() {\n    // console.log('focus');\n  }\n\n  function onSearch(val) {\n    // console.log('search:', val);\n  }\n\n  useEffect(() => {\n    const setBrands = async () => {\n      const brandListRes = await handleTagListFetch({});\n\n      // @ts-ignore\n      if (brandListRes && brandListRes.length > 0) {\n        // @ts-ignore\n        const brandOptions = brandListRes.map((brand) => {\n          return {\n            value: brand.id,\n            name: brand.name,\n          };\n        });\n        setoptions(brandOptions);\n      }\n    };\n\n    setBrands();\n  }, []);\n\n  return (\n    <>\n      <div></div>\n\n      {brandState.isLoading && (\n        <div\n          style={{\n            padding: '15px 0',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Spin />\n        </div>\n      )}\n\n      {brandState.done && !(brandState.data.length > 0) && (\n        <div\n          style={{\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Empty title='No Brand found' height={100} />\n        </div>\n      )}\n\n      {brandState.done &&\n        brandState.data &&\n        brandState.data.length > 0 &&\n        options.length > 0 && (\n          <Select\n            showSearch\n            style={{ width: '210px', borderRadius: '6px' }}\n            placeholder='Select a Brand'\n            optionFilterProp='children'\n            onChange={onChange}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            onSearch={onSearch}\n            value={brandId}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            {brandState.done &&\n              brandState.data.length > 0 &&\n              options.map((option) => {\n                return <Option value={option.value}>{option.name}</Option>;\n              })}\n          </Select>\n        )}\n\n      {/* \n\t\t\t<div style={{\n\t\t\t\tmarginTop: '15px'\n\t\t\t}}>\n\n\t\t\t</div>\n\t\t\t<Button\n\n\t\t\t\t// type=\"primary\"\n\t\t\t\tclassName='btnSecondaryPlusOutline'\n\t\t\t\ticon={<PlusOutlined />}\n\t\t\t>\n\t\t\t\tAdd New\n      </Button> */}\n    </>\n  );\n};\n\nexport default Brands;\n","import React, { useState, useEffect } from 'react';\n\n// import components\nimport Empty from '../../components/Empty';\n\n// import hoooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Input, Tree, Button, Spin } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst { Search } = Input;\n\ninterface Props {\n  setcategoryIds?: any;\n  categoryOptions?: any;\n  setCategoryOptions?: any;\n}\n\nconst Categories = ({\n  setcategoryIds,\n  categoryOptions,\n  setCategoryOptions,\n}: Props) => {\n  const [options, setoptions] = useState([]);\n  const [searchValue, setsearchValue] = useState('');\n\n  const [categoryState, handleCategoryListFetch] = useHandleFetch(\n    {},\n    'categorySelectist'\n  );\n\n  useEffect(() => {\n    const setCategories = async () => {\n      const categoryListRes = await handleCategoryListFetch({\n        urlOptions: {\n          params: {\n            isSubCategory: true,\n            productCountValue: true,\n            sortItem: 'added',\n            sortOrderValue: '-1',\n            limitNumber: 5000000,\n          }\n        }\n      });\n\n      // @ts-ignore\n      if (categoryListRes && categoryListRes.length > 0) {\n        // @ts-ignore\n        setoptions(categoryListRes);\n      }\n    };\n\n    setCategories();\n  }, []);\n\n  const onSelect = (selectedKeys, info) => {\n    // console.log('selectedKeys', selectedKeys, info);\n  };\n\n  const onCheck = (checkedKeys, info) => {\n    const checkedIds = checkedKeys.checked || [];\n    setcategoryIds(checkedIds);\n    setCategoryOptions(checkedIds);\n  };\n\n  const onSearchChange = (e) => {\n    setsearchValue(e.target.value);\n\n    if (e.target.value === '') {\n      if (categoryState.data && categoryState.data.length > 0) {\n        // @ts-ignore\n        const categoryNames = categoryState.data.map((cat) => {\n          return {\n            ...cat,\n          };\n        });\n        setoptions(categoryNames);\n      }\n    } else {\n      const newOptions =\n        options.length > 0\n          ? options.filter((option) => {\n              return (\n                option &&\n                option.title.toLowerCase().includes(searchValue.toLowerCase())\n              );\n            })\n          : [];\n\n      setoptions(newOptions);\n    }\n  };\n\n  console.log('categoryState', categoryState);\n  console.log('optionsCat', options);\n\n  return (\n    <div className='addProduct__categoryBoxContainer'>\n      {categoryState.isLoading && (\n        <div\n          style={{\n            padding: '15px 0',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Spin />\n        </div>\n      )}\n\n      {categoryState.done && (\n        <div className='addProduct__categoryBoxContainer-searchBox'>\n          <Search\n            width={'100%'}\n            style={{\n              height: '30px',\n              borderRadius: '3px !important',\n              borderColor: '#eee !important',\n            }}\n            size='middle'\n            placeholder=''\n            onSearch={(value) => console.log(value)}\n            onChange={onSearchChange}\n          />\n        </div>\n      )}\n\n      {categoryState.done &&\n        categoryState.data.length > 0 &&\n        options.length > 0 && (\n          <>\n            <div\n              style={\n                {\n                  overflow: 'auto',\n                  maxHeight: '300px'\n\n                }\n              }\n            >\n              {options.length > 0 && (\n                <Tree\n                  checkable\n                  checkedKeys={categoryOptions}\n                  onSelect={onSelect}\n                  onCheck={onCheck}\n                  treeData={options}\n                  defaultExpandAll={true}\n                  checkStrictly={true}\n                />\n              )}\n            </div>\n          </>\n        )}\n\n      {categoryState.done && !(options.length > 0) && (\n        <div\n          style={{\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Empty title='No category found' height={100} />\n        </div>\n      )}\n\n      {/* <div style={{\n\t\t\t\tmarginTop: '15px'\n\t\t\t}}>\n\n\t\t\t</div>\n\t\t\t<Button\n\n\t\t\t\t// type=\"primary\"\n\t\t\t\tclassName='btnSecondaryPlusOutline'\n\t\t\t\ticon={<PlusOutlined />}\n\t\t\t>\n\t\t\t\tAdd New\n      </Button> */}\n\n      {/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\n    </div>\n  );\n};\n\nexport default Categories;\n","import React, { useState, useEffect } from 'react';\n\n// import hooks \nimport { useHandleFetch } from '../../hooks';\n\n\n// import libraries \nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { message, Tooltip, Modal, Tabs, Spin  } from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\nimport {\n    CheckCircleOutlined,\n    FileImageFilled,\n    PlusOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined\n} from '@ant-design/icons';\n\n\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport InputSmall from '../../components/Field/InputSmall';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from \"../../components/MediaLibrary\";\nimport DatePicker from \"../../components/Field/DatePicker\";\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\nimport Tags from \"../product/Tags\";\nimport Brands from \"../product/Brands\";\nimport Categories from \"../product/Categories\";\nimport Pricing from \"../product/Pricing\";\nimport SelectProducts from \"./SelectProducts\";\nimport SelectedProductItems from \"./SelectedProductItems\";\nimport MetaTags from \"../category/MetaTags\";\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\n\nconst initialValues = {\n    name: \"\",\n    bundlePrice: null,\n    startDate: \"\",\n    endDate: \"\",\n    description: '',\n    bnName: '',\n\tbnDescription: '',\n\tmetaTitle: '',\n\tbnMetaTitle: '',\n\tmetaDescription: '',\n\tbnMetaDescription: '',\n\tmetaTags: '',\n\tbnMetaTags: '',\n}\n\n\n\ninterface Props {\n    addNewCategoryVisible: any;\n    setAddNewCategoryVisible: any;\n    productList?: any;\n    setProductList?: any;\n    productDetailData?:any; \n}\n\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList, productDetailData }: Props) => {\n\n  \n\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n\n    const [productList,setProductList] = useState([]);\n    const [visible, setvisible] = useState(false);\n    const [myImages, setmyImages] = useState(false);\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n    const [categoryids, setcategoryIds] = useState([]);\n    const [tagIds, setTagIds] = useState([]);\n    const [brandId, setBrandId] = useState('');\n    const [pricing, setPricing] = useState([]);\n    const [coverImageId, setCoverImageId] = useState('');\n    const [categoryOptions, setCategoryOptions] = useState([]);\n    const [selectedTags, setSelectedTags] = useState([]);\n    const [date, setDateFeild] = useState('');\n    const [time, setTimeFeild] = useState('');\n    const [description, setDescription] = useState('');\n\tconst [bnDescription, setBNDescription] = useState('');\n\tconst [metaTags,setMetaTags] = useState([]);\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('2');\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \n\n    const [productIds,setProductIds] = useState([]); \n\n\n\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'updateBundle');\n\n    useEffect(() => {\n        const getProductDetail = async () => {\n            await handleProductDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: productDetailData.id\n                    }\n                }\n            })\n        };\n\n        getProductDetail();\n\n    }, [productDetailData]);\n\n\n    const [price, setPrice] = useState({\n        regular: null,\n        offer: null,\n    });\n\n\n\n\n    const handleSubmit = async (values: any, actions: any) => {\n        // @ts-ignore\n        const imagesIds = myImages ? myImages.map(image => {\n            return image.id;\n        }) : [];\n\n        console.log('productList',productList);\n\n        const products = productList.length > 0 ? productList.map(product => {\n            return {\n                _id: product._id,\n                variation: product.variation,\n                quantity: product.quantity,\n            }\n        }) : [];\n\n    \n            if (productDetailData && Object.keys(productDetailData).length > 0) {\n                const aboutToUpdatedImageIds = []; \n    \n                if(imagesIds && imagesIds.length > 0){\n                    imagesIds.forEach(imageId => {\n                        if(productDetailData && productDetailData['image']){\n                            if(!productDetailData['image'].includes(imageId)){\n                                aboutToUpdatedImageIds.push(imageId)\n                            }\n                        }\n                    });\n                }\n    \n          \n                if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n                    await handleAttachImageToItemMultipleFetch({\n                        urlOptions: {\n                            placeHolders: {\n                                collection: 'product',\n                                itemId: productDetailData.id\n                            }\n                        },\n                        body: {\n                            image: aboutToUpdatedImageIds\n                        }\n                    });\n                }\n                else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\n                    await handleAttachImageToItemSingleFetch({\n                        urlOptions: {\n                            placeHolders: {\n                                imageId: aboutToUpdatedImageIds[0].id,\n                                collection: 'product',\n                                itemId: productDetailData.id\n                            }\n                        }\n                    });\n                }\n            }\n        \n            \n\n\n\n        const addProductRes = await handleAddProductFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: productDetailData.id\n                }\n            },\n            body: {\n                name: values.name.trim(),\n                category: categoryids,\n                tags: tagIds,\n                brand: brandId,\n                price: price,\n                description: description,\n                model: values.model,\n                unit: values.unit,\n                image: imagesIds,\n                products,\n\n                metaTitle: values.metaTitle,\n\t\t\t\tmetaDescription: values.metaDescription,\n\t\t\t\tmetaTags: metaTags.join(','),\n\n\t\t\t\t\n\t\t\t\tbn: {\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\n\t\t\t\t\tname: values.bnName.trim(),\n\t\t\t\t\tunit: values.metaUnit,\n\t\t\t\t\tdescription: values.bnDescription,\n                }\n                \n\n                // startDate, endDate,\n            }\n        });\n\n\n        // @ts-ignore\n        if (addProductRes && addProductRes.status === 'ok') {\n            openSuccessNotification('Bundle Updated');\n  \n\n            setAddNewCategoryVisible(false)\n\n\n            const positionInAttribute = () => {\n\t\t\t\treturn bundleList.map(item => item.id).indexOf(productDetailData.id);\n\t\t\t}\n\n\t\t\tconst index = positionInAttribute();\n\n\t\t\t// @ts-ignore\n\t\t\tconst updatedItem = Object.assign({}, bundleList[index], { ...productDetailData, ...addProductRes });\n\t\t\tconst updateProductList = [...bundleList.slice(0, index), updatedItem, ...bundleList.slice(index + 1)];\n            setBundleList(updateProductList);\n            \n\n\n\n\n            // @ts-ignore\n            setmyImages([]);\n            setCoverImageId('');\n            setPricing([]);\n            setTagIds([]);\n            setSelectedTags([]);\n            setBrandId(\"\");\n            setcategoryIds([]);\n            setCategoryOptions([]);\n            actions.resetForm();\n        }\n        else {\n            // openErrorNotification();\n        }\n\n        actions.setSubmitting(false);\n\n\n    };\n\n\n\n\n\n    useEffect(() => {\n        if (!addProductState['isLoading']) {\n            const error = addProductState['error'];\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\n                const errors =\n                    Object.values(error['error']).length > 0\n                        ? Object.values(error['error'])\n                        : [];\n                errors.forEach((err, i) => {\n                    if (typeof err === 'string') {\n                        openErrorNotification(err)\n                    }\n                    else if (typeof err === 'object') {\n                        if (err && Object.keys(err).length > 0) {\n                            const errs = Object.values(err);\n                            errs.forEach(err => {\n                                openErrorNotification(err)\n                            })\n\n                        }\n                    }\n                });\n            }\n        }\n    }, [addProductState])\n\n\n\n    useEffect(()=>{\n        if(productDetailState['data'] && productDetailState['data']['products'] && productDetailState['data']['products'].length > 0){\n            const productIds = productDetailState['data']['products'].map(item => {\n              return {\n                ...item,\n                id: item._id,\n              }\n            }); \n            setProductIds(productIds); \n            const productList = productDetailState['data'].products.map(item => {\n                return {\n                    _id: item._id,\n                    variation: item.variation,\n                    quantity: item.quantity,\n                    totalPrice: item.totalPrice \n                }\n            }); \n           setProductList(productList); \n\n        }; \n        \n        console.log(\"productDetailState['data']\",productDetailState['data']);\n    },[productDetailState['done']])\n\n\n\n\n\n    useEffect(() => {\n\n        if (productIds && productIds.length > 0 && productList) {\n            if (productIds.length > productList.length) {\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\n                console.log('variation', variation)\n\n                setProductList([...productList, {\n                    ...productIds[productIds.length - 1],\n                    _id: productIds[productIds.length - 1]['id'],\n                    variation: variation,\n                    quantity: 1\n                }]);\n            }\n\n\n            else if (productIds.length < productList.length) {\n                console.log('productIds', productIds);\n                console.log('productList', productList);\n\n                const newProductList = productList.filter(item => {\n                    let isTrue = false;\n                    productIds.forEach(product => {\n                        if (product.id === item._id) {\n                            isTrue = true;\n                        }\n                    });\n                    return isTrue;\n                })\n                setProductList(newProductList);\n            }\n\n        }\n        else {\n            setProductList([]);\n        }\n        // console.log('productIds', productIds)\n\n    }, [productIds])\n\n\n\n\n\n\n\n    useEffect(() => {\n\n        if (productDetailData && productDetailData.brand) {\n            setBrandId(productDetailData.brand['id']);\n        }\n        else {\n            setBrandId('');\n        }\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\n            // const tagIds = productDetailData.tags.map(item => item.id);\n            setSelectedTags(productDetailData.tags);\n        }\n        else {\n            setSelectedTags([]);\n\n        }\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\n            // const categoryIds = productDetailData.category.map(item => item.id);\n\n            const categoryIds = productDetailData.category;\n            setCategoryOptions(categoryIds);\n            setcategoryIds(categoryIds); \n        }\n        else {\n            setCategoryOptions([]);\n        }\n\n        if (productDetailData && productDetailData.anotherPrice && productDetailData.anotherPrice) {\n            setPrice(productDetailData.anotherPrice); \n        }\n        else {\n            setPricing([]);\n\n        }\n\n\n        if (productDetailData && productDetailData.date && productDetailData.date) {\n            setDateFeild(productDetailData.date)\n        }\n        else {\n            setDateFeild('');\n\n        }\n\n        if (productDetailData && productDetailData.time && productDetailData.time) {\n            setTimeFeild(productDetailData.time);\n        }\n        else {\n            setTimeFeild('');\n        }\n\n\n\n    }, [productDetailData]);\n\n\n\n    useEffect(() => {\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\n\n            const images = productDetailState.data.image;\n            if (images && images.length > 0) {\n                setmyImages(images);\n            }\n\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\n                // @ts-ignore\n                setmyImages([productDetailState.data.cover, ...images]);\n                console.log('catcat', [productDetailState.data.cover, ...images]);\n                setCoverImageId(productDetailState.data.cover['id']);\n            }\n        }\n    }, [productDetailState])\n\n\n    useEffect(() => {\n        console.log('thumnail', myImages);\n        // @ts-ignore\n        if (myImages && myImages[0] && myImages.length < 2) {\n            console.log('thumnail2', myImages);\n\n            if (coverImageId !== myImages[0].id) {\n                setCoverImageId(myImages[0].id);\n                handleSetImageAsThumnail(myImages[0]);\n            }\n\n        }\n\n    }, [myImages])\n\n\n    const handleDetachSingleImage = async id => {\n        await handleDetachImageFromItemSingleFetch({\n            urlOptions: {\n                placeHolders: {\n                    imageId: id,\n                    collection: 'product',\n                    itemId: productDetailData.id\n                }\n            }\n        });\n    }\n\n\n\n    const handleSetImageAsThumnail = async image => {\n\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n            urlOptions: {\n                placeHolders: {\n                    imageId: image.id,\n                    collection: 'product',\n                    itemId: productDetailData.id\n                }\n            }\n        });\n\n        console.log('thumbnailRes', thumbnailRes);\n\n        // @ts-ignore\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\n            openSuccessNotification('Set as thumbnail!')\n            // const positionInBrand = () => {\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\n            // }\n\n            // const index = positionInBrand();\n\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\n\n            // if (prevItem) {\n            //     console.log('prevItem--', prevItem, 'image--', image);\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\n            //     setProductList(updateProductList);\n\n            // }\n        }\n        else {\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\n        }\n\n    }\n\n\n\n\n    useEffect(() => {\n        if (!updateProductState['isLoading']) {\n            const error = updateProductState['error'];\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\n                const errors =\n                    Object.values(error['error']).length > 0\n                        ? Object.values(error['error'])\n                        : [];\n                errors.forEach((err, i) => {\n                    if (typeof err === 'string') {\n                        openErrorNotification(err)\n                    }\n                    else if (typeof err === 'object') {\n                        if (err && Object.keys(err).length > 0) {\n                            const errs = Object.values(err);\n                            errs.forEach(err => {\n                                openErrorNotification(err)\n                            })\n\n                        }\n                    }\n                });\n            }\n        }\n    }, [updateProductState])\n\n\n    const handleCancel = (e: any) => {\n        setAddNewCategoryVisible(false);\n    };\n\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\n            return true;\n        }\n        return false;\n    }\n\n\n    const handleImagesDelete = (id) => {\n        // @ts-ignore\n        const newImages = myImages && myImages.filter(image => {\n            return image.id !== id;\n        })\n\n        setmyImages(newImages);\n    }\n\n    const handleDeleteFromSelectedImage = () => {\n\n    };\n\n    const handleThumbnailImageDelete = (id) => {\n        // @ts-ignore\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\n            return image.id !== id;\n        })\n\n        if (newImages.length > 0) {\n            setmyThumbnailImage(newImages);\n\n        }\n        else setmyThumbnailImage(false);\n    }\n\n\n\n\n\n    useEffect(()=>{\n\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data.metaTags){\n            const metaTags = productDetailState.data.metaTags.split(','); \n\n            console.log('localMetaTags',metaTags);\n           \n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \n            setMetaTags(metaTags)\n            setBnMetaTags(bnMetaTags)\n        }\n\n    },[productDetailState['done']])\n\n\n\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={\n                { ...initialValues,\n                    ...{\n                    ...productDetailData,\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\n                        bnName: productDetailState['data']['bn'].name,\n                        metaUnit: productDetailState['data']['bn'].unit,\n                        bnDescription: productDetailState['data']['bn'].description,\n                      }),\n                } }\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                            style={{\n                                top: '40px',\n\n                            }}\n                            bodyStyle={{\n                                margin: 0,\n                                padding: 0,\n                            }}\n                            width={'70vw'}\n                            title=\"Add New Bundle\"\n                            visible={addNewCategoryVisible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Update'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                            }}\n                        >\n\n\n                            <section className='addProductGridContainer'>\n                                <div className='addProductGridContainer__left'>\n                                    <div className='addProductGridContainer__name'>\n                                        <div className='addProductGridContainer__item-header'>\n                                            <h3>\n                                                Bundle Information *\n\t\t\t                                </h3>\n\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\n                                                <CheckCircleOutlined />\n                                            </div>\n                                        </div>\n                                        <div className='addProductGridContainer__item-body'>\n                                        <Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\n\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n                                    \n\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\n                                             </h3>\n\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\n\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\n                                             </h3>\n\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n                                            {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n                                            <div style={{\n                                                marginBottom: '15px'\n                                            }}></div>\n                                            {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\n                                                <h4>\n                                                    Price *\n\t\t\t                                \t</h4>\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\n                                                        <InputSmall\n                                                            label='Regular'\n                                                            value={price.regular}\n                                                            name='regular'\n                                                            onChange={(e) => setPrice({\n                                                                ...price,\n                                                                regular: e.target.value\n                                                            })}\n                                                        />\n\n\n                                                    </div>\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\n\n                                                        <InputSmall\n                                                            label='Offer'\n                                                            value={price.offer}\n                                                            name='offer'\n                                                            onChange={(e) => setPrice({\n                                                                ...price,\n                                                                offer: e.target.value\n                                                            })}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n\n\n                                            {/* <div style={{\n                                                display: 'flex',\n                                                justifyContent: 'space-between'\n                                            }}>\n                                                <div style={{\n                                                    width: '48%',\n                                                }}>\n                                                    <DatePicker\n                                                        date={startDate}\n                                                        label='Start Date'\n                                                        onChange={handleStartDataChange} />\n\n                                                </div>\n                                                <div style={{\n                                                    width: '48%'\n                                                }}>\n\n                                                    <DatePicker\n                                                        date={endDate}\n                                                        label='End Date'\n                                                        onChange={handleEndDataChange} />\n\n                                                </div>\n                                            </div> */}\n\n\n                                        </div>\n\n\n\n                                    </div>\n\n                                    {/* <div className='addProductGridContainer__price'>\n                                        <div className='addProductGridContainer__item-header'>\n                                            <h3>\n                                                Products\n\t\t                                    </h3>\n\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\n                                                <CheckCircleOutlined />\n                                            </div>\n                                        </div>\n\n\n                                        <div className='addProductGridContainer__item-body'>\n\n                                            <h3 className='inputFieldLabel'>\n                                                Products\n                                            </h3>\n                                            <SelectProducts\n                                                setProductIds={setProductIds}\n                                                productIds={productIds}\n                                            />\n\n                                            <div style={{\n                                                marginTop: \"15px\"\n                                            }}></div>\n\n                                            <h3 className='inputFieldLabel'>\n                                                Selcted Products\n                                            </h3>\n\n                                            <SelectedProductItems\n                                                productList={productList}\n                                                setProductList={setProductList}\n                                            />\n                                        </div>\n                                    </div> */}\n\n\n                                    <div className='addProductGridContainer__image'>\n\n                                <div className='addProductGridContainer__item-header'>\n                                    <h3>\n                                        Image\n                                </h3>\n\n                                    <Tooltip\n                                        placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\n                                        <a href='###'>\n                                            <InfoCircleOutlined />\n                                        </a>\n                                    </Tooltip>\n</div>\n\n<div\n    style={{\n        padding: \"10px\"\n    }}\n    className='aboutToUploadImagesContainer'>\n    {productDetailState.isLoading && (\n        <div style={{\n            padding: '20px 0'\n        }}>\n            <Spin />\n        </div>\n    )}\n    {productDetailState.done && (\n        <>\n            {myImages &&\n                // @ts-ignore\n                myImages.length > 0 && myImages.map((image, index) => {\n                    return (\n                        <div className='aboutToUploadImagesContainer__item'>\n                            <div\n                                className='aboutToUploadImagesContainer__item-imgContainer'\n                                onClick={() => {\n                                    setCoverImageId(image.id);\n                                    handleSetImageAsThumnail(image);\n                                }}\n                            >\n                                <img src={image.cover} alt={image.alt} />\n                            </div>\n\n                            <span\n                                onClick={() => {\n                                    handleImagesDelete(image.id)\n                                    handleDetachSingleImage(image.id)\n                                }\n\n                                }\n                                className='aboutToUploadImagesContainer__item-remove'>\n                                <CloseOutlined />\n                            </span>\n\n\n                            {coverImageId === image.id ? (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                </span>\n                            ) : !coverImageId && index === 0 && (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                </span>\n                            )}\n\n\n                        </div>\n                    )\n                })}\n\n\n            <Tooltip\n                title={'Attach images'}>\n\n                <div\n                    onClick={() => {\n                        setvisible(true);\n                        setisModalOpenForImages(true);\n                        setisModalOpenForThumbnail(false);\n                    }}\n                    className='aboutToUploadImagesContainer__uploadItem'>\n                    {/* <FileAddOutlined />\n            <FileImageTwoTone />\n            <FileImageOutlined /> */}\n                    <FileImageFilled />\n                    {/* <h5>\n             Select From Library\n    <     /h5> */}\n                    <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                        <PlusOutlined />\n                    </span>\n                </div>\n            </Tooltip>\n        </>\n    )}\n\n</div>\n</div>\n\n\n<div className='addProductGridContainer__image'>\n\n<div className='addProductGridContainer__item-header'>\n    <h3>\n    Meta Data\n</h3>\n\n    <Tooltip\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\n        <a href='###'>\n            <InfoCircleOutlined />\n        </a>\n    </Tooltip>\n</div>\n<div className='addProductGridContainer__item-body'>\n\n                \n<Input\nlabel='Meta title'\nvalue={values.metaTitle}\nplaceHolder={'category...'}\nname='metaTitle'\nisError={(touched.metaTitle && errors.metaTitle) ||\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\n\nerrorString={(touched.metaTitle && errors.metaTitle) ||\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('metaTitle')\n}}\n/>\n\n<Input\nlabel='BN Meta title'\nvalue={values.bnMetaTitle}\nplaceHolder={'ক্যাটাগড়ি...'}\nname='bnMetaTitle'\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\n\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('bnMetaTitle');\n}}\n/>\n\n<TextArea\nlabel='Meta description'\nvalue={values.metaDescription}\nplaceholder={'meta...'}\nname='metaDescription'\nisError={(touched.metaDescription && errors.metaDescription) ||\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\n\nerrorString={(touched.metaDescription && errors.metaDescription) ||\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('metaDescription');\n}}\n/>\n\n<TextArea\nlabel='BN Meta Description'\nvalue={values.bnMetaDescription}\nplaceholder={'এইয় মেট...'}\nname='bnMetaDescription'\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\n\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('bnMetaDescription');\n}}\n/>\n\n<h3 className='inputFieldLabel'>\nMeta Tags (grocery,fashion)\n</h3>\n\n<MetaTags\n// @ts-ignore\nsetTags={setMetaTags}\ntags={metaTags}\n/>\n\n<div style={{\nmarginTop:'15px'\n}}></div>\n\n<h3 className='inputFieldLabel'>\nBN Meta Tags (মুদিখানা,ফ্যাশন)\n</h3>\n\n<MetaTags\n// @ts-ignore\nsetTags={setBnMetaTags}\ntags={bnMetaTags}\n/>\n</div>\n</div>\n\n\n\n\n\n\n                                </div>\n                                <div className='addProductGridContainer__right'>\n                                    <div className='addProductGridContainer__category'>\n\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Categories *\n\t\t\t                                \t</h3>\n\n                                                <Tooltip\n                                                    color='red'\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\n                                                    placement=\"left\" title={'Select at least one category'}>\n                                                    <div className={!(categoryids.length > 0)\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\n                                                        <CheckCircleOutlined />\n                                                    </div>\n                                                </Tooltip>\n\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Categories\n                                                    setCategoryOptions={setCategoryOptions}\n                                                    categoryOptions={categoryOptions}\n                                                    setcategoryIds={setcategoryIds} />\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                    <div className='addProductGridContainer__tag'>\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Tags\n\t\t\t\t</h3>\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Tags\n                                                    setSelectedTags={setSelectedTags}\n                                                    selectedTags={selectedTags}\n                                                    setTagIds={setTagIds} />\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className='addProductGridContainer__brand'>\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Brand\n\t\t\t\t</h3>\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Brands setBrandId={setBrandId} />\n                                            </div>\n                                        </div>\n\n\n                                    </div>\n\n                                </div>\n                            </section>\n\n\n                        </Modal>\n\n                        <MediaLibrary\n                            setvisible={setvisible}\n                            visible={visible}\n                            setmyImages={setmyImages}\n                            myImages={myImages}\n                            setmyThumbnailImage={setmyThumbnailImage}\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\n                            isModalOpenForImages={isModalOpenForImages}\n\n                        />\n                    </>\n                )}\n        </Formik>\n\n\n\n\n    );\n};\n\nexport default AddNewProduct;\n\n\n\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n\t[regular input field] [offer inputfield]\n\nStock [title]\n\t[available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n\t[add attributes name]\n\t\t[add attrubutes value]\n\n\t[add attributes name]\n\t\t[add attrubutes value\n\n*///","import React, { useEffect, useState } from 'react';\nimport { useHandleFetch } from '../../hooks';\nimport { Select, Skeleton } from 'antd';\n\n\ninterface Props {\n    setProductIds?: any;\n    productIds?: any;\n}\n\n\nconst Tags = ({\n    setProductIds,\n    productIds\n}: Props) => {\n    const [options, setoptions] = useState([]);\n    const [selectedOpions, setselectedOptions] = useState([]);\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\n    const [isProductIdsfirstTime,setProductIdsfirstTime] = useState(false); \n\n    useEffect(() => {\n        const setTags = async () => {\n            const tagListRes = await handleTagListFetch({\n                urlOptions: {\n                    params: {\n                        sortItem: 'added',\n                        sortOrderValue: '-1'\n                    }\n                }\n            });\n\n            // @ts-ignore\n            if (tagListRes && tagListRes.length > 0) {\n                // @ts-ignore\n                const tagOptions = tagListRes.map((tag) => {\n                    return tag.name\n                });\n                setoptions(tagOptions);\n            }\n\n        };\n\n        setTags();\n    }, []);\n\n\n\n    useEffect(()=>{\n\n        if(productIds && productIds.length > 0 && !isProductIdsfirstTime){\n            const selectItems = productIds.map((tag) => {\n                return tag.id\n            });\n\n            setselectedOptions(selectItems);\n            // setoptions(tagOptions);\n        }; \n\n    },[productIds])\n\n\n    const handleChange = (selectItems) => {\n        setselectedOptions(selectItems);\n        console.log('selectItems',selectItems); \n\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\n            const selectedCategoryIds = selectItems.map((item) => {\n                const selectedcategory = tagState.data.find(\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\n                );\n                if (selectedcategory) {\n                    return selectedcategory;\n                }\n            });\n\n            setProductIds(selectedCategoryIds);\n        }\n        else {\n            setProductIds([])\n        }\n    }\n\n\n    return (\n        <>\n            <Skeleton loading={tagState.isLoading}>\n                {tagState.done && tagState.data.length > 0 && <Select\n                    mode=\"multiple\"\n                    placeholder=\"search products\"\n                    value={selectedOpions}\n                    onChange={handleChange}\n                    style={{ width: '100%' }}\n                >\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\n                        <Select.Option key={item} value={item}>\n                            {item}\n                        </Select.Option>\n                    ))}\n                </Select>}\n            </Skeleton>\n        </>\n    )\n}\n\nexport default Tags\n","import React, { useState, useEffect } from 'react';\nimport { useHandleFetch } from '../../hooks';\n\n\n// import lib \n\n\n\n\ninterface Props {\n    setProductList?: any;\n    productList?: any;\n    productId?: any;\n    quantity?: any;\n    item?: any\n    variation?: any;\n}\n\nconst CartOverLayCartItem = ({\n    productList,\n    setProductList,\n    productId,\n    quantity,\n    item,\n    variation\n}: Props) => {\n\n\n    const [productDetailState, handleProductFetch] = useHandleFetch(\n        {},\n        'productDetailById'\n    );\n    const [product, setProduct] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    const [modifiedPrice, setModifiedPrice] = useState('');\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\n\n\n\n    console.log('productDetailStateByOrder',productDetailState); \n    \n    useEffect(() => {\n        setIsLoading(true);\n        const getAndSetProduct = async () => {\n            const product = await handleProductFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: productId,\n                    },\n                },\n            });\n\n            // @ts-ignore\n            setProduct(product);\n            setIsLoading(false);\n        };\n        getAndSetProduct()\n    }, []);\n\n\n\n    // useEffect(() => {\n    //     const positionInAttribute = () => {\n    //         return attributeList.map(item => item.id).indexOf(attribute.id);\n    //     }\n\n    //     const index = positionInAttribute();\n\n    //     const updatedItem = Object.assign({}, attributeList[index], { ...attributeItem });\n    //     const updateProductList = [...attributeList.slice(0, index), updatedItem, ...attributeList.slice(index + 1)];\n    //     setProductList(updateProductList);\n\n    // }, [attributeItem])\n\n\n    const handleAttributeDelete = () => {\n\n        const updateProductList = productList.filter(item => item._id !== productId);\n        setProductList(updateProductList);\n    }\n\n\n    const handleChangeQuantity = async (value) => {\n        if (value === 'minus') {\n            if (quantity === 1) {\n                return;\n            }\n\n            const positionInAttribute = () => {\n                return productList.map(item => item._id).indexOf(productId);\n            }\n\n            const index = positionInAttribute();\n\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: --quantity });\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\n            setProductList(updateAttributeList);\n\n\n        } else {\n            const positionInAttribute = () => {\n                return productList.map(item => item._id).indexOf(productId);\n            }\n\n            const index = positionInAttribute();\n\n            const updatedItem = Object.assign({}, productList[index], { ...item, quantity: ++quantity });\n            const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\n            setProductList(updateAttributeList)\n\n        }\n    };\n\n\n    const convertAttributeValuesToStringValue = (attribute) => {\n        const value = [];\n\n        let attributeValues = Object.values(attribute);\n        attributeValues.forEach(attributeValue => {\n            // @ts-ignore\n            value.push(attributeValue)\n        })\n\n        return value.join(',');\n    };\n\n\n\n\n    const getPricingOptions = (pricing) => {\n        if (pricing && pricing.length > 0) {\n            const pricingOptions = [];\n\n            pricing.forEach(pricingItem => {\n\n                if (Object.values(pricingItem.attribute).length > 0 && pricingItem._id) {\n                    let pricingOption = {\n                        value: pricingItem._id,\n                        label: `${convertAttributeValuesToStringValue(pricingItem.attribute) || ''}`\n                    }\n                    // @ts-ignore\n                    pricingOptions.push(pricingOption)\n                }\n\n            })\n\n            return pricingOptions;\n        }\n        else return false\n    };\n\n    const pricingOptions = item && Object.keys(item).length > 0 ? getPricingOptions(item.pricing) : [];\n\n\n    console.log('pricingOptions', pricingOptions);\n\n    const handleAttributeChange = (tagId) => {\n        setSelectedVariationId(tagId);\n\n        const positionInAttribute = () => {\n            return productList.map(item => item._id).indexOf(productId);\n        }\n\n        const index = positionInAttribute();\n\n        const updatedItem = Object.assign({}, productList[index], { ...item, quantity: 1 });\n        const updateAttributeList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\n        setProductList(updateAttributeList);\n\n    }\n\n\n    useEffect(() => {\n\n        const getPriceByVariationId = (id) => {\n            const pricing = item && Object.keys(item).length > 0 ? item.pricing : false;\n            if (pricing) {\n                const priceItem = pricing.find(pricingItem => pricingItem._id === id);\n                console.log('priceItem', id);\n\n                if (priceItem && priceItem.price.regular) {\n                    return priceItem.price.offer\n                        && parseInt(priceItem.price.offer)\n                        ? priceItem.price.offer : priceItem.price.regular\n                }\n                else return false;\n            }\n        }\n\n        if (selectedVariationId) {\n            const price = getPriceByVariationId(selectedVariationId);\n            setModifiedPrice(price);\n        }\n\n    }, [selectedVariationId]);\n\n\n\n    console.log('modifiedPrice', modifiedPrice);\n    return (\n        <>\n\n            {item && Object.keys(item).length > 0 && (\n                <div className='cart-item' key={''}>\n                    <div className='cart-item-quantityCounter'>\n                        <i\n                            onClick={() => {\n                                handleChangeQuantity('plus');\n                            }}\n                            className='fa fa-chevron-up'\n\n                        ></i>\n                        <p className='item-amount'>{quantity}</p>\n                        <i\n                            onClick={() => {\n                                handleChangeQuantity('minus');\n                            }}\n                            className='fa fa-chevron-down'\n\n                        ></i>\n                    </div>\n\n\n                    <img\n\n                        src={item['cover'] && item['cover']}\n                        alt='Img'\n                        style={{\n                            cursor: 'pointer',\n                        }}\n                    />\n                    <div className='cart-item-info'>\n                        <h4\n\n                        >\n                            {item['name']}\n                        </h4>\n                        <h5\n                        >\n                            {modifiedPrice || item['price']}\n                        </h5>\n\n\n                        {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\n                            <>\n                                <span\n                                    onClick={() => handleAttributeChange(tag.value)}\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\n                                    {tag.label}\n                                </span>\n                            </>\n                        ))}\n\n                        {/* <span\n             style={{\n               display: 'inline-block',\n               background: '#fafafa',\n               padding: '3px 3px',\n               borderRadius: 1,\n               fontSize: '12px',\n               marginRight: '5px',\n               color: '#777',\n               marginTop: '5px'\n             }}\n           >\n             15KG\n             </span> */}\n\n                    </div>\n                    {/* <span\n                        onClick={handleAttributeDelete}\n                        className='remove-item' >\n                        <i className='fa fa-times'></i>\n                    </span> */}\n\n                </div>\n            )}\n        </>\n    );\n};\n\n// @ts-ignore\nexport default CartOverLayCartItem;\n","import React from 'react'\n\n\n// import components\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\nimport Empty from \"../../components/Empty\";\n\nimport {\n    ShopOutlined\n} from '@ant-design/icons';\n\n\ninterface Props {\n    productList?: any;\n    setProductList?: any;\n}\n\nconst AddNewOrderSummary = ({\n    setProductList,\n    productList\n}: Props) => {\n    return (\n        <div\n            style={{\n                // @ts-ignore\n                flexDirection: 'flex'\n            }}\n            className='addOrderContainer__container-orderSummary'>\n            <div className='addOrderContainer__container-productItemContainer'>\n                {productList && productList.length > 0 && productList.map(item => {\n                    return <AddNewOrderProductItem\n                        setProductList={setProductList}\n                        productList={productList}\n                        productId={item._id}\n                        quantity={item.quantity}\n                        item={item}\n                        variation={item.variation}\n                    />;\n                })}\n\n                {!(productList.length > 0) && (\n                    <div style={{\n                        marginLeft: '32px'\n                    }}>\n                        <Empty title='No Product Added' height={150} />\n                    </div>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default AddNewOrderSummary\n","import React, { useState, useEffect } from 'react';\n\n// import hooks \nimport { useHandleFetch } from '../../hooks';\n\n\n// import libraries \nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { message, Tooltip, Modal, Tabs  } from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\nimport {\n    CheckCircleOutlined,\n    FileImageFilled,\n    PlusOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined\n} from '@ant-design/icons';\n\n\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport InputSmall from '../../components/Field/InputSmall';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from \"../../components/MediaLibrary\";\nimport DatePicker from \"../../components/Field/DatePicker\";\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\nimport Tags from \"../product/Tags\";\nimport Brands from \"../product/Brands\";\nimport Categories from \"../product/Categories\";\nimport Pricing from \"../product/Pricing\";\nimport SelectProducts from \"./SelectProducts\";\nimport SelectedProductItems from \"./SelectedProductItems\";\nimport MetaTags from \"../category/MetaTags\";\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\n\nconst initialValues = {\n    name: \"\",\n    bundlePrice: null,\n    startDate: \"\",\n    endDate: \"\",\n    description: '',\n    bnName: '',\n\tbnDescription: '',\n\tmetaTitle: '',\n\tbnMetaTitle: '',\n\tmetaDescription: '',\n\tbnMetaDescription: '',\n\tmetaTags: '',\n\tbnMetaTags: '',\n}\n\n\n\ninterface Props {\n    addNewCategoryVisible: any;\n    setAddNewCategoryVisible: any;\n    productList?: any;\n    setProductList?: any;\n}\n\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productList: bundleList, setProductList: setBundleList }: Props) => {\n\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'addBundle');\n    const [visible, setvisible] = useState(false);\n    const [myImages, setmyImages] = useState(false);\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n    const [categoryids, setcategoryIds] = useState([]);\n    const [tagIds, setTagIds] = useState([]);\n    const [brandId, setBrandId] = useState('');\n    const [pricing, setPricing] = useState([]);\n    const [coverImageId, setCoverImageId] = useState('');\n    const [categoryOptions, setCategoryOptions] = useState([]);\n    const [selectedTags, setSelectedTags] = useState([]);\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const [description, setDescription] = useState('');\n\tconst [bnDescription, setBNDescription] = useState('');\n    const [productIds, setProductIds] = useState([]);\n    const [productList, setProductList] = useState([]);\n\tconst [metaTags,setMetaTags] = useState([]);\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\n\n    const [price, setPrice] = useState({\n        regular: null,\n        offer: null,\n    });\n\n\n    const makeEmptyCategoryOptions = (setEmpty) => {\n        setEmpty([]);\n    }\n\n    const handleSubmit = async (values: any, actions: any) => {\n        // @ts-ignore\n        const imagesIds = myImages ? myImages.map(image => {\n            return image.id;\n        }) : [];\n\n        console.log('productList',productList);\n\n        const products = productList.length > 0 ? productList.map(product => {\n            return {\n                _id: product._id,\n                variation: product.variation,\n                quantity: product.quantity,\n            }\n        }) : [];\n\n\n        const addProductRes = await handleAddProductFetch({\n            body: {\n                name: values.name.trim(),\n                category: categoryids,\n                tags: tagIds,\n                brand: brandId,\n                price: price,\n                description: description,\n                model: values.model,\n                unit: values.unit,\n                image: imagesIds,\n                products,\n                // startDate, endDate,\n                metaTitle: values.metaTitle,\n\t\t\t\tmetaDescription: values.metaDescription,\n\t\t\t\tmetaTags: metaTags.join(','),\n\n\t\t\t\t\n\t\t\t\tbn: {\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\n\t\t\t\t\tname: values.bnName.trim(),\n\t\t\t\t\tunit: values.metaUnit,\n\t\t\t\t\tdescription: values.bnDescription,\n                }\n                \n\n            }\n        });\n\n\n        // @ts-ignore\n        if (addProductRes && addProductRes.status === 'ok') {\n            openSuccessNotification('Bundle Created');\n            console.log('addProductBundleRes',addProductRes);\n\n            setBundleList([{\n                id: addProductRes['_id'] || '',\n                key: addProductRes['_id'] || '',\n                name: addProductRes['name'] || '',\n                description: addProductRes['description'] || '',\n                // @ts-ignore\n                ...addProductRes\n            },...bundleList])\n            setAddNewCategoryVisible(false)\n            // @ts-ignore\n            setmyImages([]);\n            setCoverImageId('');\n            setPricing([]);\n            setTagIds([]);\n            setSelectedTags([]);\n            setBrandId(\"\");\n            setcategoryIds([]);\n            setCategoryOptions([]);\n            actions.resetForm();\n        }\n        else {\n            // openErrorNotification();\n        }\n\n        actions.setSubmitting(false);\n\n\n    };\n\n\n    console.log('productlistbundle',productList)\n\n\n\n    useEffect(() => {\n        if (!addProductState['isLoading']) {\n            const error = addProductState['error'];\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\n                const errors =\n                    Object.values(error['error']).length > 0\n                        ? Object.values(error['error'])\n                        : [];\n                errors.forEach((err, i) => {\n                    if (typeof err === 'string') {\n                        openErrorNotification(err)\n                    }\n                    else if (typeof err === 'object') {\n                        if (err && Object.keys(err).length > 0) {\n                            const errs = Object.values(err);\n                            errs.forEach(err => {\n                                openErrorNotification(err)\n                            })\n\n                        }\n                    }\n                });\n            }\n        }\n    }, [addProductState])\n\n\n\n\n\n    useEffect(() => {\n\n        if (productIds && productIds.length > 0 && productList) {\n            if (productIds.length > productList.length) {\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\n                console.log('variation', variation)\n\n                setProductList([...productList, {\n                    ...productIds[productIds.length - 1],\n                    _id: productIds[productIds.length - 1]['id'],\n                    variation: variation,\n                    quantity: 1\n                }]);\n            }\n\n\n            else if (productIds.length < productList.length) {\n                console.log('productIds', productIds);\n                console.log('productList', productList);\n\n                const newProductList = productList.filter(item => {\n                    let isTrue = false;\n                    productIds.forEach(product => {\n                        if (product.id === item._id) {\n                            isTrue = true;\n                        }\n                    });\n                    return isTrue;\n                })\n                setProductList(newProductList);\n\n            }\n\n        }\n        else {\n            setProductList([]);\n        }\n        // console.log('productIds', productIds)\n\n\n    }, [productIds])\n\n\n\n\n\n\n    const handleCancel = (e: any) => {\n        setAddNewCategoryVisible(false);\n    };\n\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!values.name || !(pricing.length > 0) || !isValid) {\n            return true;\n        }\n        return false;\n    }\n\n\n    const handleImagesDelete = (id) => {\n        // @ts-ignore\n        const newImages = myImages && myImages.filter(image => {\n            return image.id !== id;\n        })\n\n        setmyImages(newImages);\n    }\n\n    const handleDeleteFromSelectedImage = () => {\n\n    };\n\n    const handleThumbnailImageDelete = (id) => {\n        // @ts-ignore\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\n            return image.id !== id;\n        })\n\n        if (newImages.length > 0) {\n            setmyThumbnailImage(newImages);\n\n        }\n        else setmyThumbnailImage(false);\n    }\n\n\n\n\n\n    const handleAddPricing = (priceItem) => {\n        setPricing([{\n            ...priceItem,\n            id: pricing.length\n        }, ...pricing])\n        message.info('Product Pricing Added');\n    }\n\n\n    const handleDeletePricing = (id) => {\n        const newPricing = pricing.filter(item => item.id !== id);\n        setPricing(newPricing);\n        message.info('Product Pricing Deleted');\n    }\n\n\n\n    const isCategoryInValid = () => {\n        if (addProductState.error['error']['category'] && !categoryids && categoryids.length) {\n            return true;\n        }\n        else if (categoryids && categoryids.length > 0) {\n            return false;\n        }\n    }\n\n\n    const handleStartDataChange = (date, dateString) => {\n        setStartDate(dateString);\n        // console.log('date', date, dateString);\n    }\n\n    const handleEndDataChange = (date, dateString) => {\n        setEndDate(dateString);\n        // console.log('date', date, dateString);\n    }\n\n\n    \n\n\n\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={\n                { ...initialValues }\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                            style={{\n                                top: '40px',\n\n                            }}\n                            bodyStyle={{\n                                margin: 0,\n                                padding: 0,\n                            }}\n                            width={'70vw'}\n                            title=\"Add New Bundle\"\n                            visible={addNewCategoryVisible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Create'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                            }}\n                        >\n\n\n                            <section className='addProductGridContainer'>\n                                <div className='addProductGridContainer__left'>\n                                    <div className='addProductGridContainer__name'>\n                                        <div className='addProductGridContainer__item-header'>\n                                            <h3>\n                                                Bundle Information *\n\t\t\t                                </h3>\n\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\n                                                <CheckCircleOutlined />\n                                            </div>\n                                        </div>\n                                        <div className='addProductGridContainer__item-body'>\n                                        <Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\n\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n                                    \n\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\n                                             </h3>\n\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\n\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\n                                             </h3>\n\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\n                                            {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n                                            <div style={{\n                                                marginBottom: '15px'\n                                            }}></div>\n                                            {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\n                                                <h4>\n                                                    Price *\n\t\t\t                                \t</h4>\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\n                                                        <InputSmall\n                                                            label='Regular'\n                                                            value={price.regular}\n                                                            name='regular'\n                                                            onChange={(e) => setPrice({\n                                                                ...price,\n                                                                regular: e.target.value\n                                                            })}\n                                                        />\n\n\n                                                    </div>\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\n\n                                                        <InputSmall\n                                                            label='Offer'\n                                                            value={price.offer}\n                                                            name='offer'\n                                                            onChange={(e) => setPrice({\n                                                                ...price,\n                                                                offer: e.target.value\n                                                            })}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n\n\n                                            {/* <div style={{\n                                                display: 'flex',\n                                                justifyContent: 'space-between'\n                                            }}>\n                                                <div style={{\n                                                    width: '48%',\n                                                }}>\n                                                    <DatePicker\n                                                        date={startDate}\n                                                        label='Start Date'\n                                                        onChange={handleStartDataChange} />\n\n                                                </div>\n                                                <div style={{\n                                                    width: '48%'\n                                                }}>\n\n                                                    <DatePicker\n                                                        date={endDate}\n                                                        label='End Date'\n                                                        onChange={handleEndDataChange} />\n\n                                                </div>\n                                            </div> */}\n\n\n                                        </div>\n\n\n\n                                    </div>\n\n                                    <div className='addProductGridContainer__price'>\n                                        <div className='addProductGridContainer__item-header'>\n                                            <h3>\n                                                Products\n\t\t                                    </h3>\n\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\n                                                <CheckCircleOutlined />\n                                            </div>\n                                        </div>\n\n\n                                        <div className='addProductGridContainer__item-body'>\n\n                                            <h3 className='inputFieldLabel'>\n                                                Products\n                                            </h3>\n                                            <SelectProducts\n                                                setProductIds={setProductIds}\n                                                productIds={productIds}\n                                            />\n\n                                            <div style={{\n                                                marginTop: \"15px\"\n                                            }}></div>\n\n                                            <h3 className='inputFieldLabel'>\n                                                Selcted Products\n                                            </h3>\n\n                                            <SelectedProductItems\n                                                productList={productList}\n                                                setProductList={setProductList}\n                                            />\n                                        </div>\n                                    </div>\n\n\n\n\n                                    <div className='addProductGridContainer__image'>\n\n                                        <div className='addProductGridContainer__item-header'>\n                                            <h3>\n                                                Image\n                                            </h3>\n\n                                            <Tooltip\n                                                placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\n                                                <a href='###'>\n                                                    <InfoCircleOutlined />\n                                                </a>\n                                            </Tooltip>\n                                        </div>\n                                        <div className='addProductGridContainer__item-body'>\n                                            <div className='aboutToUploadImagesContainer'>\n                                                {myImages &&\n                                                    // @ts-ignore\n                                                    myImages.length > 0 && myImages.map((image, index) => {\n                                                        return (\n                                                            <div className='aboutToUploadImagesContainer__item'>\n                                                                <div\n                                                                    className='aboutToUploadImagesContainer__item-imgContainer'\n                                                                    onClick={() => setCoverImageId(image.id)}\n                                                                >\n                                                                    <img src={image.cover} alt={image.alt} />\n                                                                </div>\n\n                                                                <span\n                                                                    onClick={() => handleImagesDelete(image.id)}\n                                                                    className='aboutToUploadImagesContainer__item-remove'>\n                                                                    <CloseOutlined />\n                                                                </span>\n\n\n                                                                {coverImageId === image.id ? (\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\n                                                                        <CheckOutlined />\n                                                                    </span>\n                                                                ) : !coverImageId && index === 0 && (\n                                                                    <span className='aboutToUploadImagesContainer__item-cover'>\n                                                                        <CheckOutlined />\n                                                                    </span>\n                                                                )}\n                                                            </div>\n                                                        )\n                                                    })}\n\n\n                                                <Tooltip\n                                                    title={'Attach images'}>\n\n                                                    <div\n                                                        onClick={() => {\n                                                            setvisible(true);\n                                                            setisModalOpenForImages(true);\n                                                            setisModalOpenForThumbnail(false);\n                                                        }}\n                                                        className='aboutToUploadImagesContainer__uploadItem'>\n                                                        {/* <FileAddOutlined />\n                                                            <FileImageTwoTone />\n                                                            <FileImageOutlined /> */}\n                                                        <FileImageFilled />\n                                                        {/* <h5>\n                                                                Select From Library\n                                                        <     /h5> */}\n                                                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                                            <PlusOutlined />\n                                                        </span>\n                                                    </div>\n                                                </Tooltip>\n\n\n\n                                            </div>\n                                        </div>\n                                    </div>\n\n\n\n                                    <div className='addProductGridContainer__image'>\n\n<div className='addProductGridContainer__item-header'>\n    <h3>\n    Meta Data\n</h3>\n\n    <Tooltip\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\n        <a href='###'>\n            <InfoCircleOutlined />\n        </a>\n    </Tooltip>\n</div>\n<div className='addProductGridContainer__item-body'>\n\n                \n<Input\nlabel='Meta title'\nvalue={values.metaTitle}\nplaceHolder={'category...'}\nname='metaTitle'\nisError={(touched.metaTitle && errors.metaTitle) ||\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\n\nerrorString={(touched.metaTitle && errors.metaTitle) ||\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('metaTitle')\n}}\n/>\n\n<Input\nlabel='BN Meta title'\nvalue={values.bnMetaTitle}\nplaceHolder={'ক্যাটাগড়ি...'}\nname='bnMetaTitle'\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\n\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('bnMetaTitle');\n}}\n/>\n\n<TextArea\nlabel='Meta description'\nvalue={values.metaDescription}\nplaceholder={'meta...'}\nname='metaDescription'\nisError={(touched.metaDescription && errors.metaDescription) ||\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\n\nerrorString={(touched.metaDescription && errors.metaDescription) ||\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('metaDescription');\n}}\n/>\n\n<TextArea\nlabel='BN Meta Description'\nvalue={values.bnMetaDescription}\nplaceholder={'এইয় মেট...'}\nname='bnMetaDescription'\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\n\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('bnMetaDescription');\n}}\n/>\n\n<h3 className='inputFieldLabel'>\nMeta Tags (grocery,fashion)\n</h3>\n\n<MetaTags\n// @ts-ignore\nsetTags={setMetaTags}\ntags={metaTags}\n/>\n\n<div style={{\nmarginTop:'15px'\n}}></div>\n\n<h3 className='inputFieldLabel'>\nBN Meta Tags (মুদিখানা,ফ্যাশন)\n</h3>\n\n<MetaTags\n// @ts-ignore\nsetTags={setBnMetaTags}\ntags={bnMetaTags}\n/>\n</div>\n</div>\n\n\n\n                                </div>\n                                <div className='addProductGridContainer__right'>\n                                    <div className='addProductGridContainer__category'>\n\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Categories *\n\t\t\t                                \t</h3>\n\n                                                <Tooltip\n                                                    color='red'\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\n                                                    placement=\"left\" title={'Select at least one category'}>\n                                                    <div className={!(categoryids.length > 0)\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\n                                                        <CheckCircleOutlined />\n                                                    </div>\n                                                </Tooltip>\n\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Categories\n                                                    setCategoryOptions={setCategoryOptions}\n                                                    categoryOptions={categoryOptions}\n                                                    setcategoryIds={setcategoryIds} />\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                    <div className='addProductGridContainer__tag'>\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Tags\n\t\t\t\t</h3>\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Tags\n                                                    setSelectedTags={setSelectedTags}\n                                                    selectedTags={selectedTags}\n                                                    setTagIds={setTagIds} />\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className='addProductGridContainer__brand'>\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Brand\n\t\t\t\t</h3>\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Brands setBrandId={setBrandId} />\n                                            </div>\n                                        </div>\n\n\n                                    </div>\n\n                                </div>\n                            </section>\n\n\n                        </Modal>\n\n                        <MediaLibrary\n                            setvisible={setvisible}\n                            visible={visible}\n                            setmyImages={setmyImages}\n                            myImages={myImages}\n                            setmyThumbnailImage={setmyThumbnailImage}\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\n                            isModalOpenForImages={isModalOpenForImages}\n\n                        />\n                    </>\n                )}\n        </Formik>\n\n\n\n\n    );\n};\n\nexport default AddNewProduct;\n\n\n\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n\t[regular input field] [offer inputfield]\n\nStock [title]\n\t[available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n\t[add attributes name]\n\t\t[add attrubutes value]\n\n\t[add attributes name]\n\t\t[add attrubutes value\n\n*///","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport { Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\nimport Moment from 'react-moment';\n\n\n\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n\n\n/// import hooks\nimport { useFetch, useHandleFetch } from \"../../hooks\";\n\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport ProductBundleQuickEdit from \"./ProductBundleQuickEdit\"\nimport AddNewProductBundle from \"./AddNewProductBundle\"\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Bundle Created',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.error({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\n\nconst initialValues = {\n    name: '',\n    description: ''\n}\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\n\nconst MyTable = ({ data, setTagList }) => {\n    const [visible, setvisible] = useState(false);\n    const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteBundle');\n\n    const history = useHistory();\n\n\n    const handleDeleteTag = async (id) => {\n        const deleteTagRes = await handleDeleteTagFetch({\n            urlOptions: {\n                placeHolders: {\n                    id,\n                }\n            }\n        });\n\n\n\n        // @ts-ignore\n        if (deleteTagRes && deleteTagRes.status === 'ok') {\n            openSuccessNotification('Deleted Bundle');\n            const newtagList = data.filter(item => item.id !== id);\n            setTagList(newtagList);\n        }\n\n\n    }\n\n\n    const handleOk = (e: any) => {\n        setvisible(false);\n\n    };\n\n    const handleCancel = (e: any) => {\n        setvisible(false);\n    };\n\n\n\n    return (\n        <>\n            <Table\n                // expandable={{\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                //     rowExpandable: record => record.name !== 'Not Expandable',\n                //   }}\n                // bordered={true}\n                size='small'\n                // pagination={false}\n                dataSource={data}\n            >\n\n                <Column\n                    title=\"\"\n                    dataIndex=\"cover\"\n                    key=\"id\"\n                    width={'80px'}\n\n                    className='classnameofthecolumn'\n\n                    render={(cover, record: any) => (\n                        <>\n                            <img\n                                onClick={() => {\n                                    history.push(`/admin/bundle/${record.id}`)\n                                    setactiveCategoryForEdit(record)\n                                }}\n                                src={cover} alt='cover img' style={{\n                                    height: '40px',\n                                    width: '40px',\n                                    objectFit: \"contain\",\n                                    borderRadius: '3px',\n                                    cursor: 'pointer'\n                                }} />\n                        </>\n                    )}\n                />\n\n                <Column\n                    title=\"Name\"\n                    dataIndex=\"name\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n                    render={(text, record: any) => (\n                        <>\n\n                            <h4\n                                onClick={() => {\n                                    history.push(`/admin/bundle/${record.id}`)\n                                    // setBrandDetailVisible(true);\n                                    setactiveCategoryForEdit(record)\n                                }}\n                                style={{\n                                    fontWeight: 400,\n                                    color: '#555',\n                                    cursor: 'pointer'\n                                }}>\n                                {text}\n                            </h4>\n\n\n                        </>\n                    )}\n                />\n\n                <Column\n                    title=\"Price\"\n                    dataIndex=\"price\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n\n                />\n\n\n                <Column\n                    title=\"Product\"\n                    dataIndex=\"productCount\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n                />\n\n                {/* <Column\n                    title=\"Start Date\"\n                    dataIndex=\"startDate\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n                    render={(text, record: any) => (\n                        <>\n                            <h4\n                                style={{\n                                    fontWeight: 400,\n                                    color: '#555',\n                                    cursor: 'pointer'\n                                }}>\n                                <Moment >\n                                    {text}\n                                </Moment>\n\n                            </h4>\n                        </>\n                    )}\n\n                />\n\n                <Column\n                    title=\"End Date\"\n                    dataIndex=\"endDate\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n\n                /> */}\n\n                <Column\n\n                    className='classnameofthecolumn'\n                    title=\"\"\n                    key=\"action\"\n                    align='right'\n                    render={(text, record: any) => (\n                        <Space size=\"middle\">\n                            <a href='##'>\n                                <Tooltip placement=\"top\" title='Quick Edit Bundle'>\n                                    <span className='iconSize' onClick={() => {\n                                        setvisible(true)\n                                        setactiveCategoryForEdit(record);\n                                    }}>\n                                        <EditOutlined />\n                                    </span>\n                                </Tooltip>\n                            </a>\n\n\n\n                            <Popconfirm\n                                onConfirm={() => handleDeleteTag(record.id)}\n                                title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\">\n                                <span\n                                    className='iconSize iconSize-danger'\n                                >\n                                    <DeleteOutlined />\n                                </span>\n                            </Popconfirm>\n                        </Space>\n                    )}\n                />\n            </Table>\n\n\n\n\n\n\n            {activeCategoryForEdit && <ProductBundleQuickEdit\n             productList={data}\n             setProductList={setTagList}\n             setAddNewCategoryVisible={setvisible}\n             addNewCategoryVisible={visible}\n             productDetailData={activeCategoryForEdit} />}\n        </>\n    )\n}\n\n\n\n\ninterface Props { }\n\nconst TagList = ({ }: Props) => {\n\n\n    const [tagList, setTagList] = useState([]);\n\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'bundleList');\n\n\n    useEffect(() => {\n        const setTags = async () => {\n            const tags = await handleTagListFetch({\n                urlOptions:{\n                    params: {\n                      sortItem: 'added',\n                      sortOrderValue: '-1',\n                      productType: 'bundle'\n                    }\n                    }\n            });\n            // @ts-ignore\n            setTagList(tags);\n        }\n        setTags();\n    }, [])\n\n\n\n    const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!values.name || !isValid) {\n            return true;\n        }\n        return false;\n    }\n\n\n    const handleOkAddNewCategory = (e: any) => {\n        setAddNewCategoryVisible(false);\n\n    };\n\n    const handleCancelAddNewCategory = (e: any) => {\n        setAddNewCategoryVisible(false);\n    };\n\n    const handleSearch = (value) => {\n        if (tagState.data.length > 0) {\n            const newTagList = tagState.data.filter(item => item.name.toLowerCase().includes(value.toLowerCase()));\n            setTagList(newTagList);\n        }\n\n    }\n\n    return (\n        <>\n\n            <div className='categoryListContainer'>\n                <div className='categoryListContainer__header'>\n                    <div className='categoryListContainer__header-searchBar-tag'>\n                        <h2 className='categoryListContainer__header-title'>\n                            Bundles\n                       </h2>\n\n                        <Search\n                            enterButton={false}\n                            className='searchbarClassName'\n                            placeholder=\"search bundles..\"\n                            onChange={e => handleSearch(e.target.value)}\n                        />\n                    </div>\n                    <Button\n                        // type=\"primary\"\n                        className='btnPrimaryClassNameoutline'\n                        icon={<PlusOutlined />}\n                        onClick={() => setAddNewCategoryVisible(true)}\n                    >\n                        Add New\n\t\t\t\t\t</Button>\n                </div>\n                <div className='categoryListContainer__categoryList'>\n                    {tagState.done && tagList.length > 0 && <MyTable\n                        setTagList={setTagList}\n                        data={tagList} />}\n                    {tagState.isLoading && <DataTableSkeleton />}\n\n\n                    {tagState.done && !(tagList.length > 0) && (\n                        <div style={{\n                            marginTop: '200px'\n                        }}>\n                            <Empty description='No Bundle found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            <AddNewProductBundle\n                productList={tagList}\n                setProductList={setTagList}\n                addNewCategoryVisible={addNewCategoryVisible}\n                setAddNewCategoryVisible={setAddNewCategoryVisible}\n\n            />\n        </>\n    );\n};\n\nexport default TagList;\n","import React, { useState, useEffect } from 'react';\n\n// import hooks \nimport { useHandleFetch } from '../../hooks';\n\n\n// import libraries \nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { message, Tooltip, Modal, Tabs, Spin  } from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\nimport {\n    CheckCircleOutlined,\n    FileImageFilled,\n    PlusOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined\n} from '@ant-design/icons';\n\n\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport InputSmall from '../../components/Field/InputSmall';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from \"../../components/MediaLibrary\";\nimport DatePicker from \"../../components/Field/DatePicker\";\nimport { openSuccessNotification, openErrorNotification } from \"../../components/Notification\";\nimport Tags from \"../product/Tags\";\nimport Brands from \"../product/Brands\";\nimport Categories from \"../product/Categories\";\nimport Pricing from \"../product/Pricing\";\nimport SelectProducts from \"./SelectProducts\";\nimport SelectedProductItems from \"./SelectedProductItems\";\nimport MetaTags from \"../category/MetaTags\";\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\n\nconst initialValues = {\n    name: \"\",\n    bundlePrice: null,\n    startDate: \"\",\n    endDate: \"\",\n    description: '',\n    bnName: '',\n\tbnDescription: '',\n\tmetaTitle: '',\n\tbnMetaTitle: '',\n\tmetaDescription: '',\n\tbnMetaDescription: '',\n\tmetaTags: '',\n\tbnMetaTags: '',\n}\n\n\n\ninterface Props {\n    addNewCategoryVisible: any;\n    setAddNewCategoryVisible: any;\n    productDetailData?:any; \n}\n\nconst AddNewProduct = ({ addNewCategoryVisible, setAddNewCategoryVisible, productDetailData }: Props) => {\n\n  \n\n    const [updateProductState, handleUpdateProductFetch] = useHandleFetch({}, 'updateProduct');\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\n    const [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n\n    const [productList,setProductList] = useState([]);\n    const [visible, setvisible] = useState(false);\n    const [myImages, setmyImages] = useState(false);\n    const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n    const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n    const [categoryids, setcategoryIds] = useState([]);\n    const [tagIds, setTagIds] = useState([]);\n    const [brandId, setBrandId] = useState('');\n    const [pricing, setPricing] = useState([]);\n    const [coverImageId, setCoverImageId] = useState('');\n    const [categoryOptions, setCategoryOptions] = useState([]);\n    const [selectedTags, setSelectedTags] = useState([]);\n    const [date, setDateFeild] = useState('');\n    const [time, setTimeFeild] = useState('');\n    const [description, setDescription] = useState('');\n\tconst [bnDescription, setBNDescription] = useState('');\n\tconst [metaTags,setMetaTags] = useState([]);\n\tconst [bnMetaTags,setBnMetaTags] = useState([]);\n\tconst [editpricingItem,setEditPricingItem] = useState({}); \n\tconst [pricingTagActiveKey,setpricingTagActiveKey] = useState('2');\n\tconst [isPricingEditActive, seTisPricingEditActive] = useState(false); \n\n    const [productIds,setProductIds] = useState([]); \n\n\n\n    const [addProductState, handleAddProductFetch] = useHandleFetch({}, 'updateBundle');\n\n    useEffect(() => {\n        const getProductDetail = async () => {\n            await handleProductDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: productDetailData.id\n                    }\n                }\n            })\n        };\n\n        getProductDetail();\n\n    }, [productDetailData]);\n\n\n    const [price, setPrice] = useState({\n        regular: null,\n        offer: null,\n    });\n\n\n\n\n    const handleSubmit = async (values: any, actions: any) => {\n        // @ts-ignore\n        const imagesIds = myImages ? myImages.map(image => {\n            return image.id;\n        }) : [];\n\n        console.log('productList',productList);\n\n        const products = productList.length > 0 ? productList.map(product => {\n            return {\n                _id: product._id,\n                variation: product.variation,\n                quantity: product.quantity,\n            }\n        }) : [];\n\n    \n            if (productDetailData && Object.keys(productDetailData).length > 0) {\n                const aboutToUpdatedImageIds = []; \n    \n                if(imagesIds && imagesIds.length > 0){\n                    imagesIds.forEach(imageId => {\n                        if(productDetailData && productDetailData['image']){\n                            if(!productDetailData['image'].includes(imageId)){\n                                aboutToUpdatedImageIds.push(imageId)\n                            }\n                        }\n                    });\n                }\n    \n          \n                if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n                    await handleAttachImageToItemMultipleFetch({\n                        urlOptions: {\n                            placeHolders: {\n                                collection: 'product',\n                                itemId: productDetailData.id\n                            }\n                        },\n                        body: {\n                            image: aboutToUpdatedImageIds\n                        }\n                    });\n                }\n                else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\n                    await handleAttachImageToItemSingleFetch({\n                        urlOptions: {\n                            placeHolders: {\n                                imageId: aboutToUpdatedImageIds[0].id,\n                                collection: 'product',\n                                itemId: productDetailData.id\n                            }\n                        }\n                    });\n                }\n            }\n        \n            \n\n\n\n        const addProductRes = await handleAddProductFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: productDetailData.id\n                }\n            },\n            body: {\n                name: values.name.trim(),\n                category: categoryids,\n                tags: tagIds,\n                brand: brandId,\n                price: price,\n                description: description,\n                model: values.model,\n                unit: values.unit,\n                image: imagesIds,\n                products,\n\n                metaTitle: values.metaTitle,\n\t\t\t\tmetaDescription: values.metaDescription,\n\t\t\t\tmetaTags: metaTags.join(','),\n\n\t\t\t\t\n\t\t\t\tbn: {\n\t\t\t\t\tmetaTitle: values.bnMetaTitle,\n\t\t\t\t\tmetaDescription: values.bnMetaDescription,\n\t\t\t\t\tmetaTags: bnMetaTags.join(','),\n\t\t\t\t\tname: values.bnName.trim(),\n\t\t\t\t\tunit: values.metaUnit,\n\t\t\t\t\tdescription: values.bnDescription,\n                }\n                \n                \n                // startDate, endDate,\n            }\n        });\n\n\n        // @ts-ignore\n        if (addProductRes && addProductRes.status === 'ok') {\n            openSuccessNotification('Bundle Updated');\n  \n\n            setAddNewCategoryVisible(false)\n\n\n            // updat bundle detail data\n\n\n\n\n            // @ts-ignore\n            setmyImages([]);\n            setCoverImageId('');\n            setPricing([]);\n            setTagIds([]);\n            setSelectedTags([]);\n            setBrandId(\"\");\n            setcategoryIds([]);\n            setCategoryOptions([]);\n            actions.resetForm();\n        }\n        else {\n            // openErrorNotification();\n        }\n\n        actions.setSubmitting(false);\n\n\n    };\n\n\n\n\n\n    useEffect(() => {\n        if (!addProductState['isLoading']) {\n            const error = addProductState['error'];\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\n                const errors =\n                    Object.values(error['error']).length > 0\n                        ? Object.values(error['error'])\n                        : [];\n                errors.forEach((err, i) => {\n                    if (typeof err === 'string') {\n                        openErrorNotification(err)\n                    }\n                    else if (typeof err === 'object') {\n                        if (err && Object.keys(err).length > 0) {\n                            const errs = Object.values(err);\n                            errs.forEach(err => {\n                                openErrorNotification(err)\n                            })\n\n                        }\n                    }\n                });\n            }\n        }\n    }, [addProductState])\n\n\n\n    useEffect(()=>{\n        if(productDetailState['data'] && productDetailState['data']['products'] && productDetailState['data']['products'].length > 0){\n            const productIds = productDetailState['data']['products'].map(item => {\n              return {\n                ...item,\n                id: item._id,\n              }\n            }); \n            setProductIds(productIds); \n            const productList = productDetailState['data'].products.map(item => {\n                return {\n                    _id: item._id,\n                    variation: item.variation,\n                    quantity: item.quantity,\n                    totalPrice: item.totalPrice \n                }\n            }); \n           setProductList(productList); \n\n        }; \n        \n        console.log(\"productDetailState['data']\",productDetailState['data']);\n    },[productDetailState['done']])\n\n\n\n\n\n    useEffect(() => {\n\n        if (productIds && productIds.length > 0 && productList) {\n            if (productIds.length > productList.length) {\n                const variation = productIds[productIds.length - 1]['pricing'] && productIds[productIds.length - 1]['pricing'].length > 0 && productIds[productIds.length - 1]['pricing'][0]['_id'];\n                console.log('variation', variation)\n\n                setProductList([...productList, {\n                    ...productIds[productIds.length - 1],\n                    _id: productIds[productIds.length - 1]['id'],\n                    variation: variation,\n                    quantity: 1\n                }]);\n            }\n\n\n            else if (productIds.length < productList.length) {\n                console.log('productIds', productIds);\n                console.log('productList', productList);\n\n                const newProductList = productList.filter(item => {\n                    let isTrue = false;\n                    productIds.forEach(product => {\n                        if (product.id === item._id) {\n                            isTrue = true;\n                        }\n                    });\n                    return isTrue;\n                })\n                setProductList(newProductList);\n            }\n\n        }\n        else {\n            setProductList([]);\n        }\n        // console.log('productIds', productIds)\n\n    }, [productIds])\n\n\n\n\n\n\n\n    useEffect(() => {\n\n        if (productDetailData && productDetailData.brand) {\n            setBrandId(productDetailData.brand['id']);\n        }\n        else {\n            setBrandId('');\n        }\n        if (productDetailData && productDetailData.tags && productDetailData.tags.length > 0) {\n            // const tagIds = productDetailData.tags.map(item => item.id);\n            setSelectedTags(productDetailData.tags);\n        }\n        else {\n            setSelectedTags([]);\n\n        }\n        if (productDetailData && productDetailData.category && productDetailData.category.length > 0) {\n            // const categoryIds = productDetailData.category.map(item => item.id);\n\n            const categoryIds = productDetailData.category;\n            setCategoryOptions(categoryIds);\n            setcategoryIds(categoryIds); \n        }\n        else {\n            setCategoryOptions([]);\n        }\n\n        if (productDetailData && productDetailData.anotherPrice && productDetailData.anotherPrice) {\n            setPrice(productDetailData.anotherPrice); \n        }\n        else {\n            setPricing([]);\n\n        }\n\n\n        if (productDetailData && productDetailData.date && productDetailData.date) {\n            setDateFeild(productDetailData.date)\n        }\n        else {\n            setDateFeild('');\n\n        }\n\n        if (productDetailData && productDetailData.time && productDetailData.time) {\n            setTimeFeild(productDetailData.time);\n        }\n        else {\n            setTimeFeild('');\n        }\n\n\n\n    }, [productDetailData]);\n\n\n\n    useEffect(() => {\n        if (productDetailState.done && Object.keys(productDetailState).length > 0) {\n\n            const images = productDetailState.data.image;\n            if (images && images.length > 0) {\n                setmyImages(images);\n            }\n\n            if (productDetailState.data.cover && productDetailState.data.cover['id']) {\n                // @ts-ignore\n                setmyImages([productDetailState.data.cover, ...images]);\n                console.log('catcat', [productDetailState.data.cover, ...images]);\n                setCoverImageId(productDetailState.data.cover['id']);\n            }\n        }\n    }, [productDetailState])\n\n\n    useEffect(() => {\n        console.log('thumnail', myImages);\n        // @ts-ignore\n        if (myImages && myImages[0] && myImages.length < 2) {\n            console.log('thumnail2', myImages);\n\n            if (coverImageId !== myImages[0].id) {\n                setCoverImageId(myImages[0].id);\n                handleSetImageAsThumnail(myImages[0]);\n            }\n\n        }\n\n    }, [myImages])\n\n\n    const handleDetachSingleImage = async id => {\n        await handleDetachImageFromItemSingleFetch({\n            urlOptions: {\n                placeHolders: {\n                    imageId: id,\n                    collection: 'product',\n                    itemId: productDetailData.id\n                }\n            }\n        });\n    }\n\n\n\n    const handleSetImageAsThumnail = async image => {\n\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n            urlOptions: {\n                placeHolders: {\n                    imageId: image.id,\n                    collection: 'product',\n                    itemId: productDetailData.id\n                }\n            }\n        });\n\n        console.log('thumbnailRes', thumbnailRes);\n\n        // @ts-ignore\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\n            openSuccessNotification('Set as thumbnail!')\n            // const positionInBrand = () => {\n            //     return productList.map(item => item.id).indexOf(productDetailData.id);\n            // }\n\n            // const index = positionInBrand();\n\n            // const prevItem = productList.find(item => item.id === productDetailData.id);\n\n            // if (prevItem) {\n            //     console.log('prevItem--', prevItem, 'image--', image);\n            //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\n            //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\n            //     setProductList(updateProductList);\n\n            // }\n        }\n        else {\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\n        }\n\n    }\n\n\n\n\n    useEffect(() => {\n        if (!updateProductState['isLoading']) {\n            const error = updateProductState['error'];\n            if (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\n                const errors =\n                    Object.values(error['error']).length > 0\n                        ? Object.values(error['error'])\n                        : [];\n                errors.forEach((err, i) => {\n                    if (typeof err === 'string') {\n                        openErrorNotification(err)\n                    }\n                    else if (typeof err === 'object') {\n                        if (err && Object.keys(err).length > 0) {\n                            const errs = Object.values(err);\n                            errs.forEach(err => {\n                                openErrorNotification(err)\n                            })\n\n                        }\n                    }\n                });\n            }\n        }\n    }, [updateProductState])\n\n\n    const handleCancel = (e: any) => {\n        setAddNewCategoryVisible(false);\n    };\n\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!values.name || !(pricing.length > 0) || !(categoryOptions.length > 0) || !isValid) {\n            return true;\n        }\n        return false;\n    }\n\n\n    const handleImagesDelete = (id) => {\n        // @ts-ignore\n        const newImages = myImages && myImages.filter(image => {\n            return image.id !== id;\n        })\n\n        setmyImages(newImages);\n    }\n\n    const handleDeleteFromSelectedImage = () => {\n\n    };\n\n    const handleThumbnailImageDelete = (id) => {\n        // @ts-ignore\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\n            return image.id !== id;\n        })\n\n        if (newImages.length > 0) {\n            setmyThumbnailImage(newImages);\n\n        }\n        else setmyThumbnailImage(false);\n    }\n\n\n\n\n\n    useEffect(()=>{\n\n        if(productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data.metaTags){\n            const metaTags = productDetailState.data.metaTags.split(','); \n\n            console.log('localMetaTags',metaTags);\n           \n            const bnMetaTags = productDetailState.data.bn['metaTags'].split(','); \n            setMetaTags(metaTags)\n            setBnMetaTags(bnMetaTags)\n        }\n\n    },[productDetailState['done']])\n\n\n\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={\n                { ...initialValues,\n                    ...{\n                    ...productDetailData,\n                    ...( productDetailState['data'] && Object.keys(productDetailState['data']).length > 0 && productDetailState['data']['bn'] && {\n                        bnMetaTitle: productDetailState['data']['bn'].metaTitle,\n                        bnMetaDescription: productDetailState['data']['bn'].metaDescription,\n                        bnName: productDetailState['data']['bn'].name,\n                        metaUnit: productDetailState['data']['bn'].unit,\n                        bnDescription: productDetailState['data']['bn'].description,\n                      }),\n                } }\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                            style={{\n                                top: '40px',\n\n                            }}\n                            bodyStyle={{\n                                margin: 0,\n                                padding: 0,\n                            }}\n                            width={'70vw'}\n                            title=\"Add New Bundle\"\n                            visible={addNewCategoryVisible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Update'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                            }}\n                        >\n\n\n                            <section className='addProductGridContainer'>\n                                <div className='addProductGridContainer__left'>\n                                    <div className='addProductGridContainer__name'>\n                                        <div className='addProductGridContainer__item-header'>\n                                            <h3>\n                                                Bundle Information *\n\t\t\t                                </h3>\n\n                                            <div className={values.name && values.name.length > 2 ? 'checkicon-active' : 'checkicon'}>\n                                                <CheckCircleOutlined />\n                                            </div>\n                                        </div>\n                                        <div className='addProductGridContainer__item-body'>\n                                        <Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'Rafty ox'}\n\t\t\t\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['name'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tlabel='BN Name'\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.bnName}\n\t\t\t\t\t\t\t\t\t\t\tplaceHolder={'রাফতি অক্স'}\n\t\t\t\t\t\t\t\t\t\t\tname='bnName'\n\t\t\t\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\n\n\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['bnName'])}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n                                    \n\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\t\t\t\t\t\tDescription\n                                             </h3>\n\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={description}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetDescription(data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop:\"15px\"\n\t\t\t\t\t\t\t\t\t\t\t\t}}></div>\n\n\t\t\t\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\t\t\t\t\t\tBN Description\n                                             </h3>\n\n\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t\t\t\tmaxWidth: '100%'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<CKEditor\n\t\t\t\t\t\t\t\t\t\t\t\t\teditor={ClassicEditor}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={bnDescription}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonInit={editor => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// You can store the \"editor\" and use when it is needed.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Editor is ready to use!', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = editor.getData();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetBNDescription(data);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Blur.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonFocus={(event, editor) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('Focus.', editor);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\n                                            {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n                                            <div style={{\n                                                marginBottom: '15px'\n                                            }}></div>\n                                            {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n\n                                            <div className='addProductGridContainer__item-body-variationCard-item'>\n                                                <h4>\n                                                    Price *\n\t\t\t                                \t</h4>\n                                                <div className='addProductGridContainer__item-body-variationCard-item-container'>\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\n                                                        <InputSmall\n                                                            label='Regular'\n                                                            value={price.regular}\n                                                            name='regular'\n                                                            onChange={(e) => setPrice({\n                                                                ...price,\n                                                                regular: e.target.value\n                                                            })}\n                                                        />\n\n\n                                                    </div>\n                                                    <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\n\n                                                        <InputSmall\n                                                            label='Offer'\n                                                            value={price.offer}\n                                                            name='offer'\n                                                            onChange={(e) => setPrice({\n                                                                ...price,\n                                                                offer: e.target.value\n                                                            })}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n\n\n                                            {/* <div style={{\n                                                display: 'flex',\n                                                justifyContent: 'space-between'\n                                            }}>\n                                                <div style={{\n                                                    width: '48%',\n                                                }}>\n                                                    <DatePicker\n                                                        date={startDate}\n                                                        label='Start Date'\n                                                        onChange={handleStartDataChange} />\n\n                                                </div>\n                                                <div style={{\n                                                    width: '48%'\n                                                }}>\n\n                                                    <DatePicker\n                                                        date={endDate}\n                                                        label='End Date'\n                                                        onChange={handleEndDataChange} />\n\n                                                </div>\n                                            </div> */}\n\n\n                                        </div>\n\n\n\n                                    </div>\n\n                                    {/* <div className='addProductGridContainer__price'>\n                                        <div className='addProductGridContainer__item-header'>\n                                            <h3>\n                                                Products\n\t\t                                    </h3>\n\n                                            <div className={pricing && pricing.length > 0 ? 'checkicon-active' : 'checkicon'}>\n                                                <CheckCircleOutlined />\n                                            </div>\n                                        </div>\n\n\n                                        <div className='addProductGridContainer__item-body'>\n\n                                            <h3 className='inputFieldLabel'>\n                                                Products\n                                            </h3>\n                                            <SelectProducts\n                                                setProductIds={setProductIds}\n                                                productIds={productIds}\n                                            />\n\n                                            <div style={{\n                                                marginTop: \"15px\"\n                                            }}></div>\n\n                                            <h3 className='inputFieldLabel'>\n                                                Selcted Products\n                                            </h3>\n\n                                            <SelectedProductItems\n                                                productList={productList}\n                                                setProductList={setProductList}\n                                            />\n                                        </div>\n                                    </div> */}\n\n\n                                    <div className='addProductGridContainer__image'>\n\n                                <div className='addProductGridContainer__item-header'>\n                                    <h3>\n                                        Image\n                                </h3>\n\n                                    <Tooltip\n                                        placement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\n                                        <a href='###'>\n                                            <InfoCircleOutlined />\n                                        </a>\n                                    </Tooltip>\n</div>\n\n<div\n    style={{\n        padding: \"10px\"\n    }}\n    className='aboutToUploadImagesContainer'>\n    {productDetailState.isLoading && (\n        <div style={{\n            padding: '20px 0'\n        }}>\n            <Spin />\n        </div>\n    )}\n    {productDetailState.done && (\n        <>\n            {myImages &&\n                // @ts-ignore\n                myImages.length > 0 && myImages.map((image, index) => {\n                    return (\n                        <div className='aboutToUploadImagesContainer__item'>\n                            <div\n                                className='aboutToUploadImagesContainer__item-imgContainer'\n                                onClick={() => {\n                                    setCoverImageId(image.id);\n                                    handleSetImageAsThumnail(image);\n                                }}\n                            >\n                                <img src={image.cover} alt={image.alt} />\n                            </div>\n\n                            <span\n                                onClick={() => {\n                                    handleImagesDelete(image.id)\n                                    handleDetachSingleImage(image.id)\n                                }\n\n                                }\n                                className='aboutToUploadImagesContainer__item-remove'>\n                                <CloseOutlined />\n                            </span>\n\n\n                            {coverImageId === image.id ? (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                </span>\n                            ) : !coverImageId && index === 0 && (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                </span>\n                            )}\n\n\n                        </div>\n                    )\n                })}\n\n\n            <Tooltip\n                title={'Attach images'}>\n\n                <div\n                    onClick={() => {\n                        setvisible(true);\n                        setisModalOpenForImages(true);\n                        setisModalOpenForThumbnail(false);\n                    }}\n                    className='aboutToUploadImagesContainer__uploadItem'>\n                    {/* <FileAddOutlined />\n            <FileImageTwoTone />\n            <FileImageOutlined /> */}\n                    <FileImageFilled />\n                    {/* <h5>\n             Select From Library\n    <     /h5> */}\n                    <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                        <PlusOutlined />\n                    </span>\n                </div>\n            </Tooltip>\n        </>\n    )}\n\n</div>\n</div>\n\n\n\n\n<div className='addProductGridContainer__image'>\n\n<div className='addProductGridContainer__item-header'>\n    <h3>\n    Meta Data\n</h3>\n\n    <Tooltip\n        placement=\"left\" title={\"Meta data will be used to make the user's easy and for search engine optimization.\"}>\n        <a href='###'>\n            <InfoCircleOutlined />\n        </a>\n    </Tooltip>\n</div>\n<div className='addProductGridContainer__item-body'>\n\n                \n<Input\nlabel='Meta title'\nvalue={values.metaTitle}\nplaceHolder={'category...'}\nname='metaTitle'\nisError={(touched.metaTitle && errors.metaTitle) ||\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\n\nerrorString={(touched.metaTitle && errors.metaTitle) ||\n(!isSubmitting && addProductState.error['error']['metaTitle'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('metaTitle')\n}}\n/>\n\n<Input\nlabel='BN Meta title'\nvalue={values.bnMetaTitle}\nplaceHolder={'ক্যাটাগড়ি...'}\nname='bnMetaTitle'\nisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\n\nerrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n(!isSubmitting && addProductState.error['error']['bnMetaTitle'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('bnMetaTitle');\n}}\n/>\n\n<TextArea\nlabel='Meta description'\nvalue={values.metaDescription}\nplaceholder={'meta...'}\nname='metaDescription'\nisError={(touched.metaDescription && errors.metaDescription) ||\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\n\nerrorString={(touched.metaDescription && errors.metaDescription) ||\n(!isSubmitting && addProductState.error['error']['metaDescription'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('metaDescription');\n}}\n/>\n\n<TextArea\nlabel='BN Meta Description'\nvalue={values.bnMetaDescription}\nplaceholder={'এইয় মেট...'}\nname='bnMetaDescription'\nisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\n\nerrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n(!isSubmitting && addProductState.error['error']['bnMetaDescription'])}\nonChange={(e: any) => {\nhandleChange(e);\nsetFieldTouched('bnMetaDescription');\n}}\n/>\n\n<h3 className='inputFieldLabel'>\nMeta Tags (grocery,fashion)\n</h3>\n\n<MetaTags\n// @ts-ignore\nsetTags={setMetaTags}\ntags={metaTags}\n/>\n\n<div style={{\nmarginTop:'15px'\n}}></div>\n\n<h3 className='inputFieldLabel'>\nBN Meta Tags (মুদিখানা,ফ্যাশন)\n</h3>\n\n<MetaTags\n// @ts-ignore\nsetTags={setBnMetaTags}\ntags={bnMetaTags}\n/>\n</div>\n</div>\n\n\n\n\n\n\n                                </div>\n                                <div className='addProductGridContainer__right'>\n                                    <div className='addProductGridContainer__category'>\n\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Categories *\n\t\t\t                                \t</h3>\n\n                                                <Tooltip\n                                                    color='red'\n                                                    visible={addProductState.error['error']['category'] && !(categoryids.length > 0)}\n                                                    placement=\"left\" title={'Select at least one category'}>\n                                                    <div className={!(categoryids.length > 0)\n                                                        && !addProductState.error['error']['category'] ? 'checkicon' : addProductState.error['error']['category'] ? 'checkicon-error' : 'checkicon-active'}>\n                                                        <CheckCircleOutlined />\n                                                    </div>\n                                                </Tooltip>\n\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Categories\n                                                    setCategoryOptions={setCategoryOptions}\n                                                    categoryOptions={categoryOptions}\n                                                    setcategoryIds={setcategoryIds} />\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n                                    <div className='addProductGridContainer__tag'>\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Tags\n\t\t\t\t</h3>\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Tags\n                                                    setSelectedTags={setSelectedTags}\n                                                    selectedTags={selectedTags}\n                                                    setTagIds={setTagIds} />\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                    <div className='addProductGridContainer__brand'>\n                                        <div className='addProductGridContainer-rightItemContainer'>\n                                            <div className='addProductGridContainer-rightItemContainer-header'>\n                                                <h3>\n                                                    Brand\n\t\t\t\t</h3>\n                                            </div>\n                                            <div className='addProductGridContainer-rightItemContainer-body'>\n                                                <Brands setBrandId={setBrandId} />\n                                            </div>\n                                        </div>\n\n\n                                    </div>\n\n                                </div>\n                            </section>\n\n\n                        </Modal>\n\n                        <MediaLibrary\n                            setvisible={setvisible}\n                            visible={visible}\n                            setmyImages={setmyImages}\n                            myImages={myImages}\n                            setmyThumbnailImage={setmyThumbnailImage}\n                            isModalOpenForThumbnail={isModalOpenForThumbnail}\n                            isModalOpenForImages={isModalOpenForImages}\n\n                        />\n                    </>\n                )}\n        </Formik>\n\n\n\n\n    );\n};\n\nexport default AddNewProduct;\n\n\n\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n\t[regular input field] [offer inputfield]\n\nStock [title]\n\t[available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n\t[add attributes name]\n\t\t[add attrubutes value]\n\n\t[add attributes name]\n\t\t[add attrubutes value\n\n*///","import React, { useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import lib\nimport { useHistory } from \"react-router-dom\";\n\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\n\n\n\ninterface Props {\n    productId?: any;\n    quantity?: any;\n}\n\n\n\nconst CouponProducts = ({\n    productId,\n    quantity\n}: Props) => {\n\n    const history = useHistory();\n\n    const [productDetailState, handleProductFetch] = useHandleFetch(\n        {},\n        'productDetailById'\n    );\n\n    useEffect(() => {\n        const getAndSetProduct = async () => {\n            await handleProductFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: productId,\n                    },\n                },\n            });\n\n        };\n        getAndSetProduct();\n    }, []);\n\n\n    console.log('productDetailStatecoupon', productDetailState)\n\n\n    return (\n        <Skeleton\n            paragraph={{ rows: 2 }}\n            loading={productDetailState.isLoading}>\n            {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\n                <>\n                    <div className='couponDetailProductItem'>\n                        <div\n                            onClick={() => history.push(`/admin/product/${productId}`)}\n                            className='couponDetailProductItem__cover'>\n                            <img src={productDetailState.data.cover && productDetailState.data.cover['cover']} alt=\"\" />\n                        </div>\n                        <div className='couponDetailProductItem__info'>\n                            <h2\n                                onClick={() => history.push(`/admin/product/${productId}`)}\n                            >\n                                {productDetailState.data.name}\n                            </h2>\n                            <h3>\n                                {productDetailState.data.price}\n                            </h3>\n                            <h3>\n                                Quantity: {quantity}\n                            </h3>\n                        </div>\n                    </div>\n                </>\n            )}\n\n        </Skeleton>\n    )\n}\n\n\nexport default CouponProducts; ","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import lib\nimport {\n    EditOutlined,\n    DeleteOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal, Badge } from 'antd';\n\n\n// import moment\nimport Moment from \"react-moment\";\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport ProductBundleEdit from \"./ProductBundleEdit\";\nimport CouponProducts from \"../coupon/CouponProducts\";\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\ninterface Props {\n    productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n    const [productDetailState, handleProductDetailFetch] = useHandleFetch({}, 'bundleDetail');\n\n    const params = useParams();\n    const history = useHistory();\n    const productId = params['id'];\n    const [productEditVisible, setProductEditVisible] = useState(false);\n\n\n    useEffect(() => {\n\n        const getProductDetail = async () => {\n            await handleProductDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: productId\n                    }\n                }\n            })\n        };\n\n        getProductDetail();\n\n    }, [productId]);\n\n\n\n\n    console.log('productDetailState', productDetailState);\n\n    console.log('brandParams', params);\n\n    const getImagesInCollumn = (imgs) => {\n        if (!imgs[0]) return false;\n        imgs = imgs.map(item => item.cover);\n        const columns = {};\n\n        let localIndex = 0;\n        let columnNumber = 0;\n\n\n        imgs.forEach((item, index) => {\n            if (localIndex < 3) {\n                if (columns[columnNumber]) {\n                    columns[columnNumber] = [...columns[columnNumber], item]\n                }\n                else columns[columnNumber] = [item];\n\n                localIndex = localIndex + 1;\n                columnNumber = columnNumber + 1;\n\n            }\n            else {\n                localIndex = 0;\n                columnNumber = 0;\n                console.log('localIndex', localIndex)\n            }\n        });\n\n        return columns;\n    }\n\n\n    const row = productDetailState.done && productDetailState.data && productDetailState.data['image'] ? getImagesInCollumn(productDetailState.data['image']) : [];\n\n\n    console.log('bundleDetail', productDetailState);\n    return (\n        <div className='brandDetailContainer'>\n\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Bundle Detail\n                </h3>\n\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\n                    <>\n                     <ProductBundleEdit\n                          setAddNewCategoryVisible={setProductEditVisible}\n                         addNewCategoryVisible={productEditVisible}\n                            productDetailData={productDetailState.data}\n\n                        /> \n                         <Button\n                            onClick={() => setProductEditVisible(true)}\n                            type='link'\n                            icon={<EditOutlined />}\n                        >\n                            Edit\n                      </Button> \n                    </>\n                )}\n\n            </div>\n            <Skeleton\n                avatar paragraph={{ rows: 3 }}\n                loading={productDetailState.isLoading}>\n                {productDetailState.done && productDetailState.data && !(Object.keys(productDetailState.data).length > 0) && (\n                    <Empty description='No Bundle Product found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                )}\n\n                {productDetailState.done && productDetailState.data && (Object.keys(productDetailState.data).length > 0) && (\n                    <>\n                        <div className='brandDetailContainer__header'>\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\n                                <img src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']} alt=\"\" />\n                            </div>\n                            <div className='brandDetailContainer__header-info'>\n                                <h2>\n                                    {productDetailState.data['name']}\n                                </h2>\n                                <h4>\n                                    {productDetailState.data['price']}\n                                </h4>\n\n                                {productDetailState.data['description'] && (\n                                    <h3>\n                                    {productDetailState.data['description']}\n                                    </h3>\n                                )}\n                              \n\n                                {/* {productDetailState.data['startDate'] && (\n                                    <h3>\n                                        START DATE:\n                                        <span>\n                                            {productDetailState.data['startDate']}\n                                        </span>\n\n                                    </h3>\n                                )}\n\n                                {productDetailState.data['endDate'] && (\n                                    <h3>\n                                        END DATE:\n                                        <span>\n                                            {productDetailState.data['endDate']}\n                                        </span>\n\n                                    </h3>\n                                )} */}\n\n\n\n                                {productDetailState.data['url'] && (\n                                    <h3>\n                                        URL:\n                                        <span>\n                                            {productDetailState.data['url']}\n                                        </span>\n\n                                    </h3>\n                                )}\n                                {/* \n                                {productDetailState.data['tags'] && productDetailState.data['tags'].length > 0 &&\n                                    (<>\n                                        <h3>\n                                            TAGS:\n                                        {productDetailState.data['tags'].map(tag => {\n                                            return (\n                                                <span>\n                                                    {tag.name}\n                                                </span>\n                                            )\n                                        })}\n                                        </h3>\n\n                                    </>)\n                                } */}\n\n                                {productDetailState.data['category'] && productDetailState.data['category'].length > 0 &&\n                                    (<>\n                                        <h3>\n                                            CATEGORIES:\n                                        {productDetailState.data['category'].map(cat => {\n                                            return (\n                                                <span\n                                                    onClick={() => history.push(`/admin/category/${cat.id}`)}\n\n                                                >\n                                                    {cat.name}\n                                                </span>\n                                            )\n                                        })}\n                                        </h3>\n\n                                    </>)\n                                }\n\n                            </div>\n                        </div>\n\n\n                        {productDetailState.data['icon'] && (\n                            <>\n                                <div className='brandDetailContainer__heading'>\n                                    <h3>\n                                        Icon\n                            </h3>\n                                </div>\n\n                                <div className='brandDetailContainer__inlineBox'>\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\n                                        <img src={productDetailState.data['icon'] && productDetailState.data['icon']} alt=\"\" />\n                                    </div>\n\n                                </div>\n\n                                <div style={{\n                                    marginBottom: \"25px\"\n                                }}></div>\n                            </>\n                        )}\n\n\n                        {productDetailState.data['image'] && productDetailState.data['image'].length > 0 && (\n                            <>\n                                <div className='brandDetailContainer__heading'>\n                                    <h3>\n                                        Image Gallary\n                                   </h3>\n                                </div>\n\n                                <div className='brandDetailContainer__imageGallary'>\n                                    <div className='imgGallaryContainer'>\n\n                                        <div className=\"imgGallary-row\">\n                                            {row && Object.keys(row).map(column => {\n                                                return (\n                                                    <div className=\"imgGallary-column\">\n                                                        {row[column] && row[column].map(img => {\n                                                            return <img src={img} style={{\n                                                                width: '100%'\n                                                            }} />\n                                                        })}\n\n                                                    </div>\n                                                )\n                                            })}\n\n\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <div style={{\n                                    marginBottom: \"25px\"\n                                }}></div>\n                            </>\n                        )}\n\n                        {productDetailState.data['brand'] && Object.keys(productDetailState.data['brand']).length > 0 && (\n                            <>\n                                <div className='brandDetailContainer__heading'>\n                                    <h3>\n                                        Brand\n                                   </h3>\n                                </div>\n\n                                <div\n                                    onClick={() => history.push(`/admin/brand/${productDetailState.data['brand']['id']}`)}\n\n                                    className='brandDetailContainer__brand'>\n                                    <div className='brandDetailContainer__brand-coverbox'>\n                                        <img src={productDetailState.data['brand']['cover'] && productDetailState.data['brand']['cover']} alt=\"\" />\n                                    </div>\n                                    <div className='brandDetailContainer__brand-info'>\n                                        <h2>\n                                            {productDetailState.data['brand']['name']}\n                                        </h2>\n                                        <h3>\n                                            {productDetailState.data['brand']['description']}\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <div style={{\n                                    marginBottom: \"25px\"\n                                }}></div>\n                            </>\n                        )}\n\n\n                        {productDetailState.data['primaryCategory'] && Object.keys(productDetailState.data['primaryCategory']).length > 0 && (\n                            <>\n                                <div className='brandDetailContainer__heading'>\n                                    <h3>\n                                        Primary Category\n                                   </h3>\n                                </div>\n\n                                <div\n                                    onClick={() => history.push(`/admin/category/${productDetailState.data['primaryCategory']['id']}`)}\n                                    className='brandDetailContainer__brand'>\n                                    <div className='brandDetailContainer__brand-coverbox'>\n                                        <img src={productDetailState.data['primaryCategory']['cover'] && productDetailState.data['primaryCategory']['cover']} alt=\"\" />\n                                    </div>\n                                    <div className='brandDetailContainer__brand-info'>\n                                        <h2>\n                                            {productDetailState.data['primaryCategory']['name']}\n                                        </h2>\n                                        <h3>\n                                            {productDetailState.data['primaryCategory']['description']}\n                                        </h3>\n                                    </div>\n                                </div>\n\n                                <div style={{\n                                    marginBottom: \"25px\"\n                                }}></div>\n                            </>\n                        )}\n\n\n\n\n                        \n\n\n                    {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && productDetailState.data['products'] && (\n                            <div className='brandDetailContainer__heading'>\n                                <h3>\n                                    Products\n                       </h3>\n                            </div>\n                        )\n                        }\n\n\n                        <div className='brandDetailContainer__body'>\n                            {productDetailState.done && productDetailState.data && productDetailState.data['products'] && !(productDetailState.data['products'].length > 0) && (\n                                <div style={{\n                                    marginTop: '100px'\n                                }}>\n                                    <Empty description='No Products exists for this Bundle' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                                </div>\n                            )}\n\n                            {productDetailState.done && productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\n                                <>\n                                    {productDetailState.data['products'] && productDetailState.data['products'].length > 0 &&\n                                        productDetailState.data['products'].map(product => {\n                                            return (\n                                                <CouponProducts\n                                                    quantity={product.quantity}\n                                                    productId={product['_id']} />\n                                            )\n                                        })}\n                                </>\n                            )}\n                        </div>\n\n\n\n                    </>\n\n                )}\n\n            </Skeleton>\n\n\n        </div>\n    )\n}\n\nexport default NewBrandDetail\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\n\nimport MetaTags from '../../pages/category/MetaTags';\nconst validationSchema = Yup.object().shape({\n  //   name: Yup.string()\n  //     .label('Name')\n  //     .required('Name is required')\n  //     .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Brand Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n  image: [],\n  url: '',\n  cover: '',\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  brandList?: any;\n  setBrandList?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  brandList,\n  setBrandList,\n}: Props) => {\n  const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch(\n    {},\n    'addBrand'\n  );\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  console.log('brandImages', myImages);\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    const addBrandRes = await handleUpdateBrandFetch({\n      body: {\n        name: values.name.trim(),\n        description: values.description,\n        type: values.type,\n        image: imagesIds,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags.join(','),\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags.join(','),\n          name: values.bnName.trim(),\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addBrandRes && addBrandRes.status === 'ok') {\n      openSuccessNotification();\n\n      setBrandList([\n        {\n          id: addBrandRes['_id'] || '',\n          key: addBrandRes['_id'] || '',\n          name: addBrandRes['name'] || '',\n          description: addBrandRes['description'] || '',\n          cover: addBrandRes['cover'] || '',\n          // @ts-ignore\n          ...addBrandRes,\n        },\n        ...brandList,\n      ]);\n\n      actions.resetForm();\n      setAddNewCategoryVisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!updateBrandState['isLoading']) {\n      const error = updateBrandState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [updateBrandState]);\n\n  useEffect(() => {\n    console.log('thumnail', myImages);\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      console.log('thumnail2', myImages);\n\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        // set thumbnail with server for edits\n        // handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  const onSwitchChange = (checked: any) => {\n    // console.log(checked);\n  };\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Add New Brand'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n            }}\n          >\n            <Input\n              label='Name *'\n              value={values.name}\n              name='name'\n              placeHolder={''}\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateBrandState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateBrandState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='BN Name'\n              value={values.bnName}\n              placeHolder={''}\n              name='bnName'\n              isError={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && updateBrandState.error['error']['bnName'])\n              }\n              errorString={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && updateBrandState.error['error']['bnName'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnName');\n              }}\n            />\n\n            <TextArea\n              label='Description'\n              value={values.description}\n              name='description'\n              placeholder={'This brand...'}\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n\n            <TextArea\n              label='BN Description'\n              value={values.bnDescription}\n              placeholder={'এই ব্র্যান্ড...'}\n              name='bnDescription'\n              isError={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['bnDescription'])\n              }\n              errorString={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['bnDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnDescription');\n              }}\n            />\n\n            <div\n              style={{\n                marginTop: '20px',\n              }}\n            />\n\n            <div\n              className='addproductSection-left-header'\n              style={{\n                marginBottom: '-5px',\n              }}\n            >\n              <h3 className='inputFieldLabel'>Cover</h3>\n            </div>\n\n            <div className='aboutToUploadImagesContainer'>\n              {myImages &&\n                // @ts-ignore\n                myImages.length > 0 &&\n                myImages.map((image, index) => {\n                  return (\n                    <div className='aboutToUploadImagesContainer__item'>\n                      <div\n                        className='aboutToUploadImagesContainer__item-imgContainer'\n                        onClick={() => {\n                          // setCoverImageId(image.id);\n                          setvisibleMedia(true);\n                        }}\n                      >\n                        <img src={image.cover} alt={image.alt} />\n                      </div>\n\n                      <span\n                        onClick={() => handleImagesDelete(image.id)}\n                        className='aboutToUploadImagesContainer__item-remove'\n                      >\n                        <CloseOutlined />\n                      </span>\n\n                      {/* {coverImageId === image.id ? (\n                        <span className='aboutToUploadImagesContainer__item-cover'>\n                          <CheckOutlined />\n                        </span>\n                      ) : (\n                        !coverImageId &&\n                        index === 0 && (\n                          <span className='aboutToUploadImagesContainer__item-cover'>\n                            <CheckOutlined />\n                          </span>\n                        )\n                      )} */}\n                    </div>\n                  );\n                })}\n\n              {!myImages ||\n              // @ts-ignore\n              (myImages && !(myImages && myImages.length > 0)) ? (\n                <>\n                  <Tooltip title={'Attach images'}>\n                    <div\n                      onClick={() => {\n                        setvisibleMedia(true);\n                      }}\n                      className='aboutToUploadImagesContainer__uploadItem'\n                    >\n                      <FileImageFilled />\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                        <PlusOutlined />\n                      </span>\n                    </div>\n                  </Tooltip>\n                </>\n              ) : (\n                ''\n              )}\n            </div>\n\n            <Input\n              label='Meta title'\n              value={values.metaTitle}\n              placeHolder={'...'}\n              name='metaTitle'\n              isError={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && updateBrandState.error['error']['metaTitle'])\n              }\n              errorString={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && updateBrandState.error['error']['metaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaTitle');\n              }}\n            />\n\n            <Input\n              label='BN Meta title'\n              value={values.bnMetaTitle}\n              placeHolder={'...'}\n              name='bnMetaTitle'\n              isError={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['bnMetaTitle'])\n              }\n              errorString={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['bnMetaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaTitle');\n              }}\n            />\n\n            <TextArea\n              label='Meta description'\n              value={values.metaDescription}\n              placeholder={'meta...'}\n              name='metaDescription'\n              isError={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['metaDescription'])\n              }\n              errorString={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['metaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaDescription');\n              }}\n            />\n\n            <TextArea\n              label='BN Meta Description'\n              value={values.bnMetaDescription}\n              placeholder={'এইয় মেট...'}\n              name='bnMetaDescription'\n              isError={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['bnMetaDescription'])\n              }\n              errorString={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  updateBrandState.error['error']['bnMetaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaDescription');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Meta Tags </h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setTags}\n              tags={tags}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>BN Meta Tags </h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setBnTags}\n              tags={bnTags}\n            />\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={false}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n  Spin,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport MetaTags from '../category/MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string()\n  //   .label('Name')\n  //   .required('Name is required')\n  //   .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Brand Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n  image: [],\n  url: '',\n  cover: '',\n};\n\ninterface Props {\n  brandDetailData?: any;\n  brandEditVisible?: any;\n  setBrandEditVisible?: any;\n  brandList?: any;\n  setBrandList?: any;\n}\n\nconst ModalComponentChildItem = ({\n  brandDetailData,\n  brandEditVisible,\n  setBrandEditVisible,\n  brandList,\n  setBrandList,\n}) => {\n  const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch(\n    {},\n    'updateBrand'\n  );\n  const [brandDetailState, handleBrandDetailFetch] = useHandleFetch(\n    {},\n    'brandDetail'\n  );\n\n  const [\n    attachImageToItemMultipleState,\n    handleAttachImageToItemMultipleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\n  const [\n    attachImageToItemSingleState,\n    handleAttachImageToItemSingleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\n  const [\n    detachImageFromItemMultipleState,\n    handleDetachImageFromItemMultipleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n  const [myImages, setmyImages]: any = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const brandDetailRes = await handleBrandDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: brandDetailData.id,\n          },\n        },\n      });\n    };\n\n    getBrandDetail();\n  }, [brandDetailData]);\n\n  useEffect(() => {\n    if (\n      brandDetailState.data &&\n      Object.keys(brandDetailState.data).length > 0\n    ) {\n      const images = brandDetailState.data.image;\n      if (images && images.length > 0) {\n        setmyImages(images);\n        setMyGoddamnImages(images);\n      }\n\n      if (brandDetailState.data.cover && brandDetailState.data.cover['id']) {\n        // @ts-ignore\n        setmyImages([brandDetailState.data.cover]);\n        setCoverImageId(brandDetailState.data.cover['id']);\n      }\n    }\n  }, [brandDetailState.data]);\n\n  const handleDetachSingleImage = async (id) => {\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'brand',\n          itemId: brandDetailData.id,\n        },\n      },\n    });\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'brand',\n          itemId: brandDetailData.id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      openSuccessNotification('Set as thumbnail!');\n      // const positionInBrand = () => {\n      //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\n      // }\n\n      // const index = positionInBrand();\n\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\n\n      // if (prevItem) {\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\n      //     setBrandList(updateBrandList);\n      // }\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  const handleSubmit = async (values: any, actions: any) => {\n    console.log('myReadyToGoImages', myImages);\n\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\n      // @ts-ignore\n      const images =\n        myImages && myImages.length > 0 ? myImages.map((item) => item.id) : [];\n\n      if (images[0] && images.length > 1) {\n        await handleAttachImageToItemMultipleFetch({\n          urlOptions: {\n            placeHolders: {\n              collection: 'brand',\n              itemId: brandDetailData.id,\n            },\n          },\n          body: {\n            image: images,\n          },\n        });\n      } else if (images[0] && images.length < 1) {\n        await handleAttachImageToItemSingleFetch({\n          urlOptions: {\n            placeHolders: {\n              imageId: images[0].id,\n              collection: 'brand',\n              itemId: brandDetailData.id,\n            },\n          },\n        });\n      }\n    }\n\n    const updateBrandRes = await handleUpdateBrandFetch({\n      urlOptions: {\n        placeHolders: {\n          id: brandDetailData.id,\n        },\n      },\n      body: {\n        name: values.name,\n        description: values.description,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\n          name: values.bnName,\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updateBrandRes && updateBrandRes.status === 'ok') {\n      console.log('updateBrandRes', updateBrandRes);\n\n      const positionInTag = () => {\n        return brandList.map((item) => item.id).indexOf(values.id);\n      };\n\n      const index = positionInTag();\n\n      const getCover = (id) => {\n        if (!id || !myImages || !myImages[0]) {\n          return '';\n        } else {\n          if (myImages && myImages.length > 0) {\n            const item = myImages.find((item) => item.id === id);\n            if (item) {\n              return item.cover;\n            }\n          }\n        }\n      };\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, brandList[index], {\n        ...brandDetailData,\n        id: brandDetailData['id'] || '',\n        key: brandDetailData['id'] || '',\n        name: updateBrandRes['name'] || '',\n        description: updateBrandRes['description'] || '',\n        // @ts-ignore\n        ...updateBrandRes,\n        cover: getCover(coverImageId),\n      });\n      const updateTagList = [\n        ...brandList.slice(0, index),\n        updatedItem,\n        ...brandList.slice(index + 1),\n      ];\n      setBrandList(updateTagList);\n\n      openSuccessNotification('Brand Updated!');\n      setBrandEditVisible(false);\n\n      // const positionInBrand = () => {\n      //     return brandList.map(item => item.id).indexOf(productRecord.id);\n      // }\n\n      // const index = positionInBrand();\n      // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\n      // console.log('updateBrandList', updatedItem)\n\n      // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\n\n      // setBrandList(updateBrandList);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!updateBrandState['isLoading']) {\n      const error = updateBrandState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [updateBrandState]);\n\n  const onSwitchChange = (checked: any) => {\n    // console.log(checked);\n  };\n\n  const handleCancel = (e: any) => {\n    setBrandEditVisible(false);\n    setBnTags([]);\n    setTags([]);\n    setCoverImageId('');\n    setvisibleMedia(false);\n    setmyImages(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  console.log('myImages', myImages);\n\n  useEffect(() => {\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\n      const metaTags =\n        brandDetailData.metaTags && brandDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        brandDetailData.bn &&\n        brandDetailData.bn['metaTags'] &&\n        brandDetailData.bn['metaTags'].split(',');\n      setTags(metaTags || []);\n      setBnTags(bnMetaTags || []);\n    }\n  }, []);\n\n  console.log('brandEdit', brandDetailData);\n\n  useEffect(() => {\n    console.log('thumnail', myImages);\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      console.log('thumnail2', myImages);\n\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        // set thumbnail with server for edits\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  useEffect(() => {\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\n      const metaTags =\n        brandDetailData.metaTags && brandDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        brandDetailData.bn &&\n        brandDetailData.bn['metaTags'] &&\n        brandDetailData.bn['metaTags'].split(',');\n      setTags(metaTags || []);\n      setBnTags(bnMetaTags || []);\n    }\n  }, []);\n\n  return (\n    <>\n      <Formik\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        enableReinitialize={true}\n        initialValues={{\n          ...initialValues,\n          ...brandDetailData,\n          ...(brandDetailData &&\n            Object.keys(brandDetailData).length > 0 && {\n              bnMetaTitle:\n                brandDetailData['bn'] &&\n                brandDetailData['bn'].metaTitle &&\n                brandDetailData['bn'].metaTitle,\n              bnMetaDescription:\n                brandDetailData['bn'] &&\n                brandDetailData['bn'].metaDescription &&\n                brandDetailData['bn'].metaDescription,\n              bnName:\n                brandDetailData['bn'] &&\n                brandDetailData['bn'].name &&\n                brandDetailData['bn'].name,\n              bnDescription:\n                brandDetailData['bn'] &&\n                brandDetailData['bn'].description &&\n                brandDetailData['bn'].description,\n            }),\n        }}\n      >\n        {({\n          handleChange,\n          values,\n          handleSubmit,\n          errors,\n          isValid,\n          isSubmitting,\n          touched,\n          handleBlur,\n          setFieldTouched,\n          handleReset,\n        }) => (\n          <>\n            <section className='addProductGridContainer'>\n              <div className='addProductGridContainer__left'>\n                <div className='addProductGridContainer__name'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Brand Information *</h3>\n                    <div\n                      className={\n                        values.name && values.name.length > 2\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <Input\n                      label='Name *'\n                      value={values.name}\n                      name='name'\n                      placeHolder={''}\n                      isError={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['name'])\n                      }\n                      errorString={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['name'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('name');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Name'\n                      value={values.bnName}\n                      placeHolder={''}\n                      name='bnName'\n                      isError={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['bnName'])\n                      }\n                      errorString={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['bnName'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnName');\n                      }}\n                    />\n\n                    <TextArea\n                      label='Description'\n                      value={values.description}\n                      name='description'\n                      placeholder={'This brand...'}\n                      isError={\n                        (touched.description && errors.description) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['description'])\n                      }\n                      errorString={\n                        (touched.description && errors.description) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['description'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('description');\n                      }}\n                    />\n\n                    <TextArea\n                      label='BN Description'\n                      value={values.bnDescription}\n                      placeholder={'এই ব্র্যান্ড...'}\n                      name='bnDescription'\n                      isError={\n                        (touched.bnDescription && errors.bnDescription) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['bnDescription'])\n                      }\n                      errorString={\n                        (touched.bnDescription && errors.bnDescription) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['bnDescription'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnDescription');\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__image'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Cover</h3>\n\n                    <Tooltip\n                      placement='left'\n                      title={\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\n                      }\n                    >\n                      <a href='###'>\n                        <InfoCircleOutlined />\n                      </a>\n                    </Tooltip>\n                  </div>\n\n                  <div\n                    style={{\n                      padding: '10px',\n                    }}\n                    className='aboutToUploadImagesContainer'\n                  >\n                    {brandDetailState.isLoading && (\n                      <div\n                        style={{\n                          padding: '20px 0',\n                        }}\n                      >\n                        <Spin />\n                      </div>\n                    )}\n                    {brandDetailState.done && (\n                      <>\n                        {myImages &&\n                          // @ts-ignore\n                          myImages.length > 0 &&\n                          myImages.map((image, index) => {\n                            return (\n                              <div className='aboutToUploadImagesContainer__item'>\n                                <div\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\n                                  onClick={() => {\n                                    // setCoverImageId(image.id);\n                                    // handleSetImageAsThumnail(image);\n                                    setvisibleMedia(true);\n                                  }}\n                                >\n                                  <img src={image.cover} alt={image.alt} />\n                                </div>\n\n                                <span\n                                  onClick={() => {\n                                    handleImagesDelete(image.id);\n                                    handleDetachSingleImage(image.id);\n                                  }}\n                                  className='aboutToUploadImagesContainer__item-remove'\n                                >\n                                  <CloseOutlined />\n                                </span>\n\n                                {/* {coverImageId === image.id ? (\n                            <span className='aboutToUploadImagesContainer__item-cover'>\n                              <CheckOutlined />\n                            </span>\n                          ) : (\n                            !coverImageId &&\n                            index === 0 && (\n                              <span className='aboutToUploadImagesContainer__item-cover'>\n                                <CheckOutlined />\n                              </span>\n                            )\n                          )} */}\n                              </div>\n                            );\n                          })}\n\n                        {!myImages ||\n                        // @ts-ignore\n                        (myImages && !(myImages && myImages.length > 0)) ? (\n                          <>\n                            <Tooltip title={'Attach images'}>\n                              <div\n                                onClick={() => {\n                                  setvisibleMedia(true);\n                                }}\n                                className='aboutToUploadImagesContainer__uploadItem'\n                              >\n                                <FileImageFilled />\n                                <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                  <PlusOutlined />\n                                </span>\n                              </div>\n                            </Tooltip>\n                          </>\n                        ) : (\n                          ''\n                        )}\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className='addProductGridContainer__right'>\n                <div className='addProductGridContainer__category'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Meta Tags</h3>\n\n                      <Tooltip\n                        placement='left'\n                        title={\n                          \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                        }\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n\n                      {/* <Tooltip\n                        color='red'\n                        visible={\n                          addCategoryState.error['error']['category'] &&\n                          !(categoryids.length > 0)\n                        }\n                        placement='left'\n                        title={'Select at least one category'}\n                      >\n                        <div\n                          className={\n                            !(categoryids.length > 0) &&\n                            !addCategoryState.error['error']['category']\n                              ? 'checkicon'\n                              : addCategoryState.error['error']['category']\n                              ? 'checkicon-error'\n                              : 'checkicon-active'\n                          }\n                        >\n                          <CheckCircleOutlined />\n                        </div>\n                      </Tooltip> */}\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Input\n                        label='Meta title'\n                        value={values.metaTitle}\n                        placeHolder={'...'}\n                        name='metaTitle'\n                        isError={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['metaTitle'])\n                        }\n                        errorString={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['metaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaTitle');\n                        }}\n                      />\n\n                      <Input\n                        label='BN Meta title'\n                        value={values.bnMetaTitle}\n                        placeHolder={'...'}\n                        name='bnMetaTitle'\n                        isError={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['bnMetaTitle'])\n                        }\n                        errorString={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['bnMetaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaTitle');\n                        }}\n                      />\n\n                      <TextArea\n                        label='Meta description'\n                        value={values.metaDescription}\n                        placeholder={'meta...'}\n                        name='metaDescription'\n                        isError={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['metaDescription'])\n                        }\n                        errorString={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['metaDescription'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaDescription');\n                        }}\n                      />\n\n                      <TextArea\n                        label='BN Meta Description'\n                        value={values.bnMetaDescription}\n                        placeholder={'এইয় মেট...'}\n                        name='bnMetaDescription'\n                        isError={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        errorString={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaDescription');\n                        }}\n                      />\n\n                      <h3 className='inputFieldLabel'>Meta Tags </h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setTags}\n                        tags={tags}\n                      />\n\n                      <div\n                        style={{\n                          marginTop: '15px',\n                        }}\n                      ></div>\n\n                      <h3 className='inputFieldLabel'>BN Meta Tags </h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setBnTags}\n                        tags={bnTags}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            <div\n              style={{\n                padding: '15px',\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  color: '#555',\n                  marginRight: '10px',\n                }}\n                className='btnPrimaryClassNameoutline-cancle'\n                onClick={() => setBrandEditVisible(false)}\n                type='default'\n              >\n                Cancel\n              </Button>\n\n              <Button\n                className='btnPrimaryClassNameoutline'\n                onClick={handleSubmit}\n                loading={updateBrandState.isLoading}\n                type='link'\n                icon={<CheckOutlined />}\n              >\n                Update\n              </Button>\n            </div>\n\n            <MediaLibrary\n              setvisible={setvisibleMedia}\n              visible={visibleMedia}\n              setmyImages={setmyImages}\n              myImages={myImages}\n              myGoddamnImages={myGoddamnImages}\n              setMyGoddamnImages={setMyGoddamnImages}\n              isModalOpenForImages={false}\n            />\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nconst AddNewBrand = ({\n  brandDetailData,\n  brandEditVisible,\n  setBrandEditVisible,\n  brandList,\n  setBrandList,\n}: Props) => {\n  const handleCancel = () => {\n    setBrandEditVisible(false);\n  };\n\n  return (\n    <Modal\n      style={{\n        top: '40px',\n      }}\n      width={'70vw'}\n      bodyStyle={{\n        margin: 0,\n        padding: 0,\n      }}\n      title='Brand Edit'\n      destroyOnClose={true}\n      visible={brandEditVisible}\n      onCancel={handleCancel}\n      footer={false}\n    >\n      <ModalComponentChildItem\n        brandDetailData={brandDetailData}\n        brandEditVisible={brandEditVisible}\n        setBrandEditVisible={setBrandEditVisible}\n        brandList={brandList}\n        setBrandList={setBrandList}\n      />\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport {\n  Table,\n  Empty,\n  Popconfirm,\n  Space,\n  Button,\n  Input,\n  Tooltip,\n  notification,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\n\n/// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport AddNewBrand from './AddNewBrand';\n\n// @ts-ignore\nimport BrandQuickEdit from './BrandQuickEdit';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\nconst { Column } = Table;\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Brand Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setBrandList: any;\n  roles?: any;\n}\n\nconst MyTable = ({ data, setBrandList, roles }: myTableProps) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteBrandState, handleDeleteBrandFetch] = useHandleFetch(\n    {},\n    'deleteBrand'\n  );\n  const [brandDetailVisible, setBrandDetailVisible] = useState(false);\n  const history = useHistory();\n\n  const handleDeleteBrand = async (id) => {\n    const deleteBrandRes = await handleDeleteBrandFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteBrandRes && deleteBrandRes.status === 'ok') {\n      openSuccessNotification('Deleted Brand');\n      const newBrandList = data.filter((item) => item.id !== id);\n      setBrandList(newBrandList);\n    }\n  };\n\n  const getCover = (record: any) => {\n    if (record.cover) {\n      return record.cover;\n    } else return '';\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title=''\n          dataIndex='cover'\n          key='id'\n          width={'80px'}\n          className='classnameofthecolumn'\n          render={(cover, record: any) => (\n            <>\n              <div\n                className='listCoverImage'\n                onClick={() => {\n                  history.push(`/admin/brand/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n              >\n                <img src={getCover(record)} alt='' />\n              </div>\n            </>\n          )}\n        />\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/brand/${record.id}`);\n                  // setBrandDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Description'\n          dataIndex='description'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        {/* <Column\n           title=\"Product\" \n           dataIndex=\"productCount\" \n           key=\"id\" \n           className='classnameofthecolumn'\n         \n            /> */}\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n\n        {isAccess('postCatalogue', roles) && (\n          <Column\n            className='classnameofthecolumn'\n            title=''\n            key='action'\n            align='right'\n            render={(text, record: any) => (\n              <Space size='middle'>\n                <a href='##'>\n                  <Tooltip placement='top' title='Edit Brand'>\n                    <span\n                      className='iconSize'\n                      onClick={() => {\n                        setvisible(true);\n                        setactiveCategoryForEdit(record);\n                      }}\n                    >\n                      <EditOutlined />\n                    </span>\n                  </Tooltip>\n                </a>\n\n                <Popconfirm\n                  onConfirm={() => handleDeleteBrand(record.id)}\n                  title='Are you sure？'\n                  okText='Yes'\n                  cancelText='No'\n                >\n                  <span className='iconSize iconSize-danger'>\n                    <DeleteOutlined />\n                  </span>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        )}\n      </Table>\n\n      {activeCategoryForEdit && (\n        <BrandQuickEdit\n          brandList={data}\n          setBrandList={setBrandList}\n          setBrandEditVisible={setvisible}\n          brandEditVisible={visible}\n          brandDetailData={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  roles: any;\n}\n\nconst CategoryList = ({ roles }: Props) => {\n  const [brandList, setBrandList] = useState([]);\n\n  const [brandState, handlebrandListFetch] = useHandleFetch({}, 'brandList');\n\n  useEffect(() => {\n    const setBrands = async () => {\n      const brands = await handlebrandListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n      // @ts-ignore\n      setBrandList(brands);\n    };\n    setBrands();\n  }, []);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleSearch = (value) => {\n    if (brandState.data.length > 0) {\n      const newBrandList = brandState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setBrandList(newBrandList);\n    }\n  };\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Brand</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search brand..'\n              onChange={(e) => handleSearch(e.target.value)}\n              // style={{ width: 300 }}\n            />\n          </div>\n\n          {isAccess('postCatalogue', roles) && (\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          )}\n        </div>\n\n        <div className='categoryListContainer__afterHeader'>\n          {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n        </div>\n\n        <div className='categoryListContainer__categoryList'>\n          {brandState.done && brandList.length > 0 && (\n            <MyTable\n              roles={roles}\n              setBrandList={setBrandList}\n              data={brandList}\n            />\n          )}\n          {brandState.isLoading && <DataTableSkeleton />}\n          {brandState.done && !(brandList.length > 0) && (\n            <div\n              style={{\n                marginTop: '200px',\n              }}\n            >\n              <Empty\n                description='No Brand found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewBrand\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n        setBrandList={setBrandList}\n        brandList={brandList}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(CategoryList);\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n  Spin,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport MetaTags from '../category/MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string()\n  //   .label('Name')\n  //   .required('Name is required')\n  //   .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Brand Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n  image: [],\n  url: '',\n  cover: '',\n};\n\ninterface Props {\n  brandDetailData?: any;\n  brandEditVisible?: any;\n  setBrandEditVisible?: any;\n  setBrandDetailData?: any;\n}\n\nconst ModalComponentChildItem = ({\n  brandDetailData,\n  brandEditVisible,\n  setBrandEditVisible,\n  setBrandDetailData,\n}) => {\n  const [updateBrandState, handleUpdateBrandFetch] = useHandleFetch(\n    {},\n    'updateBrand'\n  );\n  const [brandDetailState, handleBrandDetailFetch] = useHandleFetch(\n    {},\n    'brandDetail'\n  );\n\n  const [\n    attachImageToItemMultipleState,\n    handleAttachImageToItemMultipleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\n  const [\n    attachImageToItemSingleState,\n    handleAttachImageToItemSingleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\n  const [\n    detachImageFromItemMultipleState,\n    handleDetachImageFromItemMultipleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n  const [myImages, setmyImages]: any = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [myGoddamnImages, setMyGoddamnImages] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const brandDetailRes = await handleBrandDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: brandDetailData.id,\n          },\n        },\n      });\n    };\n\n    getBrandDetail();\n  }, [brandDetailData]);\n\n  useEffect(() => {\n    if (\n      brandDetailState.data &&\n      Object.keys(brandDetailState.data).length > 0\n    ) {\n      const images = brandDetailState.data.image;\n      if (images && images.length > 0) {\n        setmyImages(images);\n        setMyGoddamnImages(images);\n      }\n\n      if (brandDetailState.data.cover && brandDetailState.data.cover['id']) {\n        // @ts-ignore\n        setmyImages([brandDetailState.data.cover]);\n        setCoverImageId(brandDetailState.data.cover['id']);\n      }\n    }\n  }, [brandDetailState.data]);\n\n  const handleDetachSingleImage = async (id) => {\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'brand',\n          itemId: brandDetailData.id,\n        },\n      },\n    });\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'brand',\n          itemId: brandDetailData.id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      openSuccessNotification('Set as thumbnail!');\n      // const positionInBrand = () => {\n      //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\n      // }\n\n      // const index = positionInBrand();\n\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\n\n      // if (prevItem) {\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\n      //     setBrandList(updateBrandList);\n      // }\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  const handleSubmit = async (values: any, actions: any) => {\n    console.log('myReadyToGoImages', myImages);\n\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\n      // @ts-ignore\n      const images =\n        myImages && myImages.length > 0 ? myImages.map((item) => item.id) : [];\n\n      if (images[0] && images.length > 1) {\n        await handleAttachImageToItemMultipleFetch({\n          urlOptions: {\n            placeHolders: {\n              collection: 'brand',\n              itemId: brandDetailData.id,\n            },\n          },\n          body: {\n            image: images,\n          },\n        });\n      } else if (images[0] && images.length < 1) {\n        await handleAttachImageToItemSingleFetch({\n          urlOptions: {\n            placeHolders: {\n              imageId: images[0].id,\n              collection: 'brand',\n              itemId: brandDetailData.id,\n            },\n          },\n        });\n      }\n    }\n\n    const updateBrandRes = await handleUpdateBrandFetch({\n      urlOptions: {\n        placeHolders: {\n          id: brandDetailData.id,\n        },\n      },\n      body: {\n        name: values.name,\n        description: values.description,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\n          name: values.bnName,\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updateBrandRes && updateBrandRes.status === 'ok') {\n      setBrandDetailData({\n        ...brandDetailData,\n        id: brandDetailData['id'] || '',\n        key: brandDetailData['id'] || '',\n        name: updateBrandRes['name'] || '',\n        description: updateBrandRes['description'] || '',\n        // @ts-ignore\n        ...updateBrandRes,\n      });\n\n      openSuccessNotification('Brand Updated!');\n      setBrandEditVisible(false);\n\n      // const positionInBrand = () => {\n      //     return brandList.map(item => item.id).indexOf(productRecord.id);\n      // }\n\n      // const index = positionInBrand();\n      // const updatedItem = Object.assign({}, brandList[index], { ...updateBrandRes });\n      // console.log('updateBrandList', updatedItem)\n\n      // const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\n\n      // setBrandList(updateBrandList);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!updateBrandState['isLoading']) {\n      const error = updateBrandState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [updateBrandState]);\n\n  const onSwitchChange = (checked: any) => {\n    // console.log(checked);\n  };\n\n  const handleCancel = (e: any) => {\n    setBrandEditVisible(false);\n    setBnTags([]);\n    setTags([]);\n    setCoverImageId('');\n    setvisibleMedia(false);\n    setmyImages(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  console.log('myImages', myImages);\n\n  useEffect(() => {\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\n      const metaTags =\n        brandDetailData.metaTags && brandDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        brandDetailData.bn &&\n        brandDetailData.bn['metaTags'] &&\n        brandDetailData.bn['metaTags'].split(',');\n      setTags(metaTags || []);\n      setBnTags(bnMetaTags || []);\n    }\n  }, []);\n\n  console.log('brandEdit', brandDetailData);\n\n  useEffect(() => {\n    console.log('thumnail', myImages);\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      console.log('thumnail2', myImages);\n\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        // set thumbnail with server for edits\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  useEffect(() => {\n    if (brandDetailData && Object.keys(brandDetailData).length > 0) {\n      const metaTags =\n        brandDetailData.metaTags && brandDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        brandDetailData.bn &&\n        brandDetailData.bn['metaTags'] &&\n        brandDetailData.bn['metaTags'].split(',');\n      setTags(metaTags || []);\n      setBnTags(bnMetaTags || []);\n    }\n  }, []);\n\n  return (\n    <>\n      <Formik\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        enableReinitialize={true}\n        initialValues={{\n          ...initialValues,\n          ...brandDetailData,\n          ...(brandDetailData &&\n            Object.keys(brandDetailData).length > 0 && {\n              bnMetaTitle:\n                brandDetailData['bn'] &&\n                brandDetailData['bn'].metaTitle &&\n                brandDetailData['bn'].metaTitle,\n              bnMetaDescription:\n                brandDetailData['bn'] &&\n                brandDetailData['bn'].metaDescription &&\n                brandDetailData['bn'].metaDescription,\n              bnName:\n                brandDetailData['bn'] &&\n                brandDetailData['bn'].name &&\n                brandDetailData['bn'].name,\n              bnDescription:\n                brandDetailData['bn'] &&\n                brandDetailData['bn'].description &&\n                brandDetailData['bn'].description,\n            }),\n        }}\n      >\n        {({\n          handleChange,\n          values,\n          handleSubmit,\n          errors,\n          isValid,\n          isSubmitting,\n          touched,\n          handleBlur,\n          setFieldTouched,\n          handleReset,\n        }) => (\n          <>\n            <section className='addProductGridContainer'>\n              <div className='addProductGridContainer__left'>\n                <div className='addProductGridContainer__name'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Brand Information *</h3>\n                    <div\n                      className={\n                        values.name && values.name.length > 2\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <Input\n                      label='Name *'\n                      value={values.name}\n                      name='name'\n                      placeHolder={''}\n                      isError={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['name'])\n                      }\n                      errorString={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['name'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('name');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Name'\n                      value={values.bnName}\n                      placeHolder={''}\n                      name='bnName'\n                      isError={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['bnName'])\n                      }\n                      errorString={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['bnName'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnName');\n                      }}\n                    />\n\n                    <TextArea\n                      label='Description'\n                      value={values.description}\n                      name='description'\n                      placeholder={'This brand...'}\n                      isError={\n                        (touched.description && errors.description) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['description'])\n                      }\n                      errorString={\n                        (touched.description && errors.description) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['description'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('description');\n                      }}\n                    />\n\n                    <TextArea\n                      label='BN Description'\n                      value={values.bnDescription}\n                      placeholder={'এই ব্র্যান্ড...'}\n                      name='bnDescription'\n                      isError={\n                        (touched.bnDescription && errors.bnDescription) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['bnDescription'])\n                      }\n                      errorString={\n                        (touched.bnDescription && errors.bnDescription) ||\n                        (!isSubmitting &&\n                          updateBrandState.error['error']['bnDescription'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnDescription');\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__image'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Cover</h3>\n\n                    <Tooltip\n                      placement='left'\n                      title={\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\n                      }\n                    >\n                      <a href='###'>\n                        <InfoCircleOutlined />\n                      </a>\n                    </Tooltip>\n                  </div>\n\n                  <div\n                    style={{\n                      padding: '10px',\n                    }}\n                    className='aboutToUploadImagesContainer'\n                  >\n                    {brandDetailState.isLoading && (\n                      <div\n                        style={{\n                          padding: '20px 0',\n                        }}\n                      >\n                        <Spin />\n                      </div>\n                    )}\n                    {brandDetailState.done && (\n                      <>\n                        {myImages &&\n                          // @ts-ignore\n                          myImages.length > 0 &&\n                          myImages.map((image, index) => {\n                            return (\n                              <div className='aboutToUploadImagesContainer__item'>\n                                <div\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\n                                  onClick={() => {\n                                    // setCoverImageId(image.id);\n                                    // handleSetImageAsThumnail(image);\n                                    setvisibleMedia(true);\n                                  }}\n                                >\n                                  <img src={image.cover} alt={image.alt} />\n                                </div>\n\n                                <span\n                                  onClick={() => {\n                                    handleImagesDelete(image.id);\n                                    handleDetachSingleImage(image.id);\n                                  }}\n                                  className='aboutToUploadImagesContainer__item-remove'\n                                >\n                                  <CloseOutlined />\n                                </span>\n\n                                {/* {coverImageId === image.id ? (\n                            <span className='aboutToUploadImagesContainer__item-cover'>\n                              <CheckOutlined />\n                            </span>\n                          ) : (\n                            !coverImageId &&\n                            index === 0 && (\n                              <span className='aboutToUploadImagesContainer__item-cover'>\n                                <CheckOutlined />\n                              </span>\n                            )\n                          )} */}\n                              </div>\n                            );\n                          })}\n\n                        {!myImages ||\n                        // @ts-ignore\n                        (myImages && !(myImages && myImages.length > 0)) ? (\n                          <>\n                            <Tooltip title={'Attach images'}>\n                              <div\n                                onClick={() => {\n                                  setvisibleMedia(true);\n                                }}\n                                className='aboutToUploadImagesContainer__uploadItem'\n                              >\n                                <FileImageFilled />\n                                <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                  <PlusOutlined />\n                                </span>\n                              </div>\n                            </Tooltip>\n                          </>\n                        ) : (\n                          ''\n                        )}\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className='addProductGridContainer__right'>\n                <div className='addProductGridContainer__category'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Meta Tags</h3>\n\n                      <Tooltip\n                        placement='left'\n                        title={\n                          \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                        }\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n\n                      {/* <Tooltip\n                        color='red'\n                        visible={\n                          addCategoryState.error['error']['category'] &&\n                          !(categoryids.length > 0)\n                        }\n                        placement='left'\n                        title={'Select at least one category'}\n                      >\n                        <div\n                          className={\n                            !(categoryids.length > 0) &&\n                            !addCategoryState.error['error']['category']\n                              ? 'checkicon'\n                              : addCategoryState.error['error']['category']\n                              ? 'checkicon-error'\n                              : 'checkicon-active'\n                          }\n                        >\n                          <CheckCircleOutlined />\n                        </div>\n                      </Tooltip> */}\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Input\n                        label='Meta title'\n                        value={values.metaTitle}\n                        placeHolder={'...'}\n                        name='metaTitle'\n                        isError={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['metaTitle'])\n                        }\n                        errorString={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['metaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaTitle');\n                        }}\n                      />\n\n                      <Input\n                        label='BN Meta title'\n                        value={values.bnMetaTitle}\n                        placeHolder={'...'}\n                        name='bnMetaTitle'\n                        isError={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['bnMetaTitle'])\n                        }\n                        errorString={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['bnMetaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaTitle');\n                        }}\n                      />\n\n                      <TextArea\n                        label='Meta description'\n                        value={values.metaDescription}\n                        placeholder={'meta...'}\n                        name='metaDescription'\n                        isError={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['metaDescription'])\n                        }\n                        errorString={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error']['metaDescription'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaDescription');\n                        }}\n                      />\n\n                      <TextArea\n                        label='BN Meta Description'\n                        value={values.bnMetaDescription}\n                        placeholder={'এইয় মেট...'}\n                        name='bnMetaDescription'\n                        isError={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        errorString={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            updateBrandState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaDescription');\n                        }}\n                      />\n\n                      <h3 className='inputFieldLabel'>Meta Tags </h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setTags}\n                        tags={tags}\n                      />\n\n                      <div\n                        style={{\n                          marginTop: '15px',\n                        }}\n                      ></div>\n\n                      <h3 className='inputFieldLabel'>BN Meta Tags </h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setBnTags}\n                        tags={bnTags}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            <div\n              style={{\n                padding: '15px',\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  color: '#555',\n                  marginRight: '10px',\n                }}\n                className='btnPrimaryClassNameoutline-cancle'\n                onClick={() => setBrandEditVisible(false)}\n                type='default'\n              >\n                Cancel\n              </Button>\n\n              <Button\n                className='btnPrimaryClassNameoutline'\n                onClick={handleSubmit}\n                loading={updateBrandState.isLoading}\n                type='link'\n                icon={<CheckOutlined />}\n              >\n                Update\n              </Button>\n            </div>\n\n            <MediaLibrary\n              setvisible={setvisibleMedia}\n              visible={visibleMedia}\n              setmyImages={setmyImages}\n              myImages={myImages}\n              myGoddamnImages={myGoddamnImages}\n              setMyGoddamnImages={setMyGoddamnImages}\n              isModalOpenForImages={false}\n            />\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nconst AddNewBrand = ({\n  brandDetailData,\n  brandEditVisible,\n  setBrandEditVisible,\n  setBrandDetailData,\n}: Props) => {\n  const handleCancel = () => {\n    setBrandEditVisible(false);\n  };\n\n  return (\n    <Modal\n      style={{\n        top: '40px',\n      }}\n      width={'70vw'}\n      bodyStyle={{\n        margin: 0,\n        padding: 0,\n      }}\n      title='Brand Edit'\n      destroyOnClose={true}\n      visible={brandEditVisible}\n      onCancel={handleCancel}\n      footer={false}\n    >\n      <ModalComponentChildItem\n        brandDetailData={brandDetailData}\n        brandEditVisible={brandEditVisible}\n        setBrandEditVisible={setBrandEditVisible}\n        setBrandDetailData={setBrandDetailData}\n      />\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport BrandEdit from './BrandEdit';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n  roles?: any;\n}\n\nconst NewBrandDetail = ({ roles }: Props) => {\n  const [brandDetailState, handleBrandDetailFetch] = useHandleFetch(\n    {},\n    'brandDetail'\n  );\n  const [brandProductsState, handleBrandProductsFetch] = useHandleFetch(\n    {},\n    'brandProducts'\n  );\n\n  const params = useParams();\n  const history = useHistory();\n  const brandId = params['id'];\n  const [brandEditVisible, setBrandEditVisible] = useState(false);\n  const [brandDetailData, setBrandDetailData] = useState(false);\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const brandDetailRes = await handleBrandDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: brandId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (brandDetailRes) {\n        // @ts-ignore\n        setBrandDetailData(brandDetailRes);\n      }\n\n      console.log('brandDetailRes', brandDetailRes);\n    };\n\n    getBrandDetail();\n  }, [brandId]);\n\n  useEffect(() => {\n    const getBrandProducts = async () => {\n      await handleBrandProductsFetch({\n        urlOptions: {\n          placeHolders: {\n            id: brandId,\n          },\n        },\n      });\n    };\n\n    getBrandProducts();\n  }, [brandId]);\n\n  console.log('brandProductsState', brandProductsState);\n\n  console.log('brandParams', params);\n\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Brand Detail</h3>\n\n        {brandDetailState.done &&\n          brandDetailData &&\n          Object.keys(brandDetailData).length > 0 && (\n            <>\n              <BrandEdit\n                brandEditVisible={brandEditVisible}\n                setBrandEditVisible={setBrandEditVisible}\n                brandDetailData={brandDetailData}\n                setBrandDetailData={setBrandDetailData}\n              />\n\n              {isAccess('postCatalogue', roles) && (\n                <Button\n                  onClick={() => setBrandEditVisible(true)}\n                  type='link'\n                  icon={<EditOutlined />}\n                >\n                  Edit\n                </Button>\n              )}\n            </>\n          )}\n      </div>\n      <Skeleton\n        avatar\n        paragraph={{ rows: 3 }}\n        loading={brandDetailState.isLoading}\n      >\n        {brandDetailState.done &&\n          brandDetailData &&\n          !(Object.keys(brandDetailData).length > 0) && (\n            <Empty\n              description='No Brand found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {brandDetailState.done &&\n          brandDetailData &&\n          Object.keys(brandDetailData).length > 0 && (\n            <div className='brandDetailContainer__header'>\n              <div className='brandDetailContainer__header-coverContainer'>\n                <img\n                  src={\n                    brandDetailData['cover'] &&\n                    brandDetailData['cover']['cover']\n                  }\n                  alt=''\n                />\n              </div>\n              <div className='brandDetailContainer__header-info'>\n                <h2>{brandDetailData['name']}</h2>\n                <h3>{brandDetailData['description']}</h3>\n\n                {brandDetailData['url'] && (\n                  <h3>\n                    URL:\n                    <span>{brandDetailData['url']}</span>\n                  </h3>\n                )}\n              </div>\n            </div>\n          )}\n      </Skeleton>\n\n      <div className='brandDetailContainer__heading'>\n        <h3>Products</h3>\n      </div>\n      <div className='brandDetailContainer__body'>\n        {brandProductsState.isLoading && <DataTableSkeleton />}\n        {brandProductsState.done && !(brandProductsState.data.length > 0) && (\n          <div\n            style={{\n              marginTop: '100px',\n            }}\n          >\n            <Empty\n              description='No Products exists for this brand'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          </div>\n        )}\n\n        {brandProductsState.done &&\n          brandProductsState.data &&\n          brandProductsState.data.length > 0 && (\n            <>\n              <Table\n                style={{\n                  paddingTop: '10px',\n                  borderRadius: '5px !important',\n                  overflow: 'hidden',\n                  boxShadow:\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\n                }}\n                // expandable={{\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                //     rowExpandable: record => record.name !== 'Not Expandable',\n                //   }}\n                // bordered={true}\n                size='small'\n                // pagination={false}\n                dataSource={brandProductsState.data}\n                tableLayout={'auto'}\n                onHeaderRow={(column) => {\n                  return {\n                    style: {\n                      color: 'red !important',\n                    },\n                  };\n                }}\n              >\n                <Column\n                  title=''\n                  dataIndex='cover'\n                  key='id'\n                  width={'80px'}\n                  className='classnameofthecolumn'\n                  render={(cover, record: any) => (\n                    <>\n                      <img\n                        onClick={() => {\n                          history.push(`/admin/product/${record.id}`);\n                        }}\n                        src={cover}\n                        alt='cover img'\n                        style={{\n                          height: '40px',\n                          width: '40px',\n                          objectFit: 'contain',\n                          borderRadius: '3px',\n                          cursor: 'pointer',\n                        }}\n                      />\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Name'\n                  dataIndex='name'\n                  key='id'\n                  className='classnameofthecolumn'\n                  render={(text, record: any) => (\n                    <>\n                      <h4\n                        onClick={() => {\n                          history.push(`/admin/product/${record.id}`);\n                        }}\n                        style={{\n                          fontWeight: 400,\n                          color: '#555',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        {text}\n                      </h4>\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Offer Price'\n                  dataIndex='offerPrice'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Price'\n                  dataIndex='price'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Available'\n                  dataIndex='available'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Minimum'\n                  dataIndex='minimum'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n              </Table>\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(NewBrandDetail);\n","import React, { useState, useEffect } from 'react';\nimport { AutoComplete } from 'antd';\n\nimport InputSmall from '../../components/Field/InputSmall';\nimport { useFetch } from '../../hooks';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst Complete = ({ setAttributeList, attributeList, attribute }) => {\n  const [suggestedOptions, setsuggesteOptions] = useState([]);\n  const attributeLisState = useFetch([], [], 'attributeList', {});\n\n  const [attributeItem, setAttributeITem] = useState({\n    name: attribute.name,\n    value: attribute.value,\n  });\n\n  useEffect(() => {\n    const positionInAttribute = () => {\n      return attributeList.map((item) => item.id).indexOf(attribute.id);\n    };\n\n    const index = positionInAttribute();\n\n    const updatedItem = Object.assign({}, attributeList[index], {\n      ...attributeItem,\n    });\n    const updateAttributeList = [\n      ...attributeList.slice(0, index),\n      updatedItem,\n      ...attributeList.slice(index + 1),\n    ];\n    setAttributeList(updateAttributeList);\n  }, [attributeItem]);\n\n  const handleAttributeDelete = () => {\n    const updateAttributeList = attributeList.filter(\n      (item) => item.id !== attribute.id\n    );\n    setAttributeList(updateAttributeList);\n  };\n\n  useEffect(() => {\n    if (\n      attributeLisState.data &&\n      Object.keys(attributeLisState.data).length > 0\n    ) {\n      const options = Object.keys(attributeLisState.data);\n      const manupulatedOptions = options.map((option) => {\n        return {\n          value: option,\n        };\n      });\n      setsuggesteOptions(manupulatedOptions);\n    }\n  }, [attributeLisState.data]);\n\n  const handleAttributeSelect = (value) => {\n    if (attributeLisState && Object.keys(attributeLisState.data).length > 0) {\n      if (attributeLisState.data[value]) {\n        setAttributeITem({\n          ...attribute,\n          name: value,\n          value: attributeLisState.data[value],\n        });\n      }\n    } else {\n      setAttributeITem({\n        ...attribute,\n        name: value,\n      });\n    }\n  };\n\n  const handleAttributeValueChange = (e) => {\n    setAttributeITem({\n      ...attribute,\n      value: e.target.value,\n    });\n  };\n\n  return (\n    <>\n      <div\n        key={attribute.id}\n        className='addProductGridContainer__item-body-variationCard-item-attribute-item'\n      >\n        <div\n          onClick={handleAttributeDelete}\n          className='addProductGridContainer__item-body-variationCard-item-attribute-item-delete'\n        >\n          <DeleteOutlined />\n        </div>\n\n        <h3 className='inputFieldLabel-small'>Name</h3>\n        <AutoComplete\n          value={attribute.name}\n          style={{ width: '100%' }}\n          options={suggestedOptions}\n          placeholder='attribute'\n          onChange={handleAttributeSelect}\n          filterOption={(inputValue, suggestedOption) =>\n            suggestedOption.value\n              .toUpperCase()\n              .indexOf(inputValue.toUpperCase()) !== -1\n          }\n        />\n\n        {attribute.name && (\n          <>\n            <div style={{ marginTop: '10px' }}></div>\n            <InputSmall\n              label='Value'\n              value={attribute.value}\n              name='value'\n              onChange={handleAttributeValueChange}\n            />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Complete;\n","import React, { useState, useEffect } from 'react';\nimport Attributes from './Attributes';\nimport AddAttributeValues from '../attribute/AddAttributeValues';\nimport InputSmall from '../../components/Field/InputSmall';\nimport { Button } from 'antd';\nimport { PlusOutlined, CheckOutlined } from '@ant-design/icons';\n\ninterface Props {\n  handleAddPricing: any;\n  pricingItem?: any;\n  handleUpdatePricing?: any;\n  isPricingEditActive?: any;\n}\n\nconst Pricing = ({\n  handleAddPricing,\n  pricingItem,\n  handleUpdatePricing,\n  isPricingEditActive,\n}: Props) => {\n  const [price, setprice] = useState({\n    regular: '',\n    offer: '',\n  });\n  const [stock, setStock] = useState({\n    available: '',\n    minimum: '',\n  });\n\n\n  const [maximumPurchaseLimit,setMaximumPurchaseLimit] = useState(''); \n\n  const [attributeList, setAttributeList] = useState([]);\n\n  useEffect(() => {\n    if (pricingItem && Object.keys(pricingItem).length > 0) {\n      setprice({\n        ...price,\n        ...pricingItem['price'],\n      });\n\n      setStock({\n        ...stock,\n        ...pricingItem['stock'],\n      });\n\n\n      // set maximumPurchaseLimit as default\n      setMaximumPurchaseLimit(pricingItem?.maximumPurchaseLimit)\n\n      const attributeListItems = [];\n      if (\n        pricingItem.attribute &&\n        Object.keys(pricingItem.attribute).length > 0\n      ) {\n        const attributeKeys = Object.keys(pricingItem.attribute);\n        attributeKeys.forEach((attributeKey, index) => {\n          attributeListItems.push({\n            name: attributeKey,\n            value: pricingItem.attribute[attributeKey],\n            id: index,\n          });\n        });\n      }\n\n      setAttributeList(attributeListItems);\n    }\n  }, [pricingItem]);\n\n  console.log('pricingItem', pricingItem);\n  console.log('attributeList', attributeList);\n\n  const handlePriceChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setprice({\n      ...price,\n      [name]: value,\n    });\n  };\n\n  const handleStockChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setStock({\n      ...stock,\n      [name]: value,\n    });\n  };\n\n  const handleSavePricing = (e) => {\n    e.preventDefault();\n\n    if (attributeList.length > 0) {\n      const attribute = {};\n\n      for (let item of attributeList) {\n        console.log('itemofattribute', item);\n        if (item['value'] && item['name']) {\n          attribute[item['name']] = item['value'];\n        }\n      }\n\n      const priceItem = {\n        price,\n        stock,\n        attribute,\n        maximumPurchaseLimit\n      };\n\n\n      // resetting the fields\n      setprice({\n        regular: '',\n        offer: '',\n      });\n      setStock({ available: '', minimum: '' });\n      setMaximumPurchaseLimit(''); \n      setAttributeList([]);\n\n      handleAddPricing(priceItem);\n    } else {\n      const priceItem = {\n        price: price,\n        stock: stock,\n        maximumPurchaseLimit,\n        attribute: {},\n      };\n\n      setprice({\n        regular: '',\n        offer: '',\n      });\n      setStock({ available: '', minimum: '' });\n      setMaximumPurchaseLimit(''); \n      setAttributeList([]);\n      handleAddPricing(priceItem);\n    }\n  };\n\n  const handleUpdatePricingItem = (e) => {\n    e.preventDefault();\n\n    if (attributeList.length > 0) {\n      const attribute = {};\n\n      for (let item of attributeList) {\n        console.log('itemofattribute', item);\n        if (item['value'] && item['name']) {\n          attribute[item['name']] = item['value'];\n        }\n      }\n\n      const priceItem = {\n        price,\n        stock,\n        attribute,\n        maximumPurchaseLimit,\n        id: pricingItem.id,\n      };\n\n      setprice({\n        regular: '',\n        offer: '',\n      });\n      setStock({ available: '', minimum: '' });\n      setAttributeList([]);\n      setMaximumPurchaseLimit(''); \n      handleUpdatePricing(priceItem);\n\n    } else {\n      const priceItem = {\n        price,\n        stock,\n        attribute: {},\n        maximumPurchaseLimit,\n        id: pricingItem.id,\n      };\n\n      setprice({\n        regular: '',\n        offer: '',\n      });\n      setStock({ available: '', minimum: '' });\n      setAttributeList([]);\n      setMaximumPurchaseLimit(''); \n      handleUpdatePricing(priceItem);\n    }\n  };\n\n  const handleAddAttribute = () => {\n    setAttributeList([\n      ...attributeList,\n      {\n        name: '',\n        value: '',\n        id: `${attributeList.length}`,\n      },\n    ]);\n  };\n\n  const getiCreatePricingIsDisabled = () => {\n    if (!price.regular) {\n      return true;\n    } else return false;\n  };\n\n  const handleMaximumPurChaseLimit = (e) => {\n    setMaximumPurchaseLimit(e.target.value)\n  }\n\n  // console.log('attributeList', attributeList);\n\n  return (\n    <>\n      <div className='addProductGridContainer__item-body-variationCard'>\n        <div className='addProductGridContainer__item-body-variationCard-left'>\n          <div className='addProductGridContainer__item-body-variationCard-item'>\n            <h4>Price</h4>\n            <div className='addProductGridContainer__item-body-variationCard-item-container'>\n              <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\n                <InputSmall\n                  min={0}\n                  type='number'\n                  label='Regular  *'\n                  value={price.regular}\n                  name='regular'\n                  onChange={handlePriceChange}\n                />\n              </div>\n              <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\n                <InputSmall\n                  min={0}\n                  type='number'\n                  size='small'\n                  label='Offer'\n                  value={price.offer}\n                  name='offer'\n                  onChange={handlePriceChange}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className='addProductGridContainer__item-body-variationCard-right'>\n            <div className='addProductGridContainer__item-body-variationCard-item'>\n              <h4>Attributes</h4>\n              <div className='addProductGridContainer__item-body-variationCard-item-attribute'>\n                {attributeList.map((attribute) => {\n                  return (\n                    <Attributes\n                      attribute={attribute}\n                      attributeList={attributeList}\n                      setAttributeList={setAttributeList}\n                    />\n                  );\n                })}\n                <Button\n                  size='small'\n                  onClick={handleAddAttribute}\n                  style={{\n                    width: '180px',\n                    minHeight: '75px',\n                    marginTop: '0px',\n                    borderRadius: '8px',\n                  }}\n                  type='dashed'\n                  icon={<PlusOutlined />}\n                >\n                  Add Attribute\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginTop: '25px',\n              }}\n              className='addProductGridContainer__item-body-variationCard-item'\n            >\n              <h4>Stock</h4>\n              <div className='addProductGridContainer__item-body-variationCard-item-container'>\n                <div className='addProductGridContainer__item-body-variationCard-item-container-left'>\n                  <InputSmall\n                    min={0}\n                    type='number'\n                    label='Available'\n                    value={stock.available}\n                    name='available'\n                    onChange={handleStockChange}\n                  />\n                </div>\n                <div className='addProductGridContainer__item-body-variationCard-item-container-right'>\n                  <InputSmall\n                    min={0}\n                    type='number'\n                    label='Minimum'\n                    value={stock.minimum}\n                    name='minimum'\n                    onChange={handleStockChange}\n                  />\n                </div>\n              </div>\n            </div>\n            <div\n              style={{\n                marginTop: '25px',\n              }}\n              className='addProductGridContainer__item-body-variationCard-item'\n            >\n              <h4>\n                Maximum Purchase Limit\n              </h4>\n              <div className='addProductGridContainer__item-body-variationCard-item-container'>\n              <InputSmall\n                    min={0}\n                    type='number'\n                    // label='Available'\n                    value={maximumPurchaseLimit}\n                    name='maximumPurchaseLimit'\n                    onChange={handleMaximumPurChaseLimit}\n                  />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* <Button\n          // type=\"primary\"\n         \n          icon={<PlusOutlined />}\n          onClick={() => setAddNewCategoryVisible(true)}\n        >\n        Add New\n      </Button> */}\n\n      <Button\n        style={{\n          marginLeft: '10px',\n        }}\n        onClick={\n          isPricingEditActive ? handleUpdatePricingItem : handleSavePricing\n        }\n        disabled={getiCreatePricingIsDisabled()}\n        className='btnAddToPrice'\n        icon={<CheckOutlined />}\n      >\n        {isPricingEditActive ? 'Update Pricing' : 'Add To Pricing'}\n      </Button>\n    </>\n  );\n};\n\nexport default Pricing;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  FileImageOutlined,\n  FileImageTwoTone,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  EditOutlined,\n} from '@ant-design/icons';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport DatePicker from '../../components/Field/DatePicker';\nimport {\n  openSuccessNotification,\n  openErrorNotification,\n} from '../../components/Notification';\nimport Tags from './Tags';\nimport Brands from './Brands';\nimport Categories from './Categories';\nimport Pricing from './Pricing';\nimport MetaTags from '../category/MetaTags';\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n  model: '',\n  unit: '',\n  regular: '',\n  offer: '',\n  available: '',\n  minimum: '',\n  image: [],\n  url: '',\n  cover: '',\n  pricing: [],\n  venue: '',\n  date: '',\n  time: '',\n  purchaseLimit: null,\n  bnUnit: '',\n  bnName: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  productList?: any;\n  setProductList?: any;\n}\n\nconst AddNewProduct = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  productList,\n  setProductList,\n}: Props) => {\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\n    {},\n    'addProduct'\n  );\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [categoryids, setcategoryIds] = useState([]);\n  const [tagIds, setTagIds] = useState([]);\n  const [brandId, setBrandId] = useState('');\n  const [pricing, setPricing] = useState([]);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [date, setDateFeild] = useState('');\n  const [time, setTimeFeild] = useState('');\n  const [description, setDescription] = useState('');\n  const [bnDescription, setBNDescription] = useState('');\n  const [metaTags, setMetaTags] = useState([]);\n  const [bnMetaTags, setBnMetaTags] = useState([]);\n  const [editpricingItem, setEditPricingItem] = useState({});\n  const [pricingTagActiveKey, setpricingTagActiveKey] = useState('1');\n  const [isPricingEditActive, seTisPricingEditActive] = useState(false);\n\n  const makeEmptyCategoryOptions = (setEmpty) => {\n    setEmpty([]);\n  };\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    const addProductRes = await handleAddProductFetch({\n      body: {\n        name: values.name.trim(),\n        description: description,\n        model: values.model,\n        unit: values.unit,\n        category: categoryids,\n        tags: tagIds,\n        brand: brandId,\n        image: imagesIds,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        pricing: pricing,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: metaTags.join(','),\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnMetaTags.join(','),\n          name: values.bnName.trim(),\n          unit: values.metaUnit,\n          description: bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addProductRes && addProductRes.status === 'ok') {\n      openSuccessNotification('Product Created');\n      setAddNewCategoryVisible(false);\n\n      console.log('addProductRes22', addProductRes);\n      setProductList([\n        {\n          // @ts-ignore\n          ...addProductRes,\n          id: addProductRes['_id'] || '',\n          key: addProductRes['_id'] || '',\n          name: addProductRes['name'] || '',\n          description: addProductRes['description'] || '',\n          cover: addProductRes['cover'] || '',\n        },\n        ...productList,\n      ]);\n      // @ts-ignore\n      setmyImages([]);\n      setCoverImageId('');\n      setPricing([]);\n      setTagIds([]);\n      setSelectedTags([]);\n      setBrandId('');\n      setcategoryIds([]);\n      setCategoryOptions([]);\n      actions.resetForm();\n    } else {\n      // openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addProductState['isLoading']) {\n      const error = addProductState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addProductState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !values.name ||\n      !(pricing.length > 0) ||\n      !(categoryids.length > 0) ||\n      !isValid\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleDeleteFromSelectedImage = () => {};\n\n  const handleThumbnailImageDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myThumbnailImage &&\n      myThumbnailImage.filter((image) => {\n        return image.id !== id;\n      });\n\n    if (newImages.length > 0) {\n      setmyThumbnailImage(newImages);\n    } else setmyThumbnailImage(false);\n  };\n\n  const handleAddPricing = (priceItem) => {\n    console.log('addedPricing',priceItem);\n    setPricing([\n      {\n        ...priceItem,\n        id: pricing.length,\n      },\n      ...pricing,\n    ]);\n    message.info('Product Pricing Added');\n  };\n\n  const handleUpdatePricing = (priceItem) => {\n    const positionInPricing = () => {\n      return pricing.map((item) => item.id).indexOf(priceItem.id);\n    };\n\n    const index = positionInPricing();\n\n    // @ts-ignore\n    const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\n    const updatePricingList = [\n      ...pricing.slice(0, index),\n      updatedItem,\n      ...pricing.slice(index + 1),\n    ];\n\n    setPricing(updatePricingList);\n\n    message.info('Product Pricing Updated');\n    seTisPricingEditActive(true);\n    setpricingTagActiveKey('2');\n  };\n\n  const handleEditPricing = (id) => {\n    seTisPricingEditActive(true);\n    const pricingItem = pricing.find((item) => item.id === id);\n    if (pricingItem) {\n      setEditPricingItem(pricingItem);\n    }\n  };\n\n  const handleDeletePricing = (id) => {\n    const newPricing = pricing.filter((item) => item.id !== id);\n    setPricing(newPricing);\n    message.info('Product Pricing Deleted');\n  };\n\n  const isCategoryInValid = () => {\n    if (\n      addProductState.error['error']['category'] &&\n      !categoryids &&\n      categoryids.length\n    ) {\n      return true;\n    } else if (categoryids && categoryids.length > 0) {\n      return false;\n    }\n  };\n\n  const handleDateChange = (date, dateString) => {\n    setDateFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  console.log('pricingingi', pricing);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            bodyStyle={{\n              margin: 0,\n              padding: 0,\n            }}\n            width={'70vw'}\n            title='Add New Product'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n            }}\n          >\n            <section className='addProductGridContainer'>\n              <div className='addProductGridContainer__left'>\n                <div className='addProductGridContainer__name'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Product Information *</h3>\n\n                    <div\n                      className={\n                        values.name && values.name.length > 2\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <Input\n                      label='Name *'\n                      value={values.name}\n                      placeHolder={'Rafty ox'}\n                      name='name'\n                      isError={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['name'])\n                      }\n                      errorString={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['name'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('name');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Name'\n                      value={values.bnName}\n                      placeHolder={'রাফতি অক্স'}\n                      name='bnName'\n                      isError={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnName'])\n                      }\n                      errorString={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnName'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnName');\n                      }}\n                    />\n\n                    {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n\n                    {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n\n                    <Input\n                      label='Unit'\n                      value={values.unit}\n                      name='unit'\n                      placeHolder={'KG,POUND,GM'}\n                      isError={\n                        (touched.unit && errors.unit) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['unit'])\n                      }\n                      errorString={\n                        (touched.unit && errors.unit) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['unit'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('unit');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Unit'\n                      value={values.bnUnit}\n                      placeHolder={'কেজি,গ্রাম'}\n                      name='bnUnit'\n                      isError={\n                        (touched.bnUnit && errors.bnUnit) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnUnit'])\n                      }\n                      errorString={\n                        (touched.bnUnit && errors.bnUnit) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnUnit'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnUnit');\n                      }}\n                    />\n\n                    <Input\n                      label='Model Number'\n                      value={values.model}\n                      name='model'\n                      isError={\n                        (touched.model && errors.model) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['model'])\n                      }\n                      errorString={\n                        (touched.model && errors.model) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['model'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('model');\n                      }}\n                    />\n\n                    <h3 className='inputFieldLabel'>Description</h3>\n\n                    <div\n                      style={{\n                        width: '100%',\n                        maxWidth: '100%',\n                      }}\n                    >\n                      <CKEditor\n                        editor={ClassicEditor}\n                        data={description}\n                        onInit={(editor) => {\n                          // You can store the \"editor\" and use when it is needed.\n                          console.log('Editor is ready to use!', editor);\n                        }}\n                        onChange={(event, editor) => {\n                          const data = editor.getData();\n                          setDescription(data);\n                        }}\n                        onBlur={(event, editor) => {\n                          console.log('Blur.', editor);\n                        }}\n                        onFocus={(event, editor) => {\n                          console.log('Focus.', editor);\n                        }}\n                      />\n                    </div>\n\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    ></div>\n\n                    <h3 className='inputFieldLabel'>BN Description</h3>\n\n                    <div\n                      style={{\n                        width: '100%',\n                        maxWidth: '100%',\n                      }}\n                    >\n                      <CKEditor\n                        editor={ClassicEditor}\n                        data={bnDescription}\n                        onInit={(editor) => {\n                          // You can store the \"editor\" and use when it is needed.\n                          console.log('Editor is ready to use!', editor);\n                        }}\n                        onChange={(event, editor) => {\n                          const data = editor.getData();\n                          setBNDescription(data);\n                        }}\n                        onBlur={(event, editor) => {\n                          console.log('Blur.', editor);\n                        }}\n                        onFocus={(event, editor) => {\n                          console.log('Focus.', editor);\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__price'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Product Pricing *</h3>\n\n                    <div\n                      className={\n                        pricing && pricing.length > 0\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n\n                  <div className='addProductGridContainer__item-body'>\n                    <Tabs\n                      animated={true}\n                      tabPosition='top'\n                      type='card'\n                      activeKey={pricingTagActiveKey}\n                      onChange={(value) => {\n                        setpricingTagActiveKey(`${value}`);\n                      }}\n                    >\n                      <TabPane tab='Add Variation' key='1'>\n                        <Pricing\n                          handleAddPricing={handleAddPricing}\n                          pricingItem={editpricingItem}\n                          handleUpdatePricing={handleUpdatePricing}\n                          isPricingEditActive={isPricingEditActive}\n                        />\n                      </TabPane>\n                      <TabPane tab='Pricing List' key='2'>\n                        <div className='addProductGridContainer__item-body-pricingContainer'>\n                          {pricing.length > 0 &&\n                            pricing.map((item) => {\n                              return (\n                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\n                                    {/* <span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\n                                    <span\n                                      className='pricingEditIcon'\n                                      onClick={() => {\n                                        handleEditPricing(item.id);\n                                        setpricingTagActiveKey('1');\n                                      }}\n                                    >\n                                      <EditOutlined />\n                                    </span>\n                                    <span\n                                      className='pricingDeleteIcon'\n                                      onClick={() =>\n                                        handleDeletePricing(item.id)\n                                      }\n                                    >\n                                      <DeleteOutlined />\n                                    </span>\n                                  </div>\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\n                                    <div>\n                                      <h3>Price</h3>\n                                      <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                        {item.price.offer ? (\n                                          <>\n                                            <h4>{item.price.offer}</h4>/\n                                            <h5\n                                              style={{\n                                                textDecoration: 'line-through',\n                                              }}\n                                            >\n                                              {item.price.regular}\n                                            </h5>\n                                          </>\n                                        ) : (\n                                          <h4>{item.price.regular}</h4>\n                                        )}\n                                      </div>\n                                    </div>\n\n                                    {item.stock && item.stock['available'] && (\n                                      <div>\n                                        <Badge\n                                          overflowCount={999}\n                                          count={item.stock.available}\n                                        >\n                                          <h3>Stock</h3>\n                                        </Badge>\n                                        {item.stock['minimum'] && (\n                                          <>\n                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                              <div>\n                                                <h6>\n                                                  min\n                                                  <Badge\n                                                    className='site-badge-count-4'\n                                                    overflowCount={999}\n                                                    count={item.stock.minimum}\n                                                  />\n                                                </h6>\n                                              </div>\n                                            </div>\n                                          </>\n                                        )}\n                                      </div>\n                                    )}\n\n\n                                  {Boolean(item?.maximumPurchaseLimit) && (\n                                       <div>\n                                       <h3>Maximum Purchase Limit</h3>\n                                       <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                       <h4>{item?.maximumPurchaseLimit}</h4>\n                                       </div>\n                                     </div>\n                                    )}\n                                  </div>\n\n                                  {item.attribute &&\n                                    Object.values(item.attribute).length >\n                                      0 && (\n                                      <>\n                                        <h3>Attributes</h3>\n                                        <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                          {item.attribute &&\n                                            Object.keys(item.attribute).length >\n                                              0 &&\n                                            Object.keys(item.attribute).map(\n                                              (attributeItem) => {\n                                                return (\n                                                  <div>\n                                                    <h6>{attributeItem}</h6>\n                                                    <h4>\n                                                      {\n                                                        item.attribute[\n                                                          attributeItem\n                                                        ]\n                                                      }\n                                                    </h4>\n                                                  </div>\n                                                );\n                                              }\n                                            )}\n                                        </div>\n                                      </>\n                                    )}\n                                </div>\n                              );\n                            })}\n\n                          {!(pricing.length > 0) && (\n                            <div\n                              style={{\n                                width: '100%',\n                                display: 'flex',\n                                justifyContent: 'center',\n                              }}\n                            >\n                              <Empty\n                                description='No Pricing added'\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                              />\n                            </div>\n                          )}\n                        </div>\n                      </TabPane>\n                    </Tabs>\n\n                    <div className='addProductGridContainer__item-body-container'></div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__image'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Image</h3>\n\n                    <Tooltip\n                      placement='left'\n                      title={\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\n                      }\n                    >\n                      <a href='###'>\n                        <InfoCircleOutlined />\n                      </a>\n                    </Tooltip>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <div className='aboutToUploadImagesContainer'>\n                      {myImages &&\n                        // @ts-ignore\n                        myImages.length > 0 &&\n                        myImages.map((image, index) => {\n                          return (\n                            <div className='aboutToUploadImagesContainer__item'>\n                              <div\n                                className='aboutToUploadImagesContainer__item-imgContainer'\n                                onClick={() => setCoverImageId(image.id)}\n                              >\n                                <img src={image.cover} alt={image.alt} />\n                              </div>\n\n                              <span\n                                onClick={() => handleImagesDelete(image.id)}\n                                className='aboutToUploadImagesContainer__item-remove'\n                              >\n                                <CloseOutlined />\n                              </span>\n\n                              {coverImageId === image.id ? (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                  <CheckOutlined />\n                                </span>\n                              ) : (\n                                !coverImageId &&\n                                index === 0 && (\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                  </span>\n                                )\n                              )}\n                            </div>\n                          );\n                        })}\n\n                      <Tooltip title={'Attach images'}>\n                        <div\n                          onClick={() => {\n                            setvisible(true);\n                            setisModalOpenForImages(true);\n                            setisModalOpenForThumbnail(false);\n                          }}\n                          className='aboutToUploadImagesContainer__uploadItem'\n                        >\n                          {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                          <FileImageFilled />\n                          {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                            <PlusOutlined />\n                          </span>\n                        </div>\n                      </Tooltip>\n                    </div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__image'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Meta Data</h3>\n\n                    <Tooltip\n                      placement='left'\n                      title={\n                        \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                      }\n                    >\n                      <a href='###'>\n                        <InfoCircleOutlined />\n                      </a>\n                    </Tooltip>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <Input\n                      label='Meta title'\n                      value={values.metaTitle}\n                      placeHolder={'...'}\n                      name='metaTitle'\n                      isError={\n                        (touched.metaTitle && errors.metaTitle) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['metaTitle'])\n                      }\n                      errorString={\n                        (touched.metaTitle && errors.metaTitle) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['metaTitle'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('metaTitle');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Meta title'\n                      value={values.bnMetaTitle}\n                      placeHolder={'...'}\n                      name='bnMetaTitle'\n                      isError={\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnMetaTitle'])\n                      }\n                      errorString={\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnMetaTitle'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnMetaTitle');\n                      }}\n                    />\n\n                    <TextArea\n                      label='Meta description'\n                      value={values.metaDescription}\n                      placeholder={'meta...'}\n                      name='metaDescription'\n                      isError={\n                        (touched.metaDescription && errors.metaDescription) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['metaDescription'])\n                      }\n                      errorString={\n                        (touched.metaDescription && errors.metaDescription) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['metaDescription'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('metaDescription');\n                      }}\n                    />\n\n                    <TextArea\n                      label='BN Meta Description'\n                      value={values.bnMetaDescription}\n                      placeholder={'এইয় মেট...'}\n                      name='bnMetaDescription'\n                      isError={\n                        (touched.bnMetaDescription &&\n                          errors.bnMetaDescription) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnMetaDescription'])\n                      }\n                      errorString={\n                        (touched.bnMetaDescription &&\n                          errors.bnMetaDescription) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnMetaDescription'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnMetaDescription');\n                      }}\n                    />\n\n                    <h3 className='inputFieldLabel'>\n                      Meta Tags (grocery,fashion)\n                    </h3>\n\n                    <MetaTags\n                      // @ts-ignore\n                      setTags={setMetaTags}\n                      tags={metaTags}\n                    />\n\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    ></div>\n\n                    <h3 className='inputFieldLabel'>\n                      BN Meta Tags (মুদিখানা,ফ্যাশন)\n                    </h3>\n\n                    <MetaTags\n                      // @ts-ignore\n                      setTags={setBnMetaTags}\n                      tags={bnMetaTags}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className='addProductGridContainer__right'>\n                <div className='addProductGridContainer__category'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Categories *</h3>\n\n                      <Tooltip\n                        color='red'\n                        visible={\n                          addProductState.error['error']['category'] &&\n                          !(categoryids.length > 0)\n                        }\n                        placement='left'\n                        title={'Select at least one category'}\n                      >\n                        <div\n                          className={\n                            !(categoryids.length > 0) &&\n                            !addProductState.error['error']['category']\n                              ? 'checkicon'\n                              : addProductState.error['error']['category']\n                              ? 'checkicon-error'\n                              : 'checkicon-active'\n                          }\n                        >\n                          <CheckCircleOutlined />\n                        </div>\n                      </Tooltip>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Categories\n                        setCategoryOptions={setCategoryOptions}\n                        categoryOptions={categoryOptions}\n                        setcategoryIds={setcategoryIds}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__tag'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Tags</h3>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Tags\n                        setSelectedTags={setSelectedTags}\n                        selectedTags={selectedTags}\n                        setTagIds={setTagIds}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className='addProductGridContainer__brand'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Brand</h3>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Brands setBrandId={setBrandId} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisible}\n            visible={visible}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            setmyThumbnailImage={setmyThumbnailImage}\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\n            isModalOpenForImages={isModalOpenForImages}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewProduct;\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n\t[regular input field] [offer inputfield]\n\nStock [title]\n\t[available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n\t[add attributes name]\n\t\t[add attrubutes value]\n\n\t[add attributes name]\n\t\t[add attrubutes value\n\n*/ //\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  message,\n  Tooltip,\n  Modal,\n  Tabs,\n  Empty,\n  Badge,\n  Spin,\n  Button,\n} from 'antd';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  FileImageOutlined,\n  FileImageTwoTone,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  EditOutlined,\n} from '@ant-design/icons';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport DatePicker from '../../components/Field/DatePicker';\nimport {\n  openSuccessNotification,\n  openErrorNotification,\n} from '../../components/Notification';\nimport Tags from './Tags';\nimport Brands from './Brands';\nimport Categories from './Categories';\nimport Pricing from './Pricing';\nimport MetaTags from '../category/MetaTags';\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n  model: '',\n  unit: '',\n  regular: '',\n  offer: '',\n  available: '',\n  minimum: '',\n  image: [],\n  url: '',\n  cover: '',\n  pricing: [],\n  venue: '',\n  date: '',\n  time: '',\n  purchaseLimit: null,\n  bnUnit: '',\n  bnName: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  productEditVisible?: any;\n  setProductEditVisible?: any;\n  productDetailData?: any;\n  productList?: any;\n  setProductList?: any;\n}\n\nconst ModalChildComponent = ({\n  productEditVisible,\n  setProductEditVisible,\n  productDetailData,\n  setProductList,\n  productList,\n}) => {\n  const [updateProductState, handleUpdateProductFetch] = useHandleFetch(\n    {},\n    'updateProduct'\n  );\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\n    {},\n    'productDetailById'\n  );\n  const [\n    attachImageToItemMultipleState,\n    handleAttachImageToItemMultipleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\n  const [\n    attachImageToItemSingleState,\n    handleAttachImageToItemSingleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\n  const [\n    detachImageFromItemMultipleState,\n    handleDetachImageFromItemMultipleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [categoryids, setcategoryIds] = useState([]);\n  const [tagIds, setTagIds] = useState([]);\n  const [brandId, setBrandId] = useState('');\n  const [pricing, setPricing] = useState([]);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [date, setDateFeild] = useState('');\n  const [time, setTimeFeild] = useState('');\n  const [description, setDescription] = useState('');\n  const [bnDescription, setBNDescription] = useState('');\n  const [metaTags, setMetaTags] = useState([]);\n  const [bnMetaTags, setBnMetaTags] = useState([]);\n  const [editpricingItem, setEditPricingItem] = useState({});\n  const [pricingTagActiveKey, setpricingTagActiveKey] = useState('2');\n  const [isPricingEditActive, seTisPricingEditActive] = useState(false);\n\n  useEffect(() => {\n    const getProductDetail = async () => {\n      await handleProductDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: productDetailData.id,\n          },\n        },\n      });\n    };\n\n    getProductDetail();\n  }, [productDetailData]);\n\n  console.log('tagIds', tagIds);\n  console.log('selectedtagIds', selectedTags);\n\n  useEffect(() => {\n    if (\n      productDetailState.done &&\n      productDetailState.data &&\n      Object.keys(productDetailState.data).length > 0\n    ) {\n      const productDetailData = productDetailState.data;\n\n      if (productDetailData.brand) {\n        setBrandId(productDetailData.brand['id']);\n      } else {\n        setBrandId('');\n      }\n      if (\n        productDetailData &&\n        productDetailData.tags &&\n        productDetailData.tags.length > 0\n      ) {\n        const selectedTagNames = productDetailData.tags.map(\n          (item) => item.name\n        );\n\n        const selectedTagIds = productDetailData.tags.map((item) => item._id);\n\n        setSelectedTags(selectedTagNames);\n        console.log('selectedTagIds55', selectedTagIds);\n        setTagIds(selectedTagIds);\n      } else {\n        setTagIds([]);\n        setSelectedTags([]);\n      }\n      if (\n        productDetailData &&\n        productDetailData.category &&\n        productDetailData.category.length > 0\n      ) {\n        const categoryIds = productDetailData.category.map((item) => item.id);\n        setCategoryOptions(categoryIds);\n      } else {\n        setCategoryOptions([]);\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.pricing &&\n        productDetailData.pricing\n      ) {\n        setPricing(productDetailData.pricing);\n      } else {\n        setPricing([]);\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.date &&\n        productDetailData.date\n      ) {\n        setDateFeild(productDetailData.date);\n      } else {\n        setDateFeild('');\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.time &&\n        productDetailData.time\n      ) {\n        setTimeFeild(productDetailData.time);\n      } else {\n        setTimeFeild('');\n      }\n\n      if (productDetailData && productDetailData.description) {\n        setDescription(productDetailData.description);\n      } else {\n        setDescription('');\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.bn &&\n        productDetailData.bn['description']\n      ) {\n        setBNDescription(productDetailData.bn['description']);\n      } else {\n        setBNDescription('');\n      }\n    }\n\n    console.log('runnedBitch');\n  }, [productDetailState.done]);\n\n  useEffect(() => {\n    if (productDetailState.done && Object.keys(productDetailState).length > 0) {\n      const images = productDetailState.data.image;\n      let mahImages = [];\n\n      if (images && images.length > 0) {\n        mahImages = images;\n      }\n\n      if (\n        productDetailState.data.cover &&\n        productDetailState.data.cover['id']\n      ) {\n        const ixists = images.find(\n          (item) => item.id === productDetailState.data.cover['id']\n        );\n        if (!ixists) {\n          mahImages = [productDetailState.data.cover, ...mahImages];\n        }\n\n        setCoverImageId(productDetailState.data.cover['id']);\n      }\n\n      // @ts-ignore\n      setmyImages(mahImages);\n    }\n  }, [productDetailState.done]);\n\n  useEffect(() => {\n    console.log('thumnail', myImages);\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      console.log('thumnail2', myImages);\n\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  const handleDetachSingleImage = async (id) => {\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'product',\n          itemId: productDetailData.id,\n        },\n      },\n    });\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'product',\n          itemId: productDetailData.id,\n        },\n      },\n    });\n\n    console.log('thumbnailRes', thumbnailRes);\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      openSuccessNotification('Set as thumbnail!');\n      // const positionInBrand = () => {\n      //     return productList.map(item => item.id).indexOf(productDetailData.id);\n      // }\n\n      // const index = positionInBrand();\n\n      // const prevItem = productList.find(item => item.id === productDetailData.id);\n\n      // if (prevItem) {\n      //     console.log('prevItem--', prevItem, 'image--', image);\n      //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\n      //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\n      //     setProductList(updateProductList);\n\n      // }\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  const makeEmptyCategoryOptions = (setEmpty) => {\n    setEmpty([]);\n  };\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\n      const aboutToUpdatedImageIds = [];\n\n      if (imagesIds && imagesIds.length > 0) {\n        imagesIds.forEach((imageId) => {\n          if (productDetailData && productDetailData['image']) {\n            if (!productDetailData['image'].includes(imageId)) {\n              aboutToUpdatedImageIds.push(imageId);\n            }\n          }\n        });\n      }\n\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n        await handleAttachImageToItemMultipleFetch({\n          urlOptions: {\n            placeHolders: {\n              collection: 'product',\n              itemId: productDetailData.id,\n            },\n          },\n          body: {\n            image: aboutToUpdatedImageIds,\n          },\n        });\n      } else if (\n        aboutToUpdatedImageIds[0] &&\n        aboutToUpdatedImageIds.length < 1\n      ) {\n        await handleAttachImageToItemSingleFetch({\n          urlOptions: {\n            placeHolders: {\n              imageId: aboutToUpdatedImageIds[0].id,\n              collection: 'product',\n              itemId: productDetailData.id,\n            },\n          },\n        });\n      }\n    }\n\n    const updatedProductRes = await handleUpdateProductFetch({\n      urlOptions: {\n        placeHolders: {\n          id: productDetailData.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: description,\n        model: values.model,\n        unit: values.unit,\n        category: categoryOptions,\n        tags: tagIds,\n        brand: brandId,\n        image: imagesIds,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        pricing: pricing,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags:\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\n          name: values.bnName.trim(),\n          unit: values.metaUnit,\n          description: bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updatedProductRes && updatedProductRes.status === 'ok') {\n      openSuccessNotification('Product Updated');\n\n      const positionInAttribute = () => {\n        return productList.map((item) => item.id).indexOf(productDetailData.id);\n      };\n\n      const index = positionInAttribute();\n\n      function getCover(id) {\n        if (!id || !myImages || !myImages[0]) {\n          return '';\n        } else {\n          if (myImages && myImages.length > 0) {\n            const item = myImages.find((item) => item.id === id);\n            if (item) {\n              return item.cover;\n            }\n          }\n        }\n      }\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, productList[index], {\n        ...productDetailData,\n        ...updatedProductRes,\n        id: productDetailData.id,\n        cover: getCover(coverImageId),\n      });\n      const updateProductList = [\n        ...productList.slice(0, index),\n        updatedItem,\n        ...productList.slice(index + 1),\n      ];\n      setProductList(updateProductList);\n\n      setProductEditVisible(false);\n\n      // setProductDetailData({\n      //     // @ts-ignore\n      //     ...updatedProductRes,\n      //     category: productDetailData.category,\n      //     brand: productDetailData.brand,\n      //     tags: productDetailData.tags,\n      //     cover: productDetailData.cover,\n      //     image: productDetailData.image,\n      // });\n\n      // console.log('updatedProductRes', updatedProductRes);\n      // setProductList([...productList, {\n      //     id: updatedProductRes['id'] || '',\n      //     key: updatedProductRes['id'] || '',\n      //     name: updatedProductRes['name'] || '',\n      //     description: updatedProductRes['description'] || '',\n      //     // @ts-ignore\n      //     ...updatedProductRes\n      // }])\n      // @ts-ignore\n      //   setmyImages([]);\n      //   setCoverImageId('');\n      //   setPricing([]);\n      //   setTagIds([]);\n      //   setSelectedTags([]);\n      //   setBrandId('');\n      //   setcategoryIds([]);\n      //   setCategoryOptions([]);\n      //   actions.resetForm();\n    } else {\n      // openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  console.log('updateProductStaet', updateProductState);\n  useEffect(() => {\n    if (!updateProductState['isLoading']) {\n      const error = updateProductState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [updateProductState]);\n\n  const handleCancel = (e: any) => {\n    setProductEditVisible(false);\n    // setmyImages(false);\n    // setCoverImageId('');\n    // setPricing([]);\n    // setTagIds([]);\n    // setSelectedTags([]);\n    // setBrandId('');\n    // setcategoryIds([]);\n    // setCategoryOptions([]);\n    // setMetaTags([]);\n    // setBnMetaTags([]);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !values.name ||\n      !(pricing.length > 0) ||\n      !(categoryOptions.length > 0) ||\n      !isValid\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleDeleteFromSelectedImage = () => {};\n\n  const handleThumbnailImageDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myThumbnailImage &&\n      myThumbnailImage.filter((image) => {\n        return image.id !== id;\n      });\n\n    if (newImages.length > 0) {\n      setmyThumbnailImage(newImages);\n    } else setmyThumbnailImage(false);\n  };\n\n  const handleUpdatePricing = (priceItem) => {\n    const positionInPricing = () => {\n      return pricing.map((item) => item.id).indexOf(priceItem.id);\n    };\n\n    const index = positionInPricing();\n\n    // @ts-ignore\n    const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\n    const updatePricingList = [\n      ...pricing.slice(0, index),\n      updatedItem,\n      ...pricing.slice(index + 1),\n    ];\n\n    setPricing(updatePricingList);\n\n    message.info('Product Pricing Updated');\n    seTisPricingEditActive(true);\n    setpricingTagActiveKey('2');\n  };\n\n  const handleAddPricing = (priceItem) => {\n    setPricing([\n      {\n        ...priceItem,\n        id: pricing.length,\n      },\n      ...pricing,\n    ]);\n    message.info('Product Pricing Added');\n  };\n\n  const handleDeletePricing = (id) => {\n    const newPricing = pricing.filter((item) => item.id !== id);\n    setPricing(newPricing);\n    message.info('Product Pricing Deleted');\n  };\n\n  const handleEditPricing = (id) => {\n    seTisPricingEditActive(true);\n    const pricingItem = pricing.find((item) => item.id === id);\n    if (pricingItem) {\n      setEditPricingItem(pricingItem);\n    }\n  };\n\n  const isCategoryInValid = () => {\n    if (\n      updateProductState.error['error']['category'] &&\n      !categoryids &&\n      categoryids.length\n    ) {\n      return true;\n    } else if (categoryids && categoryids.length > 0) {\n      return false;\n    }\n  };\n\n  const handleDateChange = (date, dateString) => {\n    setDateFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  console.log('productDetailData', productDetailData);\n  console.log('productDetailState', productDetailState);\n\n  useEffect(() => {\n    if (\n      productDetailState.data &&\n      Object.keys(productDetailState.data).length > 0 &&\n      productDetailState.data.metaTags\n    ) {\n      const metaTags = productDetailState.data.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags = productDetailState.data.bn['metaTags'].split(',');\n      setMetaTags(metaTags || []);\n      setBnMetaTags(bnMetaTags || []);\n    }\n  }, [productDetailState['done']]);\n\n  console.log('productDetailData');\n\n  return (\n    <>\n      <Formik\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        enableReinitialize={true}\n        initialValues={{\n          ...initialValues,\n          ...{\n            ...productDetailData,\n            ...(productDetailState['data'] &&\n              Object.keys(productDetailState['data']).length > 0 &&\n              productDetailState['data']['bn'] && {\n                bnMetaTitle: productDetailState['data']['bn'].metaTitle,\n                bnMetaDescription:\n                  productDetailState['data']['bn'].metaDescription,\n                bnName: productDetailState['data']['bn'].name,\n                metaUnit: productDetailState['data']['bn'].unit,\n                bnDescription: productDetailState['data']['bn'].description,\n              }),\n          },\n        }}\n      >\n        {({\n          handleChange,\n          values,\n          handleSubmit,\n          errors,\n          isValid,\n          isSubmitting,\n          touched,\n          handleBlur,\n          setFieldTouched,\n          handleReset,\n        }) => (\n          <>\n            <section className='addProductGridContainer'>\n              <div className='addProductGridContainer__left'>\n                <div className='addProductGridContainer__name'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Product Information *</h3>\n                    <div\n                      className={\n                        values.name && values.name.length > 2\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <Input\n                      label='Name *'\n                      value={values.name}\n                      placeHolder={'Rafty ox'}\n                      name='name'\n                      isError={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['name'])\n                      }\n                      errorString={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['name'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('name');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Name'\n                      value={values.bnName}\n                      placeHolder={'রাফতি অক্স'}\n                      name='bnName'\n                      isError={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['bnName'])\n                      }\n                      errorString={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['bnName'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnName');\n                      }}\n                    />\n\n                    {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n\n                    {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n\n                    <Input\n                      label='Unit'\n                      value={values.unit}\n                      name='unit'\n                      placeHolder={'KG,POUND,GM'}\n                      isError={\n                        (touched.unit && errors.unit) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['unit'])\n                      }\n                      errorString={\n                        (touched.unit && errors.unit) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['unit'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('unit');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Unit'\n                      value={values.bnUnit}\n                      placeHolder={'কেজি,গ্রাম'}\n                      name='bnUnit'\n                      isError={\n                        (touched.bnUnit && errors.bnUnit) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['bnUnit'])\n                      }\n                      errorString={\n                        (touched.bnUnit && errors.bnUnit) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['bnUnit'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnUnit');\n                      }}\n                    />\n\n                    <Input\n                      label='Model Number'\n                      value={values.model}\n                      name='model'\n                      isError={\n                        (touched.model && errors.model) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['model'])\n                      }\n                      errorString={\n                        (touched.model && errors.model) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['model'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('model');\n                      }}\n                    />\n\n                    <h3 className='inputFieldLabel'>Description</h3>\n\n                    <div\n                      style={{\n                        width: '100%',\n                        maxWidth: '100%',\n                      }}\n                    >\n                      <CKEditor\n                        editor={ClassicEditor}\n                        data={description}\n                        onInit={(editor) => {\n                          // You can store the \"editor\" and use when it is needed.\n                          console.log('Editor is ready to use!', editor);\n                        }}\n                        onChange={(event, editor) => {\n                          const data = editor.getData();\n                          setDescription(data);\n                        }}\n                        onBlur={(event, editor) => {\n                          console.log('Blur.', editor);\n                        }}\n                        onFocus={(event, editor) => {\n                          console.log('Focus.', editor);\n                        }}\n                      />\n                    </div>\n\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    ></div>\n\n                    <h3 className='inputFieldLabel'>BN Description</h3>\n\n                    <div\n                      style={{\n                        width: '100%',\n                        maxWidth: '100%',\n                      }}\n                    >\n                      <CKEditor\n                        editor={ClassicEditor}\n                        data={bnDescription}\n                        onInit={(editor) => {\n                          // You can store the \"editor\" and use when it is needed.\n                          console.log('Editor is ready to use!', editor);\n                        }}\n                        onChange={(event, editor) => {\n                          const data = editor.getData();\n                          setBNDescription(data);\n                        }}\n                        onBlur={(event, editor) => {\n                          console.log('Blur.', editor);\n                        }}\n                        onFocus={(event, editor) => {\n                          console.log('Focus.', editor);\n                        }}\n                      />\n                    </div>\n\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    >\n                      {' '}\n                    </div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__price'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Product Pricing *</h3>\n\n                    <div\n                      className={\n                        pricing && pricing.length > 0\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n\n                  <div className='addProductGridContainer__item-body'>\n                    <Tabs\n                      animated={true}\n                      tabPosition='top'\n                      type='card'\n                      activeKey={pricingTagActiveKey}\n                      onChange={(value) => {\n                        setpricingTagActiveKey(`${value}`);\n                      }}\n                    >\n                      <TabPane tab='Add Variation' key='1'>\n                        <Pricing\n                          handleAddPricing={handleAddPricing}\n                          pricingItem={editpricingItem}\n                          handleUpdatePricing={handleUpdatePricing}\n                          isPricingEditActive={isPricingEditActive}\n                        />\n                      </TabPane>\n                      <TabPane tab='Pricing List' key='2'>\n                        <div className='addProductGridContainer__item-body-pricingContainer'>\n                          {pricing.length > 0 &&\n                            pricing.map((item) => {\n                              return (\n                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\n                                    {/* <span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\n                                    <span\n                                      className='pricingEditIcon'\n                                      onClick={() => {\n                                        handleEditPricing(item.id);\n                                        setpricingTagActiveKey('1');\n                                      }}\n                                    >\n                                      <EditOutlined />\n                                    </span>\n                                    <span\n                                      className='pricingDeleteIcon'\n                                      onClick={() =>\n                                        handleDeletePricing(item.id)\n                                      }\n                                    >\n                                      <DeleteOutlined />\n                                    </span>\n                                  </div>\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\n                                    <div>\n                                      <h3>Price</h3>\n                                      <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                        {item.price.offer ? (\n                                          <>\n                                            <h4>{item.price.offer}</h4>/\n                                            <h5\n                                              style={{\n                                                textDecoration: 'line-through',\n                                              }}\n                                            >\n                                              {item.price.regular}\n                                            </h5>\n                                          </>\n                                        ) : (\n                                          <h4>{item.price.regular}</h4>\n                                        )}\n                                      </div>\n                                    </div>\n\n                                    {item.stock && item.stock['available'] && (\n                                      <div>\n                                        <Badge\n                                          overflowCount={999}\n                                          count={item.stock.available}\n                                        >\n                                          <h3>Stock</h3>\n                                        </Badge>\n                                        {item.stock['minimum'] && (\n                                          <>\n                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                              <div>\n                                                <h6>\n                                                  min\n                                                  <Badge\n                                                    className='site-badge-count-4'\n                                                    overflowCount={999}\n                                                    count={item.stock.minimum}\n                                                  />\n                                                </h6>\n                                              </div>\n                                            </div>\n                                          </>\n                                        )}\n                                      </div>\n                                    )}\n\n\n                                    {Boolean(item?.maximumPurchaseLimit) && (\n                                       <div>\n                                       <h3>Maximum Purchase Limit</h3>\n                                       <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                       <h4>{item?.maximumPurchaseLimit}</h4>\n                                       </div>\n                                     </div>\n                                    )}\n\n                                  </div>\n\n                                  {item.attribute &&\n                                    Object.values(item.attribute).length >\n                                      0 && (\n                                      <>\n                                        <h3>Attributes</h3>\n                                        <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                          {item.attribute &&\n                                            Object.keys(item.attribute).length >\n                                              0 &&\n                                            Object.keys(item.attribute).map(\n                                              (attributeItem) => {\n                                                return (\n                                                  <div>\n                                                    <h6>{attributeItem}</h6>\n                                                    <h4>\n                                                      {\n                                                        item.attribute[\n                                                          attributeItem\n                                                        ]\n                                                      }\n                                                    </h4>\n                                                  </div>\n                                                );\n                                              }\n                                            )}\n                                        </div>\n                                      </>\n                                    )}\n                                </div>\n                              );\n                            })}\n\n                          {!(pricing.length > 0) && (\n                            <div\n                              style={{\n                                width: '100%',\n                                display: 'flex',\n                                justifyContent: 'center',\n                              }}\n                            >\n                              <Empty\n                                description='No Pricing added'\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                              />\n                            </div>\n                          )}\n                        </div>\n                      </TabPane>\n                    </Tabs>\n\n                    <div className='addProductGridContainer__item-body-container'></div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__image'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Image</h3>\n\n                    <Tooltip\n                      placement='left'\n                      title={\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\n                      }\n                    >\n                      <a href='###'>\n                        <InfoCircleOutlined />\n                      </a>\n                    </Tooltip>\n                  </div>\n\n                  <div\n                    style={{\n                      padding: '10px',\n                    }}\n                    className='aboutToUploadImagesContainer'\n                  >\n                    {productDetailState.isLoading && (\n                      <div\n                        style={{\n                          padding: '20px 0',\n                        }}\n                      >\n                        <Spin />\n                      </div>\n                    )}\n                    {productDetailState.done && (\n                      <>\n                        {myImages &&\n                          // @ts-ignore\n                          myImages.length > 0 &&\n                          myImages.map((image, index) => {\n                            return (\n                              <div className='aboutToUploadImagesContainer__item'>\n                                <div\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\n                                  onClick={() => {\n                                    setCoverImageId(image.id);\n                                    handleSetImageAsThumnail(image);\n                                  }}\n                                >\n                                  <img src={image.cover} alt={image.alt} />\n                                </div>\n\n                                <span\n                                  onClick={() => {\n                                    handleImagesDelete(image.id);\n                                    handleDetachSingleImage(image.id);\n                                  }}\n                                  className='aboutToUploadImagesContainer__item-remove'\n                                >\n                                  <CloseOutlined />\n                                </span>\n\n                                {coverImageId === image.id ? (\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                  </span>\n                                ) : (\n                                  !coverImageId &&\n                                  index === 0 && (\n                                    <span className='aboutToUploadImagesContainer__item-cover'>\n                                      <CheckOutlined />\n                                    </span>\n                                  )\n                                )}\n                              </div>\n                            );\n                          })}\n\n                        <Tooltip title={'Attach images'}>\n                          <div\n                            onClick={() => {\n                              setvisible(true);\n                              setisModalOpenForImages(true);\n                              setisModalOpenForThumbnail(false);\n                            }}\n                            className='aboutToUploadImagesContainer__uploadItem'\n                          >\n                            {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                            <FileImageFilled />\n                            {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                              <PlusOutlined />\n                            </span>\n                          </div>\n                        </Tooltip>\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className='addProductGridContainer__right'>\n                <div className='addProductGridContainer__category'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Categories *</h3>\n\n                      {/* <Tooltip\n                        color='red'\n                        visible={\n                          updateProductState.error['error']['category'] &&\n                          !(categoryids.length > 0)\n                        }\n                        placement='left'\n                        title={'Select at least one category'}\n                      >\n                        <div\n                          className={\n                            !(categoryids.length > 0) &&\n                            !updateProductState.error['error']['category']\n                              ? 'checkicon'\n                              : updateProductState.error['error']['category']\n                              ? 'checkicon-error'\n                              : 'checkicon-active'\n                          }\n                        >\n                          <CheckCircleOutlined />\n                        </div>\n                      </Tooltip> */}\n                      <div\n                        className={\n                          !(categoryids.length > 0) &&\n                          !updateProductState.error['error']['category']\n                            ? 'checkicon'\n                            : updateProductState.error['error']['category']\n                            ? 'checkicon-error'\n                            : 'checkicon-active'\n                        }\n                      >\n                        <CheckCircleOutlined />\n                      </div>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Categories\n                        setCategoryOptions={setCategoryOptions}\n                        categoryOptions={categoryOptions}\n                        setcategoryIds={setcategoryIds}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__tag'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Tags</h3>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Tags\n                        setSelectedTags={setSelectedTags}\n                        selectedTags={selectedTags}\n                        setTagIds={setTagIds}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className='addProductGridContainer__brand'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Brand</h3>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Brands\n                        productDetailState={productDetailState}\n                        brandId={brandId}\n                        setBrandId={setBrandId}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div\n                  className='addProductGridContainer__brand'\n                  style={{\n                    marginTop: '10px',\n                  }}\n                >\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Meta Tags</h3>\n\n                      <Tooltip\n                        placement='left'\n                        title={\n                          \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                        }\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Input\n                        label='Meta title'\n                        value={values.metaTitle}\n                        placeHolder={'...'}\n                        name='metaTitle'\n                        isError={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['metaTitle'])\n                        }\n                        errorString={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['metaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaTitle');\n                        }}\n                      />\n\n                      <Input\n                        label='BN Meta title'\n                        value={values.bnMetaTitle}\n                        placeHolder={'...'}\n                        name='bnMetaTitle'\n                        isError={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['bnMetaTitle'])\n                        }\n                        errorString={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['bnMetaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaTitle');\n                        }}\n                      />\n\n                      <TextArea\n                        label='Meta description'\n                        value={values.metaDescription}\n                        placeholder={'meta...'}\n                        name='metaDescription'\n                        isError={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error'][\n                              'metaDescription'\n                            ])\n                        }\n                        errorString={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error'][\n                              'metaDescription'\n                            ])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaDescription');\n                        }}\n                      />\n\n                      <TextArea\n                        label='BN Meta Description'\n                        value={values.bnMetaDescription}\n                        placeholder={'এইয় মেট...'}\n                        name='bnMetaDescription'\n                        isError={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        errorString={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaDescription');\n                        }}\n                      />\n\n                      <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setMetaTags}\n                        tags={metaTags}\n                      />\n\n                      <div\n                        style={{\n                          marginTop: '15px',\n                        }}\n                      ></div>\n\n                      <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setBnMetaTags}\n                        tags={bnMetaTags}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            <div\n              style={{\n                padding: '15px',\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  color: '#555',\n                  marginRight: '10px',\n                }}\n                className='btnPrimaryClassNameoutline-cancle'\n                onClick={() => setProductEditVisible(false)}\n                type='default'\n              >\n                Cancel\n              </Button>\n\n              <Button\n                className='btnPrimaryClassNameoutline'\n                onClick={handleSubmit}\n                loading={updateProductState.isLoading}\n                type='link'\n                icon={<CheckOutlined />}\n              >\n                Update\n              </Button>\n            </div>\n\n            <MediaLibrary\n              setvisible={setvisible}\n              visible={visible}\n              setmyImages={setmyImages}\n              myImages={myImages}\n              setmyThumbnailImage={setmyThumbnailImage}\n              isModalOpenForThumbnail={isModalOpenForThumbnail}\n              isModalOpenForImages={isModalOpenForImages}\n            />\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nconst AddNewProduct = ({\n  productEditVisible,\n  setProductEditVisible,\n  productDetailData,\n  setProductList,\n  productList,\n}: Props) => {\n  const handleCancel = () => {\n    setProductEditVisible(false);\n  };\n  return (\n    <Modal\n      style={{\n        top: '40px',\n      }}\n      bodyStyle={{\n        margin: 0,\n        padding: 0,\n      }}\n      width={'70vw'}\n      title='Product Edit'\n      visible={productEditVisible}\n      // onOk={(e: any) => handleSubmit(e)}\n      onCancel={handleCancel}\n      destroyOnClose={true}\n      okText='Update'\n      footer={false}\n      okButtonProps={{\n        //   loading: isSubmitting,\n        htmlType: 'submit',\n      }}\n    >\n      <ModalChildComponent\n        productList={productList}\n        setProductList={setProductList}\n        setProductEditVisible={setProductEditVisible}\n        productEditVisible={productEditVisible}\n        productDetailData={productDetailData}\n        handleCancel={handleCancel}\n      />\n    </Modal>\n  );\n};\n\nexport default AddNewProduct;\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n\t[regular input field] [offer inputfield]\n\nStock [title]\n\t[available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n\t[add attributes name]\n\t\t[add attrubutes value]\n\n\t[add attributes name]\n\t\t[add attrubutes value\n\n*/ //\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport {\n  notification,\n  Empty,\n  Table,\n  Badge,\n  Menu,\n  Dropdown,\n  Space,\n  Tag,\n  Button,\n  Input,\n  Tooltip,\n  Popconfirm,\n} from \"antd\";\nimport {\n  CheckCircleOutlined,\n  DownOutlined,\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  CheckOutlined,\n} from \"@ant-design/icons\";\n\n/// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport AddNewProduct from \"./AddNewProduct\";\nimport ProductQuickEdit from \"./ProductQuickEdit\";\n// import QuickEdit from './QuickEdit';\n\n// import state\nimport { isAccess } from \"../../utils\";\nimport { connect } from \"react-redux\";\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = Input;\n\nconst openSuccessNotification = (msg?: any) => {\n  notification.success({\n    message: msg || \"Product Deleted\",\n    description: \"\",\n    icon: <CheckCircleOutlined style={{ color: \"rgba(0, 128, 0, 0.493)\" }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setProductList: any;\n  roles: any;\n}\n\nconst MyTable = ({ data, setProductList, roles }: myTableProps) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteProductState, handleDeleteProductFetch] = useHandleFetch(\n    {},\n    \"deleteProduct\"\n  );\n  const [productDetailVisible, setproductDetailVisible] = useState(false);\n  const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch(\n    {},\n    \"updateStock\"\n  );\n\n  const history = useHistory();\n\n  const handleDeleteProduct = async (id) => {\n    const deleteProductRes = await handleDeleteProductFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteProductRes && deleteProductRes.status === \"ok\") {\n      openSuccessNotification();\n      const newProductList = data.filter((item) => item.id !== id);\n      setProductList(newProductList);\n    }\n\n    // console.log('deleteProductRes', deleteProductRes)\n  };\n\n  const handleUpdateOrderStatus = async (record, id, newStatus) => {\n    const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\n      body: {\n        inStock: newStatus,\n      },\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updateOrderStatusRes && updateOrderStatusRes.status === \"ok\") {\n      openSuccessNotification(\"Updated Stock\");\n\n      const positionInTag = () => {\n        return data.map((item) => item.id).indexOf(id);\n      };\n\n      const index = positionInTag();\n      console.log(\"recordis\", record, index);\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, data[index], {\n        inStock: newStatus,\n      });\n      const updateOrderList = [\n        ...data.slice(0, index),\n        updatedItem,\n        ...data.slice(index + 1),\n      ];\n      console.log(\"updateOrderList\", updateOrderList, \"-----\", setProductList);\n      setProductList(updateOrderList);\n    }\n  };\n\n  const StatusItemMenu = (record, id) => {\n    return (\n      <Menu>\n        <Menu.Item\n          onClick={() => handleUpdateOrderStatus(record, id, true)}\n          key=\"1\"\n          icon={<CheckOutlined />}\n        >\n          In stock\n        </Menu.Item>\n\n        <Menu.Item\n          onClick={() => handleUpdateOrderStatus(record, id, false)}\n          key=\"1\"\n          icon={<CheckOutlined />}\n        >\n          Out of stock\n        </Menu.Item>\n\n        {/* <Menu.Item\n                      onClick={() => handleUpdateOrderStatus(record,id,'deliver')}\n                      key=\"1\" icon={<CheckOutlined />}>\n                      Delivered\n                    </Menu.Item>\n              */}\n      </Menu>\n    );\n  };\n\n  const getCover = (record: any) => {\n    if (record.cover) {\n      return record.cover;\n    } else return \"\";\n  };\n\n  return (\n    <>\n      <Table\n        style={{\n          paddingTop: \"10px\",\n          borderRadius: \"5px !important\",\n          overflow: \"hidden\",\n          boxShadow:\n            \"0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)\",\n        }}\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size=\"small\"\n        // pagination={false}\n        dataSource={data}\n        tableLayout={\"auto\"}\n        onHeaderRow={(column) => {\n          return {\n            style: {\n              color: \"red !important\",\n            },\n          };\n        }}\n      >\n        <Column\n          title=\"\"\n          dataIndex=\"cover\"\n          key=\"id\"\n          width={\"80px\"}\n          className=\"classnameofthecolumn\"\n          render={(cover, record: any) => (\n            <>\n              <div\n                className=\"listCoverImage\"\n                onClick={() => {\n                  history.push(`/admin/product/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n              >\n                <img src={getCover(record)} alt=\"\" />\n              </div>\n            </>\n          )}\n        />\n\n        <Column\n          title=\"Name\"\n          dataIndex=\"name\"\n          key=\"id\"\n          className=\"classnameofthecolumn\"\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/product/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: \"#555\",\n                  cursor: \"pointer\",\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title=\"Offer Price\"\n          dataIndex=\"offerPrice\"\n          key=\"id\"\n          className=\"classnameofthecolumn\"\n        />\n\n        <Column\n          title=\"Price\"\n          dataIndex=\"price\"\n          key=\"id\"\n          className=\"classnameofthecolumn\"\n        />\n\n        <Column\n          title=\"Available\"\n          dataIndex=\"available\"\n          key=\"id\"\n          className=\"classnameofthecolumn\"\n        />\n\n        <Column\n          align=\"right\"\n          title=\"Stock\"\n          dataIndex=\"inStock\"\n          key=\"id\"\n          className=\"classnameofthecolumn\"\n          render={(text, record: any) => (\n            <>\n              {isAccess(\"postCatalogue\", roles) ? (\n                <Dropdown\n                  overlay={() => StatusItemMenu(record, record.id)}\n                  placement=\"bottomRight\"\n                >\n                  <a href=\"##\">\n                    <span\n                      // className={'product-attributeTag'}\n                      style={{\n                        fontSize: \"12px\",\n                      }}\n                    >\n                      {text ? \"In Stock\" : \"Out of stock\"}\n                      <span\n                        style={{\n                          marginLeft: \"5px\",\n                          fontSize: \"10px\",\n                        }}\n                      >\n                        <DownOutlined />\n                      </span>\n                    </span>\n                  </a>\n                </Dropdown>\n              ) : (\n                <a href=\"##\">\n                  <span\n                    // className={'product-attributeTag'}\n                    style={{\n                      fontSize: \"12px\",\n                    }}\n                  >\n                    {text ? \"In Stock\" : \"Out of stock\"}\n                    <span\n                      style={{\n                        marginLeft: \"5px\",\n                        fontSize: \"10px\",\n                      }}\n                    ></span>\n                  </span>\n                </a>\n              )}\n            </>\n          )}\n        />\n\n        {/* <Column\n          title=\"Unit\"\n          dataIndex=\"unit\"\n          key=\"id\"\n          className='classnameofthecolumn'\n\n        /> */}\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n\n        {isAccess(\"postCatalogue\", roles) && (\n          <Column\n            className=\"classnameofthecolumn\"\n            title=\"\"\n            key=\"action\"\n            align=\"right\"\n            render={(text, record: any) => (\n              <Space size=\"middle\">\n                <a href=\"##\">\n                  <Tooltip placement=\"top\" title=\"Edit Product\">\n                    <span\n                      className=\"iconSize\"\n                      onClick={() => {\n                        setvisible(true);\n                        setactiveCategoryForEdit(record);\n                      }}\n                    >\n                      <EditOutlined />\n                    </span>\n                  </Tooltip>\n                </a>\n\n                <Popconfirm\n                  onConfirm={() => handleDeleteProduct(record.id)}\n                  title=\"Are you sure？\"\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                >\n                  <span className=\"iconSize iconSize-danger\">\n                    <DeleteOutlined />\n                  </span>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        )}\n      </Table>\n\n      {activeCategoryForEdit && (\n        <ProductQuickEdit\n          productList={data}\n          setProductList={setProductList}\n          setProductEditVisible={setvisible}\n          productEditVisible={visible}\n          productDetailData={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  roles?: any;\n}\n\nconst ProductList = ({ roles }: Props) => {\n  const [productList, setProductList] = useState([]);\n\n  const [productState, handleProductListFetch] = useHandleFetch(\n    {},\n    \"productList\"\n  );\n\n  useEffect(() => {\n    const setProducts = async () => {\n      const products = await handleProductListFetch({\n        urlOptions: {\n          params: {\n            sortItem: \"added\",\n            sortOrderValue: \"-1\",\n            productType: \"product\",\n            limitNumber: 5000000,\n          },\n        },\n      });\n      // @ts-ignore\n      setProductList(products);\n    };\n    setProducts();\n  }, []);\n\n  console.log(\"myFuckingProductList\", productList);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  // console.log('productState', productState)\n\n  const handleSearch = (value) => {\n    if (productState.data.length > 0) {\n      const newProductList = productState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setProductList(newProductList);\n    }\n  };\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className=\"categoryListContainer\">\n        <div className=\"categoryListContainer__header\">\n          <div className=\"categoryListContainer__header-searchBar\">\n            <h2 className=\"categoryListContainer__header-title\">Products</h2>\n\n            <Search\n              enterButton={false}\n              className=\"searchbarClassName\"\n              placeholder=\"search products..\"\n              onChange={(e) => handleSearch(e.target.value)}\n              // style={{ width: 300 }}\n            />\n          </div>\n\n          {isAccess(\"postCatalogue\", roles) && (\n            <Button\n              // type=\"primary\"\n              className=\"btnPrimaryClassNameoutline\"\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          )}\n        </div>\n\n        <div className=\"categoryListContainer__afterHeader\">\n          {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n        </div>\n\n        <div className=\"categoryListContainer__categoryList\">\n          {productState.done && productList.length > 0 && (\n            <MyTable\n              roles={roles}\n              setProductList={setProductList}\n              data={productList}\n            />\n          )}\n          {productState.isLoading && <DataTableSkeleton />}\n          {productState.done && !(productList.length > 0) && (\n            <div\n              style={{\n                marginTop: \"200px\",\n              }}\n            >\n              <Empty\n                description=\"No Products found\"\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      {productState.done && (\n        <AddNewProduct\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          productList={productState.data}\n          setProductList={setProductList}\n        />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(ProductList);\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  message,\n  Tooltip,\n  Modal,\n  Tabs,\n  Empty,\n  Badge,\n  Spin,\n  Button,\n} from 'antd';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  FileImageOutlined,\n  FileImageTwoTone,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  EditOutlined,\n} from '@ant-design/icons';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport DatePicker from '../../components/Field/DatePicker';\nimport {\n  openSuccessNotification,\n  openErrorNotification,\n} from '../../components/Notification';\nimport Tags from './Tags';\nimport Brands from './Brands';\nimport Categories from './Categories';\nimport Pricing from './Pricing';\nimport MetaTags from '../category/MetaTags';\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n  model: '',\n  unit: '',\n  regular: '',\n  offer: '',\n  available: '',\n  minimum: '',\n  image: [],\n  url: '',\n  cover: '',\n  pricing: [],\n  venue: '',\n  date: '',\n  time: '',\n  purchaseLimit: null,\n  bnUnit: '',\n  bnName: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  productEditVisible?: any;\n  setProductEditVisible?: any;\n  productDetailData?: any;\n  setProductDetailData?: any;\n}\n\nconst ModalChildComponent = ({\n  productEditVisible,\n  setProductEditVisible,\n  productDetailData,\n  setProductDetailData,\n}) => {\n  const [updateProductState, handleUpdateProductFetch] = useHandleFetch(\n    {},\n    'updateProduct'\n  );\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\n    {},\n    'productDetailById'\n  );\n  const [\n    attachImageToItemMultipleState,\n    handleAttachImageToItemMultipleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\n  const [\n    attachImageToItemSingleState,\n    handleAttachImageToItemSingleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\n  const [\n    detachImageFromItemMultipleState,\n    handleDetachImageFromItemMultipleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [categoryids, setcategoryIds] = useState([]);\n  const [tagIds, setTagIds] = useState([]);\n  const [brandId, setBrandId] = useState('');\n  const [pricing, setPricing] = useState([]);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [date, setDateFeild] = useState('');\n  const [time, setTimeFeild] = useState('');\n  const [description, setDescription] = useState('');\n  const [bnDescription, setBNDescription] = useState('');\n  const [metaTags, setMetaTags] = useState([]);\n  const [bnMetaTags, setBnMetaTags] = useState([]);\n  const [editpricingItem, setEditPricingItem] = useState({});\n  const [pricingTagActiveKey, setpricingTagActiveKey] = useState('2');\n  const [isPricingEditActive, seTisPricingEditActive] = useState(false);\n\n  useEffect(() => {\n    const getProductDetail = async () => {\n      await handleProductDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: productDetailData.id,\n          },\n        },\n      });\n    };\n\n    getProductDetail();\n  }, [productDetailData]);\n\n  console.log('tagIds', tagIds);\n  console.log('selectedtagIds', selectedTags);\n\n  useEffect(() => {\n    if (\n      productDetailState.done &&\n      productDetailState.data &&\n      Object.keys(productDetailState.data).length > 0\n    ) {\n      const productDetailData = productDetailState.data;\n\n      if (productDetailData.brand) {\n        setBrandId(productDetailData.brand['id']);\n      } else {\n        setBrandId('');\n      }\n      if (\n        productDetailData &&\n        productDetailData.tags &&\n        productDetailData.tags.length > 0\n      ) {\n        const selectedTagNames = productDetailData.tags.map(\n          (item) => item.name\n        );\n\n        const selectedTagIds = productDetailData.tags.map((item) => item._id);\n\n        setSelectedTags(selectedTagNames);\n        console.log('selectedTagIds55', selectedTagIds);\n        setTagIds(selectedTagIds);\n      } else {\n        setTagIds([]);\n        setSelectedTags([]);\n      }\n      if (\n        productDetailData &&\n        productDetailData.category &&\n        productDetailData.category.length > 0\n      ) {\n        const categoryIds = productDetailData.category.map((item) => item.id);\n        setCategoryOptions(categoryIds);\n      } else {\n        setCategoryOptions([]);\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.pricing &&\n        productDetailData.pricing\n      ) {\n        setPricing(productDetailData.pricing);\n      } else {\n        setPricing([]);\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.date &&\n        productDetailData.date\n      ) {\n        setDateFeild(productDetailData.date);\n      } else {\n        setDateFeild('');\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.time &&\n        productDetailData.time\n      ) {\n        setTimeFeild(productDetailData.time);\n      } else {\n        setTimeFeild('');\n      }\n\n      if (productDetailData && productDetailData.description) {\n        setDescription(productDetailData.description);\n      } else {\n        setDescription('');\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.bn &&\n        productDetailData.bn['description']\n      ) {\n        setBNDescription(productDetailData.bn['description']);\n      } else {\n        setBNDescription('');\n      }\n    }\n\n    console.log('runnedBitch');\n  }, [productDetailState.done]);\n\n  useEffect(() => {\n    if (productDetailState.done && Object.keys(productDetailState).length > 0) {\n      const images = productDetailState.data.image;\n      let mahImages = [];\n\n      if (images && images.length > 0) {\n        mahImages = images;\n      }\n\n      if (\n        productDetailState.data.cover &&\n        productDetailState.data.cover['id']\n      ) {\n        const ixists = images.find(\n          (item) => item.id === productDetailState.data.cover['id']\n        );\n        if (!ixists) {\n          mahImages = [productDetailState.data.cover, ...mahImages];\n        }\n\n        setCoverImageId(productDetailState.data.cover['id']);\n      }\n\n      // @ts-ignore\n      setmyImages(mahImages);\n    }\n  }, [productDetailState.done]);\n\n  useEffect(() => {\n    console.log('thumnail', myImages);\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      console.log('thumnail2', myImages);\n\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  const handleDetachSingleImage = async (id) => {\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'product',\n          itemId: productDetailData.id,\n        },\n      },\n    });\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'product',\n          itemId: productDetailData.id,\n        },\n      },\n    });\n\n    console.log('thumbnailRes', thumbnailRes);\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      openSuccessNotification('Set as thumbnail!');\n      // const positionInBrand = () => {\n      //     return productList.map(item => item.id).indexOf(productDetailData.id);\n      // }\n\n      // const index = positionInBrand();\n\n      // const prevItem = productList.find(item => item.id === productDetailData.id);\n\n      // if (prevItem) {\n      //     console.log('prevItem--', prevItem, 'image--', image);\n      //     const updatedItem = Object.assign({}, productList[index], { ...prevItem, cover: image.cover });\n      //     const updateProductList = [...productList.slice(0, index), updatedItem, ...productList.slice(index + 1)];\n      //     setProductList(updateProductList);\n\n      // }\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  const makeEmptyCategoryOptions = (setEmpty) => {\n    setEmpty([]);\n  };\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\n      const aboutToUpdatedImageIds = [];\n\n      if (imagesIds && imagesIds.length > 0) {\n        imagesIds.forEach((imageId) => {\n          if (productDetailData && productDetailData['image']) {\n            if (!productDetailData['image'].includes(imageId)) {\n              aboutToUpdatedImageIds.push(imageId);\n            }\n          }\n        });\n      }\n\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n        await handleAttachImageToItemMultipleFetch({\n          urlOptions: {\n            placeHolders: {\n              collection: 'product',\n              itemId: productDetailData.id,\n            },\n          },\n          body: {\n            image: aboutToUpdatedImageIds,\n          },\n        });\n      } else if (\n        aboutToUpdatedImageIds[0] &&\n        aboutToUpdatedImageIds.length < 1\n      ) {\n        await handleAttachImageToItemSingleFetch({\n          urlOptions: {\n            placeHolders: {\n              imageId: aboutToUpdatedImageIds[0].id,\n              collection: 'product',\n              itemId: productDetailData.id,\n            },\n          },\n        });\n      }\n    }\n\n    const updatedProductRes = await handleUpdateProductFetch({\n      urlOptions: {\n        placeHolders: {\n          id: productDetailData.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: description,\n        model: values.model,\n        unit: values.unit,\n        category: categoryOptions,\n        tags: tagIds,\n        brand: brandId,\n        image: imagesIds,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        pricing: pricing,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags:\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\n          name: values.bnName.trim(),\n          unit: values.metaUnit,\n          description: bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updatedProductRes && updatedProductRes.status === 'ok') {\n      openSuccessNotification('Product Updated');\n\n      setProductEditVisible(false);\n\n      setProductEditVisible(false);\n      setProductDetailData({\n        // @ts-ignore\n        ...updatedProductRes,\n        category: productDetailData.category,\n        brand: productDetailData.brand,\n        tags: productDetailData.tags,\n        cover: productDetailData.cover,\n        image: productDetailData.image,\n      });\n\n      // setProductDetailData({\n      //     // @ts-ignore\n      //     ...updatedProductRes,\n      //     category: productDetailData.category,\n      //     brand: productDetailData.brand,\n      //     tags: productDetailData.tags,\n      //     cover: productDetailData.cover,\n      //     image: productDetailData.image,\n      // });\n\n      // console.log('updatedProductRes', updatedProductRes);\n      // setProductList([...productList, {\n      //     id: updatedProductRes['id'] || '',\n      //     key: updatedProductRes['id'] || '',\n      //     name: updatedProductRes['name'] || '',\n      //     description: updatedProductRes['description'] || '',\n      //     // @ts-ignore\n      //     ...updatedProductRes\n      // }])\n      // @ts-ignore\n      //   setmyImages([]);\n      //   setCoverImageId('');\n      //   setPricing([]);\n      //   setTagIds([]);\n      //   setSelectedTags([]);\n      //   setBrandId('');\n      //   setcategoryIds([]);\n      //   setCategoryOptions([]);\n      //   actions.resetForm();\n    } else {\n      // openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  console.log('updateProductStaet', updateProductState);\n  useEffect(() => {\n    if (!updateProductState['isLoading']) {\n      const error = updateProductState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [updateProductState]);\n\n  const handleCancel = (e: any) => {\n    setProductEditVisible(false);\n    // setmyImages(false);\n    // setCoverImageId('');\n    // setPricing([]);\n    // setTagIds([]);\n    // setSelectedTags([]);\n    // setBrandId('');\n    // setcategoryIds([]);\n    // setCategoryOptions([]);\n    // setMetaTags([]);\n    // setBnMetaTags([]);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !values.name ||\n      !(pricing.length > 0) ||\n      !(categoryOptions.length > 0) ||\n      !isValid\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleDeleteFromSelectedImage = () => {};\n\n  const handleThumbnailImageDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myThumbnailImage &&\n      myThumbnailImage.filter((image) => {\n        return image.id !== id;\n      });\n\n    if (newImages.length > 0) {\n      setmyThumbnailImage(newImages);\n    } else setmyThumbnailImage(false);\n  };\n\n  const handleUpdatePricing = (priceItem) => {\n    const positionInPricing = () => {\n      return pricing.map((item) => item.id).indexOf(priceItem.id);\n    };\n\n    const index = positionInPricing();\n\n    // @ts-ignore\n    const updatedItem = Object.assign({}, pricing[index], { ...priceItem });\n    const updatePricingList = [\n      ...pricing.slice(0, index),\n      updatedItem,\n      ...pricing.slice(index + 1),\n    ];\n\n    setPricing(updatePricingList);\n\n    message.info('Product Pricing Updated');\n    seTisPricingEditActive(true);\n    setpricingTagActiveKey('2');\n  };\n\n  const handleAddPricing = (priceItem) => {\n    setPricing([\n      {\n        ...priceItem,\n        id: pricing.length,\n      },\n      ...pricing,\n    ]);\n    message.info('Product Pricing Added');\n  };\n\n  const handleDeletePricing = (id) => {\n    const newPricing = pricing.filter((item) => item.id !== id);\n    setPricing(newPricing);\n    message.info('Product Pricing Deleted');\n  };\n\n  const handleEditPricing = (id) => {\n    seTisPricingEditActive(true);\n    const pricingItem = pricing.find((item) => item.id === id);\n    if (pricingItem) {\n      setEditPricingItem(pricingItem);\n    }\n  };\n\n  const isCategoryInValid = () => {\n    if (\n      updateProductState.error['error']['category'] &&\n      !categoryids &&\n      categoryids.length\n    ) {\n      return true;\n    } else if (categoryids && categoryids.length > 0) {\n      return false;\n    }\n  };\n\n  const handleDateChange = (date, dateString) => {\n    setDateFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  console.log('productDetailData', productDetailData);\n  console.log('productDetailState', productDetailState);\n\n  useEffect(() => {\n    if (\n      productDetailState.data &&\n      Object.keys(productDetailState.data).length > 0 &&\n      productDetailState.data.metaTags\n    ) {\n      const metaTags = productDetailState.data.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags = productDetailState.data.bn['metaTags'].split(',');\n      setMetaTags(metaTags || []);\n      setBnMetaTags(bnMetaTags || []);\n    }\n  }, [productDetailState['done']]);\n\n  console.log('productDetailData');\n\n  return (\n    <>\n      <Formik\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        enableReinitialize={true}\n        initialValues={{\n          ...initialValues,\n          ...{\n            ...productDetailData,\n            ...(productDetailState['data'] &&\n              Object.keys(productDetailState['data']).length > 0 &&\n              productDetailState['data']['bn'] && {\n                bnMetaTitle: productDetailState['data']['bn'].metaTitle,\n                bnMetaDescription:\n                  productDetailState['data']['bn'].metaDescription,\n                bnName: productDetailState['data']['bn'].name,\n                metaUnit: productDetailState['data']['bn'].unit,\n                bnDescription: productDetailState['data']['bn'].description,\n              }),\n          },\n        }}\n      >\n        {({\n          handleChange,\n          values,\n          handleSubmit,\n          errors,\n          isValid,\n          isSubmitting,\n          touched,\n          handleBlur,\n          setFieldTouched,\n          handleReset,\n        }) => (\n          <>\n            <section className='addProductGridContainer'>\n              <div className='addProductGridContainer__left'>\n                <div className='addProductGridContainer__name'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Product Information *</h3>\n                    <div\n                      className={\n                        values.name && values.name.length > 2\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <Input\n                      label='Name *'\n                      value={values.name}\n                      placeHolder={'Rafty ox'}\n                      name='name'\n                      isError={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['name'])\n                      }\n                      errorString={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['name'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('name');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Name'\n                      value={values.bnName}\n                      placeHolder={'রাফতি অক্স'}\n                      name='bnName'\n                      isError={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['bnName'])\n                      }\n                      errorString={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['bnName'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnName');\n                      }}\n                    />\n\n                    {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n\n                    {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n\n                    <Input\n                      label='Unit'\n                      value={values.unit}\n                      name='unit'\n                      placeHolder={'KG,POUND,GM'}\n                      isError={\n                        (touched.unit && errors.unit) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['unit'])\n                      }\n                      errorString={\n                        (touched.unit && errors.unit) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['unit'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('unit');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Unit'\n                      value={values.bnUnit}\n                      placeHolder={'কেজি,গ্রাম'}\n                      name='bnUnit'\n                      isError={\n                        (touched.bnUnit && errors.bnUnit) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['bnUnit'])\n                      }\n                      errorString={\n                        (touched.bnUnit && errors.bnUnit) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['bnUnit'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnUnit');\n                      }}\n                    />\n\n                    <Input\n                      label='Model Number'\n                      value={values.model}\n                      name='model'\n                      isError={\n                        (touched.model && errors.model) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['model'])\n                      }\n                      errorString={\n                        (touched.model && errors.model) ||\n                        (!isSubmitting &&\n                          updateProductState.error['error']['model'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('model');\n                      }}\n                    />\n\n                    <h3 className='inputFieldLabel'>Description</h3>\n\n                    <div\n                      style={{\n                        width: '100%',\n                        maxWidth: '100%',\n                      }}\n                    >\n                      <CKEditor\n                        editor={ClassicEditor}\n                        data={description}\n                        onInit={(editor) => {\n                          // You can store the \"editor\" and use when it is needed.\n                          console.log('Editor is ready to use!', editor);\n                        }}\n                        onChange={(event, editor) => {\n                          const data = editor.getData();\n                          setDescription(data);\n                        }}\n                        onBlur={(event, editor) => {\n                          console.log('Blur.', editor);\n                        }}\n                        onFocus={(event, editor) => {\n                          console.log('Focus.', editor);\n                        }}\n                      />\n                    </div>\n\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    ></div>\n\n                    <h3 className='inputFieldLabel'>BN Description</h3>\n\n                    <div\n                      style={{\n                        width: '100%',\n                        maxWidth: '100%',\n                      }}\n                    >\n                      <CKEditor\n                        editor={ClassicEditor}\n                        data={bnDescription}\n                        onInit={(editor) => {\n                          // You can store the \"editor\" and use when it is needed.\n                          console.log('Editor is ready to use!', editor);\n                        }}\n                        onChange={(event, editor) => {\n                          const data = editor.getData();\n                          setBNDescription(data);\n                        }}\n                        onBlur={(event, editor) => {\n                          console.log('Blur.', editor);\n                        }}\n                        onFocus={(event, editor) => {\n                          console.log('Focus.', editor);\n                        }}\n                      />\n                    </div>\n\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    >\n                      {' '}\n                    </div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__price'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Product Pricing *</h3>\n\n                    <div\n                      className={\n                        pricing && pricing.length > 0\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n\n                  <div className='addProductGridContainer__item-body'>\n                    <Tabs\n                      animated={true}\n                      tabPosition='top'\n                      type='card'\n                      activeKey={pricingTagActiveKey}\n                      onChange={(value) => {\n                        setpricingTagActiveKey(`${value}`);\n                      }}\n                    >\n                      <TabPane tab='Add Variation' key='1'>\n                        <Pricing\n                          handleAddPricing={handleAddPricing}\n                          pricingItem={editpricingItem}\n                          handleUpdatePricing={handleUpdatePricing}\n                          isPricingEditActive={isPricingEditActive}\n                        />\n                      </TabPane>\n                      <TabPane tab='Pricing List' key='2'>\n                        <div className='addProductGridContainer__item-body-pricingContainer'>\n                          {pricing.length > 0 &&\n                            pricing.map((item) => {\n                              return (\n                                <div className='addProductGridContainer__item-body-pricingContainer-item'>\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-edit'>\n                                    {/* <span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\n                                    <span\n                                      className='pricingEditIcon'\n                                      onClick={() => {\n                                        handleEditPricing(item.id);\n                                        setpricingTagActiveKey('1');\n                                      }}\n                                    >\n                                      <EditOutlined />\n                                    </span>\n                                    <span\n                                      className='pricingDeleteIcon'\n                                      onClick={() =>\n                                        handleDeletePricing(item.id)\n                                      }\n                                    >\n                                      <DeleteOutlined />\n                                    </span>\n                                  </div>\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\n                                    <div>\n                                      <h3>Price</h3>\n                                      <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                        {item.price.offer ? (\n                                          <>\n                                            <h4>{item.price.offer}</h4>/\n                                            <h5\n                                              style={{\n                                                textDecoration: 'line-through',\n                                              }}\n                                            >\n                                              {item.price.regular}\n                                            </h5>\n                                          </>\n                                        ) : (\n                                          <h4>{item.price.regular}</h4>\n                                        )}\n                                      </div>\n                                    </div>\n\n                                    {item.stock && item.stock['available'] && (\n                                      <div>\n                                        <Badge\n                                          overflowCount={999}\n                                          count={item.stock.available}\n                                        >\n                                          <h3>Stock</h3>\n                                        </Badge>\n                                        {item.stock['minimum'] && (\n                                          <>\n                                            <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                              <div>\n                                                <h6>\n                                                  min\n                                                  <Badge\n                                                    className='site-badge-count-4'\n                                                    overflowCount={999}\n                                                    count={item.stock.minimum}\n                                                  />\n                                                </h6>\n                                              </div>\n                                            </div>\n                                          </>\n                                        )}\n                                      </div>\n                                    )}\n\n\n                                    {Boolean(item?.maximumPurchaseLimit) && (\n                                       <div>\n                                       <h3>Maximum Purchase Limit</h3>\n                                       <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                       <h4>{item?.maximumPurchaseLimit}</h4>\n                                       </div>\n                                     </div>\n                                    )}\n\n                                  </div>\n\n                                  {item.attribute &&\n                                    Object.values(item.attribute).length >\n                                      0 && (\n                                      <>\n                                        <h3>Attributes</h3>\n                                        <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                          {item.attribute &&\n                                            Object.keys(item.attribute).length >\n                                              0 &&\n                                            Object.keys(item.attribute).map(\n                                              (attributeItem) => {\n                                                return (\n                                                  <div>\n                                                    <h6>{attributeItem}</h6>\n                                                    <h4>\n                                                      {\n                                                        item.attribute[\n                                                          attributeItem\n                                                        ]\n                                                      }\n                                                    </h4>\n                                                  </div>\n                                                );\n                                              }\n                                            )}\n                                        </div>\n                                      </>\n                                    )}\n                                </div>\n                              );\n                            })}\n\n                          {!(pricing.length > 0) && (\n                            <div\n                              style={{\n                                width: '100%',\n                                display: 'flex',\n                                justifyContent: 'center',\n                              }}\n                            >\n                              <Empty\n                                description='No Pricing added'\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                              />\n                            </div>\n                          )}\n                        </div>\n                      </TabPane>\n                    </Tabs>\n\n                    <div className='addProductGridContainer__item-body-container'></div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__image'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Image</h3>\n\n                    <Tooltip\n                      placement='left'\n                      title={\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\n                      }\n                    >\n                      <a href='###'>\n                        <InfoCircleOutlined />\n                      </a>\n                    </Tooltip>\n                  </div>\n\n                  <div\n                    style={{\n                      padding: '10px',\n                    }}\n                    className='aboutToUploadImagesContainer'\n                  >\n                    {productDetailState.isLoading && (\n                      <div\n                        style={{\n                          padding: '20px 0',\n                        }}\n                      >\n                        <Spin />\n                      </div>\n                    )}\n                    {productDetailState.done && (\n                      <>\n                        {myImages &&\n                          // @ts-ignore\n                          myImages.length > 0 &&\n                          myImages.map((image, index) => {\n                            return (\n                              <div className='aboutToUploadImagesContainer__item'>\n                                <div\n                                  className='aboutToUploadImagesContainer__item-imgContainer'\n                                  onClick={() => {\n                                    setCoverImageId(image.id);\n                                    handleSetImageAsThumnail(image);\n                                  }}\n                                >\n                                  <img src={image.cover} alt={image.alt} />\n                                </div>\n\n                                <span\n                                  onClick={() => {\n                                    handleImagesDelete(image.id);\n                                    handleDetachSingleImage(image.id);\n                                  }}\n                                  className='aboutToUploadImagesContainer__item-remove'\n                                >\n                                  <CloseOutlined />\n                                </span>\n\n                                {coverImageId === image.id ? (\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                  </span>\n                                ) : (\n                                  !coverImageId &&\n                                  index === 0 && (\n                                    <span className='aboutToUploadImagesContainer__item-cover'>\n                                      <CheckOutlined />\n                                    </span>\n                                  )\n                                )}\n                              </div>\n                            );\n                          })}\n\n                        <Tooltip title={'Attach images'}>\n                          <div\n                            onClick={() => {\n                              setvisible(true);\n                              setisModalOpenForImages(true);\n                              setisModalOpenForThumbnail(false);\n                            }}\n                            className='aboutToUploadImagesContainer__uploadItem'\n                          >\n                            {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                            <FileImageFilled />\n                            {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                              <PlusOutlined />\n                            </span>\n                          </div>\n                        </Tooltip>\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className='addProductGridContainer__right'>\n                <div className='addProductGridContainer__category'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Categories *</h3>\n\n                      {/* <Tooltip\n                        color='red'\n                        visible={\n                          updateProductState.error['error']['category'] &&\n                          !(categoryids.length > 0)\n                        }\n                        placement='left'\n                        title={'Select at least one category'}\n                      >\n                        <div\n                          className={\n                            !(categoryids.length > 0) &&\n                            !updateProductState.error['error']['category']\n                              ? 'checkicon'\n                              : updateProductState.error['error']['category']\n                              ? 'checkicon-error'\n                              : 'checkicon-active'\n                          }\n                        >\n                          <CheckCircleOutlined />\n                        </div>\n                      </Tooltip> */}\n                      <div\n                        className={\n                          !(categoryids.length > 0) &&\n                          !updateProductState.error['error']['category']\n                            ? 'checkicon'\n                            : updateProductState.error['error']['category']\n                            ? 'checkicon-error'\n                            : 'checkicon-active'\n                        }\n                      >\n                        <CheckCircleOutlined />\n                      </div>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Categories\n                        setCategoryOptions={setCategoryOptions}\n                        categoryOptions={categoryOptions}\n                        setcategoryIds={setcategoryIds}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__tag'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Tags</h3>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Tags\n                        setSelectedTags={setSelectedTags}\n                        selectedTags={selectedTags}\n                        setTagIds={setTagIds}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className='addProductGridContainer__brand'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Brand</h3>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Brands\n                        productDetailState={productDetailState}\n                        brandId={brandId}\n                        setBrandId={setBrandId}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div\n                  className='addProductGridContainer__brand'\n                  style={{\n                    marginTop: '10px',\n                  }}\n                >\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Meta Tags</h3>\n\n                      <Tooltip\n                        placement='left'\n                        title={\n                          \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                        }\n                      >\n                        <a href='###'>\n                          <InfoCircleOutlined />\n                        </a>\n                      </Tooltip>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Input\n                        label='Meta title'\n                        value={values.metaTitle}\n                        placeHolder={'...'}\n                        name='metaTitle'\n                        isError={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['metaTitle'])\n                        }\n                        errorString={\n                          (touched.metaTitle && errors.metaTitle) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['metaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaTitle');\n                        }}\n                      />\n\n                      <Input\n                        label='BN Meta title'\n                        value={values.bnMetaTitle}\n                        placeHolder={'...'}\n                        name='bnMetaTitle'\n                        isError={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['bnMetaTitle'])\n                        }\n                        errorString={\n                          (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error']['bnMetaTitle'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaTitle');\n                        }}\n                      />\n\n                      <TextArea\n                        label='Meta description'\n                        value={values.metaDescription}\n                        placeholder={'meta...'}\n                        name='metaDescription'\n                        isError={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error'][\n                              'metaDescription'\n                            ])\n                        }\n                        errorString={\n                          (touched.metaDescription && errors.metaDescription) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error'][\n                              'metaDescription'\n                            ])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('metaDescription');\n                        }}\n                      />\n\n                      <TextArea\n                        label='BN Meta Description'\n                        value={values.bnMetaDescription}\n                        placeholder={'এইয় মেট...'}\n                        name='bnMetaDescription'\n                        isError={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        errorString={\n                          (touched.bnMetaDescription &&\n                            errors.bnMetaDescription) ||\n                          (!isSubmitting &&\n                            updateProductState.error['error'][\n                              'bnMetaDescription'\n                            ])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('bnMetaDescription');\n                        }}\n                      />\n\n                      <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setMetaTags}\n                        tags={metaTags}\n                      />\n\n                      <div\n                        style={{\n                          marginTop: '15px',\n                        }}\n                      ></div>\n\n                      <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n                      <MetaTags\n                        // @ts-ignore\n                        setTags={setBnMetaTags}\n                        tags={bnMetaTags}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n\n            <div\n              style={{\n                padding: '15px',\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  color: '#555',\n                  marginRight: '10px',\n                }}\n                className='btnPrimaryClassNameoutline-cancle'\n                onClick={() => setProductEditVisible(false)}\n                type='default'\n              >\n                Cancel\n              </Button>\n\n              <Button\n                className='btnPrimaryClassNameoutline'\n                onClick={handleSubmit}\n                loading={updateProductState.isLoading}\n                type='link'\n                icon={<CheckOutlined />}\n              >\n                Update\n              </Button>\n            </div>\n\n            <MediaLibrary\n              setvisible={setvisible}\n              visible={visible}\n              setmyImages={setmyImages}\n              myImages={myImages}\n              setmyThumbnailImage={setmyThumbnailImage}\n              isModalOpenForThumbnail={isModalOpenForThumbnail}\n              isModalOpenForImages={isModalOpenForImages}\n            />\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nconst AddNewProduct = ({\n  productEditVisible,\n  setProductEditVisible,\n  productDetailData,\n  setProductDetailData,\n}: Props) => {\n  const handleCancel = () => {\n    setProductEditVisible(false);\n  };\n  return (\n    <Modal\n      style={{\n        top: '40px',\n      }}\n      bodyStyle={{\n        margin: 0,\n        padding: 0,\n      }}\n      width={'70vw'}\n      title='Product Edit'\n      visible={productEditVisible}\n      // onOk={(e: any) => handleSubmit(e)}\n      onCancel={handleCancel}\n      destroyOnClose={true}\n      okText='Update'\n      footer={false}\n      okButtonProps={{\n        //   loading: isSubmitting,\n        htmlType: 'submit',\n      }}\n    >\n      <ModalChildComponent\n        setProductEditVisible={setProductEditVisible}\n        productEditVisible={productEditVisible}\n        setProductDetailData={setProductDetailData}\n        productDetailData={productDetailData}\n        handleCancel={handleCancel}\n      />\n    </Modal>\n  );\n};\n\nexport default AddNewProduct;\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n\t[regular input field] [offer inputfield]\n\nStock [title]\n\t[available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n\t[add attributes name]\n\t\t[add attrubutes value]\n\n\t[add attributes name]\n\t\t[add attrubutes value\n\n*/ //\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport { EditOutlined } from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n  Badge,\n} from 'antd';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport ProductEdit from './ProductEdit';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n  roles: any;\n}\n\nconst NewBrandDetail = ({ roles }: Props) => {\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\n    {},\n    'productDetailById'\n  );\n\n  const params = useParams();\n  const history = useHistory();\n  const productId = params['id'];\n  const [productEditVisible, setProductEditVisible] = useState(false);\n  const [productDetailData, setProductDetailData] = useState({});\n\n  useEffect(() => {\n    const getProductDetail = async () => {\n      const productDetailRes = await handleProductDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: productId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (productDetailRes) {\n        // @ts-ignore\n        setProductDetailData(productDetailRes);\n      }\n\n      console.log('productDetailRes', productDetailRes);\n    };\n\n    getProductDetail();\n  }, [productId]);\n\n  console.log('productDetailState', productDetailState);\n\n  console.log('brandParams', params);\n\n  const getImagesInCollumn = (imgs) => {\n    if (!imgs[0]) return false;\n    imgs = imgs.map((item) => item.cover);\n    const columns = {};\n\n    let localIndex = 0;\n    let columnNumber = 0;\n\n    imgs.forEach((item, index) => {\n      if (localIndex < 3) {\n        if (columns[columnNumber]) {\n          columns[columnNumber] = [...columns[columnNumber], item];\n        } else columns[columnNumber] = [item];\n\n        localIndex = localIndex + 1;\n        columnNumber = columnNumber + 1;\n      } else {\n        localIndex = 0;\n        columnNumber = 0;\n        console.log('localIndex', localIndex);\n      }\n    });\n\n    return columns;\n  };\n\n  const row =\n    productDetailState.done && productDetailData && productDetailData['image']\n      ? getImagesInCollumn(productDetailData['image'])\n      : [];\n\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Product Detail</h3>\n\n        {productDetailState.done &&\n          productDetailData &&\n          Object.keys(productDetailData).length > 0 && (\n            <>\n              <ProductEdit\n                productEditVisible={productEditVisible}\n                setProductEditVisible={setProductEditVisible}\n                productDetailData={productDetailData}\n                setProductDetailData={setProductDetailData}\n              />\n              {isAccess('postCatalogue', roles) && (\n                <Button\n                  onClick={() => setProductEditVisible(true)}\n                  type='link'\n                  icon={<EditOutlined />}\n                >\n                  Edit\n                </Button>\n              )}\n            </>\n          )}\n      </div>\n      <Skeleton\n        avatar\n        paragraph={{ rows: 3 }}\n        loading={productDetailState.isLoading}\n      >\n        {productDetailState.done &&\n          productDetailData &&\n          !(Object.keys(productDetailData).length > 0) && (\n            <Empty\n              description='No Product found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {productDetailState.done &&\n          productDetailData &&\n          Object.keys(productDetailData).length > 0 && (\n            <>\n              <div className='brandDetailContainer__header'>\n                <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\n                  <img\n                    src={\n                      productDetailData['cover'] &&\n                      productDetailData['cover']['cover']\n                    }\n                    alt=''\n                  />\n                </div>\n                <div className='brandDetailContainer__header-info'>\n                  <h2>{productDetailData['name']}</h2>\n                  <h4>{productDetailData['price']}</h4>\n                  <h3>{productDetailData['description']}</h3>\n\n                  {productDetailData['url'] && (\n                    <h3>\n                      URL:\n                      <span>{productDetailData['url']}</span>\n                    </h3>\n                  )}\n\n                  {/* \n                                {productDetailData['tags'] && productDetailData['tags'].length > 0 &&\n                                    (<>\n                                        <h3>\n                                            TAGS:\n                                        {productDetailData['tags'].map(tag => {\n                                            return (\n                                                <span>\n                                                    {tag.name}\n                                                </span>\n                                            )\n                                        })}\n                                        </h3>\n\n                                    </>)\n                                } */}\n\n                  {productDetailData['category'] &&\n                    productDetailData['category'].length > 0 && (\n                      <>\n                        <h3>\n                          CATEGORIES:\n                          {productDetailData['category'].map((cat) => {\n                            return (\n                              <span\n                                onClick={() =>\n                                  history.push(`/admin/category/${cat.id}`)\n                                }\n                              >\n                                {cat.name}\n                              </span>\n                            );\n                          })}\n                        </h3>\n                      </>\n                    )}\n\n                  {productDetailData['tags'] &&\n                    productDetailData['tags'].length > 0 && (\n                      <>\n                        <h3>\n                          TAGS:\n                          {productDetailData['tags'].map((cat) => {\n                            return (\n                              <span\n                                onClick={() =>\n                                  history.push(`/admin/tag/${cat._id}`)\n                                }\n                              >\n                                {cat.name}\n                              </span>\n                            );\n                          })}\n                        </h3>\n                      </>\n                    )}\n                </div>\n              </div>\n\n              {productDetailData['icon'] && (\n                <>\n                  <div className='brandDetailContainer__heading'>\n                    <h3>Icon</h3>\n                  </div>\n\n                  <div className='brandDetailContainer__inlineBox'>\n                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\n                      <img\n                        src={\n                          productDetailData['icon'] && productDetailData['icon']\n                        }\n                        alt=''\n                      />\n                    </div>\n                  </div>\n\n                  <div\n                    style={{\n                      marginBottom: '25px',\n                    }}\n                  ></div>\n                </>\n              )}\n\n              {productDetailData['pricing'] &&\n                productDetailData['pricing'].length > 0 && (\n                  <>\n                    <div className='brandDetailContainer__heading'>\n                      <h3>Pricing</h3>\n                    </div>\n\n                    <div className='brandDetailContainer__pricing'>\n                      <div className='addProductGridContainer__item-body-pricingContainer'>\n                        {productDetailData['pricing'].map((item) => {\n                          return (\n                            <div className='addProductGridContainer__item-body-pricingContainer-item'>\n                              <div className='addProductGridContainer__item-body-pricingContainer-item-two'>\n                                <div>\n                                  <h3>Price</h3>\n                                  <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                    {item.price.offer ? (\n                                      <>\n                                        <h4>{item.price.offer}</h4>/\n                                        <h5\n                                          style={{\n                                            textDecoration: 'line-through',\n                                          }}\n                                        >\n                                          {item.price.regular}\n                                        </h5>\n                                      </>\n                                    ) : (\n                                      <h4>{item.price.regular}</h4>\n                                    )}\n                                  </div>\n                                </div>\n\n                                {item.stock && (\n                                  <div>\n                                    <Badge\n                                      overflowCount={999}\n                                      count={item.stock.available}\n                                    >\n                                      <h3>Stock</h3>\n                                    </Badge>\n                                    <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                      <div>\n                                        <h6>\n                                          min\n                                          <Badge\n                                            className='site-badge-count-4'\n                                            overflowCount={999}\n                                            count={item.stock.minimum}\n                                          />\n                                        </h6>\n                                      </div>\n                                    </div>\n                                  </div>\n                                )}\n                              </div>\n\n                              {item.attribute &&\n                                Object.values(item.attribute).length > 0 && (\n                                  <>\n                                    <h3>Attributes</h3>\n                                    <div className='addProductGridContainer__item-body-pricingContainer-item-body'>\n                                      {item.attribute &&\n                                        Object.keys(item.attribute).length >\n                                          0 &&\n                                        Object.keys(item.attribute).map(\n                                          (attributeItem) => {\n                                            return (\n                                              <div>\n                                                <h6>{attributeItem}</h6>\n                                                <h4>\n                                                  {\n                                                    item.attribute[\n                                                      attributeItem\n                                                    ]\n                                                  }\n                                                </h4>\n                                              </div>\n                                            );\n                                          }\n                                        )}\n                                    </div>\n                                  </>\n                                )}\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </div>\n\n                    <div\n                      style={{\n                        marginBottom: '25px',\n                      }}\n                    ></div>\n                  </>\n                )}\n\n              {productDetailData['image'] &&\n                productDetailData['image'].length > 0 && (\n                  <>\n                    <div className='brandDetailContainer__heading'>\n                      <h3>Image Gallary</h3>\n                    </div>\n\n                    <div className='brandDetailContainer__imageGallary'>\n                      <div className='imgGallaryContainer'>\n                        <div className='imgGallary-row'>\n                          {row &&\n                            Object.keys(row).map((column) => {\n                              return (\n                                <div className='imgGallary-column'>\n                                  {row[column] &&\n                                    row[column].map((img) => {\n                                      return (\n                                        <img\n                                          src={img}\n                                          style={{\n                                            width: '100%',\n                                          }}\n                                        />\n                                      );\n                                    })}\n                                </div>\n                              );\n                            })}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div\n                      style={{\n                        marginBottom: '25px',\n                      }}\n                    ></div>\n                  </>\n                )}\n\n              {productDetailData['brand'] &&\n                Object.keys(productDetailData['brand']).length > 0 && (\n                  <>\n                    <div className='brandDetailContainer__heading'>\n                      <h3>Brand</h3>\n                    </div>\n\n                    <div\n                      onClick={() =>\n                        history.push(\n                          `/admin/brand/${productDetailData['brand']['id']}`\n                        )\n                      }\n                      className='brandDetailContainer__brand'\n                    >\n                      <div className='brandDetailContainer__brand-coverbox'>\n                        <img\n                          src={\n                            productDetailData['brand']['cover'] &&\n                            productDetailData['brand']['cover']\n                          }\n                          alt=''\n                        />\n                      </div>\n                      <div className='brandDetailContainer__brand-info'>\n                        <h2>{productDetailData['brand']['name']}</h2>\n                        <h3>{productDetailData['brand']['description']}</h3>\n                      </div>\n                    </div>\n\n                    <div\n                      style={{\n                        marginBottom: '25px',\n                      }}\n                    ></div>\n                  </>\n                )}\n\n              {productDetailData['primaryCategory'] &&\n                Object.keys(productDetailData['primaryCategory']).length >\n                  0 && (\n                  <>\n                    <div className='brandDetailContainer__heading'>\n                      <h3>Primary Category</h3>\n                    </div>\n\n                    <div\n                      onClick={() =>\n                        history.push(\n                          `/admin/category/${productDetailData['primaryCategory']['id']}`\n                        )\n                      }\n                      className='brandDetailContainer__brand'\n                    >\n                      <div className='brandDetailContainer__brand-coverbox'>\n                        <img\n                          src={\n                            productDetailData['primaryCategory']['cover'] &&\n                            productDetailData['primaryCategory']['cover']\n                          }\n                          alt=''\n                        />\n                      </div>\n                      <div className='brandDetailContainer__brand-info'>\n                        <h2>{productDetailData['primaryCategory']['name']}</h2>\n                        <h3>\n                          {productDetailData['primaryCategory']['description']}\n                        </h3>\n                      </div>\n                    </div>\n\n                    <div\n                      style={{\n                        marginBottom: '25px',\n                      }}\n                    ></div>\n                  </>\n                )}\n            </>\n          )}\n      </Skeleton>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(NewBrandDetail);\n","import React, { useState, useEffect } from 'react';\nimport { Modal, notification } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { useHandleFetch } from '../../hooks';\nimport {\n  CheckCircleOutlined,\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport MetaTags from '../../pages/category/MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\nconst ModalChildComponent = ({}) => {\n  return <></>;\n};\n\ninterface Props {\n  tagEditVisible?: any;\n  setTagEditVisible?: any;\n  tagDetailData?: any;\n  setTagList?: any;\n  tagList?: any;\n}\n\nconst QuickEdit = ({\n  tagEditVisible,\n  setTagEditVisible,\n  tagDetailData,\n  setTagList,\n  tagList,\n}: Props) => {\n  const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch(\n    {},\n    'updateTag'\n  );\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  useEffect(() => {\n    console.log('mounted11');\n  }, []);\n  const handleSubmit = async (values: any, actions: any) => {\n    const updateTagRes = await handleUpdateCategoryFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name,\n        description: values.description,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags.join(','),\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags.join(','),\n          name: values.bnName.trim(),\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updateTagRes && updateTagRes.status === 'ok') {\n      const positionInTag = () => {\n        return tagList.map((item) => item.id).indexOf(values.id);\n      };\n\n      const index = positionInTag();\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, tagList[index], {\n        // @ts-ignore\n        ...updateTagRes,\n      });\n      const updateTagList = [\n        ...tagList.slice(0, index),\n        updatedItem,\n        ...tagList.slice(index + 1),\n      ];\n      setTagList(updateTagList);\n\n      console.log('categoryupdateTagRes', updateTagRes);\n      openSuccessNotification();\n      setTagEditVisible(false);\n\n      // const positionInTag = () => {\n      //     return tagList.map(item => item.id).indexOf(category.id);\n      // }\n\n      // const index = positionInTag();\n\n      // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\n      // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\n      // setTagList(updateTagList);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!updateTagState['isLoading']) {\n      const error = updateTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [updateTagState]);\n\n  const handleCancel = (e: any) => {\n    setTagEditVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  // useEffect(()=>{\n\n  //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\n  //         const metaTags = tagDetailData.metaTags.split(',');\n\n  //         console.log('localMetaTags',metaTags);\n\n  //         const bnMetaTags = tagDetailData.bn['metaTags'].split(',');\n\n  //         setTags(metaTags)\n  //         setBnTags(bnMetaTags)\n  //     }\n\n  // },[]);\n\n  console.log('tagDetailData', tagDetailData);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{\n        ...initialValues,\n        ...tagDetailData,\n        ...(tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && {\n            bnMetaTitle:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].metaTitle &&\n              tagDetailData['bn'].metaTitle,\n            bnMetaDescription:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].metaDescription &&\n              tagDetailData['bn'].metaDescription,\n            bnName:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].name &&\n              tagDetailData['bn'].name,\n            bnDescription:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].description &&\n              tagDetailData['bn'].description,\n          }),\n      }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Tag Edit'\n            visible={tagEditVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n            }}\n          >\n            <Input\n              label='Name *'\n              value={values.name}\n              name='name'\n              placeHolder={'new,fresh'}\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='BN Name'\n              value={values.bnName}\n              placeHolder={'নতুন,ফ্রেশ'}\n              name='bnName'\n              isError={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && updateTagState.error['error']['bnName'])\n              }\n              errorString={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && updateTagState.error['error']['bnName'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnName');\n              }}\n            />\n\n            <TextArea\n              label='Description'\n              value={values.description}\n              name='description'\n              placeholder={'This tag...'}\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting && updateTagState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting && updateTagState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n\n            <TextArea\n              label='BN Description'\n              value={values.bnDescription}\n              placeholder={'এই ট্যাগ...'}\n              name='bnDescription'\n              isError={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['bnDescription'])\n              }\n              errorString={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['bnDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnDescription');\n              }}\n            />\n\n            <Input\n              label='Meta title'\n              value={values.metaTitle}\n              placeHolder={'...'}\n              name='metaTitle'\n              isError={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && updateTagState.error['error']['metaTitle'])\n              }\n              errorString={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && updateTagState.error['error']['metaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaTitle');\n              }}\n            />\n\n            <Input\n              label='BN Meta title'\n              value={values.bnMetaTitle}\n              placeHolder={'...'}\n              name='bnMetaTitle'\n              isError={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && updateTagState.error['error']['bnMetaTitle'])\n              }\n              errorString={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && updateTagState.error['error']['bnMetaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaTitle');\n              }}\n            />\n\n            <TextArea\n              label='Meta description'\n              value={values.metaDescription}\n              placeholder={'meta...'}\n              name='metaDescription'\n              isError={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['metaDescription'])\n              }\n              errorString={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['metaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaDescription');\n              }}\n            />\n\n            <TextArea\n              label='BN Meta Description'\n              value={values.bnMetaDescription}\n              placeholder={'এইয় মেট...'}\n              name='bnMetaDescription'\n              isError={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['bnMetaDescription'])\n              }\n              errorString={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['bnMetaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaDescription');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Meta Tags (grocery,fashion)</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setTags}\n              tags={tags}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>BN Meta Tags (মুদিখানা,ফ্যাশন)</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setBnTags}\n              tags={bnTags}\n            />\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default QuickEdit;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport MetaTags from '../../pages/category/MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  //   name: Yup.string()\n  //     .label('Name')\n  //     .required('Name is required')\n  //     .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagList?: any;\n  setTagList?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  tagList,\n  setTagList,\n}: Props) => {\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: values.description,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags.join(','),\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags.join(','),\n          name: values.bnName.trim(),\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n\n      setTagList([\n        {\n          id: addTagRes['_id'] || '',\n          key: addTagRes['_id'] || '',\n          name: addTagRes['name'] || '',\n          description: addTagRes['description'] || '',\n        },\n        ...tagList,\n      ]);\n      actions.resetForm();\n      setAddNewCategoryVisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addTagState['isLoading']) {\n      const error = addTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addTagState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Add New Tag'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n            }}\n          >\n            <Input\n              label='Name *'\n              value={values.name}\n              name='name'\n              placeHolder={'new,fresh'}\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='BN Name'\n              value={values.bnName}\n              placeHolder={'নতুন,ফ্রেশ'}\n              name='bnName'\n              isError={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addTagState.error['error']['bnName'])\n              }\n              errorString={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addTagState.error['error']['bnName'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnName');\n              }}\n            />\n\n            <TextArea\n              label='Description'\n              value={values.description}\n              name='description'\n              placeholder={'This tag...'}\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting && addTagState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting && addTagState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n\n            <TextArea\n              label='BN Description'\n              value={values.bnDescription}\n              placeholder={'এই ট্যাগ...'}\n              name='bnDescription'\n              isError={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\n              }\n              errorString={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnDescription');\n              }}\n            />\n\n            <Input\n              label='Meta title'\n              value={values.metaTitle}\n              placeHolder={'...'}\n              name='metaTitle'\n              isError={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\n              }\n              errorString={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaTitle');\n              }}\n            />\n\n            <Input\n              label='BN Meta title'\n              value={values.bnMetaTitle}\n              placeHolder={'...'}\n              name='bnMetaTitle'\n              isError={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\n              }\n              errorString={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaTitle');\n              }}\n            />\n\n            <TextArea\n              label='Meta description'\n              value={values.metaDescription}\n              placeholder={'meta...'}\n              name='metaDescription'\n              isError={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\n              }\n              errorString={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaDescription');\n              }}\n            />\n\n            <TextArea\n              label='BN Meta Description'\n              value={values.bnMetaDescription}\n              placeholder={'এইয় মেট...'}\n              name='bnMetaDescription'\n              isError={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  addTagState.error['error']['bnMetaDescription'])\n              }\n              errorString={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  addTagState.error['error']['bnMetaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaDescription');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setTags}\n              tags={tags}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setBnTags}\n              tags={bnTags}\n            />\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport {\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport QuickEdit from './QuickEdit';\nimport TagQuickEdit from './TagQuickEdit';\nimport AddNewTag from './AddNewTag';\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst MyTable = ({ data, setTagList, roles }) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\n    {},\n    'deleteTag'\n  );\n\n  const history = useHistory();\n\n  const handleDeleteTag = async (id) => {\n    const deleteTagRes = await handleDeleteTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\n      openSuccessNotification('Deleted Tag');\n      const newtagList = data.filter((item) => item.id !== id);\n      setTagList(newtagList);\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/tag/${record.id}`);\n                  // setBrandDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Description'\n          dataIndex='description'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        {/* <Column\n\t\t\t\t\ttitle=\"Product\"\n\t\t\t\t\tdataIndex=\"productCount\"\n\t\t\t\t\tkey=\"id\"\n\t\t\t\t\tclassName='classnameofthecolumn'\n\t\t\t\t/> */}\n\n        {isAccess('postCatalogue', roles) && (\n          <Column\n            className='classnameofthecolumn'\n            title=''\n            key='action'\n            align='right'\n            render={(text, record: any) => (\n              <Space size='middle'>\n                <a href='##'>\n                  <Tooltip placement='top' title='Quick Edit Tag'>\n                    <span\n                      className='iconSize'\n                      onClick={() => {\n                        setvisible(true);\n                        setactiveCategoryForEdit(record);\n                      }}\n                    >\n                      <EditOutlined />\n                    </span>\n                  </Tooltip>\n                </a>\n\n                <Popconfirm\n                  onConfirm={() => handleDeleteTag(record.id)}\n                  title='Are you sure？'\n                  okText='Yes'\n                  cancelText='No'\n                >\n                  <span className='iconSize iconSize-danger'>\n                    <DeleteOutlined />\n                  </span>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        )}\n      </Table>\n\n      {activeCategoryForEdit && (\n        <TagQuickEdit\n          tagList={data}\n          setTagList={setTagList}\n          tagEditVisible={visible}\n          setTagEditVisible={setvisible}\n          tagDetailData={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  roles?: any;\n}\n\nconst TagList = ({ roles }: Props) => {\n  const [tagList, setTagList] = useState([]);\n\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'tagList');\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tags = await handleTagListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n      // @ts-ignore\n      setTagList(tags);\n    };\n    setTags();\n  }, []);\n\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleSearch = (value) => {\n    if (tagState.data.length > 0) {\n      const newTagList = tagState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setTagList(newTagList);\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar-tag'>\n            <h2 className='categoryListContainer__header-title'>Tags</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search tags..'\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n\n          {isAccess('postCatalogue', roles) && (\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          )}\n        </div>\n        <div className='categoryListContainer__categoryList'>\n          {tagState.done && tagList.length > 0 && (\n            <MyTable roles={roles} setTagList={setTagList} data={tagList} />\n          )}\n          {tagState.isLoading && <DataTableSkeleton />}\n\n          {tagState.done && !(tagList.length > 0) && (\n            <div\n              style={{\n                marginTop: '200px',\n              }}\n            >\n              <Empty\n                description='No Tags found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewTag\n        tagList={tagList}\n        setTagList={setTagList}\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(TagList);\n","import React, { useState, useEffect } from 'react';\nimport { Modal, notification } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { useHandleFetch } from '../../hooks';\nimport {\n  CheckCircleOutlined,\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport MetaTags from '../../pages/category/MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  tagEditVisible?: any;\n  setTagEditVisible?: any;\n  tagDetailData?: any;\n  setTagDetailData?: any;\n}\n\nconst QuickEdit = ({\n  tagEditVisible,\n  setTagEditVisible,\n  tagDetailData,\n  setTagDetailData,\n}: Props) => {\n  const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch(\n    {},\n    'updateTag'\n  );\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const updateTagRes = await handleUpdateCategoryFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name,\n        description: values.description,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags.join(','),\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags.join(','),\n          name: values.bnName.trim(),\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updateTagRes && updateTagRes.status === 'ok') {\n      setTagDetailData({\n        id: values.id,\n        key: values.id,\n        name: values.name,\n        description: values.description,\n      });\n      console.log('categoryupdateTagRes', updateTagRes);\n      openSuccessNotification();\n      setTagEditVisible(false);\n\n      // const positionInTag = () => {\n      //     return tagList.map(item => item.id).indexOf(category.id);\n      // }\n\n      // const index = positionInTag();\n\n      // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\n      // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\n      // setTagList(updateTagList);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!updateTagState['isLoading']) {\n      const error = updateTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [updateTagState]);\n\n  const handleCancel = (e: any) => {\n    setTagEditVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  // useEffect(()=>{\n\n  //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\n  //         const metaTags = tagDetailData.metaTags.split(',');\n\n  //         console.log('localMetaTags',metaTags);\n\n  //         const bnMetaTags = tagDetailData.bn['metaTags'].split(',');\n\n  //         setTags(metaTags)\n  //         setBnTags(bnMetaTags)\n  //     }\n\n  // },[]);\n\n  console.log('tagDetailData', tagDetailData);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{\n        ...initialValues,\n        ...tagDetailData,\n        ...(tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && {\n            bnMetaTitle:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].metaTitle &&\n              tagDetailData['bn'].metaTitle,\n            bnMetaDescription:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].metaDescription &&\n              tagDetailData['bn'].metaDescription,\n            bnName:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].name &&\n              tagDetailData['bn'].name,\n            bnDescription:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].description &&\n              tagDetailData['bn'].description,\n          }),\n      }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Tag Edit'\n            visible={tagEditVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n            }}\n          >\n            <Input\n              label='Name *'\n              value={values.name}\n              name='name'\n              placeHolder={'new,fresh'}\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='BN Name'\n              value={values.bnName}\n              placeHolder={'নতুন,ফ্রেশ'}\n              name='bnName'\n              isError={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && updateTagState.error['error']['bnName'])\n              }\n              errorString={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && updateTagState.error['error']['bnName'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnName');\n              }}\n            />\n\n            <TextArea\n              label='Description'\n              value={values.description}\n              name='description'\n              placeholder={'This tag...'}\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting && updateTagState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting && updateTagState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n\n            <TextArea\n              label='BN Description'\n              value={values.bnDescription}\n              placeholder={'এই ট্যাগ...'}\n              name='bnDescription'\n              isError={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['bnDescription'])\n              }\n              errorString={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['bnDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnDescription');\n              }}\n            />\n\n            <Input\n              label='Meta title'\n              value={values.metaTitle}\n              placeHolder={'...'}\n              name='metaTitle'\n              isError={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && updateTagState.error['error']['metaTitle'])\n              }\n              errorString={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && updateTagState.error['error']['metaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaTitle');\n              }}\n            />\n\n            <Input\n              label='BN Meta title'\n              value={values.bnMetaTitle}\n              placeHolder={'...'}\n              name='bnMetaTitle'\n              isError={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && updateTagState.error['error']['bnMetaTitle'])\n              }\n              errorString={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && updateTagState.error['error']['bnMetaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaTitle');\n              }}\n            />\n\n            <TextArea\n              label='Meta description'\n              value={values.metaDescription}\n              placeholder={'meta...'}\n              name='metaDescription'\n              isError={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['metaDescription'])\n              }\n              errorString={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['metaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaDescription');\n              }}\n            />\n\n            <TextArea\n              label='BN Meta Description'\n              value={values.bnMetaDescription}\n              placeholder={'এইয় মেট...'}\n              name='bnMetaDescription'\n              isError={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['bnMetaDescription'])\n              }\n              errorString={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  updateTagState.error['error']['bnMetaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaDescription');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Meta Tags (grocery,fashion)</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setTags}\n              tags={tags}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>BN Meta Tags (মুদিখানা,ফ্যাশন)</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setBnTags}\n              tags={bnTags}\n            />\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default QuickEdit;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import lib\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\n\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport TagEdit from \"./TagEdit\";\n\n\n// import state\nimport { isAccess } from \"../../utils\";\nimport { connect } from \"react-redux\";\n\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\ninterface Props {\n    roles?: any;\n}\n\nconst NewBrandDetail = ({roles}: Props) => {\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'tagDetail');\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\n    const [tagEditVisible, setTagEditVisible] = useState(false);\n    const [tagDetailData,setTagDetailData] = useState({}); \n\n\n    const params = useParams();\n    const history = useHistory();\n    const tagId = params['id'];\n\n    useEffect(() => {\n\n        const getBrandDetail = async () => {\n            const tagDetailRes =  await handleTagDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: tagId\n                    }\n                }\n            }); \n\n            // @ts-ignore\n            if(tagDetailRes){\n                console.log('tagDetailRes',tagDetailRes);\n                // @ts-ignore\n                setTagDetailData(tagDetailRes);\n            }\n        };\n\n        getBrandDetail();\n\n    }, [tagId]);\n\n    useEffect(() => {\n        const getTagProducts = async () => {\n            await handleTagProductsFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: tagId\n                    }\n                }\n            })\n        };\n\n        getTagProducts();\n\n    }, [tagId]);\n\n\n\n\n    console.log('tagProductsState', tagProductsState);\n\n    console.log('brandParams', params);\n\n\n    return (\n        <div className='brandDetailContainer'>\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Tag Detail\n                </h3>\n\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\n                    <>\n                        <TagEdit\n                            tagEditVisible={tagEditVisible}\n                            setTagEditVisible={setTagEditVisible}\n                            tagDetailData={tagDetailData}\n                            setTagDetailData={setTagDetailData}\n                        />\n\n                        \n\t\t\t\t\t{isAccess('postCatalogue',roles) && (\n\t\t\t\t\t  <Button\n                      onClick={() => setTagEditVisible(true)}\n                      type='link'\n                      icon={<EditOutlined />}\n                  >\n                      Edit\n                </Button>\n                 )}\n                    </>\n                )}\n\n                \n            </div>\n            <Skeleton\n                paragraph={{ rows: 2 }}\n                loading={tagDetailState.isLoading}>\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\n                    <Empty description='No Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                )}\n\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\n                    <div className='brandDetailContainer__header'>\n\n                        <div className='brandDetailContainer__header-info'>\n                            <h2>\n                                {tagDetailData['name']}\n                            </h2>\n                            <h3>\n                                {tagDetailData['description']}\n                            </h3>\n                            {tagDetailData['url'] && (\n                                <h3>\n                                    URL:\n                                    <span>\n                                        {tagDetailData['url']}\n                                    </span>\n\n                                </h3>\n                            )}\n                        </div>\n                    </div>\n                )}\n\n            </Skeleton>\n\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Products\n                </h3>\n            </div>\n            <div className='brandDetailContainer__body'>\n                {tagProductsState.isLoading && <DataTableSkeleton />}\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No Products exists for this tag' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\n                    <>\n                        <Table\n                            style={{\n                                paddingTop: '10px',\n                                borderRadius: '5px !important',\n                                overflow: 'hidden',\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\n                            }}\n                            // expandable={{\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\n                            //   }}\n                            // bordered={true}\n                            size='small'\n                            // pagination={false}\n                            dataSource={tagProductsState.data}\n                            tableLayout={'auto'}\n                            onHeaderRow={column => {\n                                return {\n                                    style: {\n                                        color: 'red !important'\n                                    }\n\n                                };\n                            }}\n                        >\n                            <Column\n                                title=\"\"\n                                dataIndex=\"cover\"\n                                key=\"id\"\n                                width={'80px'}\n\n                                className='classnameofthecolumn'\n\n                                render={(cover, record: any) => (\n                                    <>\n                                        <img\n                                            onClick={() => {\n                                                history.push(`/admin/product/${record.id}`)\n                                            }}\n                                            src={cover} alt='cover img' style={{\n                                                height: '40px',\n                                                width: '40px',\n                                                objectFit: \"contain\",\n                                                borderRadius: '3px',\n                                                cursor: 'pointer'\n                                            }} />\n\n\n\n\n                                    </>\n                                )}\n                            />\n\n                            <Column\n                                title=\"Name\"\n                                dataIndex=\"name\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n                                render={(text, record: any) => (\n                                    <>\n                                        <h4\n                                            onClick={() => {\n                                                history.push(`/admin/product/${record.id}`)\n                                            }}\n                                            style={{\n                                                fontWeight: 400,\n                                                color: '#555',\n                                                cursor: 'pointer'\n\n                                            }}>\n                                            {text}\n                                        </h4>\n\n\n                                    </>\n                                )}\n\n                            />\n\n                            <Column\n                                title=\"Offer Price\"\n                                dataIndex=\"offerPrice\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n\n                            <Column\n                                title=\"Price\"\n                                dataIndex=\"price\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n\n                            <Column\n                                title=\"Available\"\n                                dataIndex=\"available\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n\n                            <Column\n                                title=\"Minimum\"\n                                dataIndex=\"minimum\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n                        </Table>\n                    </>\n                )}\n\n            </div>\n        </div>\n    )\n}; \n\nconst mapStateToProps = state => ({\n    roles: state.globalState,\n  })\n  \n  // @ts-ignore\n  export default connect(mapStateToProps, null)(NewBrandDetail);\n  \n  \n  \n\n","import React, { useEffect, useState } from 'react';\nimport { useHandleFetch } from '../../hooks';\nimport { Select, Skeleton } from 'antd';\nimport Empty from \"../../components/Empty\";\n\n\ninterface Props {\n    setProductIds?: any;\n    productIds?: any;\n}\n\n\nconst Tags = ({\n    setProductIds,\n    productIds\n}: Props) => {\n    const [options, setoptions] = useState([]);\n    const [selectedOpions, setselectedOptions] = useState([]);\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\n\n    useEffect(() => {\n        const setTags = async () => {\n            const tagListRes = await handleTagListFetch({\n                urlOptions: {\n                    params: {\n                        isSubCategory: false\n                    }\n                }\n            });\n\n            // @ts-ignore\n            if (tagListRes && tagListRes.length > 0) {\n                // @ts-ignore\n                const tagOptions = tagListRes.map((tag) => {\n                    return tag.name\n                });\n                setoptions(tagOptions);\n            }\n\n        };\n\n        setTags();\n    }, []);\n\n\n\n    useEffect(() => {\n        if(productIds && productIds.length > 0){\n            console.log('shippingRunning')\n            const selecttedOptions = productIds.map(item => item.name); \n            setselectedOptions(selecttedOptions)\n        }\n    },[productIds]); \n\n    console.log('OrderProudctItemsProductIds',productIds); \n\n\n\n\n    const handleChange = (selectItems) => {\n        setselectedOptions(selectItems);\n\n        console.log('selectedProducts', selectItems);\n\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\n            const selectedCategoryIds = selectItems.map((item) => {\n                const selectedcategory = tagState.data.find(\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\n                );\n                if (selectedcategory) {\n                    return selectedcategory;\n                }\n            });\n            console.log('selectedCategoryIds', selectedCategoryIds);\n            setProductIds(selectedCategoryIds);\n        }\n        else {\n            setProductIds([])\n        }\n\n\n    }\n\n\n    // console.log('selectedOpions', selectedOpions);\n\n\n    return (\n        <>\n\n            <Skeleton loading={tagState.isLoading}>\n                {tagState.done && tagState.data.length > 0 && <Select\n                    mode=\"multiple\"\n                    placeholder=\"search products\"\n                    value={selectedOpions}\n                    onChange={handleChange}\n                    style={{ width: '100%' }}\n                >\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\n                        <Select.Option key={item} value={item}>\n                            {item}\n                        </Select.Option>\n                    ))}\n                </Select>}\n                {tagState.done && tagState.data && !(tagState.data.length > 0) && (\n                    <div style={{\n                        marginLeft: '32px'\n                    }}>\n                        <Empty title='No Product Found' height={150} />\n                    </div>\n                )}\n\n            </Skeleton>\n\n\n        </>\n    )\n}\n\nexport default Tags\n","import React from 'react'\n\n\n// import components\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\nimport Empty from \"../../components/Empty\";\n\nimport {\n    ShopOutlined\n} from '@ant-design/icons';\n\n\ninterface Props {\n    productList?: any;\n    setProductList?: any;\n}\n\nconst AddNewOrderSummary = ({\n    setProductList,\n    productList\n}: Props) => {\n    return (\n        <div\n            style={{\n                // @ts-ignore\n                flexDirection: 'flex'\n            }}\n            className='addOrderContainer__container-orderSummary'>\n            <div className='addOrderContainer__container-productItemContainer'>\n                {productList && productList.length > 0 && productList.map(item => {\n                    return <AddNewOrderProductItem\n                        setProductList={setProductList}\n                        productList={productList}\n                        productId={item._id}\n                        quantity={item.quantity}\n                        item={item}\n                        variation={item.variation}\n                    />;\n                })}\n\n                {!(productList.length > 0) && (\n                    <div style={{\n                        marginLeft: '32px'\n                    }}>\n                        <Empty title='No Product Added' height={150} />\n                    </div>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default AddNewOrderSummary\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n\n// import third party ui lib\nimport { notification, Modal, Tooltip, DatePicker } from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport OrderedProductsSelectProducts from './OrderedProductsSelectProducts';\nimport OrderedProductsSelectedProductItems from './OrderedProductsSelectedProductItems';\nimport FreeSelectProducts from './FreeSelectProducts';\nimport FreeSelectedProductItems from './FreeSelectedProductItems';\n\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Coupon Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  code: '',\n  minimumOrder: null,\n  amount: '',\n  amountType: '',\n  orderedProducts: [],\n  freeDelivery: true,\n  freeProducts: [],\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  category?: any;\n  setTagDetailData?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  category,\n  setTagDetailData,\n}: Props) => {\n  const [addCouponState, handleAddCouponStateFetch] = useHandleFetch(\n    {},\n    'updateCoupon'\n  );\n  const [couponDetailState, handleCouponDetailFetch] = useHandleFetch(\n    {},\n    'couponDetail'\n  );\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [productIds, setProductIds] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [freeProductIds, setFreeProductIds] = useState([]);\n  const [freeProductList, setFreeProductList] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  useEffect(() => {\n    const getProductDetail = async () => {\n      await handleCouponDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: category.id,\n          },\n        },\n      });\n    };\n\n    getProductDetail();\n  }, [category]);\n\n  useEffect(() => {\n    if (\n      couponDetailState.data &&\n      Object.keys(couponDetailState.data).length > 0\n    ) {\n      const images = couponDetailState.data.image;\n      if (images && images.length > 0) {\n        setmyImages(images);\n      }\n\n      if (couponDetailState.data.cover && couponDetailState.data.cover['id']) {\n        // @ts-ignore\n        setmyImages([couponDetailState.data.cover]);\n        setCoverImageId(couponDetailState.data.cover['id']);\n      }\n    }\n  }, [couponDetailState.data]);\n\n  useEffect(() => {\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n      }\n    }\n  }, [myImages]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    const orderedProducts =\n      productList.length > 0\n        ? productList.map((product) => {\n            return {\n              _id: product._id,\n              variation: product.variation,\n              quantity: product.quantity,\n            };\n          })\n        : [];\n\n    // const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\n    //     return {\n    //         _id: product._id,\n    //         variation: product.variation,\n    //         quantity: product.quantity,\n    //     }\n    // }) : [];\n\n    const addTagRes = await handleAddCouponStateFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        code: values.code,\n        minimumOrder: values.minimumOrder,\n        amount: values.amount,\n        amountType: values.amountType,\n        // freeDelivery: false,\n        orderedProducts: orderedProducts,\n        // freeProducts: freeProducts,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        startDate,\n        endDate,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n      setAddNewCategoryVisible(false);\n\n      setTagDetailData({\n        ...category,\n        // @ts-ignore\n        ...addTagRes,\n      });\n\n      //   actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    if (category && Object.keys(category).length > 0) {\n      const images = category.image;\n      if (images && images.length > 0) {\n        setmyImages(images);\n      }\n\n      if (category.cover && category.cover['id']) {\n        // @ts-ignore\n        setmyImages([category.cover]);\n        setCoverImageId(category.cover['id']);\n      }\n    }\n  }, [category]);\n\n  useEffect(() => {\n    if (!addCouponState['isLoading']) {\n      const error = addCouponState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addCouponState]);\n\n  useEffect(() => {\n    if (\n      couponDetailState.done &&\n      couponDetailState['data'] &&\n      Object.keys(couponDetailState['data']).length > 0 && [\n        'orderedProducts',\n      ] &&\n      couponDetailState['data']['orderedProducts'].length > 0\n    ) {\n      const productIds = couponDetailState['data']['orderedProducts'].map(\n        (item) => item\n      );\n      setProductIds(productIds);\n      const productList = couponDetailState['data']['orderedProducts'].map(\n        (item) => {\n          return {\n            ...item,\n            _id: item._id,\n            variation: item.variation,\n            quantity: item.quantity,\n          };\n        }\n      );\n      setProductList(productList);\n    }\n  }, [couponDetailState]);\n\n  console.log('couponDetialQuickEdit', couponDetailState);\n\n  useEffect(() => {\n    if (productIds.length > 0) {\n      if (productIds.length > productList.length) {\n        const variation =\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setProductList([\n          ...productList,\n          {\n            ...productIds[productIds.length - 1],\n            _id: productIds[productIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (productIds.length < productList.length) {\n        console.log('productIds', productIds);\n        console.log('productList', productList);\n\n        const newProductList = productList.filter((item) => {\n          let isTrue = false;\n          productIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setProductList(newProductList);\n      }\n    } else {\n      setProductList([]);\n    }\n    // console.log('productIds', productIds)\n  }, [productIds]);\n\n  useEffect(() => {\n    if (freeProductIds.length > 0) {\n      if (freeProductIds.length > freeProductList.length) {\n        const variation =\n          freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 &&\n          freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setFreeProductList([\n          ...freeProductList,\n          {\n            ...freeProductIds[freeProductIds.length - 1],\n            _id: freeProductIds[freeProductIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (freeProductIds.length < freeProductList.length) {\n        console.log('freeProductIds', freeProductIds);\n        console.log('productList', productList);\n\n        const newProductList = freeProductList.filter((item) => {\n          let isTrue = false;\n          freeProductIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setFreeProductList(newProductList);\n      }\n    } else {\n      setFreeProductList([]);\n    }\n    // console.log('freeProductIds', freeProductIds)\n  }, [freeProductIds]);\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  useEffect(() => {\n    if (category && Object.keys(category).length > 0) {\n      console.log('hsit');\n\n      let startDate = category.startDate;\n      let endDate = category.endDate;\n\n      startDate = startDate && new Date(moment(startDate).format());\n      endDate = endDate && new Date(moment(endDate).format());\n\n      console.log('CategorydateStart', startDate);\n      console.log('CategorydateStart', endDate);\n\n      // @ts-ignore\n      setStartDate(startDate);\n      // @ts-ignore\n      setEndDate(endDate);\n    }\n  }, [category]);\n\n  const handleStartEndDateRangeDate = (e) => {\n    const startDate = e[0] && new Date(moment(e[0]).format());\n    const endDate = e[1] && new Date(moment(e[1]).format());\n    // @ts-ignore\n    setStartDate(startDate);\n    // @ts-ignore\n    setEndDate(endDate);\n  };\n\n  const dateFormat = 'YYYY-MM-DD';\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...category }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            width={'45vw'}\n            style={{\n              top: '40px',\n            }}\n            title='Edit Coupon'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Name'\n                  value={values.name}\n                  name='name'\n                  isError={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && addCouponState.error['error']['name'])\n                  }\n                  errorString={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && addCouponState.error['error']['name'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('name');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Code'\n                  value={values.code}\n                  name='code'\n                  isError={\n                    (touched.code && errors.code) ||\n                    (!isSubmitting && addCouponState.error['error']['code'])\n                  }\n                  errorString={\n                    (touched.code && errors.code) ||\n                    (!isSubmitting && addCouponState.error['error']['code'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('code');\n                  }}\n                />\n              </div>\n            </div>\n\n            <Input\n              label='Minimum Order'\n              value={values.minimumOrder}\n              name='minimumOrder'\n              isError={\n                (touched.minimumOrder && errors.minimumOrder) ||\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\n              }\n              errorString={\n                (touched.minimumOrder && errors.minimumOrder) ||\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('minimumOrder');\n              }}\n            />\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Discount Amount'\n                  value={values.amount}\n                  name='amount'\n                  isError={\n                    (touched.amount && errors.amount) ||\n                    (!isSubmitting && addCouponState.error['error']['amount'])\n                  }\n                  errorString={\n                    (touched.amount && errors.amount) ||\n                    (!isSubmitting && addCouponState.error['error']['amount'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('amount');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Discount Amount Type'\n                  value={values.amountType}\n                  name='amountType'\n                  isError={\n                    (touched.amountType && errors.amountType) ||\n                    (!isSubmitting &&\n                      addCouponState.error['error']['amountType'])\n                  }\n                  errorString={\n                    (touched.amountType && errors.amountType) ||\n                    (!isSubmitting &&\n                      addCouponState.error['error']['amountType'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('amountType');\n                  }}\n                />\n              </div>\n            </div>\n\n            {true && (\n              <div\n                style={{\n                  marginBottom: '15px',\n                }}\n              >\n                <h3 className='inputFieldLabel'>Start and end date</h3>\n                <RangePicker\n                  style={{\n                    borderRadius: '8px',\n                    borderColor: '#eee',\n                    width: '100%',\n                  }}\n                  value={[\n                    moment(startDate, dateFormat).isValid()\n                      ? moment(startDate, dateFormat)\n                      : undefined,\n                    moment(endDate, dateFormat).isValid()\n                      ? moment(endDate, dateFormat)\n                      : undefined,\n                  ]}\n                  showTime={true}\n                  onChange={handleStartEndDateRangeDate}\n                  picker={'date'}\n                />\n              </div>\n            )}\n\n            <div\n              className='addproductSection-left-header'\n              style={{\n                marginBottom: '-5px',\n              }}\n            >\n              <h3 className='inputFieldLabel'>Cover</h3>\n            </div>\n\n            <div className='aboutToUploadImagesContainer'>\n              {myImages &&\n                // @ts-ignore\n                myImages.length > 0 &&\n                myImages.map((image, index) => {\n                  return (\n                    <div className='aboutToUploadImagesContainer__item'>\n                      <div\n                        className='aboutToUploadImagesContainer__item-imgContainer'\n                        onClick={() => {\n                          setvisibleMedia(true);\n                        }}\n                      >\n                        <img src={image.cover} alt={image.alt} />\n                      </div>\n\n                      <span\n                        onClick={() => handleImagesDelete(image.id)}\n                        className='aboutToUploadImagesContainer__item-remove'\n                      >\n                        <CloseOutlined />\n                      </span>\n                      {/* \n                      {coverImageId === image.id ? (\n                        <span className='aboutToUploadImagesContainer__item-cover'>\n                          <CheckOutlined />\n                        </span>\n                      ) : (\n                        !coverImageId &&\n                        index === 0 && (\n                          <span className='aboutToUploadImagesContainer__item-cover'>\n                            <CheckOutlined />\n                          </span>\n                        )\n                      )} */}\n                    </div>\n                  );\n                })}\n\n              {!myImages ||\n              // @ts-ignore\n              (myImages && !(myImages && myImages.length > 0)) ? (\n                <>\n                  <Tooltip title={'Attach images'}>\n                    <div\n                      onClick={() => {\n                        setvisibleMedia(true);\n                      }}\n                      className='aboutToUploadImagesContainer__uploadItem'\n                    >\n                      <FileImageFilled />\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                        <PlusOutlined />\n                      </span>\n                    </div>\n                  </Tooltip>\n                </>\n              ) : (\n                ''\n              )}\n            </div>\n\n            <h3 className='inputFieldLabel'>Ordered Products</h3>\n\n            <OrderedProductsSelectProducts\n              setProductIds={setProductIds}\n              productIds={productIds}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>Selected Ordered Products</h3>\n\n            <OrderedProductsSelectedProductItems\n              productList={productList}\n              setProductList={setProductList}\n            />\n\n            {/* <h3 className='inputFieldLabel'>\n                                Free Products\n                                </h3>\n\n                            <OrderedProductsSelectProducts\n                                setProductIds={setFreeProductIds}\n                                productIds={freeProductIds}\n                            />\n\n                            <div style={{\n                                marginTop: \"15px\"\n                            }}></div>\n\n                            <h3 className='inputFieldLabel'>\n                                Selected Free Products\n                                </h3>\n\n                            <OrderedProductsSelectedProductItems\n                                productList={freeProductList}\n                                setProductList={setFreeProductList}\n                            /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={false}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import lib\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\n\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport CouponEdit from \"./CouponEdit\";\nimport CouponProducts from \"./CouponProducts\";\nimport  moment from 'moment'\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\ninterface Props {\n    productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'couponDetail');\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\n    const [tagEditVisible, setTagEditVisible] = useState(false);\n    const [tagDetailData,setTagDetailData] = useState({}); \n\n    const params = useParams();\n    const history = useHistory();\n    const tagId = params['id'];\n\n    useEffect(() => {\n\n        const getBrandDetail = async () => {\n            const res = await handleTagDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: tagId\n                    }\n                }\n            });\n\n            // @ts-ignore\n            if(res){\n                // @ts-ignore\n                setTagDetailData(res)\n            }\n        };\n\n        getBrandDetail();\n\n    }, [tagId]);\n\n\n\n\n\n\n    console.log('coupondetail', tagDetailState);\n\n    console.log('brandParams', params);\n\n\n    return (\n        <div className='brandDetailContainer'>\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Coupon Detail\n                </h3>\n\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\n                    <>\n                        <CouponEdit\n                            addNewCategoryVisible={tagEditVisible}\n                            setAddNewCategoryVisible={setTagEditVisible}\n                            category={tagDetailData}\n                            setTagDetailData={setTagDetailData}\n                        />\n                        <Button\n                            onClick={() => setTagEditVisible(true)}\n                            type='link'\n                            icon={<EditOutlined />}\n                        >\n                            Edit\n                      </Button>\n                    </>\n                )}\n            </div>\n            <Skeleton\n                paragraph={{ rows: 2 }}\n                loading={tagDetailState.isLoading}>\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\n                    <Empty description='No Coupon found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                )}\n\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\n                    <div className='brandDetailContainer__header'>\n                        <div className='brandDetailContainer__header-coverContainer'>\n                            <img src={tagDetailData['cover'] && tagDetailData['cover']['cover']} alt=\"\" />\n                        </div>\n                        <div className='brandDetailContainer__header-info'>\n                            <h2>\n                                {tagDetailData['name']}\n                            </h2>\n                            <h3>\n                                {tagDetailData['description']}\n                            </h3>\n                            {tagDetailData['code'] && (\n                                <h3>\n                                    CODE:\n                                    <span>\n                                        {tagDetailData['code']}\n                                    </span>\n\n                                </h3>\n                            )}\n                          \n\n                            {tagDetailData['amount'] && (\n                                <h3>\n                                    AMOUT:\n                                    <span>\n                                        {tagDetailData['amount']}\n                                    </span>\n\n                                </h3>\n                            )}\n\n\n                            {tagDetailData['startDate'] && (\n                                <h3>\n                                    START DATE:\n                                    <span>\n                                    {moment(tagDetailData['startDate']).format('MMMM Do YYYY, h:mm:ss a')}\n                                    </span>\n\n                                </h3>\n                            )}\n\n\n\n                            {tagDetailData['endDate'] && (\n                                <h3>\n                                    END DATE:\n                                    <span>\n                                    {moment(tagDetailData['endDate']).format('MMMM Do YYYY, h:mm:ss a')}\n                                    </span>\n\n                                </h3>\n                            )}\n                        </div>\n                    </div>\n                )}\n\n            </Skeleton>\n\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Ordered Products\n                </h3>\n            </div>\n            <div className='brandDetailContainer__body'>\n                {tagProductsState.isLoading && <DataTableSkeleton />}\n                {tagDetailState.done && tagDetailData && tagDetailData['orderedProducts'] && !(tagDetailData['orderedProducts'].length > 0) && (\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n\n                )}\n\n                {tagDetailState.done && tagDetailData && Object.keys(tagDetailData).length > 0 && (\n                    <>\n                        {tagDetailData['orderedProducts'] && tagDetailData['orderedProducts'].length > 0 &&\n                            tagDetailData['orderedProducts'].map(product => {\n                                return (\n                                    <CouponProducts productId={product['_id']} />\n                                )\n                            })}\n                    </>\n                )}\n            </div>\n\n            {/* {tagDetailState.done && tagDetailData && Object.keys(tagDetailData).length > 0 && tagDetailData['freeProducts'] && (\n                <div className='brandDetailContainer__heading'>\n                    <h3>\n                        Free Products\n                       </h3>\n                </div>\n            )\n            }\n\n            <div className='brandDetailContainer__body'>\n                {tagProductsState.isLoading && <DataTableSkeleton />}\n                {tagDetailState.done && tagDetailData && tagDetailData['freeProducts'] && !(tagDetailData['freeProducts'].length > 0) && (\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No Products exists for this coupon' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {tagDetailState.done && tagDetailData && Object.keys(tagDetailData).length > 0 && (\n                    <>\n                        {tagDetailData['freeProducts'] && tagDetailData['freeProducts'].length > 0 &&\n                            tagDetailData['freeProducts'].map(product => {\n                                return (\n                                    <CouponProducts\n                                        quantity={product.quantity}\n                                        productId={product['_id']} />\n                                )\n                            })}\n                    </>\n                )}\n\n            </div> */}\n        </div>\n    )\n}\n\nexport default NewBrandDetail\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n\n// import third party ui lib\nimport { notification, Modal, Tooltip, DatePicker } from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport OrderedProductsSelectProducts from './OrderedProductsSelectProducts';\nimport OrderedProductsSelectedProductItems from './OrderedProductsSelectedProductItems';\nimport FreeSelectProducts from './FreeSelectProducts';\nimport FreeSelectedProductItems from './FreeSelectedProductItems';\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Coupon Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  code: '',\n  minimumOrder: null,\n  amount: '',\n  amountType: '',\n  orderedProducts: [],\n  freeDelivery: true,\n  freeProducts: [],\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagList?: any;\n  setTagList?: any;\n  category?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  tagList,\n  setTagList,\n  category,\n}: Props) => {\n  const [addCouponState, handleAddCouponStateFetch] = useHandleFetch(\n    {},\n    'updateCoupon'\n  );\n  const [couponDetailState, handleCouponDetailFetch] = useHandleFetch(\n    {},\n    'couponDetail'\n  );\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [productIds, setProductIds] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [freeProductIds, setFreeProductIds] = useState([]);\n  const [freeProductList, setFreeProductList] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  useEffect(() => {\n    const getProductDetail = async () => {\n      await handleCouponDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: category.id,\n          },\n        },\n      });\n    };\n\n    getProductDetail();\n  }, [category]);\n\n  useEffect(() => {\n    if (\n      couponDetailState.data &&\n      Object.keys(couponDetailState.data).length > 0\n    ) {\n      const images = couponDetailState.data.image;\n      if (images && images.length > 0) {\n        setmyImages(images);\n      }\n\n      if (couponDetailState.data.cover && couponDetailState.data.cover['id']) {\n        // @ts-ignore\n        setmyImages([couponDetailState.data.cover]);\n        setCoverImageId(couponDetailState.data.cover['id']);\n      }\n    }\n  }, [couponDetailState.data]);\n\n  useEffect(() => {\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n      }\n    }\n  }, [myImages]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    const orderedProducts =\n      productList.length > 0\n        ? productList.map((product) => {\n            return {\n              _id: product._id,\n              variation: product.variation,\n              quantity: product.quantity,\n            };\n          })\n        : [];\n\n    // const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\n    //     return {\n    //         _id: product._id,\n    //         variation: product.variation,\n    //         quantity: product.quantity,\n    //     }\n    // }) : [];\n\n    const addTagRes = await handleAddCouponStateFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        code: values.code,\n        minimumOrder: values.minimumOrder,\n        amount: values.amount,\n        amountType: values.amountType,\n        // freeDelivery: false,\n        orderedProducts: orderedProducts,\n        // freeProducts: freeProducts,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        startDate,\n        endDate,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n      setAddNewCategoryVisible(false);\n\n      const positionInTag = () => {\n        return tagList.map((item) => item.id).indexOf(values.id);\n      };\n\n      const index = positionInTag();\n\n      function getCover(id) {\n        if (!id || !myImages || !myImages[0]) {\n          return '';\n        } else {\n          if (myImages && myImages.length > 0) {\n            const item = myImages.find((item) => item.id === id);\n            if (item) {\n              return item.cover;\n            }\n          }\n        }\n      }\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, tagList[index], {\n        ...addTagRes,\n        cover: getCover(coverImageId),\n      });\n      const updateTagList = [\n        ...tagList.slice(0, index),\n        updatedItem,\n        ...tagList.slice(index + 1),\n      ];\n      setTagList(updateTagList);\n\n      setProductList([]);\n      setProductIds([]);\n      setStartDate('');\n      setEndDate('');\n      setmyImages(false);\n      setCoverImageId('');\n      setvisibleMedia(false);\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  console.log('4444444', myImages);\n  console.log('4444444', coverImageId);\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n\n    setProductList([]);\n    setProductIds([]);\n    setStartDate('');\n    setEndDate('');\n    setmyImages(false);\n    setCoverImageId('');\n    setvisibleMedia(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    if (category && Object.keys(category).length > 0) {\n      const images = category.image;\n      if (images && images.length > 0) {\n        setmyImages(images);\n      }\n\n      if (category.cover && category.cover['id']) {\n        // @ts-ignore\n        setmyImages([category.cover]);\n        setCoverImageId(category.cover['id']);\n      }\n    }\n  }, [category]);\n\n  useEffect(() => {\n    if (category && Object.keys(category).length > 0) {\n      console.log('hsit');\n\n      let startDate = category.startDate;\n      let endDate = category.endDate;\n\n      startDate = startDate && new Date(moment(startDate).format());\n      endDate = endDate && new Date(moment(endDate).format());\n\n      console.log('CategorydateStart', startDate);\n      console.log('CategorydateStart', endDate);\n\n      // @ts-ignore\n      setStartDate(startDate);\n      // @ts-ignore\n      setEndDate(endDate);\n    }\n  }, [category]);\n\n  const handleStartEndDateRangeDate = (e) => {\n    const startDate = e[0] && new Date(moment(e[0]).format());\n    const endDate = e[1] && new Date(moment(e[1]).format());\n    // @ts-ignore\n    setStartDate(startDate);\n    // @ts-ignore\n    setEndDate(endDate);\n  };\n\n  useEffect(() => {\n    if (!addCouponState['isLoading']) {\n      const error = addCouponState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addCouponState]);\n\n  useEffect(() => {\n    if (\n      couponDetailState.done &&\n      couponDetailState['data'] &&\n      Object.keys(couponDetailState['data']).length > 0 && [\n        'orderedProducts',\n      ] &&\n      couponDetailState['data']['orderedProducts'].length > 0\n    ) {\n      const productIds = couponDetailState['data']['orderedProducts'].map(\n        (item) => item\n      );\n      setProductIds(productIds);\n      const productList = couponDetailState['data']['orderedProducts'].map(\n        (item) => {\n          return {\n            ...item,\n            _id: item._id,\n            variation: item.variation,\n            quantity: item.quantity,\n          };\n        }\n      );\n      setProductList(productList);\n    }\n  }, [couponDetailState]);\n\n  console.log('couponDetialQuickEdit', couponDetailState);\n\n  useEffect(() => {\n    if (productIds.length > 0) {\n      if (productIds.length > productList.length) {\n        const variation =\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setProductList([\n          ...productList,\n          {\n            ...productIds[productIds.length - 1],\n            _id: productIds[productIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (productIds.length < productList.length) {\n        console.log('productIds', productIds);\n        console.log('productList', productList);\n\n        const newProductList = productList.filter((item) => {\n          let isTrue = false;\n          productIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setProductList(newProductList);\n      }\n    } else {\n      setProductList([]);\n    }\n    // console.log('productIds', productIds)\n  }, [productIds]);\n\n  console.log('startDate--', startDate);\n  console.log('endDate--', endDate);\n\n  useEffect(() => {\n    if (freeProductIds.length > 0) {\n      if (freeProductIds.length > freeProductList.length) {\n        const variation =\n          freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 &&\n          freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setFreeProductList([\n          ...freeProductList,\n          {\n            ...freeProductIds[freeProductIds.length - 1],\n            _id: freeProductIds[freeProductIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (freeProductIds.length < freeProductList.length) {\n        console.log('freeProductIds', freeProductIds);\n        console.log('productList', productList);\n\n        const newProductList = freeProductList.filter((item) => {\n          let isTrue = false;\n          freeProductIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setFreeProductList(newProductList);\n      }\n    } else {\n      setFreeProductList([]);\n    }\n    // console.log('freeProductIds', freeProductIds)\n  }, [freeProductIds]);\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const dateFormat = 'YYYY-MM-DD';\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...category }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            width={'45vw'}\n            style={{\n              top: '40px',\n            }}\n            title='Edit Coupon'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            // destroyOnClose={true}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              // disabled: getisSubmitButtonDisabled(values, isValid)\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Name'\n                  value={values.name}\n                  name='name'\n                  isError={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && addCouponState.error['error']['name'])\n                  }\n                  errorString={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && addCouponState.error['error']['name'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('name');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Code'\n                  value={values.code}\n                  name='code'\n                  isError={\n                    (touched.code && errors.code) ||\n                    (!isSubmitting && addCouponState.error['error']['code'])\n                  }\n                  errorString={\n                    (touched.code && errors.code) ||\n                    (!isSubmitting && addCouponState.error['error']['code'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('code');\n                  }}\n                />\n              </div>\n            </div>\n\n            <Input\n              label='Minimum Order'\n              value={values.minimumOrder}\n              name='minimumOrder'\n              isError={\n                (touched.minimumOrder && errors.minimumOrder) ||\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\n              }\n              errorString={\n                (touched.minimumOrder && errors.minimumOrder) ||\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('minimumOrder');\n              }}\n            />\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Discount Amount'\n                  value={values.amount}\n                  name='amount'\n                  isError={\n                    (touched.amount && errors.amount) ||\n                    (!isSubmitting && addCouponState.error['error']['amount'])\n                  }\n                  errorString={\n                    (touched.amount && errors.amount) ||\n                    (!isSubmitting && addCouponState.error['error']['amount'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('amount');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Discount Amount Type'\n                  value={values.amountType}\n                  name='amountType'\n                  isError={\n                    (touched.amountType && errors.amountType) ||\n                    (!isSubmitting &&\n                      addCouponState.error['error']['amountType'])\n                  }\n                  errorString={\n                    (touched.amountType && errors.amountType) ||\n                    (!isSubmitting &&\n                      addCouponState.error['error']['amountType'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('amountType');\n                  }}\n                />\n              </div>\n            </div>\n\n            {true && (\n              <div\n                style={{\n                  marginBottom: '15px',\n                }}\n              >\n                <h3 className='inputFieldLabel'>Start and end date</h3>\n                <RangePicker\n                  style={{\n                    borderRadius: '8px',\n                    borderColor: '#eee',\n                    width: '100%',\n                  }}\n                  value={[\n                    moment(startDate, dateFormat).isValid()\n                      ? moment(startDate, dateFormat)\n                      : undefined,\n                    moment(endDate, dateFormat).isValid()\n                      ? moment(endDate, dateFormat)\n                      : undefined,\n                  ]}\n                  showTime={true}\n                  onChange={handleStartEndDateRangeDate}\n                  picker={'date'}\n                />\n              </div>\n            )}\n\n            <div\n              className='addproductSection-left-header'\n              style={{\n                marginBottom: '-5px',\n              }}\n            >\n              <h3 className='inputFieldLabel'>Cover</h3>\n            </div>\n\n            <div className='aboutToUploadImagesContainer'>\n              {myImages &&\n                // @ts-ignore\n                myImages.length > 0 &&\n                myImages.map((image, index) => {\n                  return (\n                    <div className='aboutToUploadImagesContainer__item'>\n                      <div\n                        className='aboutToUploadImagesContainer__item-imgContainer'\n                        onClick={() => {\n                          setvisibleMedia(true);\n                        }}\n                      >\n                        <img src={image.cover} alt={image.alt} />\n                      </div>\n\n                      <span\n                        onClick={() => handleImagesDelete(image.id)}\n                        className='aboutToUploadImagesContainer__item-remove'\n                      >\n                        <CloseOutlined />\n                      </span>\n\n                      {/* {coverImageId === image.id ? (\n                        <span className='aboutToUploadImagesContainer__item-cover'>\n                          <CheckOutlined />\n                        </span>\n                      ) : (\n                        !coverImageId &&\n                        index === 0 && (\n                          <span className='aboutToUploadImagesContainer__item-cover'>\n                            <CheckOutlined />\n                          </span>\n                        )\n                      )} */}\n                    </div>\n                  );\n                })}\n\n              {!myImages ||\n              // @ts-ignore\n              (myImages && !(myImages && myImages.length > 0)) ? (\n                <>\n                  <Tooltip title={'Attach images'}>\n                    <div\n                      onClick={() => {\n                        setvisibleMedia(true);\n                      }}\n                      className='aboutToUploadImagesContainer__uploadItem'\n                    >\n                      <FileImageFilled />\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                        <PlusOutlined />\n                      </span>\n                    </div>\n                  </Tooltip>\n                </>\n              ) : (\n                ''\n              )}\n            </div>\n\n            <h3 className='inputFieldLabel'>Ordered Products</h3>\n\n            <OrderedProductsSelectProducts\n              setProductIds={setProductIds}\n              productIds={productIds}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>Selected Ordered Products</h3>\n\n            <OrderedProductsSelectedProductItems\n              productList={productList}\n              setProductList={setProductList}\n            />\n\n            {/* <h3 className='inputFieldLabel'>\n                                Free Products\n                                </h3>\n\n                            <OrderedProductsSelectProducts\n                                setProductIds={setFreeProductIds}\n                                productIds={freeProductIds}\n                            />\n\n                            <div style={{\n                                marginTop: \"15px\"\n                            }}></div>\n\n                            <h3 className='inputFieldLabel'>\n                                Selected Free Products\n                                </h3>\n\n                            <OrderedProductsSelectedProductItems\n                                productList={freeProductList}\n                                setProductList={setFreeProductList}\n                            /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={false}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n\nimport moment from 'moment';\n// import third party ui lib\nimport { notification, Modal, Tooltip, DatePicker } from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport OrderedProductsSelectProducts from './OrderedProductsSelectProducts';\nimport OrderedProductsSelectedProductItems from './OrderedProductsSelectedProductItems';\nimport FreeSelectProducts from './FreeSelectProducts';\nimport FreeSelectedProductItems from './FreeSelectedProductItems';\n\nconst { RangePicker } = DatePicker;\n\nconst validationSchema = Yup.object().shape({\n  //   name: Yup.string()\n  //     .label('Name')\n  //     .required('Name is required')\n  //     .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Coupon Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  code: '',\n  minimumOrder: null,\n  amount: '',\n  amountType: '',\n  orderedProducts: [],\n  freeDelivery: true,\n  freeProducts: [],\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagList?: any;\n  setTagList?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  tagList,\n  setTagList,\n}: Props) => {\n  const [addCouponState, handleAddCouponStateFetch] = useHandleFetch(\n    {},\n    'addCoupon'\n  );\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [productIds, setProductIds] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [freeProductIds, setFreeProductIds] = useState([]);\n  const [freeProductList, setFreeProductList] = useState([]);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    const orderedProducts =\n      productList.length > 0\n        ? productList.map((product) => {\n            return {\n              _id: product._id,\n              variation: product.variation,\n              quantity: product.quantity,\n            };\n          })\n        : [];\n\n    // const freeProducts = freeProductList.length > 0 ? freeProductList.map(product => {\n    //     return {\n    //         _id: product._id,\n    //         variation: product.variation,\n    //         quantity: product.quantity,\n    //     }\n    // }) : [];\n\n    const addTagRes = await handleAddCouponStateFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        code: values.code,\n        minimumOrder: values.minimumOrder,\n        amount: values.amount,\n        amountType: values.amountType,\n        // freeDelivery: false,\n        orderedProducts: orderedProducts,\n        // freeProducts: freeProducts,\n        cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n        startDate,\n        endDate,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n      setAddNewCategoryVisible(false);\n\n      setTagList([\n        {\n          // @ts-ignore\n          ...addTagRes,\n          id: addTagRes['_id'] || '',\n          key: addTagRes['_id'] || '',\n          name: addTagRes['name'] || '',\n        },\n        ...tagList,\n      ]);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    if (!addCouponState['isLoading']) {\n      const error = addCouponState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addCouponState]);\n\n  useEffect(() => {\n    if (productIds.length > 0) {\n      if (productIds.length > productList.length) {\n        const variation =\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setProductList([\n          ...productList,\n          {\n            ...productIds[productIds.length - 1],\n            _id: productIds[productIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (productIds.length < productList.length) {\n        console.log('productIds', productIds);\n        console.log('productList', productList);\n\n        const newProductList = productList.filter((item) => {\n          let isTrue = false;\n          productIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setProductList(newProductList);\n      }\n    } else {\n      setProductList([]);\n    }\n    // console.log('productIds', productIds)\n  }, [productIds]);\n\n  useEffect(() => {\n    if (freeProductIds.length > 0) {\n      if (freeProductIds.length > freeProductList.length) {\n        const variation =\n          freeProductIds[freeProductIds.length - 1]['pricing'].length > 0 &&\n          freeProductIds[freeProductIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setFreeProductList([\n          ...freeProductList,\n          {\n            ...freeProductIds[freeProductIds.length - 1],\n            _id: freeProductIds[freeProductIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (freeProductIds.length < freeProductList.length) {\n        console.log('freeProductIds', freeProductIds);\n        console.log('productList', productList);\n\n        const newProductList = freeProductList.filter((item) => {\n          let isTrue = false;\n          freeProductIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setFreeProductList(newProductList);\n      }\n    } else {\n      setFreeProductList([]);\n    }\n    // console.log('freeProductIds', freeProductIds)\n  }, [freeProductIds]);\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleStartEndDateRangeDate = (e) => {\n    const startDate = new Date(moment(e[0]).format());\n    const endDate = new Date(moment(e[1]).format());\n    // @ts-ignore\n    setStartDate(startDate);\n    // @ts-ignore\n    setEndDate(endDate);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            width={'45vw'}\n            style={{\n              top: '40px',\n            }}\n            title='Add New Coupon'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Name'\n                  value={values.name}\n                  name='name'\n                  isError={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && addCouponState.error['error']['name'])\n                  }\n                  errorString={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && addCouponState.error['error']['name'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('name');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Code'\n                  value={values.code}\n                  name='code'\n                  isError={\n                    (touched.code && errors.code) ||\n                    (!isSubmitting && addCouponState.error['error']['code'])\n                  }\n                  errorString={\n                    (touched.code && errors.code) ||\n                    (!isSubmitting && addCouponState.error['error']['code'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('code');\n                  }}\n                />\n              </div>\n            </div>\n\n            <Input\n              label='Minimum Order'\n              value={values.minimumOrder}\n              name='minimumOrder'\n              isError={\n                (touched.minimumOrder && errors.minimumOrder) ||\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\n              }\n              errorString={\n                (touched.minimumOrder && errors.minimumOrder) ||\n                (!isSubmitting && addCouponState.error['error']['minimumOrder'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('minimumOrder');\n              }}\n            />\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Discount Amount'\n                  value={values.amount}\n                  name='amount'\n                  isError={\n                    (touched.amount && errors.amount) ||\n                    (!isSubmitting && addCouponState.error['error']['amount'])\n                  }\n                  errorString={\n                    (touched.amount && errors.amount) ||\n                    (!isSubmitting && addCouponState.error['error']['amount'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('amount');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Discount Amount Type'\n                  value={values.amountType}\n                  name='amountType'\n                  isError={\n                    (touched.amountType && errors.amountType) ||\n                    (!isSubmitting &&\n                      addCouponState.error['error']['amountType'])\n                  }\n                  errorString={\n                    (touched.amountType && errors.amountType) ||\n                    (!isSubmitting &&\n                      addCouponState.error['error']['amountType'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('amountType');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginBottom: '15px',\n              }}\n            >\n              <h3 className='inputFieldLabel'>Start and end date</h3>\n              <RangePicker\n                style={{\n                  borderRadius: '8px',\n                  borderColor: '#eee',\n                  width: '100%',\n                }}\n                showTime={true}\n                onChange={handleStartEndDateRangeDate}\n                picker={'date'}\n              />\n            </div>\n\n            <div\n              className='addproductSection-left-header'\n              style={{\n                marginBottom: '-5px',\n              }}\n            >\n              <h3 className='inputFieldLabel'>Cover</h3>\n            </div>\n\n            <div className='aboutToUploadImagesContainer'>\n              {myImages &&\n                // @ts-ignore\n                myImages.length > 0 &&\n                myImages.map((image, index) => {\n                  return (\n                    <div className='aboutToUploadImagesContainer__item'>\n                      <div\n                        className='aboutToUploadImagesContainer__item-imgContainer'\n                        onClick={() => {\n                          setvisibleMedia(true);\n                        }}\n                      >\n                        <img src={image.cover} alt={image.alt} />\n                      </div>\n\n                      <span\n                        onClick={() => handleImagesDelete(image.id)}\n                        className='aboutToUploadImagesContainer__item-remove'\n                      >\n                        <CloseOutlined />\n                      </span>\n\n                      {/* {coverImageId === image.id ? (\n                        <span className='aboutToUploadImagesContainer__item-cover'>\n                          <CheckOutlined />\n                        </span>\n                      ) : (\n                        !coverImageId &&\n                        index === 0 && (\n                          <span className='aboutToUploadImagesContainer__item-cover'>\n                            <CheckOutlined />\n                          </span>\n                        )\n                      )} */}\n                    </div>\n                  );\n                })}\n\n              {!myImages ||\n              // @ts-ignore\n              (myImages && !(myImages && myImages.length > 0)) ? (\n                <>\n                  <Tooltip title={'Attach images'}>\n                    <div\n                      onClick={() => {\n                        setvisibleMedia(true);\n                      }}\n                      className='aboutToUploadImagesContainer__uploadItem'\n                    >\n                      <FileImageFilled />\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                        <PlusOutlined />\n                      </span>\n                    </div>\n                  </Tooltip>\n                </>\n              ) : (\n                ''\n              )}\n            </div>\n\n            <h3 className='inputFieldLabel'>Ordered Products</h3>\n\n            <OrderedProductsSelectProducts\n              setProductIds={setProductIds}\n              productIds={productIds}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>Selected Ordered Products</h3>\n\n            <OrderedProductsSelectedProductItems\n              productList={productList}\n              setProductList={setProductList}\n            />\n\n            {/* <h3 className='inputFieldLabel'>\n                                Free Products\n                                </h3>\n\n                            <OrderedProductsSelectProducts\n                                setProductIds={setFreeProductIds}\n                                productIds={freeProductIds}\n                            />\n\n                            <div style={{\n                                marginTop: \"15px\"\n                            }}></div>\n\n                            <h3 className='inputFieldLabel'>\n                                Selected Free Products\n                                </h3>\n\n                            <OrderedProductsSelectedProductItems\n                                productList={freeProductList}\n                                setProductList={setFreeProductList}\n                            /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={false}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport {\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\nimport Moment from 'react-moment';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport CouponQuickEdit from './CouponQuickEdit';\nimport AddNewCoupon from './AddNewCoupon';\nimport moment from 'moment';\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Coupon Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst MyTable = ({ data, setTagList }) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\n    {},\n    'deleteCoupon'\n  );\n\n  const history = useHistory();\n\n  const handleDeleteTag = async (id) => {\n    const deleteTagRes = await handleDeleteTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\n      openSuccessNotification('Deleted Coupon');\n      const newtagList = data.filter((item) => item.id !== id);\n      setTagList(newtagList);\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  const getCover = (record: any) => {\n    if (record.cover) {\n      return record.cover;\n    } else return '';\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title=''\n          dataIndex='cover'\n          key='id'\n          width={'80px'}\n          className='classnameofthecolumn'\n          render={(cover, record: any) => (\n            <>\n              <div\n                className='listCoverImage'\n                onClick={() => {\n                  history.push(`/admin/coupon/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n              >\n                <img src={getCover(record)} alt='' />\n              </div>\n            </>\n          )}\n        />\n\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/coupon/${record.id}`);\n                  // setBrandDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Code'\n          dataIndex='code'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Discount'\n          dataIndex='amount'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        {/* <Column\n                    title=\"Order Products\"\n                    dataIndex=\"orderedProductsCount\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n\n                /> */}\n\n        <Column\n          title='Order Products'\n          dataIndex='orderedProductsCount'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        {/* <Column\n                    title=\"Free Products\"\n                    dataIndex=\"freeProductsCount\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n                /> */}\n\n        <Column\n          width={150}\n          title='Start Date'\n          dataIndex='startDate'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                  fontSize: '13px',\n                }}\n              >\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          width={150}\n          title='End Date'\n          dataIndex='endDate'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <a href='##'>\n                <Tooltip placement='top' title='Edit Coupon'>\n                  <span\n                    className='iconSize'\n                    onClick={() => {\n                      setvisible(true);\n                      setactiveCategoryForEdit(record);\n                    }}\n                  >\n                    <EditOutlined />\n                  </span>\n                </Tooltip>\n              </a>\n\n              <Popconfirm\n                onConfirm={() => handleDeleteTag(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n\n      {activeCategoryForEdit && (\n        <CouponQuickEdit\n          tagList={data}\n          setTagList={setTagList}\n          setAddNewCategoryVisible={setvisible}\n          addNewCategoryVisible={visible}\n          category={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {}\n\nconst Couponlist = ({}: Props) => {\n  const [tagList, setTagList] = useState([]);\n\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'couponList');\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tags = await handleTagListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n      // @ts-ignore\n      setTagList(tags);\n    };\n    setTags();\n  }, []);\n\n  console.log('couponList', tagState);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleSearch = (value) => {\n    if (tagState.data.length > 0) {\n      const newTagList = tagState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setTagList(newTagList);\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar-tag'>\n            <h2 className='categoryListContainer__header-title'>Coupons</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search coupon..'\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n          <Button\n            // type=\"primary\"\n            className='btnPrimaryClassNameoutline'\n            icon={<PlusOutlined />}\n            onClick={() => setAddNewCategoryVisible(true)}\n          >\n            Add New\n          </Button>\n        </div>\n        <div className='categoryListContainer__categoryList'>\n          {tagState.done && tagList.length > 0 && (\n            <MyTable setTagList={setTagList} data={tagList} />\n          )}\n          {tagState.isLoading && <DataTableSkeleton />}\n\n          {tagState.done && !(tagList.length > 0) && (\n            <div\n              style={{\n                marginTop: '200px',\n              }}\n            >\n              <Empty\n                description='No Coupon found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewCoupon\n        tagList={tagList}\n        setTagList={setTagList}\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n      />\n    </>\n  );\n};\n\nexport default Couponlist;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Empty,\n  Form,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\n\nconst { Option } = Select;\n\nconst validationSchema = Yup.object().shape({\n  // firstName: Yup.string()\n  // \t.label('First name')\n  // \t.required()\n  // \t.min(2, 'First name must have at least 2 characters '),\n  // lastName: Yup.string()\n  // \t.label('Lastname')\n  // \t.required()\n  // \t.min(2, 'Last name must have at least 2 characters '),\n  // phone: Yup.string()\n  // \t.required('Please tell us your mobile number.')\n  // \t.max(13, 'Please enter a valid mobile number.'),\n  // password: Yup.string()\n  // \t.label('Password')\n  // \t.required()\n  // \t.min(6, 'Password must have at least 6 characters'),\n  // address1: Yup.string()\n  // \t.label('Address line 1')\n  // \t.required()\n  // \t.min(3, 'Address line 1 must have at least 3 characters '),\n  // email: Yup.string().label('Email').email('Please enter a valid email'),\n});\n\nconst initialValues = {\n  phone: '',\n  email: '',\n  firstName: '',\n  lastName: '',\n  address1: '',\n  address2: '',\n  zipCode: '',\n  password: '',\n  dealerCode: '',\n};\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Customer Created!',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  customerList?: any;\n  setCustomerList?: any;\n}\n\nconst AddNewCategory = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  customerList,\n  setCustomerList,\n}: Props) => {\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\n    {},\n    'addCustomer'\n  );\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n  const [toggleReferralCode, settoggleReferralCode] = useState(false);\n\n  const [countryList, setCountryList] = useState([]);\n  const [cityList, setCityList] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addCustomerRes = await handleAddCustomerFetch({\n      body: {\n        phone: values.phone,\n        email: values.email.trim(),\n        password: values.password,\n        address1: values.address1,\n        address2: values.address2,\n        firstName: values.firstName.trim(),\n        lastName: values.lastName,\n        country: selectedCountryValue,\n        city: selectedCityValue,\n        dealerCode: values.dealerCode,\n      },\n    });\n\n    // @ts-ignore\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\n      openSuccessNotification();\n\n      setCustomerList([\n        {\n          id: addCustomerRes['_id'] || '',\n          key: addCustomerRes['_id'] || '',\n          name: addCustomerRes['firstName'] + ' ' + addCustomerRes['lastName'],\n          // @ts-ignore\n          ...addCustomerRes,\n        },\n        ...customerList,\n      ]);\n      setAddNewCategoryVisible(false);\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addCustomerState['isLoading']) {\n      const error = addCustomerState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addCustomerState]);\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.name,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, []);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [selectedCountryValue]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !isValid ||\n      !values.firstName ||\n      !values.lastName ||\n      !values.password ||\n      !values.phone ||\n      !values.address1\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  console.log('cityListState', cityListState);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n            title='Add New Customer'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              // disabled: getisSubmitButtonDisabled(values, isValid)\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='First Name *'\n                  value={values.firstName}\n                  name='firstName'\n                  isError={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['firstName'])\n                  }\n                  errorString={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['firstName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('firstName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Last Name'\n                  value={values.lastName}\n                  name='lastName'\n                  isError={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['lastName'])\n                  }\n                  errorString={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['lastName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('lastName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Phone *'\n                  value={values.phone}\n                  name='phone'\n                  isError={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\n                  }\n                  errorString={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('phone');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Email'\n                  value={values.email}\n                  name='email'\n                  isError={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting && addCustomerState.error['error']['email'])\n                  }\n                  errorString={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting && addCustomerState.error['error']['email'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('email');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div\n              className='dubbleRowInputs'\n              style={{\n                alignItems: 'center',\n                ...(!toggleReferralCode && {\n                  margin: '10px 0',\n                }),\n              }}\n            >\n              <div className='dubbleRowInputs__item'>\n                {toggleReferralCode && (\n                  <Input\n                    label='Referral Code'\n                    value={values.dealerCode}\n                    name='dealerCode'\n                    isError={\n                      (touched.dealerCode && errors.dealerCode) ||\n                      (!isSubmitting &&\n                        addCustomerState.error['error']['dealerCode'])\n                    }\n                    errorString={\n                      (touched.dealerCode && errors.dealerCode) ||\n                      (!isSubmitting &&\n                        addCustomerState.error['error']['dealerCode'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('dealerCode');\n                    }}\n                  />\n                )}\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <h3\n                  onClick={() => settoggleReferralCode((value) => !value)}\n                  style={{\n                    color: '#1890ff',\n                    marginBottom: '-9px',\n                    marginLeft: '115px',\n                    cursor: 'pointer',\n                  }}\n                  className='inputFieldLabel'\n                >\n                  Add Referral Code\n                </h3>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              <Input\n                label='Password *'\n                type='password'\n                value={values.password}\n                name='password'\n                isError={\n                  (touched.password && errors.password) ||\n                  (!isSubmitting && addCustomerState.error['error']['password'])\n                }\n                errorString={\n                  (touched.password && errors.password) ||\n                  (!isSubmitting && addCustomerState.error['error']['password'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('password');\n                }}\n              />\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <h3 className='inputFieldLabel'>Country *</h3>\n\n                <Form.Item\n                  validateStatus={\n                    addCustomerState.error['error']['country'] ? 'error' : ''\n                  }\n                  help={addCustomerState.error['error']['country']}\n                  // noStyle={true}\n                >\n                  <Select\n                    notFoundContent={\n                      <Empty\n                        description='No Country Found'\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                      />\n                    }\n                    showSearch\n                    style={{ width: '100%' }}\n                    placeholder='Select a Country'\n                    optionFilterProp='children'\n                    onChange={onChangeCountry}\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {countryListState.done &&\n                      countryListState.data.length > 0 &&\n                      countryOptions.map((option) => {\n                        return (\n                          <Option value={option.value}>{option.name}</Option>\n                        );\n                      })}\n                  </Select>\n                </Form.Item>\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <h3 className='inputFieldLabel'>City *</h3>\n                <Form.Item\n                  // noStyle={true}\n                  validateStatus={\n                    addCustomerState.error['error']['city'] ? 'error' : ''\n                  }\n                  help={addCustomerState.error['error']['city']}\n                >\n                  <Select\n                    className='selectClassName'\n                    notFoundContent={\n                      <Empty\n                        description='First Select a Country'\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                      />\n                    }\n                    showSearch\n                    style={{ width: '100%' }}\n                    placeholder='Select a city'\n                    optionFilterProp='children'\n                    onChange={onChangeCity}\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {cityListState.done &&\n                      cityListState.data.length > 0 &&\n                      cityOptions.map((option) => {\n                        return (\n                          <Option value={option.value}>{option.name}</Option>\n                        );\n                      })}\n                  </Select>\n                </Form.Item>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              <Input\n                label='Address *'\n                value={values.address1}\n                name='address1'\n                isError={\n                  (touched.address1 && errors.address1) ||\n                  (!isSubmitting && addCustomerState.error['error']['address1'])\n                }\n                errorString={\n                  (touched.address1 && errors.address1) ||\n                  (!isSubmitting && addCustomerState.error['error']['address1'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('address1');\n                }}\n              />\n            </div>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewCategory;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Select, notification, Form, Empty } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport { useHandleFetch } from '../../hooks';\n\nconst { Option } = Select;\n\nconst validationSchema = Yup.object().shape({\n  // firstName: Yup.string()\n  //   .label('Firstname')\n  //   .required()\n  //   .min(2, 'First name must have at least 2 characters '),\n  // lastName: Yup.string()\n  //   .label('Lastname')\n  //   .required()\n  //   .min(2, 'Lastname must have at least 2 characters '),\n  // phone: Yup.string()\n  //   .required('Please tell us your mobile number.')\n  //   .max(13, 'Please enter a valid mobile number.'),\n  // password: Yup.string()\n  //   .label('Password')\n  //   .required()\n  //   .min(6, 'Password must have at least 6 characters'),\n  // address1: Yup.string()\n  //   .label('Address line 1')\n  //   .required()\n  //   .min(3, 'Address line 1 must have at least 3 characters '),\n  // email: Yup.string().label('Email').email('Please enter a valid email'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Customer Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  customer: any;\n  setvisible: any;\n  visible: any;\n  customerList?: any;\n  setCustomerList?: any;\n}\n\nconst initialValues = {\n  phone: '',\n  email: '',\n  address1: '',\n  firstName: '',\n  lastName: '',\n  dealerCode: '',\n};\n\nconst QuickEdit = ({\n  customer,\n  setvisible,\n  visible,\n  customerList,\n  setCustomerList,\n}: Props) => {\n  const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch(\n    {},\n    'updateCustomer'\n  );\n\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n\n  const [countryList, setCountryList] = useState([]);\n  const [cityList, setCityList] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const updateCustomerRes = await handleUpdateCustomerFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        phone: values.phone.trim(),\n        email: values.email.trim(),\n        password: values.password,\n        address1: values.address1.trim(),\n        firstName: values.firstName.trim(),\n        lastName: values.lastName,\n        country: selectedCountryValue || customer.country,\n        city: selectedCityValue || customer.city,\n        dealerCode: values.dealerCode.trim(),\n      },\n    });\n\n    // @ts-ignore\n    if (updateCustomerRes && updateCustomerRes.status === 'ok') {\n      openSuccessNotification();\n\n      const positionInTag = () => {\n        return customerList.map((item) => item.id).indexOf(customer.id);\n      };\n\n      const index = positionInTag();\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, customerList[index], {\n        // @ts-ignore\n        ...updateCustomerRes,\n        id: values.id,\n        name: updateCustomerRes.firstName + ' ' + updateCustomerRes.lastName,\n      });\n      const updateTagList = [\n        ...customerList.slice(0, index),\n        updatedItem,\n        ...customerList.slice(index + 1),\n      ];\n      setCustomerList(updateTagList);\n      setvisible(false);\n      setselectedCityValue('');\n      setselectedCountryValue('');\n      //   setcountryOptions([]);\n      //   setcityOptions([]);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.name,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, [customer]);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue || customer.country,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [customer.country, selectedCountryValue]);\n\n  useEffect(() => {\n    if (!updateCustomerState['isLoading']) {\n      const error = updateCustomerState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !updateCustomerState['isLoading'] &&\n      Object.keys(updateCustomerState.data).length > 0\n    ) {\n      if (updateCustomerState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [updateCustomerState]);\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n\n    setselectedCityValue('');\n    setselectedCountryValue('');\n    // setcountryOptions([]);\n    // setcityOptions([]);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !isValid ||\n      !values.firstName ||\n      !values.lastName ||\n      !values.phone ||\n      !values.address1\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...customer }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Customer Edit'\n            visible={visible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            destroyOnClose={true}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              // disabled: getisSubmitButtonDisabled(values, isValid)\n            }}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='First Name'\n                  value={values.firstName}\n                  name='firstName'\n                  isError={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['firstName'])\n                  }\n                  errorString={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['firstName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('firstName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Last Name'\n                  value={values.lastName}\n                  name='lastName'\n                  isError={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['lastName'])\n                  }\n                  errorString={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['lastName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('lastName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Phone'\n                  value={values.phone}\n                  name='phone'\n                  isError={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['phone'])\n                  }\n                  errorString={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['phone'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('phone');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Email'\n                  value={values.email}\n                  name='email'\n                  isError={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['email'])\n                  }\n                  errorString={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['email'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('email');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              <Input\n                label='Referral Code'\n                value={values.dealerCode}\n                name='dealerCode'\n                isError={\n                  (touched.dealerCode && errors.dealerCode) ||\n                  (!isSubmitting &&\n                    updateCustomerState.error['error']['dealerCode'])\n                }\n                errorString={\n                  (touched.dealerCode && errors.dealerCode) ||\n                  (!isSubmitting &&\n                    updateCustomerState.error['error']['dealerCode'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('dealerCode');\n                }}\n              />\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <h3 className='inputFieldLabel'>Country *</h3>\n\n                <Form.Item\n                  validateStatus={\n                    updateCustomerState.error['error']['country'] ? 'error' : ''\n                  }\n                  help={updateCustomerState.error['error']['country']}\n                  // noStyle={true}\n                >\n                  <Select\n                    notFoundContent={\n                      <Empty\n                        description='No Country Found'\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                      />\n                    }\n                    showSearch\n                    style={{ width: '100%' }}\n                    defaultValue={customer && customer.country}\n                    placeholder='Select a Country'\n                    optionFilterProp='children'\n                    onChange={onChangeCountry}\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {countryListState.done &&\n                      countryListState.data.length > 0 &&\n                      countryOptions.map((option) => {\n                        return (\n                          <Option value={option.value}>{option.name}</Option>\n                        );\n                      })}\n                  </Select>\n                </Form.Item>\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <h3 className='inputFieldLabel'>City *</h3>\n                <Form.Item\n                  // noStyle={true}\n                  validateStatus={\n                    updateCustomerState.error['error']['city'] ? 'error' : ''\n                  }\n                  help={updateCustomerState.error['error']['city']}\n                >\n                  <Select\n                    className='selectClassName'\n                    notFoundContent={\n                      <Empty\n                        description='First Select a Country'\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                      />\n                    }\n                    showSearch\n                    style={{ width: '100%' }}\n                    placeholder='Select a city'\n                    defaultValue={customer && customer.city}\n                    optionFilterProp='children'\n                    onChange={onChangeCity}\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {cityListState.done &&\n                      cityListState.data.length > 0 &&\n                      cityOptions.map((option) => {\n                        return (\n                          <Option value={option.value}>{option.name}</Option>\n                        );\n                      })}\n                  </Select>\n                </Form.Item>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              <Input\n                label='Address *'\n                value={values.address1}\n                name='address1'\n                isError={\n                  (touched.address1 && errors.address1) ||\n                  (!isSubmitting &&\n                    updateCustomerState.error['error']['address1'])\n                }\n                errorString={\n                  (touched.address1 && errors.address1) ||\n                  (!isSubmitting &&\n                    updateCustomerState.error['error']['address1'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('address1');\n                }}\n              />\n            </div>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default QuickEdit;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport {\n  Table,\n  Badge,\n  Menu,\n  Dropdown,\n  notification,\n  Space,\n  Select,\n  Tag,\n  Button,\n  Input,\n  Tooltip,\n  Modal,\n  Popconfirm,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\nimport Moment from 'react-moment';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport AddNewCustomer from './AddNewCustomer';\nimport QuickEdit from './QuickEdit';\nimport Empty from '../../components/Empty';\nimport moment from 'moment';\nconst { Column, ColumnGroup } = Table;\nconst { Search } = Input;\n\nconst { Option } = Select;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setCustomerList?: any;\n}\n\nconst MyTable = ({ data, setCustomerList }: myTableProps) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n\n  const history = useHistory();\n\n  const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch(\n    {},\n    'deleteCustomer'\n  );\n  const handleDeleteCustomer = async (id) => {\n    const deleteCustomerRes = await handleDeleteCustomerFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteCustomerRes && deleteCustomerRes.status === 'ok') {\n      openSuccessNotification('Deleted Customer');\n      const newCustomerList = data.filter((item) => item.id !== id);\n      setCustomerList(newCustomerList);\n    }\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/customer/${record.id}`);\n                  // setcategoryDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Phone'\n          dataIndex='phone'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        {/* <Column\n           title=\"City\" \n           dataIndex=\"city\" \n           key=\"id\" \n           className='classnameofthecolumn'\n            /> */}\n\n        <Column\n          title='Dealer'\n          dataIndex='dealerName'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  // go to dealer detail\n                  // history.push(`/admin/dealer/${record.id}`)\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Order'\n          dataIndex='orderCount'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Total Price'\n          dataIndex='totalOrderPrice'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          width={150}\n          title='Created'\n          dataIndex='created'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm a')}</h5>\n            </Space>\n          )}\n        />\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <a href='##'>\n                <Tooltip placement='top' title='Edit Customer'>\n                  <span\n                    className='iconSize'\n                    onClick={() => {\n                      setvisible(true);\n                      setactiveCategoryForEdit(record);\n                    }}\n                  >\n                    <EditOutlined />\n                  </span>\n                </Tooltip>\n              </a>\n\n              <Popconfirm\n                onConfirm={() => handleDeleteCustomer(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          customerList={data}\n          setCustomerList={setCustomerList}\n          setvisible={setvisible}\n          visible={visible}\n          customer={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  history: any;\n}\n\nconst CustomerList = ({ history }: Props) => {\n  const [customerList, setCustomerList] = useState([]);\n\n  const [customerState, handleCustomerListFetch] = useHandleFetch(\n    {},\n    'customerList'\n  );\n  const [orderStatusFilterValue, setorderStatusFilterValue] = useState('');\n\n  console.log('customerList', customerList);\n\n  useEffect(() => {\n    const setCustomers = async () => {\n      const getSorttingvalue = () => {\n        switch (orderStatusFilterValue) {\n          case 'newFirst':\n            return {\n              sortItem: 'added',\n              sortOrderValue: '-1',\n            };\n            break;\n          case 'orderCountHigh':\n            return {\n              sortItem: 'orderCount',\n              sortOrderValue: '-1',\n            };\n            break;\n          case 'orderCountLow':\n            return {\n              sortItem: 'orderCount',\n              sortOrderValue: '1',\n            };\n            break;\n\n          case 'totalPriceHigh':\n            return {\n              sortItem: 'totalPrice',\n              sortOrderValue: '-1',\n            };\n            break;\n\n          case 'totalPriceLow':\n            return {\n              sortItem: 'totalPrice',\n              sortOrderValue: '1',\n            };\n            break;\n\n          default:\n            return {\n              sortItem: 'added',\n              sortOrderValue: '-1',\n            };\n        }\n      };\n      const customers = await handleCustomerListFetch({\n        urlOptions: {\n          params: {\n            ...getSorttingvalue(),\n            limitNumber: 252423480,\n          },\n        },\n      });\n      // @ts-ignore\n      setCustomerList(customers);\n    };\n    setCustomers();\n  }, [orderStatusFilterValue]);\n\n  const handleSearch = (value) => {\n    if (customerState.data.length > 0) {\n      const newCustomerList = customerState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setCustomerList(newCustomerList);\n    }\n  };\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  // console.log('customerState',customerState)\n\n  const orderFilteringOption = [\n    {\n      name: 'New first',\n      value: 'newFirst',\n    },\n    {\n      name: 'Order count (high > low)',\n      value: 'orderCountHigh',\n    },\n    {\n      name: 'Order count (low < high)',\n      value: 'orderCountLow',\n    },\n    {\n      name: 'Total price (high > low)',\n      value: 'totalPriceHigh',\n    },\n    {\n      name: 'Total price (low < high)',\n      value: 'totalPriceLow',\n    },\n  ];\n\n  const onOrderStatusFilterChange = (value) => {\n    setorderStatusFilterValue(value);\n  };\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Customers</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search customer..'\n              onChange={(e) => handleSearch(e.target.value)}\n              // style={{ width: 300 }}\n            />\n          </div>\n\n          <div>\n            <Select\n              style={{\n                borderRadius: '15px',\n                color: '#3fa6f9',\n                marginRight: '15px',\n                width: '200px',\n              }}\n              placeholder='Select status'\n              optionFilterProp='children'\n              onChange={onOrderStatusFilterChange}\n              defaultValue={'newFirst'}\n              bordered={false}\n            >\n              {orderFilteringOption.map((option) => {\n                return <Option value={option.value}>{option.name}</Option>;\n              })}\n            </Select>\n\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          </div>\n        </div>\n\n        <div className='categoryListContainer__afterHeader'>\n          {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n        </div>\n\n        <div className='categoryListContainer__categoryList'>\n          {customerState.done && customerList.length > 0 && (\n            <MyTable setCustomerList={setCustomerList} data={customerList} />\n          )}\n          {customerState.isLoading && <DataTableSkeleton />}\n          {customerState.done && !(customerList.length > 0) && (\n            <Empty title='No Customer found' />\n          )}\n        </div>\n      </div>\n\n      {customerState.done && (\n        <AddNewCustomer\n          setCustomerList={setCustomerList}\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          customerList={customerState.data}\n        />\n      )}\n    </>\n  );\n};\n\nexport default withRouter(CustomerList);\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Select, notification, Empty, Form } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport { useHandleFetch } from '../../hooks';\n\nconst { Option } = Select;\n\nconst validationSchema = Yup.object().shape({\n  // firstName: Yup.string()\n  //     .label('Firstname')\n  //     .required()\n  //     .min(2, 'First name must have at least 2 characters '),\n  // lastName: Yup.string()\n  //     .label('Lastname')\n  //     .required()\n  //     .min(2, 'Lastname must have at least 2 characters '),\n  // phone: Yup.string()\n  //     .required('Please tell us your mobile number.')\n  //     .max(13, 'Please enter a valid mobile number.'),\n  // address1: Yup.string()\n  //     .label('Address line 1')\n  //     .required()\n  //     .min(3, 'Address line 1 must have at least 3 characters '),\n  // email: Yup.string().label('Email').email('Please enter a valid email'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Customer Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  customer: any;\n  setvisible: any;\n  visible: any;\n  setCustomerDetailData: any;\n}\n\nconst initialValues = {\n  phone: '',\n  email: '',\n  address1: '',\n  firstName: '',\n  lastName: '',\n  dealerCode: '',\n};\n\nconst QuickEdit = ({\n  customer,\n  setvisible,\n  visible,\n  setCustomerDetailData,\n}: Props) => {\n  const [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch(\n    {},\n    'updateCustomer'\n  );\n\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const updateCustomerRes = await handleUpdateCustomerFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        phone: values.phone.trim(),\n        email: values.email.trim(),\n        password: values.password,\n        address1: values.address1.trim(),\n        firstName: values.firstName.trim(),\n        lastName: values.lastName,\n        country: selectedCountryValue || customer.country,\n        city: selectedCityValue || customer.city,\n        dealerCode: values.dealerCode.trim(),\n      },\n    });\n\n    // @ts-ignore\n    if (updateCustomerRes && updateCustomerRes.status === 'ok') {\n      openSuccessNotification();\n\n      setCustomerDetailData({\n        // @ts-ignore\n        ...updateCustomerRes,\n        id: values.id,\n        name: updateCustomerRes.firstName + ' ' + updateCustomerRes.lastName,\n      });\n\n      setvisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!updateCustomerState['isLoading']) {\n      const error = updateCustomerState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [updateCustomerState]);\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.name,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, [customer]);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue || customer.country,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [customer.country, selectedCountryValue]);\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  console.log('realCustomer', customer);\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !isValid ||\n      !values.firstName ||\n      !values.lastName ||\n      !values.phone ||\n      !values.address1\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...customer }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Customer Edit'\n            visible={visible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              // disabled: getisSubmitButtonDisabled(values, isValid)\n            }}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='First Name *'\n                  value={values.firstName}\n                  name='firstName'\n                  isError={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['firstName'])\n                  }\n                  errorString={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['firstName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('firstName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Last Name'\n                  value={values.lastName}\n                  name='lastName'\n                  isError={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['lastName'])\n                  }\n                  errorString={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['lastName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('lastName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Phone *'\n                  value={values.phone}\n                  name='phone'\n                  isError={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['phone'])\n                  }\n                  errorString={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['phone'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('phone');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Email'\n                  value={values.email}\n                  name='email'\n                  isError={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['email'])\n                  }\n                  errorString={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting &&\n                      updateCustomerState.error['error']['email'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('email');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              <Input\n                label='Referral Code'\n                value={values.dealerCode}\n                name='dealerCode'\n                isError={\n                  (touched.dealerCode && errors.dealerCode) ||\n                  (!isSubmitting &&\n                    updateCustomerState.error['error']['dealerCode'])\n                }\n                errorString={\n                  (touched.dealerCode && errors.dealerCode) ||\n                  (!isSubmitting &&\n                    updateCustomerState.error['error']['dealerCode'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('dealerCode');\n                }}\n              />\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <h3 className='inputFieldLabel'>Country *</h3>\n\n                <Form.Item\n                  validateStatus={\n                    updateCustomerState.error['error']['country'] ? 'error' : ''\n                  }\n                  help={updateCustomerState.error['error']['country']}\n                  // noStyle={true}\n                >\n                  <Select\n                    notFoundContent={\n                      <Empty\n                        description='No Country Found'\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                      />\n                    }\n                    showSearch\n                    style={{ width: '100%' }}\n                    defaultValue={customer && customer.country}\n                    placeholder='Select a Country'\n                    optionFilterProp='children'\n                    onChange={onChangeCountry}\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {countryListState.done &&\n                      countryListState.data.length > 0 &&\n                      countryOptions.map((option) => {\n                        return (\n                          <Option value={option.value}>{option.name}</Option>\n                        );\n                      })}\n                  </Select>\n                </Form.Item>\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <h3 className='inputFieldLabel'>City *</h3>\n                <Form.Item\n                  // noStyle={true}\n                  validateStatus={\n                    updateCustomerState.error['error']['city'] ? 'error' : ''\n                  }\n                  help={updateCustomerState.error['error']['city']}\n                >\n                  <Select\n                    className='selectClassName'\n                    notFoundContent={\n                      <Empty\n                        description='First Select a Country'\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                      />\n                    }\n                    showSearch\n                    style={{ width: '100%' }}\n                    placeholder='Select a city'\n                    defaultValue={customer && customer.city}\n                    optionFilterProp='children'\n                    onChange={onChangeCity}\n                    filterOption={(input, option) =>\n                      option.children\n                        .toLowerCase()\n                        .indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {cityListState.done &&\n                      cityListState.data.length > 0 &&\n                      cityOptions.map((option) => {\n                        return (\n                          <Option value={option.value}>{option.name}</Option>\n                        );\n                      })}\n                  </Select>\n                </Form.Item>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              <Input\n                label='Address *'\n                value={values.address1}\n                name='address1'\n                isError={\n                  (touched.address1 && errors.address1) ||\n                  (!isSubmitting &&\n                    updateCustomerState.error['error']['address1'])\n                }\n                errorString={\n                  (touched.address1 && errors.address1) ||\n                  (!isSubmitting &&\n                    updateCustomerState.error['error']['address1'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('address1');\n                }}\n              />\n            </div>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default QuickEdit;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import \nimport Moment from \"react-moment\";\n\n// import lib\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\n\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport CustomerEdit from \"./CustomerEdit\";\nimport moment from \"moment\";\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n    productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n    const [customerDetailState, handleCustomerDetailFetch] = useHandleFetch({}, 'customerDetail');\n    const [orderListState, handleOrderListFetch] = useHandleFetch({}, 'orderListForCustomer');\n    const [tagEditVisible, setTagEditVisible] = useState(false);\n    const [customerDetailData,setCustomerDetailData] = useState({}); \n\n\n\n    console.log('customerDetailData',customerDetailData); \n    const params = useParams();\n    const history = useHistory();\n    const customerId = params['id'];\n\n    useEffect(() => {\n\n        const getCustomerDetail = async () => {\n            const customerDetailDataRes = await handleCustomerDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: customerId\n                    }\n                }\n            });\n\n            // @ts-ignore\n            if(customerDetailDataRes){\n                // @ts-ignore\n                setCustomerDetailData(customerDetailDataRes); \n            }\n\n            console.log('customerDetailDataRes',customerDetailDataRes)\n        };\n\n        getCustomerDetail();\n\n    }, [customerId]);\n\n\n\n    useEffect(() => {\n        const getOrderList = async () => {\n            await handleOrderListFetch({\n                urlOptions: {\n                    params: {\n                        customerId: customerId\n                    }\n                }\n            })\n        };\n\n        getOrderList();\n\n    }, [customerId]);\n\n\n\n\n    console.log('customerDetailData', customerDetailData);\n\n\n\n    return (\n        <div className='brandDetailContainer'>\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Customer Detail\n                </h3>\n\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\n                    <>\n                        <CustomerEdit\n                            visible={tagEditVisible}\n                            setvisible={setTagEditVisible}\n                            customer={customerDetailData}\n                            setCustomerDetailData={setCustomerDetailData}\n                        />\n                        <Button\n                            onClick={() => setTagEditVisible(true)}\n                            type='link'\n                            icon={<EditOutlined />}\n                        >\n                            Edit\n                      </Button>\n                    </>\n                )}\n            </div>\n            <Skeleton\n                paragraph={{ rows: 2 }}\n                loading={customerDetailState.isLoading}>\n                {customerDetailState.done && customerDetailData && !(Object.keys(customerDetailData).length > 0) && (\n                    <Empty description='No Customer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                )}\n\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\n                    <div className='brandDetailContainer__header'>\n\n                        <div className='brandDetailContainer__header-info'>\n                            <h2>\n                                {customerDetailData['name']}\n                            </h2>\n                            <h3>\n                                {customerDetailData['description']}\n                            </h3>\n\n                            {customerDetailData['country'] && (\n                                <h3>\n                                    COUNTRY:\n                                    <span>\n                                        {customerDetailData['country']}\n                                    </span>\n                                </h3>\n                            )}\n\n\n                            {customerDetailData['city'] && (\n                                <h3>\n                                    CITY:\n                                    <span>\n                                        {customerDetailData['city']}\n                                    </span>\n                                </h3>\n                            )}\n                        \n\n\n                            {customerDetailData['address1'] && (\n                                <h3>\n                                    ADDRESS:\n                                    <span>\n                                        {customerDetailData['address1']}\n                                    </span>\n                                </h3>\n                            )}\n                         \n\n                            {customerDetailData['phone'] && (\n                                <h3>\n                                    PHONE:\n                                    <span>\n                                        {customerDetailData['phone']}\n                                    </span>\n                                </h3>\n                            )}\n\n                             {customerDetailData['email'] && (\n                                <h3>\n                                    EMAIL:\n                                    <span>\n                                        {customerDetailData['email']}\n                                    </span>\n                                </h3>\n                            )}\n\n                        </div>\n                    </div>\n                )}\n\n            </Skeleton>\n\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Orders \n                </h3>\n            </div>\n            <div className='brandDetailContainer__body'>\n                {orderListState.isLoading && <DataTableSkeleton />}\n                {orderListState.done && !(orderListState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No Orders exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {orderListState.done && orderListState.data && orderListState.data.length > 0 && (\n                    <>\n                        <Table\n                            style={{\n                                paddingTop: '10px',\n                                borderRadius: '5px !important',\n                                overflow: 'hidden',\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\n                            }}\n                            // expandable={{\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\n                            //   }}\n                            // bordered={true}\n                            size='small'\n                            // pagination={false}\n                            dataSource={orderListState.data}\n                            tableLayout={'auto'}\n                            onHeaderRow={column => {\n                                return {\n                                    style: {\n                                        color: 'red !important'\n                                    }\n\n                                };\n                            }}\n                        >\n                          \n          \n          \n\n        <Column\n          title=\"Code\"\n          dataIndex=\"shortCode\"\n          key=\"id\"\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n\n              <h4\n                onClick={() => {\n                  // setvisible(true)\n                  history.push(`/admin/order/${record.id}`)\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer'\n\n                }}>\n                #{text}\n              </h4>\n\n\n            </>\n          )}\n\n        />\n    <Column\n          title=\"Name\"\n          dataIndex=\"name\"\n          key=\"id\"\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n\n              <h4\n                onClick={() => {\n                  // setvisible(true)\n                  history.push(`/admin/order/${record.id}`)\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer'\n\n                }}>\n                {text}\n              </h4>\n\n\n            </>\n          )}\n\n        />\n\n\n                \n\n        <Column\n           title=\"Delivery\" \n           dataIndex=\"deliveryName\" \n           key=\"id\" \n           className='classnameofthecolumn'\n         \n            />\n\n\n\n          <Column\n           title=\"Created\" \n           dataIndex=\"date_created\" \n           key=\"id\" \n           className='classnameofthecolumn'\n           render={(text, record: any) => (\n            <>\n\n              <h4\n               \n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n\n                }}>\n                  {text && moment(text).format('MMMM Do YYYY, h:mm a')}\n              </h4>\n\n\n            </>\n          )}\n            />\n\n\n              <Column\n                title=\"Total Price\" \n                dataIndex=\"total\" \n                key=\"id\" \n                className='classnameofthecolumn'\n                />\n\n\n\n\n          <Column\n            width={150}\n           title=\"Status\" \n           dataIndex=\"status\" \n           key=\"id\" \n           className='classnameofthecolumn'\n           render={(text, record: any) => (\n            <>\n\n             <a href='##'>\n              <span\n              style={{\n                fontSize:'12px'\n              }}\n                >\n                {text}\n             </span> \n            </a>\n            </>\n          )}\n            />\n\n\n                        </Table>\n                    </>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default NewBrandDetail\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {\n  Table,\n  Empty,\n  Popconfirm,\n  Space,\n  Button,\n  Input,\n  Tooltip,\n  notification,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\n\n/// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nconst { Column } = Table;\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Page Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setBrandList: any;\n  roles: any;\n}\n\nconst MyTable = ({ data, setBrandList, roles }: myTableProps) => {\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deletePageState, handleDeletePageFetch] = useHandleFetch(\n    {},\n    'deletePage'\n  );\n\n  const history = useHistory();\n\n  const handleDeletePage = async (id) => {\n    const deletePageRes = await handleDeletePageFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deletePageRes && deletePageRes.status === 'ok') {\n      openSuccessNotification('Deleted Page');\n      const newBrandList = data.filter((item) => item.id !== id);\n      setBrandList(newBrandList);\n    }\n  };\n\n  const getCover = (record: any) => {\n    if (record.cover) {\n      return record.cover;\n    } else return '';\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title=''\n          dataIndex='cover'\n          key='id'\n          width={'100px'}\n          className='classnameofthecolumn'\n          render={(cover, record: any) => (\n            <>\n              <div\n                className='listCoverImage'\n                onClick={() => {\n                  history.push(`/admin/page/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n              >\n                <img src={getCover(record)} alt='' />\n              </div>\n            </>\n          )}\n        />\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  // setactiveCategoryForEdit(record);\n                  history.push(`/admin/page/${record.id}`);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Last Modified'\n          dataIndex='lastModified'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                }}\n              >\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Created'\n          dataIndex='added'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                }}\n              >\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\n              </h4>\n            </>\n          )}\n        />\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n\n        {isAccess('postPage', roles) && (\n          <Column\n            className='classnameofthecolumn'\n            title=''\n            key='action'\n            align='right'\n            render={(text, record: any) => (\n              <Space size='middle'>\n                <a href='##'>\n                  <Tooltip placement='top' title='Edit Page'>\n                    <span\n                      className='iconSize'\n                      onClick={() => {\n                        history.push(`/admin/page/edit/${record.id}`);\n                        setactiveCategoryForEdit(record);\n                      }}\n                    >\n                      <EditOutlined />\n                    </span>\n                  </Tooltip>\n                </a>\n\n                <Popconfirm\n                  onConfirm={() => handleDeletePage(record.id)}\n                  title='Are you sure？'\n                  okText='Yes'\n                  cancelText='No'\n                >\n                  <span className='iconSize iconSize-danger'>\n                    <DeleteOutlined />\n                  </span>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        )}\n      </Table>\n    </>\n  );\n};\n\ninterface Props {\n  roles: any;\n}\n\nconst PageList = ({ roles }: Props) => {\n  const [pageList, setPageList] = useState([]);\n  const [pageState, handlePagsListFetch] = useHandleFetch({}, 'pageList');\n\n  console.log('myPageList', pageList);\n  const history = useHistory();\n\n  useEffect(() => {\n    const setPages = async () => {\n      const pages = await handlePagsListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n      // @ts-ignore\n      setPageList(pages);\n    };\n    setPages();\n  }, []);\n\n  const handleSearch = (value) => {\n    if (pageState.data.length > 0) {\n      const newBrandList = pageState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setPageList(newBrandList);\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Pages</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search pages..'\n              onSearch={(value) => handleSearch(value)}\n            />\n          </div>\n\n          {isAccess('postPage', roles) && (\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => history.push('/admin/page/new')}\n            >\n              Add New\n            </Button>\n          )}\n        </div>\n\n        <div className='categoryListContainer__afterHeader'>\n          {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n        </div>\n\n        <div className='categoryListContainer__categoryList'>\n          {pageState.done && pageList.length > 0 && (\n            <MyTable roles={roles} setBrandList={setPageList} data={pageList} />\n          )}\n          {pageState.isLoading && <DataTableSkeleton />}\n          {pageState.done && !(pageList.length > 0) && (\n            <div\n              style={{\n                marginTop: '200px',\n              }}\n            >\n              <Empty\n                description='No Page found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(PageList);\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\nimport ReactHtmlParser from 'react-html-parser';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\n// import lib\n// import lib\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\n// import TagEdit from \"./TagEdit\";\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n  roles?: any;\n}\n\nconst NewBrandDetail = ({ roles }: Props) => {\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\n    {},\n    'tagProducts'\n  );\n  const [tagEditVisible, setTagEditVisible] = useState(false);\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\n    {},\n    'pageDetail'\n  );\n  const [tagDetailData, setTagDetailData] = useState({});\n\n  const params = useParams();\n  const history = useHistory();\n  const tagId = params['id'];\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const tagDetailRes = await handleTagDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (tagDetailRes) {\n        console.log('pageDetailRes', tagDetailRes);\n        // @ts-ignore\n        setTagDetailData(tagDetailRes);\n      }\n    };\n\n    getBrandDetail();\n  }, [tagId]);\n\n  useEffect(() => {\n    const getTagProducts = async () => {\n      await handleTagProductsFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n    };\n\n    getTagProducts();\n  }, [tagId]);\n\n  console.log('tagProductsState', tagProductsState);\n\n  console.log('brandParams', params);\n\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Page Detail</h3>\n\n        {tagDetailState.done &&\n          tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && (\n            <>\n              {/* <TagEdit\n                            tagEditVisible={tagEditVisible}\n                            setTagEditVisible={setTagEditVisible}\n                            tagDetailData={tagDetailData}\n                            setTagDetailData={setTagDetailData}\n                        /> */}\n\n              {isAccess('postPage', roles) && (\n                <Button\n                  onClick={() => {\n                    history.push(`/admin/page/edit/${tagDetailData['_id']}`);\n                  }}\n                  type='link'\n                  icon={<EditOutlined />}\n                >\n                  Edit\n                </Button>\n              )}\n            </>\n          )}\n      </div>\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\n        {tagDetailState.done &&\n          tagDetailData &&\n          !(Object.keys(tagDetailData).length > 0) && (\n            <Empty\n              description='No Page found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {tagDetailState.done &&\n          tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && (\n            <>\n              <div className='brandDetailContainer__header'>\n                <div className='brandDetailContainer__header-coverContainer'>\n                  <img\n                    src={\n                      tagDetailData['cover'] && tagDetailData['cover']['cover']\n                    }\n                    alt=''\n                  />\n                </div>\n                <div className='brandDetailContainer__header-info'>\n                  <h2>{tagDetailData['name']}</h2>\n                  {tagDetailData['url'] && (\n                    <h3>\n                      URL:\n                      <span>{tagDetailData['url']}</span>\n                    </h3>\n                  )}\n\n                  {tagDetailData['lastModified'] && (\n                    <h3>\n                      LAST MODIFIED:\n                      <span>\n                        {tagDetailData['lastModified'] &&\n                          moment(tagDetailData['lastModified']).format(\n                            'MMMM Do YYYY, h:mm a'\n                          )}\n                      </span>\n                    </h3>\n                  )}\n\n                  {tagDetailData['added'] && (\n                    <h3>\n                      CREATED:\n                      <span>\n                        {tagDetailData['added'] &&\n                          moment(tagDetailData['added']).format(\n                            'MMMM Do YYYY, h:mm a'\n                          )}\n                      </span>\n                    </h3>\n                  )}\n                </div>\n              </div>\n\n              <div className='brandDetailContainer__heading'>\n                <h3>Content</h3>\n              </div>\n\n              <div\n                className='brandDetailContainer__header'\n                style={{\n                  display: 'block',\n                }}\n              >\n                {ReactHtmlParser(tagDetailData['content'])}\n              </div>\n            </>\n          )}\n      </Skeleton>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(NewBrandDetail);\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import hhooks\nimport { useHandleFetch } from '../../hooks';\n\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Empty,\n  Steps,\n  Tooltip,\n} from 'antd';\n\nimport {\n  CheckCircleOutlined,\n  CaretRightOutlined,\n  CaretLeftOutlined,\n  CaretRightFilled,\n  UserOutlined,\n  InfoCircleOutlined,\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport MetaTags from '../../pages/category/MetaTags';\n\nconst { Option } = Select;\nconst { Step } = Steps;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Page Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({});\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  content: '',\n  bnContent: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n  url: '',\n};\n\nconst steps = [\n  {\n    title: 'Order Information',\n    content: '',\n    // description: 'Add Customer & Products'\n  },\n  {\n    title: 'Billing Address',\n  },\n  {\n    title: 'Confirm Order',\n    content: '',\n  },\n];\n\ninterface Props {}\n\nconst AddNewPage = ({}: Props) => {\n  const [addPageState, handleAddPageFetch] = useHandleFetch({}, 'addPage');\n  const [content, setContent] = useState('<p>Hello from the new page !</p>');\n  const [bnContent, setBnContent] = useState('<p>হ্যালো নতুন পেজ থেকে!</p>');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  const handleAddPageSubmit = async (values: any, actions: any) => {\n    const addOrderRes = await handleAddPageFetch({\n      body: {\n        name: values.name,\n        content: content,\n        url: values.url.trim(),\n        cover: myImages ? myImages[0] && myImages[0].id : '',\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags.join(','),\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags.join(','),\n          name: values.bnName.trim(),\n          content: bnContent,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addOrderRes && addOrderRes.status === 'ok') {\n      // openSuccessNotification();\n      setCoverImageId('');\n      setBnTags([]);\n      setTags([]);\n      setContent('');\n      setBnContent('');\n      setvisibleMedia();\n      setmyImages([]);\n      actions.resetForm();\n    } else {\n      openErrorNotification(\"Couldn't create page, Something went wrong\");\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  useEffect(() => {\n    if (!addPageState['isLoading']) {\n      const error = addPageState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !addPageState['isLoading'] &&\n      Object.keys(addPageState.data).length > 0\n    ) {\n      if (addPageState['data']['status'] === 'ok') {\n        openSuccessNotification('Page Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addPageState]);\n\n  console.log('myImagesdx', myImages);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <div className='addNewPageContainer'>\n            <h3 className='addNewPageContainer__heading'>Add New Page</h3>\n\n            <div className='addNewPageContainer__header'>\n              <div className='dubbleRowInputs'>\n                <div className='dubbleRowInputs__item'>\n                  <Input\n                    label='Title'\n                    value={values.name}\n                    name='name'\n                    placeHolder='About us,Contact us'\n                    isError={\n                      (touched.name && errors.name) ||\n                      (!isSubmitting && addPageState.error['error']['name'])\n                    }\n                    errorString={\n                      (touched.name && errors.name) ||\n                      (!isSubmitting && addPageState.error['error']['name'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('name');\n                    }}\n                  />\n                </div>\n                <div className='dubbleRowInputs__item'>\n                  <Input\n                    label='BN Title'\n                    value={values.bnName}\n                    placeHolder={'ব্লগ...'}\n                    name='bnName'\n                    isError={\n                      (touched.bnName && errors.bnName) ||\n                      (!isSubmitting && addPageState.error['error']['bnName'])\n                    }\n                    errorString={\n                      (touched.bnName && errors.bnName) ||\n                      (!isSubmitting && addPageState.error['error']['bnName'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnName');\n                    }}\n                  />\n                </div>\n              </div>\n\n              <Input\n                label='Slug'\n                value={values.url}\n                name='url'\n                isError={\n                  (touched.url && errors.url) ||\n                  (!isSubmitting && addPageState.error['error']['url'])\n                }\n                errorString={\n                  (touched.url && errors.url) ||\n                  (!isSubmitting && addPageState.error['error']['url'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('url');\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Thumbnail</h3>\n\n              <div className='aboutToUploadImagesContainer'>\n                {myImages &&\n                  // @ts-ignore\n                  myImages.length > 0 &&\n                  myImages.map((image, index) => {\n                    return (\n                      <div className='aboutToUploadImagesContainer__item'>\n                        <div\n                          className='aboutToUploadImagesContainer__item-imgContainer'\n                          onClick={() => {\n                            setvisibleMedia(true);\n                          }}\n                        >\n                          <img src={image.cover} alt={image.alt} />\n                        </div>\n\n                        <span\n                          onClick={() => handleImagesDelete(image.id)}\n                          className='aboutToUploadImagesContainer__item-remove'\n                        >\n                          <CloseOutlined />\n                        </span>\n                      </div>\n                    );\n                  })}\n\n                {myImages ? (\n                  !myImages[0] && (\n                    <Tooltip title={'Attach images'}>\n                      <div\n                        onClick={() => {\n                          setvisibleMedia(true);\n                        }}\n                        className='aboutToUploadImagesContainer__uploadItem'\n                      >\n                        {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                        <FileImageFilled />\n                        {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\n\t\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                        <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                          <PlusOutlined />\n                        </span>\n                      </div>\n                    </Tooltip>\n                  )\n                ) : (\n                  <Tooltip title={'Attach images'}>\n                    <div\n                      onClick={() => {\n                        setvisibleMedia(true);\n                      }}\n                      className='aboutToUploadImagesContainer__uploadItem'\n                    >\n                      {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                      <FileImageFilled />\n                      {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t Select From Library\n\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                      <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                        <PlusOutlined />\n                      </span>\n                    </div>\n                  </Tooltip>\n                )}\n              </div>\n\n              <p\n                style={{\n                  color: '#ff4d4f',\n                  marginTop: '-15px',\n                }}\n              >\n                {addPageState.error['error']['cover']}\n              </p>\n            </div>\n            <div className='addNewPageContainer__body'>\n              <h3 className='inputFieldLabel'>Content</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={content}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setContent(data);\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  marginTop: '15px',\n                }}\n              ></div>\n\n              <h3 className='inputFieldLabel'>BN Content</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={bnContent}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setBnContent(data);\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n            </div>\n\n            <div\n              style={{\n                marginTop: '20px',\n              }}\n            ></div>\n\n            <div className='addNewPageContainer__header'>\n              <div className='dubbleRowInputs'>\n                <div className='dubbleRowInputs__item'>\n                  <Input\n                    label='Meta Title'\n                    value={values.metaTitle}\n                    name='metaTitle'\n                    isError={\n                      (touched.metaTitle && errors.metaTitle) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['metaTitle'])\n                    }\n                    errorString={\n                      (touched.metaTitle && errors.metaTitle) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['metaTitle'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('metaTitle');\n                    }}\n                  />\n                </div>\n                <div className='dubbleRowInputs__item'>\n                  <Input\n                    label='BN Meta Title'\n                    value={values.bnMetaTitle}\n                    placeHolder={''}\n                    name='bnMetaTitle'\n                    isError={\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['bnMetaTitle'])\n                    }\n                    errorString={\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['bnMetaTitle'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnMetaTitle');\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className='dubbleRowInputs'>\n                <div className='dubbleRowInputs__item'>\n                  <TextArea\n                    label='Meta description'\n                    value={values.metaDescription}\n                    placeholder={'meta...'}\n                    name='metaDescription'\n                    isError={\n                      (touched.metaDescription && errors.metaDescription) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['metaDescription'])\n                    }\n                    errorString={\n                      (touched.metaDescription && errors.metaDescription) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['metaDescription'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('metaDescription');\n                    }}\n                  />\n                </div>\n                <div className='dubbleRowInputs__item'>\n                  <TextArea\n                    label='BN Meta Description'\n                    value={values.bnMetaDescription}\n                    placeholder={'এইয় মেট...'}\n                    name='bnMetaDescription'\n                    isError={\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['bnMetaDescription'])\n                    }\n                    errorString={\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['bnMetaDescription'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnMetaDescription');\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className='dubbleRowInputs'>\n                <div className='dubbleRowInputs__item'>\n                  <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n                  <MetaTags\n                    // @ts-ignore\n                    setTags={setTags}\n                    tags={tags}\n                  />\n                </div>\n                <div className='dubbleRowInputs__item'>\n                  <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n                  <MetaTags\n                    // @ts-ignore\n                    setTags={setBnTags}\n                    tags={bnTags}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginTop: '20px',\n              }}\n            ></div>\n\n            <Button\n              loading={addPageState.isLoading}\n              onClick={(e: any) => handleSubmit(e)}\n              className='btnPrimaryClassNameoutline'\n            >\n              Create page\n            </Button>\n          </div>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewPage;\n\n/*\n\n<div className=\"addNewPageContainer\">\n\t\t\t<h3 className='addNewPageContainer__heading'>\n\t\t\t\tAdd New Order\n\t\t\t</h3>\n\t\t\t<div className='addNewPageContainer__header'>\n\n\t\t\t</div>\n\t\t\t<div className='addNewPageContainer__body'>\n\n\t\t\t</div>\n\t\t</div>\n\n\n*/\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import hhooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport { useParams } from 'react-router-dom';\n\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Empty,\n  Steps,\n  Tooltip,\n} from 'antd';\n\nimport {\n  CheckCircleOutlined,\n  CaretRightOutlined,\n  CaretLeftOutlined,\n  CaretRightFilled,\n  UserOutlined,\n  InfoCircleOutlined,\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport MetaTags from '../../pages/category/MetaTags';\n\nconst { Option } = Select;\nconst { Step } = Steps;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Page Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({});\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  content: '',\n  bnContent: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n  url: '',\n};\n\nconst steps = [\n  {\n    title: 'Order Information',\n    content: '',\n    // description: 'Add Customer & Products'\n  },\n  {\n    title: 'Billing Address',\n  },\n  {\n    title: 'Confirm Order',\n    content: '',\n  },\n];\n\ninterface Props {}\n\nconst AddNewPage = ({}: Props) => {\n  const [addPageState, handleAddPageFetch] = useHandleFetch({}, 'updatePage');\n  const [content, setContent] = useState('');\n  const [bnContent, setBnContent] = useState('');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\n    {},\n    'pageDetail'\n  );\n  const [tagDetailData, setTagDetailData] = useState({});\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n\n  const params = useParams();\n  const tagId = params['id'];\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const tagDetailRes = await handleTagDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (tagDetailRes) {\n        console.log('tagDetailRes', tagDetailRes);\n        // @ts-ignore\n        setTagDetailData(tagDetailRes);\n      }\n    };\n\n    getBrandDetail();\n  }, [tagId]);\n\n  useEffect(() => {\n    if (tagDetailData && Object.keys(tagDetailData).length > 0) {\n      if (tagDetailData.cover && tagDetailData.cover['id']) {\n        // @ts-ignore\n        setmyImages([tagDetailData.cover]);\n        setCoverImageId(tagDetailData.cover['id']);\n      }\n    }\n  }, [tagDetailData]);\n\n  useEffect(() => {\n    if (tagDetailData && Object.keys(tagDetailData).length > 0) {\n      setContent(tagDetailData['content'] || '');\n      setBnContent(\n        tagDetailData['bn'] && tagDetailData['bn']['content']\n          ? tagDetailData['bn']['content']\n          : ''\n      );\n    }\n  }, [tagDetailData]);\n\n  const handleAddPageSubmit = async (values: any, actions: any) => {\n    const url = values.url.trim()  ? values.url.replace('/page/','') : ''\n    const addOrderRes = await handleAddPageFetch({\n      urlOptions: {\n        placeHolders: {\n          id: tagDetailData._id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        content: content,\n        url: url,\n        cover: myImages ? myImages[0] && myImages[0].id : '',\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: tags && tags.length > 0 ? tags.join(',') : '',\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags: bnTags && bnTags.length > 0 ? bnTags.join(',') : '',\n          name: values.bnName.trim(),\n          content: bnContent,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addOrderRes && addOrderRes.status === 'ok') {\n      // openSuccessNotification();\n      // setCoverImageId('');\n      // setBnTags([]);\n      // setTags([]);\n      // setContent('');\n      // setBnContent('');\n      // setvisibleMedia();\n      // setmyImages([]);\n      // actions.resetForm();\n    } else {\n      openErrorNotification(\"Couldn't Update page, Something went wrong\");\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'page',\n          itemId: tagDetailData.id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      openSuccessNotification('Set as thumbnail!');\n      // const positionInBrand = () => {\n      //     return brandList.map(item => item.id).indexOf(brandDetailData.id);\n      // }\n\n      // const index = positionInBrand();\n\n      // const prevItem = brandList.find(item => item.id === productRecord.id);\n\n      // if (prevItem) {\n      //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\n      //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\n      //     setBrandList(updateBrandList);\n      // }\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  useEffect(() => {\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  useEffect(() => {\n    if (!addPageState['isLoading']) {\n      const error = addPageState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !addPageState['isLoading'] &&\n      Object.keys(addPageState.data).length > 0\n    ) {\n      if (addPageState['data']['status'] === 'ok') {\n        openSuccessNotification('Page Updated Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addPageState]);\n\n  useEffect(() => {\n    if (tagDetailData && Object.keys(tagDetailData).length > 0) {\n      const metaTags =\n        tagDetailData.metaTags && tagDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        tagDetailData.bn &&\n        tagDetailData.bn['metaTags'] &&\n        tagDetailData.bn['metaTags'].split(',');\n      setTags(metaTags || []);\n      setBnTags(bnMetaTags || []);\n    }\n  }, []);\n\n  const handleDetachSingleImage = async (id) => {\n    console.log('dure', id);\n    console.log('dure2', tagDetailData);\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'page',\n          itemId: tagDetailData.id,\n        },\n      },\n    });\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleAddPageSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{\n        ...initialValues,\n        ...tagDetailData,\n        ...(tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && {\n            bnMetaTitle:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].metaTitle &&\n              tagDetailData['bn'].metaTitle,\n            bnMetaDescription:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].metaDescription &&\n              tagDetailData['bn'].metaDescription,\n            bnName:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].name &&\n              tagDetailData['bn'].name,\n            bnDescription:\n              tagDetailData['bn'] &&\n              tagDetailData['bn'].description &&\n              tagDetailData['bn'].description,\n          }),\n      }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <div className='addNewPageContainer'>\n            <h3 className='addNewPageContainer__heading'>Edit Page</h3>\n\n            <div className='addNewPageContainer__header'>\n              <div className='dubbleRowInputs'>\n                <div className='dubbleRowInputs__item'>\n                  <Input\n                    label='Title'\n                    value={values.name}\n                    name='name'\n                    placeHolder='About us,Contact us'\n                    isError={\n                      (touched.name && errors.name) ||\n                      (!isSubmitting && addPageState.error['error']['name'])\n                    }\n                    errorString={\n                      (touched.name && errors.name) ||\n                      (!isSubmitting && addPageState.error['error']['name'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('name');\n                    }}\n                  />\n                </div>\n                <div className='dubbleRowInputs__item'>\n                  <Input\n                    label='BN Title'\n                    value={values.bnName}\n                    placeHolder={'ব্লগ...'}\n                    name='bnName'\n                    isError={\n                      (touched.bnName && errors.bnName) ||\n                      (!isSubmitting && addPageState.error['error']['bnName'])\n                    }\n                    errorString={\n                      (touched.bnName && errors.bnName) ||\n                      (!isSubmitting && addPageState.error['error']['bnName'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnName');\n                    }}\n                  />\n                </div>\n              </div>\n\n              <Input\n                label='Slug'\n                value={values.url}\n                name='url'\n                isError={\n                  (touched.url && errors.url) ||\n                  (!isSubmitting && addPageState.error['error']['url'])\n                }\n                errorString={\n                  (touched.url && errors.url) ||\n                  (!isSubmitting && addPageState.error['error']['url'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('url');\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Thumbnail</h3>\n\n              <div className='aboutToUploadImagesContainer'>\n                {tagDetailData && Object.keys(tagDetailData).length > 0 && (\n                  <>\n                    {myImages &&\n                      // @ts-ignore\n                      myImages.length > 0 &&\n                      myImages.map((image, index) => {\n                        return (\n                          <div className='aboutToUploadImagesContainer__item'>\n                            <div\n                              className='aboutToUploadImagesContainer__item-imgContainer'\n                              onClick={() => {\n                                setvisibleMedia(true);\n                                // handleSetImageAsThumnail(image);\n                              }}\n                            >\n                              <img src={image.cover} alt={image.alt} />\n                            </div>\n\n                            <span\n                              onClick={() => {\n                                handleImagesDelete(image.id);\n                                handleDetachSingleImage(image.id);\n                              }}\n                              className='aboutToUploadImagesContainer__item-remove'\n                            >\n                              <CloseOutlined />\n                            </span>\n\n                            {/* {coverImageId === image.id ? (\n                              <span className='aboutToUploadImagesContainer__item-cover'>\n                                <CheckOutlined />\n                              </span>\n                            ) : (\n                              !coverImageId &&\n                              index === 0 && (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                  <CheckOutlined />\n                                </span>\n                              )\n                            )} */}\n                          </div>\n                        );\n                      })}\n\n                    {!myImages ||\n                    // @ts-ignore\n                    (myImages && !(myImages && myImages.length > 0)) ? (\n                      <>\n                        <Tooltip title={'Attach images'}>\n                          <div\n                            onClick={() => {\n                              setvisibleMedia(true);\n                            }}\n                            className='aboutToUploadImagesContainer__uploadItem'\n                          >\n                            <FileImageFilled />\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                              <PlusOutlined />\n                            </span>\n                          </div>\n                        </Tooltip>\n                      </>\n                    ) : (\n                      ''\n                    )}\n                  </>\n                )}\n              </div>\n\n              <p\n                style={{\n                  color: '#ff4d4f',\n                  marginTop: '-15px',\n                }}\n              >\n                {addPageState.error['error']['cover']}\n              </p>\n            </div>\n            <div className='addNewPageContainer__body'>\n              <h3 className='inputFieldLabel'>Content</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={content}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setContent(data);\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  marginTop: '15px',\n                }}\n              ></div>\n\n              <h3 className='inputFieldLabel'>BN Content</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={bnContent}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setBnContent(data);\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n            </div>\n\n            <div\n              style={{\n                marginTop: '20px',\n              }}\n            ></div>\n\n            <div className='addNewPageContainer__header'>\n              <div className='dubbleRowInputs'>\n                <div className='dubbleRowInputs__item'>\n                  <Input\n                    label='Meta Title'\n                    value={values.metaTitle}\n                    name='metaTitle'\n                    isError={\n                      (touched.metaTitle && errors.metaTitle) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['metaTitle'])\n                    }\n                    errorString={\n                      (touched.metaTitle && errors.metaTitle) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['metaTitle'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('metaTitle');\n                    }}\n                  />\n                </div>\n                <div className='dubbleRowInputs__item'>\n                  <Input\n                    label='BN Meta Title'\n                    value={values.bnMetaTitle}\n                    placeHolder={''}\n                    name='bnMetaTitle'\n                    isError={\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['bnMetaTitle'])\n                    }\n                    errorString={\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['bnMetaTitle'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnMetaTitle');\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className='dubbleRowInputs'>\n                <div className='dubbleRowInputs__item'>\n                  <TextArea\n                    label='Meta description'\n                    value={values.metaDescription}\n                    placeholder={'meta...'}\n                    name='metaDescription'\n                    isError={\n                      (touched.metaDescription && errors.metaDescription) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['metaDescription'])\n                    }\n                    errorString={\n                      (touched.metaDescription && errors.metaDescription) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['metaDescription'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('metaDescription');\n                    }}\n                  />\n                </div>\n                <div className='dubbleRowInputs__item'>\n                  <TextArea\n                    label='BN Meta Description'\n                    value={values.bnMetaDescription}\n                    placeholder={'এইয় মেট...'}\n                    name='bnMetaDescription'\n                    isError={\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['bnMetaDescription'])\n                    }\n                    errorString={\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                      (!isSubmitting &&\n                        addPageState.error['error']['bnMetaDescription'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnMetaDescription');\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className='dubbleRowInputs'>\n                <div className='dubbleRowInputs__item'>\n                  <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n                  <MetaTags\n                    // @ts-ignore\n                    setTags={setTags}\n                    tags={tags}\n                  />\n                </div>\n                <div className='dubbleRowInputs__item'>\n                  <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n                  <MetaTags\n                    // @ts-ignore\n                    setTags={setBnTags}\n                    tags={bnTags}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginTop: '20px',\n              }}\n            ></div>\n\n            <Button\n              loading={addPageState.isLoading}\n              onClick={(e: any) => handleSubmit(e)}\n              className='btnPrimaryClassNameoutline'\n            >\n              Update page\n            </Button>\n          </div>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewPage;\n\n/*\n\n<div className=\"addNewPageContainer\">\n\t\t\t<h3 className='addNewPageContainer__heading'>\n\t\t\t\tAdd New Order\n\t\t\t</h3>\n\t\t\t<div className='addNewPageContainer__header'>\n\n\t\t\t</div>\n\t\t\t<div className='addNewPageContainer__body'>\n\n\t\t\t</div>\n\t\t</div>\n\n\n*/\n","import React,{useState} from 'react';\nimport { Modal  } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport {useHandleFetch} from '../../hooks';\n\nconst validationSchema = Yup.object().shape({\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n\tdescription: Yup.string().label('Description').required('Description is required')\n});\n\n\n\n\n\ninterface Props {\n\tcategory: any;\n\tsetvisible: any; \n\tvisible: any;\n}\n\nconst QuickEdit = ({ category, setvisible, visible }: Props) => {\n\tconst [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\n\n\tconst handleSubmit = async (values : any, actions : any) => {\n\t  const updateCategoryRes = await handleUpdateCategoryFetch({\n\t\turlOptions: {\n\t\t\tplaceHolders: {\n\t\t\t  id: values.id,\n\t\t\t}\n\t\t  },\n\t\tbody: {\n\t\t\tname: values.name,\n\t\t\tdescription: values.description,\n\t\t},\n\t  });\n\t\n\t  actions.setSubmitting(false);\n\t};\n\t\n\n\tconst handleCancel = (e: any) => {\n        setvisible(false);\n      };\n\n\n\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\n\t\tif(!values.name || !values.description || !isValid){\n\t\t\treturn true; \n\t\t}\n\t\treturn false; \n\t  }\n\n\treturn (\n\t\t<Formik\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\tvalidationSchema={validationSchema}\n\t\tvalidateOnBlur={false}\n\t\tenableReinitialize={true}\n\t\tinitialValues={\n\t\t  {...category}\n\t\t}\n\t  >\n\t\t{({\n\t\t  handleChange,\n\t\t  values,\n\t\t  handleSubmit,\n\t\t  errors,\n\t\t  isValid,\n\t\t  isSubmitting,\n\t\t  touched,\n\t\t  handleBlur,\n\t\t  setFieldTouched,\n\t\t  handleReset,\n\t\t}) => (\n\t\t\t<>\n\t\t\t<Modal\n\t\t\ttitle=\"Quick Edit\"\n\t\t\tvisible={visible}\n\t\t\tonOk={(e : any) => handleSubmit(e)}\n\t\t\tonCancel={handleCancel}\n\t\t\tokText='Update'\n\t\t\tokButtonProps={{\n\t\t\tloading: isSubmitting,\n\t\t\thtmlType: \"submit\",\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\n\t\t\t}}\n  >\n  <Input \n\t\t\t   label='Title'\n\t\t\t   value={values.name}\n\t\t\t   name='name'\n\t\t\t   isError={(touched.name && errors.name) ||\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\n\t\t\t  \n\t\t\t\t  errorString={(touched.name && errors.name) ||\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\n\t\t\t   onChange={(e : any) => {\n\t\t\t\t  handleChange(e);\n\t\t\t\t  setFieldTouched('name');\n\t\t\t\t}}\n\t\t\t   />\n\t\t\t  <TextArea\n\t\t\t   label='Description' \n\t\t\t   value={values.description}\n\t\t\t   name='description'\n\t\t\t   isError={(touched.description && errors.description) ||\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\n\t\t\t  \n\t\t\t\t  errorString={(touched.description && errors.description) ||\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['description'])}\n\t\t\t   onChange={(e : any) => {\n\t\t\t\t  handleChange(e);\n\t\t\t\t  setFieldTouched('description');\n\t\t\t\t}}\n\t\t\t\t />\n  </Modal>\n\t\t\t  \n\t\t\t</>\n\t\t  )}\n\t  </Formik>\n\t);\n};\n\n\nexport default QuickEdit;\n","// @ts-nocheck\n\nimport React from 'react'; \nimport { Tag, Input, Tooltip } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nclass EditableTagGroup extends React.Component {\n  state = {\n    tags: [],\n    inputVisible: false,\n    inputValue: '',\n    editInputIndex: -1,\n    editInputValue: '',\n  };\n\n  handleClose = removedTag => {\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\n    this.setState({ tags });\n  };\n\n  showInput = () => {\n    this.setState({ inputVisible: true }, () => this.input.focus());\n  };\n\n  handleInputChange = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleInputConfirm = () => {\n    const { inputValue } = this.state;\n    let { tags } = this.state;\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      tags = [...tags, inputValue];\n    }\n    this.setState({\n      tags,\n      inputVisible: false,\n      inputValue: '',\n    });\n  };\n\n  handleEditInputChange = e => {\n    this.setState({ editInputValue: e.target.value });\n  };\n\n  handleEditInputConfirm = () => {\n    this.setState(({ tags, editInputIndex, editInputValue }) => {\n      const newTags = [...tags];\n      newTags[editInputIndex] = editInputValue;\n\n      return {\n        tags: newTags,\n        editInputIndex: -1,\n        editInputValue: '',\n      };\n    });\n  };\n\n  saveInputRef = input => {\n    this.input = input;\n  };\n\n  saveEditInputRef = input => {\n    this.editInput = input;\n  };\n\n  render() {\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\n    return (\n      <>\n        {tags.map((tag, index) => {\n          if (editInputIndex === index) {\n            return (\n              <Input\n                ref={this.saveEditInputRef}\n                key={tag}\n                size=\"small\"\n                className=\"tag-input\"\n                value={editInputValue}\n                onChange={this.handleEditInputChange}\n                onBlur={this.handleEditInputConfirm}\n                onPressEnter={this.handleEditInputConfirm}\n              />\n            );\n          }\n\n          const isLongTag = tag.length > 20;\n\n          const tagElem = (\n            <Tag\n              className=\"edit-tag\"\n              key={tag}\n              closable={index !== 0}\n              onClose={() => this.handleClose(tag)}\n            >\n              <span\n                onDoubleClick={e => {\n                  if (index !== 0) {\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\n                      this.editInput.focus();\n                    });\n                    e.preventDefault();\n                  }\n                }}\n              >\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n              </span>\n            </Tag>\n          );\n          return isLongTag ? (\n            <Tooltip title={tag} key={tag}>\n              {tagElem}\n            </Tooltip>\n          ) : (\n            tagElem\n          );\n        })}\n        {inputVisible && (\n          <Input\n          style={{\n            margin: \"10px 0\"\n          }}\n            ref={this.saveInputRef}\n            type=\"text\"\n            size=\"small\"\n            className=\"tag-input\"\n            value={inputValue}\n            onChange={this.handleInputChange}\n            onBlur={this.handleInputConfirm}\n            onPressEnter={this.handleInputConfirm}\n          />\n        )}\n        {!inputVisible && (\n          <Tag className=\"site-tag-plus\" onClick={this.showInput}>\n            <PlusOutlined /> New Value\n          </Tag>\n        )}\n      </>\n    );\n  }\n}\n\nexport default EditableTagGroup","import React, {useState} from 'react';\n\n// import third party ui lib\nimport { Upload, message, Switch, Select, Button, notification,Table, Space, Input as CoolInput,Tooltip, Modal,\n\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\n\nimport {\n\tFileOutlined,\n\tInboxOutlined,\n\tRadiusUpleftOutlined,\n\tRadiusUprightOutlined,\n\tRadiusBottomleftOutlined,\n\tRadiusBottomrightOutlined,\n\tPlusOutlined,\n\tDeleteOutlined,\n\tEditOutlined\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n\n\n/// import hooks\nimport { useFetch, useHandleFetch } from \"../../hooks\";\n\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport QuickEdit from \"./QuickEdit\"\nimport AddAttributeValues from \"./AddAttributeValues\"\n\n\n\nconst validationSchema = Yup.object().shape({\n\tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n\tdescription: Yup.string().label('Description').required('Description is required')\n});\n\n\nconst initialValues = {\n\tname: '',\n\tdescription: ''\n}\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\n\nconst MyTable = ({data}) => {\n    const [visible,setvisible] = useState(false);   \n\tconst [activeCategoryForEdit,setactiveCategoryForEdit] = useState(false); \n    const [deleteTagState, handleDeleteTagFetch] = useHandleFetch({}, 'deleteTag');\n\n\n\tconst handleDeleteCategory = async (id) => {\n        const deleteTagRes = await handleDeleteTagFetch({\n          urlOptions: {\n            placeHolders: {\n              id,\n            }\n            }\n          });\n      }\n\n\n    const handleOk = (e: any) => {\n        setvisible(false);\n      \n      };\n    \n      const handleCancel = (e: any) => {\n        setvisible(false);\n      };\n\n      \n\n    return (\n        <>\n         <Table \n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n        >\n\n          <Column\n           title=\"Name\" \n           dataIndex=\"name\" \n           key=\"id\" \n           className='classnameofthecolumn'\n         \n            />\n\n<Column\n           title=\"Description\" \n           dataIndex=\"description\" \n           key=\"id\" \n           className='classnameofthecolumn'\n         \n            />\n        <Column\n        \n        className='classnameofthecolumn'\n          title=\"\"\n          key=\"action\"\n          align='right'\n          render={(text, record : any) => (\n            <Space size=\"middle\">\n            \n               <Tooltip placement=\"top\" title='Quick Edit Tag'>\n              <span className='iconSize' onClick={() => {\n                setvisible(true)\n                setactiveCategoryForEdit(record); \n              }}> \n              <EditOutlined />\n            \n              </span>\n               </Tooltip>\n\n\n             \n              <Tooltip placement=\"top\" title='Delete Tag'>\n            \n\n             <span \n             className='iconSize iconSize-danger'\n             onClick={() => handleDeleteCategory(record.id)}\n             > \n             <DeleteOutlined/>\n            </span>\n            \n          </Tooltip>\n             \n            </Space>\n          )}\n        />\n      </Table>\n\n\n\n     \n\n\t\t{activeCategoryForEdit &&   <QuickEdit \n    setvisible={setvisible}\n    visible={visible}\n    category={activeCategoryForEdit}/>}\n    </>\n    )\n}\n\n\n\n\n\nconst props = {\n\tname: 'file',\n\tmultiple: true,\n\taction: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n\tonChange(info: any) {\n\t\tconst { status } = info.file;\n\t\tif (status !== 'uploading') {\n\t\t\t// console.log(info.file, info.fileList);\n\t\t}\n\t\tif (status === 'done') {\n\t\t\tmessage.success(`${info.file.name} file uploaded successfully.`);\n\t\t} else if (status === 'error') {\n\t\t\tmessage.error(`${info.file.name} file upload failed.`);\n\t\t}\n\t}\n};\n\ninterface Props {}\n\nconst AttributeList = ({  }: Props) => {\n\tconst tagState = useFetch([], [], 'brandList', {\n\t\turlOptions: {\n\t\t  params: {\n\t\t\tisSubCategory: true,\n\t\t  },\n\t\t},\n\t  });\n\n\t  const [updateCategoryState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateCategory');\n\t  const [addNewCategoryVisible,setAddNewCategoryVisible] = useState(false);   \n\n\n\n\t  const handleSubmit = async (values : any, actions : any) => {\n\t\tconst updateCategoryRes = await handleUpdateCategoryFetch({\n\t\t  urlOptions: {\n\t\t\t  placeHolders: {\n\t\t\t\tid: values.id,\n\t\t\t  }\n\t\t\t},\n\t\t  body: {\n\t\t\t  name: values.name,\n\t\t\t  description: values.description,\n\t\t  },\n\t\t});\n\t  \n\t\tactions.setSubmitting(false);\n\t  };\n\t  \n \n  \n  \n  \n\t\tconst getisSubmitButtonDisabled = (values,isValid) => {\n\t\t  if(!values.name || !values.description || !isValid){\n\t\t\t  return true; \n\t\t  }\n\t\t  return false; \n\t\t}\n\n\n\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  \n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n\treturn (\n\t\t<div className='site-layout-background' style={{ padding: '30px 20px 30px 20px', minHeight: 360 }}>\n\t\t\t<div className='addproductSectionTitleContainer'>\n\t\t\t\t<h2 className='addprouctSectionTitle'>Add Attribute</h2>\n\t\t\t</div>\n\t\t\t<div className='addproductSectionContainer addproductSectionContainer-tags'>\n\t\t\t\t<div className='addproductSection addproductSection-left'>\n\t\t\t\t<Formik\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\tvalidationSchema={validationSchema}\n\t\tvalidateOnBlur={false}\n\t\tenableReinitialize={true}\n\t\tinitialValues={\n\t\t  {...initialValues}\n\t\t}\n\t  >\n\t\t{({\n\t\t  handleChange,\n\t\t  values,\n\t\t  handleSubmit,\n\t\t  errors,\n\t\t  isValid,\n\t\t  isSubmitting,\n\t\t  touched,\n\t\t  handleBlur,\n\t\t  setFieldTouched,\n\t\t  handleReset,\n\t\t}) => (\n\t\t\t<>\n  <Input \n\t\t\t   label='Title'\n\t\t\t   value={values.name}\n\t\t\t   name='name'\n\t\t\t   isError={(touched.name && errors.name) ||\n\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\n\t\t\t  \n\t\t\t\t  errorString={(touched.name && errors.name) ||\n\t\t\t\t\t  (!isSubmitting && updateCategoryState.error['error']['name'])}\n\t\t\t   onChange={(e : any) => {\n\t\t\t\t  handleChange(e);\n\t\t\t\t  setFieldTouched('name');\n\t\t\t\t}}\n\t\t\t   />\n\n\t\t\t   <div style={{\n\t\t\t\t   marginTop: '0px'\n\t\t\t   }}></div>\n\t\t\t  \n\n\t\t\t  <h3 className='inputFieldLabel'> Values</h3>\n\t\t\t\t\n\t\t\t\t<AddAttributeValues />\n\t\t\t\t\t  <Button \n\t\t\t\t\t  style={{\n\t\t\t\t\t\t  display: 'block',\n\t\t\t\t\t\t  marginTop: '20px'\n\t\t\t\t\t  }}\n\t\t\t\t\t\t\ttype='primary'\n\t\t\t\t\t\t\tonClick={(e: any) => handleSubmit(e)}\n\t\t\t\t\t\t\tdisabled={getisSubmitButtonDisabled(values,isValid)}\n\t\t\t\t\t\t\tloading={isSubmitting}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t >\n\t\t\t\t\t\tCreate\n\t\t\t\t\t</Button>\n\t\t\t</>\n\t\t  )}\n\t  </Formik>\n\n\n\t\t\t\t</div>\n                <div className='addproductSection addproductSection-right'> \n\n\t\t\t\t<div className='categoryListContainer'>\n            <div className='categoryListContainer__header'>\n           \n\n          <div className='categoryListContainer__header-searchBar-tag'>\n          {/* <h2 className='categoryListContainer__header-title'>\n            Brand\n            </h2> */}\n\n\n          <Search\n            enterButton={false}\n            className='searchbarClassName'\n          placeholder=\"search categories..\"\n          onSearch={value => console.log(value)}\n          // style={{ width: 300 }}\n        />\n          </div>\n            {/* <Button\n          // type=\"primary\"\n          className='btnPrimaryClassNameoutline'\n          icon={<PlusOutlined />}\n          onClick={() => setAddNewCategoryVisible(true)}\n        >\n        Add New\n            \n            </Button> */}\n            </div>\n\n            <div className='categoryListContainer__afterHeader'>\n            {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n            </div>\n\n     \n\t\t\t\n\t\t\t<div className='categoryListContainer__categoryList'>\n\t\t\t\t{tagState.done && tagState.data.length > 0 && <MyTable data={tagState.data} />}\n\t\t\t\t{tagState.isLoading && <DataTableSkeleton />}\n\t\t\t</div>\n\t\t</div>\n\n                </div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default AttributeList;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Modal, Select, notification, Empty, Spin, Button } from 'antd';\nimport ReactToPdf from 'react-to-pdf';\n\nimport * as Yup from 'yup';\nimport {\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n  PrinterOutlined,\n  FilePdfOutlined,\n} from '@ant-design/icons';\nimport ReactToPrint from 'react-to-print';\n\n// import components\nimport config from '../../config.json';\n\n// import components\nimport { useHandleFetch } from '../../hooks';\n\nimport moment from 'moment';\n\nconst { Option } = Select;\n\nclass ComponentToPrint extends React.Component {\n  render() {\n    const { orderDetailState, invoiceSettingsState, anotherRef } = this.props;\n\n    return (\n      <>\n        <div ref={anotherRef} className='invoiceContainer'>\n          <table\n            width='100%'\n            border={0}\n            cellPadding={0}\n            cellSpacing={0}\n            align='center'\n            className='fullTable'\n            bgcolor='#fff'\n          >\n            <tbody>\n              <tr>\n                <td height={20} />\n              </tr>\n              <tr>\n                <td>\n                  <table\n                    width={600}\n                    border={0}\n                    cellPadding={0}\n                    cellSpacing={0}\n                    align='center'\n                    className='fullTable'\n                    bgcolor='#ffffff'\n                    style={{ borderRadius: '10px 10px 0 0' }}\n                  >\n                    <tbody>\n                      <tr>\n                        <td>\n                          <table\n                            width={570}\n                            border={0}\n                            cellPadding={0}\n                            cellSpacing={0}\n                            align='center'\n                            className='fullPadding'\n                          >\n                            <tbody>\n                              <tr>\n                                <td>\n                                  <table\n                                    width={'100%'}\n                                    border={0}\n                                    cellPadding={0}\n                                    cellSpacing={0}\n                                    align='left'\n                                    className='col'\n                                    style={{\n                                      borderBottom: '1px solid #eee',\n                                      paddingBottom: '40px',\n                                      marginBottom: '40px',\n                                    }}\n                                  >\n                                    <tbody\n                                      style={{\n                                        marginBottom: '50px',\n                                      }}\n                                    >\n                                      <tr>\n                                        <td\n                                          style={{\n                                            fontSize: 12,\n                                            color: '#5b5b5b',\n\n                                            lineHeight: 1.6,\n                                            verticalAlign: 'top',\n                                            textAlign: 'left',\n                                          }}\n                                        >\n                                          <span\n                                            style={{\n                                              display: 'inline-block',\n                                              fontSize: '14px',\n                                              fontWeight: '600',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            Bill From:\n                                          </span>\n                                          <span\n                                            style={{\n                                              display: 'block',\n                                              marginTop: '10px',\n                                              fontSize: '12px',\n                                              fontWeight: '500',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            {orderDetailState.data['name']}\n                                          </span>\n                                          <span\n                                            style={{\n                                              display: 'block',\n                                              marginTop: '10px',\n                                              fontSize: '12px',\n                                              fontWeight: '500',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            {orderDetailState.data['address']}\n                                          </span>\n                                          <span\n                                            style={{\n                                              display: 'block',\n                                              marginTop: '10px',\n                                              fontSize: '12px',\n                                              fontWeight: '500',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            {orderDetailState.data['phone']}\n                                          </span>\n                                          <span\n                                            style={{\n                                              display: 'block',\n                                              marginTop: '10px',\n                                              fontSize: '12px',\n                                              fontWeight: '500',\n                                              color: '#000',\n                                              marginBottom: '50px',\n                                            }}\n                                          >\n                                            {orderDetailState.data['email']}\n                                          </span>\n                                        </td>\n\n                                        <td\n                                          style={{\n                                            verticalAlign: 'top',\n                                          }}\n                                          align='right'\n                                        >\n                                          {' '}\n                                          <img\n                                            src={`${config.baseURL}/images/logo.png`}\n                                            style={{\n                                              width: '175px'\n                                            }}\n                                            alt='logo'\n                                            border={0}\n                                          />\n                                        </td>\n                                      </tr>\n                                    </tbody>\n                                  </table>\n                                  <table\n                                    width={'100%'}\n                                    border={0}\n                                    cellPadding={0}\n                                    cellSpacing={0}\n                                    align='left'\n                                    className='col'\n                                  >\n                                    <tbody>\n                                      <tr className='visibleMobile'>\n                                        <td height={20} />\n                                      </tr>\n                                      <tr>\n                                        <td height={5} />\n                                      </tr>\n                                      <tr></tr>\n                                      <tr></tr>\n                                      <tr>\n                                        <td\n                                          style={{\n                                            fontSize: 12,\n                                            color: '#5b5b5b',\n\n                                            lineHeight: 1.6,\n                                            verticalAlign: 'top',\n                                            textAlign: 'left',\n                                          }}\n                                        >\n                                          <span\n                                            style={{\n                                              display: 'inline-block',\n                                              fontSize: '14px',\n                                              fontWeight: '600',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            Bill To:\n                                          </span>\n                                          <span\n                                            style={{\n                                              display: 'block',\n                                              marginTop: '10px',\n                                              fontSize: '12px',\n                                              fontWeight: '500',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            {invoiceSettingsState.done &&\n                                              invoiceSettingsState.data &&\n                                              Object.keys(\n                                                invoiceSettingsState.data\n                                              ).length > 0 &&\n                                              invoiceSettingsState.data[\n                                                'invoiceTitle'\n                                              ]}\n                                          </span>\n                                          <span\n                                            style={{\n                                              display: 'block',\n                                              marginTop: '10px',\n                                              fontSize: '12px',\n                                              fontWeight: '500',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            {invoiceSettingsState.done &&\n                                              invoiceSettingsState.data &&\n                                              Object.keys(\n                                                invoiceSettingsState.data\n                                              ).length > 0 &&\n                                              invoiceSettingsState.data[\n                                                'address'\n                                              ]}\n                                          </span>\n                                          <span\n                                            style={{\n                                              display: 'block',\n                                              marginTop: '10px',\n                                              fontSize: '12px',\n                                              fontWeight: '500',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            {invoiceSettingsState.done &&\n                                              invoiceSettingsState.data &&\n                                              Object.keys(\n                                                invoiceSettingsState.data\n                                              ).length > 0 &&\n                                              invoiceSettingsState.data[\n                                                'phone'\n                                              ]}\n                                          </span>\n                                          <span\n                                            style={{\n                                              display: 'block',\n                                              marginTop: '10px',\n                                              fontSize: '12px',\n                                              fontWeight: '500',\n                                              color: '#000',\n                                            }}\n                                          >\n                                            {invoiceSettingsState.done &&\n                                              invoiceSettingsState.data &&\n                                              Object.keys(\n                                                invoiceSettingsState.data\n                                              ).length > 0 &&\n                                              invoiceSettingsState.data[\n                                                'email'\n                                              ]}\n                                          </span>\n                                        </td>\n\n                                        <td\n                                          style={{\n                                            fontSize: 13,\n                                            color: '#5b5b5b',\n\n                                            lineHeight: 1.6,\n                                            verticalAlign: 'top',\n                                            textAlign: 'right',\n                                          }}\n                                        >\n                                          <small>ORDER</small> #\n                                          {orderDetailState.data['shortCode']}\n                                          <br />\n                                          <span>\n                                            {orderDetailState.data[\n                                              'date_created'\n                                            ] &&\n                                              moment(\n                                                orderDetailState.data[\n                                                  'date_created'\n                                                ]\n                                              ).format('MMMM Do YYYY, h:mm a')}\n                                          </span>\n                                        </td>\n                                      </tr>\n                                    </tbody>\n                                  </table>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          {orderDetailState.data &&\n            orderDetailState.data['products'] &&\n            orderDetailState.data['products'].length > 0 && (\n              <table\n                width='100%'\n                border={0}\n                cellPadding={0}\n                cellSpacing={0}\n                align='center'\n                className='fullTable'\n                bgcolor='#fff'\n              >\n                <tbody>\n                  <tr>\n                    <td>\n                      <table\n                        width={600}\n                        border={0}\n                        cellPadding={0}\n                        cellSpacing={0}\n                        align='center'\n                        className='fullTable'\n                        bgcolor='#ffffff'\n                      >\n                        <tbody>\n                          <tr></tr>\n                          <tr className='hiddenMobile'>\n                            <td height={60} />\n                          </tr>\n                          <tr className='visibleMobile'>\n                            <td height={40} />\n                          </tr>\n                          <tr>\n                            <td>\n                              <table\n                                width={570}\n                                border={0}\n                                cellPadding={0}\n                                cellSpacing={0}\n                                align='center'\n                                className='fullPadding'\n                              >\n                                <tbody>\n                                  <tr\n                                    style={{\n                                      backgroundColor: '#eee',\n                                    }}\n                                  >\n                                    <th\n                                      style={{\n                                        fontSize: 12,\n                                        color: '#5b5b5b',\n                                        fontWeight: 'normal',\n                                        lineHeight: 1.6,\n                                        verticalAlign: 'top',\n                                        padding: '5px 10px 7px 5px',\n                                      }}\n                                      width='30%'\n                                      align='left'\n                                    >\n                                      Name\n                                    </th>\n                                    <th\n                                      style={{\n                                        fontSize: 12,\n                                        color: '#5b5b5b',\n                                        fontWeight: 'normal',\n                                        lineHeight: 1.6,\n                                        verticalAlign: 'center',\n                                      }}\n                                      align='left'\n                                    >\n                                      Quantity\n                                    </th>\n                                    <th\n                                      style={{\n                                        fontSize: 12,\n                                        color: '#1e2b33',\n                                        fontWeight: 'normal',\n                                        lineHeight: 1.6,\n                                        verticalAlign: 'center',\n                                      }}\n                                      align='left'\n                                    >\n                                      Unit Price\n                                    </th>\n                                    <th\n                                      style={{\n                                        fontSize: 12,\n                                        color: '#1e2b33',\n                                        fontWeight: 'normal',\n                                        lineHeight: 1.6,\n                                        verticalAlign: 'center',\n                                      }}\n                                      align='left'\n                                    >\n                                      {/* Unit Price */}\n                                    </th>\n                                  </tr>\n\n                                  {orderDetailState.data['products'].map(\n                                    (item) => {\n                                      return (\n                                        <>\n                                          <tr>\n                                            <td\n                                              height={1}\n                                              style={{\n                                                background: '#bebebe',\n                                              }}\n                                              colSpan={4}\n                                            />\n                                          </tr>\n                                          <tr>\n                                            <td height={10} colSpan={4} />\n                                          </tr>\n                                          <tr>\n                                            <td\n                                              width='30%'\n                                              style={{\n                                                fontSize: 12,\n                                                color: '#ff0000',\n                                                lineHeight: 1.6,\n                                                verticalAlign: 'top',\n                                                padding: '10px 0',\n                                              }}\n                                              className='article'\n                                            >\n                                              {item.name}\n                                            </td>\n\n                                            <td\n                                              style={{\n                                                fontSize: 12,\n                                                color: '#646a6e',\n                                                lineHeight: 1.6,\n                                                verticalAlign: 'top',\n                                                padding: '10px 0',\n                                              }}\n                                              align='left'\n                                            >\n                                              {item.quantity}\n                                            </td>\n                                            <td\n                                              style={{\n                                                fontSize: 12,\n                                                color: '#1e2b33',\n                                                lineHeight: 1.6,\n                                                verticalAlign: 'top',\n                                                padding: '10px 0',\n                                              }}\n                                              align='left'\n                                            >\n                                              {item.unitPrice}\n                                            </td>\n\n                                            <td\n                                              style={{\n                                                fontSize: 12,\n\n                                                color: '#1e2b33',\n                                                lineHeight: 1.6,\n                                                verticalAlign: 'top',\n                                                padding: '10px 0',\n                                              }}\n                                              align='left'\n                                            >\n                                              {item.quantity * item.unitPrice}\n                                            </td>\n                                          </tr>\n                                        </>\n                                      );\n                                    }\n                                  )}\n                                  <tr>\n                                    <td\n                                      height={1}\n                                      colSpan={4}\n                                      style={{\n                                        borderBottom: '1px solid #eee',\n                                      }}\n                                    />\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td height={20} />\n                          </tr>\n                        </tbody>\n                      </table>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            )}\n          <table\n            width='100%'\n            border={0}\n            cellPadding={0}\n            cellSpacing={0}\n            align='center'\n            className='fullTable'\n            bgcolor='#fff'\n          >\n            <tbody>\n              <tr>\n                <td>\n                  <table\n                    width={600}\n                    border={0}\n                    cellPadding={0}\n                    cellSpacing={0}\n                    align='center'\n                    className='fullTable'\n                    bgcolor='#ffffff'\n                  >\n                    <tbody\n                      style={{\n                        marginBottom: '20px',\n                      }}\n                    >\n                      <tr>\n                        <td>\n                          {/* Table Total */}\n                          <table\n                            style={{\n                              marginBottom: '50px',\n                              marginTop: '30px',\n                            }}\n                            width={570}\n                            border={0}\n                            cellPadding={0}\n                            cellSpacing={0}\n                            align='center'\n                            className='fullPadding'\n                          >\n                            <tbody>\n                              <tr>\n                                <td\n                                  style={{\n                                    fontSize: 12,\n                                    color: '#646a6e',\n                                    lineHeight: 1.6,\n                                    verticalAlign: 'top',\n                                    textAlign: 'right',\n                                  }}\n                                >\n                                  Total Price\n                                </td>\n                                <td\n                                  style={{\n                                    fontSize: 13,\n                                    color: '#646a6e',\n                                    lineHeight: 1.6,\n                                    verticalAlign: 'top',\n                                    textAlign: 'right',\n                                    whiteSpace: 'nowrap',\n                                    fontWeight: '600',\n                                    marginBottom: '5px',\n                                  }}\n                                  width={80}\n                                >\n                                  {orderDetailState.data['total']}\n                                </td>\n                              </tr>\n                              <tr>\n                                <td\n                                  style={{\n                                    fontSize: 12,\n                                    color: '#646a6e',\n                                    lineHeight: 1.6,\n                                    verticalAlign: 'top',\n                                    textAlign: 'right',\n                                  }}\n                                >\n                                  Shipping &amp; Delivery\n                                </td>\n                                <td\n                                  style={{\n                                    fontSize: 12,\n                                    color: '#646a6e',\n                                    lineHeight: 1.6,\n                                    verticalAlign: 'top',\n                                    textAlign: 'right',\n                                  }}\n                                >\n                                  {orderDetailState.data &&\n                                  orderDetailState.data['total'] > 5000\n                                    ? 'Free'\n                                    : orderDetailState.data &&\n                                      orderDetailState.data[\n                                        'deliveryCharge'\n                                      ] === 0\n                                    ? 'Free'\n                                    : `+${\n                                        orderDetailState.data &&\n                                        orderDetailState.data['deliveryCharge']\n                                      }`}\n                                </td>\n                              </tr>\n                              <tr>\n                                <td\n                                  style={{\n                                    fontSize: 12,\n                                    color: '#000',\n                                    lineHeight: 1.6,\n                                    verticalAlign: 'top',\n                                    textAlign: 'right',\n                                  }}\n                                >\n                                  <strong>Grand Total (Incl.Delivery)</strong>\n                                </td>\n                                <td\n                                  style={{\n                                    fontSize: 12,\n                                    color: '#000',\n                                    lineHeight: 1.6,\n                                    verticalAlign: 'top',\n                                    textAlign: 'right',\n                                  }}\n                                >\n                                  <strong>\n                                    {orderDetailState.data['total'] +\n                                      orderDetailState.data['deliveryCharge'] ||\n                                      0}\n                                  </strong>\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </>\n    );\n  }\n}\n\nconst OrderInvoice = ({ id, setShowInvoice, showInvoice }) => {\n  const [orderDetailState, handleOrderDetailFetch] = useHandleFetch(\n    {},\n    'orderDetail'\n  );\n  const componentRef = useRef();\n\n  const ref = React.createRef();\n  const options = {\n    orientation: 'a4',\n    unit: 'in',\n    format: [4, 2],\n  };\n\n  const [invoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch(\n    {},\n    'invoiceSettingsDetail'\n  );\n\n  useEffect(() => {\n    const getSiteSettings = async () => {\n      const invoiceSettingsRes = await handlSiteInvoiceSettingsFetch({});\n      // console.log('siteSettingsRes', siteSettingsRes);\n    };\n    getSiteSettings();\n  }, []);\n\n  useEffect(() => {\n    const getOrderDetail = async () => {\n      await handleOrderDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id,\n          },\n        },\n      });\n    };\n\n    getOrderDetail();\n  }, [id]);\n\n  console.log('orderDetailState', orderDetailState);\n\n  const handleOk = () => {\n    window.print();\n  };\n\n  return (\n    <Modal\n      title='Invoice'\n      visible={showInvoice}\n      bodyStyle={{\n        margin: '0',\n        padding: '10px',\n      }}\n      style={{\n        top: '40px',\n      }}\n      onCancel={() => setShowInvoice(false)}\n      width={'48vw'}\n      okText='Print'\n      onOk={() => handleOk()}\n      footer={false}\n    >\n      {orderDetailState.isLoading && <Spin />}\n      {orderDetailState.data && Object.keys(orderDetailState.data).length > 0 && (\n        <>\n          <div\n            style={{\n              display: 'flex',\n              width: '100%',\n              justifyContent: 'flex-end',\n              padding: '20px 20px 20px 20px',\n            }}\n          >\n            <ReactToPdf\n              targetRef={ref}\n              y={15}\n              x={25}\n              filename={`order-${orderDetailState.data['shortCode']}-invoice`}\n              options={{\n                orientation: 'a4',\n              }}\n            >\n              {({ toPdf }) => (\n                <Button\n                  style={{\n                    marginRight: '15px',\n                  }}\n                  onClick={toPdf}\n                  // type=\"primary\"\n                  className='btnPrimaryClassNameoutline'\n                  icon={<FilePdfOutlined />}\n                >\n                  Download as pdf\n                </Button>\n              )}\n            </ReactToPdf>\n            <ReactToPrint\n              documentTitle='Order Invoice'\n              trigger={() => (\n                <Button\n                  // type=\"primary\"\n                  className='btnPrimaryClassNameoutline'\n                  icon={<PrinterOutlined />}\n                >\n                  Print\n                </Button>\n              )}\n              content={() => componentRef.current}\n            />\n          </div>\n          <ComponentToPrint\n            ref={componentRef}\n            anotherRef={ref}\n            invoiceSettingsState={invoiceSettingsState}\n            orderDetailState={orderDetailState}\n          />\n        </>\n      )}\n    </Modal>\n  );\n};\nexport default OrderInvoice;\n","import React, { useState, useEffect } from 'react';\nimport { useHandleFetch } from '../../hooks';\n\n\n\n\n// import lib \nimport { Skeleton } from 'antd'\n\n\n\ninterface Props {\n    productId?: any;\n    quantity?: any;\n    item?: any\n    variation?: any;\n}\n\nconst CartOverLayCartItem = ({\n    productId,\n    quantity,\n    item,\n    variation\n}: Props) => {\n\n\n    const [productDetailState, handleProductFetch] = useHandleFetch(\n        {},\n        'productDetailById'\n    );\n    const [product, setProduct] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    const [modifiedPrice, setModifiedPrice] = useState('');\n    const [selectedVariationId, setSelectedVariationId] = useState(variation);\n\n\n\n    useEffect(() => {\n        setIsLoading(true);\n        const getAndSetProduct = async () => {\n            const product = await handleProductFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: productId,\n                    },\n                },\n            });\n\n            // @ts-ignore\n            setProduct(product);\n            setIsLoading(false);\n        };\n        getAndSetProduct()\n    }, []);\n\n\n\n\n\n\n\n    console.log('modifiedPrice', modifiedPrice);\n    return (\n        <>\n\n            <Skeleton loading={productDetailState.isLoading}>\n                {productDetailState.data && Object.keys(productDetailState.data).length > 0 && (\n                    <div className='cart-item' key={''}>\n\n\n                        <img\n\n                            src={productDetailState.data['cover'] && productDetailState.data['cover']['cover']}\n                            alt='Img'\n                            style={{\n                                cursor: 'pointer',\n                            }}\n                        />\n                        <div className='cart-item-info'>\n                            <h4\n\n                            >\n                                {productDetailState.data['name']}\n                            </h4>\n                            <h5\n                            >\n                                Quantity : {quantity}\n                            </h5>\n                            <h5\n                            >\n                                {item['unitPrice']}\n                            </h5>\n\n\n                            {/* {pricingOptions && pricingOptions.length > 0 && pricingOptions.map(tag => (\n                            <>\n                                <span\n                                    onClick={() => handleAttributeChange(tag.value)}\n                                    className={selectedVariationId === tag.value ? 'product-attributeTag product-attributeTag-active' : 'product-attributeTag'}>\n                                    {tag.label}\n                                </span>\n                            </>\n                        ))} */}\n\n                            {/* <span\n             style={{\n               display: 'inline-block',\n               background: '#fafafa',\n               padding: '3px 3px',\n               borderRadius: 1,\n               fontSize: '12px',\n               marginRight: '5px',\n               color: '#777',\n               marginTop: '5px'\n             }}\n           >\n             15KG\n             </span> */}\n\n                        </div>\n                        {/* <span\n                        onClick={handleAttributeDelete}\n                        className='remove-item' >\n                        <i className='fa fa-times'></i>\n                    </span> */}\n\n                    </div>\n                )}\n            </Skeleton>\n\n        </>\n    );\n};\n\n// @ts-ignore\nexport default CartOverLayCartItem;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport { useHandleFetch } from '../../hooks';\nimport OrderInvoice from \"./OrderInvoice.jsx\";\nimport ProductItemForOrderDetail from \"./productItemForOrderDetail\";\n\n\nconst { Option } = Select;\n\n\nconst validationSchema = Yup.object().shape({\n    // name: Yup.string()\n    //     .label('Name')\n    //     .required()\n    //     .min(2, 'Name must have at least 2 characters '),\n    // pickUpLocation: Yup.string()\n    //     .label('Pick up Location')\n    //     .required()\n    //     .min(2, 'Pick up Location must have at least 2 characters '),\n    // time: Yup.string()\n    //     .label('Time')\n    //     .required()\n    //     .min(2, 'Time must have at least 2 characters '),\n\n});\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Tag Created',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.error({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\ninterface Props {\n    customer: any;\n    setvisible: any;\n    visible: any;\n    orderList?: any;\n    setOrderList?: any;\n}\n\nconst QuickEdit = ({ customer, setvisible, visible, setOrderList, orderList }: Props) => {\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrder');\n\n    console.log('customerVie', customer);\n\n    const [selectedCountryValue, setselectedCountryValue] = useState('');\n    const [selectedCityValue, setselectedCityValue] = useState('');\n\n    const [countryOptions, setcountryOptions] = useState([]);\n    const [cityOptions, setcityOptions] = useState([]);\n\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\n        [],\n        'countryList'\n    );\n\n    const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n\n    const [countryList, setCountryList] = useState([]);\n    const [cityList, setCityList] = useState([]);\n    const [showInvoice, setShowInvoice] = useState(false);\n\n\n\n    const handleSubmit = async (values: any, actions: any) => {\n        // console.log('selectedCityValue', selectedCityValue); \n        console.log('cooles', customer)\n\n        const addRegionRes = await handleUpdateOrderFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: customer.id,\n                }\n            },\n            body: {\n                billingAddress: {\n                    phone: values.phone,\n                    email: values.email,\n                    address1: values.address1,\n                    address2: values.address2,\n                    firstName: values.firstName,\n                    lastName: values.lastName,\n                    city: selectedCityValue || customer['billingAddress']['city'],\n                    country: selectedCountryValue || customer['billingAddress']['country'],\n                },\n                products: customer.products,\n                customerId: customer.customerId\n                // charge\n            },\n        });\n\n        // @ts-ignore\n        if (addRegionRes && addRegionRes.status === 'ok') {\n            openSuccessNotification();\n\n            const positionInTag = () => {\n                return orderList.map(item => item.id).indexOf(customer.id);\n            }\n\n            const index = positionInTag();\n\n            // @ts-ignore\n            const updatedItem = Object.assign({}, orderList[index], { ...addRegionRes });\n            const updateRegionList = [...orderList.slice(0, index), updatedItem, ...orderList.slice(index + 1)];\n            setOrderList(updateRegionList);\n\n        }\n        else {\n            openErrorNotification();\n        }\n\n        actions.setSubmitting(false);\n        setvisible(false)\n\n    };\n\n\n    const onChangeCity = (value) => {\n        setselectedCityValue(value);\n    }\n\n    const onChangeCountry = (value) => {\n        setselectedCountryValue(value);\n    }\n\n    useEffect(() => {\n        const setCountries = async () => {\n            const CountryListRes = await handleCountryListFetch({});\n\n            // @ts-ignore\n            if (CountryListRes && CountryListRes.length > 0) {\n                // @ts-ignore\n                const countryOptions = CountryListRes.map((country) => {\n                    return {\n                        value: country.name,\n                        name: country.name\n                    };\n                });\n                setcountryOptions(countryOptions);\n            }\n        };\n\n        setCountries();\n    }, []);\n\n\n    useEffect(() => {\n        const setCities = async () => {\n            const cityListRes = await handleCityListFetch({\n                urlOptions: {\n                    placeHolders: {\n                        country: selectedCountryValue,\n                    },\n                },\n            });\n\n            // @ts-ignore\n            if (cityListRes && cityListRes.length > 0) {\n                // @ts-ignore\n                const cityOptions = cityListRes.map((city) => {\n                    return {\n                        value: city.name,\n                        name: city.name\n                    };\n                });\n                setcityOptions(cityOptions);\n            }\n        };\n\n        setCities();\n    }, [selectedCountryValue]);\n\n\n\n\n\n\n\n    const handleCancel = (e: any) => {\n        setvisible(false);\n    };\n\n\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!isValid ||\n            !values.firstName ||\n            !values.LastName) {\n\n            return true;\n        }\n        return false;\n    }\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={\n                { ...customer.billingAddress ? customer.billingAddress : {} }\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                            title=\"Order detail\"\n                            visible={visible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Create'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\n                            }}\n                            bodyStyle={{\n                                margin: '0',\n                                padding: '10px'\n                            }}\n                            width={'70vw'}\n                        >\n\n\n                            <div className='dubbleRowInputs'>\n                                <div className='dubbleRowInputs__item'>\n                                    <Input\n                                        label='First Name'\n                                        value={values.firstName}\n                                        name='firstName'\n                                        isError={(touched.firstName && errors.firstName) ||\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\n\n                                        errorString={(touched.firstName && errors.firstName) ||\n                                            (!isSubmitting && updateOrderState.error['error']['firstName'])}\n                                        onChange={(e: any) => {\n                                            handleChange(e);\n                                            setFieldTouched('firstName');\n                                        }}\n                                    />\n                                </div>\n                                <div className='dubbleRowInputs__item'>\n                                    <Input\n                                        label='Last Name'\n                                        value={values.lastName}\n                                        name='lastName'\n                                        isError={(touched.lastName && errors.lastName) ||\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\n\n                                        errorString={(touched.lastName && errors.lastName) ||\n                                            (!isSubmitting && updateOrderState.error['error']['lastName'])}\n                                        onChange={(e: any) => {\n                                            handleChange(e);\n                                            setFieldTouched('lastName');\n                                        }}\n                                    />\n                                </div>\n\n\n\n\n                            </div>\n\n\n\n                            <div className='dubbleRowInputs'>\n                                <div className='dubbleRowInputs__item'>\n                                    <Input\n                                        label='Phone'\n                                        value={values.phone}\n                                        name='phone'\n                                        isError={(touched.phone && errors.phone) ||\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\n\n                                        errorString={(touched.phone && errors.phone) ||\n                                            (!isSubmitting && updateOrderState.error['error']['phone'])}\n                                        onChange={(e: any) => {\n                                            handleChange(e);\n                                            setFieldTouched('phone');\n                                        }}\n                                    />\n                                </div>\n                                <div className='dubbleRowInputs__item'>\n                                    <Input\n                                        label='Email'\n                                        value={values.email}\n                                        name='email'\n                                        isError={(touched.email && errors.email) ||\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\n\n                                        errorString={(touched.email && errors.email) ||\n                                            (!isSubmitting && updateOrderState.error['error']['email'])}\n                                        onChange={(e: any) => {\n                                            handleChange(e);\n                                            setFieldTouched('email');\n                                        }}\n                                    />\n                                </div>\n                            </div>\n\n\n                            <div className='dubbleRowInputs'>\n                                <div className='dubbleRowInputs__item'>\n                                    <h3 className='inputFieldLabel'>\n                                        Country\n\t\t\t\t\t\t\t\t\t</h3>\n\n\n                                    <Form.Item\n                                        validateStatus={(updateOrderState.error['error']['country']) ? \"error\" : \"\"}\n                                        help={updateOrderState.error['error']['country']}\n                                    // noStyle={true}\n                                    >\n                                        <Select\n                                            defaultValue={values.country}\n                                            notFoundContent={<Empty description='No Country Found' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\n                                            showSearch\n                                            style={{ width: '100%' }}\n                                            placeholder='Select a Country'\n                                            optionFilterProp='children'\n                                            onChange={onChangeCountry}\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                                        >\n                                            {countryListState.done &&\n                                                countryListState.data.length > 0 &&\n                                                countryOptions.map((option) => {\n                                                    return <Option value={option.value}>{option.name}</Option>;\n                                                })}\n                                        </Select>\n\n                                    </Form.Item>\n\n\n\n\n                                </div>\n                                <div className='dubbleRowInputs__item'>\n                                    <h3 className='inputFieldLabel'>\n                                        City\n                                    </h3>\n                                    <Form.Item\n                                        // noStyle={true}\n                                        validateStatus={(updateOrderState.error['error']['city']) ? \"error\" : \"\"}\n                                        help={updateOrderState.error['error']['city']}\n\n                                    >\n                                        <Select\n                                            defaultValue={values.city}\n                                            className='selectClassName'\n                                            notFoundContent={<Empty description='First Select a Country' image={Empty.PRESENTED_IMAGE_SIMPLE} />}\n                                            showSearch\n                                            style={{ width: '100%' }}\n                                            placeholder='Select a city'\n                                            optionFilterProp='children'\n                                            onChange={onChangeCity}\n                                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                                        >\n                                            {cityListState.done &&\n                                                cityListState.data.length > 0 &&\n                                                cityOptions.map((option) => {\n                                                    return <Option value={option.value}>{option.name}</Option>;\n                                                })}\n                                        </Select>\n                                    </Form.Item>\n                                </div>\n\n                            </div>\n\n                            <div style={{\n                                marginTop: '12px'\n                            }}></div>\n\n\n\n                            <div className='dubbleRowInputs'>\n                                <div className='dubbleRowInputs__item'>\n                                    <Input\n                                        label='Address'\n                                        value={values.address1}\n                                        name='address1'\n                                        isError={(touched.address1 && errors.address1) ||\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\n\n                                        errorString={(touched.address1 && errors.address1) ||\n                                            (!isSubmitting && updateOrderState.error['error']['address1'])}\n                                        onChange={(e: any) => {\n                                            handleChange(e);\n                                            setFieldTouched('address1');\n                                        }}\n                                    />\n                                </div>\n                                <div className='dubbleRowInputs__item'>\n                                    <Input\n                                        label='Address 2'\n                                        value={values.address2}\n                                        name='address2'\n                                        isError={(touched.address2 && errors.address2) ||\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\n\n                                        errorString={(touched.address2 && errors.address2) ||\n                                            (!isSubmitting && updateOrderState.error['error']['address2'])}\n                                        onChange={(e: any) => {\n                                            handleChange(e);\n                                            setFieldTouched('address2');\n                                        }}\n                                    />\n                                </div>\n\n                            </div>\n\n                            <div style={{\n                                marginTop: '12px'\n                            }}></div>\n\n\n\n                                    {customer.products && customer.products.length > 0 && (\n                                        <h3 className='inputFieldLabel'>\n                                        Products \n                                    </h3>\n                                    )}\n\n\n                            {customer.products && customer.products.length > 0 && <> \n                            \n                                {customer.products.map(item => {\n                    return <ProductItemForOrderDetail\n                        productId={item._id}\n                        quantity={item.quantity}\n                        item={item}\n                        variation={item.variation}\n                    />;\n                })}\n\n                            </>}\n\n\n                            <div style={{\n                                marginTop: '20px'\n                            }}></div>\n                    <Button\n                    onClick={() => setShowInvoice(true)}\n                    className='btnPrimaryClassNameoutline'\n                    >\n                        Generate Invoice\n                        \n                        </Button>\n\n            <div style={{\n                                marginBottom: '20px'\n                            }}></div>\n\n            <OrderInvoice\n            id={customer.id}\n            setShowInvoice={setShowInvoice}\n             showInvoice={showInvoice} \n            />\n\n                            \n\n\n                        </Modal>\n\n                    </>\n                )}\n\n\n\n        </Formik>\n    );\n};\n\n\nexport default QuickEdit;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { CSVLink } from 'react-csv';\n\nimport {\n  Table,\n  Badge,\n  Menu,\n  Dropdown,\n  Space,\n  Tag,\n  Button,\n  Input,\n  notification,\n  Popconfirm,\n  Select,\n  DatePicker,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  CheckOutlined,\n  CheckCircleOutlined,\n  DownOutlined,\n  DownloadOutlined,\n} from '@ant-design/icons';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport AddNewOrder from './AddNewOrder';\nimport QuickEdit from './QuickEdit';\nimport Empty from '../../components/Empty';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\n// import lib\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = Input;\nconst { RangePicker } = DatePicker;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst { Option } = Select;\n\ninterface myTableProps {\n  data: any;\n  setOrderList: any;\n  roles: any;\n}\n\nconst MyTable = ({ data, setOrderList, roles }: myTableProps) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteOrderState, handleDeleteOrderFetch] = useHandleFetch(\n    {},\n    'deleteOrder'\n  );\n  const [updateOrderStatusState, handleUpdateOrderStatusFetch] = useHandleFetch(\n    {},\n    'updateOrderStatus'\n  );\n\n  const history = useHistory();\n\n  const handleDeleteRegion = async (id) => {\n    const deleteOrderRes = await handleDeleteOrderFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteOrderRes && deleteOrderRes.status === 'ok') {\n      openSuccessNotification('Deleted Order');\n      const newOrderList = data.filter((item) => item.id !== id);\n      setOrderList(newOrderList);\n    }\n  };\n\n  const handleUpdateOrderStatus = async (record, id, newStatus) => {\n    const updateOrderStatusRes = await handleUpdateOrderStatusFetch({\n      urlOptions: {\n        params: {\n          newOrderstatus: newStatus,\n        },\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updateOrderStatusRes && updateOrderStatusRes.status === 'ok') {\n      openSuccessNotification('Updated Order Status');\n\n      const positionInTag = () => {\n        return data.map((item) => item.id).indexOf(id);\n      };\n\n      const index = positionInTag();\n      console.log('recordis', record, index);\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, data[index], { status: newStatus });\n      const updateOrderList = [\n        ...data.slice(0, index),\n        updatedItem,\n        ...data.slice(index + 1),\n      ];\n      console.log('updateOrderList', updateOrderList, '-----', setOrderList);\n      setOrderList(updateOrderList);\n    } else {\n      openErrorNotification(\n        \"Couldn't changed order status, Something went wrong\"\n      );\n    }\n  };\n\n  const StatusItemMenu = (record, id) => {\n    return (\n      <Menu>\n        <Menu.Item\n          onClick={() => handleUpdateOrderStatus(record, id, 'pending')}\n          key='1'\n          icon={<CheckOutlined />}\n        >\n          Pending\n        </Menu.Item>\n\n        <Menu.Item\n          onClick={() => handleUpdateOrderStatus(record, id, 'processing')}\n          key='1'\n          icon={<CheckOutlined />}\n        >\n          Processing\n        </Menu.Item>\n\n        <Menu.Item\n          onClick={() => handleUpdateOrderStatus(record, id, 'sentForDelivery')}\n          key='1'\n          icon={<CheckOutlined />}\n        >\n          Sent for delivery\n        </Menu.Item>\n\n        <Menu.Item\n          onClick={() => handleUpdateOrderStatus(record, id, 'complete')}\n          key='1'\n          icon={<CheckOutlined />}\n        >\n          Completed\n        </Menu.Item>\n\n        <Menu.Item\n          onClick={() => handleUpdateOrderStatus(record, id, 'cancel')}\n          key='1'\n          icon={<CheckOutlined />}\n        >\n          Cancel\n        </Menu.Item>\n\n        {/* <Menu.Item\n                onClick={() => handleUpdateOrderStatus(record,id,'deliver')}\n                key=\"1\" icon={<CheckOutlined />}>\n                Delivered\n              </Menu.Item>\n     */}\n      </Menu>\n    );\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Code'\n          dataIndex='shortCode'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  // setvisible(true)\n                  history.push(`/admin/order/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                #{text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  // setvisible(true)\n                  history.push(`/admin/order/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Delivery'\n          dataIndex='deliveryName'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Created'\n          dataIndex='date_created'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                }}\n              >\n                {text && moment(text).format('MMMM Do YYYY, h:mm a')}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Total Price'\n          dataIndex='total'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          align='right'\n          title='Status'\n          dataIndex='status'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              {isAccess('postOrder', roles) ? (\n                <Dropdown\n                  overlay={() => StatusItemMenu(record, record.id)}\n                  placement='bottomRight'\n                >\n                  <a href='##'>\n                    <span\n                      // className={'product-attributeTag'}\n                      style={{\n                        fontSize: '12px',\n                      }}\n                    >\n                      {text}\n                      <span\n                        style={{\n                          marginLeft: '5px',\n                          fontSize: '10px',\n                        }}\n                      >\n                        <DownOutlined />\n                      </span>\n                    </span>\n                  </a>\n                </Dropdown>\n              ) : (\n                <a href='##'>\n                  <span\n                    // className={'product-attributeTag'}\n                    style={{\n                      fontSize: '12px',\n                    }}\n                  >\n                    {text}\n                    <span\n                      style={{\n                        marginLeft: '5px',\n                        fontSize: '10px',\n                      }}\n                    ></span>\n                  </span>\n                </a>\n              )}\n            </>\n          )}\n        />\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n        {/* <Column\n        \n        className='classnameofthecolumn'\n          title=\"\"\n          key=\"action\"\n          align='right'\n          render={(text, record : any) => (\n            <Space size=\"middle\">\n              <a href='##'>\n               <Tooltip placement=\"top\" title='Edit Order'>\n              <span className='iconSize' \n              onClick={() => {\n                setvisible(true)\n                setactiveCategoryForEdit(record); \n              }}> \n              <EditOutlined />\n              </span>\n\n               </Tooltip>\n               </a>\n            </Space>\n          )}\n        /> */}\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          setvisible={setvisible}\n          visible={visible}\n          customer={activeCategoryForEdit}\n          orderList={data}\n          setOrderList={setOrderList}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  roles?: any;\n}\n\nconst CustomerList = ({ roles }: Props) => {\n  const [orderList, setOrderList] = useState([]);\n  const history = useHistory();\n\n  const [orderState, handleOrderListFetch] = useHandleFetch({}, 'orderList');\n  const [orderStatusFilterValue, setorderStatusFilterValue] = useState('');\n  const [deliveryRegionNameValue, setdeliveryRegionNameValue] = useState('');\n\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n\n  const handleStartEndDateRangeDate = (e) => {\n    console.log('dateOrder', moment(e[0]).format());\n    console.log('dateOff', moment(e[1]).format());\n    const startDate = new Date(moment(e[0]).format());\n    const endDate = new Date(moment(e[1]).format());\n    // @ts-ignore\n    setStartDate(startDate);\n    // @ts-ignore\n    setEndDate(endDate);\n  };\n\n  console.log('orderState', orderState);\n\n  useEffect(() => {\n    const setOrders = async () => {\n      const regions = await handleOrderListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n            statusValue:\n              orderStatusFilterValue === 'all' ? '' : orderStatusFilterValue,\n            startDateValue: startDate,\n            endDateValue: endDate,\n            deliveryRegionNameValue: deliveryRegionNameValue,\n          },\n        },\n      });\n      // @ts-ignore\n      setOrderList(regions);\n    };\n    setOrders();\n  }, [orderStatusFilterValue, startDate, endDate, deliveryRegionNameValue]);\n\n  const [regionList, setRegionList] = useState([]);\n  const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\n\n  useEffect(() => {\n    const setRegions = async () => {\n      const regions = await handleRegionListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (regions && regions.length > 0) {\n        // @ts-ignore\n        const regionListOptions = regions.map((item) => {\n          return {\n            name: item.name,\n            value: item.name,\n          };\n        });\n        // @ts-ignore\n        setRegionList(regionListOptions);\n      }\n    };\n    setRegions();\n  }, []);\n\n  console.log('regionList33', regionList);\n\n  // console.log('orderState',orderState)\n\n  const handleSearch = (value) => {\n    if (orderState.data.length > 0) {\n      const newOrderList = orderState.data.filter((item) => {\n        console.log('orderItem3',item)\n        return `#${item.shortCode.toLowerCase()}`.includes(value.toLowerCase()) ||  `${item.shortCode.toLowerCase()}`.includes(value.toLowerCase())\n      }\n        \n      );\n      setOrderList(newOrderList);\n    }\n  };\n\n  const onOrderStatusFilterChange = (value) => {\n    setorderStatusFilterValue(value);\n  };\n\n  const deliveryRegionFilterChange = (value) => {\n    setdeliveryRegionNameValue(value);\n  };\n\n  const orderFilteringOption = [\n    {\n      name: 'All',\n      value: 'all',\n    },\n    {\n      name: 'Pending',\n      value: 'pending',\n    },\n    {\n      name: 'Processing',\n      value: 'processing',\n    },\n    {\n      name: 'Sent for delivery',\n      value: 'sentForDelivery',\n    },\n\n    {\n      name: 'Completed',\n      value: 'complete',\n    },\n    {\n      name: 'Cancel',\n      value: 'cancel',\n    },\n  ];\n\n  const headers = [\n    { label: 'Order Code', key: 'shortCode' },\n    { label: 'Name', key: 'name' },\n    { label: 'Delivery', key: 'deliveryName' },\n    { label: 'Created', key: 'date_created' },\n    { label: 'Total Price', key: 'total' },\n    { label: 'Status', key: 'status' },\n  ];\n\n  const getData = () => {\n    if (orderList && orderList.length > 0) {\n      const csvData = orderList.map((item) => {\n        return {\n          shortCode: item.shortCode,\n          name: item.name,\n          deliveryName: item.deliveryName,\n          date_created: item.date_created\n            ? moment(item.joiningDate).format('MMMM Do YYYY, h:mm a')\n            : '',\n          Status: item.status,\n          total: item.total,\n        };\n      });\n\n      return csvData;\n    } else return [];\n  };\n\n  const data = getData();\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Orders</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search orders..'\n              onChange={(e) => handleSearch(e.target.value)}\n              // style={{ width: 300 }}\n            />\n          </div>\n\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            {orderList && orderList.length > 0 && (\n              <>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    marginRight: '25px',\n                  }}\n                >\n                  <CSVLink\n                    filename={'Orders.csv'}\n                    data={data}\n                    headers={headers}\n                  >\n                    Export as csv\n                  </CSVLink>\n                  <span\n                    style={{\n                      color: '#1890ff',\n                      marginLeft: '10px',\n                    }}\n                  >\n                    <DownloadOutlined />\n                  </span>\n                </div>\n              </>\n            )}\n\n            {isAccess('postOrder', roles) && (\n              <Button\n                // type=\"primary\"\n                className='btnPrimaryClassNameoutline'\n                icon={<PlusOutlined />}\n                onClick={() => history.push('/admin/order/new')}\n              >\n                Add New\n              </Button>\n            )}\n          </div>\n        </div>\n\n        <div\n          style={{\n            marginTop: '30px',\n          }}\n          className='categoryListContainer__header'\n        >\n          <div></div>\n\n          <div>\n            <RangePicker\n              style={{\n                width: 270,\n                color: '#3fa6f9',\n              }}\n              onChange={handleStartEndDateRangeDate}\n              picker={'date'}\n              bordered={false}\n            />\n\n            {regionList && regionList.length > 0 && (\n              <>\n                <Select\n                  showSearch\n                  style={{\n                    borderRadius: '15px',\n                    color: '#3fa6f9',\n                    width: '150px',\n                    marginRight: '15px',\n                  }}\n                  placeholder='Delivery Region'\n                  optionFilterProp='children'\n                  onChange={deliveryRegionFilterChange}\n                  // defaultValue={'pending'}\n                  bordered={false}\n                  filterOption={(input, option) =>\n                    option.children\n                      .toLowerCase()\n                      .indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  {regionList.map((option) => {\n                    return <Option value={option.value}>{option.name}</Option>;\n                  })}\n                </Select>\n              </>\n            )}\n\n            <Select\n              style={{ borderRadius: '15px', color: '#3fa6f9', width: '100px' }}\n              placeholder='Select status'\n              optionFilterProp='children'\n              onChange={onOrderStatusFilterChange}\n              defaultValue={'all'}\n              bordered={false}\n            >\n              {orderFilteringOption.map((option) => {\n                return <Option value={option.value}>{option.name}</Option>;\n              })}\n            </Select>\n          </div>\n        </div>\n\n        <div className='categoryListContainer__afterHeader'>\n          {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n        </div>\n\n        <div className='categoryListContainer__categoryList'>\n          {orderState.done && orderList.length > 0 && (\n            <MyTable\n              roles={roles}\n              setOrderList={setOrderList}\n              data={orderList}\n            />\n          )}\n          {orderState.isLoading && <DataTableSkeleton />}\n\n          {orderState.done && !(orderList.length > 0) && (\n            <Empty title='No Order found' />\n          )}\n        </div>\n      </div>\n\n      {/* {orderState.done && \n          <AddNewOrder \n          addNewCategoryVisible={addNewCategoryVisible} \n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          orderList={orderState.data}\n          setOrderList={setOrderList}\n           />} */}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(CustomerList);\n","import React, { memo } from 'react';\n\n// import components\nimport AddNewOrderProductItem from '../order/AddNewOrderProductItem';\nimport Empty from '../../components/Empty';\n\nimport { ShopOutlined } from '@ant-design/icons';\n\ninterface Props {\n  productList?: any;\n  setProductList?: any;\n}\n\nconst AddNewOrderSummary = ({ setProductList, productList }: Props) => {\n  return (\n    <div\n      style={{\n        // @ts-ignore\n        flexDirection: 'flex',\n      }}\n      className='addOrderContainer__container-orderSummary'\n    >\n      <h3 className='addOrderContainer-sectionTitle'>\n        <span>\n          <ShopOutlined />\n        </span>\n        Selected Products\n      </h3>\n      <div className='addOrderContainer__container-productItemContainer'>\n        {productList &&\n          productList.length > 0 &&\n          productList.map((item) => {\n            return (\n              <AddNewOrderProductItem\n                setProductList={setProductList}\n                productList={productList}\n                productId={item._id}\n                quantity={item.quantity}\n                item={item}\n                variation={item.variation}\n              />\n            );\n          })}\n\n        {!(productList.length > 0) && (\n          <div\n            style={{\n              marginLeft: '32px',\n            }}\n          >\n            <Empty title='No Product Added' height={150} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(AddNewOrderSummary);\n","import React, { useEffect, useState } from 'react';\nimport { useHandleFetch } from '../../hooks';\nimport { Select, Skeleton } from 'antd';\n\ninterface Props {\n    setCustomerId?: any;\n    setSelectedCustomerData?: any;\n    customerListState?:any; \n}\n\nconst { Option } = Select;\n\nconst Brands = ({ setCustomerId, setSelectedCustomerData }: Props) => {\n    const [options, setoptions] = useState([]);\n    const [selectedBrandId, setSelectedBrandId] = useState('');\n    const [brandState, handleTagListFetch] = useHandleFetch({}, 'customerList');\n\n    function onChange(option) {\n        if (options && options.length > 0) {\n            const customerData = options.find(item => item.value === option);\n            if (customerData) {\n                setSelectedCustomerData(customerData);\n            }\n        }\n        setSelectedBrandId(option);\n        setCustomerId(option);\n        // console.log(`selected ${value}`);\n    }\n\n    function onBlur() {\n        // console.log('blur');\n    }\n\n    function onFocus() {\n        // console.log('focus');\n    }\n\n    function onSearch(val) {\n        // console.log('search:', val);\n    }\n\n    useEffect(() => {\n        const setBrands = async () => {\n            const brandListRes = await handleTagListFetch({\n                urlOptions:{\n                    params: {\n                      sortItem: 'added',\n                      sortOrderValue: '-1'\n                    }\n                    }\n            });\n\n            // @ts-ignore\n            if (brandListRes && brandListRes.length > 0) {\n                // @ts-ignore\n                const brandOptions = brandListRes.map((brand) => {\n                    return {\n                        ...brand,\n                        value: brand.id,\n                        name: `${brand.firstName} ${brand.lastName}`\n                    };\n                });\n                setoptions(brandOptions);\n            }\n        };\n\n        setBrands();\n    }, []);\n\n    return (\n        <Skeleton loading={brandState.isLoading}>\n            <Select\n                showSearch\n                size='middle'\n                style={{ width: '100%' }}\n                placeholder='Select a Customer'\n                optionFilterProp='children'\n                onChange={onChange}\n                onFocus={onFocus}\n                onBlur={onBlur}\n                onSearch={onSearch}\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n            >\n                {brandState.done &&\n                    brandState.data.length > 0 &&\n                    options.map((option) => {\n                        return <Option value={option.value}>{option.name}</Option>;\n                    })}\n            </Select>\n        </Skeleton>\n\n    );\n};\n\nexport default Brands;\n","import React, { useEffect, useState,memo } from 'react';\nimport { useHandleFetch } from '../../hooks';\nimport { Select, Skeleton } from 'antd';\n\n\ninterface Props {\n    setProductIds?: any;\n    productIds?: any;\n    productListState?:any; \n}\n\n\nconst Tags = ({\n    setProductIds,\n    productIds,\n    productListState\n}: Props) => {\n    const [options, setoptions] = useState([]);\n    const [selectedOpions, setselectedOptions] = useState([]);\n\n\n    useEffect(() => {\n        if (productListState.done && productListState.data  && productListState.data.length > 0) {\n            // @ts-ignore\n            const productOptions = productListState.data.map((product) => {\n                return product.name\n            });\n            setoptions(productOptions);\n        }\n\n    }, [productListState]);\n\n\n\n    const handleChange = (selectItems) => {\n        setselectedOptions(selectItems);\n\n        console.log('selectedProducts', selectItems);\n\n        if (productListState.done && productListState.data.length > 0 && selectItems.length > 0) {\n            const selectedCategoryIds = selectItems.map((item) => {\n                const selectedcategory = productListState.data.find(\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\n                );\n                if (selectedcategory) {\n                    return selectedcategory;\n                }\n            });\n            console.log('selectedCategoryIds', selectedCategoryIds);\n            setProductIds(selectedCategoryIds);\n        }\n        else {\n            setProductIds([])\n        }\n    }\n\n\n    // console.log('selectedOpions', selectedOpions);\n\n\n    return (\n        <>\n            <Skeleton loading={productListState.isLoading}>\n                {productListState.done && productListState.data.length > 0 && <Select\n                    mode=\"multiple\"\n                    placeholder=\"search products\"\n                    value={selectedOpions}\n                    onChange={handleChange}\n                    style={{ width: '100%' }}\n                >\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\n                        <Select.Option key={item} value={item}>\n                            {item}\n                        </Select.Option>\n                    ))}\n                </Select>}\n            </Skeleton>\n\n\n        </>\n    )\n}\n\nexport default memo(Tags);\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n\n// import third party ui lib\nimport {\n  Upload,\n  Radio,\n  message,\n  Select,\n  Button,\n  notification,\n  Empty,\n  Steps,\n  Form,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n  PlusOutlined,\n  CheckCircleOutlined,\n  CaretRightOutlined,\n  CaretLeftOutlined,\n  CaretRightFilled,\n  UserOutlined,\n  InfoCircleOutlined,\n  CarOutlined,\n  ClockCircleOutlined,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport AddNewOrderSummary from './AddNewOrderSummary';\nimport CustomersId from './CustomersId';\nimport AddProducts from './AddProducts';\nimport { product } from '../../state/ducks';\n\n//import utils\nimport { getDeliveryChargeTotal } from '.././../utils';\n\nconst { Option } = Select;\nconst { Step } = Steps;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Order Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({});\n\nconst initialValues = {\n  phone: '',\n  email: '',\n  firstName: '',\n  lastName: '',\n  address1: '',\n  address2: '',\n  zipCode: '',\n  additionalInfo: '',\n  country: '',\n  city: '',\n};\n\nconst steps = [\n  {\n    title: 'Order Information',\n    content: '',\n    // description: 'Add Customer & Products'\n  },\n  {\n    title: 'Address',\n  },\n  {\n    title: 'Confirm Order',\n    content: '',\n  },\n];\n\ninterface Props {}\n\nconst AddNewOrder = ({}: Props) => {\n  const [addOrderState, handleOrderFetch] = useHandleFetch({}, 'addOrder');\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n  const [customerId, setCustomerId] = useState([]);\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n\n  const [current, setCurrent] = useState(0);\n  const [productIds, setProductIds] = useState([]);\n  const [productList, setProductList] = useState([]);\n\n  const [productListState, handleProductListFetch] = useHandleFetch(\n    {},\n    'productList'\n  );\n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\n    {},\n    'customerList'\n  );\n\n  const [deliveryRegionState, handleDeliveryRegionFetch] = useHandleFetch(\n    [],\n    'getDeliveryRegion'\n  );\n\n  const [deliveryRegionName, setDeliveryRegionName] = useState('');\n  const [selectedRegion, setSelectedRegion] = useState({});\n  const [regionDeliveryCharge, setregionDeliveryCharge] = useState([]);\n\n  useEffect(() => {\n    if (selectedCustomerData && Object.keys(selectedCustomerData).length > 0) {\n      setselectedCityValue(selectedCustomerData['city']);\n      setselectedCountryValue(selectedCustomerData['country']);\n    }\n  }, [selectedCustomerData]);\n\n  const isDeliveryChargeExists = (regions) => {\n    if (!regions) {\n      return false;\n    } else return true;\n  };\n\n  useEffect(() => {\n    const getAndSetShippingDeliveryCharge = async () => {\n      const deliveryRegionState = await handleDeliveryRegionFetch({\n        urlOptions: {\n          placeHolders: {\n            cityName: selectedCityValue,\n          },\n        },\n      });\n      // @ts-ignore\n      setregionDeliveryCharge(deliveryRegionState);\n    };\n\n    getAndSetShippingDeliveryCharge();\n    console.log('selectedCityValue', selectedCityValue);\n  }, [selectedCityValue]);\n\n  const handleDeviliveryRegionChange = (value) => {\n    setDeliveryRegionName(value);\n\n    if (\n      isDeliveryChargeExists(\n        regionDeliveryCharge.length > 0 && regionDeliveryCharge\n      )\n    ) {\n      const deliveryRegions = regionDeliveryCharge;\n\n      const selectedRegion = deliveryRegions.find(\n        (region) => region['_id'] === value\n      );\n      if (selectedRegion) {\n        setSelectedRegion(selectedRegion);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (\n      isDeliveryChargeExists(\n        regionDeliveryCharge.length > 0 && regionDeliveryCharge\n      )\n    ) {\n      const deliveryRegions = regionDeliveryCharge;\n\n      const selectedRegion = deliveryRegions.find(\n        (region, index) => 0 === index\n      );\n      if (selectedRegion) {\n        setDeliveryRegionName(selectedRegion['name']);\n        setSelectedRegion(selectedRegion);\n      }\n    }\n  }, [regionDeliveryCharge]);\n\n  useEffect(() => {\n    const setProducts = async () => {\n      const productListRes = await handleProductListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n            productType: 'product',\n          },\n        },\n      });\n    };\n\n    setProducts();\n  }, []);\n\n  useEffect(() => {\n    const setCustomers = async () => {\n      const customerListRes = await handleCustomerListFetch({});\n    };\n    setCustomers();\n  }, []);\n\n  const next = () => {\n    const newCurrent = current + 1;\n    setCurrent(newCurrent);\n  };\n\n  const prev = () => {\n    const newCurrent = current - 1;\n    setCurrent(newCurrent);\n  };\n\n  const handleCheckoutSubmit = async (values: any, actions: any) => {\n    const products =\n      productList && productList.length > 0\n        ? productList.map((item) => {\n            return {\n              product: item._id,\n              quantity: item.quantity,\n              variation: item.variation,\n            };\n          })\n        : [];\n\n    const addOrderRes = await handleOrderFetch({\n      body: {\n        shippingAddress: {\n          phone: values.phone,\n          email: values.email,\n          address1: values.address1,\n          address2: values.address2,\n          firstName: values.firstName,\n          lastName: values.lastName,\n          city: selectedCityValue || selectedCustomerData['city'],\n          country: selectedCountryValue || selectedCustomerData['country'],\n        },\n        items: products,\n        delivery: deliveryRegionName,\n        customerId: customerId,\n        // charge\n      },\n    });\n\n    // @ts-ignore\n    if (addOrderRes && addOrderRes.status === 'ok') {\n      // openSuccessNotification();\n\n      actions.resetForm();\n\n      setCurrent(0);\n      setProductIds([]);\n      setProductList([]);\n      setCustomerId([]);\n      setselectedCityValue('');\n      setselectedCountryValue('');\n      setDeliveryRegionName('');\n      setSelectedRegion({});\n      setregionDeliveryCharge([]);\n      setSelectedCustomerData({});\n    } else {\n      openErrorNotification(\"Couldn't create order, Something went wrong\");\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addOrderState['isLoading']) {\n      const error = addOrderState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !addOrderState['isLoading'] &&\n      Object.keys(addOrderState.data).length > 0\n    ) {\n      if (addOrderState['data']['status'] === 'ok') {\n        openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addOrderState]);\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.id,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, []);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [selectedCountryValue]);\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleAddDeliveryCharge = () => {};\n\n  useEffect(() => {\n    if (productIds && productIds.length > 0 && productList) {\n      if (productIds.length > productList.length) {\n        const variation =\n          productIds[productIds.length - 1]['pricing'] &&\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\n\n        setProductList([\n          ...productList,\n          {\n            ...productIds[productIds.length - 1],\n            _id: productIds[productIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (productIds.length < productList.length) {\n        console.log('productIds', productIds);\n        console.log('productList', productList);\n\n        const newProductList = productList.filter((item) => {\n          let isTrue = false;\n          productIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setProductList(newProductList);\n      }\n    } else {\n      setProductList([]);\n    }\n    // console.log('productIds', productIds)\n  }, [productIds]);\n\n  // console.log('productList', productList)\n  console.log('selectedCustomerData', selectedCustomerData);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleCheckoutSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...selectedCustomerData }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <div className='addOrderContainer'>\n            <h3>Add New Order</h3>\n            <div className='addOrderContainer__container'>\n              <Steps current={current}>\n                {steps.map((item) => (\n                  <Step key={item.title} title={item.title} />\n                ))}\n              </Steps>\n\n              {current === 0 && (\n                <div className='addOrderContainer__container-OrderInfoContainer'>\n                  <div className='addOrderContainer__container-OrderInfoContainer-left'>\n                    <h3 style={{}} className='addOrderContainer-sectionTitle'>\n                      <span>\n                        <UserOutlined />\n                      </span>\n                      Customers And products\n                    </h3>\n\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    ></div>\n\n                    <h4 className='inputFieldLabel'>Customer</h4>\n                    <CustomersId\n                      customerListState={customerListState}\n                      setSelectedCustomerData={setSelectedCustomerData}\n                      setCustomerId={setCustomerId}\n                    />\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    ></div>\n                    <h4 className='inputFieldLabel'>Products</h4>\n                    <AddProducts\n                      productListState={productListState}\n                      productIds={productIds}\n                      setProductIds={setProductIds}\n                    />\n                  </div>\n                  <div className='addOrderContainer__container-OrderInfoContainer-right'>\n                    <AddNewOrderSummary\n                      setProductList={setProductList}\n                      productList={productList}\n                    />\n                  </div>\n                </div>\n              )}\n\n              {current === 1 && (\n                <div className='addOrderContainer__container-address'>\n                  <div className='dubbleRowInputs'>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='First Name'\n                        value={values.firstName}\n                        name='firstName'\n                        isError={\n                          (touched.firstName && errors.firstName) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['firstName'])\n                        }\n                        errorString={\n                          (touched.firstName && errors.firstName) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['firstName'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('firstName');\n                        }}\n                      />\n                    </div>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Last Name'\n                        value={values.lastName}\n                        name='lastName'\n                        isError={\n                          (touched.lastName && errors.lastName) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['lastName'])\n                        }\n                        errorString={\n                          (touched.lastName && errors.lastName) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['lastName'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('lastName');\n                        }}\n                      />\n                    </div>\n                  </div>\n\n                  <div className='dubbleRowInputs'>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Phone'\n                        value={values.phone}\n                        name='phone'\n                        isError={\n                          (touched.phone && errors.phone) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['phone'])\n                        }\n                        errorString={\n                          (touched.phone && errors.phone) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['phone'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('phone');\n                        }}\n                      />\n                    </div>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Email'\n                        value={values.email}\n                        name='email'\n                        isError={\n                          (touched.email && errors.email) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['email'])\n                        }\n                        errorString={\n                          (touched.email && errors.email) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['email'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('email');\n                        }}\n                      />\n                    </div>\n                  </div>\n\n                  <div className='dubbleRowInputs'>\n                    <div className='dubbleRowInputs__item'>\n                      <h3 className='inputFieldLabel'>Country</h3>\n\n                      <Form.Item\n                        validateStatus={\n                          addOrderState.error['error']['country'] ? 'error' : ''\n                        }\n                        help={addOrderState.error['error']['country']}\n                        // noStyle={true}\n                      >\n                        <Select\n                          defaultValue={values.country}\n                          notFoundContent={\n                            <Empty\n                              description='No Country Found'\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\n                            />\n                          }\n                          showSearch\n                          style={{ width: '100%' }}\n                          placeholder='Select a Country'\n                          optionFilterProp='children'\n                          onChange={onChangeCountry}\n                          filterOption={(input, option) =>\n                            option.children\n                              .toLowerCase()\n                              .indexOf(input.toLowerCase()) >= 0\n                          }\n                        >\n                          {countryListState.done &&\n                            countryListState.data.length > 0 &&\n                            countryOptions.map((option) => {\n                              return (\n                                <Option value={option.value}>\n                                  {option.name}\n                                </Option>\n                              );\n                            })}\n                        </Select>\n                      </Form.Item>\n                    </div>\n                    <div className='dubbleRowInputs__item'>\n                      <h3 className='inputFieldLabel'>City</h3>\n                      <Form.Item\n                        // noStyle={true}\n                        validateStatus={\n                          addOrderState.error['error']['city'] ? 'error' : ''\n                        }\n                        help={addOrderState.error['error']['city']}\n                      >\n                        <Select\n                          defaultValue={values.city}\n                          className='selectClassName'\n                          notFoundContent={\n                            <Empty\n                              description='First Select a Country'\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\n                            />\n                          }\n                          showSearch\n                          style={{ width: '100%' }}\n                          placeholder='Select a city'\n                          optionFilterProp='children'\n                          onChange={onChangeCity}\n                          filterOption={(input, option) =>\n                            option.children\n                              .toLowerCase()\n                              .indexOf(input.toLowerCase()) >= 0\n                          }\n                        >\n                          {cityListState.done &&\n                            cityListState.data.length > 0 &&\n                            cityOptions.map((option) => {\n                              return (\n                                <Option value={option.value}>\n                                  {option.name}\n                                </Option>\n                              );\n                            })}\n                        </Select>\n                      </Form.Item>\n                    </div>\n                  </div>\n\n                  <div\n                    style={{\n                      marginTop: '12px',\n                    }}\n                  ></div>\n\n                  <div className='dubbleRowInputs'>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Address'\n                        value={values.address1}\n                        name='address1'\n                        isError={\n                          (touched.address1 && errors.address1) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['address1'])\n                        }\n                        errorString={\n                          (touched.address1 && errors.address1) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['address1'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('address1');\n                        }}\n                      />\n                    </div>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Address 2'\n                        value={values.address2}\n                        name='address2'\n                        isError={\n                          (touched.address2 && errors.address2) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['address2'])\n                        }\n                        errorString={\n                          (touched.address2 && errors.address2) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['address2'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('address2');\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {current === 10 && (\n                <div className='addOrderContainer__container-address'>\n                  <div className='dubbleRowInputs'>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='First Name'\n                        value={values.firstName}\n                        name='firstName'\n                        isError={\n                          (touched.firstName && errors.firstName) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['firstName'])\n                        }\n                        errorString={\n                          (touched.firstName && errors.firstName) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['firstName'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('firstName');\n                        }}\n                      />\n                    </div>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Last Name'\n                        value={values.lastName}\n                        name='lastName'\n                        isError={\n                          (touched.lastName && errors.lastName) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['lastName'])\n                        }\n                        errorString={\n                          (touched.lastName && errors.lastName) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['lastName'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('lastName');\n                        }}\n                      />\n                    </div>\n                  </div>\n\n                  <div className='dubbleRowInputs'>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Phone'\n                        value={values.phone}\n                        name='phone'\n                        isError={\n                          (touched.phone && errors.phone) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['phone'])\n                        }\n                        errorString={\n                          (touched.phone && errors.phone) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['phone'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('phone');\n                        }}\n                      />\n                    </div>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Email'\n                        value={values.email}\n                        name='email'\n                        isError={\n                          (touched.email && errors.email) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['email'])\n                        }\n                        errorString={\n                          (touched.email && errors.email) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['email'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('email');\n                        }}\n                      />\n                    </div>\n                  </div>\n\n                  <div className='dubbleRowInputs'>\n                    <div className='dubbleRowInputs__item'>\n                      <h3 className='inputFieldLabel'>Country</h3>\n\n                      <Form.Item\n                        validateStatus={\n                          addOrderState.error['error']['country'] ? 'error' : ''\n                        }\n                        help={addOrderState.error['error']['country']}\n                        // noStyle={true}\n                      >\n                        <Select\n                          defaultValue={'Comoros'}\n                          notFoundContent={\n                            <Empty\n                              description='No Country Found'\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\n                            />\n                          }\n                          showSearch\n                          style={{ width: '100%' }}\n                          placeholder='Select a Country'\n                          optionFilterProp='children'\n                          onChange={onChangeCountry}\n                          filterOption={(input, option) =>\n                            option.children\n                              .toLowerCase()\n                              .indexOf(input.toLowerCase()) >= 0\n                          }\n                        >\n                          {countryListState.done &&\n                            countryListState.data.length > 0 &&\n                            countryOptions.map((option) => {\n                              return (\n                                <Option value={option.value}>\n                                  {option.name}\n                                </Option>\n                              );\n                            })}\n                        </Select>\n                      </Form.Item>\n                    </div>\n                    <div className='dubbleRowInputs__item'>\n                      <h3 className='inputFieldLabel'>City</h3>\n                      <Form.Item\n                        // noStyle={true}\n                        validateStatus={\n                          addOrderState.error['error']['city'] ? 'error' : ''\n                        }\n                        help={addOrderState.error['error']['city']}\n                      >\n                        <Select\n                          defaultValue={'Dhaka'}\n                          className='selectClassName'\n                          notFoundContent={\n                            <Empty\n                              description='First Select a Country'\n                              image={Empty.PRESENTED_IMAGE_SIMPLE}\n                            />\n                          }\n                          showSearch\n                          style={{ width: '100%' }}\n                          placeholder='Select a city'\n                          optionFilterProp='children'\n                          onChange={onChangeCity}\n                          filterOption={(input, option) =>\n                            option.children\n                              .toLowerCase()\n                              .indexOf(input.toLowerCase()) >= 0\n                          }\n                        >\n                          {cityListState.done &&\n                            cityListState.data.length > 0 &&\n                            cityOptions.map((option) => {\n                              return (\n                                <Option value={option.value}>\n                                  {option.name}\n                                </Option>\n                              );\n                            })}\n                        </Select>\n                      </Form.Item>\n                    </div>\n                  </div>\n\n                  <div\n                    style={{\n                      marginTop: '12px',\n                    }}\n                  ></div>\n\n                  <div className='dubbleRowInputs'>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='Address'\n                        value={values.address1}\n                        name='address1'\n                        isError={\n                          (touched.address1 && errors.address1) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['address1'])\n                        }\n                        errorString={\n                          (touched.address1 && errors.address1) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['address1'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('address1');\n                        }}\n                      />\n                    </div>\n                    <div className='dubbleRowInputs__item'>\n                      <Input\n                        label='More specific address'\n                        value={values.address2}\n                        name='address2'\n                        isError={\n                          (touched.address2 && errors.address2) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['address2'])\n                        }\n                        errorString={\n                          (touched.address2 && errors.address2) ||\n                          (!isSubmitting &&\n                            addOrderState.error['error']['address2'])\n                        }\n                        onChange={(e: any) => {\n                          handleChange(e);\n                          setFieldTouched('address2');\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {current === 2 && (\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    marginTop: '40px',\n                    alignItems: 'center',\n                    flexDirection: 'column',\n                  }}\n                >\n                  <AddNewOrderSummary\n                    setProductList={setProductList}\n                    productList={productList}\n                  />\n\n                  <div\n                    style={{\n                      display: 'flex',\n                      flexDirection: 'column',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                    }}\n                  >\n                    <h3\n                      style={{\n                        marginTop: '20px',\n                        display: 'inline-block',\n                        textAlign: 'center',\n                      }}\n                      className='addOrderContainer-sectionTitle'\n                    >\n                      <span>\n                        <CarOutlined />\n                      </span>\n                      Delivery Region List ({selectedCityValue})\n                    </h3>\n\n                    {regionDeliveryCharge && regionDeliveryCharge.length > 0 ? (\n                      <>\n                        <Radio.Group\n                          style={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            flexWrap: 'wrap',\n                          }}\n                          value={deliveryRegionName}\n                          defaultValue={deliveryRegionName}\n                          name='radiogroup'\n                        >\n                          {regionDeliveryCharge.map((deliveryRegionItem) => {\n                            return (\n                              <div\n                                onClick={() =>\n                                  handleDeviliveryRegionChange(\n                                    deliveryRegionItem._id\n                                  )\n                                }\n                                className='deliveryRegionLabelContainer'\n                              >\n                                <div className='deliveryRegionLabelContainer__radio'>\n                                  <Radio value={deliveryRegionItem._id}></Radio>\n                                </div>\n                                <div className='deliveryRegionLabelContainer__info'>\n                                  <h3>{deliveryRegionItem.name}</h3>\n                                  <h4>\n                                    <span>\n                                      <CarOutlined />\n                                    </span>\n                                    {deliveryRegionItem.pickUpLocation}\n                                  </h4>\n                                  <h4>\n                                    <span>\n                                      <ClockCircleOutlined />\n                                    </span>\n                                    {deliveryRegionItem.time}\n                                  </h4>\n                                </div>\n                              </div>\n                            );\n                          })}\n                        </Radio.Group>\n                      </>\n                    ) : (\n                      <>\n                        <h4\n                          style={{\n                            textAlign: 'center',\n                            color: '#777',\n                            marginTop: '50px',\n                          }}\n                        >\n                          Delivery not found\n                        </h4>\n                      </>\n                    )}\n                  </div>\n\n                  <div\n                    style={{\n                      display: 'flex',\n                      marginTop: '40px',\n                      marginBottom: '50px',\n                    }}\n                  >\n                    <Button\n                      loading={addOrderState.isLoading}\n                      style={{\n                        marginTop: '10px',\n                        marginLeft: '15px',\n                      }}\n                      className='btnPrimaryClassNameoutline-blue'\n                      onClick={(e: any) => handleSubmit(e)}\n                    >\n                      Place Order\n                      <CaretRightOutlined />\n                    </Button>\n                  </div>\n                </div>\n              )}\n\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                }}\n              >\n                {current > 0 && (\n                  <Button\n                    style={{ marginRight: '15px', marginTop: '10px' }}\n                    // type=\"primary\"\n                    className='btnPrimaryClassNameoutline'\n                    type='primary'\n                    onClick={() => prev()}\n                  >\n                    <CaretLeftOutlined /> Previous\n                  </Button>\n                )}\n\n                {current < steps.length - 1 && (\n                  <>\n                    <div>\n                      <Button\n                        style={{\n                          marginTop: '10px',\n                        }}\n                        className='btnPrimaryClassNameoutline'\n                        type='primary'\n                        onClick={() => {\n                          if (current === 1) {\n                            setCurrent(2);\n                          } else {\n                            next();\n                          }\n                        }}\n                      >\n                        Next\n                        <CaretRightOutlined />\n                      </Button>\n\n                      {/* {current === 1 && <Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={() => setCurrent(2)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tUse different address< CaretRightOutlined />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t} */}\n                    </div>\n                  </>\n                )}\n\n                {/* {current === steps.length - 1 && (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: '10px',\n\t\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px'\n\t\t\t\t\t\t\t\t\t\t\t}}\n\n\t\t\t\t\t\t\t\t\t\t\tclassName='btnPrimaryClassNameoutline'\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\" onClick={(e: any) => handleSubmit(e)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tPlace Order\n\t\t\t\t\t\t\t\t\t\t\t<CaretRightOutlined />\n\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)} */}\n              </div>\n\n              {/* <div className='addOrderContainer__container-left'>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='addOrderContainer__container-right'>\n\t\t\t\t\t\t\t\t\t<AddNewOrderSummary />\n\t\t\t\t\t\t\t\t</div> */}\n            </div>\n          </div>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewOrder;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport { useHandleFetch } from '../../hooks';\nimport OrderInvoice from \"./OrderInvoice.jsx\";\nimport SelectProducts from \"./OrderProductIds\";\nimport SelectedProductItems from \"../productBundle/SelectedProductItems\";\nimport TextArea from '../../components/Field/TextArea';\n\nconst { Option } = Select;\n\n\nconst validationSchema = Yup.object().shape({});\n\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Order Updated',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.error({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nconst initialValues = {\n    summary: '',\n    note: ''\n}\n\ninterface Props {\n    customer: any;\n    setTagEditVisible: any;\n    tagEditVisible: any;\n    setOrderNotes?:any; \n    orderNotes?:any; \n}\n\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible, setOrderNotes, orderNotes }: Props) => {\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'addOrderNote');\n\n    const handleSubmit = async (values: any, actions: any) => {\n        console.log('orderValues',values); \n        \n        const addRegionRes = await handleUpdateOrderFetch({\n            body: {\n                note: values.note,\n                summary: values.summary,\n                order: customer.id,\n            },\n        });\n\n        \n\n        // @ts-ignore\n        if (addRegionRes && addRegionRes.status === 'ok') {\n            openSuccessNotification('Order Note added');\n            // @ts-ignore\n            setOrderNotes([{...addRegionRes},...orderNotes])\n            setTagEditVisible(false)\n        }\n        else {\n            openErrorNotification();\n        }\n\n        actions.setSubmitting(false);\n\n    };\n\n\n    const handleCancel = (e: any) => {\n        setTagEditVisible(false);\n    };\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={\n                { ...initialValues }\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                            title=\"Add Order Note\"\n                            visible={tagEditVisible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Create'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\n                            }}\n                            bodyStyle={{\n                                margin: '0',\n                                padding: '10px'\n                            }}\n                        >\n                            <TextArea\n                                rows={4}\n\t\t\t\t\t\t\t\tlabel='Note'\n\t\t\t\t\t\t\t\tvalue={values.note}\n\t\t\t\t\t\t\t\tname='note'\n\t\t\t\t\t\t\t\tisError={(touched.note && errors.note) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.note && errors.note) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('note');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n                            <TextArea\n                                rows={2}\n\t\t\t\t\t\t\t\tlabel='Summary'\n\t\t\t\t\t\t\t\tvalue={values.summary}\n\t\t\t\t\t\t\t\tname='summary'\n\t\t\t\t\t\t\t\tisError={(touched.summary && errors.summary) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.summary && errors.summary) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('summary');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n                        </Modal>\n                    </>\n                )}\n        </Formik>\n    );\n};\n\n\nexport default QuickEdit;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Select, notification, Form, Empty, Button } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport { useHandleFetch } from '../../hooks';\nimport OrderInvoice from \"./OrderInvoice.jsx\";\nimport SelectProducts from \"./OrderProductIds\";\nimport SelectedProductItems from \"../productBundle/SelectedProductItems\";\nimport TextArea from '../../components/Field/TextArea';\n\nconst { Option } = Select;\n\n\nconst validationSchema = Yup.object().shape({});\n\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Order Note Updated',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.error({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nconst initialValues = {\n    summary: '',\n    note: ''\n}\n\ninterface Props {\n    customer: any;\n    setTagEditVisible: any;\n    tagEditVisible: any;\n    setOrderNotes?:any; \n    orderNotes?:any; \n    activeNote?:any; \n}\n\nconst QuickEdit = ({ customer, setTagEditVisible, tagEditVisible, setOrderNotes, orderNotes,activeNote }: Props) => {\n    const [updateOrderState, handleUpdateOrderFetch] = useHandleFetch({}, 'updateOrderNote');\n\n    const handleSubmit = async (values: any, actions: any) => {\n        console.log('orderValues',values); \n        \n        const addRegionRes = await handleUpdateOrderFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: activeNote._id\n                }\n            }, \n            body: {\n                note: values.note,\n                summary: values.summary,\n                order: customer.id,\n            },\n        });\n\n        \n\n        // @ts-ignore\n        if (addRegionRes && addRegionRes.status === 'ok') {\n            openSuccessNotification();\n            const positionInTag = () => {\n\t\t\t\treturn orderNotes.map(item => item._id).indexOf(activeNote._id);\n\t\t\t}\n\n\t\t\tconst index = positionInTag();\n\n\t\t\t// @ts-ignore\n\t\t\tconst updatedItem = Object.assign({}, orderNotes[index], { ...addRegionRes, _id: activeNote._id });\n\t\t\tconst updateTagList = [...orderNotes.slice(0, index), updatedItem, ...orderNotes.slice(index + 1)];\n\t\t\tsetOrderNotes(updateTagList);\n            setTagEditVisible(false)\n\n        }\n        else {\n            openErrorNotification();\n        }\n\n        actions.setSubmitting(false);\n\n    };\n\n\n    const handleCancel = (e: any) => {\n        setTagEditVisible(false);\n    };\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={\n                { ...initialValues, ...activeNote }\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                            title=\"Update Order Note\"\n                            visible={tagEditVisible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Update'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                                // disabled: getisSubmitButtonDisabled(values, isValid)\n                            }}\n                            bodyStyle={{\n                                margin: '0',\n                                padding: '10px'\n                            }}\n                        >\n                            <TextArea\n                                rows={4}\n\t\t\t\t\t\t\t\tlabel='Note'\n\t\t\t\t\t\t\t\tvalue={values.note}\n\t\t\t\t\t\t\t\tname='note'\n\t\t\t\t\t\t\t\tisError={(touched.note && errors.note) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.note && errors.note) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['note'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('note');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n                            <TextArea\n                                rows={2}\n\t\t\t\t\t\t\t\tlabel='Summary'\n\t\t\t\t\t\t\t\tvalue={values.summary}\n\t\t\t\t\t\t\t\tname='summary'\n\t\t\t\t\t\t\t\tisError={(touched.summary && errors.summary) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.summary && errors.summary) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateOrderState.error['error']['summary'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('summary');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n                        </Modal>\n                    </>\n                )}\n        </Formik>\n    );\n};\n\n\nexport default QuickEdit;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n  EyeOutlined,\n} from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport OrderEdit from './OrderEdit';\nimport OrderNoteEdit from './OrderNoteEdit';\nimport OrderInvoice from './OrderInvoice';\nimport { OrderDetail } from '.';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Order Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  roles?: any;\n}\n\nconst NewBrandDetail = ({ roles }: Props) => {\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\n    {},\n    'orderDetail'\n  );\n  const [orderDetailNotesState, handleOrderDetailNotesFetch] = useHandleFetch(\n    {},\n    'getOrderNote'\n  );\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\n    {},\n    'tagProducts'\n  );\n  const [deleteOrderNoteState, handleDeleteOrderNoteFetch] = useHandleFetch(\n    {},\n    'deleteOrderNote'\n  );\n  const [tagEditVisible, setTagEditVisible] = useState(false);\n  const [activeOrderNote, setActiveOrderNote] = useState({});\n  const [isOrderNoteEdit, setIsOrderNoteEdit] = useState(false);\n  const [isInvoiceShow, setIsInvoiceShow] = useState(false);\n\n  console.log('orderDetailNotesState', orderDetailNotesState);\n\n  const params = useParams();\n  const history = useHistory();\n  const tagId = params['id'];\n  const [orderNotes, setOrderNotes] = useState([]);\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      await handleTagDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n\n      const orderNotes = await handleOrderDetailNotesFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (orderNotes) {\n        // @ts-ignore\n        setOrderNotes(orderNotes);\n      }\n    };\n    getBrandDetail();\n  }, [tagId]);\n\n  console.log('orderDetailState', tagDetailState);\n\n  useEffect(() => {\n    const getTagProducts = async () => {\n      await handleTagProductsFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n    };\n\n    getTagProducts();\n  }, [tagId]);\n\n  console.log('orderDetailState', tagDetailState);\n\n  console.log('brandParams', params);\n\n  const handleDeleteOrderNote = async (id) => {\n    const res = await handleDeleteOrderNoteFetch({\n      urlOptions: {\n        placeHolders: {\n          id: id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (res && res.status === 'ok') {\n      const newOrderNoteList =\n        orderNotes && orderNotes.filter((item) => item._id !== id);\n      setOrderNotes(newOrderNoteList);\n      openSuccessNotification('Order note deleted!');\n    }\n  };\n\n  console.log(\n    \"tagDetailState.data['products']\",\n    tagDetailState.data['products']\n  );\n\n  const getCover = (record: any) => {\n    if (record.cover) {\n      return record.cover;\n    } else return '';\n  };\n\n\n  return (\n    <div className='brandDetailContainer'>\n      <OrderNoteEdit\n        setOrderNotes={setOrderNotes}\n        orderNotes={orderNotes}\n        tagEditVisible={isOrderNoteEdit}\n        setTagEditVisible={setIsOrderNoteEdit}\n        customer={tagDetailState.data}\n        activeNote={activeOrderNote}\n      />\n      <div className='brandDetailContainer__heading'>\n        <h3>Order Detail</h3>\n\n        {tagDetailState.done &&\n          tagDetailState.data &&\n          Object.keys(tagDetailState.data).length > 0 && (\n            <>\n              <div>\n                <OrderInvoice\n                  setShowInvoice={setIsInvoiceShow}\n                  showInvoice={isInvoiceShow}\n                  id={tagDetailState['data']['id']}\n                />\n                <OrderEdit\n                  setOrderNotes={setOrderNotes}\n                  orderNotes={orderNotes}\n                  tagEditVisible={tagEditVisible}\n                  setTagEditVisible={setTagEditVisible}\n                  customer={tagDetailState.data}\n                />\n                <Button\n                  onClick={() => setIsInvoiceShow(true)}\n                  type='link'\n                  icon={<EyeOutlined />}\n                >\n                  Generate Invoice\n                </Button>\n\n                {isAccess('postOrder', roles) && (\n                  <>\n                    <Button\n                      onClick={() => setTagEditVisible(true)}\n                      type='link'\n                      icon={<PlusOutlined />}\n                    >\n                      Add note\n                    </Button>\n                  </>\n                )}\n              </div>\n            </>\n          )}\n      </div>\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\n        {tagDetailState.done &&\n          tagDetailState.data &&\n          !(Object.keys(tagDetailState.data).length > 0) && (\n            <Empty\n              description='No Order found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {tagDetailState.done &&\n          tagDetailState.data &&\n          Object.keys(tagDetailState.data).length > 0 && (\n            <>\n              <div\n                style={{\n                  display: 'flex',\n                }}\n              >\n                <div\n                  style={{\n                    flex: 1,\n                    marginRight: '20px',\n                  }}\n                  className='brandDetailContainer__header'\n                >\n                  <div className='brandDetailContainer__header-info'>\n                    {tagDetailState.data['shortCode'] && (\n                        <h2>#{tagDetailState.data['shortCode']}</h2>\n                    )}\n                 \n                    <h2>{tagDetailState.data['name']}</h2>\n                    <h3>{tagDetailState.data['description']}</h3>\n                    {tagDetailState.data['url'] && (\n                      <h3>\n                        URL:\n                        <span>{tagDetailState.data['url']}</span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['country'] && (\n                      <h3>\n                        COUNTRY:\n                        <span>{tagDetailState['data']['country']}</span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['city'] && (\n                      <h3>\n                        CITY:\n                        <span>{tagDetailState['data']['city']}</span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['address1'] && (\n                      <h3>\n                        ADDRESS:\n                        <span>{tagDetailState['data']['address1']}</span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['phone'] && (\n                      <h3>\n                        PHONE:\n                        <span>{tagDetailState['data']['phone']}</span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['email'] && (\n                      <h3>\n                        EMAIL:\n                        <span>{tagDetailState['data']['email']}</span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['paymentMethod'] && (\n                      <h3>\n                        PAYMENT METHOD:\n                        <span>{tagDetailState['data']['paymentMethod']}</span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['paymentStatus'] && (\n                      <h3>\n                        PAYMENT STATUS:\n                        <span>{tagDetailState['data']['paymentStatus']}</span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['status'] && (\n                      <h3>\n                        ORDER STATUS:\n                        <span>{tagDetailState['data']['status']}</span>\n                      </h3>\n                    )}\n\n                    {/* \n                            {tagDetailState['data']['deliveryCharge'] && (\n                                <h3>\n                                    DELIVERY CHARGE:\n                                    <span>\n                                        {tagDetailState['data']['deliveryCharge']}\n                                    </span>\n                                </h3>\n                            )} */}\n\n                    {tagDetailState['data']['deliveryName'] && (\n                      <h3>\n                        DELIVERY LOCATION:\n                        <span>\n                          {`${tagDetailState['data']['deliveryName']}, ${tagDetailState['data']['deliveryPickUpLocation']}, ${tagDetailState['data']['deliveryCountryName']}`}\n                        </span>\n                      </h3>\n                    )}\n\n                    {tagDetailState['data']['total'] && (\n                      <h3>\n                        TOTAL ORDER PRICE:\n                        <span>{`${tagDetailState['data']['total']}`}</span>\n                      </h3>\n                    )}\n                  </div>\n                </div>\n\n                <div\n                  style={{\n                    maxWidth: '35%',\n                    minWidth: '35%',\n                  }}\n                  className='brandDetailContainer__header'\n                >\n                  <div\n                    style={{\n                      width: '100%',\n                    }}\n                    className='brandDetailContainer__header-info'\n                  >\n                    <h2>Notes</h2>\n\n                    <div\n                      style={{\n                        width: '100%',\n                      }}\n                    >\n                      {orderDetailNotesState.done &&\n                        orderNotes &&\n                        orderNotes.length > 0 &&\n                        orderNotes.map((noteItem: any) => {\n                          return (\n                            <div className='OrderNoteItem'>\n                              <div className='OrderNoteItem__action'>\n                                {/* <span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EditOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span> */}\n                                <span\n                                  className='OrderNoteItem__action-edit'\n                                  onClick={() => {\n                                    setActiveOrderNote(noteItem);\n                                    setIsOrderNoteEdit(true);\n                                  }}\n                                >\n                                  <EditOutlined />\n                                </span>\n                                <span\n                                  className='OrderNoteItem__action-delete'\n                                  onClick={() =>\n                                    handleDeleteOrderNote(noteItem._id)\n                                  }\n                                >\n                                  <DeleteOutlined />\n                                </span>\n                              </div>\n                              <h4>\n                                <span>NOTE:</span>\n                                {` ${noteItem.note}`}\n                              </h4>\n\n                              {noteItem.summary && (\n                                <>\n                                  <h4>\n                                    <span>SUMMARY :</span>\n\n                                    {` ${noteItem.summary}`}\n                                  </h4>\n                                </>\n                              )}\n                            </div>\n                          );\n                        })}\n\n                      {orderDetailNotesState.done &&\n                        orderNotes &&\n                        !(Object.keys(orderNotes).length > 0) && (\n                          <>\n                            <div\n                              style={{\n                                width: '100%',\n                                margin: '100px 0',\n                                display: 'flex',\n                                justifyContent: 'center',\n                              }}\n                            >\n                              <Empty\n                                description='No Notes found'\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                              />\n                            </div>\n                          </>\n                        )}\n                    </div>\n                  </div>\n                </div>\n\n                <div></div>\n              </div>\n            </>\n          )}\n      </Skeleton>\n\n      {tagDetailState.done &&\n        tagDetailState.data &&\n        Object.keys(tagDetailState.data).length > 0 && (\n          <>\n            <div className='brandDetailContainer__heading'>\n              <h3>Products</h3>\n            </div>\n          </>\n        )}\n\n      <div className='brandDetailContainer__body'>\n        {tagDetailState.done &&\n          tagDetailState.data &&\n          Object.keys(tagDetailState.data).length > 0 &&\n          tagDetailState.data['products'] &&\n          !(tagDetailState.data['products'].length > 0) && (\n            <div\n              style={{\n                marginTop: '100px',\n              }}\n            >\n              <Empty\n                description='No Products exists for this order'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n\n        {tagDetailState.done &&\n          tagDetailState.data &&\n          Object.keys(tagDetailState.data).length > 0 &&\n          tagDetailState.data['products'] &&\n          tagDetailState.data['products'].length > 0 && (\n            <>\n              <Table\n                style={{\n                  paddingTop: '10px',\n                  borderRadius: '5px !important',\n                  overflow: 'hidden',\n                  boxShadow:\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\n                }}\n                size='small'\n                dataSource={tagDetailState.data['products']}\n                tableLayout={'auto'}\n                onHeaderRow={(column) => {\n                  return {\n                    style: {\n                      color: 'red !important',\n                    },\n                  };\n                }}\n              >\n                <Column\n                  title=''\n                  dataIndex='cover'\n                  key='id'\n                  width={'80px'}\n                  className='classnameofthecolumn'\n                  render={(cover, record: any) => (\n                    <>\n                    <div\n                      className='listCoverImage'\n                      onClick={() => {\n                        history.push(`/admin/product/${record.id}`);\n                      }}\n                    >\n                      <img src={getCover(record)} alt='' />\n                    </div>\n\n         \n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Name'\n                  dataIndex='name'\n                  key='id'\n                  className='classnameofthecolumn'\n                  render={(text, record: any) => (\n                    <>\n                      <h4\n                        onClick={() => {\n                          history.push(`/admin/product/${record.id}`);\n                        }}\n                        style={{\n                          fontWeight: 400,\n                          color: '#555',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        {text}\n                      </h4>\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='stock'\n                  dataIndex='inStock'\n                  key='id'\n                  className='classnameofthecolumn'\n                  render={(text, record: any) => (\n                    <>\n                      <h4\n                        style={{\n                          fontWeight: 400,\n                          color: '#555',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        {text ? 'inStock' : 'out of stock'}\n                      </h4>\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Unit Price'\n                  dataIndex='unitPrice'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Quantity'\n                  dataIndex='quantity'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Total Price'\n                  dataIndex='price'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n              </Table>\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(NewBrandDetail);\n","import React,{useState, useEffect} from 'react'\n\n\n// import hooks\nimport { useHandleFetch } from \"../../../hooks\";\n\n// import components\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\n\n// \n\n\n// import lib\nimport {\n    ResponsiveContainer,\n    AreaChart,\n    CartesianGrid,\n    XAxis,\n    YAxis,\n    Tooltip,\n    Legend,\n    Area,\n    Line\n} from \"recharts\";\n\nimport { useHistory } from \"react-router-dom\";\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined,\n    CalendarOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\n\n\nconst { Option } = Select;\n\nconst { Column, ColumnGroup } = Table;\n\n\n\ninterface Props {\n    \n}\n\nconst localOptions = [\n    {\n        value: 'category',\n        name: 'Category'\n    },\n     {\n        value: 'product',\n        name: 'Product'\n    }\n\n]\n\n\n\nconst MONTHS = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n];\n\nconst date = new Date();\nconst thisMonth = MONTHS[date.getMonth()]\n\n\nexport const getMonthNameByOrder = (order: number): string | undefined =>\n    `${order}${thisMonth}`;\n\n\nexport const TooltipContainerStyles = {\n    border: 0,\n    borderRadius: \"8px\",\n    fontSize: 14,\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\n};\n\n\n\n\n\nconst PageVisits = (props: Props) => {\n    const history = useHistory(); \n  \n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\n    const [orderData, setorderData] = useState([]);\n\n\n    useEffect(()=>{\n        const getAnalyticsOrders = async () => {\n\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\n                urlOptions: {\n                    params: {\n                        metricType: 'dayOfMonth',\n                    }\n                }\n            }); \n\n           // @ts-ignore\n           if(ordersDataRes){\n            // @ts-ignore\n            setorderData(ordersDataRes);\n           }\n\n           };\n           getAnalyticsOrders(); \n\n    },[]); \n\n\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\n\n\n\n\n    return (\n\n        <div className='overviewContainer__body-apiVisits'>\n        <div className='overviewContainer__body-apiVisits-header'>\n            <div className='overviewContainer__body-apiVisits-header-info'>\n                <h2>\n                    This Month\n                </h2>\n                <h3>\n                      Order report by days of month \n                </h3>\n            </div>\n        </div>\n\n        <div className='overviewContainer__body-body'>    \n        {orderAnalyticsVisitsState.isLoading && (\n            <>\n            <div style={{\n                display:'flex',\n                justifyContent:'center',\n                alignItems:\"center\",\n                margin:\"100px 0\"\n            }}>\n            <Spin\n            size='large'\n             />\n                </div>\n\n            </>\n        )}\n\n        \n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                    <AreaChart data={orderData} fontSize={12}>\n                        <defs>\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid\n                            vertical={false}\n                            strokeDasharray=\"3 3\"\n                            stroke=\"#d6d9da\"\n                        />\n                        <XAxis \n                         dataKey={'dayOfMonth'} \n                         tickFormatter={getMonthNameByOrder}\n                         />\n                        <YAxis\n                            // unit=\"ml\"\n                            orientation=\"left\"\n                            width={20}\n                            axisLine={false}\n                            tickLine={false}\n                        />\n                        <Tooltip\n                            cursor={false}\n                            contentStyle={TooltipContainerStyles}\n                            formatter={(value, name) => [`${value}`, `${name}`]}\n                        />\n                        <Area\n                            dataKey=\"count\"\n                            name=\"Count\"\n                            type=\"basis\"\n                            fill=\"url(#rainGradient)\"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n               )}\n\n\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '00px'\n                    }}>\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n            \n\n        </div>\n        <div className=\"overviewContainer__body-footer\">\n            <h3>\n                <span>\n                    <CalendarOutlined />\n                </span>\n\n                            In the last month\n                     </h3>\n        </div>\n\n    </div>\n\n    )\n}\n\nexport default PageVisits\n","import React,{useState, useEffect} from 'react'\n\n\n// import hooks\nimport { useHandleFetch } from \"../../../hooks\";\n\n// import components\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\n\n// \n\n\n// import lib\nimport {\n    ResponsiveContainer,\n    AreaChart,\n    CartesianGrid,\n    XAxis,\n    YAxis,\n    Tooltip,\n    Legend,\n    Area,\n    Line\n} from \"recharts\";\n\nimport { useHistory } from \"react-router-dom\";\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined,\n    CalendarOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\n\n\nconst { Option } = Select;\n\nconst { Column, ColumnGroup } = Table;\n\n\n\ninterface Props {\n    \n}\n\nconst localOptions = [\n    {\n        value: 'category',\n        name: 'Category'\n    },\n     {\n        value: 'product',\n        name: 'Product'\n    }\n\n]\n\n\n\nconst WEEEK = [\n    \"Sat\",\n    \"Sun\",\n    \"Mon\",\n    \"Tues\",\n    \"Wed\",\n    \"Thur\",\n    \"Fri\"\n];\n\n\nexport const getWeekNameByOrder = (order: number): string | undefined =>\n    WEEEK[order - 1];\n\n\n\n\n\nexport const TooltipContainerStyles = {\n    border: 0,\n    borderRadius: \"8px\",\n    fontSize: 14,\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\n};\n\n\n\n\n\nconst PageVisits = (props: Props) => {\n    const history = useHistory(); \n  \n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\n    const [orderData, setorderData] = useState([]);\n\n\n    useEffect(()=>{\n        const getAnalyticsOrders = async () => {\n\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\n                urlOptions: {\n                    params: {\n                        metricType: 'dayOfWeek',\n                    }\n                }\n            }); \n\n           // @ts-ignore\n           if(ordersDataRes){\n            // @ts-ignore\n            setorderData(ordersDataRes);\n           }\n\n           };\n           getAnalyticsOrders(); \n\n    },[]); \n\n\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\n\n\n\n\n    return (\n\n        <div className='overviewContainer__body-apiVisits'>\n        <div className='overviewContainer__body-apiVisits-header'>\n            <div className='overviewContainer__body-apiVisits-header-info'>\n                <h2>\n                    This Week\n                </h2>\n                <h3>\n                      Order report by days of week \n                </h3>\n            </div>\n        </div>\n\n        <div className='overviewContainer__body-body'>    \n        {orderAnalyticsVisitsState.isLoading && (\n            <>\n            <div style={{\n                display:'flex',\n                justifyContent:'center',\n                alignItems:\"center\",\n                margin:\"100px 0\"\n            }}>\n            <Spin\n            size='large'\n             />\n                </div>\n\n            </>\n        )}\n\n        \n{orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                    <AreaChart data={orderData} fontSize={12}>\n                        <defs>\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid\n                            vertical={false}\n                            strokeDasharray=\"3 3\"\n                            stroke=\"#d6d9da\"\n                        />\n                        <XAxis \n                         dataKey={'dayOfWeek'} \n                         tickFormatter={getWeekNameByOrder}\n                         />\n                        <YAxis\n                            // unit=\"ml\"\n                            orientation=\"left\"\n                            width={20}\n                            axisLine={false}\n                            tickLine={false}\n                        />\n                        <Tooltip\n                            cursor={false}\n                            contentStyle={TooltipContainerStyles}\n                            formatter={(value, name) => [`${value}`, `${name}`]}\n                        />\n                        <Area\n                            dataKey=\"count\"\n                            name=\"Count\"\n                            type=\"basis\"\n                            fill=\"url(#rainGradient)\"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n               )}\n\n\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '00px'\n                    }}>\n                        <Empty description={`No Visits for this week`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n            \n\n        </div>\n        <div className=\"overviewContainer__body-footer\">\n            <h3>\n                <span>\n                    <CalendarOutlined />\n                </span>\n\n                            In the last month\n                     </h3>\n        </div>\n\n    </div>\n\n    )\n}\n\nexport default PageVisits\n","import React,{useState, useEffect} from 'react'\n\n\n// import hooks\nimport { useHandleFetch } from \"../../../hooks\";\n\n// import components\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\n\n// \n\n\n// import lib\nimport {\n    ResponsiveContainer,\n    AreaChart,\n    CartesianGrid,\n    XAxis,\n    YAxis,\n    Tooltip,\n    Legend,\n    Area,\n    Line\n} from \"recharts\";\n\nimport { useHistory } from \"react-router-dom\";\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined,\n    CalendarOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\n\n\nconst { Option } = Select;\n\nconst { Column, ColumnGroup } = Table;\n\n\n\ninterface Props {\n    \n}\n\nconst localOptions = [\n    {\n        value: 'category',\n        name: 'Category'\n    },\n     {\n        value: 'product',\n        name: 'Product'\n    }\n\n]\n\n\n\nconst WEEEK = [\n    \"Sat\",\n    \"Sun\",\n    \"Mon\",\n    \"Tues\",\n    \"Wed\",\n    \"Thur\",\n    \"Fri\"\n];\n\n\nexport const getWeekNameByOrder = (order: number): string | undefined =>\n    WEEEK[order - 1];\n\nexport const TooltipContainerStyles = {\n    border: 0,\n    borderRadius: \"8px\",\n    fontSize: 14,\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\n};\n\n\nconst PageVisits = (props: Props) => {\n    const history = useHistory(); \n  \n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\n    const [orderData, setorderData] = useState([]);\n\n\n    useEffect(()=>{\n        const getAnalyticsOrders = async () => {\n\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\n                urlOptions: {\n                    params: {\n                        metricType: 'date',\n                    }\n                }\n            }); \n\n           // @ts-ignore\n           if(ordersDataRes){\n            // @ts-ignore\n            setorderData(ordersDataRes);\n           }\n\n           };\n           getAnalyticsOrders(); \n\n    },[]); \n\n\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\n\n\n    return (\n\n        <div className='overviewContainer__body-apiVisits'>\n        <div className='overviewContainer__body-apiVisits-header'>\n            <div className='overviewContainer__body-apiVisits-header-info'>\n                <h2>\n                   BY DATE\n                </h2>\n                <h3>\n                      Order report by date\n                </h3>\n            </div>\n        </div>\n\n        <div className='overviewContainer__body-body'>    \n        {orderAnalyticsVisitsState.isLoading && (\n            <>\n            <div style={{\n                display:'flex',\n                justifyContent:'center',\n                alignItems:\"center\",\n                margin:\"100px 0\"\n            }}>\n            <Spin\n            size='large'\n             />\n                </div>\n\n            </>\n        )}\n\n        \n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                    <AreaChart data={orderData} fontSize={12}>\n                        <defs>\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid\n                            vertical={false}\n                            strokeDasharray=\"3 3\"\n                            stroke=\"#d6d9da\"\n                        />\n                        <XAxis \n                         dataKey={'date'} \n                        //  tickFormatter={getWeekNameByOrder}\n                         />\n                        <YAxis\n                            // unit=\"ml\"\n                            orientation=\"left\"\n                            width={20}\n                            axisLine={false}\n                            tickLine={false}\n                        />\n                        <Tooltip\n                            cursor={false}\n                            contentStyle={TooltipContainerStyles}\n                            formatter={(value, name) => [`${value}`, `${name}`]}\n                        />\n                        <Area\n                            dataKey=\"count\"\n                            name=\"Count\"\n                            type=\"basis\"\n                            fill=\"url(#rainGradient)\"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n               )}\n\n\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '00px'\n                    }}>\n                        <Empty description={`No Visits for date`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n            \n\n        </div>\n        <div className=\"overviewContainer__body-footer\">\n            <h3>\n                <span>\n                    <CalendarOutlined />\n                </span>\n\n                            In the last month\n                     </h3>\n        </div>\n\n    </div>\n\n    )\n}\n\nexport default PageVisits\n","import React,{useState, useEffect} from 'react'\n\n\n// import hooks\nimport { useHandleFetch } from \"../../../hooks\";\n\n// import components\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\n\n// \n\n\n// import lib\nimport {\n    ResponsiveContainer,\n    AreaChart,\n    CartesianGrid,\n    XAxis,\n    YAxis,\n    Tooltip,\n    Legend,\n    Area,\n    Line\n} from \"recharts\";\n\nimport { useHistory } from \"react-router-dom\";\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined,\n    CalendarOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\n\n\nconst { Option } = Select;\n\nconst { Column, ColumnGroup } = Table;\n\n\n\ninterface Props {\n    \n}\n\nconst localOptions = [\n    {\n        value: 'category',\n        name: 'Category'\n    },\n     {\n        value: 'product',\n        name: 'Product'\n    }\n\n]\n\nexport const getHourFormatter = (order: number): string | undefined =>\n    `${order}hr`;\n\n\nexport const TooltipContainerStyles = {\n    border: 0,\n    borderRadius: \"8px\",\n    fontSize: 14,\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\n};\n\n\n\nconst PageVisits = (props: Props) => {\n    const history = useHistory(); \n  \n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\n    const [orderData, setorderData] = useState([]);\n\n\n    useEffect(()=>{\n        const getAnalyticsOrders = async () => {\n\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\n                urlOptions: {\n                    params: {\n                        metricType: 'hour',\n                    }\n                }\n            }); \n\n           // @ts-ignore\n           if(ordersDataRes){\n            // @ts-ignore\n            setorderData(ordersDataRes);\n           }\n\n           };\n           getAnalyticsOrders(); \n\n    },[]); \n\n\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\n\n\n\n\n    return (\n\n        <div className='overviewContainer__body-apiVisits'>\n        <div className='overviewContainer__body-apiVisits-header'>\n            <div className='overviewContainer__body-apiVisits-header-info'>\n                <h2>\n                    BY HOUR\n                </h2>\n                <h3>\n                      Order report by hours \n                </h3>\n            </div>\n        </div>\n\n        \n        <div className='overviewContainer__body-body'>    \n        {orderAnalyticsVisitsState.isLoading && (\n            <>\n            <div style={{\n                display:'flex',\n                justifyContent:'center',\n                alignItems:\"center\",\n                margin:\"100px 0\"\n            }}>\n            <Spin\n            size='large'\n             />\n                </div>\n\n            </>\n        )}\n\n        \n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                    <AreaChart data={orderData} fontSize={12}>\n                        <defs>\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid\n                            vertical={false}\n                            strokeDasharray=\"3 3\"\n                            stroke=\"#d6d9da\"\n                        />\n                        <XAxis \n                         dataKey={'hour'} \n                         tickFormatter={getHourFormatter}\n                         />\n                        <YAxis\n                            // unit=\"ml\"\n                            orientation=\"left\"\n                            width={20}\n                            axisLine={false}\n                            tickLine={false}\n                        />\n                        <Tooltip\n                            cursor={false}\n                            contentStyle={TooltipContainerStyles}\n                            formatter={(value, name) => [`${value}`, `${name}`]}\n                        />\n                        <Area\n                            dataKey=\"count\"\n                            name=\"Count\"\n                            type=\"basis\"\n                            fill=\"url(#rainGradient)\"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n               )}\n\n\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '00px'\n                    }}>\n                        <Empty description={`No Visits for hours`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n            \n\n        </div>\n        <div className=\"overviewContainer__body-footer\">\n            <h3>\n                <span>\n                    <CalendarOutlined />\n                </span>\n\n                            In the last month\n                     </h3>\n        </div>\n\n    </div>\n\n    )\n}\n\nexport default PageVisits\n","import React, { useState, useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../../components/Placeholders';\n\n//\n\n// import lib\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Area,\n  Line,\n} from 'recharts';\n\nimport { useHistory } from 'react-router-dom';\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  CalendarOutlined,\n} from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Modal,\n  Spin,\n} from 'antd';\n\nconst { Option } = Select;\n\nconst { Column, ColumnGroup } = Table;\n\ninterface Props {}\n\nconst localOptions = [\n  {\n    value: 'category',\n    name: 'Category',\n  },\n  {\n    value: 'product',\n    name: 'Product',\n  },\n];\n\nconst MONTHS = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nexport const getMonthNameByOrder = (order: number): string | undefined =>\n  `${MONTHS[order - 1]}`;\n\nexport const TooltipContainerStyles = {\n  border: 0,\n  borderRadius: '8px',\n  fontSize: 14,\n  boxShadow: '2px 2px 5px 3px rgba(0,0,0,0.15)',\n};\n\nconst PageVisits = (props: Props) => {\n  const history = useHistory();\n\n  const [\n    orderAnalyticsVisitsState,\n    handleOrderAnalyticsVisitsStateFetch,\n  ] = useHandleFetch({}, 'getAnalyticsOrders');\n  const [orderData, setorderData] = useState([]);\n\n  useEffect(() => {\n    const getAnalyticsOrders = async () => {\n      const ordersDataRes = await handleOrderAnalyticsVisitsStateFetch({\n        urlOptions: {\n          params: {\n            metricType: 'month',\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (ordersDataRes) {\n        // @ts-ignore\n        setorderData(ordersDataRes);\n      }\n    };\n    getAnalyticsOrders();\n  }, []);\n\n  console.log('orderAnalyticsVisitsStateMonth', orderAnalyticsVisitsState);\n\n  return (\n    <div className='overviewContainer__body-apiVisits'>\n      <div className='overviewContainer__body-apiVisits-header'>\n        <div className='overviewContainer__body-apiVisits-header-info'>\n          <h2>BY MONTH</h2>\n          <h3>Order report by month</h3>\n        </div>\n      </div>\n\n      <div className='overviewContainer__body-body'>\n        {orderAnalyticsVisitsState.isLoading && (\n          <>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                margin: '100px 0',\n              }}\n            >\n              <Spin size='large' />\n            </div>\n          </>\n        )}\n\n        {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\n          <ResponsiveContainer width='100%' height={300}>\n            <AreaChart data={orderData} fontSize={12}>\n              <defs>\n                <linearGradient id='rainGradient' x1='0' y1='0' x2='0' y2='1'>\n                  <stop offset='0%' stopColor='#1890ff' />\n                  <stop offset='100%' stopColor='#3066BE22' />\n                </linearGradient>\n              </defs>\n              <CartesianGrid\n                vertical={false}\n                strokeDasharray='3 3'\n                stroke='#d6d9da'\n              />\n              <XAxis dataKey={'month'} tickFormatter={getMonthNameByOrder} />\n              <YAxis\n                // unit=\"ml\"\n                orientation='left'\n                width={20}\n                axisLine={false}\n                tickLine={false}\n              />\n              <Tooltip\n                cursor={false}\n                contentStyle={TooltipContainerStyles}\n                formatter={(value, name) => [`${value}`, `${name}`]}\n              />\n              <Area\n                dataKey='count'\n                name='Count'\n                type='basis'\n                fill='url(#rainGradient)'\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        )}\n\n        {orderAnalyticsVisitsState.done &&\n          !(orderAnalyticsVisitsState.data.length > 0) && (\n            <div\n              style={{\n                marginTop: '00px',\n              }}\n            >\n              <Empty\n                description={`No Visits for this months`}\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n      </div>\n      <div className='overviewContainer__body-footer'>\n        <h3>\n          <span>\n            <CalendarOutlined />\n          </span>\n          In the last month\n        </h3>\n      </div>\n    </div>\n  );\n};\n\nexport default PageVisits;\n","import React,{useState, useEffect} from 'react'\n\n\n// import hooks\nimport { useHandleFetch } from \"../../../hooks\";\n\n// import components\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\n\n// \n\n\n// import lib\nimport {\n    ResponsiveContainer,\n    AreaChart,\n    CartesianGrid,\n    XAxis,\n    YAxis,\n    Tooltip,\n    Legend,\n    Area,\n    Line\n} from \"recharts\";\n\nimport { useHistory } from \"react-router-dom\";\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined,\n    CalendarOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Modal, Spin } from 'antd';\n\n\nconst { Option } = Select;\n\nconst { Column, ColumnGroup } = Table;\n\n\n\ninterface Props {\n    \n}\n\nconst localOptions = [\n    {\n        value: 'category',\n        name: 'Category'\n    },\n     {\n        value: 'product',\n        name: 'Product'\n    }\n\n]\n\n\n\nconst WEEEK = [\n    \"Sat\",\n    \"Sun\",\n    \"Mon\",\n    \"Tues\",\n    \"Wed\",\n    \"Thur\",\n    \"Fri\"\n];\n\n\nexport const getWeekNameByOrder = (order: number): string | undefined =>\n    WEEEK[order - 1];\n\n\n\n\n\nexport const TooltipContainerStyles = {\n    border: 0,\n    borderRadius: \"8px\",\n    fontSize: 14,\n    boxShadow: \"2px 2px 5px 3px rgba(0,0,0,0.15)\"\n};\n\n\n\n\n\nconst PageVisits = (props: Props) => {\n    const history = useHistory(); \n  \n    const [orderAnalyticsVisitsState, handleOrderAnalyticsVisitsStateFetch] = useHandleFetch({}, 'getAnalyticsOrders');\n    const [orderData, setorderData] = useState([]);\n\n\n    useEffect(()=>{\n        const getAnalyticsOrders = async () => {\n\n            const ordersDataRes =  await handleOrderAnalyticsVisitsStateFetch({\n                urlOptions: {\n                    params: {\n                        metricType: 'year',\n                    }\n                }\n            }); \n\n           // @ts-ignore\n           if(ordersDataRes){\n            // @ts-ignore\n            setorderData(ordersDataRes);\n           }\n\n           };\n           getAnalyticsOrders(); \n\n    },[]); \n\n\n    console.log('orderAnalyticsVisitsState',orderAnalyticsVisitsState);\n\n\n\n\n    return (\n\n        <div className='overviewContainer__body-apiVisits'>\n        <div className='overviewContainer__body-apiVisits-header'>\n            <div className='overviewContainer__body-apiVisits-header-info'>\n                <h2>\n                    By Year\n                </h2>\n                <h3>\n                      Order report by year \n                </h3>\n            </div>\n        </div>\n\n        <div className='overviewContainer__body-body'>    \n        {orderAnalyticsVisitsState.isLoading && (\n            <>\n            <div style={{\n                display:'flex',\n                justifyContent:'center',\n                alignItems:\"center\",\n                margin:\"100px 0\"\n            }}>\n            <Spin\n            size='large'\n             />\n                </div>\n\n            </>\n        )}\n\n        \n             {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                    <AreaChart data={orderData} fontSize={12}>\n                        <defs>\n                            <linearGradient id=\"rainGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                <stop offset=\"0%\" stopColor=\"#1890ff\" />\n                                <stop offset=\"100%\" stopColor=\"#3066BE22\" />\n                            </linearGradient>\n                        </defs>\n                        <CartesianGrid\n                            vertical={false}\n                            strokeDasharray=\"3 3\"\n                            stroke=\"#d6d9da\"\n                        />\n                        <XAxis \n                         dataKey={'year'} \n                        //  tickFormatter={getWeekNameByOrder}\n                         />\n                        <YAxis\n                            // unit=\"ml\"\n                            orientation=\"left\"\n                            width={20}\n                            axisLine={false}\n                            tickLine={false}\n                        />\n                        <Tooltip\n                            cursor={false}\n                            contentStyle={TooltipContainerStyles}\n                            formatter={(value, name) => [`${value}`, `${name}`]}\n                        />\n                        <Area\n                            dataKey=\"count\"\n                            name=\"Count\"\n                            type=\"basis\"\n                            fill=\"url(#rainGradient)\"\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n               )}\n\n\n                {orderAnalyticsVisitsState.done && !(orderAnalyticsVisitsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '00px'\n                    }}>\n                        <Empty description={`No Visits for this year`} image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n            \n\n        </div>\n        <div className=\"overviewContainer__body-footer\">\n            <h3>\n                <span>\n                    <CalendarOutlined />\n                </span>\n\n                    In the last year\n            </h3>\n        </div>\n\n    </div>\n\n    )\n}\n\nexport default PageVisits\n","import React, { useState, useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../../components/Placeholders';\n\n//\n\n// import lib\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Area,\n  Line,\n} from 'recharts';\n\nimport { useHistory } from 'react-router-dom';\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  CalendarOutlined,\n} from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Modal,\n  Spin,\n} from 'antd';\n\nconst { Option } = Select;\n\nconst { Column, ColumnGroup } = Table;\n\ninterface Props {}\n\nconst localOptions = [\n  {\n    value: 'category',\n    name: 'Category',\n  },\n  {\n    value: 'product',\n    name: 'Product',\n  },\n];\n\nconst WEEEK = ['Sat', 'Sun', 'Mon', 'Tues', 'Wed', 'Thur', 'Fri'];\n\nexport const getWeekNameByOrder = (order: number): string | undefined =>\n  WEEEK[order - 1];\n\nexport const TooltipContainerStyles = {\n  border: 0,\n  borderRadius: '8px',\n  fontSize: 14,\n  boxShadow: '2px 2px 5px 3px rgba(0,0,0,0.15)',\n};\n\nconst DeliveryRegionReport = (props: Props) => {\n  const history = useHistory();\n\n  const [\n    orderAnalyticsVisitsState,\n    handleOrderAnalyticsVisitsStateFetch,\n  ] = useHandleFetch({}, 'getAnalyticsOrders');\n  const [orderData, setorderData] = useState([]);\n\n  useEffect(() => {\n    const getAnalyticsOrders = async () => {\n      const ordersDataRes = await handleOrderAnalyticsVisitsStateFetch({\n        urlOptions: {\n          params: {\n            metricType: 'deliveryRegion',\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (ordersDataRes && ordersDataRes.length > 0) {\n        // @ts-ignore\n        const orderData = ordersDataRes.map((item) => {\n          return {\n            ...item,\n            name:\n              item['deliveryRegion'] &&\n              Object.keys(item['deliveryRegion']).length > 0\n                ? item['deliveryRegion']['name']\n                : 'Region Name',\n          };\n        });\n        // @ts-ignore\n        setorderData(orderData);\n      } else {\n        setorderData([]);\n      }\n    };\n    getAnalyticsOrders();\n  }, []);\n\n  console.log('orderListByDeliveryRegion', orderAnalyticsVisitsState);\n\n  return (\n    <div className='overviewContainer__body-apiVisits'>\n      <div className='overviewContainer__body-apiVisits-header'>\n        <div className='overviewContainer__body-apiVisits-header-info'>\n          <h2>BY DELIVERY REGION</h2>\n          <h3>Order report by delivery region</h3>\n        </div>\n      </div>\n\n      <div className='overviewContainer__body-body'>\n        {orderAnalyticsVisitsState.isLoading && (\n          <>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                margin: '100px 0',\n              }}\n            >\n              <Spin size='large' />\n            </div>\n          </>\n        )}\n\n        {orderAnalyticsVisitsState.done && orderData && orderData.length > 0 && (\n          <>\n            <Table\n              pagination={{ defaultPageSize: 5 }}\n              style={{}}\n              // expandable={{\n              //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n              //     rowExpandable: record => record.name !== 'Not Expandable',\n              //   }}\n              // bordered={true}\n              size='small'\n              // pagination={false}\n              dataSource={orderData}\n              tableLayout={'auto'}\n              onHeaderRow={(column) => {\n                return {\n                  style: {\n                    color: 'red !important',\n                  },\n                };\n              }}\n            >\n              <Column\n                title='Name'\n                dataIndex='name'\n                key='id'\n                className='classnameofthecolumn'\n                render={(text, record: any) => (\n                  <>\n                    <h4\n                      onClick={() => {\n                        // history.push(`/admin/${selectedApiValue && selectedApiValue.toLowerCase()}/${record.itemId}`)\n                      }}\n                      style={{\n                        fontWeight: 400,\n                        color: '#555',\n                        textTransform: 'uppercase',\n                      }}\n                    >\n                      {text || `Deleted`}\n                    </h4>\n                  </>\n                )}\n              />\n\n              <Column\n                title='Count'\n                dataIndex='count'\n                key='id'\n                className='classnameofthecolumn'\n              />\n            </Table>\n          </>\n        )}\n\n        {orderAnalyticsVisitsState.done &&\n          !(orderAnalyticsVisitsState.data.length > 0) && (\n            <div\n              style={{\n                marginTop: '00px',\n              }}\n            >\n              <Empty\n                description={`No Visits for date`}\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n      </div>\n      <div className='overviewContainer__body-footer'>\n        <h3>\n          <span>\n            <CalendarOutlined />\n          </span>\n          In the last month\n        </h3>\n      </div>\n    </div>\n  );\n};\n\nexport default DeliveryRegionReport;\n","import OrderOverviewReport from \"./OrderOverviewReport\";\nexport default OrderOverviewReport;","import React, { useEffect, useState } from 'react';\n\n// import components \nimport ThisMonthOrderReport from \"./ThisMonthOrderReport\";\nimport ThisWeekOrderReport from \"./ThisWeekOrderReport\";\nimport DateOrderReport from \"./DateOrderReport\";\nimport HourOrderReport from \"./HourOrderReport\";\nimport MonthOrderReport from \"./MonthOrderReport\";\nimport YearOrderReport from \"./YearOrderReport\";\nimport DeliveryRegionReport from \"./DeliveryRegionReport\";\n\n// import lib \nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\n\nimport {\n\tDeleteOutlined,\n\tFileAddOutlined,\n\tCheckCircleOutlined,\n\tFileImageFilled,\n\tFileImageOutlined,\n\tFileImageTwoTone,\n\tPlusOutlined,\n\tPlusCircleOutlined,\n\tCloseOutlined,\n\tCheckOutlined,\n\tInfoCircleOutlined,\n\tUserOutlined,\n\tCalendarOutlined,\n\tGoldOutlined,\n\tShoppingCartOutlined,\n\tTagOutlined\n} from '@ant-design/icons';\n\n// import hooks\nimport { useHandleFetch } from \"../../../hooks\";\n\n\ninterface Props { }\n\nconst Overview = (props: Props) => {\n\tconst [analyticsProductVisitCountState, handleAnalyticsProductVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\n\tconst [analyticsCategoryVisitCountState, handleAnalyticsCategoryVisitCountFetch] = useHandleFetch({}, 'getAnalyticsPageVisitCount');\n\tconst [totalUserCountState, handleGetTotalUserCountFetch] = useHandleFetch({}, 'getAnalyticsTotalUserCount');\n\n\n\n\tuseEffect(() => {\n\n\t\tconst getTotalUserCount = async () => {\n\t\t\tawait handleGetTotalUserCountFetch({});\n\t\t}\n\n\t\tgetTotalUserCount();\n\t}, []);\n\n\n\t\n\tuseEffect(()=>{\n\t\tconst getProductVisitCount = async () => {\n\t\t\tawait handleAnalyticsProductVisitCountFetch({\n\t\t\t\tparams: 'product'\n\t\t\t})\n\t\t}; \n\t\tgetProductVisitCount();\n\t},[])\n\n\n\n\tuseEffect(()=>{\n\t\tconst getCategoryVisitCount = async () => {\n\t\t\tawait handleAnalyticsCategoryVisitCountFetch({\n\t\t\t\tparams: 'category'\n\t\t\t})\n\t\t}; \n\t\tgetCategoryVisitCount();\n\t},[])\n\n\n\n\n\n\n\treturn (\n\t\t<div className='overviewContainer'>\n\t\t\t<div className=\"overviewContainer__body\">\n\t\t\t\t<DeliveryRegionReport/>\n\t\t\t\t<ThisWeekOrderReport />\n\t\t\t\t<ThisMonthOrderReport />\n\t\t\t</div>\n\n\t\t\t<div className=\"overviewContainer__body\">\n\t\t\t\t<DateOrderReport />\n\t\t\t\t<HourOrderReport />\n\t\t\t</div>\n\n\t\t\t<div className=\"overviewContainer__body\">\n\t\t\t\t<MonthOrderReport />\n\t\t\t\t<YearOrderReport />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Overview;\n","import React from 'react'\n\ninterface Props {\n    \n}\n\nconst ConfigOrderStatus = (props: Props) => {\n    return (\n        <div>\n            ConfigOrderStatus\n        </div>\n    )\n}\n\nexport default ConfigOrderStatus\n","import React, { useState, useEffect } from 'react';\nimport { AutoComplete, Tooltip } from 'antd';\n\nimport InputSmall from '../../components/Field/InputSmall';\nimport MediaLibrary from '../../components/MediaLibrary';\n\nimport { useFetch } from \"../../hooks\";\nimport {\n    DeleteOutlined,\n    FileAddOutlined,\n    FileImageFilled,\n    PlusOutlined,\n    CheckCircleOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined\n} from '@ant-design/icons';\n\n\n\nconst Complete = ({ setItemsList, itemsList, componentItem }) => {\n\n\n    const [localComponentItem, setlocalComponentItem] = useState({\n        title: componentItem.title,\n        target: componentItem.target,\n        text: componentItem.text,\n        image: componentItem.image,\n    })\n\n    const [myImages, setmyImages] = useState([]);\n    const [visibleMedia, setvisibleMedia] = useState(false);\n\n    const handleComponentItemsChange = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n\n        setlocalComponentItem({\n            ...localComponentItem,\n            [name]: value\n        });\n    };\n\n    useEffect(() => {\n        if (myImages.length > 0) {\n            const newImages = myImages.map(item => item.id);\n            setlocalComponentItem({\n                ...localComponentItem,\n                image: [...newImages]\n            })\n        }\n        else {\n            setlocalComponentItem({\n                ...localComponentItem,\n                image: []\n            })\n        }\n\n    }, [myImages])\n\n    useEffect(() => {\n        const positionInAttribute = () => {\n            return itemsList.map(item => item.id).indexOf(componentItem.id);\n        }\n\n        const index = positionInAttribute();\n\n        const updatedItem = Object.assign({}, itemsList[index], { ...localComponentItem });\n        const updateComponentList = [...itemsList.slice(0, index), updatedItem, ...itemsList.slice(index + 1)];\n        setItemsList(updateComponentList);\n\n    }, [localComponentItem])\n\n\n    const handleAttributeDelete = () => {\n\n        const updateComponentList = itemsList.filter(item => item.id !== componentItem.id);\n        setItemsList(updateComponentList);\n    }\n\n\n    const handleImagesDelete = (id) => {\n        // @ts-ignore\n        const newImages = myImages && myImages.filter(image => {\n            return image.id !== id;\n        })\n\n        setmyImages(newImages);\n    }\n\n\n\n\n\n    return (\n        <>\n\n\n            <div className='componentItemsContainer__item'>\n                <InputSmall\n                    label='Title'\n                    value={localComponentItem.title}\n                    name='title'\n                    onChange={handleComponentItemsChange}\n                />\n                <InputSmall\n                    label='Text'\n                    value={localComponentItem.text}\n                    name='text'\n                    onChange={handleComponentItemsChange}\n                />\n\n                <InputSmall\n                    label='Target'\n                    value={localComponentItem.target}\n                    name='target'\n                    onChange={handleComponentItemsChange}\n                />\n\n\n                <h3 className='inputFieldLabel-small'>Images</h3>\n                <div style={{\n                    marginBottom: \"-1px\"\n                }}></div>\n\n                <div className='aboutToUploadImagesContainer'>\n                    {myImages &&\n                        // @ts-ignore\n                        myImages.length > 0 && myImages.map((image, index) => {\n                            return (\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\n                                    <div\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\n                                    >\n                                        <img src={image.cover} alt={image.alt} />\n                                    </div>\n\n                                    <span\n                                        onClick={() => handleImagesDelete(image.id)}\n                                        className='aboutToUploadImagesContainer__item-remove'>\n                                        <CloseOutlined />\n                                    </span>\n                                </div>\n                            )\n                        })}\n\n\n                    <Tooltip\n                        title={'Attach images'}>\n\n                        <div\n                            onClick={() => {\n                                setvisibleMedia(true);\n                            }}\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\n                            {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                            <FileImageFilled />\n                            {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                <PlusOutlined />\n                            </span>\n                        </div>\n                    </Tooltip>\n\n                </div>\n\n\n\n            </div>\n            <MediaLibrary\n                setvisible={setvisibleMedia}\n                visible={visibleMedia}\n                myImages={myImages}\n                setmyImages={setmyImages}\n                isModalOpenForImages={true}\n\n            />\n\n        </>\n    )\n}\n\nexport default Complete;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  PlusOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport ComponentItem from './ComponentItem';\n\nconst validationSchema = Yup.object().shape({\n  groupName: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Component Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  groupName: '',\n  items: [],\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  componentList?: any;\n  setComponentList?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  componentList,\n  setComponentList,\n}: Props) => {\n  const [addComponentState, handleAddComponentFetch] = useHandleFetch(\n    {},\n    'addComponent'\n  );\n  const [myImages, setmyImages] = useState(false);\n  const [itemsList, setItemsList] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addComponentRes = await handleAddComponentFetch({\n      body: {\n        groupName: values.groupName,\n        items: itemsList,\n      },\n    });\n\n    // @ts-ignore\n    if (addComponentRes && addComponentRes.status === 'ok') {\n      openSuccessNotification();\n      setComponentList([\n        ...componentList,\n        {\n          id: addComponentRes['_id'] || '',\n          key: addComponentRes['_id'] || '',\n          groupName: addComponentRes['groupName'] || '',\n          // @ts-ignore\n          ...addComponentRes,\n        },\n      ]);\n      actions.resetForm();\n      setItemsList([]);\n      setAddNewCategoryVisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addComponentState['isLoading']) {\n      const error = addComponentState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addComponentState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.groupName) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleAddComponentItem = () => {\n    setItemsList([\n      ...itemsList,\n      {\n        title: '',\n        target: '',\n        text: '',\n        image: [],\n        id: `${itemsList.length}`,\n      },\n    ]);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Add New Component'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n            width={'50vw'}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n          >\n            <Input\n              label='Name'\n              value={values.groupName}\n              name='groupName'\n              isError={\n                (touched.groupName && errors.groupName) ||\n                (!isSubmitting && addComponentState.error['error']['name'])\n              }\n              errorString={\n                (touched.groupName && errors.groupName) ||\n                (!isSubmitting && addComponentState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('groupName');\n              }}\n            />\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n            <h3 className='inputFieldLabel'>Children</h3>\n\n            <div className='componentItemsContainer'>\n              {itemsList.map((itemComponent) => {\n                return (\n                  <ComponentItem\n                    componentItem={itemComponent}\n                    itemsList={itemsList}\n                    setItemsList={setItemsList}\n                  />\n                );\n              })}\n\n              <Button\n                size='small'\n                onClick={handleAddComponentItem}\n                style={{\n                  width: '290px',\n                  minHeight: '145px',\n                  marginTop: '0px',\n                  borderRadius: '8px',\n                }}\n                type='dashed'\n                icon={<PlusOutlined />}\n              >\n                Add Childrens\n              </Button>\n            </div>\n\n            <div\n              style={{\n                marginTop: '20px',\n              }}\n            />\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { AutoComplete, Button, Tooltip } from 'antd';\n\n// import configs\nimport config from \"../../config.json\";\n\nimport InputSmall from '../../components/Field/InputSmall';\nimport MediaLibrary from '../../components/MediaLibrary';\n\nimport { useFetch } from \"../../hooks\";\nimport {\n    DeleteOutlined,\n    FileAddOutlined, \n    SaveOutlined,\n    FileImageFilled,\n    PlusOutlined,\n    CheckCircleOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined\n} from '@ant-design/icons';\n\n\n\nconst Complete = ({ setComponentList, componentList, item, component,componentUpdate, isLoadingUpdate }) => {\n\n    const [localComponentItem, setlocalComponentItem] = useState({\n        title: item.title,\n        target: item.target,\n        text: item.text,\n        image: item.image,\n    }); \n\n\n    console.log('localComponentItem',localComponentItem); \n    console.log('componentItem',item); \n\n\n\n    // useEffect(()=>{\n\n    //     if(item && item.image && item.image.length > 0){\n    //         setlocalComponentItem({\n    //             ...localComponentItem,\n    //             image: \n    //         })\n    //     }; \n\n\n    // },item)\n\n    const [myImages, setmyImages] = useState([]);\n    const [visibleMedia, setvisibleMedia] = useState(false);\n\n    const handleComponentItemsChange = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n\n        setlocalComponentItem({\n            ...localComponentItem,\n            [name]: value\n        });\n    };\n\n\n\n\n\n\n    useEffect(() => {\n        if (myImages.length > 0) {\n            setlocalComponentItem({\n                ...localComponentItem,\n                // @ts-ignore\n                image: [...new Set([...localComponentItem.image, ...myImages])]\n            })\n        }\n        // else {\n        //     setlocalComponentItem({\n        //         ...localComponentItem,\n        //         image: []\n        //     })\n        // }\n\n    }, [myImages])\n\n\n\n\n    useEffect(()=>{\n\n        if(item && item.image && item.image.length > 0){\n            setmyImages(item.image)\n        }\n\n    },[])\n\n\n    const handleImagesDelete = (id) => {\n        // @ts-ignore\n        const newImages = localComponentItem.image && localComponentItem.image.length > 0 && localComponentItem.image.filter(image => {\n            return image.id !== id;\n        })\n\n        setlocalComponentItem({\n            ...localComponentItem,\n            image: [...newImages]\n        })\n\n        setmyImages(newImages);\n    }\n\n\n    const handleComponentItemUpdate = () => {\n        componentUpdate(item,component,localComponentItem); \n    }\n\n\n\n\n\n\n    return (\n        <>\n            <div\n                style={{\n                    width: '100%',\n                    boxShadow: \"none\"\n                }}\n                className='componentItemsContainer__item'>\n                <InputSmall\n                    label='Title'\n                    value={localComponentItem.title}\n                    name='title'\n                    onChange={handleComponentItemsChange}\n                />\n                <InputSmall\n                    label='Text'\n                    value={localComponentItem.text}\n                    name='text'\n                    onChange={handleComponentItemsChange}\n                />\n\n                <InputSmall\n                    label='Target'\n                    value={localComponentItem.target}\n                    name='target'\n                    onChange={handleComponentItemsChange}\n                />\n\n\n                <h3 className='inputFieldLabel-small'>Images</h3>\n                <div style={{\n                    marginBottom: \"-1px\"\n                }}></div>\n\n\n                <div className='aboutToUploadImagesContainer'>\n                    {localComponentItem.image &&\n                        // @ts-ignore\n                        localComponentItem.image.length > 0 && localComponentItem.image.map((image, index) => {\n                            return (\n                                <div className='aboutToUploadImagesContainer__item aboutToUploadImagesContainer__item-small'>\n                                    <div\n                                        className='aboutToUploadImagesContainer__item-imgContainer'\n                                    >\n                                        <img src={image.cover} alt={image.alt} />\n                                    </div>\n\n                                    <span\n                                        onClick={() => handleImagesDelete(image.id)}\n                                        className='aboutToUploadImagesContainer__item-remove'>\n                                        <CloseOutlined />\n                                    </span>\n                                </div>\n                            )\n                        })}\n\n\n                    <Tooltip\n                        title={'Attach images'}>\n\n                        <div\n                            onClick={() => {\n                                setvisibleMedia(true);\n                            }}\n                            className='aboutToUploadImagesContainer__uploadItem aboutToUploadImagesContainer__uploadItem-small'>\n                            {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                            <FileImageFilled />\n                            {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                <PlusOutlined />\n                            </span>\n                        </div>\n                    </Tooltip>\n\n                </div>\n                <Button\n                style={{\n                    marginTop: '15px'\n                }}\n                    icon={<SaveOutlined />}\n          className='btnPrimaryClassNameoutline'\n          onClick={() => handleComponentItemUpdate()}\n        >\n\n            {isLoadingUpdate ? \"Saving...\" : \"Save\"}\n            \n            </Button>\n            </div>\n            <MediaLibrary\n                setvisible={setvisibleMedia}\n                visible={visibleMedia}\n                myImages={myImages}\n                setmyImages={setmyImages}\n                isModalOpenForImages={true}\n\n            />\n\n        </>\n    )\n}\n\nexport default Complete;\n","import React, { useState, useEffect } from 'react';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport { notification, Modal, Tooltip } from 'antd';\n\nimport {\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n  CloseOutlined,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport ComponentItem from './ComponentItem';\n\nconst validationSchema = Yup.object().shape({\n  groupName: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Component Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  groupName: '',\n  items: [],\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  componentList?: any;\n  setComponentList?: any;\n  updateComponentByAddingItem?: any;\n  componentId?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  componentList,\n  setComponentList,\n  updateComponentByAddingItem,\n  componentId,\n}: Props) => {\n  const [localComponentItem, setlocalComponentItem] = useState({\n    title: '',\n    target: '',\n    text: '',\n    image: [],\n  });\n\n  const [myImages, setmyImages] = useState([]);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n\n  const handleComponentItemsChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setlocalComponentItem({\n      ...localComponentItem,\n      [name]: value,\n    });\n  };\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.groupName) {\n      return true;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    if (myImages.length > 0) {\n      const newImages = myImages.map((item) => item.id);\n      setlocalComponentItem({\n        ...localComponentItem,\n        image: [...newImages],\n      });\n    } else {\n      setlocalComponentItem({\n        ...localComponentItem,\n        image: [],\n      });\n    }\n  }, [myImages]);\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleAddItem = (e) => {\n    updateComponentByAddingItem(localComponentItem, componentId);\n  };\n\n  return (\n    <>\n      <Modal\n        style={{\n          top: '40px',\n        }}\n        destroyOnClose={true}\n        title='Add New Component Item'\n        visible={addNewCategoryVisible}\n        onOk={(e: any) => handleAddItem(e)}\n        onCancel={handleCancel}\n        okText='Add'\n        okButtonProps={{\n          htmlType: 'submit',\n        }}\n        width={'400px'}\n        bodyStyle={{\n          margin: '0',\n          padding: '10px',\n        }}\n      >\n        <Input\n          label='Title'\n          value={localComponentItem.title}\n          name='title'\n          onChange={handleComponentItemsChange}\n        />\n        <Input\n          label='Text'\n          value={localComponentItem.text}\n          name='text'\n          onChange={handleComponentItemsChange}\n        />\n\n        <Input\n          label='Target'\n          value={localComponentItem.target}\n          name='target'\n          onChange={handleComponentItemsChange}\n        />\n\n        <h3 className='inputFieldLabel-small'>Images</h3>\n\n        <div className='aboutToUploadImagesContainer'>\n          {myImages &&\n            // @ts-ignore\n            myImages.length > 0 &&\n            myImages.map((image, index) => {\n              return (\n                <div className='aboutToUploadImagesContainer__item'>\n                  <div className='aboutToUploadImagesContainer__item-imgContainer'>\n                    <img src={image.cover} alt={image.alt} />\n                  </div>\n\n                  <span\n                    onClick={() => handleImagesDelete(image.id)}\n                    className='aboutToUploadImagesContainer__item-remove'\n                  >\n                    <CloseOutlined />\n                  </span>\n                </div>\n              );\n            })}\n\n          <Tooltip title={'Attach images'}>\n            <div\n              onClick={() => {\n                setvisibleMedia(true);\n              }}\n              className='aboutToUploadImagesContainer__uploadItem'\n            >\n              {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n              <FileImageFilled />\n              {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n              <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                <PlusOutlined />\n              </span>\n            </div>\n          </Tooltip>\n        </div>\n\n        <MediaLibrary\n          setvisible={setvisibleMedia}\n          visible={visibleMedia}\n          myImages={myImages}\n          setmyImages={setmyImages}\n          isModalOpenForImages={true}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Collapse,\n  Button,\n  Tooltip,\n  Upload,\n  Modal,\n  Input,\n  notification,\n  Popconfirm,\n} from 'antd';\nimport {\n  CaretRightOutlined,\n  CheckCircleOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n} from '@ant-design/icons';\n\n// import components\nimport InputField from '../../components/Field/Input';\nimport Empty from '../../components/Empty';\nimport ComponentImageUpload from './ComponentImageUpload';\nimport { useHandleFetch } from '../../hooks';\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport AddNewComponent from './AddNewComponent';\nimport ComponentListComponentItem from './ComponentListComponentItem';\nimport AddNewComponentItem from './AddNewComponentItem';\nimport { category } from '../../state/ducks';\nimport { truncate } from 'fs';\n\nconst { Panel } = Collapse;\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Component Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst text = `\n  A dog is a type of domesticated animal.\n  Known for its loyalty and faithfulness,\n  it can be found as a welcome guest in many households across the world.\n`;\n\nfunction getBase64(file: any) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n}\n\nconst genExtra = (updateComponentByDeleting, component, id) => (\n  <div\n    style={{\n      display: 'flex',\n    }}\n  >\n    <Tooltip placement='top' title='Edit Component'>\n      <a href='##'>\n        <EditOutlined\n          onClick={(event) => {\n            // If you don't want click extra trigger collapse, you can prevent this:\n            // event.stopPropagation();\n          }}\n        />\n      </a>\n    </Tooltip>\n\n    <div\n      style={{\n        marginLeft: '15px',\n      }}\n    />\n    <a\n      href='##'\n      style={{\n        color: 'rgb(241, 67, 67)',\n      }}\n    >\n      <Popconfirm\n        onConfirm={() => updateComponentByDeleting(id, component)}\n        title='Are you sure？'\n        okText='Yes'\n        cancelText='No'\n      >\n        <DeleteOutlined\n          onClick={(event) => {\n            // If you don't want click extra trigger collapse, you can prevent this:\n            event.stopPropagation();\n          }}\n        />\n      </Popconfirm>\n    </a>\n  </div>\n);\n\nconst genExtraForGroup = (\n  setitemVisible: any,\n  handleDeleteComponent: any,\n  id: any,\n  setComponentId: any\n) => (\n  <div\n    style={{\n      display: 'flex',\n    }}\n  >\n    <Tooltip placement='top' title='Add new item Component'>\n      <a href='##'>\n        <PlusOutlined\n          onClick={(event) => {\n            // If you don't want click extra trigger collapse, you can prevent this:\n            // event.stopPropagation();\n            setitemVisible(true);\n            setComponentId(id);\n          }}\n        />\n      </a>\n    </Tooltip>\n\n    <div\n      style={{\n        marginLeft: '15px',\n      }}\n    />\n    <Tooltip placement='top' title='Edit Component'>\n      <a href='##'>\n        <EditOutlined\n          onClick={(event) => {\n            // If you don't want click extra trigger collapse, you can prevent this:\n            // event.stopPropagation();\n          }}\n        />\n      </a>\n    </Tooltip>\n\n    <div\n      style={{\n        marginLeft: '15px',\n      }}\n    />\n    <a\n      href='##'\n      style={{\n        color: 'rgb(241, 67, 67)',\n      }}\n    >\n      <Popconfirm\n        onConfirm={() => handleDeleteComponent(id)}\n        title='Are you sure？'\n        okText='Yes'\n        cancelText='No'\n      >\n        <DeleteOutlined\n          onClick={(event) => {\n            // If you don't want click extra trigger collapse, you can prevent this:\n            event.stopPropagation();\n          }}\n        />\n      </Popconfirm>\n    </a>\n  </div>\n);\n\nconst Component = (props) => {\n  const [visible, setvisible] = useState(false);\n  const [groupVisible, setgroupVisible] = useState(false);\n  const [itemVisible, setitemVisible] = useState(false);\n  const [componentId, setComponentId] = useState('');\n\n  const [componentState, handleComponentListFetch] = useHandleFetch(\n    {},\n    'componentList'\n  );\n  const [deleteComponentState, handleDeleteComponentFetch] = useHandleFetch(\n    {},\n    'deleteComponent'\n  );\n  const [updateComponentState, handleUpdateComponentFetch] = useHandleFetch(\n    {},\n    'updateComponent'\n  );\n\n  const [componentList, setComponentList] = useState([]);\n\n  useEffect(() => {\n    const setComponents = async () => {\n      const components = await handleComponentListFetch({\n        urlOptions: {\n          params: {\n            imageValue: true,\n          },\n        },\n      });\n      // @ts-ignore\n      setComponentList(components);\n    };\n    setComponents();\n  }, []);\n\n  console.log('componentListd', componentList);\n\n  const handleSearch = (value) => {\n    if (componentState.data.length > 0) {\n      const newComponentList = componentState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setComponentList(newComponentList);\n    }\n  };\n\n  const handleDeleteComponent = async (id) => {\n    const deleteComponentRes = await handleDeleteComponentFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteComponentRes && deleteComponentRes.status === 'ok') {\n      openSuccessNotification('Component Deleted');\n      const newComponentList = componentList.filter((item) => item.id !== id);\n      setComponentList(newComponentList);\n    } else {\n      openErrorNotification(\"Couldn't delete, Something went wrong\");\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n  const handleOkGroup = (e: any) => {\n    setgroupVisible(false);\n  };\n\n  const handleCancelGroup = (e: any) => {\n    setgroupVisible(false);\n  };\n\n  const componentUpdate = async (item, component, localComponentItem) => {\n    const positionInComponents = () => {\n      return componentList.map((item) => item.id).indexOf(component.id);\n    };\n\n    const positionInItemsOfComponent = () => {\n      return component.items.map((item) => item.id).indexOf(item.id);\n    };\n\n    const componentIndex = positionInComponents();\n\n    const itemIndex = positionInItemsOfComponent();\n\n    const manupulatedLocalComponentForTheReq =\n      localComponentItem.image.length > 0\n        ? {\n            ...localComponentItem,\n            image:\n              localComponentItem.image.length > 0\n                ? localComponentItem.image.map((img) => img.id)\n                : [],\n          }\n        : localComponentItem;\n\n    const componentItems =\n      component.items.length > 0\n        ? component.items.map((componentItem) => {\n            return {\n              ...componentItem,\n              image:\n                componentItem.image && componentItem.image.length > 0\n                  ? componentItem.image.map((imgItem) => imgItem['id'] || '')\n                  : [],\n            };\n          })\n        : [];\n\n    const updatedItems = [\n      ...component.items.slice(0, itemIndex),\n      localComponentItem,\n      ...component.items.slice(itemIndex + 1),\n    ];\n\n    console.log('updatedItemsTheDamnItems', updatedItems);\n\n    const manupulatedUpdatedItems = [\n      ...componentItems.slice(0, itemIndex),\n      manupulatedLocalComponentForTheReq,\n      ...componentItems.slice(itemIndex + 1),\n    ];\n\n    const manupulatedUpdatedItem = Object.assign(\n      {},\n      componentList[componentIndex],\n      {\n        ...component,\n        items: manupulatedUpdatedItems,\n      }\n    );\n\n    const updatedItem = Object.assign({}, componentList[componentIndex], {\n      ...component,\n      items: updatedItems,\n    });\n\n    const updateComponentList = [\n      ...componentList.slice(0, componentIndex),\n      updatedItem,\n      ...componentList.slice(componentIndex + 1),\n    ];\n\n    const updateComponentRes = await handleUpdateComponentFetch({\n      urlOptions: {\n        placeHolders: {\n          id: component.id,\n        },\n      },\n      body: {\n        ...manupulatedUpdatedItem,\n        groupName: updatedItem.name,\n      },\n    });\n\n    // @ts-ignore\n    if (updateComponentRes && updateComponentRes.status === 'ok') {\n      openSuccessNotification('Component Updated');\n      setComponentList(updateComponentList);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  const updateComponentByDeleting = async (id, component) => {\n    const positionInComponents = () => {\n      return componentList.map((item) => item.id).indexOf(component.id);\n    };\n\n    const positionInItemsOfComponent = () => {\n      return component.items.map((item) => item.id).indexOf(id);\n    };\n\n    const componentIndex = positionInComponents();\n\n    const itemIndex = positionInItemsOfComponent();\n\n    const updatedItems = [\n      ...component.items.slice(0, itemIndex),\n      ...component.items.slice(itemIndex + 1),\n    ];\n\n    const updatedItem = Object.assign({}, componentList[componentIndex], {\n      ...component,\n      items: updatedItems,\n    });\n\n    const updateComponentList = [\n      ...componentList.slice(0, componentIndex),\n      updatedItem,\n      ...componentList.slice(componentIndex + 1),\n    ];\n\n    const updateComponentRes = await handleUpdateComponentFetch({\n      urlOptions: {\n        placeHolders: {\n          id: component.id,\n        },\n      },\n      body: {\n        ...updatedItem,\n        groupName: updatedItem.name,\n      },\n    });\n\n    // @ts-ignore\n    if (updateComponentRes && updateComponentRes.status === 'ok') {\n      openSuccessNotification('Component Item deleted');\n      setComponentList(updateComponentList);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  const updateComponentByAddingItem = async (localComponentItem, id) => {\n    const positionInComponents = () => {\n      return componentList.map((item) => item.id).indexOf(id);\n    };\n\n    const componentIndex = positionInComponents();\n\n    const updatedItems = [\n      ...componentList[componentIndex].items,\n      localComponentItem,\n    ];\n\n    const updatedItem = Object.assign({}, componentList[componentIndex], {\n      ...componentList[componentIndex],\n      items: updatedItems,\n    });\n\n    const updateComponentList = [\n      ...componentList.slice(0, componentIndex),\n      updatedItem,\n      ...componentList.slice(componentIndex + 1),\n    ];\n\n    const updateComponentRes = await handleUpdateComponentFetch({\n      urlOptions: {\n        placeHolders: {\n          id: id,\n        },\n      },\n      body: {\n        ...updatedItem,\n        groupName: updatedItem.name,\n      },\n    });\n\n    // @ts-ignore\n    if (updateComponentRes && updateComponentRes.status === 'ok') {\n      openSuccessNotification('Component Item Added');\n      setComponentList(updateComponentList);\n      setitemVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Components</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search components..'\n              onSearch={(value) => handleSearch(value)}\n            />\n          </div>\n          <Button\n            // type=\"primary\"\n            className='btnPrimaryClassNameoutline'\n            icon={<PlusOutlined />}\n            onClick={() => setgroupVisible(true)}\n          >\n            Add New\n          </Button>\n        </div>\n\n        <div className='categoryListContainer__afterHeader'></div>\n\n        <div className='categoryListContainer__categoryList'>\n          {componentState.isLoading && <DataTableSkeleton />}\n\n          {componentState.done && !(componentList.length > 0) && (\n            <div\n              style={{\n                marginTop: '50px',\n              }}\n            >\n              <Empty title='No Component found' />\n            </div>\n          )}\n\n          {componentState.done && componentList.length > 0 && (\n            <div className='componentsItemContainer'>\n              {componentList.map((component) => {\n                console.log('mycomponent');\n                return (\n                  <div className='componentsItemContainer-item'>\n                    <Collapse\n                      accordion={false}\n                      bordered={false}\n                      expandIconPosition='left'\n                      expandIcon={({ isActive }) => (\n                        <CaretRightOutlined rotate={isActive ? 90 : 0} />\n                      )}\n                      className='site-collapse-custom-collapse'\n                    >\n                      <Panel\n                        header={component.name}\n                        key='1'\n                        className='site-collapse-custom-panel'\n                        extra={genExtraForGroup(\n                          setitemVisible,\n                          handleDeleteComponent,\n                          component.id,\n                          setComponentId\n                        )}\n                      >\n                        <div className=' componentsItemContainer-white'>\n                          {component.items &&\n                            component.items.length > 0 &&\n                            component.items.map((item) => {\n                              return (\n                                <div className='componentsItemContainer-item-item'>\n                                  <Collapse\n                                    accordion={false}\n                                    bordered={false}\n                                    expandIconPosition='left'\n                                    expandIcon={({ isActive }) => (\n                                      <CaretRightOutlined\n                                        rotate={isActive ? 90 : 0}\n                                      />\n                                    )}\n                                    className='site-collapse-custom-collapse'\n                                  >\n                                    <Panel\n                                      header={item.title || ''}\n                                      key='1'\n                                      className='site-collapse-custom-panel'\n                                      extra={genExtra(\n                                        updateComponentByDeleting,\n                                        component,\n                                        item.id\n                                      )}\n                                    >\n                                      <ComponentListComponentItem\n                                        setComponentList={setComponentList}\n                                        componentList={componentList}\n                                        item={item}\n                                        component={component}\n                                        componentUpdate={componentUpdate}\n                                        isLoadingUpdate={\n                                          updateComponentState.isLoading\n                                        }\n                                      />\n                                    </Panel>\n                                  </Collapse>\n                                </div>\n                              );\n                            })}\n\n                          {!(component.items.length > 0) && (\n                            <Empty title='No item Found' />\n                          )}\n                        </div>\n                      </Panel>\n                    </Collapse>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewComponent\n        addNewCategoryVisible={groupVisible}\n        setAddNewCategoryVisible={setgroupVisible}\n        setComponentList={setComponentList}\n        componentList={componentList}\n      />\n      <AddNewComponentItem\n        addNewCategoryVisible={itemVisible}\n        setAddNewCategoryVisible={setitemVisible}\n        setComponentList={setComponentList}\n        componentList={componentList}\n        updateComponentByAddingItem={updateComponentByAddingItem}\n        componentId={componentId}\n      />\n\n      <Modal\n        title='Add New Group Component'\n        visible={false}\n        onOk={handleOkGroup}\n        onCancel={handleCancelGroup}\n        footer={null}\n        okText='Done'\n      >\n        <InputField label='Group Component Name' />\n      </Modal>\n    </>\n  );\n};\n\nexport default Component;\n","import React, { useState } from 'react';\n\n// import third libraries\nimport { Upload, message, notification, Modal } from 'antd';\n// import { Formik } from 'formik';\n// import * as Yup from 'yup';\nimport reqwest from 'reqwest';\n\n\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n\n// import configs\nimport config from \"../../config.json\";\n\n\nimport {\n    InboxOutlined,\n    CheckCircleOutlined,\n    LoadingOutlined,\n    PlusOutlined\n} from '@ant-design/icons';\n\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport MediaLibrary from \"../../components/MediaLibrary\";\n\n\nconst { Dragger } = Upload;\n\n\n// const validationSchema = Yup.object().shape({\n//     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n// });\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.error({\n        message: message || 'Brand Created',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nconst initialValues = {\n    name: '',\n    description: '',\n    image: [],\n    url: '',\n    cover: ''\n}\n\n\n\ninterface Props {\n    addNewCategoryVisible?: any;\n    setAddNewCategoryVisible?: any;\n    themeList?: any;\n    setThemeList?: any;\n\n}\n\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, themeList, setThemeList }: Props) => {\n\n    const [addThemeState, handleAddthemeFetch] = useHandleFetch({}, 'addTheme', 'form');\n    const [myImages, setmyImages] = useState(false);\n    const [visibleMedia, setvisibleMedia] = useState(false);\n    const [myThumbnailImage, setmyThumbnailImage] = useState([]);\n    const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n    const [selectedThemeTypeValue, setselectedThemeTypeValue] = useState('');\n    const [fileList, setfileList] = useState([]);\n    const [uploading, setuploading] = useState(false);\n    const [loadingThumnail, setLoadingThumbnail] = useState(false);\n    const [imageUrl, setImageUrl] = useState('');\n    const [name, setname] = useState('')\n    const [thumbnailFile, setThumbnailFile] = useState('')\n\n\n\n\n\n    const handleSubmit = async () => {\n        setuploading(true);\n\n        const formData = new FormData();\n        fileList.forEach(file => {\n            formData.append('folder', file, file.name);\n        });\n        formData.append(\"name\", name);\n        formData.append('thumbnail', thumbnailFile)\n\n\n        const addThemeRes = await handleAddthemeFetch({\n            body: formData,\n        });\n\n\n        setuploading(false);\n        // @ts-ignore\n        if (addThemeRes && addThemeRes.status === 'ok') {\n\n            setThemeList([...themeList, {\n                id: addThemeRes['_id'] || '',\n                key: addThemeRes['_id'] || '',\n                name: addThemeRes['name'] || '',\n                thumbnail: addThemeRes['thumbnail'] || '',\n                path: addThemeRes['path'] || '',\n                added: addThemeRes['added'] || '',\n                // @ts-ignore\n                ...addThemeRes\n            }]);\n\n            setfileList([]);\n            setuploading(false);\n            openSuccessNotification('Theme Uploaded!')\n            setAddNewCategoryVisible(false);\n            setname('');\n            setselectedThemeTypeValue('');\n\n\n\n\n            setAddNewCategoryVisible(false);\n        }\n        else {\n            openErrorNotification('Theme upload failed, Something went wrong');\n        }\n\n    };\n\n\n\n\n    const handleCancel = (e: any) => {\n        setAddNewCategoryVisible(false);\n    };\n\n\n    const getisSubmitButtonDisabled = () => {\n        if (addThemeState.isLoading) {\n            return true;\n        }\n        return false;\n    }\n\n\n\n\n    const handleImagesDelete = (id) => {\n        // @ts-ignore\n        const newImages = myImages && myImages.filter(image => {\n            return image.id !== id;\n        })\n\n        setmyImages(newImages);\n    }\n\n\n\n    const handleThumbnailImageDelete = (id) => {\n        // @ts-ignore\n        const newImages = myThumbnailImage && myThumbnailImage.filter(image => {\n            return image.id !== id;\n        })\n\n        if (newImages.length > 0) {\n            setmyThumbnailImage(newImages);\n\n        }\n        // @ts-ignore\n        else setmyThumbnailImage([]);\n    }\n\n\n    const onChangeThemeType = (value) => {\n        setselectedThemeTypeValue(value);\n    }\n\n\n\n    const uploadProps = {\n        //  listType: 'picture',\n        onRemove: file => {\n            setfileList(filelist => {\n                const index = fileList.indexOf(file);\n                const newFileList = fileList.slice();\n                newFileList.splice(index, 1);\n                return newFileList;\n            })\n\n        },\n        beforeUpload: file => {\n            setfileList(filelist => {\n                return [...fileList, file]\n            })\n            return false;\n        },\n        fileList,\n    };\n\n    const handleUpload = async () => {\n        const formData = new FormData();\n        fileList.forEach(file => {\n            formData.append('folder', file, file.name);\n        });\n        formData.append(\"name\", name);\n        formData.append('thumbnail', imageUrl)\n\n        setuploading(true);\n\n        //  const addImageToLibraryRes = awAddait handleMediaLibraryFetch({\n        // \tbody: formData\n        //   });\n\n        //   console.log('addImageToLibraryRes',addImageToLibraryRes)\n\n\n\n\n\n\n\n        // You can use any AJAX library you like\n        reqwest({\n            url: `${config.baseURL}/admin/theme/add`,\n            method: 'post',\n            processData: false,\n            data: formData,\n            withCredentials: true,\n            success: () => {\n                setfileList([]);\n                setuploading(false);\n                openSuccessNotification('Theme Uploaded!')\n                setAddNewCategoryVisible(false);\n                setname('');\n                setselectedThemeTypeValue('');\n                setThemeList([...themeList, {\n\n                }])\n                // setThemeList([...themeList, {\n                //     id: addCategoryRes['id'] || '',\n                //     key: addCategoryRes['id'] || '',\n                //     name: addCategoryRes['name'] || '',\n                //     description: addCategoryRes['description'] || '',\n                //     // @ts-ignore\n                //     ...addCategoryRes\n                // }])\n            },\n            error: () => {\n                setuploading(false);\n                openErrorNotification('Theme Upload failed!')\n                message.error('upload failed.');\n            },\n        });\n    };\n\n\n    function getBase64(img, callback) {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    function beforeUpload(file) {\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n        if (!isJpgOrPng) {\n            message.error('You can only upload JPG/PNG file!');\n        }\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            message.error('Image must smaller than 2MB!');\n        }\n\n\n        getBase64(file, imageUrl => {\n            setImageUrl(imageUrl)\n            setThumbnailFile(file);\n            setLoadingThumbnail(false)\n        })\n\n        return false;\n    }\n\n\n\n    const uploadButton = (\n        <div>\n            {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\n            <div className=\"ant-upload-text\">Upload</div>\n        </div>\n    );\n\n    return (\n        <>\n            <Modal\n                style={{\n                    top: '40px'\n                }}\n                title=\"Add New Theme\"\n                visible={addNewCategoryVisible}\n                onOk={handleSubmit}\n                onCancel={handleCancel}\n                okText='Upload Theme'\n                okButtonProps={{\n                    loading: uploading,\n                    htmlType: \"submit\",\n                    disabled: getisSubmitButtonDisabled()\n                }}\n\n                bodyStyle={{\n                    margin: '0',\n                    padding: '10px'\n                }}\n            >\n\n                <Input\n                    label='Name'\n                    value={name}\n                    name='name'\n                    onChange={(e: any) => setname(e.target.value)}\n                    isError={addThemeState.error['error']['name']}\n\n                    errorString={addThemeState.error['error']['name']}\n                />\n\n                <div style={{\n                    marginTop: '20px'\n                }}></div>\n\n\n                <h3 className='inputFieldLabel'>Thumbnail</h3>\n                <Upload\n                    name=\"avatar\"\n                    listType=\"picture-card\"\n                    className=\"avatar-uploader\"\n                    showUploadList={false}\n                    beforeUpload={beforeUpload}\n                    multiple={false}\n                >\n                    {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n                </Upload>\n\n\n\n                <div style={{\n                    marginTop: '3px'\n                }}></div>\n                <h3 className='inputFieldLabel'>\n                    Theme Folder (.zip)\n\t\t\t\t\t\t\t\t\t</h3>\n\n\n                <Dragger\n                    multiple={false}\n                    className='upload-list-inline'\n                    listType='picture'\n                    style={{\n                        background: '#fff'\n                    }}\n                    {...uploadProps}\n                >\n                    <p className='ant-upload-drag-icon'>\n                        <InboxOutlined />\n                    </p>\n                    <p className='ant-upload-text'>Click or drag file to this area to upload</p>\n                    <p className='ant-upload-hint'>\n                        Support for a single or bulk upload. Strictly prohibit from uploading company data or\n                        other band files\n\t\t\t\t\t\t\t</p>\n                </Dragger>\n\n                {addThemeState.error['error']['folder'] && (\n                    <p style={{\n                        color: 'rgba(255, 0, 0, 0.507)'\n                    }}>{addThemeState.error['error']['folder']}</p>\n                )}\n\n\n\n\n\n            </Modal>\n\n            <MediaLibrary\n                setvisible={setvisibleMedia}\n                visible={visibleMedia}\n                setmyImages={setmyImages}\n                isModalOpenForImages={false}\n                setmyThumbnailImage={setmyThumbnailImage}\n                isModalOpenForThumbnail={isModalOpenForThumbnail}\n                myThumbnailImage={myThumbnailImage}\n            />\n        </>\n    );\n};\n\nexport default AddNewBrand;\n\n\n\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Button,\n  Input,\n  Tooltip,\n  Modal,\n  notification,\n  Popconfirm,\n  Badge,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  CheckOutlined,\n  CheckCircleOutlined,\n  CheckCircleTwoTone,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport AddNewTheme from './AddNewTheme';\n\nimport Empty from '../../components/Empty';\n\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  history: any;\n}\n\nconst CustomerList = ({ history }: Props) => {\n  const [themeList, setThemeList] = useState([]);\n\n  const [themeState, handleThemeListFetch] = useHandleFetch({}, 'themeList');\n  const [activeThemeState, handleActiveThemeFetch] = useHandleFetch(\n    {},\n    'activeTheme'\n  );\n  const [updateDeleteThemeState, handleDeleteThemeFetch] = useHandleFetch(\n    {},\n    'deletetheme'\n  );\n\n  useEffect(() => {\n    const setThemes = async () => {\n      const themes = await handleThemeListFetch({});\n      // @ts-ignore\n      setThemeList(themes);\n    };\n    setThemes();\n  }, []);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const handleSearch = (value) => {\n    if (themeState.data.length > 0) {\n      const newThemeList = themeState.data.filter((item) =>\n        item.name.includes(value)\n      );\n      setThemeList(newThemeList);\n    }\n  };\n\n  const handleActiveTheme = async (id) => {\n    const activeThemeRes = await handleActiveThemeFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (activeThemeRes && activeThemeRes.status === 'ok') {\n      openSuccessNotification('Theme activated');\n    } else {\n      openErrorNotification(\n        \"Couldn't activate the theme, Something went wrong\"\n      );\n    }\n  };\n\n  const handleDeleteTheme = async (id) => {\n    const deleteThemeRes = await handleDeleteThemeFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteThemeRes && deleteThemeRes.status === 'ok') {\n      openSuccessNotification('Theme Deleted');\n      const newThemeList = themeList.filter((item) => item.id !== id);\n      setThemeList(newThemeList);\n    } else {\n      openErrorNotification(\"Couldn't delete, Something went wrong\");\n    }\n  };\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Themes</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search themes..'\n              onSearch={(value) => handleSearch(value)}\n              // style={{ width: 300 }}\n            />\n          </div>\n          <Button\n            // type=\"primary\"\n            className='btnPrimaryClassNameoutline'\n            icon={<PlusOutlined />}\n            onClick={() => setAddNewCategoryVisible(true)}\n          >\n            Add New\n          </Button>\n        </div>\n\n        <div className='categoryListContainer__afterHeader'></div>\n\n        <div className='categoryListContainer__categoryList'>\n          {themeState.done && themeList.length > 0 && (\n            <div className='categoryListContainer__bodyContainerList'>\n              {themeList.map((theme) => {\n                return (\n                  <div className='categoryListContainer__bodyContainerList-item'>\n                    {/* <Badge count={<CheckCircleTwoTone style={{ color: '#3FA3FF' }} />}>\n               \n                  </Badge> */}\n                    <div className='categoryListContainer__bodyContainerList-item-top'>\n                      <img alt='theme img' src={theme.thumbnail} />\n                    </div>\n                    <div className='categoryListContainer__bodyContainerList-item-body'>\n                      <h3> {theme.name} </h3>\n\n                      <div\n                        style={{\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                        }}\n                      >\n                        <Tooltip placement='top' title='Active this theme'>\n                          <Button\n                            size='small'\n                            className='btnPrimaryClassNameoutline'\n                            icon={<CheckOutlined />}\n                            onClick={() => handleActiveTheme(theme.id)}\n                          >\n                            <span\n                              style={{\n                                fontSize: '11px',\n                              }}\n                            >\n                              Set Active\n                            </span>\n                          </Button>\n                        </Tooltip>\n\n                        <Tooltip placement='top' title='Delete theme'>\n                          <Popconfirm\n                            onConfirm={() => handleDeleteTheme(theme.id)}\n                            title='Are you sure？'\n                            okText='Yes'\n                            cancelText='No'\n                          >\n                            <Button\n                              size='small'\n                              type='link'\n                              danger={true}\n                              icon={<DeleteOutlined />}\n                            ></Button>\n                          </Popconfirm>\n                        </Tooltip>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n\n          {themeState.isLoading && <DataTableSkeleton />}\n\n          {themeState.done && !(themeList.length > 0) && (\n            <Empty title='No Theme found' />\n          )}\n        </div>\n      </div>\n\n      {themeState.done && (\n        <AddNewTheme\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          themeList={themeState.data}\n          setThemeList={setThemeList}\n        />\n      )}\n    </>\n  );\n};\n\nexport default withRouter(CustomerList);\n","import React from 'react'\n\ninterface Props {\n    \n}\n\nconst Image = (props: Props) => {\n    return (\n        <div>\n            Image\n        </div>\n    )\n}\n\nexport default Image\n","import React from 'react';\n\ninterface Props {}\n\nconst Invoice = (props: Props) => {\n\treturn <div>Invoice</div>;\n};\n\nexport default Invoice;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport { notification, Button } from 'antd';\n\nimport { CheckCircleOutlined } from '@ant-design/icons';\n\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().label('Title').required('Site title can not be empty'),\n  adminEmail: Yup.string()\n    .label('Admin Email')\n    .required('Admin Email can not be empty'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Site Info Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  title: '',\n  adminName: '',\n  adminEmail: '',\n  adminPhone: '',\n};\n\ninterface Props {}\n\nconst UpdateSiteinfo = ({}: Props) => {\n  const [\n    UpdateSiteSettingsState,\n    handleUpdateSiteSettingsFetch,\n  ] = useHandleFetch({}, 'updateSiteSettings');\n  const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch(\n    {},\n    'siteSettings'\n  );\n\n  useEffect(() => {\n    const getSiteSettings = async () => {\n      const siteSettingsRes = await handlSiteSettingsFetch({});\n\n      // console.log('siteSettingsRes', siteSettingsRes)\n    };\n    getSiteSettings();\n  }, [UpdateSiteSettingsState]);\n\n  // console.log('siteSettingsState', siteSettingsState);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\n      body: {\n        title: values.title,\n        adminName: values.adminName,\n        adminEmail: values.adminEmail,\n        adminPhone: values.adminPhone,\n      },\n    });\n\n    // @ts-ignore\n    if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\n      openSuccessNotification();\n\n      // setBrandList([...brandList, {\n      //     id: addBrandRes['id'] || '',\n      //     key: addBrandRes['id'] || '',\n      //     name: addBrandRes['name'] || '',\n      //     description: addBrandRes['description'] || '',\n      //     // @ts-ignore\n      //     ...addBrandRes\n      // }]);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.title || !values.adminEmail || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const getInitialValues = () => {\n    if (\n      siteSettingsState.data &&\n      Object.keys(siteSettingsState.data).length > 0\n    ) {\n      return { ...siteSettingsState.data };\n    } else {\n      return initialValues;\n    }\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      enableReinitialize={true}\n      initialValues={getInitialValues()}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <div className='siteInfoContainer__item'>\n            <div className='siteInfoContainer__item-item'>\n              <Input\n                label='Admin Title'\n                value={values.title}\n                name='title'\n                isError={\n                  (touched.title && errors.title) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['title'])\n                }\n                errorString={\n                  (touched.title && errors.title) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['title'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('title');\n                }}\n              />\n            </div>\n            <div className='siteInfoContainer__item-item'>\n              <Input\n                label='Admin Name'\n                value={values.adminName}\n                name='adminName'\n                isError={\n                  (touched.adminName && errors.adminName) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['adminName'])\n                }\n                errorString={\n                  (touched.adminName && errors.adminName) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['adminName'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('adminName');\n                }}\n              />\n            </div>\n            <div className='siteInfoContainer__item-item-left'>\n              <Input\n                label='Admin phone'\n                value={values.adminPhone}\n                name='adminPhone'\n                isError={\n                  (touched.adminPhone && errors.adminPhone) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['adminPhone'])\n                }\n                errorString={\n                  (touched.adminPhone && errors.adminPhone) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['adminPhone'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('adminPhone');\n                }}\n              />\n            </div>\n\n            <div\n              className='siteInfoContainer__item-item'\n              style={{\n                marginLeft: '15px',\n              }}\n            >\n              <Input\n                label='Admin Email'\n                value={values.adminEmail}\n                name='adminEmail'\n                isError={\n                  (touched.adminEmail && errors.adminEmail) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['adminEmail'])\n                }\n                errorString={\n                  (touched.adminEmail && errors.adminEmail) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['adminEmail'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('adminEmail');\n                }}\n              />\n            </div>\n          </div>\n\n          <div\n            style={{\n              marginTop: '10px',\n            }}\n          ></div>\n\n          <Button\n            onClick={(e: any) => handleSubmit(e)}\n            loading={isSubmitting}\n            disabled={getisSubmitButtonDisabled(values, isValid)}\n            className='btnPrimaryClassNameoutline'\n          >\n            Update Admin Info\n          </Button>\n\n          <div\n            style={{\n              marginBottom: '10px',\n            }}\n          ></div>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default UpdateSiteinfo;\n//\n","import React, { useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport { notification, Button } from 'antd';\n\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\n\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\n// import MediaLibrary from \"../../components/MediaLibrary\";\n\nconst validationSchema = Yup.object().shape({\n  invoiceTitle: Yup.string()\n    .label('Title')\n    .required('Invoice title is required'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Site Invoice Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  invoiceTitle: '',\n  address: '',\n  phone: '',\n  email: '',\n  additionalText: '',\n};\n\ninterface Props {}\n\nconst UpdateSiteinfo = ({}: Props) => {\n  const [\n    updateInfovSettingsState,\n    handleUpdateInvoiceSettingsFetch,\n  ] = useHandleFetch({}, 'updateInvoiceSettings');\n  const [InvoiceSettingsState, handlSiteInvoiceSettingsFetch] = useHandleFetch(\n    {},\n    'invoiceSettingsDetail'\n  );\n\n  useEffect(() => {\n    const getSiteSettings = async () => {\n      const siteSettingsRes = await handlSiteInvoiceSettingsFetch({});\n\n      // console.log('siteSettingsRes', siteSettingsRes)\n    };\n    getSiteSettings();\n  }, [updateInfovSettingsState]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const updateInvoiceRes = await handleUpdateInvoiceSettingsFetch({\n      body: {\n        invoiceTitle: values.invoiceTitle,\n        address: values.address,\n        phone: values.phone,\n        email: values.email,\n        additionalText: values.additionalText,\n      },\n    });\n\n    // @ts-ignore\n    if (updateInvoiceRes && updateInvoiceRes.status === 'ok') {\n      openSuccessNotification();\n\n      // setBrandList([...brandList, {\n      //     id: addBrandRes['id'] || '',\n      //     key: addBrandRes['id'] || '',\n      //     name: addBrandRes['name'] || '',\n      //     description: addBrandRes['description'] || '',\n      //     // @ts-ignore\n      //     ...addBrandRes\n      // }]);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.invoiceTitle || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const getInitialValues = () => {\n    if (\n      InvoiceSettingsState.data &&\n      Object.keys(InvoiceSettingsState.data).length > 0\n    ) {\n      return { ...InvoiceSettingsState.data };\n    } else {\n      return initialValues;\n    }\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      enableReinitialize={true}\n      initialValues={getInitialValues()}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <div className='siteInfoContainer__item'>\n            <div className='siteInfoContainer__item-item'>\n              <Input\n                label='Company Name'\n                value={values.invoiceTitle}\n                name='invoiceTitle'\n                isError={\n                  (touched.invoiceTitle && errors.invoiceTitle) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['invoiceTitle'])\n                }\n                errorString={\n                  (touched.invoiceTitle && errors.invoiceTitle) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['invoiceTitle'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('invoiceTitle');\n                }}\n              />\n            </div>\n            <div className='siteInfoContainer__item-item'>\n              <Input\n                label='Phone Number'\n                value={values.phone}\n                name='phone'\n                isError={\n                  (touched.phone && errors.phone) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['phone'])\n                }\n                errorString={\n                  (touched.phone && errors.phone) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['phone'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('phone');\n                }}\n              />\n            </div>\n            <div className='siteInfoContainer__item-item'>\n              <Input\n                label='Email'\n                value={values.email}\n                name='email'\n                isError={\n                  (touched.email && errors.email) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['email'])\n                }\n                errorString={\n                  (touched.email && errors.email) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['email'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('email');\n                }}\n              />\n            </div>\n\n            <div className='siteInfoContainer__item-item'>\n              <Input\n                label='Additional Text'\n                value={values.additionalText}\n                name='additionalText'\n                isError={\n                  (touched.additionalText && errors.additionalText) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['additionalText'])\n                }\n                errorString={\n                  (touched.additionalText && errors.additionalText) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['additionalText'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('additionalText');\n                }}\n              />\n            </div>\n\n            <div className='siteInfoContainer__item-item-left'>\n              <TextArea\n                label='Address'\n                value={values.address}\n                name='address'\n                isError={\n                  (touched.address && errors.address) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['address'])\n                }\n                errorString={\n                  (touched.address && errors.address) ||\n                  (!isSubmitting &&\n                    updateInfovSettingsState.error['error']['address'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('address');\n                }}\n              />\n            </div>\n          </div>\n\n          <div\n            style={{\n              marginTop: '10px',\n            }}\n          ></div>\n\n          <Button\n            onClick={(e: any) => handleSubmit(e)}\n            loading={isSubmitting}\n            disabled={getisSubmitButtonDisabled(values, isValid)}\n            className='btnPrimaryClassNameoutline'\n          >\n            Update Invoice Info\n          </Button>\n\n          <div\n            style={{\n              marginBottom: '10px',\n            }}\n          ></div>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default UpdateSiteinfo;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport { notification, Button } from 'antd';\n\nimport { CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\n\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().label('Title').required('Site title can not be empty'),\n  adminEmail: Yup.string()\n    .label('Admin Email')\n    .required('Admin Email can not be empty'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Site Info Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  metaTitle: '',\n  metaTags: '',\n  metaDescription: '',\n  injectHTML: '',\n};\n\ninterface Props {}\n\nconst UpdateSiteSEO = ({}: Props) => {\n  const [\n    UpdateSiteSettingsState,\n    handleUpdateSiteSettingsFetch,\n  ] = useHandleFetch({}, 'updateSiteSEO');\n  const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch(\n    {},\n    'getSiteSEO'\n  );\n\n  useEffect(() => {\n    const getSiteSettings = async () => {\n      const siteSettingsRes = await handlSiteSettingsFetch({});\n    };\n    getSiteSettings();\n  }, [UpdateSiteSettingsState]);\n\n  // console.log('siteSettingsState', siteSettingsState);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\n      body: {\n        metaTitle: values.metaTitle,\n        metaTags: values.metaTags,\n        metaDescription: values.metaDescription,\n        injectHTML: values.injectHTML\n      },\n    });\n\n    // @ts-ignore\n    if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\n      openSuccessNotification();\n\n      // setBrandList([...brandList, {\n      //     id: addBrandRes['id'] || '',\n      //     key: addBrandRes['id'] || '',\n      //     name: addBrandRes['name'] || '',\n      //     description: addBrandRes['description'] || '',\n      //     // @ts-ignore\n      //     ...addBrandRes\n      // }]);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.metaTitle || !values.metaTags || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const getInitialValues = () => {\n    if (\n      siteSettingsState.data &&\n      Object.keys(siteSettingsState.data).length > 0\n    ) {\n      return { ...siteSettingsState.data };\n    } else {\n      return initialValues;\n    }\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      enableReinitialize={true}\n      initialValues={getInitialValues()}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <div className='siteInfoContainer__item'>\n            <div className='siteInfoContainer__item-item'>\n              <Input\n                label='Meta Title'\n                value={values.metaTitle}\n                name='metaTitle'\n                isError={\n                  (touched.metaTitle && errors.metaTitle) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['metaTitle'])\n                }\n                errorString={\n                  (touched.metaTitle && errors.metaTitle) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['metaTitle'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('metaTitle');\n                }}\n              />\n            </div>\n            <div className='siteInfoContainer__item-item'>\n              <Input\n                label='Meta Tags'\n                value={values.metaTags}\n                name='metaTags'\n                isError={\n                  (touched.metaTags && errors.metaTags) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['metaTags'])\n                }\n                errorString={\n                  (touched.metaTags && errors.metaTags) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['metaTags'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('metaTags');\n                }}\n              />\n            </div>\n            <div className='siteInfoContainer__item-item-left'>\n              <TextArea\n                label='Meta Description'\n                value={values.metaDescription}\n                name='metaDescription'\n                isError={\n                  (touched.metaDescription && errors.metaDescription) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['metaDescription'])\n                }\n                errorString={\n                  (touched.metaDescription && errors.metaDescription) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['metaDescription'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('metaDescription');\n                }}\n              />\n            </div>\n\n     \n\n          </div>\n\n          <div \n              className='siteInfoContainer__item-item'>\n              <TextArea\n                rows={8}\n                label='Inject HTML ( Inside <head></head> Tag )'\n                value={values.injectHTML}\n                name='injectHTML'\n                isError={\n                  (touched.injectHTML && errors.injectHTML) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['injectHTML'])\n                }\n                errorString={\n                  (touched.injectHTML && errors.injectHTML) ||\n                  (!isSubmitting &&\n                    UpdateSiteSettingsState.error['error']['injectHTML'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('injectHTML');\n                }}\n              />\n            </div>\n\n\n\n          <div\n            style={{\n              marginTop: '10px',\n            }}\n          ></div>\n\n          <Button\n            onClick={(e: any) => handleSubmit(e)}\n            loading={isSubmitting}\n            // disabled={getisSubmitButtonDisabled(values, isValid)}\n            className='btnPrimaryClassNameoutline'\n          >\n            Update\n          </Button>\n\n          <div\n            style={{\n              marginBottom: '10px',\n            }}\n          ></div>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default UpdateSiteSEO;\n//\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport { notification, Button } from 'antd';\n\nimport {\n    CheckCircleOutlined\n} from '@ant-design/icons';\n\n\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from \"../../components/MediaLibrary\";\n\n\n\nconst validationSchema = Yup.object().shape({\n    newPassword: Yup.string()\n    .label('New Password')\n    .required()\n    .min(6, 'New Password must have at least 6 characters'),\n  newPassword2: Yup.string()\n    .label('Confirm New password')\n    .required()\n    .min(6, 'Confirm New password must have at least 6 characters')\n    .oneOf(\n      [Yup.ref('newPassword'), null],\n      'Confirm new password must match to new password'\n    ),\n});\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Site Info Updated',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nconst initialValues = {\n    name: '',\n    phone: '',\n    email: '',\n    newPass: '',\n    password:'',\n    newPassword: '',\n    newPassword2: '',\n}\n\n\n\ninterface Props {\n\n\n}\n\nconst ChangeAdminPassword = ({ }: Props) => {\n\n    const [UpdateSiteSettingsState, handleUpdateSiteSettingsFetch] = useHandleFetch({}, 'updateAdminCredential');\n    const [siteSettingsState, handlSiteSettingsFetch] = useHandleFetch({}, 'getAdminCredential');\n\n\n\n    useEffect(() => {\n        const getSiteSettings = async () => {\n            const siteSettingsRes = await handlSiteSettingsFetch({});\n\n        }\n        getSiteSettings();\n    }, [UpdateSiteSettingsState]);\n\n\n\n    console.log('siteSettingsState',siteSettingsState)\n\n    // console.log('siteSettingsState', siteSettingsState);\n\n    const handleSubmit = async (values: any, actions: any) => {\n\n\n        const addSiteInfoRes = await handleUpdateSiteSettingsFetch({\n            body: {\n                name: values.name,\n                phone: values.phone,\n                email: values.email,\n                password: values.password, \n                newPass: values.newPassword,\n                newPassRepeat: values.newPassword2,\n            },\n        });\n\n        // @ts-ignore\n        if (addSiteInfoRes && addSiteInfoRes.status === 'ok') {\n            openSuccessNotification();\n\n\n            // setBrandList([...brandList, {\n            //     id: addBrandRes['id'] || '',\n            //     key: addBrandRes['id'] || '',\n            //     name: addBrandRes['name'] || '',\n            //     description: addBrandRes['description'] || '',\n            //     // @ts-ignore\n            //     ...addBrandRes\n            // }]);\n\n            actions.resetForm();\n        }\n        else {\n            openErrorNotification();\n        }\n\n\n\n\n        actions.setSubmitting(false);\n\n    };\n\n\n\n\n    const getInitialValues = () => {\n        if (siteSettingsState.data && Object.keys(siteSettingsState.data).length > 0) {\n            return { ...siteSettingsState.data }\n        }\n        else {\n            return initialValues\n        }\n    }\n\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            enableReinitialize={true}\n            initialValues={\n                getInitialValues()\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n\n                        <div className='siteInfoContainer__item'>\n                            <div className='siteInfoContainer__item-item'>\n                                <Input\n                                    type='text'\n                                    label='Name'\n                                    value={values.name}\n                                    name='name'\n                                    isError={(touched.name && errors.name) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['name'])}\n\n                                    errorString={(touched.name && errors.name) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['name'])}\n                                    onChange={(e: any) => {\n                                        handleChange(e);\n                                        setFieldTouched('name');\n                                    }}\n                                />\n                            </div>\n                            <div className='siteInfoContainer__item-item'>\n                                <Input\n                                    type='text'\n                                    label='Phone'\n                                    value={values.phone}\n                                    name='phone'\n                                    isError={(touched.phone && errors.phone) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['phone'])}\n\n                                    errorString={(touched.phone && errors.phone) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['phone'])}\n                                    onChange={(e: any) => {\n                                        handleChange(e);\n                                        setFieldTouched('phone');\n                                    }}\n                                />\n                            </div>\n                        </div>\n\n                        <div style={{\n                            width: '90%',\n                            paddingRight: '30px'\n                        }}>\n                                     <Input\n                                    type='text'\n                                    label='Email'\n                                    value={values.email}\n                                    name='email'\n                                    isError={(touched.email && errors.email) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['email'])}\n\n                                    errorString={(touched.email && errors.email) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['email'])}\n                                    onChange={(e: any) => {\n                                        handleChange(e);\n                                        setFieldTouched('email');\n                                    }}\n                                />\n                        </div>\n\n\n                        <div style={{\n                            width: '90%',\n                            paddingRight: '30px'\n                        }}>\n                                    <Input\n                                    type='password'\n                                    label='Password (Enter current password to update credentials)'\n                                    value={values.password}\n                                    name='password'\n                                    isError={(touched.password && errors.password) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['password'])}\n\n                                    errorString={(touched.password && errors.password) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['password'])}\n                                    onChange={(e: any) => {\n                                        handleChange(e);\n                                        setFieldTouched('password');\n                                    }}\n                                />\n                        </div>\n\n\n                        <div className='siteInfoContainer__item'>\n                            <div className='siteInfoContainer__item-item'>\n                                <Input\n                                    type='password'\n                                    label='New Password'\n                                    value={values.newPassword}\n                                    name='newPassword'\n                                    isError={(touched.newPassword && errors.newPassword) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword'])}\n\n                                    errorString={(touched.newPassword && errors.newPassword) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword'])}\n                                    onChange={(e: any) => {\n                                        handleChange(e);\n                                        setFieldTouched('newPassword');\n                                    }}\n                                />\n                            </div>\n                            <div className='siteInfoContainer__item-item'>\n                                <Input\n                                    type='password'\n                                    label='Confirm New Password'\n                                    value={values.newPassword2}\n                                    name='newPassword2'\n                                    isError={(touched.newPassword2 && errors.newPassword2) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword2'])}\n\n                                    errorString={(touched.newPassword2 && errors.newPassword2) ||\n                                        (!isSubmitting && UpdateSiteSettingsState.error['error']['newPassword2'])}\n                                    onChange={(e: any) => {\n                                        handleChange(e);\n                                        setFieldTouched('newPassword2');\n                                    }}\n                                />\n                            </div>\n                        </div>\n\n\n                        <div style={{\n                            marginTop: '10px'\n                        }}></div>\n\n                        <Button\n\n                            onClick={(e: any) => handleSubmit(e)}\n                            loading={isSubmitting}\n                            // disabled={getisSubmitButtonDisabled(values, isValid)}\n                            className='btnPrimaryClassNameoutline'\n                        >\n                          Update Credentials\n                            </Button>\n\n                        <div style={{\n                            marginBottom: '10px'\n                        }}></div>\n\n                    </>\n                )}\n        </Formik >\n\n\n\n\n    );\n};\n\nexport default ChangeAdminPassword;\n//","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n  CheckOutlined,\n  CloseOutlined,\n  LoadingOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport AdminSiteInfo from './AdminSiteInfo';\nimport SiteInfoInvoice from './SiteInfoInvoice';\nimport SiteSeo from './SiteSeo';\nimport ChangeAdminPassword from './ChangeAdminPassword';\n\n// import config\nimport config from '../../config.json';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Brand Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n  image: [],\n  url: '',\n  cover: '',\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  brandList?: any;\n  setBrandList?: any;\n}\n\nconst SiteInfo = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  brandList,\n  setBrandList,\n}: Props) => {\n  const [\n    updateSiteLogoAndIcon,\n    handleUpdateSiteLogoAndIconFetch,\n  ] = useHandleFetch({}, 'updateSiteLogoAndIcon', 'form');\n\n  const [imageUrl, setImageUrl] = useState(`${config.baseURL}/images/logo.png`);\n  const [loadingThumnail, setLoadingThumbnail] = useState(false);\n\n  const [iconimageUrl, setIconImageUrl] = useState(\n    `${config.baseURL}/favicon.ico`\n  );\n  const [loadingIcon, setloadingIcon] = useState(false);\n\n  const [appLogo, setAppLogo] = useState(\n    `${config.baseURL}/images/logo-app.png`\n  );\n  const [loadingAppLogo, setloadingAppLogo] = useState(false);\n\n  function getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  function beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setImageUrl(imageUrl);\n      const setNewIcon = async () => {\n        const formData = new FormData();\n        formData.append('logo', file);\n\n        const res = await handleUpdateSiteLogoAndIconFetch({\n          body: formData,\n        });\n\n        // @ts-ignore\n        if (res && res.status === 'ok') {\n          openSuccessNotification('Site Logo updated!');\n        } else {\n          openErrorNotification(\n            \"Couldn't update site Logo, Something went wrong\"\n          );\n        }\n      };\n\n      setNewIcon();\n      setLoadingThumbnail(false);\n    });\n\n    return false;\n  }\n\n  function beforeIconUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setIconImageUrl(imageUrl);\n      const setNewIcon = async () => {\n        const formData = new FormData();\n        formData.append('icon', file);\n\n        const res = await handleUpdateSiteLogoAndIconFetch({\n          body: formData,\n        });\n\n        // @ts-ignore\n        if (res && res.status === 'ok') {\n          openSuccessNotification('Site Icon updated!');\n        } else {\n          openErrorNotification(\n            \"Couldn't update site icon, Something went wrong\"\n          );\n        }\n      };\n\n      setNewIcon();\n      setloadingIcon(false);\n    });\n\n    return false;\n  }\n\n  function beforeAppIconUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    getBase64(file, (imageUrl) => {\n      setAppLogo(imageUrl);\n      const setNewIcon = async () => {\n        const formData = new FormData();\n        formData.append('logoApp', file);\n\n        const res = await handleUpdateSiteLogoAndIconFetch({\n          body: formData,\n        });\n\n        // @ts-ignore\n        if (res && res.status === 'ok') {\n          openSuccessNotification('App logo updated!');\n        } else {\n          openErrorNotification(\n            \"Couldn't update App logo, Something went wrong\"\n          );\n        }\n      };\n\n      setNewIcon();\n      setloadingAppLogo(false);\n    });\n\n    return false;\n  }\n\n  const uploadButton = (\n    <div>\n      {loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\n      <div className='ant-upload-text'>Upload</div>\n    </div>\n  );\n\n  const iconUploadButton = (\n    <div>\n      {loadingIcon ? <LoadingOutlined /> : <PlusOutlined />}\n      <div className='ant-upload-text'>Upload</div>\n    </div>\n  );\n\n  const appIconUploadButton = (\n    <div>\n      {loadingAppLogo ? <LoadingOutlined /> : <PlusOutlined />}\n      <div className='ant-upload-text'>Upload</div>\n    </div>\n  );\n\n  return (\n    <>\n      <div className='siteInfoContainer'>\n        <Tabs defaultActiveKey='1'>\n          <TabPane tab='Site Info' key='1'>\n            <AdminSiteInfo />\n          </TabPane>\n          <TabPane tab='Site logo' key='2'>\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                marginTop: '15px',\n              }}\n            >\n              <div\n                style={{\n                  marginRight: '40px',\n                }}\n              >\n                <div className='addproductSection-left-header'>\n                  <h3 className='inputFieldLabel'> Logo </h3>\n                  <Tooltip placement='left' title={'Update Site Logo image'}>\n                    <a href='###'>\n                      <InfoCircleOutlined />\n                    </a>\n                  </Tooltip>\n                </div>\n\n                <Upload\n                  style={{\n                    borderRadius: '8px',\n                  }}\n                  name='avatar'\n                  listType='picture-card'\n                  className='avatar-uploader'\n                  showUploadList={false}\n                  beforeUpload={beforeUpload}\n                  multiple={false}\n                >\n                  {imageUrl ? (\n                    <img\n                      onError={() => setImageUrl('')}\n                      src={imageUrl}\n                      alt='avatar'\n                      style={{ width: '100%' }}\n                    />\n                  ) : (\n                    uploadButton\n                  )}\n                </Upload>\n              </div>\n\n              <div\n                style={{\n                  marginRight: '40px',\n                }}\n              >\n                <div className='addproductSection-left-header'>\n                  <h3 className='inputFieldLabel'> Icon </h3>\n                  <Tooltip placement='left' title={'Update Icon image'}>\n                    <a href='###'>\n                      <InfoCircleOutlined />\n                    </a>\n                  </Tooltip>\n                </div>\n\n                <Upload\n                  style={{\n                    borderRadius: '8px',\n                  }}\n                  name='avatar'\n                  listType='picture-card'\n                  className='avatar-uploader'\n                  showUploadList={false}\n                  beforeUpload={beforeIconUpload}\n                  multiple={false}\n                >\n                  {iconimageUrl ? (\n                    <img\n                      onError={() => setIconImageUrl('')}\n                      src={iconimageUrl}\n                      alt='avatar'\n                      style={{ width: '100%' }}\n                    />\n                  ) : (\n                    iconUploadButton\n                  )}\n                </Upload>\n              </div>\n\n              <div\n                style={{\n                  marginRight: '20px',\n                }}\n              >\n                <div className='addproductSection-left-header'>\n                  <h3 className='inputFieldLabel'> App Logo </h3>\n                  <Tooltip placement='left' title={'Update App logo image'}>\n                    <a href='###'>\n                      <InfoCircleOutlined />\n                    </a>\n                  </Tooltip>\n                </div>\n\n                <Upload\n                  style={{\n                    borderRadius: '8px',\n                  }}\n                  name='avatar'\n                  listType='picture-card'\n                  className='avatar-uploader'\n                  showUploadList={false}\n                  beforeUpload={beforeAppIconUpload}\n                  multiple={false}\n                >\n                  {appLogo ? (\n                    <img\n                      onError={() => setAppLogo('')}\n                      src={appLogo}\n                      alt='avatar'\n                      style={{ width: '100%' }}\n                    />\n                  ) : (\n                    appIconUploadButton\n                  )}\n                </Upload>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginBottom: '10px',\n              }}\n            ></div>\n          </TabPane>\n\n          <TabPane tab='Site SEO' key='3'>\n            <SiteSeo />\n          </TabPane>\n\n          <TabPane tab='Invoice Information' key='4'>\n            <SiteInfoInvoice />\n          </TabPane>\n\n          <TabPane tab='Change Credentials' key='5'>\n            <ChangeAdminPassword />\n          </TabPane>\n        </Tabs>\n      </div>\n    </>\n  );\n};\n\nexport default SiteInfo;\n","import React, { useState } from 'react';\nimport { Checkbox, Row, Col, Input } from 'antd';\ninterface Props {\n  checkedList?: any;\n  setCheckedList?: any;\n  plainOptions?: any;\n  defaultValue?: any;\n  checkAll?: any;\n  setCheckAll?: any;\n  setPlainOptions?: any;\n  cityListState?: any;\n}\n\nconst { Search } = Input;\n\nconst AccessCheckbox = ({\n  checkedList,\n  setCheckedList,\n  plainOptions,\n  defaultValue = [],\n  checkAll,\n  setCheckAll,\n  cityListState,\n  setPlainOptions,\n}: Props) => {\n  const [interminate, setInterminate] = useState(true);\n  const [searchValue, setsearchValue] = useState('');\n\n  const onChange = (checkedList) => {\n    setCheckedList(checkedList);\n    setInterminate(\n      !!checkedList.length && checkedList.length < plainOptions.length\n    );\n    setCheckAll(checkedList.length === plainOptions.length);\n  };\n\n  const onCheckAllChange = (e) => {\n    const checkedCities =\n      plainOptions && plainOptions.length > 0\n        ? plainOptions.map((city) => {\n            return city.value;\n          })\n        : [];\n    setCheckedList(e.target.checked ? checkedCities : []);\n    setInterminate(false);\n    console.log('e.target.checked', e.target.checked);\n    setCheckAll(e.target.checked);\n  };\n\n  console.log('defaultValue', defaultValue);\n\n  const onSearchChange = (e) => {\n    setsearchValue(e.target.value);\n\n    if (e.target.value === '') {\n      if (cityListState.data && cityListState.data.length > 0) {\n        // @ts-ignore\n        const categoryNames = cityListState.data.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setPlainOptions(categoryNames);\n      }\n    } else {\n      const newOptions =\n        plainOptions.length > 0\n          ? plainOptions.filter((option) => {\n              return (\n                option &&\n                option.name.toLowerCase().includes(searchValue.toLowerCase())\n              );\n            })\n          : [];\n\n      setPlainOptions(newOptions);\n    }\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          borderBottom: '1px solid #eee',\n          marginBottom: '10px',\n        }}\n        className='site-checkbox-all-wrapper'\n      >\n        <Checkbox\n          style={{\n            marginBottom: '10px',\n          }}\n          // indeterminate={interminate}\n          onChange={onCheckAllChange}\n          checked={checkAll}\n        >\n          Select all\n        </Checkbox>\n\n        <Search\n          width={'100%'}\n          style={{\n            height: '30px',\n            borderRadius: '3px !important',\n            borderColor: '#eee !important',\n            margin: '10px 0',\n          }}\n          size='middle'\n          placeholder=''\n          onSearch={(value) => console.log(value)}\n          onChange={onSearchChange}\n        />\n        <div\n          style={{\n            marginBottom: '10px',\n          }}\n        ></div>\n      </div>\n      <Checkbox.Group\n        style={{ width: '100%' }}\n        value={checkedList}\n        defaultValue={defaultValue}\n        onChange={onChange}\n      >\n        <Row>\n          {plainOptions.map((accessItem) => {\n            return (\n              <Col\n                style={{\n                  marginBottom: '10px',\n                }}\n                span={8}\n              >\n                <Checkbox value={accessItem.value}>{accessItem.value}</Checkbox>\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nexport default AccessCheckbox;\n","import React, { useState, useEffect } from 'react';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  FileImageOutlined,\n  FileImageTwoTone,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  EditOutlined,\n} from '@ant-design/icons';\n\ninterface Props {\n  setdeliveryChargeList: any;\n  deliveryChargeList: any;\n  deliveryChargeItem: any;\n}\n\nconst DeliveryCharge = ({\n  deliveryChargeItem,\n  setdeliveryChargeList,\n  deliveryChargeList,\n}: Props) => {\n  const handleDeliveryChargeChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    const updatedValue = {\n      ...deliveryChargeItem,\n      [name]: value,\n      id: deliveryChargeItem.id,\n    };\n\n    const positionInAttribute = () => {\n      return deliveryChargeList\n        .map((item) => item.id)\n        .indexOf(deliveryChargeItem.id);\n    };\n\n    const index = positionInAttribute();\n\n    const updateAttributeList = [\n      ...deliveryChargeList.slice(0, index),\n      updatedValue,\n      ...deliveryChargeList.slice(index + 1),\n    ];\n    setdeliveryChargeList(updateAttributeList);\n  };\n\n  const handleAttributeDelete = () => {\n    console.log('delete---deliveryChargeItem', deliveryChargeItem);\n    console.log('delete-----deliveryChargeList', deliveryChargeList);\n\n    const positionInAttribute = () => {\n      return deliveryChargeList\n        .map((item) => item.id)\n        .indexOf(deliveryChargeItem.id);\n    };\n\n    const index = positionInAttribute();\n\n    const updateAttributeList = [\n      ...deliveryChargeList.slice(0, index),\n      ...deliveryChargeList.slice(index + 1),\n    ];\n    setdeliveryChargeList([...updateAttributeList]);\n\n    console.log('updated-----deliveryChargeList', updateAttributeList);\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n      }}\n    >\n      <div\n        style={{\n          width: '45%',\n          marginRight: '10px',\n        }}\n      >\n        <Input\n          min={0}\n          type='number'\n          addonBefore='Minimum Order'\n          value={deliveryChargeItem.minimumOrder}\n          name='minimumOrder'\n          onChange={handleDeliveryChargeChange}\n        />\n      </div>\n      <div\n        style={{\n          width: '45%',\n          marginRight: '10px',\n        }}\n      >\n        <Input\n          min={0}\n          type='number'\n          addonBefore='Charge'\n          value={deliveryChargeItem.charge}\n          name='charge'\n          onChange={handleDeliveryChargeChange}\n        />\n      </div>\n      <div\n        onClick={() => handleAttributeDelete()}\n        style={{\n          width: '5%',\n          marginBottom: '15px',\n          fontSize: '13px',\n          cursor: 'pointer',\n        }}\n      >\n        <CloseOutlined />\n      </div>\n    </div>\n  );\n};\n\nexport default DeliveryCharge;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport Empty from '../../components/Empty';\n\n// /\nimport CitySelectForDeliveryRegion from './CitySelectForDeliveryRegion';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Form,\n  Spin,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n  PlusOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport DeliveryCharge from './DeliveryCharge';\n\nconst { Option } = Select;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Region Added',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({});\n\nconst initialValues = {\n  name: '',\n  pickUpLocation: '',\n  time: '',\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  regionList?: any;\n  setRegionList?: any;\n}\n\nconst AddNewRegion = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  regionList,\n  setRegionList,\n}: Props) => {\n  const [addRegionState, handleRegionFetch] = useHandleFetch({}, 'addRegion');\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [accesscheckedList, setAccessCheckedList] = useState([]);\n  const [checkAll, setCheckAll] = useState(false);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n\n  const [countryList, setCountryList] = useState([]);\n  const [cityList, setCityList] = useState([]);\n\n  const [deliveryChargeList, setdeliveryChargeList] = useState([\n    {\n      minimumOrder: '',\n      charge: '',\n      id: `${Math.floor(100000 + Math.random() * 900000)}`,\n    },\n  ]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // console.log('selectedCityValue', selectedCityValue)\n\n    if (deliveryChargeList.length > 0) {\n      const charge = {};\n\n      for (let item of deliveryChargeList) {\n        if (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\n          charge[item['minimumOrder']] = item['charge'];\n        }\n      }\n\n      const addRegionRes = await handleRegionFetch({\n        body: {\n          name: values.name,\n          pickUpLocation: values.pickUpLocation,\n          time: values.time,\n          country: selectedCountryValue,\n          city: accesscheckedList,\n          charge,\n        },\n      });\n\n      // @ts-ignore\n      if (addRegionRes && addRegionRes.status === 'ok') {\n        openSuccessNotification();\n\n        setRegionList([\n          {\n            id: addRegionRes['_id'] || '',\n            key: addRegionRes['_id'] || '',\n            name: addRegionRes['name'] || '',\n            // @ts-ignore\n            ...addRegionRes,\n          },\n          ...regionList,\n        ]);\n        setAddNewCategoryVisible(false);\n        actions.resetForm();\n      } else {\n        openErrorNotification();\n      }\n    } else {\n      const addRegionRes = await handleRegionFetch({\n        body: {\n          name: values.name,\n          pickUpLocation: values.pickUpLocation,\n          time: values.time,\n          country: selectedCountryValue,\n          city: selectedCityValue,\n          charge: {},\n        },\n      });\n\n      // @ts-ignore\n      if (addRegionRes && addRegionRes.status === 'ok') {\n        openSuccessNotification();\n\n        setRegionList([\n          ...regionList,\n          {\n            id: addRegionRes['id'] || '',\n            key: addRegionRes['id'] || '',\n            name: addRegionRes['name'] || '',\n            // @ts-ignore\n            ...addRegionRes,\n          },\n        ]);\n        setAddNewCategoryVisible(false);\n        actions.resetForm();\n      } else {\n        openErrorNotification();\n      }\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.name,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, []);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [selectedCountryValue]);\n\n  useEffect(() => {\n    if (!addRegionState['isLoading']) {\n      const error = addRegionState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !addRegionState['isLoading'] &&\n      Object.keys(addRegionState.data).length > 0\n    ) {\n      if (addRegionState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addRegionState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\n      return true;\n    }\n    return false;\n  };\n\n  console.log('region----deliveryChargeList', deliveryChargeList);\n\n  const handleAddDeliveryCharge = () => {\n    setdeliveryChargeList([\n      ...deliveryChargeList,\n      {\n        minimumOrder: '',\n        charge: '',\n        id: `${Math.floor(100000 + Math.random() * 900000)}`,\n      },\n    ]);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n            title='Add New Region'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              // disabled: getisSubmitButtonDisabled(values, isValid)\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Name'\n                  value={values.name}\n                  name='name'\n                  isError={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && addRegionState.error['error']['name'])\n                  }\n                  errorString={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && addRegionState.error['error']['name'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('name');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Pick up Location'\n                  value={values.pickUpLocation}\n                  name='pickUpLocation'\n                  isError={\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\n                    (!isSubmitting &&\n                      addRegionState.error['error']['pickUpLocation'])\n                  }\n                  errorString={\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\n                    (!isSubmitting &&\n                      addRegionState.error['error']['pickUpLocation'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('pickUpLocation');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              <Input\n                label='Time'\n                value={values.time}\n                name='time'\n                isError={\n                  (touched.time && errors.time) ||\n                  (!isSubmitting && addRegionState.error['error']['time'])\n                }\n                errorString={\n                  (touched.time && errors.time) ||\n                  (!isSubmitting && addRegionState.error['error']['time'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('time');\n                }}\n              />\n            </div>\n\n            <h3 className='inputFieldLabel'>Delivery Charges</h3>\n\n            <Form.Item\n              validateStatus={\n                addRegionState.error['error']['charge'] ? 'error' : ''\n              }\n              help={addRegionState.error['error']['charge']}\n            >\n              {deliveryChargeList.map((deliveryChargeItem) => {\n                console.log('deliveryChargeItem-region', deliveryChargeItem);\n                return (\n                  <DeliveryCharge\n                    deliveryChargeItem={deliveryChargeItem}\n                    deliveryChargeList={deliveryChargeList}\n                    setdeliveryChargeList={setdeliveryChargeList}\n                  />\n                );\n              })}\n            </Form.Item>\n\n            <div\n              style={{\n                marginTop: '5px',\n              }}\n            ></div>\n            <Button\n              size='middle'\n              onClick={handleAddDeliveryCharge}\n              type='dashed'\n              icon={<PlusOutlined />}\n            >\n              Add Charge\n            </Button>\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n            <h3 className='inputFieldLabel'>Country</h3>\n            <Form.Item\n              validateStatus={\n                addRegionState.error['error']['country'] ? 'error' : ''\n              }\n              help={addRegionState.error['error']['country']}\n            >\n              <Select\n                notFoundContent={\n                  <Empty title='No Country Found' height={200} />\n                }\n                showSearch\n                style={{ width: '100%' }}\n                placeholder='Select a Country'\n                optionFilterProp='children'\n                onChange={onChangeCountry}\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\n                  0\n                }\n              >\n                {countryListState.done &&\n                  countryListState.data.length > 0 &&\n                  countryOptions.map((option) => {\n                    return <Option value={option.value}>{option.name}</Option>;\n                  })}\n              </Select>\n            </Form.Item>\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n            <h3 className='inputFieldLabel'>Cities</h3>\n\n            {cityListState.done && selectedCountryValue && !cityOptions[0] && (\n              <>\n                <div\n                  style={{\n                    width: '100%',\n                    height: '100%',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Empty title='No City found' height={100} />\n                </div>\n              </>\n            )}\n\n            {!selectedCountryValue && (\n              <>\n                <div\n                  style={{\n                    width: '100%',\n                    height: '100%',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    margin: '50px 0',\n                  }}\n                >\n                  <Empty title='Select Country first' height={100} />\n                </div>\n              </>\n            )}\n\n            {cityListState.isLoading && (\n              <div\n                style={{\n                  padding: '15px 0',\n                  width: '100%',\n                  height: '100%',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Spin />\n              </div>\n            )}\n\n            {cityOptions && cityOptions.length > 0 && (\n              <Form.Item\n                validateStatus={\n                  addRegionState.error['error']['city'] ? 'error' : ''\n                }\n                help={addRegionState.error['error']['city']}\n              >\n                <CitySelectForDeliveryRegion\n                  checkAll={checkAll}\n                  setCheckAll={setCheckAll}\n                  plainOptions={cityOptions}\n                  setPlainOptions={setcityOptions}\n                  checkedList={accesscheckedList}\n                  setCheckedList={setAccessCheckedList}\n                  cityListState={cityListState}\n                />\n              </Form.Item>\n            )}\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewRegion;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Select, notification, Button, Form, Spin } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  CheckCircleOutlined,\n  PlusOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport Empty from '../../components/Empty';\n\nimport CitySelectForDeliveryRegion from './CitySelectForDeliveryRegion';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport { useHandleFetch } from '../../hooks';\nimport DeliveryCharge from './DeliveryCharge';\nimport { category } from '../../state/ducks';\n\nconst { Option } = Select;\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string()\n  // \t.label('Name')\n  // \t.required()\n  // \t.min(2, 'Name must have at least 2 characters '),\n  // pickUpLocation: Yup.string()\n  // \t.label('Pick up Location')\n  // \t.required()\n  // \t.min(2, 'Pick up Location must have at least 2 characters '),\n  // time: Yup.string()\n  // \t.label('Time')\n  // \t.required()\n  // \t.min(2, 'Time must have at least 2 characters '),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Region Updated!',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  customer: any;\n  setvisible: any;\n  visible: any;\n  regionList?: any;\n  setRegionList?: any;\n}\n\nconst QuickEdit = ({\n  customer,\n  setvisible,\n  visible,\n  setRegionList,\n  regionList,\n}: Props) => {\n  const [updateRegionState, handleUpdateRegionFetch] = useHandleFetch(\n    {},\n    'updateRegion'\n  );\n\n  console.log('DeliveryRegion', customer);\n\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n\n  const [countryList, setCountryList] = useState([]);\n  const [cityList, setCityList] = useState([]);\n\n  const [accesscheckedList, setAccessCheckedList] = useState([]);\n  const [checkAll, setCheckAll] = useState(false);\n\n  const [deliveryChargeList, setdeliveryChargeList] = useState([]);\n\n  useEffect(() => {\n    if (customer.charge && Object.keys(customer.charge).length > 0) {\n      const deliveryChargeListFromRegionDetail = [];\n      const chargeKeys = Object.keys(customer.charge);\n      chargeKeys.forEach((chargeKey) => {\n        deliveryChargeListFromRegionDetail.push({\n          minimumOrder: chargeKey,\n          charge: customer.charge[chargeKey],\n          id: `${Math.floor(100000 + Math.random() * 900000)}`,\n        });\n      });\n      setdeliveryChargeList(deliveryChargeListFromRegionDetail);\n    }\n\n    if (customer.city && customer.city.length > 0) {\n      setAccessCheckedList(customer.city);\n      setselectedCountryValue(customer.countryName || '');\n    } else {\n      setAccessCheckedList([]);\n      setselectedCountryValue('');\n    }\n  }, [customer]);\n\n  useEffect(() => {}, [customer, selectedCountryValue]);\n\n  console.log('deliveryCharge333', customer);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // console.log('selectedCityValue',selectedCityValue)\n    const charge = {};\n\n    if (deliveryChargeList.length > 0) {\n      for (let item of deliveryChargeList) {\n        if (charge[item['minimumOrder']] !== '' && item['charge'] !== '') {\n          charge[item['minimumOrder']] = item['charge'];\n        }\n      }\n    }\n    const addRegionRes = await handleUpdateRegionFetch({\n      urlOptions: {\n        placeHolders: {\n          id: customer.id,\n        },\n      },\n      body: {\n        name: values.name,\n        pickUpLocation: values.pickUpLocation,\n        time: values.time,\n        country: selectedCountryValue || customer.country,\n        city: selectedCityValue || customer.city,\n        charge,\n      },\n    });\n\n    // @ts-ignore\n    if (addRegionRes && addRegionRes.status === 'ok') {\n      openSuccessNotification();\n\n      const positionInTag = () => {\n        return regionList.map((item) => item.id).indexOf(customer.id);\n      };\n\n      const index = positionInTag();\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, regionList[index], {\n        // @ts-ignore\n        ...addRegionRes,\n        id: customer.id,\n      });\n      const updateRegionList = [\n        ...regionList.slice(0, index),\n        updatedItem,\n        ...regionList.slice(index + 1),\n      ];\n      setRegionList(updateRegionList);\n      setvisible(false);\n\n      setdeliveryChargeList([]);\n      setselectedCityValue('');\n      setselectedCountryValue('');\n      // setcountryOptions([]);\n      // setcityOptions([]);\n      // setcountryOptions([]);\n      // setcityOptions([]);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!updateRegionState['isLoading']) {\n      const error = updateRegionState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !updateRegionState['isLoading'] &&\n      Object.keys(updateRegionState.data).length > 0\n    ) {\n      if (updateRegionState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [updateRegionState]);\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.name,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, [customer]);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue || customer.countryName,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n\n        if (cityOptions.length === customer.city.length) {\n          setCheckAll(true);\n        }\n\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [customer.countryName, selectedCountryValue]);\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n\n    setdeliveryChargeList([]);\n    setselectedCityValue('');\n    setselectedCountryValue('');\n    // setcountryOptions([]);\n    // setcityOptions([]);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!isValid || !values.name || !values.pickUpLocation || !values.time) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleAddDeliveryCharge = () => {\n    setdeliveryChargeList([\n      ...deliveryChargeList,\n      {\n        minimumOrder: '',\n        charge: '',\n        id: `${Math.floor(100000 + Math.random() * 900000)}`,\n      },\n    ]);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...customer }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            title='Region Edit'\n            visible={visible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            destroyOnClose={true}\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              // disabled: getisSubmitButtonDisabled(values, isValid)\n            }}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Name'\n                  value={values.name}\n                  name='name'\n                  isError={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && updateRegionState.error['error']['name'])\n                  }\n                  errorString={\n                    (touched.name && errors.name) ||\n                    (!isSubmitting && updateRegionState.error['error']['name'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('name');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Pick up Location'\n                  value={values.pickUpLocation}\n                  name='pickUpLocation'\n                  isError={\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\n                    (!isSubmitting &&\n                      updateRegionState.error['error']['pickUpLocation'])\n                  }\n                  errorString={\n                    (touched.pickUpLocation && errors.pickUpLocation) ||\n                    (!isSubmitting &&\n                      updateRegionState.error['error']['pickUpLocation'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('pickUpLocation');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginRight: '10px',\n              }}\n            >\n              <Input\n                label='Time'\n                value={values.time}\n                name='time'\n                isError={\n                  (touched.time && errors.time) ||\n                  (!isSubmitting && updateRegionState.error['error']['time'])\n                }\n                errorString={\n                  (touched.time && errors.time) ||\n                  (!isSubmitting && updateRegionState.error['error']['time'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('time');\n                }}\n              />\n            </div>\n\n            <h3 className='inputFieldLabel'>Delivery Charges</h3>\n\n            <Form.Item\n              validateStatus={\n                updateRegionState.error['error']['charge'] ? 'error' : ''\n              }\n              help={updateRegionState.error['error']['charge']}\n            >\n              {deliveryChargeList.map((deliveryChargeItem) => {\n                console.log('deliveryChargeItem-region', deliveryChargeItem);\n                return (\n                  <DeliveryCharge\n                    deliveryChargeItem={deliveryChargeItem}\n                    deliveryChargeList={deliveryChargeList}\n                    setdeliveryChargeList={setdeliveryChargeList}\n                  />\n                );\n              })}\n            </Form.Item>\n\n            <div\n              style={{\n                marginTop: '5px',\n              }}\n            ></div>\n            <Button\n              size='middle'\n              onClick={handleAddDeliveryCharge}\n              type='dashed'\n              icon={<PlusOutlined />}\n            >\n              Add Charge\n            </Button>\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n            <h3 className='inputFieldLabel'>Country</h3>\n            <Form.Item\n              validateStatus={\n                updateRegionState.error['error']['country'] ? 'error' : ''\n              }\n              help={updateRegionState.error['error']['country']}\n            >\n              <Select\n                notFoundContent={\n                  <Empty title='No Country Found' height={100} />\n                }\n                showSearch\n                style={{ width: '100%' }}\n                placeholder='Select a Country'\n                optionFilterProp='children'\n                onChange={onChangeCountry}\n                value={selectedCountryValue}\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\n                  0\n                }\n              >\n                {countryListState.done &&\n                  countryListState.data.length > 0 &&\n                  countryOptions.map((option) => {\n                    return <Option value={option.value}>{option.name}</Option>;\n                  })}\n              </Select>\n            </Form.Item>\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n            <h3 className='inputFieldLabel'>Cities</h3>\n\n            {cityListState.done && selectedCountryValue && !cityOptions[0] && (\n              <>\n                <div\n                  style={{\n                    width: '100%',\n                    height: '100%',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Empty title='No City found' height={100} />\n                </div>\n              </>\n            )}\n\n            {!selectedCountryValue && (\n              <>\n                <div\n                  style={{\n                    width: '100%',\n                    height: '100%',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    margin: '50px 0',\n                  }}\n                >\n                  <Empty title='Select Country first' height={200} />\n                </div>\n              </>\n            )}\n\n            {cityListState.isLoading && (\n              <div\n                style={{\n                  padding: '15px 0',\n                  width: '100%',\n                  height: '100%',\n                  display: 'flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Spin />\n              </div>\n            )}\n\n            {cityOptions && cityOptions.length > 0 && (\n              <Form.Item\n                validateStatus={\n                  updateRegionState.error['error']['city'] ? 'error' : ''\n                }\n                help={updateRegionState.error['error']['city']}\n              >\n                <CitySelectForDeliveryRegion\n                  checkAll={checkAll}\n                  setCheckAll={setCheckAll}\n                  plainOptions={cityOptions}\n                  setPlainOptions={setcityOptions}\n                  checkedList={accesscheckedList}\n                  setCheckedList={setAccessCheckedList}\n                  cityListState={cityListState}\n                />\n              </Form.Item>\n            )}\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default QuickEdit;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Table,\n  Badge,\n  Menu,\n  Dropdown,\n  Space,\n  Tag,\n  Button,\n  Input,\n  Tooltip,\n  Modal,\n  notification,\n  Popconfirm,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport AddNewRegion from './AddNewRegion';\nimport QuickEdit from './QuickEdit';\nimport Empty from '../../components/Empty';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Region Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setRegionList: any;\n  roles: any;\n}\n\nconst MyTable = ({ data, setRegionList, roles }: myTableProps) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteRegionState, handleDeleteRegioFetch] = useHandleFetch(\n    {},\n    'deleteRegion'\n  );\n\n  const handleDeleteRegion = async (id) => {\n    const deleteRegionRes = await handleDeleteRegioFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteRegionRes && deleteRegionRes.status === 'ok') {\n      openSuccessNotification('Deleted Region');\n      const newRegionList = data.filter((item) => item.id !== id);\n      setRegionList(newRegionList);\n    }\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Pick up Location'\n          dataIndex='pickUpLocation'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Country'\n          dataIndex='countryName'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          width={150}\n          title='City'\n          dataIndex='city'\n          key='id'\n          className='classnameofthecolumn'\n          render={(tags) => (\n            <>\n              {tags &&\n                tags.length > 0 &&\n                tags.slice(0, 3).map((tag) => (\n                  <Tag\n                    style={{\n                      borderRadius: '5px',\n                      marginBottom: '5px',\n                    }}\n                    color='blue'\n                    key={tag}\n                  >\n                    {tag}\n                  </Tag>\n                ))}\n\n              <span\n                style={{\n                  color: '#1890ff',\n                }}\n              >\n                {/* {tags &&\n                  tags.length > 3 &&\n                  `.....${tags.length - tags.slice(0, 3).length}more`} */}\n                {tags && tags.slice(0, 3).length === 3 && `more.....`}\n              </span>\n            </>\n          )}\n        />\n\n        <Column\n          title='Time'\n          dataIndex='time'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          width={150}\n          className='classnameofthecolumn'\n          title='Charge'\n          dataIndex='charge'\n          key='id'\n          render={(charges) => (\n            <>\n              {charges &&\n                Object.keys(charges).length > 0 &&\n                Object.keys(charges).map((key) => {\n                  return (\n                    <>\n                      <div\n                        style={{\n                          marginBottom: '10px',\n                        }}\n                      >\n                        <Tag color='blue' key={key}>\n                          {key}\n                        </Tag>\n                        &nbsp;:&nbsp;&nbsp;&nbsp;\n                        <Tag color='blue' key={charges[key]}>\n                          {charges[key]}\n                        </Tag>\n                      </div>\n                    </>\n                  );\n                })}\n            </>\n          )}\n        />\n\n        {isAccess('postDelivery', roles) && (\n          <Column\n            className='classnameofthecolumn'\n            title=''\n            key='action'\n            align='right'\n            render={(text, record: any) => (\n              <Space size='middle'>\n                <a href='##'>\n                  <Tooltip placement='top' title='Edit Region'>\n                    <span\n                      className='iconSize'\n                      onClick={() => {\n                        setvisible(true);\n                        setactiveCategoryForEdit(record);\n                      }}\n                    >\n                      <EditOutlined />\n                    </span>\n                  </Tooltip>\n                </a>\n\n                <Popconfirm\n                  onConfirm={() => handleDeleteRegion(record.id)}\n                  title='Are you sure？'\n                  okText='Yes'\n                  cancelText='No'\n                >\n                  <span className='iconSize iconSize-danger'>\n                    <DeleteOutlined />\n                  </span>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        )}\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          setvisible={setvisible}\n          visible={visible}\n          customer={activeCategoryForEdit}\n          regionList={data}\n          setRegionList={setRegionList}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  roles: any;\n}\n\nconst CustomerList = ({ roles }: Props) => {\n  const [regionList, setRegionList] = useState([]);\n\n  const [regionState, handleRegionListFetch] = useHandleFetch({}, 'regionList');\n\n  useEffect(() => {\n    const setRegions = async () => {\n      const regions = await handleRegionListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n            limitNumber: 500000,\n          },\n        },\n      });\n      // @ts-ignore\n      setRegionList(regions);\n    };\n    setRegions();\n  }, []);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  console.log('regionState', regionState);\n\n  const handleSearch = (value) => {\n    if (regionState.data.length > 0) {\n      const newTagList = regionState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setRegionList(newTagList);\n    }\n  };\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Regions</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search regions..'\n              onSearch={(value) => handleSearch(value)}\n              // style={{ width: 300 }}\n            />\n          </div>\n\n          {isAccess('postDelivery', roles) && (\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          )}\n        </div>\n\n        <div className='categoryListContainer__afterHeader'>\n          {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n        </div>\n\n        <div className='categoryListContainer__categoryList'>\n          {regionState.done && regionList.length > 0 && (\n            <MyTable\n              roles={roles}\n              setRegionList={setRegionList}\n              data={regionList}\n            />\n          )}\n          {regionState.isLoading && <DataTableSkeleton />}\n\n          {regionState.done && !(regionList.length > 0) && (\n            <Empty title='No Region found' />\n          )}\n        </div>\n      </div>\n\n      {regionState.done && (\n        <AddNewRegion\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          regionList={regionState.data}\n          setRegionList={setRegionList}\n        />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(CustomerList);\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n  Checkbox,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport InputSmall from '../../components/Field/InputSmall';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\n\nconst validationSchema = Yup.object().shape({});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  url: '',\n  protocol: '',\n  method: '',\n  parameters: '',\n  recipientKey: '',\n  separator: '',\n  textKey: '',\n  maskKey: '',\n  maskValue: '',\n  usernameKey: '',\n  usernameValue: '',\n  passwordKey: '',\n  passwordValue: '',\n  additionalMsgType: '',\n};\n\nconst { Option } = Select;\n\ninterface Props {}\n\nconst ConfigureSTMP = ({}: Props) => {\n  const [\n    getEmailConfigurationState,\n    handleGetEmailConfigurationFetch,\n  ] = useHandleFetch({}, 'getSMSConfiguration');\n  const [\n    emailConfigurationState,\n    handleEmailConfigurationFetch,\n  ] = useHandleFetch({}, 'configureSMS');\n\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n  const [isArraySupport, setIsArraySupport] = useState(false);\n  const [configurationData, setConfigurationData] = useState({});\n  const [method, setMethod] = useState('');\n  const [protocol, setProtocol] = useState('');\n\n  console.log('getEmailConfigurationState', getEmailConfigurationState);\n\n  useEffect(() => {\n    const getEmailConfiguration = async () => {\n      const res = await handleGetEmailConfigurationFetch({});\n      // @ts-ignore\n      if (res) {\n        // @ts-ignore\n        setConfigurationData(res);\n        setIsAuthenticated(res['authentication']);\n        setMethod(res['method']);\n        setProtocol(res['protocol']);\n      }\n    };\n    getEmailConfiguration();\n  }, []);\n\n  console.log('getEmailConfigurationState', method);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleEmailConfigurationFetch({\n      body: {\n        url: values.url,\n        protocol: protocol,\n        method: method,\n        authentication: isAuthenticated,\n        parameters: {\n          recipient: {\n            key: values.recipientKey,\n            arraySupport: isArraySupport,\n            separator: values.separator,\n          },\n          text: {\n            key: values.textKey,\n          },\n          mask: {\n            key: values.maskKey,\n            value: values.maskValue,\n          },\n          authentication: {\n            username: {\n              key: values.usernameKey,\n              value: values.usernameValue,\n            },\n            password: {\n              key: values.passwordKey,\n              value: values.passwordValue,\n            },\n          },\n          additional: {\n            MsgType: values.additionalMsgType,\n          },\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n    } else {\n      // openErrorNotification(\"Something went wrong, Couldn't updated STMP configuration\");\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const handleSelectChange = () => {};\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    if (!emailConfigurationState['isLoading']) {\n      const error = emailConfigurationState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !emailConfigurationState['isLoading'] &&\n      Object.keys(emailConfigurationState.data).length > 0\n    ) {\n      if (emailConfigurationState['data']['status'] === 'ok') {\n        openSuccessNotification('SMS Settings Updated!');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [emailConfigurationState]);\n\n  const handleAuthenticatedChange = (e) => {\n    setIsAuthenticated(e.target.checked);\n  };\n\n  const prottocolOptions = [\n    {\n      name: 'HTTP',\n      value: 'HTTP',\n    },\n    {\n      name: 'HTTPS',\n      value: 'HTTPS',\n    },\n  ];\n\n  const methodOptions = [\n    {\n      name: 'GET',\n      value: 'GET',\n    },\n    {\n      name: 'POST',\n      value: 'POST',\n    },\n  ];\n\n  const handleMethodChange = (value) => {\n    console.log('valueOfMethod', value);\n    setMethod(value);\n  };\n\n  const handleProtocolChange = (value) => {\n    setProtocol(value);\n  };\n\n  const initialValues = {\n    url: '',\n    protocol: '',\n    method: '',\n    parameters: '',\n    recipientKey: '',\n    separator: '',\n    textKey: '',\n    maskKey: '',\n    maskValue: '',\n    usernameKey: '',\n    usernameValue: '',\n    passwordKey: '',\n    passwordValue: '',\n    additionalMsgType: '',\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{\n        ...initialValues,\n        ...configurationData,\n        ...(configurationData &&\n          Object.keys(configurationData).length > 0 && {\n            recipientKey:\n              configurationData['parameters'] &&\n              configurationData['parameters'].recipient &&\n              configurationData['parameters'].recipient.key,\n            separator:\n              configurationData['parameters'] &&\n              configurationData['parameters'].recipient &&\n              configurationData['parameters'].recipient.separator,\n            textKey:\n              configurationData['parameters'] &&\n              configurationData['parameters'].text &&\n              configurationData['parameters'].text.key,\n            maskKey:\n              configurationData['parameters'] &&\n              configurationData['parameters'].mask &&\n              configurationData['parameters'].mask.key,\n            maskValue:\n              configurationData['parameters'] &&\n              configurationData['parameters'].mask &&\n              configurationData['parameters'].mask.value,\n            usernameKey:\n              configurationData['parameters'] &&\n              configurationData['parameters'].authentication &&\n              configurationData['parameters'].authentication.username &&\n              configurationData['parameters'].authentication.username.key,\n            usernameValue:\n              configurationData['parameters'] &&\n              configurationData['parameters'].authentication &&\n              configurationData['parameters'].authentication.username &&\n              configurationData['parameters'].authentication.username.value,\n            passwordKey:\n              configurationData['parameters'] &&\n              configurationData['parameters'].authentication &&\n              configurationData['parameters'].authentication.password &&\n              configurationData['parameters'].authentication.password.key,\n            passwordValue:\n              configurationData['parameters'] &&\n              configurationData['parameters'].authentication &&\n              configurationData['parameters'].authentication.password &&\n              configurationData['parameters'].authentication.password.value,\n            additionalMsgType:\n              configurationData['parameters'] &&\n              configurationData['parameters'].additional &&\n              configurationData['parameters'].additional.MsgType,\n          }),\n      }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <Input\n                label='URL'\n                value={values.url}\n                name='url'\n                isError={\n                  (touched.url && errors.url) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['url'])\n                }\n                errorString={\n                  (touched.url && errors.url) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['url'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('url');\n                }}\n              />\n            </div>\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <h3 className='inputFieldLabel'>Protocol</h3>\n              <Select\n                showSearch\n                style={{ width: '100%', borderRadius: '6px' }}\n                placeholder='Select a protocol'\n                defaultValue={protocol}\n                value={protocol}\n                onChange={handleProtocolChange}\n              >\n                {prottocolOptions.map((option) => {\n                  return <Option value={option.value}>{option.name}</Option>;\n                })}\n              </Select>\n            </div>\n          </div>\n\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <h3 className='inputFieldLabel'>Method</h3>\n\n              <Select\n                onChange={handleMethodChange}\n                showSearch\n                style={{ width: '100%', borderRadius: '6px' }}\n                placeholder='Select a method'\n                defaultValue={method}\n                value={method}\n              >\n                {methodOptions.map((option) => {\n                  return <Option value={option.value}>{option.name}</Option>;\n                })}\n              </Select>\n            </div>\n            <div\n              style={{\n                width: '49%',\n              }}\n            ></div>\n          </div>\n\n          <div\n            style={{\n              marginTop: '20px',\n            }}\n          ></div>\n          <h3 style={{}} className='addOrderContainer-sectionTitle'>\n            Parameters\n          </h3>\n\n          <h3 className='inputFieldLabel'>Recipient</h3>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                width: '35%',\n              }}\n            >\n              <InputSmall\n                label='Key'\n                value={values.recipientKey}\n                name='recipientKey'\n                isError={\n                  (touched.recipientKey && errors.recipientKey) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['recipientKey'])\n                }\n                errorString={\n                  (touched.recipientKey && errors.recipientKey) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['recipientKey'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('recipientKey');\n                }}\n              />\n            </div>\n\n            <div\n              style={{\n                width: '20%',\n                marginLeft: '20px',\n              }}\n            >\n              <Checkbox\n                value={isArraySupport}\n                onChange={(e) => setIsArraySupport(e.target.checked)}\n              >\n                <span className='checkBoxFieldLabel'>Array support</span>\n              </Checkbox>\n            </div>\n\n            <div\n              style={{\n                width: '45%',\n              }}\n            >\n              {isArraySupport && (\n                <InputSmall\n                  label='Separator'\n                  value={values.separator}\n                  name='separator'\n                  isError={\n                    (touched.separator && errors.separator) ||\n                    (!isSubmitting &&\n                      emailConfigurationState.error['error']['separator'])\n                  }\n                  errorString={\n                    (touched.separator && errors.separator) ||\n                    (!isSubmitting &&\n                      emailConfigurationState.error['error']['separator'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('separator');\n                  }}\n                />\n              )}\n            </div>\n          </div>\n\n          <h3 className='inputFieldLabel'>Text</h3>\n          <InputSmall\n            label='Separator'\n            value={values.textKey}\n            name='textKey'\n            isError={\n              (touched.textKey && errors.textKey) ||\n              (!isSubmitting &&\n                emailConfigurationState.error['error']['textKey'])\n            }\n            errorString={\n              (touched.textKey && errors.textKey) ||\n              (!isSubmitting &&\n                emailConfigurationState.error['error']['textKey'])\n            }\n            onChange={(e: any) => {\n              handleChange(e);\n              setFieldTouched('textKey');\n            }}\n          />\n\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n\n          <h3 className='inputFieldLabel'>Mask</h3>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <InputSmall\n                label='Key'\n                value={values.maskKey}\n                name='maskKey'\n                isError={\n                  (touched.maskKey && errors.maskKey) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['maskKey'])\n                }\n                errorString={\n                  (touched.maskKey && errors.maskKey) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['maskKey'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('maskKey');\n                }}\n              />\n            </div>\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <InputSmall\n                label='Value'\n                value={values.maskValue}\n                name='maskValue'\n                isError={\n                  (touched.maskValue && errors.maskValue) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['maskValue'])\n                }\n                errorString={\n                  (touched.maskValue && errors.maskValue) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['maskValue'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('maskValue');\n                }}\n              />\n            </div>\n          </div>\n\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n\n          <h3 className='inputFieldLabel'>Username</h3>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <InputSmall\n                label='Key'\n                value={values.usernameKey}\n                name='usernameKey'\n                isError={\n                  (touched.usernameKey && errors.usernameKey) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['usernameKey'])\n                }\n                errorString={\n                  (touched.usernameKey && errors.usernameKey) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['usernameKey'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('usernameKey');\n                }}\n              />\n            </div>\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <InputSmall\n                label='Value'\n                value={values.usernameValue}\n                name='usernameValue'\n                isError={\n                  (touched.usernameValue && errors.usernameValue) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['usernameValue'])\n                }\n                errorString={\n                  (touched.usernameValue && errors.usernameValue) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['usernameValue'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('usernameValue');\n                }}\n              />\n            </div>\n          </div>\n\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n\n          <h3 className='inputFieldLabel'>Password</h3>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <InputSmall\n                label='Key'\n                value={values.passwordKey}\n                name='passwordKey'\n                isError={\n                  (touched.passwordKey && errors.passwordKey) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['passwordKey'])\n                }\n                errorString={\n                  (touched.passwordKey && errors.passwordKey) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['passwordKey'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('passwordKey');\n                }}\n              />\n            </div>\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <InputSmall\n                label='Value'\n                value={values.passwordValue}\n                name='passwordValue'\n                isError={\n                  (touched.passwordValue && errors.passwordValue) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['passwordValue'])\n                }\n                errorString={\n                  (touched.passwordValue && errors.passwordValue) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['passwordValue'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('passwordValue');\n                }}\n              />\n            </div>\n          </div>\n\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n\n          <h3 className='inputFieldLabel'>Additional</h3>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <InputSmall\n                label='Msg Type'\n                value={values.additionalMsgType}\n                name='additionalMsgType'\n                isError={\n                  (touched.additionalMsgType && errors.additionalMsgType) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['additionalMsgType'])\n                }\n                errorString={\n                  (touched.additionalMsgType && errors.additionalMsgType) ||\n                  (!isSubmitting &&\n                    emailConfigurationState.error['error']['additionalMsgType'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('additionalMsgType');\n                }}\n              />\n            </div>\n            <div\n              style={{\n                width: '49%',\n              }}\n            ></div>\n          </div>\n\n          <Checkbox\n            value={isAuthenticated}\n            onChange={handleAuthenticatedChange}\n          >\n            <span className='checkBoxFieldLabel'>Authentication</span>\n          </Checkbox>\n\n          <div\n            style={{\n              marginTop: '20px',\n            }}\n          ></div>\n          <div\n            style={{\n              display: 'block',\n              marginBottom: '20px',\n              marginTop: '20px',\n            }}\n          >\n            <Button\n              onClick={(e: any) => handleSubmit(e)}\n              loading={emailConfigurationState.isLoading}\n              className='btnPrimaryClassNameoutline'\n            >\n              Update SMS Configuration\n            </Button>\n          </div>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default ConfigureSTMP;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Customer Template Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\ninterface Props {\n  visible: boolean;\n  setVisible: any;\n}\n\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\n    {},\n    'configureAutoSMSTemplate'\n  );\n  const [\n    getConfigureAutoEmailTemplate,\n    handleGetConfigureAutoEmailTemplateFetch,\n  ] = useHandleFetch({}, 'getConfigureAutoSMSTemplate');\n\n  const [customer, setcustomer] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const [admin, setadmin] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const handleSubmit = async () => {\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\n      {\n        body: {\n          event: 'newCustomer',\n          customer: {\n            ...customer,\n          },\n          admin: {\n            ...admin,\n          },\n        },\n      }\n    );\n\n    // @ts-ignore\n    if (\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes &&\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\n    ) {\n      openSuccessNotification();\n      setVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    if (!autoEmailTemplate['isLoading']) {\n      const error = autoEmailTemplate['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !autoEmailTemplate['isLoading'] &&\n      Object.keys(autoEmailTemplate.data).length > 0\n    ) {\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [autoEmailTemplate]);\n\n  useEffect(() => {\n    const getCustomerAutoEmail = async () => {\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\n        urlOptions: {\n          placeHolders: {\n            eventName: 'newCustomer',\n          },\n        },\n      });\n\n      console.log('newCustomertemplate', res);\n      // @ts-ignore\n      if (res) {\n        setadmin(res['admin'] || '');\n        setcustomer(res['customer'] || '');\n      }\n      // set auto email template to customer and admin\n    };\n    getCustomerAutoEmail();\n  }, []);\n\n  const handleCancel = (e: any) => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      width={'80vw'}\n      style={{\n        top: '40px',\n      }}\n      title='New Customer Event Template'\n      visible={visible}\n      onOk={(e: any) => handleSubmit()}\n      onCancel={handleCancel}\n      okText='Submit'\n      okButtonProps={{\n        loading: autoEmailTemplate.isLoading,\n        htmlType: 'submit',\n        // disabled: getisSubmitButtonDisabled(values, isValid)\n      }}\n      bodyStyle={{\n        margin: '10px',\n        padding: '10px',\n      }}\n      footer={false}\n    >\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Customer' key='1'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '65%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={customer.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setcustomer({\n                    ...customer,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={customer.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setcustomer({\n                    ...customer,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '35%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.firstName?&gt; :\n                  </b>{' '}\n                  First Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.lastName?&gt; :\n                  </b>{' '}\n                  Last Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.phone?&gt; :\n                  </b>{' '}\n                  Phone\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.address1?&gt; :\n                  </b>{' '}\n                  Address\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.added?&gt; :\n                  </b>{' '}\n                  Joined\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Admin' key='2'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '65%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={admin.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setadmin({\n                    ...admin,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={admin.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setadmin({\n                    ...admin,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n            <div\n              style={{\n                width: '35%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.firstName?&gt; :\n                  </b>{' '}\n                  First Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.lastName?&gt; :\n                  </b>{' '}\n                  Last Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.phone?&gt; :\n                  </b>{' '}\n                  Phone\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.address1?&gt; :\n                  </b>{' '}\n                  Address\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.added?&gt; :\n                  </b>{' '}\n                  Joined\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Dealer Template Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\ninterface Props {\n  visible: boolean;\n  setVisible: any;\n}\n\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\n    {},\n    'configureAutoSMSTemplate'\n  );\n  const [\n    getConfigureAutoEmailTemplate,\n    handleGetConfigureAutoEmailTemplateFetch,\n  ] = useHandleFetch({}, 'getConfigureAutoSMSTemplate');\n\n  const [customer, setcustomer] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const [admin, setadmin] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const handleSubmit = async () => {\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\n      {\n        body: {\n          event: 'newDealer',\n          user: {\n            ...customer,\n          },\n          admin: {\n            ...admin,\n          },\n        },\n      }\n    );\n\n    // @ts-ignore\n    if (\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes &&\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\n    ) {\n      openSuccessNotification();\n      setVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    if (!autoEmailTemplate['isLoading']) {\n      const error = autoEmailTemplate['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !autoEmailTemplate['isLoading'] &&\n      Object.keys(autoEmailTemplate.data).length > 0\n    ) {\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [autoEmailTemplate]);\n\n  useEffect(() => {\n    const getCustomerAutoEmail = async () => {\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\n        urlOptions: {\n          placeHolders: {\n            eventName: 'newDealer',\n          },\n        },\n      });\n\n      console.log('newDealertemplate', res);\n      // @ts-ignore\n      if (res) {\n        setadmin(res['admin'] || '');\n        setcustomer(res['user'] || '');\n      }\n      // set auto email template to customer and admin\n    };\n    getCustomerAutoEmail();\n  }, []);\n\n  const handleCancel = (e: any) => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      width={'80vw'}\n      style={{\n        top: '40px',\n      }}\n      title='New Dealer Event Template'\n      visible={visible}\n      onOk={(e: any) => handleSubmit()}\n      onCancel={handleCancel}\n      okText='Submit'\n      okButtonProps={{\n        loading: autoEmailTemplate.isLoading,\n        htmlType: 'submit',\n        // disabled: getisSubmitButtonDisabled(values, isValid)\n      }}\n      bodyStyle={{\n        margin: '10px',\n        padding: '10px',\n      }}\n      footer={false}\n    >\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Customer' key='1'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '65%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={customer.subject || ''}\n                name='subject'\n                onChange={(e: any) => {\n                  setcustomer({\n                    ...customer,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={customer.body || ''}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setcustomer({\n                    ...customer,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '35%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=user.code?&gt; :\n                  </b>{' '}\n                  Code\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=user.firstName?&gt; :\n                  </b>{' '}\n                  First Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.lastName?&gt; :\n                  </b>{' '}\n                  Last Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.phone?&gt; :\n                  </b>{' '}\n                  Phone\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.address1?&gt; :\n                  </b>{' '}\n                  Address\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.added?&gt; :\n                  </b>{' '}\n                  Joined\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Admin' key='2'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '65%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={admin.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setadmin({\n                    ...admin,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={admin.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setadmin({\n                    ...admin,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n            <div\n              style={{\n                width: '35%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=user.code?&gt; :\n                  </b>{' '}\n                  Code\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=user.firstName?&gt; :\n                  </b>{' '}\n                  First Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.lastName?&gt; :\n                  </b>{' '}\n                  Last Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.phone?&gt; :\n                  </b>{' '}\n                  Phone\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.address1?&gt; :\n                  </b>{' '}\n                  Address\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.added?&gt; :\n                  </b>{' '}\n                  Joined\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Customer Template Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\ninterface Props {\n  visible: boolean;\n  setVisible: any;\n}\n\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\n    {},\n    'configureAutoSMSTemplate'\n  );\n  const [\n    getConfigureAutoEmailTemplate,\n    handleGetConfigureAutoEmailTemplateFetch,\n  ] = useHandleFetch({}, 'getConfigureAutoSMSTemplate');\n\n  const [customer, setcustomer] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const [admin, setadmin] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const handleSubmit = async () => {\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\n      {\n        body: {\n          event: 'orderStatus',\n          customer: {\n            ...customer,\n          },\n          admin: {\n            ...admin,\n          },\n        },\n      }\n    );\n\n    // @ts-ignore\n    if (\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes &&\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\n    ) {\n      openSuccessNotification();\n      setVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    if (!autoEmailTemplate['isLoading']) {\n      const error = autoEmailTemplate['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !autoEmailTemplate['isLoading'] &&\n      Object.keys(autoEmailTemplate.data).length > 0\n    ) {\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [autoEmailTemplate]);\n\n  useEffect(() => {\n    const getCustomerAutoEmail = async () => {\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\n        urlOptions: {\n          placeHolders: {\n            eventName: 'orderStatus',\n          },\n        },\n      });\n\n      console.log('orderStatus', res);\n      // @ts-ignore\n      if (res) {\n        setadmin(res['admin'] || '');\n        setcustomer(res['customer'] || '');\n      }\n      // set auto email template to customer and admin\n    };\n    getCustomerAutoEmail();\n  }, []);\n\n  const handleCancel = (e: any) => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      width={'70vw'}\n      style={{\n        top: '40px',\n      }}\n      title='Order Status Template'\n      visible={visible}\n      onOk={(e: any) => handleSubmit()}\n      onCancel={handleCancel}\n      okText='Submit'\n      okButtonProps={{\n        loading: autoEmailTemplate.isLoading,\n        htmlType: 'submit',\n        // disabled: getisSubmitButtonDisabled(values, isValid)\n      }}\n      bodyStyle={{\n        margin: '10px',\n        padding: '10px',\n      }}\n      footer={false}\n    >\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Customer' key='1'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '70%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={customer.subject || ''}\n                name='subject'\n                onChange={(e: any) => {\n                  setcustomer({\n                    ...customer,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={customer.body || ''}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setcustomer({\n                    ...customer,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '30%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.status.name?&gt; :\n                  </b>{' '}\n                  Order Status\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.firstName?&gt; :\n                  </b>{' '}\n                  Customer first name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.lastName?&gt; :\n                  </b>{' '}\n                  Customer last name\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.shortCode?&gt; :\n                  </b>{' '}\n                  Order Code\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Admin' key='2'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '70%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={admin.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setadmin({\n                    ...admin,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={admin.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setadmin({\n                    ...admin,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '30%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.status.name?&gt; :\n                  </b>{' '}\n                  Order Status\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.firstName?&gt; :\n                  </b>{' '}\n                  Customer first name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.lastName?&gt; :\n                  </b>{' '}\n                  Customer last name\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.shortCode?&gt; :\n                  </b>{' '}\n                  Order Code\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Order Template Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\ninterface Props {\n  visible: boolean;\n  setVisible: any;\n}\n\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\n    {},\n    'configureAutoSMSTemplate'\n  );\n  const [\n    getConfigureAutoEmailTemplate,\n    handleGetConfigureAutoEmailTemplateFetch,\n  ] = useHandleFetch({}, 'getConfigureAutoSMSTemplate');\n\n  const [customer, setcustomer] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const [admin, setadmin] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const handleSubmit = async () => {\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\n      {\n        body: {\n          event: 'order',\n          customer: {\n            ...customer,\n          },\n          admin: {\n            ...admin,\n          },\n        },\n      }\n    );\n\n    // @ts-ignore\n    if (\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes &&\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\n    ) {\n      openSuccessNotification();\n      setVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    if (!autoEmailTemplate['isLoading']) {\n      const error = autoEmailTemplate['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !autoEmailTemplate['isLoading'] &&\n      Object.keys(autoEmailTemplate.data).length > 0\n    ) {\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [autoEmailTemplate]);\n\n  useEffect(() => {\n    const getCustomerAutoEmail = async () => {\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\n        urlOptions: {\n          placeHolders: {\n            eventName: 'order',\n          },\n        },\n      });\n\n      console.log('Ordertemplate', res);\n      // @ts-ignore\n      if (res) {\n        setadmin(res['admin'] || '');\n        setcustomer(res['customer'] || '');\n      }\n      // set auto email template to customer and admin\n    };\n    getCustomerAutoEmail();\n  }, []);\n\n  const handleCancel = (e: any) => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      width={'80vw'}\n      style={{\n        top: '40px',\n      }}\n      title='Order Event Template'\n      visible={visible}\n      onOk={(e: any) => handleSubmit()}\n      onCancel={handleCancel}\n      okText='Submit'\n      okButtonProps={{\n        loading: autoEmailTemplate.isLoading,\n        htmlType: 'submit',\n        // disabled: getisSubmitButtonDisabled(values, isValid)\n      }}\n      bodyStyle={{\n        margin: '10px',\n        padding: '10px',\n      }}\n      footer={false}\n    >\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Customer' key='1'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '60%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={customer.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setcustomer({\n                    ...customer,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={customer.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setcustomer({\n                    ...customer,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '40%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.added?&gt; :\n                  </b>{' '}\n                  Order time\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.totalPrice?&gt; :\n                  </b>{' '}\n                  Total Price\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.status.name?&gt; :\n                  </b>{' '}\n                  Status at\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.firstName?&gt; :\n                  </b>{' '}\n                  Shipping first Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.country?&gt; :\n                  </b>{' '}\n                  Shipping Country\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.city?&gt; :\n                  </b>{' '}\n                  Shipping City\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Admin' key='2'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '60%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={admin.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setadmin({\n                    ...admin,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={admin.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setadmin({\n                    ...admin,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n            <div\n              style={{\n                width: '40%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.added?&gt; :\n                  </b>{' '}\n                  Order time\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.totalPrice?&gt; :\n                  </b>{' '}\n                  Total Price\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.status.name?&gt; :\n                  </b>{' '}\n                  Status at\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.firstName?&gt; :\n                  </b>{' '}\n                  Shipping first Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.country?&gt; :\n                  </b>{' '}\n                  Shipping Country\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.city?&gt; :\n                  </b>{' '}\n                  Shipping City\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n  Checkbox,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n  EditOutlined,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport NewCustomerTemplate from './NewCustomerTemplate';\nimport NewDealerAutoEventsTemplate from './NewDealerAutoEventsTemplate';\nimport OrderStatusTemplateAutoEmail from './OrderStatusTemplateAutoEmail';\nimport OrderTemplateAutoEmail from './OrderTemplateAutoEmail';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {}\n\nconst ConfigureAutoEmail = ({}: Props) => {\n  const [\n    getAutoEmailConfigurationState,\n    handleGetAutoEmailConfigurationFetch,\n  ] = useHandleFetch({}, 'getAutoSMSConfiguration');\n  const [\n    configureAutoEmailConfigurationState,\n    handleAutoEmailConfigurationFetch,\n  ] = useHandleFetch({}, 'configureAutoSMS');\n\n  const [isnewCustomerAdmin, setnewCustomerAdmin] = useState(false);\n  const [isnewCustomerCustomer, setnewCustomerCustomer] = useState(false);\n\n  const [isnewDealerAdmin, setnewDealerAdmin] = useState(false);\n  const [isnewDealer, setnewDealerDealer] = useState(false);\n\n  const [isorderAdmin, setorderAdmin] = useState(false);\n  const [isorderStatusAdmin, setorderStatusAdmin] = useState(false);\n  const [isorderCustomer, setorderCustomer] = useState(false);\n  const [isorderStatusCustomer, setIsorderStatusCustomer] = useState(false);\n\n  const [newcustomermodal, setnewcustomermodal] = useState(false);\n  const [newDealermodal, setnewDealermodal] = useState(false);\n  const [ordermodal, setordermodal] = useState(false);\n  const [orderStatusmodal, setorderStatusmodal] = useState(false);\n  const [autoEmailData, setAutoEmailData] = useState({});\n\n  console.log('isnewCustomerAdmin', isnewCustomerAdmin);\n  console.log('isnewCustomerCustomer', isnewCustomerCustomer);\n\n  useEffect(() => {\n    const getAutoEmailConfiguration = async () => {\n      const res = await handleGetAutoEmailConfigurationFetch({});\n      //@ts-ignore\n      if (res) {\n        setAutoEmailData(autoEmailData);\n        setnewCustomerAdmin(res['newCustomer']['admin']);\n        setnewCustomerCustomer(res['newCustomer']['user']);\n        setnewDealerAdmin(res['newDealer']['admin']);\n        setnewDealerDealer(res['newDealer']['user']);\n        setIsorderStatusCustomer(res['orderStatus']['user']);\n        setorderStatusAdmin(res['orderStatus']['admin']);\n        setorderAdmin(res['order']['admin']);\n        setorderCustomer(res['order']['user']);\n      }\n    };\n    getAutoEmailConfiguration();\n  }, []);\n\n  console.log('getAutoEmailConfigurationState', getAutoEmailConfigurationState);\n\n  const handleUpdateAutoEmail = async () => {\n    const updateAutoEmailRes = await handleAutoEmailConfigurationFetch({\n      body: {\n        newCustomer: {\n          admin: isnewCustomerAdmin,\n          user: isnewCustomerCustomer,\n        },\n        order: {\n          admin: isorderAdmin,\n          user: isorderCustomer,\n        },\n        orderStatus: {\n          admin: isorderStatusAdmin,\n          user: isorderStatusCustomer,\n        },\n        newDealer: {\n          admin: isnewDealerAdmin,\n          user: isnewDealer,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updateAutoEmailRes && updateAutoEmailRes.status === 'ok') {\n      openSuccessNotification('Auto email Configuration Updated!');\n    } else {\n      openErrorNotification(\n        \"Something went wrong, Couldn't updated Auto email configuration\"\n      );\n    }\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <div style={{}}>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '15px',\n                marginTop: '10px',\n              }}\n            >\n              <h3 className='checkBoxFieldLabel'>New Customer</h3>\n            </div>\n            <Button\n              className='templateEditSmall'\n              onClick={() => setnewcustomermodal(true)}\n              type='link'\n              icon={<EditOutlined />}\n            >\n              configure Template\n            </Button>\n          </div>\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '15px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '20px',\n              }}\n            >\n              <Checkbox\n                checked={isnewCustomerAdmin}\n                defaultChecked={isnewCustomerAdmin}\n                onChange={(e) => setnewCustomerAdmin(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\n              </Checkbox>\n            </div>\n            <div style={{}}>\n              <Checkbox\n                checked={isnewCustomerCustomer}\n                defaultChecked={isnewCustomerCustomer}\n                onChange={(e) => setnewCustomerCustomer(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\n              </Checkbox>\n            </div>\n          </div>\n        </div>\n\n        <div\n          style={{\n            marginTop: '25px',\n          }}\n        ></div>\n\n        <div style={{}}>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '15px',\n                marginTop: '10px',\n              }}\n            >\n              <h3 className='checkBoxFieldLabel'>New Dealer</h3>\n            </div>\n            <Button\n              className='templateEditSmall'\n              onClick={() => setnewDealermodal(true)}\n              type='link'\n              icon={<EditOutlined />}\n            >\n              configure Template\n            </Button>\n          </div>\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '15px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '20px',\n              }}\n            >\n              <Checkbox\n                checked={isnewDealerAdmin}\n                defaultChecked={isnewDealerAdmin}\n                onChange={(e) => setnewDealerAdmin(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\n              </Checkbox>\n            </div>\n            <div style={{}}>\n              <Checkbox\n                checked={isnewDealer}\n                defaultChecked={isnewDealer}\n                onChange={(e) => setnewDealerDealer(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\n              </Checkbox>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              marginTop: '30px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '15px',\n                marginTop: '10px',\n              }}\n            >\n              <h3 className='checkBoxFieldLabel'>Order</h3>\n            </div>\n            <Button\n              className='templateEditSmall'\n              onClick={() => setordermodal(true)}\n              type='link'\n              icon={<EditOutlined />}\n            >\n              configure Template\n            </Button>\n          </div>\n\n          <div\n            style={{\n              marginTop: '5px',\n            }}\n          ></div>\n\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '15px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '20px',\n              }}\n            >\n              <Checkbox\n                checked={isorderAdmin}\n                defaultChecked={isorderAdmin}\n                onChange={(e) => setorderAdmin(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\n              </Checkbox>\n            </div>\n            <div style={{}}>\n              <Checkbox\n                checked={isorderCustomer}\n                defaultChecked={isorderCustomer}\n                onChange={(e) => setorderCustomer(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\n              </Checkbox>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              marginTop: '30px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '15px',\n                marginTop: '10px',\n              }}\n            >\n              <h3 className='checkBoxFieldLabel'>Order status</h3>\n            </div>\n            <Button\n              className='templateEditSmall'\n              onClick={() => setorderStatusmodal(true)}\n              type='link'\n              icon={<EditOutlined />}\n            >\n              configure Template\n            </Button>\n          </div>\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '15px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '20px',\n              }}\n            >\n              <Checkbox\n                checked={isorderStatusAdmin}\n                defaultChecked={isorderStatusAdmin}\n                onChange={(e) => setorderStatusAdmin(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\n              </Checkbox>\n            </div>\n            <div style={{}}>\n              <Checkbox\n                checked={isorderStatusCustomer}\n                defaultChecked={isorderStatusCustomer}\n                onChange={(e) => setIsorderStatusCustomer(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\n              </Checkbox>\n            </div>\n\n            <div style={{}}></div>\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          marginTop: '25px',\n        }}\n      ></div>\n      <Button\n        onClick={(e: any) => handleUpdateAutoEmail()}\n        loading={configureAutoEmailConfigurationState.isLoading}\n        className='btnPrimaryClassNameoutline'\n      >\n        Update Auto Email Configuration\n      </Button>\n      <div\n        style={{\n          marginTop: '5px',\n        }}\n      ></div>\n      <NewCustomerTemplate\n        visible={newcustomermodal}\n        setVisible={setnewcustomermodal}\n      />\n      <NewDealerAutoEventsTemplate\n        visible={newDealermodal}\n        setVisible={setnewDealermodal}\n      />\n\n      <OrderStatusTemplateAutoEmail\n        visible={orderStatusmodal}\n        setVisible={setorderStatusmodal}\n      />\n      <OrderTemplateAutoEmail visible={ordermodal} setVisible={setordermodal} />\n    </>\n  );\n};\n\nexport default ConfigureAutoEmail;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n  Checkbox,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n  SendOutlined,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\n\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  recipient: '',\n  subject: '',\n};\n\ninterface Props {}\n\nconst ComposeCustomEmail = ({}: Props) => {\n  const [sendCustomerEmailState, handleSendCustomEmailFetch] = useHandleFetch(\n    {},\n    'sendCustomSMS'\n  );\n\n  const [text, setText] = useState('');\n  const [recipient, setrecipient] = useState('');\n\n  function handleChange(value) {\n    setrecipient(value);\n  }\n\n  const handleMsgSend = async () => {\n    const addTagRes = await handleSendCustomEmailFetch({\n      body: {\n        recipient: recipient,\n        text: text,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      setText('');\n      setrecipient('');\n      openSuccessNotification('SMS Sent!');\n    } else {\n      // openErrorNotification(\"Something went wrong, Couldn't send email\");\n    }\n  };\n\n  useEffect(() => {\n    if (!sendCustomerEmailState['isLoading']) {\n      const error = sendCustomerEmailState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !sendCustomerEmailState['isLoading'] &&\n      Object.keys(sendCustomerEmailState.data).length > 0\n    ) {\n      // if (sendCustomerEmailState['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [sendCustomerEmailState]);\n\n  return (\n    <div\n      style={{\n        width: '450px',\n      }}\n    >\n      <h3 className='inputFieldLabel'>Recipient</h3>\n\n      <Select\n        style={{\n          height: '30px',\n          borderRadius: '3px',\n          borderColor: '#eee !important',\n          width: '100%',\n        }}\n        mode='tags'\n        onChange={handleChange}\n        tokenSeparators={[',']}\n      ></Select>\n\n      <div\n        style={{\n          marginTop: '15px',\n        }}\n      ></div>\n      <TextArea\n        label='Text'\n        value={text}\n        name='text'\n        onChange={(e: any) => {\n          setText(e.target.value);\n        }}\n      />\n\n      <Button\n        style={{\n          marginTop: '10px',\n        }}\n        onClick={handleMsgSend}\n        loading={sendCustomerEmailState.isLoading}\n        //   disabled={getMsgSendIsDisabled()}\n\n        className='btnAddToPrice'\n      >\n        Send{' '}\n        <span\n          style={{\n            marginLeft: '10px',\n          }}\n        >\n          {' '}\n          <SendOutlined />\n        </span>\n      </Button>\n    </div>\n  );\n};\n\nexport default ComposeCustomEmail;\n","import React, { useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\nimport { Spin, Empty } from 'antd';\nimport moment from 'moment';\n\nimport { LeftOutlined } from '@ant-design/icons';\n\ninterface Props {\n  id?: any;\n  setSelectedEmailId?: any;\n}\n\nconst InboxEmailDetails = ({ id, setSelectedEmailId }: Props) => {\n  const [getEmailDetailState, handleGetEmailListFetch] = useHandleFetch(\n    {},\n    'getSMSDetails'\n  );\n\n  useEffect(() => {\n    const getEmailConfiguration = async () => {\n      const res = await handleGetEmailListFetch({\n        urlOptions: {\n          placeHolders: {\n            id: id,\n          },\n        },\n      });\n      // @ts-ignore\n    };\n    getEmailConfiguration();\n  }, []);\n\n  console.log('getEmailDetailState', getEmailDetailState);\n\n  return (\n    <>\n      {getEmailDetailState.isLoading && (\n        <>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              margin: '150px 0',\n            }}\n          >\n            <Spin size='large' />\n          </div>\n        </>\n      )}\n\n      {getEmailDetailState.done && !getEmailDetailState.data ? (\n        <>\n          <div\n            style={{\n              marginTop: '100px',\n            }}\n          >\n            <Empty\n              description='No SMS found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          </div>\n        </>\n      ) : (\n        ''\n      )}\n\n      {getEmailDetailState.done &&\n      getEmailDetailState.data &&\n      !(Object.keys(getEmailDetailState.data).length > 0) ? (\n        <>\n          <div\n            style={{\n              marginTop: '100px',\n            }}\n          >\n            <Empty\n              description='No SMS found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          </div>\n        </>\n      ) : (\n        ''\n      )}\n\n      {getEmailDetailState.done &&\n        getEmailDetailState.data &&\n        Object.keys(getEmailDetailState.data).length > 0 && (\n          <>\n            <div className='inboxEmailDetails'>\n              <div\n                onClick={() => setSelectedEmailId('')}\n                className='inboxEmailDetails__backBtn'\n              >\n                <LeftOutlined />\n              </div>\n              <div className='inboxEmailDetails__header'>\n                <span>{getEmailDetailState['data']['event']}</span>\n                <h3>{getEmailDetailState['data']['recipient']}</h3>\n                <h4>\n                  {getEmailDetailState['data']['time'] &&\n                    moment(getEmailDetailState['data']['time']).format(\n                      'MMMM Do YYYY, h:mm a'\n                    )}\n                </h4>\n              </div>\n              <div className='inboxEmailDetails__body'>\n                {getEmailDetailState['data']['text'] &&\n                  getEmailDetailState['data']['text']}\n              </div>\n            </div>\n          </>\n        )}\n    </>\n  );\n};\n\nexport default InboxEmailDetails;\n","import React, { useEffect, useState } from 'react';\n\n// import hoooks\nimport { useHandleFetch } from '../../hooks';\nimport InboxEmailDetails from './InboxEmailDetails';\nimport { Spin, Empty } from 'antd';\nimport moment from 'moment';\n\nimport ReactHtmlParser from 'react-html-parser';\n\ninterface Props {\n  emailList?: any;\n  setEmailList?: any;\n  getEmailListState?: any;\n}\n\nconst Inbox = ({ emailList, setEmailList, getEmailListState }: Props) => {\n  const [selectedEmailId, setSelectedEmailId] = useState('');\n\n  console.log('getEmailListState', getEmailListState);\n\n  return (\n    <>\n      {getEmailListState.isLoading && (\n        <>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              margin: '150px 0',\n            }}\n          >\n            <Spin size='large' />\n          </div>\n        </>\n      )}\n\n      {getEmailListState.done && emailList && !(emailList.length > 0) && (\n        <>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              margin: '50px 0',\n            }}\n          >\n            <Empty\n              description='No SMS found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          </div>\n        </>\n      )}\n\n      {getEmailListState.done && emailList && emailList.length > 0 && (\n        <>\n          <div className='sentEmailListContainer'>\n            {!selectedEmailId && (\n              <>\n                {getEmailListState.done && emailList && emailList.length > 0 && (\n                  <>\n                    {emailList.map((item) => {\n                      return (\n                        <div\n                          onClick={() => setSelectedEmailId(item.id)}\n                          className='sentEmailListContainer__item'\n                        >\n                          <div className='sentEmailListContainer__item-info'>\n                            <h3>To: {` ${item.recipient}`}</h3>\n                            <span>{`${item.event}`}</span>\n                          </div>\n\n                          <h4>\n                            {item.text && item.text.substring(0, 125) + '.....'}\n                          </h4>\n                          <h3>\n                            {item.time &&\n                              moment(item.time).format('MMMM Do, h a')}\n                          </h3>\n                        </div>\n                      );\n                    })}\n                  </>\n                )}\n              </>\n            )}\n\n            {selectedEmailId && (\n              <>\n                <InboxEmailDetails\n                  setSelectedEmailId={setSelectedEmailId}\n                  id={selectedEmailId}\n                />\n              </>\n            )}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Inbox;\n","import React, { useEffect, useState } from 'react';\n\n// import lib\nimport { Tabs, Input } from 'antd';\n\n// import components\nimport ConfigureSTMP from './ConfigureSMS';\nimport ConfigureAutoEmail from './ConfigureAutoEmail';\nimport ComposeCustomEmail from './ComposeCustomSMS';\nimport Inbox from './Inbox';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\nimport {\n  PlusCircleOutlined,\n  InboxOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\n\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\ninterface Props {}\n\nconst Sms = (props: Props) => {\n  const [getEmailListState, handleGetEmailListFetch] = useHandleFetch(\n    {},\n    'getSentSMSList'\n  );\n  const [emailList, setEmailList] = useState([]);\n\n  useEffect(() => {\n    const getEmailConfiguration = async () => {\n      const res = await handleGetEmailListFetch({\n        urlOptions: {\n          params: {\n            limitCount: 50000,\n            sortItemValue: 'time',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n      // @ts-ignore\n      setEmailList(res);\n    };\n    getEmailConfiguration();\n  }, []);\n\n  const handleSearch = (value) => {\n    if (getEmailListState.data.length > 0) {\n      const newProductList = getEmailListState.data.filter((item) => {\n        return (\n          (item.event &&\n            item.event.toLowerCase().includes(value.toLowerCase())) ||\n          (item.text && item.text.toLowerCase().includes(value.toLowerCase()))\n        );\n      });\n      setEmailList(newProductList);\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer__header'>\n        <div className='categoryListContainer__header-searchBar'>\n          <h2 className='categoryListContainer__header-title'>SMS</h2>\n\n          <Search\n            enterButton={false}\n            className='searchbarClassName'\n            placeholder='search SMS..'\n            onChange={(e) => handleSearch(e.target.value)}\n            // style={{ width: 300 }}\n          />\n        </div>\n      </div>\n\n      <div className='siteInfoContainer'>\n        <Tabs defaultActiveKey='1'>\n          <TabPane\n            tab={\n              <span>\n                <InboxOutlined />\n                Outbox\n              </span>\n            }\n            key='1'\n          >\n            <Inbox\n              getEmailListState={getEmailListState}\n              setEmailList={setEmailList}\n              emailList={emailList}\n            />\n          </TabPane>\n\n          <TabPane\n            tab={\n              <span>\n                <PlusCircleOutlined />\n                Compose SMS\n              </span>\n            }\n            key='2'\n          >\n            <ComposeCustomEmail />\n          </TabPane>\n\n          <TabPane\n            tab={\n              <span>\n                <SettingOutlined />\n                Configure SMS\n              </span>\n            }\n            key='3'\n          >\n            <ConfigureSTMP />\n          </TabPane>\n\n          <TabPane\n            tab={\n              <span>\n                <SettingOutlined />\n                Configure Auto SMS\n              </span>\n            }\n            key='4'\n          >\n            <ConfigureAutoEmail />\n          </TabPane>\n        </Tabs>\n      </div>\n    </>\n  );\n};\n\nexport default Sms;\n","import SMS from './Sms';\nexport default SMS;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip,Checkbox  } from 'antd';\n\nimport {\n    FileOutlined,\n    InboxOutlined,\n    FileAddOutlined,\n    DeleteOutlined,\n    CheckCircleOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined,\n    PlusOutlined,\n    FileImageFilled\n} from '@ant-design/icons';\n\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from \"../../components/MediaLibrary\";\n\nconst validationSchema = Yup.object().shape({\n});\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Tag Created',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.error({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nconst initialValues = {\n    \"fromEmail\": \"\",\n    \"fromName\": \"\",\n    \"host\": \"\",\n    \"encryption\":\"\",\n    \"port\":'',\n    \"smtpUsername\":\"\",\n    \"smtpPassword\": \"\"\n}\n\n\n\ninterface Props {\n}\n\nconst ConfigureSTMP = ({  }: Props) => {\n\n    const [getEmailConfigurationState, handleGetEmailConfigurationFetch] = useHandleFetch({}, 'getEmailConfiguration');\n    const [emailConfigurationState, handleEmailConfigurationFetch] = useHandleFetch({}, 'configureEmailSTMP');\n \n    const [isAuthenticated,setIsAuthenticated] = useState(true);\n    const [configurationData,setConfigurationData] = useState({}); \n\n\n\n    useEffect(() => {\n      const getEmailConfiguration = async () => {\n          const res = await handleGetEmailConfigurationFetch({});\n          // @ts-ignore\n          if(res){\n              // @ts-ignore\n            setConfigurationData(res); \n            setIsAuthenticated(res['authentication'])\n          }\n      }; \n      getEmailConfiguration(); \n    }, [])\n\n\n    console.log('getEmailConfigurationState',getEmailConfigurationState)\n\n    const handleSubmit = async (values: any, actions: any) => {\n        const addTagRes = await handleEmailConfigurationFetch({\n            body: {\n                \"fromEmail\": values.fromEmail.trim(),\n                \"fromName\": values.fromName.trim(),\n                \"host\": values.host.trim(),\n                \"encryption\":values.encryption.trim(),\n                \"port\":values.port,\n                \"authentication\": isAuthenticated,\n                \"smtpUsername\":values.smtpUsername.trim(),\n                \"smtpPassword\": values.smtpPassword.trim()\n            },\n        });\n\n        // @ts-ignore\n        if (addTagRes && addTagRes.status === 'ok') {\n           \n        }\n        else {\n            // openErrorNotification(\"Something went wrong, Couldn't updated STMP configuration\");\n        }\n\n\n        actions.setSubmitting(false);\n\n    };\n\n\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!values.name || !isValid) {\n            return true;\n        }\n        return false;\n    }\n\n\n\n    \n\tuseEffect(() => {\n\t\tif (!emailConfigurationState['isLoading']) {\n\t\t\tconst error = emailConfigurationState['error'];\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\t\t\t\tif (error['error']['registerError']) {\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\n\t\t\t\t} else if (error['error']['checkoutError']) {\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\t// setServerErrors(error['error']);\n\t\t\t\t}\n\n\t\t\t\tconst errors =\n\t\t\t\t\tObject.values(error['error']).length > 0\n\t\t\t\t\t\t? Object.values(error['error'])\n\t\t\t\t\t\t: [];\n\t\t\t\terrors.forEach((err, i) => {\n\t\t\t\t\tif (typeof err === 'string') {\n\t\t\t\t\t\topenErrorNotification(err);\n\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof err === 'object') {\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\n\t\t\t\t\t\t\tconst errs = Object.values(err);\n\t\t\t\t\t\t\terrs.forEach(err => {\n\t\t\t\t\t\t\t\topenErrorNotification(err);\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t!emailConfigurationState['isLoading'] &&\n\t\t\tObject.keys(emailConfigurationState.data).length > 0\n\t\t) {\n\t\t\tif (emailConfigurationState['data']['status'] === 'ok') {\n                openSuccessNotification('STMP Configuration Updated!');\n\t\t\t\t// history.push({\n\t\t\t\t//   pathname: '/orderDetails',\n\t\t\t\t//   state: checkoutState['data']\n\t\t\t\t// })\n\n\t\t\t\t// clearCart();\n\t\t\t\t// setIsModalShown(true);\n\t\t\t}\n\t\t}\n\t}, [emailConfigurationState]);\n\n\n\n    const handleAuthenticatedChange = (e) => {\n        setIsAuthenticated(e.target.checked);\n    }\n\n\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={\n                { ...initialValues, ...configurationData }\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n\n                                         \t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\n                                                    label='From Email'\n                                                    value={values.fromEmail}\n                                                    name='fromEmail'\n                                                    isError={(touched.fromEmail && errors.fromEmail) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\n\n                                                    errorString={(touched.fromEmail && errors.fromEmail) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromEmail'])}\n                                                    onChange={(e: any) => {\n                                                        handleChange(e);\n                                                        setFieldTouched('fromEmail');\n                                                    }}\n                                                     />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n                                                    <Input\n                                                    label='From Name'\n                                                    value={values.fromName}\n                                                    name='fromName'\n                                                    isError={(touched.fromName && errors.fromName) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\n\n                                                    errorString={(touched.fromName && errors.fromName) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['fromName'])}\n                                                    onChange={(e: any) => {\n                                                        handleChange(e);\n                                                        setFieldTouched('fromName');\n                                                    }}\n                                                />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n\n                                            <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n                                                      <Input\n                                                    label='Host'\n                                                    value={values.host}\n                                                    name='host'\n                                                    isError={(touched.host && errors.host) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\n\n                                                    errorString={(touched.host && errors.host) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['host'])}\n                                                    onChange={(e: any) => {\n                                                        handleChange(e);\n                                                        setFieldTouched('host');\n                                                    }}\n                                                     />\n\n\t\t\t\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n                                                    <Input\n                                                    label='Encryption'\n                                                    value={values.encryption}\n                                                    name='encryption'\n                                                    isError={(touched.encryption && errors.encryption) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\n\n                                                    errorString={(touched.encryption && errors.encryption) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['encryption'])}\n                                                    onChange={(e: any) => {\n                                                        handleChange(e);\n                                                        setFieldTouched('encryption');\n                                                    }}\n                                                />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n\n\n                                            <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t  <Input\n                                                    label='STMP Username'\n                                                    value={values.smtpUsername}\n                                                    name='smtpUsername'\n                                                    isError={(touched.smtpUsername && errors.smtpUsername) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\n\n                                                    errorString={(touched.smtpUsername && errors.smtpUsername) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpUsername'])}\n                                                    onChange={(e: any) => {\n                                                        handleChange(e);\n                                                        setFieldTouched('smtpUsername');\n                                                    }}\n                                                    />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n                                                    <Input\n                                                    label='STMP Password'\n                                                    value={values.smtpPassword}\n                                                    name='smtpPassword'\n                                                    isError={(touched.smtpPassword && errors.smtpPassword) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\n\n                                                    errorString={(touched.smtpPassword && errors.smtpPassword) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['smtpPassword'])}\n                                                    onChange={(e: any) => {\n                                                        handleChange(e);\n                                                        setFieldTouched('smtpPassword');\n                                                    }}\n                                                />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\n\n                                            <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '49%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n                                                  <Input\n                                                     type='number'\n                                                    label='Port'\n                                                    value={values.port}\n                                                    name='port'\n                                                    isError={(touched.port && errors.port) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\n\n                                                    errorString={(touched.port && errors.port) ||\n                                                        (!isSubmitting && emailConfigurationState.error['error']['port'])}\n                                                    onChange={(e: any) => {\n                                                        handleChange(e);\n                                                        setFieldTouched('port');\n                                                    }}\n                                                    />\n                                            </div>\n\n                                        \n                                            <Checkbox\n                                            value={isAuthenticated}\n                                             onChange={handleAuthenticatedChange}>\n                                                    <span className='checkBoxFieldLabel'>\n                                                        Authentication\n                                                    </span>\n                                                    \n                                                </Checkbox>    \n\n\n\n<div style={{\n    marginTop:'20px'\n}}></div>\n                                      <div style={{\n                                          display:'block',\n                                          marginBottom:'20px',\n                                          marginTop:'20px',\n                                      }}>\n                                                    \n                                      <Button\n\n                                        onClick={(e: any) => handleSubmit(e)}\n                                        loading={emailConfigurationState.isLoading}\n                                        className='btnPrimaryClassNameoutline'\n                                        >\n                                        Update Email Configuration\n                                        </Button>      \n                                          </div>      \n                    </>\n                )}\n        </Formik>\n    );\n};\n\nexport default ConfigureSTMP;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Customer Template Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\ninterface Props {\n  visible: boolean;\n  setVisible: any;\n}\n\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\n    {},\n    'configureAutoEmailTemplate'\n  );\n  const [\n    getConfigureAutoEmailTemplate,\n    handleGetConfigureAutoEmailTemplateFetch,\n  ] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\n\n  const [customer, setcustomer] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const [admin, setadmin] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const handleSubmit = async () => {\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\n      {\n        body: {\n          event: 'newCustomer',\n          customer: {\n            ...customer,\n          },\n          admin: {\n            ...admin,\n          },\n        },\n      }\n    );\n\n    // @ts-ignore\n    if (\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes &&\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\n    ) {\n      openSuccessNotification();\n      setVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    if (!autoEmailTemplate['isLoading']) {\n      const error = autoEmailTemplate['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !autoEmailTemplate['isLoading'] &&\n      Object.keys(autoEmailTemplate.data).length > 0\n    ) {\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [autoEmailTemplate]);\n\n  useEffect(() => {\n    const getCustomerAutoEmail = async () => {\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\n        urlOptions: {\n          placeHolders: {\n            eventName: 'newCustomer',\n          },\n        },\n      });\n\n      console.log('newCustomertemplate', res);\n      // @ts-ignore\n      if (res) {\n        setadmin(res['admin']);\n        setcustomer(res['customer']);\n      }\n      // set auto email template to customer and admin\n    };\n    getCustomerAutoEmail();\n  }, []);\n\n  const handleCancel = (e: any) => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      width={'80vw'}\n      style={{\n        top: '40px',\n      }}\n      title='New Customer Event Template'\n      visible={visible}\n      onOk={(e: any) => handleSubmit()}\n      onCancel={handleCancel}\n      okText='Submit'\n      okButtonProps={{\n        loading: autoEmailTemplate.isLoading,\n        htmlType: 'submit',\n        // disabled: getisSubmitButtonDisabled(values, isValid)\n      }}\n      bodyStyle={{\n        margin: '10px',\n        padding: '10px',\n      }}\n      footer={false}\n    >\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Customer' key='1'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '65%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={customer.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setcustomer({\n                    ...customer,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={customer.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setcustomer({\n                    ...customer,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '35%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.firstName?&gt; :\n                  </b>{' '}\n                  First Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.lastName?&gt; :\n                  </b>{' '}\n                  Last Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.phone?&gt; :\n                  </b>{' '}\n                  Phone\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.address1?&gt; :\n                  </b>{' '}\n                  Address\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.added?&gt; :\n                  </b>{' '}\n                  Joined\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Admin' key='2'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '65%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={admin.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setadmin({\n                    ...admin,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={admin.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setadmin({\n                    ...admin,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n            <div\n              style={{\n                width: '35%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.firstName?&gt; :\n                  </b>{' '}\n                  First Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.lastName?&gt; :\n                  </b>{' '}\n                  Last Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.phone?&gt; :\n                  </b>{' '}\n                  Phone\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.address1?&gt; :\n                  </b>{' '}\n                  Address\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?customer.added?&gt; :\n                  </b>{' '}\n                  Joined\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Dealer Template Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\ninterface Props {\n  visible: boolean;\n  setVisible: any;\n}\n\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\n    {},\n    'configureAutoEmailTemplate'\n  );\n  const [\n    getConfigureAutoEmailTemplate,\n    handleGetConfigureAutoEmailTemplateFetch,\n  ] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\n\n  const [customer, setcustomer] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const [admin, setadmin] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const handleSubmit = async () => {\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\n      {\n        body: {\n          event: 'newDealer',\n          user: {\n            ...customer,\n          },\n          admin: {\n            ...admin,\n          },\n        },\n      }\n    );\n\n    // @ts-ignore\n    if (\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes &&\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\n    ) {\n      openSuccessNotification();\n      setVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    if (!autoEmailTemplate['isLoading']) {\n      const error = autoEmailTemplate['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !autoEmailTemplate['isLoading'] &&\n      Object.keys(autoEmailTemplate.data).length > 0\n    ) {\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [autoEmailTemplate]);\n\n  useEffect(() => {\n    const getCustomerAutoEmail = async () => {\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\n        urlOptions: {\n          placeHolders: {\n            eventName: 'newDealer',\n          },\n        },\n      });\n\n      console.log('newDealertemplate', res);\n      // @ts-ignore\n      if (res) {\n        setadmin(res['admin']);\n        setcustomer(res['user']);\n      }\n      // set auto email template to customer and admin\n    };\n    getCustomerAutoEmail();\n  }, []);\n\n  const handleCancel = (e: any) => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      width={'80vw'}\n      style={{\n        top: '40px',\n      }}\n      title='New Dealer Event Template'\n      visible={visible}\n      onOk={(e: any) => handleSubmit()}\n      onCancel={handleCancel}\n      okText='Submit'\n      okButtonProps={{\n        loading: autoEmailTemplate.isLoading,\n        htmlType: 'submit',\n        // disabled: getisSubmitButtonDisabled(values, isValid)\n      }}\n      bodyStyle={{\n        margin: '10px',\n        padding: '10px',\n      }}\n      footer={false}\n    >\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Customer' key='1'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '65%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={customer.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setcustomer({\n                    ...customer,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={customer.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setcustomer({\n                    ...customer,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '35%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=user.code?&gt; :\n                  </b>{' '}\n                  Code\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=user.firstName?&gt; :\n                  </b>{' '}\n                  First Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.lastName?&gt; :\n                  </b>{' '}\n                  Last Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.phone?&gt; :\n                  </b>{' '}\n                  Phone\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.address1?&gt; :\n                  </b>{' '}\n                  Address\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.added?&gt; :\n                  </b>{' '}\n                  Joined\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Admin' key='2'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '65%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={admin.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setadmin({\n                    ...admin,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={admin.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setadmin({\n                    ...admin,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n            <div\n              style={{\n                width: '35%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=user.code?&gt; :\n                  </b>{' '}\n                  Code\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=user.firstName?&gt; :\n                  </b>{' '}\n                  First Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.lastName?&gt; :\n                  </b>{' '}\n                  Last Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.phone?&gt; :\n                  </b>{' '}\n                  Phone\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.email?&gt; :\n                  </b>{' '}\n                  Email\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.address1?&gt; :\n                  </b>{' '}\n                  Address\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?user.added?&gt; :\n                  </b>{' '}\n                  Joined\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({\n  // name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Customer Template Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\ninterface Props {\n  visible: boolean;\n  setVisible: any;\n}\n\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\n    {},\n    'configureAutoEmailTemplate'\n  );\n  const [\n    getConfigureAutoEmailTemplate,\n    handleGetConfigureAutoEmailTemplateFetch,\n  ] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\n\n  const [customer, setcustomer] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const [admin, setadmin] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const handleSubmit = async () => {\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\n      {\n        body: {\n          event: 'orderStatus',\n          customer: {\n            ...customer,\n          },\n          admin: {\n            ...admin,\n          },\n        },\n      }\n    );\n\n    // @ts-ignore\n    if (\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes &&\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\n    ) {\n      openSuccessNotification();\n      setVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    if (!autoEmailTemplate['isLoading']) {\n      const error = autoEmailTemplate['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !autoEmailTemplate['isLoading'] &&\n      Object.keys(autoEmailTemplate.data).length > 0\n    ) {\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [autoEmailTemplate]);\n\n  useEffect(() => {\n    const getCustomerAutoEmail = async () => {\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\n        urlOptions: {\n          placeHolders: {\n            eventName: 'orderStatus',\n          },\n        },\n      });\n\n      console.log('orderStatus', res);\n      // @ts-ignore\n      if (res) {\n        setadmin(res['admin']);\n        setcustomer(res['customer']);\n      }\n      // set auto email template to customer and admin\n    };\n    getCustomerAutoEmail();\n  }, []);\n\n  const handleCancel = (e: any) => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      width={'70vw'}\n      style={{\n        top: '40px',\n      }}\n      title='Order Status Template'\n      visible={visible}\n      onOk={(e: any) => handleSubmit()}\n      onCancel={handleCancel}\n      okText='Submit'\n      okButtonProps={{\n        loading: autoEmailTemplate.isLoading,\n        htmlType: 'submit',\n        // disabled: getisSubmitButtonDisabled(values, isValid)\n      }}\n      bodyStyle={{\n        margin: '10px',\n        padding: '10px',\n      }}\n      footer={false}\n    >\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Customer' key='1'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '70%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={customer.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setcustomer({\n                    ...customer,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={customer.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setcustomer({\n                    ...customer,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '30%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.status.name?&gt; :\n                  </b>{' '}\n                  Order Status\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.firstName?&gt; :\n                  </b>{' '}\n                  Customer first name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.lastName?&gt; :\n                  </b>{' '}\n                  Customer last name\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.shortCode?&gt; :\n                  </b>{' '}\n                  Order Code\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Admin' key='2'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '70%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={admin.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setadmin({\n                    ...admin,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={admin.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setadmin({\n                    ...admin,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '30%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.status.name?&gt; :\n                  </b>{' '}\n                  Order Status\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.firstName?&gt; :\n                  </b>{' '}\n                  Customer first name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=customer.lastName?&gt; :\n                  </b>{' '}\n                  Customer last name\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.shortCode?&gt; :\n                  </b>{' '}\n                  Order Code\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst { TabPane } = Tabs;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'New Order Template Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\ninterface Props {\n  visible: boolean;\n  setVisible: any;\n}\n\nconst AddNewBrand = ({ visible, setVisible }: Props) => {\n  const [autoEmailTemplate, handleAutoEmailTemplateFetch] = useHandleFetch(\n    {},\n    'configureAutoEmailTemplate'\n  );\n  const [\n    getConfigureAutoEmailTemplate,\n    handleGetConfigureAutoEmailTemplateFetch,\n  ] = useHandleFetch({}, 'getConfigureAutoEmailTemplate');\n\n  const [customer, setcustomer] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const [admin, setadmin] = useState({\n    subject: '',\n    body: '',\n  });\n\n  const handleSubmit = async () => {\n    const getConfigurationAutoEmailTemplateRes = await handleAutoEmailTemplateFetch(\n      {\n        body: {\n          event: 'order',\n          customer: {\n            ...customer,\n          },\n          admin: {\n            ...admin,\n          },\n        },\n      }\n    );\n\n    // @ts-ignore\n    if (\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes &&\n      // @ts-ignore\n      getConfigurationAutoEmailTemplateRes.status === 'ok'\n    ) {\n      openSuccessNotification();\n      setVisible(false);\n    } else {\n      openErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    if (!autoEmailTemplate['isLoading']) {\n      const error = autoEmailTemplate['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !autoEmailTemplate['isLoading'] &&\n      Object.keys(autoEmailTemplate.data).length > 0\n    ) {\n      // if (autoEmailTemplate['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [autoEmailTemplate]);\n\n  useEffect(() => {\n    const getCustomerAutoEmail = async () => {\n      const res = await handleGetConfigureAutoEmailTemplateFetch({\n        urlOptions: {\n          placeHolders: {\n            eventName: 'order',\n          },\n        },\n      });\n\n      console.log('Ordertemplate', res);\n      // @ts-ignore\n      if (res) {\n        setadmin(res['admin']);\n        setcustomer(res['customer']);\n      }\n      // set auto email template to customer and admin\n    };\n    getCustomerAutoEmail();\n  }, []);\n\n  const handleCancel = (e: any) => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      width={'80vw'}\n      style={{\n        top: '40px',\n      }}\n      title='Order Event Template'\n      visible={visible}\n      onOk={(e: any) => handleSubmit()}\n      onCancel={handleCancel}\n      okText='Submit'\n      okButtonProps={{\n        loading: autoEmailTemplate.isLoading,\n        htmlType: 'submit',\n        // disabled: getisSubmitButtonDisabled(values, isValid)\n      }}\n      bodyStyle={{\n        margin: '10px',\n        padding: '10px',\n      }}\n      footer={false}\n    >\n      <Tabs defaultActiveKey='1'>\n        <TabPane tab='Customer' key='1'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '60%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={customer.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setcustomer({\n                    ...customer,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={customer.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setcustomer({\n                    ...customer,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n\n            <div\n              style={{\n                width: '40%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.added?&gt; :\n                  </b>{' '}\n                  Order time\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.totalPrice?&gt; :\n                  </b>{' '}\n                  Total Price\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.status.name?&gt; :\n                  </b>{' '}\n                  Status at\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.firstName?&gt; :\n                  </b>{' '}\n                  Shipping first Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.country?&gt; :\n                  </b>{' '}\n                  Shipping Country\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.city?&gt; :\n                  </b>{' '}\n                  Shipping City\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n\n        <TabPane tab='Admin' key='2'>\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <div\n              style={{\n                width: '60%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={admin.subject}\n                name='subject'\n                onChange={(e: any) => {\n                  setadmin({\n                    ...admin,\n                    subject: e.target.value,\n                  });\n                }}\n              />\n\n              <h3 className='inputFieldLabel'>Body</h3>\n\n              <CKEditor\n                editor={ClassicEditor}\n                data={admin.body}\n                onInit={(editor) => {\n                  // You can store the \"editor\" and use when it is needed.\n                  console.log('Editor is ready to use!', editor);\n                }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setadmin({\n                    ...admin,\n                    body: data,\n                  });\n                }}\n                onBlur={(event, editor) => {\n                  console.log('Blur.', editor);\n                }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n\n              <div\n                style={{\n                  display: 'block',\n                  marginBottom: '20px',\n                  marginTop: '20px',\n                }}\n              >\n                <Button\n                  onClick={handleSubmit}\n                  loading={autoEmailTemplate.isLoading}\n                  className='btnPrimaryClassNameoutline'\n                >\n                  Update Template\n                </Button>\n              </div>\n            </div>\n            <div\n              style={{\n                width: '40%',\n                overflowY: 'auto',\n                background: '#f7f7f7',\n                marginLeft: '20px',\n                padding: '10px',\n                borderRadius: '8px',\n              }}\n            >\n              <h4>Information Tags</h4>\n              <p\n                style={{\n                  fontSize: '12px',\n                }}\n              >\n                Place the following tags to replace them with actual data while\n                sending email\n              </p>\n\n              <ul\n                style={{\n                  padding: '15px',\n                }}\n              >\n                <li\n                  style={{\n                    fontSize: '12px',\n                    marginBottom: '10px',\n                    lineHeight: 1.7,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?=order.added?&gt; :\n                  </b>{' '}\n                  Order time\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.totalPrice?&gt; :\n                  </b>{' '}\n                  Total Price\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.status.name?&gt; :\n                  </b>{' '}\n                  Status at\n                </li>\n\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.firstName?&gt; :\n                  </b>{' '}\n                  Shipping first Name\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.country?&gt; :\n                  </b>{' '}\n                  Shipping Country\n                </li>\n                <li\n                  style={{\n                    fontSize: '12px',\n                    lineHeight: 2,\n                    fontWeight: 500,\n                  }}\n                >\n                  <b\n                    style={{\n                      borderRadius: '15px',\n                      backgroundColor: '#ddd',\n                      padding: '1px 10px',\n                    }}\n                  >\n                    &lt;?order.shippingAddress.city?&gt; :\n                  </b>{' '}\n                  Shipping City\n                </li>\n              </ul>\n            </div>\n          </div>\n        </TabPane>\n      </Tabs>\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n  Checkbox,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n  EditOutlined,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport NewCustomerTemplate from './NewCustomerTemplate';\nimport NewDealerAutoEventsTemplate from './NewDealerAutoEventsTemplate';\nimport OrderStatusTemplateAutoEmail from './OrderStatusTemplateAutoEmail';\nimport OrderTemplateAutoEmail from './OrderTemplateAutoEmail';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {}\n\nconst ConfigureAutoEmail = ({}: Props) => {\n  const [\n    getAutoEmailConfigurationState,\n    handleGetAutoEmailConfigurationFetch,\n  ] = useHandleFetch({}, 'getAutoEmailConfiguration');\n  const [\n    configureAutoEmailConfigurationState,\n    handleAutoEmailConfigurationFetch,\n  ] = useHandleFetch({}, 'configureAutoEmail');\n\n  const [isnewCustomerAdmin, setnewCustomerAdmin] = useState(false);\n  const [isnewCustomerCustomer, setnewCustomerCustomer] = useState(false);\n\n  const [isnewDealerAdmin, setnewDealerAdmin] = useState(false);\n  const [isnewDealer, setnewDealerDealer] = useState(false);\n\n  const [isorderAdmin, setorderAdmin] = useState(false);\n  const [isorderStatusAdmin, setorderStatusAdmin] = useState(false);\n  const [isorderCustomer, setorderCustomer] = useState(false);\n  const [isorderStatusCustomer, setIsorderStatusCustomer] = useState(false);\n\n  const [newcustomermodal, setnewcustomermodal] = useState(false);\n  const [newDealermodal, setnewDealermodal] = useState(false);\n  const [ordermodal, setordermodal] = useState(false);\n  const [orderStatusmodal, setorderStatusmodal] = useState(false);\n  const [autoEmailData, setAutoEmailData] = useState({});\n\n  console.log('isnewCustomerAdmin', isnewCustomerAdmin);\n  console.log('isnewCustomerCustomer', isnewCustomerCustomer);\n\n  useEffect(() => {\n    const getAutoEmailConfiguration = async () => {\n      const res = await handleGetAutoEmailConfigurationFetch({});\n      //@ts-ignore\n      if (res) {\n        setAutoEmailData(autoEmailData);\n        setnewCustomerAdmin(res['newCustomer']['admin']);\n        setnewCustomerCustomer(res['newCustomer']['user']);\n        setnewDealerAdmin(res['newDealer']['admin']);\n        setnewDealerDealer(res['newDealer']['user']);\n        setIsorderStatusCustomer(res['orderStatus']['user']);\n        setorderStatusAdmin(res['orderStatus']['admin']);\n        setorderAdmin(res['order']['admin']);\n        setorderCustomer(res['order']['user']);\n      }\n    };\n    getAutoEmailConfiguration();\n  }, []);\n\n  console.log('getAutoEmailConfigurationState', getAutoEmailConfigurationState);\n\n  const handleUpdateAutoEmail = async () => {\n    const updateAutoEmailRes = await handleAutoEmailConfigurationFetch({\n      body: {\n        newCustomer: {\n          admin: isnewCustomerAdmin,\n          user: isnewCustomerCustomer,\n        },\n        order: {\n          admin: isorderAdmin,\n          user: isorderCustomer,\n        },\n        orderStatus: {\n          admin: isorderStatusAdmin,\n          user: isorderStatusCustomer,\n        },\n        newDealer: {\n          admin: isnewDealerAdmin,\n          user: isnewDealer,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (updateAutoEmailRes && updateAutoEmailRes.status === 'ok') {\n      openSuccessNotification('Auto email Configuration Updated!');\n    } else {\n      openErrorNotification(\n        \"Something went wrong, Couldn't updated Auto email configuration\"\n      );\n    }\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <div style={{}}>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '15px',\n                marginTop: '10px',\n              }}\n            >\n              <h3 className='checkBoxFieldLabel'>New Customer</h3>\n            </div>\n            <Button\n              className='templateEditSmall'\n              onClick={() => setnewcustomermodal(true)}\n              type='link'\n              icon={<EditOutlined />}\n            >\n              configure Template\n            </Button>\n          </div>\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '15px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '20px',\n              }}\n            >\n              <Checkbox\n                checked={isnewCustomerAdmin}\n                defaultChecked={isnewCustomerAdmin}\n                onChange={(e) => setnewCustomerAdmin(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\n              </Checkbox>\n            </div>\n            <div style={{}}>\n              <Checkbox\n                checked={isnewCustomerCustomer}\n                defaultChecked={isnewCustomerCustomer}\n                onChange={(e) => setnewCustomerCustomer(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\n              </Checkbox>\n            </div>\n          </div>\n        </div>\n\n        <div\n          style={{\n            marginTop: '25px',\n          }}\n        ></div>\n\n        <div style={{}}>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '15px',\n                marginTop: '10px',\n              }}\n            >\n              <h3 className='checkBoxFieldLabel'>New Dealer</h3>\n            </div>\n            <Button\n              className='templateEditSmall'\n              onClick={() => setnewDealermodal(true)}\n              type='link'\n              icon={<EditOutlined />}\n            >\n              configure Template\n            </Button>\n          </div>\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '15px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '20px',\n              }}\n            >\n              <Checkbox\n                checked={isnewDealerAdmin}\n                defaultChecked={isnewDealerAdmin}\n                onChange={(e) => setnewDealerAdmin(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\n              </Checkbox>\n            </div>\n            <div style={{}}>\n              <Checkbox\n                checked={isnewDealer}\n                defaultChecked={isnewDealer}\n                onChange={(e) => setnewDealerDealer(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\n              </Checkbox>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              marginTop: '30px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '15px',\n                marginTop: '10px',\n              }}\n            >\n              <h3 className='checkBoxFieldLabel'>Order</h3>\n            </div>\n            <Button\n              className='templateEditSmall'\n              onClick={() => setordermodal(true)}\n              type='link'\n              icon={<EditOutlined />}\n            >\n              configure Template\n            </Button>\n          </div>\n\n          <div\n            style={{\n              marginTop: '5px',\n            }}\n          ></div>\n\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '15px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '20px',\n              }}\n            >\n              <Checkbox\n                checked={isorderAdmin}\n                defaultChecked={isorderAdmin}\n                onChange={(e) => setorderAdmin(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\n              </Checkbox>\n            </div>\n            <div style={{}}>\n              <Checkbox\n                checked={isorderCustomer}\n                defaultChecked={isorderCustomer}\n                onChange={(e) => setorderCustomer(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\n              </Checkbox>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              marginTop: '30px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '15px',\n                marginTop: '10px',\n              }}\n            >\n              <h3 className='checkBoxFieldLabel'>Order status</h3>\n            </div>\n            <Button\n              className='templateEditSmall'\n              onClick={() => setorderStatusmodal(true)}\n              type='link'\n              icon={<EditOutlined />}\n            >\n              configure Template\n            </Button>\n          </div>\n          <div\n            style={{\n              marginTop: '15px',\n            }}\n          ></div>\n          <div\n            style={{\n              display: 'flex',\n              marginTop: '15px',\n            }}\n          >\n            <div\n              style={{\n                marginRight: '20px',\n              }}\n            >\n              <Checkbox\n                checked={isorderStatusAdmin}\n                defaultChecked={isorderStatusAdmin}\n                onChange={(e) => setorderStatusAdmin(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Admin</span>\n              </Checkbox>\n            </div>\n            <div style={{}}>\n              <Checkbox\n                checked={isorderStatusCustomer}\n                defaultChecked={isorderStatusCustomer}\n                onChange={(e) => setIsorderStatusCustomer(e.target.checked)}\n              >\n                <span className='checkBoxSmallFieldLabel'>Customer</span>\n              </Checkbox>\n            </div>\n\n            <div style={{}}></div>\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          marginTop: '25px',\n        }}\n      ></div>\n      <Button\n        onClick={(e: any) => handleUpdateAutoEmail()}\n        loading={configureAutoEmailConfigurationState.isLoading}\n        className='btnPrimaryClassNameoutline'\n      >\n        Update Auto Email Configuration\n      </Button>\n      <div\n        style={{\n          marginTop: '5px',\n        }}\n      ></div>\n      <NewCustomerTemplate\n        visible={newcustomermodal}\n        setVisible={setnewcustomermodal}\n      />\n      <NewDealerAutoEventsTemplate\n        visible={newDealermodal}\n        setVisible={setnewDealermodal}\n      />\n\n      <OrderStatusTemplateAutoEmail\n        visible={orderStatusmodal}\n        setVisible={setorderStatusmodal}\n      />\n      <OrderTemplateAutoEmail visible={ordermodal} setVisible={setordermodal} />\n    </>\n  );\n};\n\nexport default ConfigureAutoEmail;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n  Checkbox,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\n\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nconst validationSchema = Yup.object().shape({});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  recipient: '',\n  subject: '',\n};\n\ninterface Props {\n  emailList?: any;\n  setEmailList?: any;\n}\n\nconst ComposeCustomEmail = ({ emailList, setEmailList }: Props) => {\n  const [sendCustomerEmailState, handleSendCustomEmailFetch] = useHandleFetch(\n    {},\n    'sendCustomEmail'\n  );\n\n  const [html, sethtml] = useState('');\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleSendCustomEmailFetch({\n      body: {\n        recipient: values.recipient.trim(),\n        subject: values.subject.trim(),\n        html: html,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      console.log('MahManEmail', addTagRes);\n      sethtml('');\n      actions.resetForm();\n      openSuccessNotification('Email Sent!');\n    } else {\n      // openErrorNotification(\"Something went wrong, Couldn't send email\");\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!sendCustomerEmailState['isLoading']) {\n      const error = sendCustomerEmailState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !sendCustomerEmailState['isLoading'] &&\n      Object.keys(sendCustomerEmailState.data).length > 0\n    ) {\n      // if (sendCustomerEmailState['data']['status'] === 'ok') {\n      //     openSuccessNotification('Email Sent!');\n      // }\n    }\n  }, [sendCustomerEmailState]);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n            }}\n          >\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <Input\n                label='To'\n                value={values.recipient}\n                name='recipient'\n                isError={\n                  (touched.recipient && errors.recipient) ||\n                  (!isSubmitting &&\n                    sendCustomerEmailState.error['error']['recipient'])\n                }\n                errorString={\n                  (touched.recipient && errors.recipient) ||\n                  (!isSubmitting &&\n                    sendCustomerEmailState.error['error']['recipient'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('recipient');\n                }}\n              />\n            </div>\n            <div\n              style={{\n                width: '49%',\n              }}\n            >\n              <Input\n                label='Subject'\n                value={values.subject}\n                name='subject'\n                isError={\n                  (touched.subject && errors.subject) ||\n                  (!isSubmitting &&\n                    sendCustomerEmailState.error['error']['subject'])\n                }\n                errorString={\n                  (touched.subject && errors.subject) ||\n                  (!isSubmitting &&\n                    sendCustomerEmailState.error['error']['subject'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('subject');\n                }}\n              />\n            </div>\n          </div>\n\n          <h3 className='inputFieldLabel'>Body</h3>\n\n          <CKEditor\n            editor={ClassicEditor}\n            data={html}\n            onInit={(editor) => {\n              // You can store the \"editor\" and use when it is needed.\n              console.log('Editor is ready to use!', editor);\n            }}\n            onChange={(event, editor) => {\n              const data = editor.getData();\n              sethtml(data);\n            }}\n            onBlur={(event, editor) => {\n              console.log('Blur.', editor);\n            }}\n            onFocus={(event, editor) => {\n              console.log('Focus.', editor);\n            }}\n          />\n\n          <div\n            style={{\n              marginTop: '20px',\n            }}\n          ></div>\n          <Button\n            onClick={(e: any) => handleSubmit(e)}\n            loading={sendCustomerEmailState.isLoading}\n            className='btnPrimaryClassNameoutline'\n          >\n            Send\n          </Button>\n\n          <div\n            style={{\n              marginTop: '10px',\n            }}\n          ></div>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default ComposeCustomEmail;\n","import React, { useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\nimport { Spin } from 'antd';\nimport moment from 'moment';\nimport ReactHtmlParser from 'react-html-parser';\n\nimport { LeftOutlined } from '@ant-design/icons';\n\ninterface Props {\n  id?: any;\n  setSelectedEmailId?: any;\n}\n\nconst InboxEmailDetails = ({ id, setSelectedEmailId }: Props) => {\n  const [getEmailDetailState, handleGetEmailListFetch] = useHandleFetch(\n    {},\n    'getEmailDetails'\n  );\n\n  useEffect(() => {\n    const getEmailConfiguration = async () => {\n      const res = await handleGetEmailListFetch({\n        urlOptions: {\n          placeHolders: {\n            id: id,\n          },\n        },\n      });\n      // @ts-ignore\n    };\n    getEmailConfiguration();\n  }, []);\n\n  console.log('getEmailDetailState', getEmailDetailState);\n\n  return (\n    <>\n      {getEmailDetailState.isLoading && (\n        <>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              margin: '150px 0',\n            }}\n          >\n            <Spin size='large' />\n          </div>\n        </>\n      )}\n\n      {getEmailDetailState.done &&\n        getEmailDetailState.data &&\n        Object.keys(getEmailDetailState.data).length > 0 && (\n          <>\n            <div className='inboxEmailDetails'>\n              <div\n                onClick={() => setSelectedEmailId('')}\n                className='inboxEmailDetails__backBtn'\n              >\n                <LeftOutlined />\n              </div>\n              <div className='inboxEmailDetails__header'>\n                <span>{getEmailDetailState['data']['subject']}</span>\n                <h3>{getEmailDetailState['data']['recipient']}</h3>\n                <h4>\n                  {getEmailDetailState['data']['time'] &&\n                    moment(getEmailDetailState['data']['time']).format(\n                      'MMMM Do YYYY, h:mm:ss a'\n                    )}\n                </h4>\n              </div>\n              <div className='inboxEmailDetails__body'>\n                {getEmailDetailState['data']['html'] &&\n                  ReactHtmlParser(getEmailDetailState['data']['html'])}\n              </div>\n            </div>\n          </>\n        )}\n    </>\n  );\n};\n\nexport default InboxEmailDetails;\n","import React, { useEffect, useState } from 'react';\n\n// import hoooks\nimport { useHandleFetch } from '../../hooks';\nimport InboxEmailDetails from './InboxEmailDetails';\nimport { Spin, Empty } from 'antd';\nimport moment from 'moment';\n\nimport ReactHtmlParser from 'react-html-parser';\n\ninterface Props {\n  emailList?: any;\n  setEmailList?: any;\n  getEmailListState?: any;\n}\n\nconst Inbox = ({ emailList, setEmailList, getEmailListState }: Props) => {\n  const [selectedEmailId, setSelectedEmailId] = useState('');\n\n  return (\n    <>\n      {getEmailListState.isLoading && (\n        <>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              margin: '150px 0',\n            }}\n          >\n            <Spin size='large' />\n          </div>\n        </>\n      )}\n\n      {getEmailListState.done && emailList && !(emailList.length > 0) && (\n        <>\n          <div\n            style={{\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              margin: '50px 0',\n            }}\n          >\n            <Empty\n              description='No Email found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          </div>\n        </>\n      )}\n\n      {getEmailListState.done && emailList && emailList.length > 0 && (\n        <>\n          <div className='sentEmailListContainer'>\n            {!selectedEmailId && (\n              <>\n                {getEmailListState.done && emailList && emailList.length > 0 && (\n                  <>\n                    {emailList.map((item) => {\n                      return (\n                        <div\n                          onClick={() => setSelectedEmailId(item.id)}\n                          className='sentEmailListContainer__item'\n                        >\n                          <div className='sentEmailListContainer__item-info'>\n                            <h3>To: {` ${item.recipient}`}</h3>\n                            <span>{`${item.subject}`}</span>\n                          </div>\n\n                          <h4>\n                            {ReactHtmlParser(\n                              item.html.substring(0, 125) + '.....'\n                            )}\n                          </h4>\n                          <h3\n                            style={{\n                              fontSize: '12px',\n                            }}\n                          >\n                            {item.time &&\n                              moment(item.time).format('MMMM Do, h a')}\n                          </h3>\n                        </div>\n                      );\n                    })}\n                  </>\n                )}\n              </>\n            )}\n\n            {selectedEmailId && (\n              <>\n                <InboxEmailDetails\n                  setSelectedEmailId={setSelectedEmailId}\n                  id={selectedEmailId}\n                />\n              </>\n            )}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Inbox;\n","import React, { useState, useEffect } from 'react';\n\n// import lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tabs,\n  Input,\n} from 'antd';\n\n// import components\nimport ConfigureSTMP from './ConfigureSTMP';\nimport ConfigureAutoEmail from './ConfigureAutoEmail';\nimport ComposeCustomEmail from './ComposeCustomEmail';\nimport Inbox from './Inbox';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  FileImageOutlined,\n  FileImageTwoTone,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  InboxOutlined,\n  SettingOutlined,\n} from '@ant-design/icons';\n\nconst { TabPane } = Tabs;\nconst { Search } = Input;\n\ninterface Props {}\n\nconst Sms = (props: Props) => {\n  const [getEmailListState, handleGetEmailListFetch] = useHandleFetch(\n    {},\n    'getSetEmailList'\n  );\n  const [emailList, setEmailList] = useState([]);\n\n  useEffect(() => {\n    const getEmailConfiguration = async () => {\n      const res = await handleGetEmailListFetch({\n        urlOptions: {\n          params: {\n            limitCount: 50000,\n            sortItemValue: 'time',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n      // @ts-ignore\n      setEmailList(res);\n    };\n    getEmailConfiguration();\n  }, []);\n\n  const handleSearch = (value) => {\n    if (getEmailListState.data.length > 0) {\n      const newProductList = getEmailListState.data.filter((item) => {\n        return (\n          (item.recipient &&\n            item.recipient.toLowerCase().includes(value.toLowerCase())) ||\n          (item.subject &&\n            item.subject.toLowerCase().includes(value.toLowerCase())) ||\n          (item.html && item.html.toLowerCase().includes(value.toLowerCase()))\n        );\n      });\n      setEmailList(newProductList);\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer__header'>\n        <div className='categoryListContainer__header-searchBar'>\n          <h2 className='categoryListContainer__header-title'>Email</h2>\n\n          <Search\n            enterButton={false}\n            className='searchbarClassName'\n            placeholder='search email..'\n            onChange={(e) => handleSearch(e.target.value)}\n            // style={{ width: 300 }}\n          />\n        </div>\n      </div>\n      <div className='siteInfoContainer'>\n        <Tabs defaultActiveKey='1'>\n          <TabPane\n            tab={\n              <span>\n                <InboxOutlined />\n                Outbox\n              </span>\n            }\n            key='1'\n          >\n            <Inbox\n              getEmailListState={getEmailListState}\n              setEmailList={setEmailList}\n              emailList={emailList}\n            />\n          </TabPane>\n\n          <TabPane\n            tab={\n              <span>\n                <PlusCircleOutlined />\n                Compose Email\n              </span>\n            }\n            key='2'\n          >\n            <ComposeCustomEmail />\n          </TabPane>\n\n          <TabPane\n            tab={\n              <span>\n                <SettingOutlined />\n                Configure STMP\n              </span>\n            }\n            key='3'\n          >\n            <ConfigureSTMP />\n          </TabPane>\n\n          <TabPane\n            tab={\n              <span>\n                <SettingOutlined />\n                Configure Auto Email\n              </span>\n            }\n            key='4'\n          >\n            <ConfigureAutoEmail />\n          </TabPane>\n        </Tabs>\n      </div>\n    </>\n  );\n};\n\nexport default Sms;\n","import React, { useEffect } from 'react';\n\n// import components\nimport Empty from '../../components/Empty';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport { useHistory } from 'react-router';\nimport {\n  LogoutOutlined,\n  BellOutlined,\n  OrderedListOutlined,\n  TwitterSquareFilled,\n  ShoppingCartOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\n\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nimport { Layout, Badge, Dropdown, Menu, Spin } from 'antd';\n\nconst { Header } = Layout;\n\ninterface Props {}\n\nconst NotificationList = (props: Props) => {\n  const history = useHistory();\n\n  const [getAllNotificationState, handleGetAllNOticationFetch] = useHandleFetch(\n    {},\n    'getAllNotificationPage'\n  );\n\n  const handleMenuClick = (e) => {\n    if (e.key === '3') {\n    }\n  };\n\n  useEffect(() => {\n    const getAllNotification = async () => {\n      await handleGetAllNOticationFetch({\n        urlOptions: {\n          params: {\n            limitNumber: 5000,\n          },\n        },\n      });\n    };\n\n    getAllNotification();\n  }, []);\n\n  console.log('getAllNotificationState', getAllNotificationState);\n\n  const typeIcon = {\n    customer: <UserOutlined />,\n    order: <ShoppingCartOutlined />,\n  };\n\n  const menu = () => {\n    if (getAllNotificationState.isLoading)\n      return (\n        <div\n          style={{\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: '100px',\n          }}\n        >\n          <Spin />\n        </div>\n      );\n\n    if (\n      getAllNotificationState.done &&\n      getAllNotificationState.data &&\n      !getAllNotificationState.data[0]\n    ) {\n      return (\n        <div\n          style={{\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: '100px',\n          }}\n        >\n          <Empty title='No Notification found' />\n        </div>\n      );\n    }\n\n    return (\n      <div className='notificationListItemContainer'>\n        {getAllNotificationState.done &&\n          getAllNotificationState.data[0] &&\n          getAllNotificationState.data.map((item, index) => {\n            return (\n              <div\n                onClick={() => history.push(`/admin/${item.type}/${item.eventId}`)}\n                className='notificationListItemContainer__item'\n              >\n                <span className='notificationListItemContainer__item-icon'>\n                  {typeIcon[item['type']]}\n                </span>\n                <div className='notificationListItemContainer__item-info'>\n                  <h3>{item.heading}</h3>\n                  <h4>{item.text}</h4>\n                  <h2>\n                    {item.added &&\n                      moment(item.added).format('MMMM Do YYYY, h:mm a')}\n                  </h2>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className='notificationList'>\n        <h3 className='notificationList__heading'>Notification</h3>\n        {menu()}\n      </div>\n    </>\n  );\n};\n\nexport default NotificationList;\n","import React, { useState } from 'react';\nimport { Checkbox, Row, Col } from 'antd';\ninterface Props {\n  checkedList?: any;\n  setCheckedList?: any;\n  plainOptions?: any;\n  defaultValue?: any;\n  checkAll?: any;\n  setCheckAll?: any;\n}\n\nconst AccessCheckbox = ({\n  checkedList,\n  setCheckedList,\n  plainOptions,\n  defaultValue = [],\n  checkAll,\n  setCheckAll,\n}: Props) => {\n  const [interminate, setInterminate] = useState(true);\n\n  const onChange = (checkedList) => {\n    setCheckedList(checkedList);\n    setInterminate(\n      !!checkedList.length && checkedList.length < plainOptions.length\n    );\n    setCheckAll(checkedList.length === plainOptions.length);\n  };\n\n  const onCheckAllChange = (e) => {\n    setCheckedList(e.target.checked ? plainOptions : []);\n    setInterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  console.log('defaultValue', defaultValue);\n\n  return (\n    <>\n      <div\n        style={{\n          borderBottom: '1px solid #eee',\n          marginBottom: '10px',\n        }}\n        className='site-checkbox-all-wrapper'\n      >\n        <Checkbox\n          style={{\n            marginBottom: '10px',\n          }}\n          // indeterminate={interminate}\n          onChange={onCheckAllChange}\n          checked={checkAll}\n        >\n          Super Admin\n        </Checkbox>\n      </div>\n      <Checkbox.Group\n        style={{ width: '100%' }}\n        value={checkedList}\n        defaultValue={defaultValue}\n        onChange={onChange}\n      >\n        <Row>\n          {plainOptions.map((accessItem) => {\n            return (\n              <Col\n                style={{\n                  marginBottom: '10px',\n                }}\n                span={8}\n              >\n                <Checkbox value={accessItem}>{accessItem}</Checkbox>\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nexport default AccessCheckbox;\n","import { combineReducers } from 'redux';\nimport * as types from './types';\nimport { createReducer } from '../../utils';\n\n/* State shape\n{\n    isAuthenticated: bool,\n    redirectAfterLogin: string\n}\n*/\n\nconst globalState = createReducer({})({\n  [types.SAVE_CREDENTIALS]: (state, action) => {\n    const credentials = action.payload;\n    return credentials;\n  },\n});\n\nexport default globalState; ","export const SAVE_CREDENTIALS = \"credentials/SAVE_CREDENTIALS\";\n","import * as types from \"./types\";\n\nexport const saveCredentials = (roles) => ({\n    type: types.SAVE_CREDENTIALS,\n    payload: roles\n});\n","import reducer from \"./reducers\";\n\nimport * as credentialsOperations from \"./operations\";\n\nexport {\n    credentialsOperations,\n};\n\nexport default reducer;\n","import React, { useState, useEffect } from 'react';\nimport { Modal, notification } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { useHandleFetch } from '../../hooks';\nimport {\n  CheckCircleOutlined,\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport AccessCheckbox from './AccessCheckbox';\n\n// import state\nimport { glboalOperations } from '../../state/ducks/globalState';\nimport { credentialsOperations } from '../../state/ducks/credentials';\nimport { connect } from 'react-redux';\nimport { isAccess } from '../../utils';\nimport { credentials } from '../../state/ducks';\n\nconst validationSchema = Yup.object().shape({\n  // \tname: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n  //     phone: Yup.string()\n  //     .required('Please tell us your mobile number.')\n  //     .max(13, 'Please enter a valid mobile number.'),\n  //    password: Yup.string()\n  //     .label('Password')\n  //     .required()\n  //     .min(6, 'Password must have at least 6 characters'),\n  //   passwordConfirmation: Yup.string()\n  //     .label('Confirm password')\n  //     .required()\n  //     .min(6, 'Confirm password must have at least 6 characters')\n  //     .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Admin Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst plainOptions = [\n  'getCatalogue',\n  'postCatalogue',\n  'getDelivery',\n  'postDelivery',\n  'getOrder',\n  'postOrder',\n  'getBlog',\n  'postBlog',\n  'getPage',\n  'postPage',\n  'analytics',\n  'accounts',\n  'getDealer',\n  'postDealer',\n];\n\ninterface Props {\n  category: any;\n  setvisible: any;\n  visible: any;\n  tagList: any;\n  setTagList: any;\n  saveRoles?: any;\n  roles;\n  credentials;\n  saveCredentials;\n}\n\nconst QuickEdit = ({\n  category,\n  setvisible,\n  visible,\n  tagList,\n  setTagList,\n  saveRoles,\n  roles,\n  saveCredentials,\n}: Props) => {\n  const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch(\n    {},\n    'updateAdminRole'\n  );\n  const [checkAll, setCheckAll] = useState(false);\n\n  const [accesscheckedList, setAccessCheckedList] = useState([]);\n\n  useEffect(() => {\n    if (category.role && category.role.length > 0) {\n      if (category.role.includes('superAdmin')) {\n        setCheckAll(true);\n        setAccessCheckedList([...plainOptions]);\n      } else {\n        setAccessCheckedList([...category.role]);\n      }\n    }\n  }, [category]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    console.log('adminValues', values);\n\n    let roles = [...accesscheckedList];\n    if (checkAll) {\n      roles = ['superAdmin'];\n    }\n\n    const updateTagRes = await handleUpdateCategoryFetch({\n      urlOptions: {\n        placeHolders: {\n          id: category._id,\n        },\n      },\n      body: {\n        name: values.name,\n        access: roles,\n        phone: values.phone,\n        password: values.password,\n        password2: values.passwordConfirmation,\n      },\n    });\n\n    // @ts-ignore\n    if (updateTagRes && updateTagRes.status === 'ok') {\n      openSuccessNotification();\n      setvisible(false);\n\n      const positionInTag = () => {\n        return tagList.map((item) => item._id).indexOf(category._id);\n      };\n\n      console.log('updateTagRes', updateTagRes);\n\n      // if(updateTagRes['role']){\n      // \tif(updateTagRes['_id'] === credentials['_id']){\n      // \t\tsaveRoles(updateTagRes['role'])\n      // \t}\n      // }\n\n      const index = positionInTag();\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, tagList[index], {\n        // @ts-ignore\n        ...updateTagRes,\n        _id: category._id,\n      });\n      const updateTagList = [\n        ...tagList.slice(0, index),\n        updatedItem,\n        ...tagList.slice(index + 1),\n      ];\n      console.log('updateTagList', updateTagList);\n      setTagList(updateTagList);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  useEffect(() => {\n    if (!updateTagState['isLoading']) {\n      const error = updateTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !updateTagState['isLoading'] &&\n      Object.keys(updateTagState.data).length > 0\n    ) {\n      if (updateTagState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [updateTagState]);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...category }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          {console.log('errors', errors)}\n          <Modal\n            title='Edit Admin'\n            visible={visible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n            }}\n          >\n            <Input\n              label='Title'\n              value={values.name}\n              name='name'\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Select Admin Access</h3>\n\n            <AccessCheckbox\n              defaultValue={category.role}\n              checkAll={checkAll}\n              setCheckAll={setCheckAll}\n              plainOptions={plainOptions}\n              checkedList={accesscheckedList}\n              setCheckedList={setAccessCheckedList}\n            />\n\n            <div\n              style={{\n                marginTop: '20px',\n                marginBottom: '20px',\n              }}\n            >\n              <div\n                style={{\n                  borderBottom: '1px solid #eee',\n                  marginBottom: '15px',\n                  marginTop: '15px',\n                }}\n              >\n                <h3 className='inputFieldLabel'>\n                  Phone and password is required to update admin *\n                </h3>\n              </div>\n\n              <Input\n                label='Phone'\n                value={values.phone}\n                name='phone'\n                isError={\n                  (touched.phone && errors.phone) ||\n                  (!isSubmitting && updateTagState.error['error']['phone'])\n                }\n                errorString={\n                  (touched.phone && errors.phone) ||\n                  (!isSubmitting && updateTagState.error['error']['phone'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('phone');\n                }}\n              />\n\n              <Input\n                label='Password'\n                value={values.password}\n                name='password'\n                type='password'\n                isError={\n                  (touched.password && errors.password) ||\n                  (!isSubmitting && updateTagState.error['error']['password'])\n                }\n                errorString={\n                  (touched.password && errors.password) ||\n                  (!isSubmitting && updateTagState.error['error']['password'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('password');\n                }}\n              />\n\n              <Input\n                label='Confirm Password'\n                value={values.passwordConfirmation}\n                name='passwordConfirmation'\n                type='password'\n                isError={\n                  (touched.passwordConfirmation &&\n                    errors.passwordConfirmation) ||\n                  (!isSubmitting && updateTagState.error['error']['password2'])\n                }\n                errorString={\n                  (touched.passwordConfirmation &&\n                    errors.passwordConfirmation) ||\n                  (!isSubmitting && updateTagState.error['error']['password2'])\n                }\n                onChange={(e: any) => {\n                  handleChange(e);\n                  setFieldTouched('passwordConfirmation');\n                }}\n              />\n            </div>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nconst mapDispathToProps = {\n  saveRoles: glboalOperations.saveRoles,\n  saveCredentials: credentialsOperations.saveCredentials,\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n  credentials: state.credentials,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, mapDispathToProps)(QuickEdit);\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport AccessCheckbox from './AccessCheckbox';\n\nconst validationSchema = Yup.object().shape({\n  //     name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n  //     phone: Yup.string()\n  //     .required('Please tell us your mobile number.')\n  //     .max(13, 'Please enter a valid mobile number.'),\n  //    password: Yup.string()\n  //     .label('Password')\n  //     .required(),\n  //   passwordConfirmation: Yup.string()\n  //     .label('Confirm password')\n  //     .required()\n  //     .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Admin Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  phone: '',\n  email: '',\n  password: '',\n  passwordConfirmation: '',\n  access: [],\n};\n\nconst plainOptions = [\n  'getCatalogue',\n  'postCatalogue',\n  'getDelivery',\n  'postDelivery',\n  'getOrder',\n  'postOrder',\n  'getBlog',\n  'postBlog',\n  'getPage',\n  'postPage',\n  'analytics',\n  'accounts',\n  'getDealer',\n  'postDealer',\n];\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagList?: any;\n  setTagList?: any;\n}\n\nconst AddNewAdminRoles = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  tagList,\n  setTagList,\n}: Props) => {\n  const [addTagState, handleAddTagFetch] = useHandleFetch(\n    {},\n    'adminRoleRegister'\n  );\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [accesscheckedList, setAccessCheckedList] = useState([]);\n  const [checkAll, setCheckAll] = useState(false);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    let roles = [...accesscheckedList];\n    if (checkAll) {\n      roles = ['superAdmin'];\n    }\n    const addTagRes = await handleAddTagFetch({\n      body: {\n        name: values.name.trim(),\n        email: values.email.trim(),\n        phone: values.phone,\n        password: values.password,\n        password2: values.passwordConfirmation,\n        access: roles,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      // openSuccessNotification();\n\n      setTagList([\n        ...tagList,\n        {\n          // @ts-ignore\n          ...addTagRes,\n          id: addTagRes['id'] || '',\n          key: addTagRes['id'] || '',\n          name: addTagRes['name'] || '',\n        },\n      ]);\n      actions.resetForm();\n      setAddNewCategoryVisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addTagState['isLoading']) {\n      const error = addTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\n      if (addTagState['data']['status'] === 'ok') {\n        openSuccessNotification('Admin Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addTagState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !values.name ||\n      !values.phone ||\n      !values.password ||\n      !values.passwordConfirmation ||\n      !isValid\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Register New Admin'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <Input\n              label='Name'\n              value={values.name}\n              name='name'\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='Phone'\n              value={values.phone}\n              name='phone'\n              isError={\n                (touched.phone && errors.phone) ||\n                (!isSubmitting && addTagState.error['error']['phone'])\n              }\n              errorString={\n                (touched.phone && errors.phone) ||\n                (!isSubmitting && addTagState.error['error']['phone'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('phone');\n              }}\n            />\n\n            <Input\n              label='Email'\n              value={values.email}\n              name='email'\n              isError={\n                (touched.email && errors.email) ||\n                (!isSubmitting && addTagState.error['error']['email'])\n              }\n              errorString={\n                (touched.email && errors.email) ||\n                (!isSubmitting && addTagState.error['error']['email'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('email');\n              }}\n            />\n\n            <Input\n              label='Password'\n              value={values.password}\n              name='password'\n              type='password'\n              isError={\n                (touched.password && errors.password) ||\n                (!isSubmitting && addTagState.error['error']['password'])\n              }\n              errorString={\n                (touched.password && errors.password) ||\n                (!isSubmitting && addTagState.error['error']['password'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('password');\n              }}\n            />\n\n            <Input\n              label='Confirm Password'\n              value={values.passwordConfirmation}\n              name='passwordConfirmation'\n              type='password'\n              isError={\n                (touched.passwordConfirmation && errors.passwordConfirmation) ||\n                (!isSubmitting &&\n                  addTagState.error['error']['passwordConfirmation'])\n              }\n              errorString={\n                (touched.passwordConfirmation && errors.passwordConfirmation) ||\n                (!isSubmitting && addTagState.error['error']['password2'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('passwordConfirmation');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Select Admin Access</h3>\n\n            <AccessCheckbox\n              checkAll={checkAll}\n              setCheckAll={setCheckAll}\n              plainOptions={plainOptions}\n              checkedList={accesscheckedList}\n              setCheckedList={setAccessCheckedList}\n            />\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewAdminRoles;\n","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport {\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Tag,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport QuickEdit from './QuickEdit';\nimport AddNewAdmin from './AddNewAdmin';\n\nimport { connect } from 'react-redux';\nimport { isAccess } from '../../utils';\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Admin Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst MyTable = ({ data, setTagList, roles }) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\n    {},\n    'deleteAdmin'\n  );\n\n  useEffect(() => {\n    if (!deleteTagState['isLoading']) {\n      const error = deleteTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !deleteTagState['isLoading'] &&\n      Object.keys(deleteTagState.data).length > 0\n    ) {\n      if (deleteTagState['data']['status'] === 'ok') {\n        openSuccessNotification('Admin Deleted!');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [deleteTagState]);\n\n  const history = useHistory();\n\n  const handleDeleteTag = async (id) => {\n    const deleteTagRes = await handleDeleteTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\n      // openSuccessNotification('Deleted Admin');\n      const newtagList = data.filter((item) => item._id !== id);\n      setTagList(newtagList);\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  // history.push(`/admin/tag/${record.id}`)\n                  // setBrandDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  //   cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Email'\n          dataIndex='email'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Phone'\n          dataIndex='phone'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          width={250}\n          title='Roles'\n          dataIndex='role'\n          key='role'\n          className='classnameofthecolumn'\n          render={(tags) => (\n            <>\n              {tags &&\n                tags.length > 0 &&\n                tags.map((tag) => (\n                  <Tag\n                    style={{\n                      borderRadius: '5px',\n                      marginBottom: '5px',\n                    }}\n                    color='blue'\n                    key={tag}\n                  >\n                    {tag}\n                  </Tag>\n                ))}\n\n              {/* {tags && tags.length === 3 && '.......'} */}\n            </>\n          )}\n        />\n\n        {isAccess('superAdmin', roles) && (\n          <Column\n            className='classnameofthecolumn'\n            title=''\n            key='action'\n            align='right'\n            render={(text, record: any) => (\n              <Space size='middle'>\n                <a href='##'>\n                  <Tooltip placement='top' title='Edit Admin'>\n                    <span\n                      className='iconSize'\n                      onClick={() => {\n                        setvisible(true);\n                        setactiveCategoryForEdit(record);\n                      }}\n                    >\n                      <EditOutlined />\n                    </span>\n                  </Tooltip>\n                </a>\n\n                <Popconfirm\n                  onConfirm={() => handleDeleteTag(record._id)}\n                  title='Are you sure？'\n                  okText='Yes'\n                  cancelText='No'\n                >\n                  <span className='iconSize iconSize-danger'>\n                    <DeleteOutlined />\n                  </span>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        )}\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          tagList={data}\n          setTagList={setTagList}\n          setvisible={setvisible}\n          visible={visible}\n          category={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  roles?: any;\n}\n\nconst TagList = ({ roles }: Props) => {\n  const [tagList, setTagList] = useState([]);\n\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'adminList');\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tags = await handleTagListFetch({});\n      // @ts-ignore\n      setTagList(tags);\n    };\n    setTags();\n  }, []);\n\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: values.description,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n\n      setTagList([\n        ...tagList,\n        {\n          id: addTagRes['id'] || '',\n          key: addTagRes['id'] || '',\n          name: addTagRes['name'] || '',\n          description: addTagRes['description'] || '',\n        },\n      ]);\n      actions.resetForm();\n    }\n    actions.setSubmitting(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleSearch = (value) => {\n    if (tagState.data.length > 0) {\n      const newTagList = tagState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setTagList(newTagList);\n    }\n  };\n\n  console.log('adminListState', tagState);\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar-tag'>\n            <h2 className='categoryListContainer__header-title'>Admins</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search admins..'\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n\n          {isAccess('superAdmin', roles) && (\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          )}\n        </div>\n        <div className='categoryListContainer__categoryList'>\n          {tagState.done && tagList.length > 0 && (\n            <MyTable roles={roles} setTagList={setTagList} data={tagList} />\n          )}\n          {tagState.isLoading && <DataTableSkeleton />}\n\n          {tagState.done && !(tagList.length > 0) && (\n            <div\n              style={{\n                marginTop: '150px',\n              }}\n            >\n              <Empty\n                description='No Admin found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewAdmin\n        tagList={tagList}\n        setTagList={setTagList}\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(TagList);\n","import React, { useState } from 'react';\nimport { Modal, notification } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { useHandleFetch } from '../../hooks';\nimport {\n  CheckCircleOutlined,\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n  description: Yup.string()\n    .label('Description')\n    .required('Description is required'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Admin Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  tagEditVisible?: any;\n  setTagEditVisible?: any;\n  tagDetailData?: any;\n  setTagDetailData?: any;\n}\n\nconst QuickEdit = ({\n  tagEditVisible,\n  setTagEditVisible,\n  tagDetailData,\n  setTagDetailData,\n}: Props) => {\n  const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch(\n    {},\n    'updateTag'\n  );\n  const [checkAll, setCheckAll] = useState(false);\n  const handleSubmit = async (values: any, actions: any) => {\n    const updateTagRes = await handleUpdateCategoryFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name,\n        description: values.description,\n      },\n    });\n\n    // @ts-ignore\n    if (updateTagRes && updateTagRes.status === 'ok') {\n      setTagDetailData({\n        id: values.id,\n        key: values.id,\n        name: values.name,\n        description: values.description,\n      });\n      openSuccessNotification();\n\n      // const positionInTag = () => {\n      //     return tagList.map(item => item.id).indexOf(category.id);\n      // }\n\n      // const index = positionInTag();\n\n      // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\n      // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\n      // setTagList(updateTagList);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n    setTagEditVisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setTagEditVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !values.description || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...tagDetailData }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            title='Admin Edit'\n            visible={tagEditVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <Input\n              label='Title'\n              value={values.name}\n              name='name'\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && updateTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n            <TextArea\n              label='Description'\n              value={values.description}\n              name='description'\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting && updateTagState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting && updateTagState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default QuickEdit;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import lib\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\n\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport AdminEdit from \"./AdminEdit\";\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\ninterface Props {\n    productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'adminDetail');\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagProducts');\n    const [tagEditVisible, setTagEditVisible] = useState(false);\n    const [tagDetailData,setTagDetailData] = useState({}); \n\n\n    const params = useParams();\n    const history = useHistory();\n    const tagId = params['id'];\n\n    useEffect(() => {\n\n        const getBrandDetail = async () => {\n            const tagDetailRes =  await handleTagDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: tagId\n                    }\n                }\n            }); \n\n            // @ts-ignore\n            if(tagDetailRes){\n                console.log('tagDetailRes',tagDetailRes);\n                // @ts-ignore\n                setTagDetailData(tagDetailRes);\n            }\n        };\n\n        getBrandDetail();\n\n    }, [tagId]);\n\n    useEffect(() => {\n        const getTagProducts = async () => {\n            await handleTagProductsFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: tagId\n                    }\n                }\n            })\n        };\n\n        getTagProducts();\n\n    }, [tagId]);\n\n\n\n\n    console.log('tagProductsState', tagProductsState);\n\n    console.log('brandParams', params);\n\n\n    return (\n        <div className='brandDetailContainer'>\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Admin Detail\n                </h3>\n\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\n                    <>\n                        <AdminEdit\n                            tagEditVisible={tagEditVisible}\n                            setTagEditVisible={setTagEditVisible}\n                            tagDetailData={tagDetailData}\n                            setTagDetailData={setTagDetailData}\n                        />\n                        <Button\n                            onClick={() => setTagEditVisible(true)}\n                            type='link'\n                            icon={<EditOutlined />}\n                        >\n                            Edit\n                      </Button>\n                    </>\n                )}\n            </div>\n            <Skeleton\n                paragraph={{ rows: 2 }}\n                loading={tagDetailState.isLoading}>\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\n                    <Empty description='No Admin found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                )}\n\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\n                    <div className='brandDetailContainer__header'>\n\n                        <div className='brandDetailContainer__header-info'>\n                            <h2>\n                                {tagDetailData['name']}\n                            </h2>\n                            <h3>\n                                {tagDetailData['description']}\n                            </h3>\n                            {tagDetailData['url'] && (\n                                <h3>\n                                    URL:\n                                    <span>\n                                        {tagDetailData['url']}\n                                    </span>\n\n                                </h3>\n                            )}\n                        </div>\n                    </div>\n                )}\n\n            </Skeleton>   \n        </div>\n    )\n}\n\nexport default NewBrandDetail\n","import React, { useEffect, useState } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import components\nimport Empty from '../../components/Empty';\n\n// import libraries\nimport { Button, Tag, Input, Spin } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst { CheckableTag } = Tag;\nconst { Search } = Input;\n\ninterface Props {\n  setTagIds?: any;\n  selectedTags?: any;\n  setSelectedTags?: any;\n}\n\nconst Tags = ({ setTagIds, setSelectedTags, selectedTags }: Props) => {\n  const [options, setoptions] = useState([]);\n  const [selectedOpions, setselectedOptions] = useState([]);\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'postTagList');\n  const [searchValue, setsearchValue] = useState('');\n\n  const handleChange = (tag, checked) => {\n    const nextSelectedTags = checked\n      ? [...selectedTags, tag]\n      : selectedTags.filter((t) => t !== tag);\n    setSelectedTags(nextSelectedTags);\n\n    if (\n      tagState.done &&\n      tagState.data.length > 0 &&\n      nextSelectedTags.length > 0\n    ) {\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\n        const selectedcategory = tagState.data.find(\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\n        );\n        if (selectedcategory) {\n          return selectedcategory.id;\n        }\n      });\n      setTagIds(selectedCategoryIds);\n    }\n  };\n\n  useEffect(() => {\n    if (tagState.done && tagState.data.length > 0 && selectedTags.length > 0) {\n      const selectedCategoryIds = selectedTags.map((item) => {\n        const selectedcategory = tagState.data.find((cat) => cat.id === item);\n        if (selectedcategory) {\n          return selectedcategory.name;\n        }\n      });\n      setSelectedTags(selectedCategoryIds);\n    }\n  }, [tagState]);\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tagListRes = await handleTagListFetch({\n        urlOptions: {\n          params: {\n            isSubCategory: false,\n          },\n        },\n      });\n\n      // @ts-ignoref\n      if (tagListRes && tagListRes.length > 0) {\n        // @ts-ignore\n        const tagOptions = tagListRes.map((tag) => {\n          return tag.name;\n        });\n        setoptions(tagOptions);\n      }\n    };\n\n    setTags();\n  }, []);\n\n  // const handleChange = (selectItems) => {\n  //   setselectedOptions(selectItems)\n\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\n  //     const selectedCategoryIds = selectItems.map((item) => {\n  //       const selectedcategory = tagState.data.find(\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\n  //       );\n  //       if (selectedcategory) {\n  //         return selectedcategory.id;\n  //       }\n  //     });\n  //     setTagIds(selectedCategoryIds);\n  //   }\n\n  // }\n\n  const onSearchChange = (e) => {\n    setsearchValue(e.target.value);\n\n    if (e.target.value === '') {\n      if (tagState.data && tagState.data.length > 0) {\n        // @ts-ignore\n        const categoryNames = tagState.data.map((cat) => cat.name);\n        setoptions(categoryNames);\n      }\n    } else {\n      const newOptions =\n        options.length > 0\n          ? options.filter((option) => {\n              return option.toLowerCase().includes(searchValue.toLowerCase());\n            })\n          : [];\n\n      setoptions(newOptions);\n    }\n  };\n\n  console.log('selectedTags', selectedTags);\n\n  return (\n    <>\n      {tagState.isLoading && (\n        <div\n          style={{\n            padding: '15px 0',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Spin />\n        </div>\n      )}\n\n      {tagState.done && (\n        <div className='addProduct__categoryBoxContainer-searchBox'>\n          <Search\n            width={'90%'}\n            style={{\n              height: '30px',\n              borderRadius: '3px !important',\n              borderColor: '#eee !important',\n            }}\n            size='middle'\n            placeholder='top, hot'\n            onSearch={(value) => console.log(value)}\n            onChange={onSearchChange}\n          />\n        </div>\n      )}\n\n      {tagState.done && !(options.length > 0) && (\n        <div\n          style={{\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Empty title='No tags found' height={100} />\n        </div>\n      )}\n\n      {/* \n      {tagState.done && tagState.data.length > 0 && options.length > 0 && <Select\n        mode=\"multiple\"\n        placeholder=\"search tags\"\n        value={selectedOpions}\n        onChange={handleChange}\n        style={{ width: '100%' }}\n      >\n        {options.filter(o => !selectedOpions.includes(o)).map(item => (\n          <Select.Option key={item} value={item}>\n            {item}\n          </Select.Option>\n        ))}\n      </Select>} */}\n\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\n        <>\n          {options.map((tag) => (\n            <>\n              <CheckableTag\n                key={tag}\n                checked={selectedTags.indexOf(tag) > -1}\n                onChange={(checked) => handleChange(tag, checked)}\n              >\n                {tag}\n              </CheckableTag>\n            </>\n          ))}\n        </>\n      )}\n\n      {/* \n      <div style={{\n        marginTop: '15px'\n      }}>\n\n      </div>\n      <Button\n\n        // type=\"primary\"\n        className='btnSecondaryPlusOutline'\n        icon={<PlusOutlined />}\n      >\n        Add New\n      </Button> */}\n    </>\n  );\n};\n\nexport default Tags;\n","import React, { useState, useEffect } from 'react';\n\n// import components\nimport Empty from '../../components/Empty';\n\n// import hoooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Input, Tree, Button, Spin } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst { Search } = Input;\n\ninterface Props {\n  setcategoryIds?: any;\n  categoryOptions?: any;\n  setCategoryOptions?: any;\n}\n\nconst Categories = ({\n  setcategoryIds,\n  categoryOptions,\n  setCategoryOptions,\n}: Props) => {\n  const [options, setoptions] = useState([]);\n  const [searchValue, setsearchValue] = useState('');\n\n  const [categoryState, handleCategoryListFetch] = useHandleFetch(\n    {},\n    'postSelectCategoryList'\n  );\n\n  useEffect(() => {\n    const setCategories = async () => {\n      const categoryListRes = await handleCategoryListFetch({});\n\n      // @ts-ignore\n      if (categoryListRes && categoryListRes.length > 0) {\n        // @ts-ignore\n        setoptions(categoryListRes);\n      }\n    };\n\n    setCategories();\n  }, []);\n\n  const onSelect = (selectedKeys, info) => {\n    // console.log('selectedKeys', selectedKeys, info);\n  };\n\n  const onCheck = (checkedKeys, info) => {\n    const checkedIds = checkedKeys.checked || [];\n    setcategoryIds(checkedIds);\n    setCategoryOptions(checkedIds);\n  };\n\n  const onSearchChange = (e) => {\n    setsearchValue(e.target.value);\n\n    if (e.target.value === '') {\n      if (categoryState.data && categoryState.data.length > 0) {\n        // @ts-ignore\n        const categoryNames = categoryState.data.map((cat) => {\n          return {\n            ...cat,\n          };\n        });\n        setoptions(categoryNames);\n      }\n    } else {\n      const newOptions =\n        options.length > 0\n          ? options.filter((option) => {\n              return (\n                option &&\n                option.title.toLowerCase().includes(searchValue.toLowerCase())\n              );\n            })\n          : [];\n\n      setoptions(newOptions);\n    }\n  };\n\n  console.log('categoryState', categoryState);\n  console.log('optionsCat', options);\n\n  return (\n    <div className='addProduct__categoryBoxContainer'>\n      {categoryState.isLoading && (\n        <div\n          style={{\n            padding: '15px 0',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Spin />\n        </div>\n      )}\n\n      {categoryState.done && (\n        <div className='addProduct__categoryBoxContainer-searchBox'>\n          <Search\n            width={'100%'}\n            style={{\n              height: '30px',\n              borderRadius: '3px !important',\n              borderColor: '#eee !important',\n            }}\n            size='middle'\n            placeholder=''\n            onSearch={(value) => console.log(value)}\n            onChange={onSearchChange}\n          />\n        </div>\n      )}\n\n      {categoryState.done &&\n        categoryState.data.length > 0 &&\n        options.length > 0 && (\n          <>\n            <div\n              style={\n                {\n                  // marginLeft: \"-20px\",\n                }\n              }\n            >\n              {options.length > 0 && (\n                <Tree\n                  checkable\n                  checkedKeys={categoryOptions}\n                  onSelect={onSelect}\n                  onCheck={onCheck}\n                  treeData={options}\n                  defaultExpandAll={true}\n                  checkStrictly={true}\n                />\n              )}\n            </div>\n          </>\n        )}\n\n      {categoryState.done && !(options.length > 0) && (\n        <div\n          style={{\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Empty title='No category found' height={100} />\n        </div>\n      )}\n\n      {/* <div style={{\n\t\t\t\tmarginTop: '15px'\n\t\t\t}}>\n\n\t\t\t</div>\n\t\t\t<Button\n\n\t\t\t\t// type=\"primary\"\n\t\t\t\tclassName='btnSecondaryPlusOutline'\n\t\t\t\ticon={<PlusOutlined />}\n\t\t\t>\n\t\t\t\tAdd New\n      </Button> */}\n\n      {/* <CheckboxGroup options={options} value={checkedList} onChange={onChange} /> */}\n    </div>\n  );\n};\n\nexport default Categories;\n","import React, { useEffect, useState } from 'react';\nimport { useHandleFetch } from '../../hooks';\nimport { Select, Skeleton } from 'antd';\nimport Empty from \"../../components/Empty\";\n\n\ninterface Props {\n    setProductIds?: any;\n    productIds?: any;\n}\n\n\nconst Tags = ({\n    setProductIds,\n    productIds\n}: Props) => {\n    const [options, setoptions] = useState([]);\n    const [selectedOpions, setselectedOptions] = useState([]);\n    const [tagState, handleTagListFetch] = useHandleFetch({}, 'productList');\n\n    useEffect(() => {\n        const setTags = async () => {\n            const tagListRes = await handleTagListFetch({\n                urlOptions: {\n                    params: {\n                        isSubCategory: false\n                    }\n                }\n            });\n\n            // @ts-ignore\n            if (tagListRes && tagListRes.length > 0) {\n                // @ts-ignore\n                const tagOptions = tagListRes.map((tag) => {\n                    return tag.name\n                });\n                setoptions(tagOptions);\n            }\n\n        };\n\n        setTags();\n    }, []);\n\n\n\n    useEffect(() => {\n        if(productIds && productIds.length > 0){\n            console.log('shippingRunning')\n            const selecttedOptions = productIds.map(item => item.name); \n            setselectedOptions(selecttedOptions)\n        }\n    },[productIds]); \n\n    console.log('OrderProudctItemsProductIds',productIds); \n\n\n\n\n    const handleChange = (selectItems) => {\n        setselectedOptions(selectItems);\n\n        console.log('selectedProducts', selectItems);\n\n        if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\n            const selectedCategoryIds = selectItems.map((item) => {\n                const selectedcategory = tagState.data.find(\n                    (cat) => cat.name.toLowerCase() === item.toLowerCase()\n                );\n                if (selectedcategory) {\n                    return selectedcategory;\n                }\n            });\n            console.log('selectedCategoryIds', selectedCategoryIds);\n            setProductIds(selectedCategoryIds);\n        }\n        else {\n            setProductIds([])\n        }\n\n\n    }\n\n\n    // console.log('selectedOpions', selectedOpions);\n\n\n    return (\n        <>\n\n            <Skeleton loading={tagState.isLoading}>\n                {tagState.done && tagState.data.length > 0 && <Select\n                    mode=\"multiple\"\n                    placeholder=\"search products\"\n                    value={selectedOpions}\n                    onChange={handleChange}\n                    style={{ width: '100%' }}\n                >\n                    {options.filter(o => !selectedOpions.includes(o)).map(item => (\n                        <Select.Option key={item} value={item}>\n                            {item}\n                        </Select.Option>\n                    ))}\n                </Select>}\n                {tagState.done && tagState.data && !(tagState.data.length > 0) && (\n                    <div style={{\n                        marginLeft: '32px'\n                    }}>\n                        <Empty title='No Product Found' height={150} />\n                    </div>\n                )}\n\n            </Skeleton>\n\n\n        </>\n    )\n}\n\nexport default Tags\n","import React from 'react'\n\n\n// import components\nimport AddNewOrderProductItem from \"../order/AddNewOrderProductItem\";\nimport Empty from \"../../components/Empty\";\n\nimport {\n    ShopOutlined\n} from '@ant-design/icons';\n\n\ninterface Props {\n    productList?: any;\n    setProductList?: any;\n}\n\nconst AddNewOrderSummary = ({\n    setProductList,\n    productList\n}: Props) => {\n    return (\n        <div\n            style={{\n                // @ts-ignore\n                flexDirection: 'flex'\n            }}\n            className='addOrderContainer__container-orderSummary'>\n            <div className='addOrderContainer__container-productItemContainer'>\n                {productList && productList.length > 0 && productList.map(item => {\n                    return <AddNewOrderProductItem\n                        setProductList={setProductList}\n                        productList={productList}\n                        productId={item._id}\n                        quantity={item.quantity}\n                        item={item}\n                        variation={item.variation}\n                    />;\n                })}\n\n                {!(productList.length > 0) && (\n                    <div style={{\n                        marginLeft: '32px'\n                    }}>\n                        <Empty title='No Product Added' height={150} />\n                    </div>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default AddNewOrderSummary\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  message,\n  Tooltip,\n  Modal,\n  Tabs,\n  Empty,\n  Badge,\n  Spin,\n  Button,\n} from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport {\n  openSuccessNotification,\n  openErrorNotification,\n} from '../../components/Notification';\nimport MetaTags from '../category/MetaTags';\n\nimport Tags from './Tags';\nimport Brands from './Brands';\nimport Categories from './Categories';\nimport SelectProducts from './SelectProducts';\nimport SelectedProductItems from './SelectedProductItems';\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  url: '',\n  preparationTime: '',\n  servingSize: '',\n  cookingTime: '',\n  body: '',\n  bnName: '',\n  bnBody: '',\n  bnPreparationTime: '',\n  bnServingSize: '',\n  bnCookingTime: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  productList?: any;\n  setProductList?: any;\n  productDetailData?: any;\n}\n\nconst ModalComponentChild = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  productList: bundleList,\n  setProductList: setBundleList,\n  productDetailData,\n}) => {\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\n    {},\n    'updatePost'\n  );\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\n    {},\n    'postDetail'\n  );\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [categoryids, setcategoryIds] = useState([]);\n  const [tagIds, setTagIds] = useState([]);\n  const [brandId, setBrandId] = useState('');\n  const [pricing, setPricing] = useState([]);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [body, setBody] = useState('');\n  const [bnBody, setBnBody] = useState('');\n  const [productIds, setProductIds] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [metaTags, setMetaTags] = useState([]);\n  const [bnMetaTags, setBnMetaTags] = useState([]);\n\n  const [\n    attachImageToItemMultipleState,\n    handleAttachImageToItemMultipleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\n  const [\n    attachImageToItemSingleState,\n    handleAttachImageToItemSingleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\n  const [\n    detachImageFromItemMultipleState,\n    handleDetachImageFromItemMultipleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n  console.log('myPostState', productDetailState);\n  useEffect(() => {\n    const getProductDetail = async () => {\n      await handleProductDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: productDetailData.id,\n          },\n          params: {\n            imageValue: 1,\n            tagsOne: '1',\n            categoryOne: '1',\n          },\n        },\n      });\n    };\n\n    getProductDetail();\n  }, [productDetailData]);\n\n  useEffect(() => {\n    if (\n      productDetailState.data &&\n      Object.keys(productDetailState.data).length > 0\n    ) {\n      const images = productDetailState.data.image;\n      let mahImages = [];\n\n      if (images && images.length > 0) {\n        mahImages = images;\n      }\n\n      if (\n        productDetailState.data.cover &&\n        productDetailState.data.cover['id']\n      ) {\n        const ixists = images.find(\n          (item) => item.id === productDetailState.data.cover['id']\n        );\n        if (!ixists) {\n          mahImages = [productDetailState.data.cover, ...mahImages];\n        }\n\n        setCoverImageId(productDetailState.data.cover['id']);\n      }\n\n      // @ts-ignore\n      setmyImages(mahImages);\n    }\n  }, [productDetailState.data]);\n\n  useEffect(() => {\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  console.log('myLoadImages', myImages);\n\n  const handleDetachSingleImage = async (id) => {\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'post',\n          itemId: productDetailData.id,\n        },\n      },\n    });\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'post',\n          itemId: productDetailData.id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      // openSuccessNotification('Set as thumbnail!');\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  useEffect(() => {\n    if (\n      productDetailState.done &&\n      productDetailState.data &&\n      Object.keys(productDetailState.data).length > 0\n    ) {\n      console.log('5555', productDetailState);\n      const productDetailData = productDetailState.data;\n      if (productDetailData && productDetailData.brand) {\n        setBrandId(productDetailData.brand['id']);\n      } else {\n        setBrandId('');\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.tags &&\n        productDetailData.tags.length > 0\n      ) {\n        const tagNames = productDetailData.tags.map((item) => item.name);\n        const tagIds = productDetailData.tags.map((item) => item._id);\n        console.log('tags55----', tagNames, tagIds);\n        setSelectedTags(tagNames);\n        setTagIds(tagIds);\n      } else {\n        setTagIds([]);\n        setSelectedTags([]);\n      }\n      if (\n        productDetailData &&\n        productDetailData.category &&\n        productDetailData.category.length > 0\n      ) {\n        const categoryIds = productDetailData.category;\n        setCategoryOptions(categoryIds);\n      } else {\n        setCategoryOptions([]);\n      }\n\n      if (productDetailData && productDetailData.body) {\n        setBody(productDetailData.body);\n      } else {\n        setBody('');\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.bn &&\n        productDetailData.bn['body']\n      ) {\n        setBnBody(productDetailData.bn['body']);\n      } else {\n        setBnBody('');\n      }\n    }\n  }, [productDetailState]);\n\n  console.log('postSelectedTagsIds', selectedTags);\n  console.log('TagsIds', tagIds);\n  useEffect(() => {\n    if (\n      productDetailState.done &&\n      productDetailState['data'] &&\n      Object.keys(productDetailState['data']).length > 0 && [\n        'requiredProducts',\n      ] &&\n      productDetailState['data']['requiredProducts'].length > 0\n    ) {\n      const productIds = productDetailState['data']['requiredProducts'].map(\n        (item) => item\n      );\n      setProductIds(productIds);\n      const productList = productDetailState['data']['requiredProducts'].map(\n        (item) => {\n          return {\n            ...item,\n            _id: item._id,\n            variation: item.variation,\n            quantity: item.quantity,\n          };\n        }\n      );\n      setProductList(productList);\n    }\n  }, [productDetailState]);\n\n  console.log('couponDetialQuickEdit', productDetailState);\n\n  useEffect(() => {\n    if (productIds.length > 0) {\n      if (productIds.length > productList.length) {\n        const variation =\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setProductList([\n          ...productList,\n          {\n            ...productIds[productIds.length - 1],\n            _id: productIds[productIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (productIds.length < productList.length) {\n        console.log('productIds', productIds);\n        console.log('productList', productList);\n\n        const newProductList = productList.filter((item) => {\n          let isTrue = false;\n          productIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setProductList(newProductList);\n      }\n    } else {\n      setProductList([]);\n    }\n    // console.log('productIds', productIds)\n  }, [productIds]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds =\n      myImages && myImages[0]\n        ? // @ts-ignore\n          myImages.map((image) => {\n            return image.id;\n          })\n        : [];\n\n    const products =\n      productList.length > 0\n        ? productList.map((product) => {\n            return {\n              _id: product._id,\n              variation: product.variation,\n              quantity: product.quantity,\n            };\n          })\n        : [];\n\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\n      const aboutToUpdatedImageIds = [];\n\n      if (imagesIds && imagesIds.length > 0) {\n        imagesIds.forEach((imageId) => {\n          if (productDetailData && productDetailData['image']) {\n            if (!productDetailData['image'].includes(imageId)) {\n              aboutToUpdatedImageIds.push(imageId);\n            }\n          }\n        });\n      }\n\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n        await handleAttachImageToItemMultipleFetch({\n          urlOptions: {\n            placeHolders: {\n              collection: 'post',\n              itemId: productDetailData.id,\n            },\n          },\n          body: {\n            image: aboutToUpdatedImageIds,\n          },\n        });\n      } else if (\n        aboutToUpdatedImageIds[0] &&\n        aboutToUpdatedImageIds.length < 1\n      ) {\n        await handleAttachImageToItemSingleFetch({\n          urlOptions: {\n            placeHolders: {\n              imageId: aboutToUpdatedImageIds[0].id,\n              collection: 'post',\n              itemId: productDetailData.id,\n            },\n          },\n        });\n      }\n    }\n\n    const addProductRes = await handleAddProductFetch({\n      urlOptions: {\n        placeHolders: {\n          id: productDetailData.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        category: categoryOptions,\n        tags: tagIds,\n        image: imagesIds,\n        body: body,\n        requiredProducts: products,\n        preparationTime: values.preparationTime,\n        servingSize: values.servingSize,\n        cookingTime: values.cookingTime,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags:\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\n          name: values.bnName.trim(),\n          preparationTime: values.bnPreparationTime,\n          body: bnBody,\n          servingSize: values.bnServingSize,\n          cookingTime: values.bnCookingTime,\n        },\n      },\n    });\n\n    console.log('addProductRes', addProductRes);\n\n    // @ts-ignore\n    if (addProductRes && addProductRes.status === 'ok') {\n      openSuccessNotification('Recipe Updated');\n\n      const positionInTag = () => {\n        return bundleList.map((item) => item.id).indexOf(productDetailData.id);\n      };\n\n      const index = positionInTag();\n\n      const getCover = (id) => {\n        if (!id || !myImages || !myImages[0]) {\n          return '';\n        } else {\n          if (myImages && myImages.length > 0) {\n            const item = myImages.find((item) => item.id === id);\n            if (item) {\n              return item.cover;\n            }\n          }\n        }\n      };\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, bundleList[index], {\n        ...addProductRes,\n        id: addProductRes['id'] || '',\n        key: addProductRes['id'] || '',\n        name: values.name.trim() || '',\n        cover: getCover(coverImageId),\n      });\n      const updateTagList = [\n        ...bundleList.slice(0, index),\n        updatedItem,\n        ...bundleList.slice(index + 1),\n      ];\n      setBundleList(updateTagList);\n\n      setAddNewCategoryVisible(false);\n\n      // @ts-ignore\n      setmyImages([]);\n      setCoverImageId('');\n      setPricing([]);\n      setTagIds([]);\n      setSelectedTags([]);\n      setBrandId('');\n      setcategoryIds([]);\n      setCategoryOptions([]);\n      setBnBody('');\n      setBody('');\n      setMetaTags([]);\n      setBnMetaTags([]);\n      setProductIds([]);\n      setProductList([]);\n      actions.resetForm();\n    } else {\n      // openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addProductState['isLoading']) {\n      const error = addProductState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addProductState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n    setmyImages([]);\n    setCoverImageId('');\n    setPricing([]);\n    setTagIds([]);\n    setSelectedTags([]);\n    setBrandId('');\n    setcategoryIds([]);\n    setCategoryOptions([]);\n    setBnBody('');\n    setBody('');\n    setMetaTags([]);\n    setBnMetaTags([]);\n    setProductIds([]);\n    setProductList([]);\n  };\n\n  useEffect(() => {\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\n      const metaTags =\n        productDetailData.metaTags && productDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        productDetailData.bn &&\n        productDetailData.bn['metaTags'] &&\n        productDetailData.bn['metaTags'].split(',');\n      setMetaTags(metaTags || []);\n      setBnMetaTags(bnMetaTags || []);\n    }\n  }, []);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{\n        ...initialValues,\n        ...{\n          ...productDetailData,\n          ...(productDetailState['data'] &&\n            Object.keys(productDetailState['data']).length > 0 &&\n            productDetailState['data']['bn'] && {\n              bnMetaTitle: productDetailState['data']['bn'].metaTitle,\n              bnMetaDescription:\n                productDetailState['data']['bn'].metaDescription,\n              bnName: productDetailState['data']['bn'].name,\n              metaUnit: productDetailState['data']['bn'].unit,\n              bnDescription: productDetailState['data']['bn'].description,\n            }),\n        },\n      }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <section className='addProductGridContainer'>\n            <div className='addProductGridContainer__left'>\n              <div className='addProductGridContainer__name'>\n                <div className='addProductGridContainer__item-header'>\n                  <h3>Recipe Information</h3>\n\n                  <div\n                    className={\n                      values.name && values.name.length > 2\n                        ? 'checkicon-active'\n                        : 'checkicon'\n                    }\n                  >\n                    <CheckCircleOutlined />\n                  </div>\n                </div>\n                <div className='addProductGridContainer__item-body'>\n                  <Input\n                    label='Name'\n                    placeHolder='Rafti oxy'\n                    value={values.name}\n                    name='name'\n                    isError={\n                      (touched.name && errors.name) ||\n                      (!isSubmitting && addProductState.error['error']['name'])\n                    }\n                    errorString={\n                      (touched.name && errors.name) ||\n                      (!isSubmitting && addProductState.error['error']['name'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('name');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Name'\n                    value={values.bnName}\n                    placeHolder={'রাফতি অক্স'}\n                    name='bnName'\n                    isError={\n                      (touched.bnName && errors.bnName) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnName'])\n                    }\n                    errorString={\n                      (touched.bnName && errors.bnName) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnName'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnName');\n                    }}\n                  />\n\n                  <Input\n                    label='Preparation Time'\n                    value={values.preparationTime}\n                    placeHolder='15 min'\n                    name='preparationTime'\n                    isError={\n                      (touched.preparationTime && errors.preparationTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['preparationTime'])\n                    }\n                    errorString={\n                      (touched.preparationTime && errors.preparationTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['preparationTime'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('preparationTime');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Preparation Time'\n                    value={values.bnPreparationTime}\n                    placeHolder={'১৫ মিনিট'}\n                    name='bnPreparationTime'\n                    isError={\n                      (touched.bnPreparationTime && errors.bnPreparationTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnPreparationTime'])\n                    }\n                    errorString={\n                      (touched.bnPreparationTime && errors.bnPreparationTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnPreparationTime'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnPreparationTime');\n                    }}\n                  />\n\n                  <Input\n                    label='Cooking Time'\n                    placeHolder={'30 min'}\n                    value={values.cookingTime}\n                    name='cookingTime'\n                    isError={\n                      (touched.cookingTime && errors.cookingTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['cookingTime'])\n                    }\n                    errorString={\n                      (touched.cookingTime && errors.cookingTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['cookingTime'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('cookingTime');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Cooking Time'\n                    placeHolder={'৩০ মিনিট'}\n                    value={values.bnCookingTime}\n                    name='bnCookingTime'\n                    isError={\n                      (touched.bnCookingTime && errors.bnCookingTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnCookingTime'])\n                    }\n                    errorString={\n                      (touched.bnCookingTime && errors.bnCookingTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnCookingTime'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnCookingTime');\n                    }}\n                  />\n\n                  <Input\n                    label='Serving Size'\n                    value={values.servingSize}\n                    name='servingSize'\n                    isError={\n                      (touched.servingSize && errors.servingSize) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['servingSize'])\n                    }\n                    errorString={\n                      (touched.servingSize && errors.servingSize) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['servingSize'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('servingSize');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Serving Size'\n                    value={values.bnServingSize}\n                    name='bnServingSize'\n                    isError={\n                      (touched.bnServingSize && errors.bnServingSize) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnServingSize'])\n                    }\n                    errorString={\n                      (touched.bnServingSize && errors.bnServingSize) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnServingSize'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnServingSize');\n                    }}\n                  />\n\n                  <Input\n                    label='URL'\n                    value={values.url}\n                    name='url'\n                    isError={\n                      (touched.url && errors.url) ||\n                      (!isSubmitting && addProductState.error['error']['url'])\n                    }\n                    errorString={\n                      (touched.url && errors.url) ||\n                      (!isSubmitting && addProductState.error['error']['url'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('url');\n                    }}\n                  />\n\n                  <h3 className='inputFieldLabel'>Body</h3>\n\n                  <div\n                    style={{\n                      width: '100%',\n                      maxWidth: '100%',\n                    }}\n                  >\n                    <CKEditor\n                      editor={ClassicEditor}\n                      data={body}\n                      onInit={(editor) => {\n                        // You can store the \"editor\" and use when it is needed.\n                        console.log('Editor is ready to use!', editor);\n                      }}\n                      onChange={(event, editor) => {\n                        const data = editor.getData();\n                        setBody(data);\n                      }}\n                      onBlur={(event, editor) => {\n                        console.log('Blur.', editor);\n                      }}\n                      onFocus={(event, editor) => {\n                        console.log('Focus.', editor);\n                      }}\n                    />\n                  </div>\n\n                  <div\n                    style={{\n                      marginTop: '15px',\n                    }}\n                  ></div>\n\n                  <h3 className='inputFieldLabel'>BN Body</h3>\n\n                  <div\n                    style={{\n                      width: '100%',\n                      maxWidth: '100%',\n                    }}\n                  >\n                    <CKEditor\n                      editor={ClassicEditor}\n                      data={bnBody}\n                      onInit={(editor) => {\n                        // You can store the \"editor\" and use when it is needed.\n                        console.log('Editor is ready to use!', editor);\n                      }}\n                      onChange={(event, editor) => {\n                        const data = editor.getData();\n                        setBnBody(data);\n                      }}\n                      onBlur={(event, editor) => {\n                        console.log('Blur.', editor);\n                      }}\n                      onFocus={(event, editor) => {\n                        console.log('Focus.', editor);\n                      }}\n                    />\n                  </div>\n\n                  {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n                  <div\n                    style={{\n                      marginBottom: '15px',\n                    }}\n                  ></div>\n                  {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n                </div>\n              </div>\n\n              <div className='addProductGridContainer__price'>\n                <div className='addProductGridContainer__item-header'>\n                  <h3>Products</h3>\n\n                  <div\n                    className={\n                      pricing && pricing.length > 0\n                        ? 'checkicon-active'\n                        : 'checkicon'\n                    }\n                  >\n                    <CheckCircleOutlined />\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__item-body'>\n                  <h3 className='inputFieldLabel'>Products</h3>\n                  <SelectProducts\n                    setProductIds={setProductIds}\n                    productIds={productIds}\n                  />\n\n                  <div\n                    style={{\n                      marginTop: '15px',\n                    }}\n                  ></div>\n\n                  <h3 className='inputFieldLabel'>Selcted Products</h3>\n\n                  <SelectedProductItems\n                    productList={productList}\n                    setProductList={setProductList}\n                  />\n                </div>\n              </div>\n\n              <div className='addProductGridContainer__image'>\n                <div className='addProductGridContainer__item-header'>\n                  <h3>Image</h3>\n\n                  <Tooltip\n                    placement='left'\n                    title={\n                      'Click on the image to select cover image, By default 1st image is selected as cover'\n                    }\n                  >\n                    <a href='###'>\n                      <InfoCircleOutlined />\n                    </a>\n                  </Tooltip>\n                </div>\n\n                <div\n                  style={{\n                    padding: '10px',\n                  }}\n                  className='aboutToUploadImagesContainer'\n                >\n                  {productDetailState.isLoading && (\n                    <div\n                      style={{\n                        padding: '20px 0',\n                      }}\n                    >\n                      <Spin />\n                    </div>\n                  )}\n                  {productDetailState.done && (\n                    <>\n                      {myImages &&\n                        // @ts-ignore\n                        myImages.length > 0 &&\n                        myImages.map((image, index) => {\n                          return (\n                            <div className='aboutToUploadImagesContainer__item'>\n                              <div\n                                className='aboutToUploadImagesContainer__item-imgContainer'\n                                onClick={() => {\n                                  setCoverImageId(image.id);\n                                  handleSetImageAsThumnail(image);\n                                }}\n                              >\n                                <img src={image.cover} alt={image.alt} />\n                              </div>\n\n                              <span\n                                onClick={() => {\n                                  handleImagesDelete(image.id);\n                                  handleDetachSingleImage(image.id);\n                                }}\n                                className='aboutToUploadImagesContainer__item-remove'\n                              >\n                                <CloseOutlined />\n                              </span>\n\n                              {coverImageId === image.id ? (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                  <CheckOutlined />\n                                </span>\n                              ) : (\n                                !coverImageId &&\n                                index === 0 && (\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                  </span>\n                                )\n                              )}\n                            </div>\n                          );\n                        })}\n\n                      <Tooltip title={'Attach images'}>\n                        <div\n                          onClick={() => {\n                            setvisible(true);\n                            setisModalOpenForImages(true);\n                            setisModalOpenForThumbnail(false);\n                          }}\n                          className='aboutToUploadImagesContainer__uploadItem'\n                        >\n                          {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                          <FileImageFilled />\n                          {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                            <PlusOutlined />\n                          </span>\n                        </div>\n                      </Tooltip>\n                    </>\n                  )}\n                </div>\n              </div>\n\n              <div className='addProductGridContainer__image'>\n                <div className='addProductGridContainer__item-header'>\n                  <h3>Meta Data</h3>\n\n                  <Tooltip\n                    placement='left'\n                    title={\n                      \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                    }\n                  >\n                    <a href='###'>\n                      <InfoCircleOutlined />\n                    </a>\n                  </Tooltip>\n                </div>\n                <div className='addProductGridContainer__item-body'>\n                  <Input\n                    label='Meta title'\n                    value={values.metaTitle}\n                    placeHolder={'...'}\n                    name='metaTitle'\n                    isError={\n                      (touched.metaTitle && errors.metaTitle) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['metaTitle'])\n                    }\n                    errorString={\n                      (touched.metaTitle && errors.metaTitle) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['metaTitle'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('metaTitle');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Meta title'\n                    value={values.bnMetaTitle}\n                    placeHolder={'...'}\n                    name='bnMetaTitle'\n                    isError={\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnMetaTitle'])\n                    }\n                    errorString={\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnMetaTitle'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnMetaTitle');\n                    }}\n                  />\n\n                  <TextArea\n                    label='Meta description'\n                    value={values.metaDescription}\n                    placeholder={'meta...'}\n                    name='metaDescription'\n                    isError={\n                      (touched.metaDescription && errors.metaDescription) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['metaDescription'])\n                    }\n                    errorString={\n                      (touched.metaDescription && errors.metaDescription) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['metaDescription'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('metaDescription');\n                    }}\n                  />\n\n                  <TextArea\n                    label='BN Meta Description'\n                    value={values.bnMetaDescription}\n                    placeholder={'এইয় মেট...'}\n                    name='bnMetaDescription'\n                    isError={\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnMetaDescription'])\n                    }\n                    errorString={\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnMetaDescription'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnMetaDescription');\n                    }}\n                  />\n\n                  <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n                  <MetaTags\n                    // @ts-ignore\n                    setTags={setMetaTags}\n                    tags={metaTags}\n                  />\n\n                  <div\n                    style={{\n                      marginTop: '15px',\n                    }}\n                  ></div>\n\n                  <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n                  <MetaTags\n                    // @ts-ignore\n                    setTags={setBnMetaTags}\n                    tags={bnMetaTags}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className='addProductGridContainer__right'>\n              <div className='addProductGridContainer__category'>\n                <div className='addProductGridContainer-rightItemContainer'>\n                  <div className='addProductGridContainer-rightItemContainer-header'>\n                    <h3>Recipe Categories</h3>\n\n                    <Tooltip\n                      color='red'\n                      visible={\n                        addProductState.error['error']['category'] &&\n                        !(categoryids.length > 0)\n                      }\n                      placement='left'\n                      title={'Select at least one category'}\n                    >\n                      <div\n                        className={\n                          !(categoryids.length > 0) &&\n                          !addProductState.error['error']['category']\n                            ? 'checkicon'\n                            : addProductState.error['error']['category']\n                            ? 'checkicon-error'\n                            : 'checkicon-active'\n                        }\n                      >\n                        <CheckCircleOutlined />\n                      </div>\n                    </Tooltip>\n                  </div>\n                  <div className='addProductGridContainer-rightItemContainer-body'>\n                    <Categories\n                      setCategoryOptions={setCategoryOptions}\n                      categoryOptions={categoryOptions}\n                      setcategoryIds={setcategoryIds}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className='addProductGridContainer__tag'>\n                <div className='addProductGridContainer-rightItemContainer'>\n                  <div className='addProductGridContainer-rightItemContainer-header'>\n                    <h3>Recipe Tags</h3>\n                  </div>\n                  <div className='addProductGridContainer-rightItemContainer-body'>\n                    <Tags\n                      setSelectedTags={setSelectedTags}\n                      selectedTags={selectedTags}\n                      setTagIds={setTagIds}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <div\n            style={{\n              padding: '15px',\n              display: 'flex',\n              justifyContent: 'flex-end',\n            }}\n          >\n            <Button\n              style={{\n                color: '#555',\n                marginRight: '10px',\n              }}\n              className='btnPrimaryClassNameoutline-cancle'\n              onClick={() => setAddNewCategoryVisible(false)}\n              type='default'\n            >\n              Cancel\n            </Button>\n\n            <Button\n              className='btnPrimaryClassNameoutline'\n              onClick={handleSubmit}\n              loading={addProductState.isLoading}\n              type='link'\n              icon={<CheckOutlined />}\n            >\n              Update\n            </Button>\n          </div>\n\n          <MediaLibrary\n            setvisible={setvisible}\n            visible={visible}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            setmyThumbnailImage={setmyThumbnailImage}\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\n            isModalOpenForImages={isModalOpenForImages}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nconst AddNewProduct = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  productList: bundleList,\n  setProductList: setBundleList,\n  productDetailData,\n}: Props) => {\n  const handleCancel = () => {\n    setAddNewCategoryVisible(false);\n  };\n  return (\n    <>\n      <Modal\n        style={{\n          top: '40px',\n        }}\n        footer={false}\n        bodyStyle={{\n          margin: 0,\n          padding: 0,\n        }}\n        width={'70vw'}\n        title='Edit Recipe'\n        visible={addNewCategoryVisible}\n        // onOk={(e: any) => handleSubmit(e)}\n        onCancel={handleCancel}\n        destroyOnClose={true}\n        okText='Update'\n        okButtonProps={{\n          // loading: isSubmitting,\n          htmlType: 'submit',\n        }}\n      >\n        <ModalComponentChild\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={bundleList}\n          bundleList={bundleList}\n          setBundleList={setBundleList}\n          productDetailData={productDetailData}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default AddNewProduct;\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n\t[regular input field] [offer inputfield]\n\nStock [title]\n\t[available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n\t[add attributes name]\n\t\t[add attrubutes value]\n\n\t[add attributes name]\n\t\t[add attrubutes value\n\n*/ //\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { message, Tooltip, Modal, Tabs, Empty, Badge } from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport {\n  openSuccessNotification,\n  openErrorNotification,\n} from '../../components/Notification';\nimport MetaTags from '../category/MetaTags';\n\nimport Tags from './Tags';\nimport Brands from './Brands';\nimport Categories from './Categories';\nimport SelectProducts from './SelectProducts';\nimport SelectedProductItems from './SelectedProductItems';\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  url: '',\n  preparationTime: '',\n  servingSize: '',\n  cookingTime: '',\n  body: '',\n  bnName: '',\n  bnBody: '',\n  bnPreparationTime: '',\n  bnServingSize: '',\n  bnCookingTime: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  productList?: any;\n  setProductList?: any;\n}\n\nconst AddNewProduct = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  productList: bundleList,\n  setProductList: setBundleList,\n}: Props) => {\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\n    {},\n    'addPost'\n  );\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [categoryids, setcategoryIds] = useState([]);\n  const [tagIds, setTagIds] = useState([]);\n  const [brandId, setBrandId] = useState('');\n  const [pricing, setPricing] = useState([]);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [date, setDateFeild] = useState('');\n  const [time, setTimeFeild] = useState('');\n  const [description, setDescription] = useState('');\n  const [body, setBody] = useState('');\n  const [bnBody, setBnBody] = useState('');\n  const [productIds, setProductIds] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [bnDescription, setBNDescription] = useState('এই পণ্য...');\n  const [metaTags, setMetaTags] = useState([]);\n  const [bnMetaTags, setBnMetaTags] = useState([]);\n\n  const [price, setPrice] = useState({\n    regular: null,\n    offer: null,\n  });\n\n  const makeEmptyCategoryOptions = (setEmpty) => {\n    setEmpty([]);\n  };\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds = myImages\n      ? myImages.map((image) => {\n          return image.id;\n        })\n      : [];\n\n    const products =\n      productList.length > 0\n        ? productList.map((product) => {\n            return {\n              _id: product._id,\n              variation: product.variation,\n              quantity: product.quantity,\n            };\n          })\n        : [];\n\n    const addProductRes = await handleAddProductFetch({\n      body: {\n        name: values.name.trim(),\n        category: categoryids,\n        tags: tagIds,\n        brand: [brandId],\n        image: imagesIds,\n        body: body,\n        requiredProducts: products,\n        preparationTime: values.preparationTime,\n        servingSize: values.servingSize,\n        cookingTime: values.cookingTime,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags:\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\n          name: values.bnName.trim(),\n          preparationTime: values.bnPreparationTime,\n          body: bnBody,\n          servingSize: values.bnServingSize,\n          cookingTime: values.bnCookingTime,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addProductRes && addProductRes.status === 'ok') {\n      openSuccessNotification('Recipe Created');\n\n      setBundleList([\n        {\n          // @ts-ignore\n          ...addProductRes,\n          id: addProductRes['_id'] || '',\n          key: addProductRes['_id'] || '',\n          // name: addProductRes['name'] || '',\n          // cover: addProductRes['cover'] || '',\n        },\n        ...bundleList,\n      ]);\n\n      // @ts-ignore\n      setmyImages([]);\n      setCoverImageId('');\n      setPricing([]);\n      setTagIds([]);\n      setSelectedTags([]);\n      setBrandId('');\n      setcategoryIds([]);\n      setCategoryOptions([]);\n      setBnBody('');\n      setBody('');\n      setMetaTags([]);\n      setBnMetaTags([]);\n      setProductIds([]);\n      setProductList([]);\n      actions.resetForm();\n\n      setAddNewCategoryVisible(false);\n    } else {\n      // openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addProductState['isLoading']) {\n      const error = addProductState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addProductState]);\n\n  useEffect(() => {\n    if (productIds.length > 0) {\n      if (productIds.length > productList.length) {\n        const variation =\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setProductList([\n          ...productList,\n          {\n            ...productIds[productIds.length - 1],\n            _id: productIds[productIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (productIds.length < productList.length) {\n        console.log('productIds', productIds);\n        console.log('productList', productList);\n\n        const newProductList = productList.filter((item) => {\n          let isTrue = false;\n          productIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setProductList(newProductList);\n      }\n    } else {\n      setProductList([]);\n    }\n    // console.log('productIds', productIds)\n  }, [productIds]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !(pricing.length > 0) || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  const handleDeleteFromSelectedImage = () => {};\n\n  const handleThumbnailImageDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myThumbnailImage &&\n      myThumbnailImage.filter((image) => {\n        return image.id !== id;\n      });\n\n    if (newImages.length > 0) {\n      setmyThumbnailImage(newImages);\n    } else setmyThumbnailImage(false);\n  };\n\n  const handleAddPricing = (priceItem) => {\n    setPricing([\n      {\n        ...priceItem,\n        id: pricing.length,\n      },\n      ...pricing,\n    ]);\n    message.info('Product Pricing Added');\n  };\n\n  const handleDeletePricing = (id) => {\n    const newPricing = pricing.filter((item) => item.id !== id);\n    setPricing(newPricing);\n    message.info('Product Pricing Deleted');\n  };\n\n  const isCategoryInValid = () => {\n    if (\n      addProductState.error['error']['category'] &&\n      !categoryids &&\n      categoryids.length\n    ) {\n      return true;\n    } else if (categoryids && categoryids.length > 0) {\n      return false;\n    }\n  };\n\n  const handleDateChange = (date, dateString) => {\n    setDateFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            bodyStyle={{\n              margin: 0,\n              padding: 0,\n            }}\n            width={'70vw'}\n            title='Add New Recipe'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n            }}\n          >\n            <section className='addProductGridContainer'>\n              <div className='addProductGridContainer__left'>\n                <div className='addProductGridContainer__name'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Recipe Information</h3>\n\n                    <div\n                      className={\n                        values.name && values.name.length > 2\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <Input\n                      label='Name'\n                      placeHolder='Rafti oxy'\n                      value={values.name}\n                      name='name'\n                      isError={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['name'])\n                      }\n                      errorString={\n                        (touched.name && errors.name) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['name'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('name');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Name'\n                      value={values.bnName}\n                      placeHolder={'রাফতি অক্স'}\n                      name='bnName'\n                      isError={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnName'])\n                      }\n                      errorString={\n                        (touched.bnName && errors.bnName) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnName'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnName');\n                      }}\n                    />\n\n                    <Input\n                      label='Preparation Time'\n                      value={values.preparationTime}\n                      placeHolder='15 min'\n                      name='preparationTime'\n                      isError={\n                        (touched.preparationTime && errors.preparationTime) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['preparationTime'])\n                      }\n                      errorString={\n                        (touched.preparationTime && errors.preparationTime) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['preparationTime'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('preparationTime');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Preparation Time'\n                      value={values.bnPreparationTime}\n                      placeHolder={'১৫ মিনিট'}\n                      name='bnPreparationTime'\n                      isError={\n                        (touched.bnPreparationTime &&\n                          errors.bnPreparationTime) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnPreparationTime'])\n                      }\n                      errorString={\n                        (touched.bnPreparationTime &&\n                          errors.bnPreparationTime) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnPreparationTime'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnPreparationTime');\n                      }}\n                    />\n\n                    <Input\n                      label='Cooking Time'\n                      placeHolder={'30 min'}\n                      value={values.cookingTime}\n                      name='cookingTime'\n                      isError={\n                        (touched.cookingTime && errors.cookingTime) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['cookingTime'])\n                      }\n                      errorString={\n                        (touched.cookingTime && errors.cookingTime) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['cookingTime'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('cookingTime');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Cooking Time'\n                      placeHolder={'৩০ মিনিট'}\n                      value={values.bnCookingTime}\n                      name='bnCookingTime'\n                      isError={\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnCookingTime'])\n                      }\n                      errorString={\n                        (touched.bnCookingTime && errors.bnCookingTime) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnCookingTime'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnCookingTime');\n                      }}\n                    />\n\n                    <Input\n                      label='Serving Size'\n                      value={values.servingSize}\n                      name='servingSize'\n                      isError={\n                        (touched.servingSize && errors.servingSize) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['servingSize'])\n                      }\n                      errorString={\n                        (touched.servingSize && errors.servingSize) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['servingSize'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('servingSize');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Serving Size'\n                      value={values.bnServingSize}\n                      name='bnServingSize'\n                      isError={\n                        (touched.bnServingSize && errors.bnServingSize) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnServingSize'])\n                      }\n                      errorString={\n                        (touched.bnServingSize && errors.bnServingSize) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnServingSize'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnServingSize');\n                      }}\n                    />\n\n                    <Input\n                      label='URL'\n                      value={values.url}\n                      name='url'\n                      isError={\n                        (touched.url && errors.url) ||\n                        (!isSubmitting && addProductState.error['error']['url'])\n                      }\n                      errorString={\n                        (touched.url && errors.url) ||\n                        (!isSubmitting && addProductState.error['error']['url'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('url');\n                      }}\n                    />\n\n                    <h3 className='inputFieldLabel'>Body</h3>\n\n                    <div\n                      style={{\n                        width: '100%',\n                        maxWidth: '100%',\n                      }}\n                    >\n                      <CKEditor\n                        editor={ClassicEditor}\n                        data={body}\n                        onInit={(editor) => {\n                          // You can store the \"editor\" and use when it is needed.\n                          console.log('Editor is ready to use!', editor);\n                        }}\n                        onChange={(event, editor) => {\n                          const data = editor.getData();\n                          setBody(data);\n                        }}\n                        onBlur={(event, editor) => {\n                          console.log('Blur.', editor);\n                        }}\n                        onFocus={(event, editor) => {\n                          console.log('Focus.', editor);\n                        }}\n                      />\n                    </div>\n\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    ></div>\n\n                    <h3 className='inputFieldLabel'>BN Body</h3>\n\n                    <div\n                      style={{\n                        width: '100%',\n                        maxWidth: '100%',\n                      }}\n                    >\n                      <CKEditor\n                        editor={ClassicEditor}\n                        data={bnBody}\n                        onInit={(editor) => {\n                          // You can store the \"editor\" and use when it is needed.\n                          console.log('Editor is ready to use!', editor);\n                        }}\n                        onChange={(event, editor) => {\n                          const data = editor.getData();\n                          setBnBody(data);\n                        }}\n                        onBlur={(event, editor) => {\n                          console.log('Blur.', editor);\n                        }}\n                        onFocus={(event, editor) => {\n                          console.log('Focus.', editor);\n                        }}\n                      />\n                    </div>\n\n                    {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n                    <div\n                      style={{\n                        marginBottom: '15px',\n                      }}\n                    ></div>\n                    {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__price'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Products</h3>\n\n                    <div\n                      className={\n                        pricing && pricing.length > 0\n                          ? 'checkicon-active'\n                          : 'checkicon'\n                      }\n                    >\n                      <CheckCircleOutlined />\n                    </div>\n                  </div>\n\n                  <div className='addProductGridContainer__item-body'>\n                    <h3 className='inputFieldLabel'>Products</h3>\n                    <SelectProducts\n                      setProductIds={setProductIds}\n                      productIds={productIds}\n                    />\n\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    ></div>\n\n                    <h3 className='inputFieldLabel'>Selcted Products</h3>\n\n                    <SelectedProductItems\n                      productList={productList}\n                      setProductList={setProductList}\n                    />\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__image'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Image</h3>\n\n                    <Tooltip\n                      placement='left'\n                      title={\n                        'Click on the image to select cover image, By default 1st image is selected as cover'\n                      }\n                    >\n                      <a href='###'>\n                        <InfoCircleOutlined />\n                      </a>\n                    </Tooltip>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <div className='aboutToUploadImagesContainer'>\n                      {myImages &&\n                        // @ts-ignore\n                        myImages.length > 0 &&\n                        myImages.map((image, index) => {\n                          return (\n                            <div className='aboutToUploadImagesContainer__item'>\n                              <div\n                                className='aboutToUploadImagesContainer__item-imgContainer'\n                                onClick={() => setCoverImageId(image.id)}\n                              >\n                                <img src={image.cover} alt={image.alt} />\n                              </div>\n\n                              <span\n                                onClick={() => handleImagesDelete(image.id)}\n                                className='aboutToUploadImagesContainer__item-remove'\n                              >\n                                <CloseOutlined />\n                              </span>\n\n                              {coverImageId === image.id ? (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                  <CheckOutlined />\n                                </span>\n                              ) : (\n                                !coverImageId &&\n                                index === 0 && (\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                  </span>\n                                )\n                              )}\n                            </div>\n                          );\n                        })}\n\n                      <Tooltip title={'Attach images'}>\n                        <div\n                          onClick={() => {\n                            setvisible(true);\n                            setisModalOpenForImages(true);\n                            setisModalOpenForThumbnail(false);\n                          }}\n                          className='aboutToUploadImagesContainer__uploadItem'\n                        >\n                          {/* <FileAddOutlined />\n                                                        <FileImageTwoTone />\n                                                        <FileImageOutlined /> */}\n                          <FileImageFilled />\n                          {/* <h5>\n                                                                        Select From Library\n                                                                <     /h5> */}\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                            <PlusOutlined />\n                          </span>\n                        </div>\n                      </Tooltip>\n                    </div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__image'>\n                  <div className='addProductGridContainer__item-header'>\n                    <h3>Meta Data</h3>\n\n                    <Tooltip\n                      placement='left'\n                      title={\n                        \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                      }\n                    >\n                      <a href='###'>\n                        <InfoCircleOutlined />\n                      </a>\n                    </Tooltip>\n                  </div>\n                  <div className='addProductGridContainer__item-body'>\n                    <Input\n                      label='Meta title'\n                      value={values.metaTitle}\n                      placeHolder={'...'}\n                      name='metaTitle'\n                      isError={\n                        (touched.metaTitle && errors.metaTitle) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['metaTitle'])\n                      }\n                      errorString={\n                        (touched.metaTitle && errors.metaTitle) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['metaTitle'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('metaTitle');\n                      }}\n                    />\n\n                    <Input\n                      label='BN Meta title'\n                      value={values.bnMetaTitle}\n                      placeHolder={'...'}\n                      name='bnMetaTitle'\n                      isError={\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnMetaTitle'])\n                      }\n                      errorString={\n                        (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnMetaTitle'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnMetaTitle');\n                      }}\n                    />\n\n                    <TextArea\n                      label='Meta description'\n                      value={values.metaDescription}\n                      placeholder={'meta...'}\n                      name='metaDescription'\n                      isError={\n                        (touched.metaDescription && errors.metaDescription) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['metaDescription'])\n                      }\n                      errorString={\n                        (touched.metaDescription && errors.metaDescription) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['metaDescription'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('metaDescription');\n                      }}\n                    />\n\n                    <TextArea\n                      label='BN Meta Description'\n                      value={values.bnMetaDescription}\n                      placeholder={'এইয় মেট...'}\n                      name='bnMetaDescription'\n                      isError={\n                        (touched.bnMetaDescription &&\n                          errors.bnMetaDescription) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnMetaDescription'])\n                      }\n                      errorString={\n                        (touched.bnMetaDescription &&\n                          errors.bnMetaDescription) ||\n                        (!isSubmitting &&\n                          addProductState.error['error']['bnMetaDescription'])\n                      }\n                      onChange={(e: any) => {\n                        handleChange(e);\n                        setFieldTouched('bnMetaDescription');\n                      }}\n                    />\n\n                    <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n                    <MetaTags\n                      // @ts-ignore\n                      setTags={setMetaTags}\n                      tags={metaTags}\n                    />\n\n                    <div\n                      style={{\n                        marginTop: '15px',\n                      }}\n                    ></div>\n\n                    <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n                    <MetaTags\n                      // @ts-ignore\n                      setTags={setBnMetaTags}\n                      tags={bnMetaTags}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className='addProductGridContainer__right'>\n                <div className='addProductGridContainer__category'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Recipe Categories</h3>\n\n                      <Tooltip\n                        color='red'\n                        visible={\n                          addProductState.error['error']['category'] &&\n                          !(categoryids.length > 0)\n                        }\n                        placement='left'\n                        title={'Select at least one category'}\n                      >\n                        <div\n                          className={\n                            !(categoryids.length > 0) &&\n                            !addProductState.error['error']['category']\n                              ? 'checkicon'\n                              : addProductState.error['error']['category']\n                              ? 'checkicon-error'\n                              : 'checkicon-active'\n                          }\n                        >\n                          <CheckCircleOutlined />\n                        </div>\n                      </Tooltip>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Categories\n                        setCategoryOptions={setCategoryOptions}\n                        categoryOptions={categoryOptions}\n                        setcategoryIds={setcategoryIds}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__tag'>\n                  <div className='addProductGridContainer-rightItemContainer'>\n                    <div className='addProductGridContainer-rightItemContainer-header'>\n                      <h3>Recipe Tags</h3>\n                    </div>\n                    <div className='addProductGridContainer-rightItemContainer-body'>\n                      <Tags\n                        setSelectedTags={setSelectedTags}\n                        selectedTags={selectedTags}\n                        setTagIds={setTagIds}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisible}\n            visible={visible}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            setmyThumbnailImage={setmyThumbnailImage}\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\n            isModalOpenForImages={isModalOpenForImages}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewProduct;\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n\t[regular input field] [offer inputfield]\n\nStock [title]\n\t[available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n\t[add attributes name]\n\t\t[add attrubutes value]\n\n\t[add attributes name]\n\t\t[add attrubutes value\n\n*/ //\n","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport {\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\nimport Moment from 'react-moment';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport ProductBundleQuickEdit from './PostQuickEdit';\nimport AddNewProductBundle from './AddNewPost';\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Recipe Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst MyTable = ({ data, setTagList }) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\n    {},\n    'deletePost'\n  );\n\n  const history = useHistory();\n\n  const handleDeleteTag = async (id) => {\n    const deleteTagRes = await handleDeleteTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\n      openSuccessNotification('Deleted Recipe');\n      const newtagList = data.filter((item) => item.id !== id);\n      setTagList(newtagList);\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  const getCover = (record: any) => {\n    if (record.cover) {\n      return record.cover;\n    } else return '';\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title=''\n          dataIndex='cover'\n          key='id'\n          width={'80px'}\n          className='classnameofthecolumn'\n          render={(cover, record: any) => (\n            <>\n              <div\n                className='listCoverImage'\n                onClick={() => {\n                  history.push(`/admin/posts/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n              >\n                <img src={getCover(record)} alt='' />\n              </div>\n            </>\n          )}\n        />\n\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/posts/${record.id}`);\n                  // setBrandDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Preparation Time'\n          dataIndex='preparationTime'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Cooking Time'\n          dataIndex='cookingTime'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='People'\n          dataIndex='servingSize'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <a href='##'>\n                <Tooltip placement='top' title='Edit recipe'>\n                  <span\n                    className='iconSize'\n                    onClick={() => {\n                      setvisible(true);\n                      setactiveCategoryForEdit(record);\n                    }}\n                  >\n                    <EditOutlined />\n                  </span>\n                </Tooltip>\n              </a>\n\n              <Popconfirm\n                onConfirm={() => handleDeleteTag(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n\n      {activeCategoryForEdit && (\n        <ProductBundleQuickEdit\n          productList={data}\n          setProductList={setTagList}\n          setAddNewCategoryVisible={setvisible}\n          addNewCategoryVisible={visible}\n          productDetailData={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {}\n\nconst TagList = ({}: Props) => {\n  const [tagList, setTagList] = useState([]);\n\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'postList');\n\n  console.log('postListData', tagState);\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tags = await handleTagListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n      // @ts-ignore\n      setTagList(tags);\n    };\n    setTags();\n  }, []);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleSearch = (value) => {\n    if (tagState.data.length > 0) {\n      const newTagList = tagState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setTagList(newTagList);\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar-tag'>\n            <h2 className='categoryListContainer__header-title'>Recipes</h2>\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search recipes..'\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n          <Button\n            // type=\"primary\"\n            className='btnPrimaryClassNameoutline'\n            icon={<PlusOutlined />}\n            onClick={() => setAddNewCategoryVisible(true)}\n          >\n            Add New\n          </Button>\n        </div>\n        <div className='categoryListContainer__categoryList'>\n          {tagState.done && tagList.length > 0 && (\n            <MyTable setTagList={setTagList} data={tagList} />\n          )}\n          {tagState.isLoading && <DataTableSkeleton />}\n\n          {tagState.done && !(tagList.length > 0) && (\n            <div\n              style={{\n                marginTop: '200px',\n              }}\n            >\n              <Empty\n                description='No Recipe found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewProductBundle\n        productList={tagList}\n        setProductList={setTagList}\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n      />\n    </>\n  );\n};\n\nexport default TagList;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import libraries\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  message,\n  Tooltip,\n  Modal,\n  Tabs,\n  Empty,\n  Badge,\n  Spin,\n  Button,\n} from 'antd';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  FileImageFilled,\n  PlusOutlined,\n  PlusCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport {\n  openSuccessNotification,\n  openErrorNotification,\n} from '../../components/Notification';\nimport MetaTags from '../category/MetaTags';\n\nimport Tags from './Tags';\nimport Brands from './Brands';\nimport Categories from './Categories';\nimport SelectProducts from './SelectProducts';\nimport SelectedProductItems from './SelectedProductItems';\n\nconst { TabPane } = Tabs;\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  url: '',\n  preparationTime: '',\n  servingSize: '',\n  cookingTime: '',\n  body: '',\n  bnName: '',\n  bnBody: '',\n  bnPreparationTime: '',\n  bnServingSize: '',\n  bnCookingTime: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  setPostDetailData?: any;\n  productDetailData?: any;\n}\n\nconst ModalComponentChild = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  productDetailData,\n  setPostDetailData,\n}) => {\n  const [addProductState, handleAddProductFetch] = useHandleFetch(\n    {},\n    'updatePost'\n  );\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\n    {},\n    'postDetail'\n  );\n  const [visible, setvisible] = useState(false);\n  const [myImages, setmyImages] = useState(false);\n  const [myThumbnailImage, setmyThumbnailImage] = useState(false);\n  const [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n  const [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n  const [categoryids, setcategoryIds] = useState([]);\n  const [tagIds, setTagIds] = useState([]);\n  const [brandId, setBrandId] = useState('');\n  const [pricing, setPricing] = useState([]);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [body, setBody] = useState('');\n  const [bnBody, setBnBody] = useState('');\n  const [productIds, setProductIds] = useState([]);\n  const [productList, setProductList] = useState([]);\n  const [metaTags, setMetaTags] = useState([]);\n  const [bnMetaTags, setBnMetaTags] = useState([]);\n\n  const [\n    attachImageToItemMultipleState,\n    handleAttachImageToItemMultipleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemMultiple');\n  const [\n    attachImageToItemSingleState,\n    handleAttachImageToItemSingleFetch,\n  ] = useHandleFetch({}, 'attachImageToItemSingle');\n  const [\n    detachImageFromItemMultipleState,\n    handleDetachImageFromItemMultipleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemMultiple');\n  const [\n    detachImageFromItemSingleState,\n    handleDetachImageFromItemSingleFetch,\n  ] = useHandleFetch({}, 'detachImageFromItemSingle');\n  const [\n    setImageAsThumbnailToItemState,\n    handleSetImageAsThumbnailToItemFetch,\n  ] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n  console.log('myPostState', productDetailState);\n  useEffect(() => {\n    const getProductDetail = async () => {\n      await handleProductDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: productDetailData.id,\n          },\n          params: {\n            imageValue: 1,\n            tagsOne: '1',\n            categoryOne: '1',\n          },\n        },\n      });\n    };\n\n    getProductDetail();\n  }, [productDetailData]);\n\n  useEffect(() => {\n    if (\n      productDetailState.data &&\n      Object.keys(productDetailState.data).length > 0\n    ) {\n      const images = productDetailState.data.image;\n      let mahImages = [];\n\n      if (images && images.length > 0) {\n        mahImages = images;\n      }\n\n      if (\n        productDetailState.data.cover &&\n        productDetailState.data.cover['id']\n      ) {\n        const ixists = images.find(\n          (item) => item.id === productDetailState.data.cover['id']\n        );\n        if (!ixists) {\n          mahImages = [productDetailState.data.cover, ...mahImages];\n        }\n\n        setCoverImageId(productDetailState.data.cover['id']);\n      }\n\n      // @ts-ignore\n      setmyImages(mahImages);\n    }\n  }, [productDetailState.data]);\n\n  useEffect(() => {\n    // @ts-ignore\n    if (myImages && myImages[0] && myImages.length < 2) {\n      if (coverImageId !== myImages[0].id) {\n        setCoverImageId(myImages[0].id);\n        handleSetImageAsThumnail(myImages[0]);\n      }\n    }\n  }, [myImages]);\n\n  console.log('myLoadImages', myImages);\n\n  const handleDetachSingleImage = async (id) => {\n    await handleDetachImageFromItemSingleFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: id,\n          collection: 'post',\n          itemId: productDetailData.id,\n        },\n      },\n    });\n  };\n\n  const handleSetImageAsThumnail = async (image) => {\n    const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n      urlOptions: {\n        placeHolders: {\n          imageId: image.id,\n          collection: 'post',\n          itemId: productDetailData.id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (thumbnailRes && thumbnailRes.status === 'ok') {\n      // openSuccessNotification('Set as thumbnail!');\n    } else {\n      openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\");\n    }\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  useEffect(() => {\n    if (\n      productDetailState.done &&\n      productDetailState.data &&\n      Object.keys(productDetailState.data).length > 0\n    ) {\n      console.log('5555', productDetailState);\n      const productDetailData = productDetailState.data;\n      if (productDetailData && productDetailData.brand) {\n        setBrandId(productDetailData.brand['id']);\n      } else {\n        setBrandId('');\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.tags &&\n        productDetailData.tags.length > 0\n      ) {\n        const tagNames = productDetailData.tags.map((item) => item.name);\n        const tagIds = productDetailData.tags.map((item) => item._id);\n        console.log('tags55----', tagNames, tagIds);\n        setSelectedTags(tagNames);\n        setTagIds(tagIds);\n      } else {\n        setTagIds([]);\n        setSelectedTags([]);\n      }\n      if (\n        productDetailData &&\n        productDetailData.category &&\n        productDetailData.category.length > 0\n      ) {\n        const categoryIds = productDetailData.category;\n        setCategoryOptions(categoryIds);\n      } else {\n        setCategoryOptions([]);\n      }\n\n      if (productDetailData && productDetailData.body) {\n        setBody(productDetailData.body);\n      } else {\n        setBody('');\n      }\n\n      if (\n        productDetailData &&\n        productDetailData.bn &&\n        productDetailData.bn['body']\n      ) {\n        setBnBody(productDetailData.bn['body']);\n      } else {\n        setBnBody('');\n      }\n    }\n  }, [productDetailState]);\n\n  console.log('postSelectedTagsIds', selectedTags);\n  console.log('TagsIds', tagIds);\n  useEffect(() => {\n    if (\n      productDetailState.done &&\n      productDetailState['data'] &&\n      Object.keys(productDetailState['data']).length > 0 && [\n        'requiredProducts',\n      ] &&\n      productDetailState['data']['requiredProducts'].length > 0\n    ) {\n      const productIds = productDetailState['data']['requiredProducts'].map(\n        (item) => item\n      );\n      setProductIds(productIds);\n      const productList = productDetailState['data']['requiredProducts'].map(\n        (item) => {\n          return {\n            ...item,\n            _id: item._id,\n            variation: item.variation,\n            quantity: item.quantity,\n          };\n        }\n      );\n      setProductList(productList);\n    }\n  }, [productDetailState]);\n\n  console.log('couponDetialQuickEdit', productDetailState);\n\n  useEffect(() => {\n    if (productIds.length > 0) {\n      if (productIds.length > productList.length) {\n        const variation =\n          productIds[productIds.length - 1]['pricing'].length > 0 &&\n          productIds[productIds.length - 1]['pricing'][0]['_id'];\n        console.log('variation', variation);\n\n        setProductList([\n          ...productList,\n          {\n            ...productIds[productIds.length - 1],\n            _id: productIds[productIds.length - 1]['id'],\n            variation: variation,\n            quantity: 1,\n          },\n        ]);\n      } else if (productIds.length < productList.length) {\n        console.log('productIds', productIds);\n        console.log('productList', productList);\n\n        const newProductList = productList.filter((item) => {\n          let isTrue = false;\n          productIds.forEach((product) => {\n            if (product.id === item._id) {\n              isTrue = true;\n            }\n          });\n          return isTrue;\n        });\n        setProductList(newProductList);\n      }\n    } else {\n      setProductList([]);\n    }\n    // console.log('productIds', productIds)\n  }, [productIds]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    // @ts-ignore\n    const imagesIds =\n      myImages && myImages[0]\n        ? // @ts-ignore\n          myImages.map((image) => {\n            return image.id;\n          })\n        : [];\n\n    const products =\n      productList.length > 0\n        ? productList.map((product) => {\n            return {\n              _id: product._id,\n              variation: product.variation,\n              quantity: product.quantity,\n            };\n          })\n        : [];\n\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\n      const aboutToUpdatedImageIds = [];\n\n      if (imagesIds && imagesIds.length > 0) {\n        imagesIds.forEach((imageId) => {\n          if (productDetailData && productDetailData['image']) {\n            if (!productDetailData['image'].includes(imageId)) {\n              aboutToUpdatedImageIds.push(imageId);\n            }\n          }\n        });\n      }\n\n      if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n        await handleAttachImageToItemMultipleFetch({\n          urlOptions: {\n            placeHolders: {\n              collection: 'post',\n              itemId: productDetailData.id,\n            },\n          },\n          body: {\n            image: aboutToUpdatedImageIds,\n          },\n        });\n      } else if (\n        aboutToUpdatedImageIds[0] &&\n        aboutToUpdatedImageIds.length < 1\n      ) {\n        await handleAttachImageToItemSingleFetch({\n          urlOptions: {\n            placeHolders: {\n              imageId: aboutToUpdatedImageIds[0].id,\n              collection: 'post',\n              itemId: productDetailData.id,\n            },\n          },\n        });\n      }\n    }\n\n    const addProductRes = await handleAddProductFetch({\n      urlOptions: {\n        placeHolders: {\n          id: productDetailData.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        category: categoryOptions,\n        tags: tagIds,\n        image: imagesIds,\n        body: body,\n        requiredProducts: products,\n        preparationTime: values.preparationTime,\n        servingSize: values.servingSize,\n        cookingTime: values.cookingTime,\n        metaTitle: values.metaTitle,\n        metaDescription: values.metaDescription,\n        metaTags: metaTags && metaTags.length > 0 ? metaTags.join(',') : '',\n\n        bn: {\n          metaTitle: values.bnMetaTitle,\n          metaDescription: values.bnMetaDescription,\n          metaTags:\n            bnMetaTags && bnMetaTags.length > 0 ? bnMetaTags.join(',') : '',\n          name: values.bnName.trim(),\n          preparationTime: values.bnPreparationTime,\n          body: bnBody,\n          servingSize: values.bnServingSize,\n          cookingTime: values.bnCookingTime,\n        },\n      },\n    });\n\n    console.log('addProductRes', addProductRes);\n\n    // @ts-ignore\n    if (addProductRes && addProductRes.status === 'ok') {\n      openSuccessNotification('Recipe Updated');\n\n      setPostDetailData({\n        ...addProductRes,\n        id: productDetailData['id'] || '',\n        key: productDetailData['id'] || '',\n        name: values.name || '',\n        // cover: addProductRes['cover']['cover'] || '',\n      });\n\n      setAddNewCategoryVisible(false);\n\n      // @ts-ignore\n      setmyImages([]);\n      setCoverImageId('');\n      setPricing([]);\n      setTagIds([]);\n      setSelectedTags([]);\n      setBrandId('');\n      setcategoryIds([]);\n      setCategoryOptions([]);\n      setBnBody('');\n      setBody('');\n      setMetaTags([]);\n      setBnMetaTags([]);\n      setProductIds([]);\n      setProductList([]);\n      actions.resetForm();\n    } else {\n      // openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addProductState['isLoading']) {\n      const error = addProductState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addProductState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n    setmyImages([]);\n    setCoverImageId('');\n    setPricing([]);\n    setTagIds([]);\n    setSelectedTags([]);\n    setBrandId('');\n    setcategoryIds([]);\n    setCategoryOptions([]);\n    setBnBody('');\n    setBody('');\n    setMetaTags([]);\n    setBnMetaTags([]);\n    setProductIds([]);\n    setProductList([]);\n  };\n\n  useEffect(() => {\n    if (productDetailData && Object.keys(productDetailData).length > 0) {\n      const metaTags =\n        productDetailData.metaTags && productDetailData.metaTags.split(',');\n\n      console.log('localMetaTags', metaTags);\n\n      const bnMetaTags =\n        productDetailData.bn &&\n        productDetailData.bn['metaTags'] &&\n        productDetailData.bn['metaTags'].split(',');\n      setMetaTags(metaTags || []);\n      setBnMetaTags(bnMetaTags || []);\n    }\n  }, []);\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{\n        ...initialValues,\n        ...{\n          ...productDetailData,\n          ...(productDetailState['data'] &&\n            Object.keys(productDetailState['data']).length > 0 &&\n            productDetailState['data']['bn'] && {\n              bnMetaTitle: productDetailState['data']['bn'].metaTitle,\n              bnMetaDescription:\n                productDetailState['data']['bn'].metaDescription,\n              bnName: productDetailState['data']['bn'].name,\n              metaUnit: productDetailState['data']['bn'].unit,\n              bnDescription: productDetailState['data']['bn'].description,\n            }),\n        },\n      }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <section className='addProductGridContainer'>\n            <div className='addProductGridContainer__left'>\n              <div className='addProductGridContainer__name'>\n                <div className='addProductGridContainer__item-header'>\n                  <h3>Recipe Information</h3>\n\n                  <div\n                    className={\n                      values.name && values.name.length > 2\n                        ? 'checkicon-active'\n                        : 'checkicon'\n                    }\n                  >\n                    <CheckCircleOutlined />\n                  </div>\n                </div>\n                <div className='addProductGridContainer__item-body'>\n                  <Input\n                    label='Name'\n                    placeHolder='Rafti oxy'\n                    value={values.name}\n                    name='name'\n                    isError={\n                      (touched.name && errors.name) ||\n                      (!isSubmitting && addProductState.error['error']['name'])\n                    }\n                    errorString={\n                      (touched.name && errors.name) ||\n                      (!isSubmitting && addProductState.error['error']['name'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('name');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Name'\n                    value={values.bnName}\n                    placeHolder={'রাফতি অক্স'}\n                    name='bnName'\n                    isError={\n                      (touched.bnName && errors.bnName) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnName'])\n                    }\n                    errorString={\n                      (touched.bnName && errors.bnName) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnName'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnName');\n                    }}\n                  />\n\n                  <Input\n                    label='Preparation Time'\n                    value={values.preparationTime}\n                    placeHolder='15 min'\n                    name='preparationTime'\n                    isError={\n                      (touched.preparationTime && errors.preparationTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['preparationTime'])\n                    }\n                    errorString={\n                      (touched.preparationTime && errors.preparationTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['preparationTime'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('preparationTime');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Preparation Time'\n                    value={values.bnPreparationTime}\n                    placeHolder={'১৫ মিনিট'}\n                    name='bnPreparationTime'\n                    isError={\n                      (touched.bnPreparationTime && errors.bnPreparationTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnPreparationTime'])\n                    }\n                    errorString={\n                      (touched.bnPreparationTime && errors.bnPreparationTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnPreparationTime'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnPreparationTime');\n                    }}\n                  />\n\n                  <Input\n                    label='Cooking Time'\n                    placeHolder={'30 min'}\n                    value={values.cookingTime}\n                    name='cookingTime'\n                    isError={\n                      (touched.cookingTime && errors.cookingTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['cookingTime'])\n                    }\n                    errorString={\n                      (touched.cookingTime && errors.cookingTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['cookingTime'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('cookingTime');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Cooking Time'\n                    placeHolder={'৩০ মিনিট'}\n                    value={values.bnCookingTime}\n                    name='bnCookingTime'\n                    isError={\n                      (touched.bnCookingTime && errors.bnCookingTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnCookingTime'])\n                    }\n                    errorString={\n                      (touched.bnCookingTime && errors.bnCookingTime) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnCookingTime'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnCookingTime');\n                    }}\n                  />\n\n                  <Input\n                    label='Serving Size'\n                    value={values.servingSize}\n                    name='servingSize'\n                    isError={\n                      (touched.servingSize && errors.servingSize) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['servingSize'])\n                    }\n                    errorString={\n                      (touched.servingSize && errors.servingSize) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['servingSize'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('servingSize');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Serving Size'\n                    value={values.bnServingSize}\n                    name='bnServingSize'\n                    isError={\n                      (touched.bnServingSize && errors.bnServingSize) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnServingSize'])\n                    }\n                    errorString={\n                      (touched.bnServingSize && errors.bnServingSize) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnServingSize'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnServingSize');\n                    }}\n                  />\n\n                  <Input\n                    label='URL'\n                    value={values.url}\n                    name='url'\n                    isError={\n                      (touched.url && errors.url) ||\n                      (!isSubmitting && addProductState.error['error']['url'])\n                    }\n                    errorString={\n                      (touched.url && errors.url) ||\n                      (!isSubmitting && addProductState.error['error']['url'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('url');\n                    }}\n                  />\n\n                  <h3 className='inputFieldLabel'>Body</h3>\n\n                  <div\n                    style={{\n                      width: '100%',\n                      maxWidth: '100%',\n                    }}\n                  >\n                    <CKEditor\n                      editor={ClassicEditor}\n                      data={body}\n                      onInit={(editor) => {\n                        // You can store the \"editor\" and use when it is needed.\n                        console.log('Editor is ready to use!', editor);\n                      }}\n                      onChange={(event, editor) => {\n                        const data = editor.getData();\n                        setBody(data);\n                      }}\n                      onBlur={(event, editor) => {\n                        console.log('Blur.', editor);\n                      }}\n                      onFocus={(event, editor) => {\n                        console.log('Focus.', editor);\n                      }}\n                    />\n                  </div>\n\n                  <div\n                    style={{\n                      marginTop: '15px',\n                    }}\n                  ></div>\n\n                  <h3 className='inputFieldLabel'>BN Body</h3>\n\n                  <div\n                    style={{\n                      width: '100%',\n                      maxWidth: '100%',\n                    }}\n                  >\n                    <CKEditor\n                      editor={ClassicEditor}\n                      data={bnBody}\n                      onInit={(editor) => {\n                        // You can store the \"editor\" and use when it is needed.\n                        console.log('Editor is ready to use!', editor);\n                      }}\n                      onChange={(event, editor) => {\n                        const data = editor.getData();\n                        setBnBody(data);\n                      }}\n                      onBlur={(event, editor) => {\n                        console.log('Blur.', editor);\n                      }}\n                      onFocus={(event, editor) => {\n                        console.log('Focus.', editor);\n                      }}\n                    />\n                  </div>\n\n                  {/* <div style={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: 'space-between'\n\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%',\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleDateChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: '48%'\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdate={date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twithTime={true}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Select time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTimeChange} />\n\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div> */}\n                  <div\n                    style={{\n                      marginBottom: '15px',\n                    }}\n                  ></div>\n                  {/* \n\t\t\t\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Venue'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.venue}\n\t\t\t\t\t\t\t\t\t\t\t\tname='venue'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.venue && errors.venue) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['venue'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('venue');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\tlabel='Purchase Limit'\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.purchaseLimit}\n\t\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\t\tname='purchaseLimit'\n\t\t\t\t\t\t\t\t\t\t\t\tisError={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\n\t\t\t\t\t\t\t\t\t\t\t\terrorString={(touched.purchaseLimit && errors.purchaseLimit) ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addProductState.error['error']['purchaseLimit'])}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('purchaseLimit');\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n                </div>\n              </div>\n\n              <div className='addProductGridContainer__price'>\n                <div className='addProductGridContainer__item-header'>\n                  <h3>Products</h3>\n\n                  <div\n                    className={\n                      pricing && pricing.length > 0\n                        ? 'checkicon-active'\n                        : 'checkicon'\n                    }\n                  >\n                    <CheckCircleOutlined />\n                  </div>\n                </div>\n\n                <div className='addProductGridContainer__item-body'>\n                  <h3 className='inputFieldLabel'>Products</h3>\n                  <SelectProducts\n                    setProductIds={setProductIds}\n                    productIds={productIds}\n                  />\n\n                  <div\n                    style={{\n                      marginTop: '15px',\n                    }}\n                  ></div>\n\n                  <h3 className='inputFieldLabel'>Selcted Products</h3>\n\n                  <SelectedProductItems\n                    productList={productList}\n                    setProductList={setProductList}\n                  />\n                </div>\n              </div>\n\n              <div className='addProductGridContainer__image'>\n                <div className='addProductGridContainer__item-header'>\n                  <h3>Image</h3>\n\n                  <Tooltip\n                    placement='left'\n                    title={\n                      'Click on the image to select cover image, By default 1st image is selected as cover'\n                    }\n                  >\n                    <a href='###'>\n                      <InfoCircleOutlined />\n                    </a>\n                  </Tooltip>\n                </div>\n\n                <div\n                  style={{\n                    padding: '10px',\n                  }}\n                  className='aboutToUploadImagesContainer'\n                >\n                  {productDetailState.isLoading && (\n                    <div\n                      style={{\n                        padding: '20px 0',\n                      }}\n                    >\n                      <Spin />\n                    </div>\n                  )}\n                  {productDetailState.done && (\n                    <>\n                      {myImages &&\n                        // @ts-ignore\n                        myImages.length > 0 &&\n                        myImages.map((image, index) => {\n                          return (\n                            <div className='aboutToUploadImagesContainer__item'>\n                              <div\n                                className='aboutToUploadImagesContainer__item-imgContainer'\n                                onClick={() => {\n                                  setCoverImageId(image.id);\n                                  handleSetImageAsThumnail(image);\n                                }}\n                              >\n                                <img src={image.cover} alt={image.alt} />\n                              </div>\n\n                              <span\n                                onClick={() => {\n                                  handleImagesDelete(image.id);\n                                  handleDetachSingleImage(image.id);\n                                }}\n                                className='aboutToUploadImagesContainer__item-remove'\n                              >\n                                <CloseOutlined />\n                              </span>\n\n                              {coverImageId === image.id ? (\n                                <span className='aboutToUploadImagesContainer__item-cover'>\n                                  <CheckOutlined />\n                                </span>\n                              ) : (\n                                !coverImageId &&\n                                index === 0 && (\n                                  <span className='aboutToUploadImagesContainer__item-cover'>\n                                    <CheckOutlined />\n                                  </span>\n                                )\n                              )}\n                            </div>\n                          );\n                        })}\n\n                      <Tooltip title={'Attach images'}>\n                        <div\n                          onClick={() => {\n                            setvisible(true);\n                            setisModalOpenForImages(true);\n                            setisModalOpenForThumbnail(false);\n                          }}\n                          className='aboutToUploadImagesContainer__uploadItem'\n                        >\n                          {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                          <FileImageFilled />\n                          {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                          <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                            <PlusOutlined />\n                          </span>\n                        </div>\n                      </Tooltip>\n                    </>\n                  )}\n                </div>\n              </div>\n\n              <div className='addProductGridContainer__image'>\n                <div className='addProductGridContainer__item-header'>\n                  <h3>Meta Data</h3>\n\n                  <Tooltip\n                    placement='left'\n                    title={\n                      \"Meta data will be used to make the user's easy and for search engine optimization.\"\n                    }\n                  >\n                    <a href='###'>\n                      <InfoCircleOutlined />\n                    </a>\n                  </Tooltip>\n                </div>\n                <div className='addProductGridContainer__item-body'>\n                  <Input\n                    label='Meta title'\n                    value={values.metaTitle}\n                    placeHolder={'...'}\n                    name='metaTitle'\n                    isError={\n                      (touched.metaTitle && errors.metaTitle) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['metaTitle'])\n                    }\n                    errorString={\n                      (touched.metaTitle && errors.metaTitle) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['metaTitle'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('metaTitle');\n                    }}\n                  />\n\n                  <Input\n                    label='BN Meta title'\n                    value={values.bnMetaTitle}\n                    placeHolder={'...'}\n                    name='bnMetaTitle'\n                    isError={\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnMetaTitle'])\n                    }\n                    errorString={\n                      (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnMetaTitle'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnMetaTitle');\n                    }}\n                  />\n\n                  <TextArea\n                    label='Meta description'\n                    value={values.metaDescription}\n                    placeholder={'meta...'}\n                    name='metaDescription'\n                    isError={\n                      (touched.metaDescription && errors.metaDescription) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['metaDescription'])\n                    }\n                    errorString={\n                      (touched.metaDescription && errors.metaDescription) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['metaDescription'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('metaDescription');\n                    }}\n                  />\n\n                  <TextArea\n                    label='BN Meta Description'\n                    value={values.bnMetaDescription}\n                    placeholder={'এইয় মেট...'}\n                    name='bnMetaDescription'\n                    isError={\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnMetaDescription'])\n                    }\n                    errorString={\n                      (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                      (!isSubmitting &&\n                        addProductState.error['error']['bnMetaDescription'])\n                    }\n                    onChange={(e: any) => {\n                      handleChange(e);\n                      setFieldTouched('bnMetaDescription');\n                    }}\n                  />\n\n                  <h3 className='inputFieldLabel'>Meta Tags</h3>\n\n                  <MetaTags\n                    // @ts-ignore\n                    setTags={setMetaTags}\n                    tags={metaTags}\n                  />\n\n                  <div\n                    style={{\n                      marginTop: '15px',\n                    }}\n                  ></div>\n\n                  <h3 className='inputFieldLabel'>BN Meta Tags</h3>\n\n                  <MetaTags\n                    // @ts-ignore\n                    setTags={setBnMetaTags}\n                    tags={bnMetaTags}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className='addProductGridContainer__right'>\n              <div className='addProductGridContainer__category'>\n                <div className='addProductGridContainer-rightItemContainer'>\n                  <div className='addProductGridContainer-rightItemContainer-header'>\n                    <h3>Recipe Categories</h3>\n\n                    <Tooltip\n                      color='red'\n                      visible={\n                        addProductState.error['error']['category'] &&\n                        !(categoryids.length > 0)\n                      }\n                      placement='left'\n                      title={'Select at least one category'}\n                    >\n                      <div\n                        className={\n                          !(categoryids.length > 0) &&\n                          !addProductState.error['error']['category']\n                            ? 'checkicon'\n                            : addProductState.error['error']['category']\n                            ? 'checkicon-error'\n                            : 'checkicon-active'\n                        }\n                      >\n                        <CheckCircleOutlined />\n                      </div>\n                    </Tooltip>\n                  </div>\n                  <div className='addProductGridContainer-rightItemContainer-body'>\n                    <Categories\n                      setCategoryOptions={setCategoryOptions}\n                      categoryOptions={categoryOptions}\n                      setcategoryIds={setcategoryIds}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className='addProductGridContainer__tag'>\n                <div className='addProductGridContainer-rightItemContainer'>\n                  <div className='addProductGridContainer-rightItemContainer-header'>\n                    <h3>Recipe Tags</h3>\n                  </div>\n                  <div className='addProductGridContainer-rightItemContainer-body'>\n                    <Tags\n                      setSelectedTags={setSelectedTags}\n                      selectedTags={selectedTags}\n                      setTagIds={setTagIds}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <div\n            style={{\n              padding: '15px',\n              display: 'flex',\n              justifyContent: 'flex-end',\n            }}\n          >\n            <Button\n              style={{\n                color: '#555',\n                marginRight: '10px',\n              }}\n              className='btnPrimaryClassNameoutline-cancle'\n              onClick={() => setAddNewCategoryVisible(false)}\n              type='default'\n            >\n              Cancel\n            </Button>\n\n            <Button\n              className='btnPrimaryClassNameoutline'\n              onClick={handleSubmit}\n              loading={addProductState.isLoading}\n              type='link'\n              icon={<CheckOutlined />}\n            >\n              Update\n            </Button>\n          </div>\n\n          <MediaLibrary\n            setvisible={setvisible}\n            visible={visible}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            setmyThumbnailImage={setmyThumbnailImage}\n            isModalOpenForThumbnail={isModalOpenForThumbnail}\n            isModalOpenForImages={isModalOpenForImages}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nconst AddNewProduct = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  productDetailData,\n  setPostDetailData,\n}: Props) => {\n  const handleCancel = () => {\n    setAddNewCategoryVisible(false);\n  };\n  return (\n    <>\n      <Modal\n        style={{\n          top: '40px',\n        }}\n        footer={false}\n        bodyStyle={{\n          margin: 0,\n          padding: 0,\n        }}\n        width={'70vw'}\n        title='Edit Recipe'\n        visible={addNewCategoryVisible}\n        // onOk={(e: any) => handleSubmit(e)}\n        onCancel={handleCancel}\n        destroyOnClose={true}\n        okText='Update'\n        okButtonProps={{\n          // loading: isSubmitting,\n          htmlType: 'submit',\n        }}\n      >\n        <ModalComponentChild\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          setPostDetailData={setPostDetailData}\n          productDetailData={productDetailData}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default AddNewProduct;\n\n/*\n\n\nProduct variation ---->\n\nPrice [title]\n\t[regular input field] [offer inputfield]\n\nStock [title]\n\t[available input field] [minimum inputfield]\n\ndefault [default can be set to true]\n\nattributes [title]\n\t[add attributes name]\n\t\t[add attrubutes value]\n\n\t[add attributes name]\n\t\t[add attrubutes value\n\n*/ //\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n  Badge,\n} from 'antd';\n\n// import moment\nimport Moment from 'react-moment';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport ProductBundleEdit from './PostEdit';\nimport CouponProducts from '../coupon/CouponProducts';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n  productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n  const [productDetailState, handleProductDetailFetch] = useHandleFetch(\n    {},\n    'postDetail'\n  );\n  const [postDetailData, setPostDetailData] = useState({});\n  const params = useParams();\n  const history = useHistory();\n  const productId = params['id'];\n\n  const [productEditVisible, setProductEditVisible] = useState(false);\n\n  useEffect(() => {\n    const getProductDetail = async () => {\n      const res = await handleProductDetailFetch({\n        urlOptions: {\n          params: {\n            categoryOne: '1',\n            tagsOne: '1',\n            imageValue: '1',\n          },\n          placeHolders: {\n            id: productId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (res) {\n        // @ts-ignore\n        setPostDetailData(res);\n      }\n    };\n\n    getProductDetail();\n  }, [productId]);\n\n  console.log('productDetailState', productDetailState);\n\n  console.log('brandParams', params);\n\n  const getImagesInCollumn = (imgs) => {\n    if (!imgs[0]) return false;\n    imgs = imgs.map((item) => item.cover);\n    const columns = {};\n\n    let localIndex = 0;\n    let columnNumber = 0;\n\n    imgs.forEach((item, index) => {\n      if (localIndex < 3) {\n        if (columns[columnNumber]) {\n          columns[columnNumber] = [...columns[columnNumber], item];\n        } else columns[columnNumber] = [item];\n\n        localIndex = localIndex + 1;\n        columnNumber = columnNumber + 1;\n      } else {\n        localIndex = 0;\n        columnNumber = 0;\n        console.log('localIndex', localIndex);\n      }\n    });\n\n    return columns;\n  };\n\n  const row =\n    productDetailState.done && postDetailData && postDetailData['image']\n      ? getImagesInCollumn(postDetailData['image'])\n      : [];\n\n  console.log('postDetailState', productDetailState);\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Recipe Detail</h3>\n\n        {productDetailState.done &&\n          postDetailData &&\n          Object.keys(postDetailData).length > 0 && (\n            <>\n              <ProductBundleEdit\n                productDetailData={postDetailData}\n                addNewCategoryVisible={productEditVisible}\n                setAddNewCategoryVisible={setProductEditVisible}\n                setPostDetailData={setPostDetailData}\n              />\n              <Button\n                onClick={() => setProductEditVisible(true)}\n                type='link'\n                icon={<EditOutlined />}\n              >\n                Edit\n              </Button>\n            </>\n          )}\n      </div>\n      <Skeleton\n        avatar\n        paragraph={{ rows: 3 }}\n        loading={productDetailState.isLoading}\n      >\n        {productDetailState.done &&\n          postDetailData &&\n          !(Object.keys(postDetailData).length > 0) && (\n            <Empty\n              description='No Recipe found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {productDetailState.done &&\n          postDetailData &&\n          Object.keys(postDetailData).length > 0 && (\n            <>\n              <div className='brandDetailContainer__header'>\n                <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-product'>\n                  <img\n                    src={postDetailData['cover'] && postDetailData['cover']}\n                    alt=''\n                  />\n                </div>\n                <div className='brandDetailContainer__header-info'>\n                  <h2>{postDetailData['name']}</h2>\n                  <h4>{postDetailData['price']}</h4>\n                  <h3>{postDetailData['description']}</h3>\n\n                  {postDetailData['url'] && (\n                    <h3>\n                      URL:\n                      <span>{postDetailData['url']}</span>\n                    </h3>\n                  )}\n\n                  {postDetailData['preparationTime'] === 0 && (\n                    <h3>\n                      PREPARATION TIME:\n                      <span>{postDetailData['preparationTime']}</span>\n                    </h3>\n                  )}\n\n                  {postDetailData['cookingTime'] && (\n                    <h3>\n                      COOKING TIME:\n                      <span>{postDetailData['cookingTime']}</span>\n                    </h3>\n                  )}\n\n                  {postDetailData['servingSize'] && (\n                    <h3>\n                      PEOPLE:\n                      <span>{postDetailData['servingSize']}</span>\n                    </h3>\n                  )}\n                  {/* \n                                {postDetailData['tags'] && postDetailData['tags'].length > 0 &&\n                                    (<>\n                                        <h3>\n                                            TAGS:\n                                        {postDetailData['tags'].map(tag => {\n                                            return (\n                                                <span>\n                                                    {tag.name}\n                                                </span>\n                                            )\n                                        })}\n                                        </h3>\n\n                                    </>)\n                                } */}\n\n                  {postDetailData['category2'] &&\n                    postDetailData['category2'].length > 0 && (\n                      <>\n                        <h3>\n                          CATEGORIES:\n                          {postDetailData['category2'].map((cat) => {\n                            return (\n                              <span\n                                onClick={() =>\n                                  history.push(\n                                    `/admin/posts/category/${cat.id}`\n                                  )\n                                }\n                              >\n                                {cat.name}\n                              </span>\n                            );\n                          })}\n                        </h3>\n                      </>\n                    )}\n\n                  {postDetailData['tags'] && postDetailData['tags'].length > 0 && (\n                    <>\n                      <h3>\n                        TAGS:\n                        {postDetailData['tags'].map((cat) => {\n                          return (\n                            <span\n                              onClick={() =>\n                                history.push(`/admin/posts/tag/${cat._id}`)\n                              }\n                            >\n                              {cat.name}\n                            </span>\n                          );\n                        })}\n                      </h3>\n                    </>\n                  )}\n                </div>\n              </div>\n\n              {productDetailState.done &&\n                postDetailData &&\n                Object.keys(postDetailData).length > 0 &&\n                postDetailData['products'] &&\n                postDetailData['products'].length > 0 && (\n                  <div className='brandDetailContainer__heading'>\n                    <h3>Products</h3>\n                  </div>\n                )}\n\n              <div className='brandDetailContainer__body'>\n                {productDetailState.done &&\n                  postDetailData &&\n                  postDetailData['products'] &&\n                  !(postDetailData['products'].length > 0) && (\n                    <div\n                      style={{\n                        marginTop: '100px',\n                      }}\n                    >\n                      <Empty\n                        description='No Products exists for this Recipe'\n                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                      />\n                    </div>\n                  )}\n\n                {productDetailState.done &&\n                  postDetailData &&\n                  Object.keys(postDetailData).length > 0 && (\n                    <>\n                      {postDetailData['products'] &&\n                        postDetailData['products'].length > 0 &&\n                        postDetailData['products'].map((product) => {\n                          return (\n                            <CouponProducts\n                              quantity={product.quantity}\n                              productId={product['_id']}\n                            />\n                          );\n                        })}\n                    </>\n                  )}\n              </div>\n\n              {postDetailData['image'] && postDetailData['image'].length > 0 && (\n                <>\n                  <div className='brandDetailContainer__heading'>\n                    <h3>Image Gallary</h3>\n                  </div>\n\n                  <div className='brandDetailContainer__imageGallary'>\n                    <div className='imgGallaryContainer'>\n                      <div className='imgGallary-row'>\n                        {row &&\n                          Object.keys(row).map((column) => {\n                            return (\n                              <div className='imgGallary-column'>\n                                {row[column] &&\n                                  row[column].map((img) => {\n                                    return (\n                                      <img\n                                        src={img}\n                                        style={{\n                                          width: '100%',\n                                        }}\n                                      />\n                                    );\n                                  })}\n                              </div>\n                            );\n                          })}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div\n                    style={{\n                      marginBottom: '25px',\n                    }}\n                  ></div>\n                </>\n              )}\n            </>\n          )}\n      </Skeleton>\n    </div>\n  );\n};\n\nexport default NewBrandDetail;\n","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport MediaLibrary from '../../../components/MediaLibrary';\nimport MetaTags from '../../../pages/category/MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Recipe Tag Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagDetailData?: any;\n  tagList?: any;\n  setTagList?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  tagDetailData,\n  setTagList,\n  tagList,\n}: Props) => {\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postUpdateTag');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: values.description,\n        // metaTitle: values.metaTitle,\n        // metaDescription: values.metaDescription,\n        // metaTags: tags.join(','),\n\n        bn: {\n          //   metaTitle: values.bnMetaTitle,\n          //   metaDescription: values.bnMetaDescription,\n          //   metaTags: bnTags.join(','),\n          name: values.bnName.trim(),\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n\n      const positionInTag = () => {\n        return tagList.map((item) => item.id).indexOf(values.id);\n      };\n\n      const index = positionInTag();\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, tagList[index], {\n        ...tagDetailData,\n        // @ts-ignore\n        ...addTagRes,\n      });\n      const updateTagList = [\n        ...tagList.slice(0, index),\n        updatedItem,\n        ...tagList.slice(index + 1),\n      ];\n      setTagList(updateTagList);\n\n      setAddNewCategoryVisible(false);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...tagDetailData }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Edit Tag'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <Input\n              label='Name'\n              value={values.name}\n              name='name'\n              placeHolder={'new,fresh'}\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='BN Name'\n              value={values.bnName}\n              placeHolder={'নতুন,ফ্রেশ'}\n              name='bnName'\n              isError={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addTagState.error['error']['bnName'])\n              }\n              errorString={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addTagState.error['error']['bnName'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnName');\n              }}\n            />\n\n            <TextArea\n              label='Description'\n              value={values.description}\n              name='description'\n              placeholder={'This tag...'}\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting && addTagState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting && addTagState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n\n            <TextArea\n              label='BN Description'\n              value={values.bnDescription}\n              placeholder={'এই ট্যাগ...'}\n              name='bnDescription'\n              isError={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\n              }\n              errorString={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnDescription');\n              }}\n            />\n\n            {/* <Input\n              label='Meta title'\n              value={values.metaTitle}\n              placeHolder={'category...'}\n              name='metaTitle'\n              isError={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\n              }\n              errorString={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaTitle');\n              }}\n            />\n\n            <Input\n              label='BN Meta title'\n              value={values.bnMetaTitle}\n              placeHolder={'ক্যাটাগড়ি...'}\n              name='bnMetaTitle'\n              isError={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\n              }\n              errorString={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaTitle');\n              }}\n            />\n\n            <TextArea\n              label='Meta description'\n              value={values.metaDescription}\n              placeholder={'meta...'}\n              name='metaDescription'\n              isError={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\n              }\n              errorString={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaDescription');\n              }}\n            />\n\n            <TextArea\n              label='BN Meta Description'\n              value={values.bnMetaDescription}\n              placeholder={'এইয় মেট...'}\n              name='bnMetaDescription'\n              isError={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  addTagState.error['error']['bnMetaDescription'])\n              }\n              errorString={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  addTagState.error['error']['bnMetaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaDescription');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Meta Tags (grocery,fashion)</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setTags}\n              tags={tags}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>BN Meta Tags (মুদিখানা,ফ্যাশন)</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setBnTags}\n              tags={bnTags}\n            /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","// @ts-nocheck\nimport React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport MediaLibrary from '../../../components/MediaLibrary';\nimport MetaTags from '../../../pages/category/MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Recipe Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagList?: any;\n  setTagList?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  tagList,\n  setTagList,\n}: Props) => {\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postAddTag');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [coverImageId, setCoverImageId] = useState('');\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: values.description,\n        // metaTitle: values.metaTitle,\n        // metaDescription: values.metaDescription,\n        // metaTags: tags.join(','),\n\n        bn: {\n          //   metaTitle: values.bnMetaTitle,\n          //   metaDescription: values.bnMetaDescription,\n          //   metaTags: bnTags.join(','),\n          name: values.bnName.trim(),\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n      setAddNewCategoryVisible(false);\n\n      let newTagList = tagList || []; \n      console.log('errorTagList',newTagList); \n\n      setTagList([\n        ...newTagList,\n        {\n          // @ts-ignore\n          ...addTagRes,\n          id: addTagRes['_id'] || '',\n          key: addTagRes['_id'] || '',\n          name: addTagRes['name'] || '',\n          description: addTagRes['description'] || '',\n        },\n      ]);\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Add New Recipe Tag'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <Input\n              label='Name'\n              value={values.name}\n              name='name'\n              placeHolder={'new,fresh'}\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='BN Name'\n              value={values.bnName}\n              placeHolder={'নতুন,ফ্রেশ'}\n              name='bnName'\n              isError={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addTagState.error['error']['bnName'])\n              }\n              errorString={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addTagState.error['error']['bnName'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnName');\n              }}\n            />\n\n            <TextArea\n              label='Description'\n              value={values.description}\n              name='description'\n              placeholder={'This tag...'}\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting && addTagState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting && addTagState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n\n            <TextArea\n              label='BN Description'\n              value={values.bnDescription}\n              placeholder={'এই ট্যাগ...'}\n              name='bnDescription'\n              isError={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\n              }\n              errorString={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnDescription');\n              }}\n            />\n\n            {/* <Input\n\t\t\t\t\t\t\t\tlabel='Meta title'\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\n\t\t\t\t\t\t\t\tname='metaTitle'\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaTitle'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaTitle'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='Meta description'\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\n\t\t\t\t\t\t\t\tname='metaDescription'\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['metaDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['bnMetaDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<MetaTags\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tsetTags={setTags}\n\t\t\t\t\t\t\ttags={tags}\n\t\t\t\t\t\t\t />\n\n\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\tmarginTop:'15px'\n\t\t\t\t\t\t\t}}></div>\n\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<MetaTags\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tsetTags={setBnTags}\n\t\t\t\t\t\t\ttags={bnTags}\n\t\t\t\t\t\t\t /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport {\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../../hooks';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport { DataTableSkeleton } from '../../../components/Placeholders';\nimport QuickEdit from './QuickEdit';\nimport AddNewTag from './AddNewPostTag';\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Recipe Tag Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst MyTable = ({ data, setTagList }) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\n    {},\n    'postDeleteTag'\n  );\n\n  const history = useHistory();\n\n  const handleDeleteTag = async (id) => {\n    const deleteTagRes = await handleDeleteTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\n      openSuccessNotification('Deleted Recipe Tag');\n      const newtagList = data.filter((item) => item.id !== id);\n      setTagList(newtagList || []);\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/posts/tag/${record.id}`);\n                  // setBrandDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Description'\n          dataIndex='description'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <a href='##'>\n                <Tooltip placement='top' title='Edit Recipe tag'>\n                  <span\n                    className='iconSize'\n                    onClick={() => {\n                      setvisible(true);\n                      setactiveCategoryForEdit(record);\n                    }}\n                  >\n                    <EditOutlined />\n                  </span>\n                </Tooltip>\n              </a>\n\n              <Popconfirm\n                onConfirm={() => handleDeleteTag(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          tagList={data}\n          setTagList={setTagList}\n          setAddNewCategoryVisible={setvisible}\n          addNewCategoryVisible={visible}\n          tagDetailData={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {}\n\nconst TagList = ({}: Props) => {\n  const [tagList, setTagList] = useState([]);\n\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'postTagList');\n\n  console.log('recipetaglist', tagState);\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tags = await handleTagListFetch({});\n      // @ts-ignore\n      setTagList(tags);\n    };\n    setTags();\n  }, []);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const handleSearch = (value) => {\n    if (tagState.data.length > 0) {\n      const newTagList = tagState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setTagList(newTagList);\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar-tag'>\n            <h2 className='categoryListContainer__header-title'>Recipe Tags</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search recipe tags..'\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n          <Button\n            // type=\"primary\"\n            className='btnPrimaryClassNameoutline'\n            icon={<PlusOutlined />}\n            onClick={() => setAddNewCategoryVisible(true)}\n          >\n            Add New\n          </Button>\n        </div>\n        <div className='categoryListContainer__categoryList'>\n          {tagState.done && tagList.length > 0 && (\n            <MyTable setTagList={setTagList} data={tagList} />\n          )}\n          {tagState.isLoading && <DataTableSkeleton />}\n\n          {tagState.done && !(tagList.length > 0) && (\n            <div\n              style={{\n                marginTop: '200px',\n              }}\n            >\n              <Empty\n                description='No Recipe tags found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewTag\n        tagList={tagList}\n        setTagList={setTagList}\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n      />\n    </>\n  );\n};\n\nexport default TagList;\n","// @ts-nocheck\nimport React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport MediaLibrary from '../../../components/MediaLibrary';\nimport MetaTags from '../../../pages/category/MetaTags';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Recipe Tag Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  name: '',\n  bnName: '',\n  description: '',\n  bnDescription: '',\n  metaTitle: '',\n  bnMetaTitle: '',\n  metaDescription: '',\n  bnMetaDescription: '',\n  metaTags: '',\n  bnMetaTags: '',\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagDetailData?: any;\n  setTagDetailData?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  setTagDetailData,\n  tagDetailData,\n}: Props) => {\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'postUpdateTag');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [tags, setTags] = useState([]);\n  const [bnTags, setBnTags] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: values.description,\n        // metaTitle: values.metaTitle,\n        // metaDescription: values.metaDescription,\n        // metaTags: tags.join(','),\n\n        bn: {\n          //   metaTitle: values.bnMetaTitle,\n          //   metaDescription: values.bnMetaDescription,\n          //   metaTags: bnTags.join(','),\n          name: values.bnName.trim(),\n          description: values.bnDescription,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n      setAddNewCategoryVisible(false);\n      setTagDetailData({\n        ...tagDetailData,\n        // @ts-ignore\n        ...addTagRes,\n        name: addTagRes['name'] || '',\n        description: addTagRes['description'] || '',\n      });\n\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleImagesDelete = (id) => {\n    // @ts-ignore\n    const newImages =\n      myImages &&\n      myImages.filter((image) => {\n        return image.id !== id;\n      });\n\n    setmyImages(newImages);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...tagDetailData }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Edit Tag'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <Input\n              label='Name'\n              value={values.name}\n              name='name'\n              placeHolder={'new,fresh'}\n              isError={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              errorString={\n                (touched.name && errors.name) ||\n                (!isSubmitting && addTagState.error['error']['name'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('name');\n              }}\n            />\n\n            <Input\n              label='BN Name'\n              value={values.bnName}\n              placeHolder={'নতুন,ফ্রেশ'}\n              name='bnName'\n              isError={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addTagState.error['error']['bnName'])\n              }\n              errorString={\n                (touched.bnName && errors.bnName) ||\n                (!isSubmitting && addTagState.error['error']['bnName'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnName');\n              }}\n            />\n\n            <TextArea\n              label='Description'\n              value={values.description}\n              name='description'\n              placeholder={'This tag...'}\n              isError={\n                (touched.description && errors.description) ||\n                (!isSubmitting && addTagState.error['error']['description'])\n              }\n              errorString={\n                (touched.description && errors.description) ||\n                (!isSubmitting && addTagState.error['error']['description'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('description');\n              }}\n            />\n\n            <TextArea\n              label='BN Description'\n              value={values.bnDescription}\n              placeholder={'এই ট্যাগ...'}\n              name='bnDescription'\n              isError={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\n              }\n              errorString={\n                (touched.bnDescription && errors.bnDescription) ||\n                (!isSubmitting && addTagState.error['error']['bnDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnDescription');\n              }}\n            />\n\n            {/* <Input\n              label='Meta title'\n              value={values.metaTitle}\n              placeHolder={'category...'}\n              name='metaTitle'\n              isError={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\n              }\n              errorString={\n                (touched.metaTitle && errors.metaTitle) ||\n                (!isSubmitting && addTagState.error['error']['metaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaTitle');\n              }}\n            />\n\n            <Input\n              label='BN Meta title'\n              value={values.bnMetaTitle}\n              placeHolder={'ক্যাটাগড়ি...'}\n              name='bnMetaTitle'\n              isError={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\n              }\n              errorString={\n                (touched.bnMetaTitle && errors.bnMetaTitle) ||\n                (!isSubmitting && addTagState.error['error']['bnMetaTitle'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaTitle');\n              }}\n            />\n\n            <TextArea\n              label='Meta description'\n              value={values.metaDescription}\n              placeholder={'meta...'}\n              name='metaDescription'\n              isError={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\n              }\n              errorString={\n                (touched.metaDescription && errors.metaDescription) ||\n                (!isSubmitting && addTagState.error['error']['metaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('metaDescription');\n              }}\n            />\n\n            <TextArea\n              label='BN Meta Description'\n              value={values.bnMetaDescription}\n              placeholder={'এইয় মেট...'}\n              name='bnMetaDescription'\n              isError={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  addTagState.error['error']['bnMetaDescription'])\n              }\n              errorString={\n                (touched.bnMetaDescription && errors.bnMetaDescription) ||\n                (!isSubmitting &&\n                  addTagState.error['error']['bnMetaDescription'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('bnMetaDescription');\n              }}\n            />\n\n            <h3 className='inputFieldLabel'>Meta Tags (grocery,fashion)</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setTags}\n              tags={tags}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h3 className='inputFieldLabel'>BN Meta Tags (মুদিখানা,ফ্যাশন)</h3>\n\n            <MetaTags\n              // @ts-ignore\n              setTags={setBnTags}\n              tags={bnTags}\n            /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../../hooks\";\n\n// import lib\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\n\n\n// import components\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\nimport TagEdit from \"./TagEdit\";\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\ninterface Props {\n    productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n    const [tagDetailState, handleTagDetailFetch] = useHandleFetch({}, 'postTagDetail');\n    const [tagProductsState, handleTagProductsFetch] = useHandleFetch({}, 'tagPostList');\n    const [tagEditVisible, setTagEditVisible] = useState(false);\n    const [tagDetailData,setTagDetailData] = useState({}); \n\n    \n\n    const params = useParams();\n    const history = useHistory();\n    const tagId = params['id'];\n\n    useEffect(() => {\n\n        const getBrandDetail = async () => {\n            const tagDetailRes =  await handleTagDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: tagId\n                    }\n                }\n            }); \n\n            // @ts-ignore\n            if(tagDetailRes){\n                console.log('tagDetailRes',tagDetailRes);\n                // @ts-ignore\n                setTagDetailData(tagDetailRes);\n            }\n        };\n\n        getBrandDetail();\n\n    }, [tagId]);\n\n    useEffect(() => {\n        const getTagProducts = async () => {\n            await handleTagProductsFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: tagId\n                    }\n                }\n            })\n        };\n\n        getTagProducts();\n\n    }, [tagId]);\n\n\n\n\n    console.log('tagProductsState', tagProductsState);\n\n    console.log('brandParams', params);\n\n\n    return (\n        <div className='brandDetailContainer'>\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Recipe Tag Detail\n                </h3>\n\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\n                    <>\n                        <TagEdit\n                            addNewCategoryVisible={tagEditVisible}\n                            setAddNewCategoryVisible={setTagEditVisible}\n                            tagDetailData={tagDetailData}\n                            setTagDetailData={setTagDetailData}\n                        />\n                        <Button\n                            onClick={() => setTagEditVisible(true)}\n                            type='link'\n                            icon={<EditOutlined />}\n                        >\n                            Edit\n                      </Button>\n                    </>\n                )}\n            </div>\n            <Skeleton\n                paragraph={{ rows: 2 }}\n                loading={tagDetailState.isLoading}>\n                {tagDetailState.done && tagDetailData && !(Object.keys(tagDetailData).length > 0) && (\n                    <Empty description='No Recipe Tag found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                )}\n\n                {tagDetailState.done && tagDetailData && (Object.keys(tagDetailData).length > 0) && (\n                    <div className='brandDetailContainer__header'>\n\n                        <div className='brandDetailContainer__header-info'>\n                            <h2>\n                                {tagDetailData['name']}\n                            </h2>\n                            <h3>\n                                {tagDetailData['description']}\n                            </h3>\n                            {tagDetailData['url'] && (\n                                <h3>\n                                    URL:\n                                    <span>\n                                        {tagDetailData['url']}\n                                    </span>\n\n                                </h3>\n                            )}\n                        </div>\n                    </div>\n                )}\n\n            </Skeleton>\n\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Recipes \n                </h3>\n            </div>\n            <div className='brandDetailContainer__body'>\n                {tagProductsState.isLoading && <DataTableSkeleton />}\n                \n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No Recipes found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\n                    <>\n                        <Table\n                            style={{\n                                paddingTop: '10px',\n                                borderRadius: '5px !important',\n                                overflow: 'hidden',\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\n                            }}\n                            // expandable={{\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\n                            //   }}\n                            // bordered={true}\n                            size='small'\n                            // pagination={false}\n                            dataSource={tagProductsState.data}\n                            tableLayout={'auto'}\n                            onHeaderRow={column => {\n                                return {\n                                    style: {\n                                        color: 'red !important'\n                                    }\n\n                                };\n                            }}\n                        >\n                            <Column\n                                title=\"\"\n                                dataIndex=\"cover\"\n                                key=\"id\"\n                                width={'80px'}\n\n                                className='classnameofthecolumn'\n\n                                render={(cover, record: any) => (\n                                    <>\n                                        <img\n                                            onClick={() => {\n                                                history.push(`/admin/posts/${record.id}`)\n                                            }}\n                                            src={cover} alt='cover img' style={{\n                                                height: '40px',\n                                                width: '40px',\n                                                objectFit: \"contain\",\n                                                borderRadius: '3px',\n                                                cursor: 'pointer'\n                                            }} />\n\n\n\n\n                                    </>\n                                )}\n                            />\n\n                            <Column\n                                title=\"Name\"\n                                dataIndex=\"name\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n                                render={(text, record: any) => (\n                                    <>\n                                        <h4\n                                            onClick={() => {\n                                                history.push(`/admin/posts/${record.id}`)\n                                            }}\n                                            style={{\n                                                fontWeight: 400,\n                                                color: '#555',\n                                                cursor: 'pointer'\n\n                                            }}>\n                                            {text}\n                                        </h4>\n\n\n                                    </>\n                                )}\n\n                            />\n\n                            <Column\n                                title=\"Offer Price\"\n                                dataIndex=\"offerPrice\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n\n                            <Column\n                                title=\"Price\"\n                                dataIndex=\"price\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n\n                            <Column\n                                title=\"Available\"\n                                dataIndex=\"available\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n\n                            <Column\n                                title=\"Minimum\"\n                                dataIndex=\"minimum\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n                        </Table>\n                    </>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default NewBrandDetail\n","// @ts-nocheck\nimport React,{useEffect, useState} from 'react'; \nimport { Tag, Input, Tooltip } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nclass MetaTags extends React.Component {\n  state = {\n    tags: [],\n    inputVisible: false,\n    inputValue: '',\n    editInputIndex: -1,\n    editInputValue: '',\n  };\n\n\n\n  handleClose = removedTag => {\n    const {setTags,tags} = this.props;\n    const localTags = tags.filter(tag => tag !== removedTag);\n    setTags(localTags);\n  };\n\n  showInput = () => {\n    this.setState({ inputVisible: true }, () => this.input.focus());\n  };\n\n  handleInputChange = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleInputConfirm = () => {\n      console.log('handleInputConfirm',this.props);\n    const { inputValue } = this.state;\n    let { tags, setTags } = this.props;\n    if (inputValue && tags && tags.indexOf(inputValue) === -1) {\n      tags = [...tags, inputValue];\n    }\n    setTags(tags);\n    this.setState({\n      inputVisible: false,\n      inputValue: '',\n    });\n  };\n\n  handleEditInputChange = e => {\n    this.setState({ editInputValue: e.target.value });\n    console.log('tagValue',e.target.value);\n  };\n\n  handleEditInputConfirm = () => {\n    this.setState(({ editInputIndex, editInputValue }) => {\n      return {\n        editInputIndex: -1,\n        editInputValue: '',\n      };\n    });\n\n    const newTags = [...this.props.tags];\n    newTags[editInputIndex] = editInputValue;\n    this.props.setTags(newTags);\n  };\n\n  saveInputRef = input => {\n    this.input = input;\n  };\n\n  saveEditInputRef = input => {\n    this.editInput = input;\n  };\n\n\n\n  render() {\n    const { inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\n    const { placeholder,tags } = this.props;\n\n    return (\n      <>\n        {tags && tags.length > 0 && tags.map((tag, index) => {\n          if (editInputIndex === index) {\n            return (\n              <Input\n                ref={this.saveEditInputRef}\n                key={tag}\n                size=\"small\"\n                placeholder={placeholder}\n                className=\"tag-input\"\n                value={editInputValue}\n                onChange={this.handleEditInputChange}\n                onBlur={this.handleEditInputConfirm}\n                onPressEnter={this.handleEditInputConfirm}\n              />\n            );\n          }\n\n          const isLongTag = tag.length > 20;\n\n          const tagElem = (\n            <Tag\n              className=\"edit-tag\"\n              key={tag}\n              closable={index !== 0}\n              onClose={() => this.handleClose(tag)}\n            >\n              <span\n                onDoubleClick={e => {\n                  if (index !== 0) {\n                    this.setState({ editInputIndex: index, editInputValue: tag }, () => {\n                      this.editInput.focus();\n                    });\n                    e.preventDefault();\n                  }\n                }}\n              >\n                {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n              </span>\n            </Tag>\n          );\n          return isLongTag ? (\n            <Tooltip title={tag} key={tag}>\n              {tagElem}\n            </Tooltip>\n          ) : (\n            tagElem\n          );\n        })}\n        {inputVisible && (\n          <Input\n          style={{\n            margin: \"10px 0\"\n          }}\n            ref={this.saveInputRef}\n            type=\"text\"\n            size=\"small\"\n            className=\"tag-input\"\n            value={inputValue}\n            onChange={this.handleInputChange}\n            onBlur={this.handleInputConfirm}\n            onPressEnter={this.handleInputConfirm}\n          />\n        )}\n        {!inputVisible && (\n          <Tag className=\"site-tag-plus edit-tag\" onClick={this.showInput}>\n            <PlusOutlined /> New Value\n          </Tag>\n        )}\n      </>\n    );\n  }\n}\n\nexport default MetaTags","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport { useHandleFetch } from '../../../hooks';\n// import third party ui lib\nimport { Select, notification, Modal, Tooltip, Upload, message, Spin } from 'antd';\n\nimport {\n\tDeleteOutlined,\n\tFileAddOutlined,\n\tFileImageFilled,\n\tPlusOutlined,\n\tCheckCircleOutlined,\n\tCloseOutlined,\n\tCheckOutlined,\n\tInfoCircleOutlined,\n\tLoadingOutlined\n} from '@ant-design/icons';\n\n\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport MediaLibrary from \"../../../components/MediaLibrary\";\nimport MetaTags from \"./MetaTags\";\n\n\n\n\nconst validationSchema = Yup.object().shape({\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n\tnotification.success({\n\t\tmessage: message || 'Category Updated',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n\t});\n};\n\n\nconst openErrorNotification = (message?: any) => {\n\tnotification.error({\n\t\tmessage: message || 'Something Went Wrong',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n\t});\n};\n\n\n\n\n\nconst initialValues = {\n\tname: '',\n\tbnName: '',\n\tdescription: '',\n\tbnDescription: '',\n\tmetaTitle: '',\n\tbnMetaTitle: '',\n\tmetaDescription: '',\n\tbnMetaDescription: '',\n\tmetaTags: '',\n\tbnMetaTags: '',\n\timage: [],\n\turl: '',\n\tcover: '',\n\tdisplayOrder: '',\n}\n\nconst { Option } = Select;\n\ninterface Props {\n\taddNewCategoryVisible: any;\n\tsetAddNewCategoryVisible: any;\n    categoryDetailData?:any; \n\tsetcategoryList?:any; \n\tcategoryList?:any; \n}\n\nconst AddNewCategory = ({ \n    addNewCategoryVisible, \n    setAddNewCategoryVisible, \n    categoryDetailData, setcategoryList, categoryList }: Props) => {\n\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postCategoryUpdate');\n\tconst [updateCategoryIconState, handleUpdateCategoryIconFetch] = useHandleFetch({}, 'categoryUpdateIcon');\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n\tconst [visible, setvisible] = useState(false);\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n\tconst [selectedParentId, setselectedParentId] = useState('');\n\tconst [imageUrl, setImageUrl] = useState('');\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\n\tconst [imageFile, setImagefile] = useState('');\n\tconst [tags,setTags] = useState([]);\n\tconst [bnTags,setBnTags] = useState([]);\n\tconst [myImages, setmyImages] = useState(false);\n    const [coverImageId, setCoverImageId] = useState('');\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\n\t\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\n\n\n\tuseEffect(() => {\n\n        const getCategoryDetail = async () => {\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: categoryDetailData.id\n                    }\n                }\n            }); \n        };\n\n        getCategoryDetail();\n\n    }, [categoryDetailData]);\n\n\n\tconsole.log('MahPostCategory',categoryDetailState)\n\tconsole.log('MahPostCategorymyImages',myImages)\n\n\tuseEffect(() => {\n\t\tif (categoryDetailState.done && categoryDetailState.data && Object.keys(categoryDetailState.data).length > 0) {\n\t\n\t\t\tconst images = categoryDetailState.data.image;\n\t\t\tlet mahImages = []; \n\n\t\t\tif (images && images.length > 0) {\n\t\t\t\tmahImages = images;\n\t\t\t}\n\t\n\t\t\tif (categoryDetailState.data.cover && categoryDetailState.data.cover['id']) {\n\t\t\t\tconst ixists = images.find(item => item.id === categoryDetailState.data.cover['id']);\n\t\t\t\tif(!ixists){\n\t\t\t\t\tmahImages = [categoryDetailState.data.cover, ...mahImages]\n\t\t\t\t}\n\n\t\t\t\tsetCoverImageId(categoryDetailState.data.cover['id']);\n\t\t\t}\n\t\n\t\t\t\t// @ts-ignore\n\t\t\t\tsetmyImages(mahImages);\n\t\t\t\t\n\t\t}\n\t}, [categoryDetailState.data]); \n\t\n\t\n\tuseEffect(() => {\n\t\t// @ts-ignore\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\n\t\n\t\t\tif (coverImageId !== myImages[0].id) {\n\t\t\t\tsetCoverImageId(myImages[0].id);\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\n\t\t\t}\n\t\n\t\t}\n\t\n\t}, [myImages])\n\t\n\n\n\n\n\tconst handleSubmit = async (values: any, actions: any) => {\n\t\t// @ts-ignore\n\t\tconst imagesIds = myImages ? myImages.map(image => {\n\t\t\treturn image.id;\n\t\t}) : [];\n\n\t\tconst formData = new FormData();\n\n\t\tformData.append(\"name\", values.name.trim());\n\t\tformData.append(\"description\", values.description);\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\n\t\tformData.append(\"parent\", selectedParentId);\n\t\tformData.append('displayOrder', values.displayOrder)\n\n\n\t\tconsole.log('categoryDetailData',categoryDetailData); \n\t\tconsole.log('imagesIds',imagesIds); \n\t\t\n\t\t\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n\t\t\tconst aboutToUpdatedImageIds = []; \n\n\t\t\tif(imagesIds && imagesIds.length > 0){\n\t\t\t\timagesIds.forEach(imageId => {\n\t\t\t\t\tif(categoryDetailData && categoryDetailData['postCategory']){\n\t\t\t\t\t\tif(!categoryDetailData['image'].includes(imageId)){\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n      \n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n                await handleAttachImageToItemMultipleFetch({\n                    urlOptions: {\n                        placeHolders: {\n                            collection: 'postCategory',\n                            itemId: categoryDetailData.id\n                        }\n                    },\n                    body: {\n                        image: aboutToUpdatedImageIds\n                    }\n                });\n            }\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\n                await handleAttachImageToItemSingleFetch({\n                    urlOptions: {\n                        placeHolders: {\n                            imageId: aboutToUpdatedImageIds[0].id,\n                            collection: 'postCategory',\n                            itemId: categoryDetailData.id\n                        }\n                    }\n                });\n            }\n\t\t}\n\t\t\n\n\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: categoryDetailData.id\n                },\n            },\n            body: {\n                name: values.name && values.name.trim(),\n                description: values.description,\n                image: imagesIds,\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n                parent: selectedParentId,\n                icon: imageFile,\n                metaTitle: values.metaTitle,\n\t\t\t\tmetaDescription: values.metaDescription,\n\t\t\t\tdisplayOrder: values.displayOrder,\n                metaTags:  tags && tags.length > 0 ?  tags.join(',') : '',\n                bn: {\n                    metaTitle: values.bnMetaTitle,\n                    metaDescription: values.bnMetaDescription,\n\t\t\t\t\tmetaTags:  bnTags && bnTags.length > 0 ?  bnTags.join(',') : '',\n                    name: values.bnName && values.bnName.trim(),\n                    description: values.bnDescription,\n                }\n            },\n\t\t});\n\n\t\t// @ts-ignore\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\n\t\t\topenSuccessNotification('Category Updated!');\n\t\t\tsetAddNewCategoryVisible(false)\n\n\t\t\t// setcategoryList([{\n\t\t\t// \tid: addCategoryRes['_id'] || '',\n\t\t\t// \tkey: addCategoryRes['_id'] || '',\n\t\t\t// \tname: addCategoryRes['name'] || '',\n\t\t\t// \tdescription: addCategoryRes['description'] || '',\n\t\t\t// \tcover: addCategoryRes['cover'] || '',\n\t\t\t// \t// @ts-ignore\n\t\t\t// \t...addCategoryRes\n\t\t\t// },...categoryList]); \n\n\t\t\t\n\n            // setcategoryDetailData({\n\t\t\t// \t...categoryDetailData,\n\t\t\t// \t...addCategoryRes\n            // }); \n\n        \n\t\t\tactions.resetForm();\n\t\t\t// @ts-ignore\n\t\t\tsetmyImages([]);\n\t\t\tsetCoverImageId('')\n\t\t\tsetselectedParentId('')\n\t\t\tsetImageUrl('');\n\t\t}\n\t\telse {\n\t\t\topenErrorNotification();\n\t\t}\n\n\t\tactions.setSubmitting(false);\n\t};\n\n\n\n    const handleDetachSingleImage = async id => {\n        await handleDetachImageFromItemSingleFetch({\n            urlOptions: {\n                placeHolders: {\n                    imageId: id,\n                    collection: 'postCategory',\n                    itemId: categoryDetailData.id\n                }\n            }\n        });\n    }\n\n\n\n    const handleSetImageAsThumnail = async image => {\n\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n            urlOptions: {\n                placeHolders: {\n                    imageId: image.id,\n                    collection: 'postCategory',\n                    itemId: categoryDetailData.id\n                }\n            }\n        });\n\n\n        // @ts-ignore\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\n            openSuccessNotification('Set as thumbnail!')\n            // const positionInBrand = () => {\n            //     return brandList.map(item => item.id).indexOf(categoryDetailData.id);\n            // }\n\n            // const index = positionInBrand();\n\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\n\n            // if (prevItem) {\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\n            //     setBrandList(updateBrandList);\n            // }\n        }\n        else {\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\n        }\n\n    }\n\n\n\n    \n    const handleImagesDelete = (id) => {\n        // @ts-ignore\n        const newImages = myImages && myImages.filter(image => {\n            return image.id !== id;\n        })\n\n        setmyImages(newImages);\n    }\n\n\n\n\tconst handleCancel = (e: any) => {\n\t\tsetAddNewCategoryVisible(false);\n\t};\n\n\n\n\n\n\n\tfunction getBase64(img, callback) {\n\t\tconst reader = new FileReader();\n\t\treader.addEventListener('load', () => callback(reader.result));\n\t\treader.readAsDataURL(img);\n\t}\n\n\n\tfunction beforeUpload(file) {\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\t\tif (!isJpgOrPng) {\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\n\t\t}\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\n\t\tif (!isLt2M) {\n\t\t\tmessage.error('Image must smaller than 2MB!');\n\t\t}\n\n\n\t\tgetBase64(file, imageUrl => {\n\t\t\tsetImageUrl(imageUrl)\n\t\t\tsetImagefile(file)\n\t\t\tconst setNewIcon  = async () => {\n\t\t\t\tconst formData = new FormData();\n\t\t\t\tformData.append('icon',file); \n\t\t\t\t// const addCategoryRes = await handleAddCategoryFetch({\n\t\t\t\t// \tbody: formData,\n\t\t\t\t// });\n\t\t\t\tconst res = await handleUpdateCategoryIconFetch({\n\t\t\t\t\turlOptions: {\n\t\t\t\t\t\tplaceHolders: {\n\t\t\t\t\t\t\tid: categoryDetailData.id\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t\tbody: formData\n\t\t\t\t}); \n\n\t\t\t\t// @ts-ignore\n\t\t\t\tif(res && res.status === 'ok'){\n\t\t\t\t\topenSuccessNotification('Category Icon updated!')\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\topenErrorNotification(\"Couldn't update category icon, Something went wrong\")\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t}; \n\t\t\t\n\t\t\tsetNewIcon();\n\t\t\tsetLoadingThumbnail(false)\n\t\t})\n\n\t\treturn false;\n\t}\n\n\n\n\tconst uploadButton = (\n\t\t<div>\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\n\t\t</div>\n\t);\n\n\n\n\tuseEffect(()=>{\n\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\n            const iconUrl = categoryDetailData.icon && categoryDetailData.icon; \n\n\t\t\tsetImageUrl(iconUrl); \n        }\n\n    },[])\n    \n    useEffect(()=>{\n\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\n            const metaTags = categoryDetailData.metaTags && categoryDetailData.metaTags.split(','); \n\n            console.log('localMetaTags',metaTags);\n           \n            const bnMetaTags = categoryDetailData.bn && categoryDetailData.bn['metaTags'] && categoryDetailData.bn['metaTags'].split(','); \n            setTags(metaTags || [])\n            setBnTags(bnMetaTags || [])\n        }\n\n    },[])\n\n\n\tconsole.log('addnewCategoryTags',tags);\n\tconsole.log('categoryDetailData',categoryDetailData);\n\tconsole.log('myImages',myImages);\n\n\treturn (\n\t\t<Formik\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tvalidateOnBlur={false}\n\t\t\tenableReinitialize={true}\n\t\t\tinitialValues={\n                \n                { ...initialValues,\n                    ...categoryDetailData,\n                    ...( categoryDetailData && Object.keys(categoryDetailData).length > 0 && {\n                        bnMetaTitle: categoryDetailData['bn']\n                        && categoryDetailData['bn'].metaTitle\n                        && categoryDetailData['bn'].metaTitle,\n                        bnMetaDescription: categoryDetailData['bn'] &&  categoryDetailData['bn'].metaDescription && categoryDetailData['bn'].metaDescription,\n                        bnName: categoryDetailData['bn'] && categoryDetailData['bn'].name && categoryDetailData['bn'].name,\n                        bnDescription: categoryDetailData['bn'] && categoryDetailData['bn'].description && categoryDetailData['bn'].description,\n                    })\n                 }\n\t\t\t}\n\t\t>\n\t\t\t{({\n\t\t\t\thandleChange,\n\t\t\t\tvalues,\n\t\t\t\thandleSubmit,\n\t\t\t\terrors,\n\t\t\t\tisValid,\n\t\t\t\tisSubmitting,\n\t\t\t\ttouched,\n\t\t\t\thandleBlur,\n\t\t\t\tsetFieldTouched,\n\t\t\t\thandleReset,\n\t\t\t}) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttop: '40px'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\n\t\t\t\t\t\t\tonCancel={handleCancel}\n\t\t\t\t\t\t\tokText='Update'\n\t\t\t\t\t\t\tokButtonProps={{\n\t\t\t\t\t\t\t\tloading: isSubmitting,\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='BN Name'\n\t\t\t\t\t\t\t\tvalue={values.bnName}\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\n\t\t\t\t\t\t\t\tname='bnName'\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='Description'\n\t\t\t\t\t\t\t\tvalue={values.description}\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\n\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='BN Description'\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\n\t\t\t\t\t\t\t\tname='bnDescription'\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\n\n\n\t\t\t\t\t<div className='addproductSection-left-header'\n\n                                style={{\n                                    marginBottom: '-5px'\n                                }}\n                            >\n                                <h3 className='inputFieldLabel'>Images</h3>\n\t\t\t\t\t\t\t\t\t\t\t{/* <div  >\n\t\t\t\t\t\t\t\t\t\t<FileOutlined />\n\t\t\t\t\t\t\t\t\t\t<span>Media Center</span>\n\t\t\t\t\t\t\t\t\t\t</div> */}\n                            </div>\n\n\n\t\t\t\t\t\t\t<div\n                                            style={{\n                                                padding: \"10px\"\n                                            }}\n                                            className='aboutToUploadImagesContainer'>\n                                            {categoryDetailState.isLoading && (\n                                                <div style={{\n                                                    padding: '20px 0'\n                                                }}>\n                                                    <Spin />\n                                                </div>\n                                            )}\n                                            {categoryDetailState.done && (\n                                                <>\n                                                    {myImages &&\n                                                        // @ts-ignore\n                                                        myImages.length > 0 && myImages.map((image, index) => {\n                                                            return (\n                                                                <div className='aboutToUploadImagesContainer__item'>\n                                                                    <div\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\n                                                                        onClick={() => {\n                                                                            setCoverImageId(image.id);\n                                                                            handleSetImageAsThumnail(image);\n                                                                        }}\n                                                                    >\n                                                                        <img src={image.cover} alt={image.alt} />\n                                                                    </div>\n\n                                                                    <span\n                                                                        onClick={() => {\n                                                                            handleImagesDelete(image.id)\n                                                                            handleDetachSingleImage(image.id)\n                                                                        }\n\n                                                                        }\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\n                                                                        <CloseOutlined />\n                                                                    </span>\n\n\n                                                                    {coverImageId === image.id ? (\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\n                                                                            <CheckOutlined />\n                                                                        </span>\n                                                                    ) : !coverImageId && index === 0 && (\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\n                                                                            <CheckOutlined />\n                                                                        </span>\n                                                                    )}\n\n\n                                                                </div>\n                                                            )\n                                                        })}\n\n\n                                                    <Tooltip\n                                                        title={'Attach images'}>\n\n                                                        <div\n                                                            onClick={() => {\n                                                                setvisible(true);\n                                                                setisModalOpenForImages(true);\n                                                                setisModalOpenForThumbnail(false);\n                                                            }}\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\n                                                            {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                                                            <FileImageFilled />\n                                                            {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                                                <PlusOutlined />\n                                                            </span>\n                                                        </div>\n                                                    </Tooltip>\n                                                </>\n                                            )}\n\n                                        </div>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Meta title'\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\n\t\t\t\t\t\t\t\tname='metaTitle'\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='Meta description'\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\n\t\t\t\t\t\t\t\tname='metaDescription'\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<MetaTags\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tsetTags={setTags}\n\t\t\t\t\t\t\ttags={tags}\n\t\t\t\t\t\t\t />\n\n\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\tmarginTop:'15px'\n\t\t\t\t\t\t\t}}></div>\n\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<MetaTags\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tsetTags={setBnTags}\n\t\t\t\t\t\t\ttags={bnTags}\n\t\t\t\t\t\t\t />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Modal>\n\n\t\t\t\t\t\t<MediaLibrary\n\t\t\t\t\t\t\tsetvisible={setvisible}\n\t\t\t\t\t\t\tvisible={visible}\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\n\t\t\t\t\t\t\tmyImages={myImages}\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\n\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</Formik>\n\n\t);\n};\n\nexport default AddNewCategory;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport { useHandleFetch } from '../../../hooks';\nimport config from '../../../config.json';\n// import third party ui lib\nimport { Switch, Select, notification, Modal, Tooltip, Upload, message, } from 'antd';\n\nimport {\n\tDeleteOutlined,\n\tFileAddOutlined,\n\tFileImageFilled,\n\tPlusOutlined,\n\tCheckCircleOutlined,\n\tCloseOutlined,\n\tCheckOutlined,\n\tInfoCircleOutlined,\n\tLoadingOutlined\n} from '@ant-design/icons';\n\n\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport MediaLibrary from \"../../../components/MediaLibrary\";\nimport MetaTags from \"./MetaTags\";\n\n\n\n\nconst validationSchema = Yup.object().shape({\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n\tnotification.success({\n\t\tmessage: message || 'Recipe Category Created',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n\t});\n};\n\n\nconst openErrorNotification = (message?: any) => {\n\tnotification.error({\n\t\tmessage: message || 'Something Went Wrong',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n\t});\n};\n\n\n\n\n\nconst initialValues = {\n\tname: '',\n\tbnName: '',\n\tdescription: '',\n\tbnDescription: '',\n\tmetaTitle: '',\n\tbnMetaTitle: '',\n\tmetaDescription: '',\n\tbnMetaDescription: '',\n\tmetaTags: '',\n\tbnMetaTags: '',\n\timage: [],\n\turl: '',\n\tcover: '',\n\tdisplayOrder: null,\n}\n\nconst { Option } = Select;\n\ninterface Props {\n\taddNewCategoryVisible: any;\n\tsetAddNewCategoryVisible: any;\n\tcategoryList?: any;\n\tsetcategoryList?: any;\n}\n\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, categoryList, setcategoryList }: Props) => {\n\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postAddCategory','form');\n\tconst [visible, setvisible] = useState(false);\n\tconst [myImages, setmyImages] = useState(false);\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n\tconst [coverImageId, setCoverImageId] = useState('');\n\tconst [selectedParentId, setselectedParentId] = useState('');\n\tconst [imageUrl, setImageUrl] = useState('');\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\n\tconst [imageFile, setImagefile] = useState('');\n\tconst [tags,setTags] = useState([]);\n\tconst [bnTags,setBnTags] = useState([]);\n\n\n\tconst handleSubmit = async (values: any, actions: any) => {\n\t\t// @ts-ignore\n\t\tconst imagesIds = myImages ? myImages.map(image => {\n\t\t\treturn image.id;\n\t\t}) : [];\n\n\t\tconst formData = new FormData();\n\n\t\tconst bn = {\n\t\t\tmetaTitle: values.bnMetaTitle,\n\t\t\tmetaDescription: values.bnMetaDescription,\n\t\t\tmetaTags: bnTags.join(','),\n\t\t\tname: values.bnName.trim(),\n\t\t\tdescription: values.bnDescription,\n\t\t}; \n\n\t\tformData.append(\"name\", values.name.trim());\n\t\tformData.append(\"description\", values.description);\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\n\t\tformData.append(\"parent\", selectedParentId);\n\t\t// formData.append('icon', imageFile)\n\t\tformData.append('metaTitle', values.metaTitle)\n\t\tformData.append('displayOrder', values.displayOrder)\n\t\tformData.append('metaDescription', values.metaDescription)\n\t\tformData.append('metaTags', values.metaTags)\n\n\n\n\t\tconst bnData = JSON.stringify(bn);\n\t\tconst bnFormData = new FormData();\n\t\tbnFormData.append(\"bn\",bnData);\n\n\n\n\t\tformData.append('bn', bnFormData.get('bn'))\n\n\n\n\n\t\tconsole.log('addcategoryREsBody',{\n\t\t\t...formData,\n\t\t\t// ...bnFormData\n\t\t}); \n\n\n\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\n\t\t\tbody: formData,\n\t\t});\n\n\n\t\tconsole.log('adddPostCategoryREs',addCategoryRes)\n\t\t// @ts-ignore\n\t\tif (addCategoryRes && addCategoryRes[0] && addCategoryRes[0].name) {\n\t\t\topenSuccessNotification('Recipe Category Created!');\n\t\t\tsetAddNewCategoryVisible(false)\n\n\t\t\tsetcategoryList([{\n\t\t\t\t// @ts-ignore\n\t\t\t\t...addCategoryRes[0],\n\t\t\t\tid: addCategoryRes[0]['_id'] || '',\n\t\t\t\tkey: addCategoryRes[0]['_id'] || '',\n\t\t\t\tname: addCategoryRes[0]['name'] || '',\n\t\t\t\tdescription: addCategoryRes[0]['description'] || '',\n\t\t\t\tcover: addCategoryRes[0].cover\n\t\t\t\t? `${config['baseURL']}${\n\t\t\t\t\taddCategoryRes[0].cover ? addCategoryRes[0].cover.thumbnail : ''\n\t\t\t\t  }`\n\t\t\t\t: '',\n\t\t\t},...categoryList])\n\n\t\t\tactions.resetForm();\n\t\t\t// @ts-ignore\n\t\t\tsetmyImages([]);\n\t\t\tsetCoverImageId('')\n\t\t\tsetselectedParentId('')\n\t\t\tsetisparentcategoryChecked(true);\n\t\t\tsetImageUrl('');\n\t\t}\n\t\telse {\n\t\t\topenErrorNotification();\n\t\t}\n\n\n\n\n\t\tactions.setSubmitting(false);\n\t};\n\n\n\n\tconsole.log('addCategoryState',addCategoryState)\n\n\t\n\tuseEffect(() => {\n\t\tif (!addCategoryState['isLoading']) {\n\t\t\tconst error = addCategoryState['error'];\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\n\t\t\t\tconst errors =\n\t\t\t\t\tObject.values(error['error']).length > 0\n\t\t\t\t\t\t? Object.values(error['error'])\n\t\t\t\t\t\t: [];\n\t\t\t\terrors.forEach((err, i) => {\n\t\t\t\t\tif (typeof err === 'string') {\n\t\t\t\t\t\topenErrorNotification(err)\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof err === 'object') {\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\n\t\t\t\t\t\t\tconst errs = Object.values(err);\n\t\t\t\t\t\t\terrs.forEach(err => {\n\t\t\t\t\t\t\t\topenErrorNotification(err)\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [addCategoryState])\n\n\n\n\n\n\tconst onSwitchChange = (checked: any) => {\n\t\tsetisparentcategoryChecked(checked)\n\t};\n\n\n\tconst handleCancel = (e: any) => {\n\t\tsetAddNewCategoryVisible(false);\n\t};\n\n\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\n\t\tif (!values.name || !isValid) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\n\tconst handleImagesDelete = (id) => {\n\t\t// @ts-ignore\n\t\tconst newImages = myImages && myImages.filter(image => {\n\t\t\treturn image.id !== id;\n\t\t})\n\n\t\tsetmyImages(newImages);\n\t}\n\n\n\tconst handleThumbnailImageDelete = (id) => {\n\t\t// @ts-ignore\n\t\tconst newImages = myThumbnailImage && myThumbnailImage.filter(image => {\n\t\t\treturn image.id !== id;\n\t\t})\n\n\t\tif (newImages.length > 0) {\n\t\t\tsetmyThumbnailImage(newImages);\n\n\t\t}\n\t\telse setmyThumbnailImage(false);\n\t}\n\n\n\tconst onChangeSelect = (value) => {\n\t\tsetselectedParentId(value);\n\t}\n\n\n\n\tfunction getBase64(img, callback) {\n\t\tconst reader = new FileReader();\n\t\treader.addEventListener('load', () => callback(reader.result));\n\t\treader.readAsDataURL(img);\n\t}\n\n\n\tfunction beforeUpload(file) {\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\t\tif (!isJpgOrPng) {\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\n\t\t}\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\n\t\tif (!isLt2M) {\n\t\t\tmessage.error('Image must smaller than 2MB!');\n\t\t}\n\n\n\t\tgetBase64(file, imageUrl => {\n\t\t\tsetImageUrl(imageUrl)\n\t\t\tsetImagefile(file)\n\t\t\tsetLoadingThumbnail(false)\n\t\t})\n\n\t\treturn false;\n\t}\n\n\n\tconst uploadButton = (\n\t\t<div>\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\n\t\t</div>\n\t);\n\n\n\n\treturn (\n\t\t<Formik\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tvalidateOnBlur={false}\n\t\t\tenableReinitialize={true}\n\t\t\tinitialValues={\n\t\t\t\t{ ...initialValues }\n\t\t\t}\n\t\t>\n\t\t\t{({\n\t\t\t\thandleChange,\n\t\t\t\tvalues,\n\t\t\t\thandleSubmit,\n\t\t\t\terrors,\n\t\t\t\tisValid,\n\t\t\t\tisSubmitting,\n\t\t\t\ttouched,\n\t\t\t\thandleBlur,\n\t\t\t\tsetFieldTouched,\n\t\t\t\thandleReset,\n\t\t\t}) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttop: '40px'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttitle=\"Add New Category\"\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\n\t\t\t\t\t\t\tonCancel={handleCancel}\n\t\t\t\t\t\t\tokText='Create'\n\t\t\t\t\t\t\tokButtonProps={{\n\t\t\t\t\t\t\t\tloading: isSubmitting,\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='BN Name'\n\t\t\t\t\t\t\t\tvalue={values.bnName}\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\n\t\t\t\t\t\t\t\tname='bnName'\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='Description'\n\t\t\t\t\t\t\t\tvalue={values.description}\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\n\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='BN Description'\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\n\t\t\t\t\t\t\t\tname='bnDescription'\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n{/* \n<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Display Order'\n\t\t\t\t\t\t\t\t\t\tvalue={values.displayOrder}\n\t\t\t\t\t\t\t\t\t\tplaceHolder={'1,3,7'}\n\t\t\t\t\t\t\t\t\t\tname='displayOrder'\n\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.displayOrder && errors.displayOrder) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.displayOrder && errors.displayOrder) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['displayOrder'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('displayOrder');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t */}\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t\t{/* <div className='addproductSection-left-header' >\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Icon </h3>\n\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Add Icon image for this category'}>\n\t\t\t\t\t\t\t\t\t<a href='###'>\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<Upload\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tborderRadius: \"8px\"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tname=\"avatar\"\n\t\t\t\t\t\t\t\tlistType=\"picture-card\"\n\t\t\t\t\t\t\t\tclassName=\"avatar-uploader\"\n\t\t\t\t\t\t\t\tshowUploadList={false}\n\t\t\t\t\t\t\t\tbeforeUpload={beforeUpload}\n\t\t\t\t\t\t\t\tmultiple={false}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n\t\t\t\t\t\t\t</Upload> */}\n\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t\t<div className='addproductSection-left-header' style={{\n\t\t\t\t\t\t\t\tmarginBottom: '-5px'\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>Images</h3>\n\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\tplacement=\"left\" title={'Click on the image to select cover image, By default 1st image is selected as cover'}>\n\t\t\t\t\t\t\t\t\t<a href='###'>\n\t\t\t\t\t\t\t\t\t\t<InfoCircleOutlined />\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer'>\n\t\t\t\t\t\t\t\t{myImages &&\n\t\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\t\tmyImages.length > 0 && myImages.map((image, index) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<div className='aboutToUploadImagesContainer__item'>\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-imgContainer'\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setCoverImageId(image.id)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img src={image.cover} alt={image.alt} />\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleImagesDelete(image.id)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__item-remove'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t{coverImageId === image.id ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t) : !coverImageId && index === 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__item-cover'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\n\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})}\n\n\n\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\ttitle={'Attach images'}>\n\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetvisible(true);\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForImages(true);\n\t\t\t\t\t\t\t\t\t\t\tsetisModalOpenForThumbnail(false);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tclassName='aboutToUploadImagesContainer__uploadItem'>\n\t\t\t\t\t\t\t\t\t\t{/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n\t\t\t\t\t\t\t\t\t\t<FileImageFilled />\n\t\t\t\t\t\t\t\t\t\t{/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n\t\t\t\t\t\t\t\t\t\t<span className='aboutToUploadImagesContainer__uploadItem-plus'>\n\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Meta title'\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\n\t\t\t\t\t\t\t\tname='metaTitle'\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='Meta description'\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\n\t\t\t\t\t\t\t\tname='metaDescription'\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<MetaTags\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tsetTags={setTags}\n\t\t\t\t\t\t\ttags={tags}\n\t\t\t\t\t\t\t />\n\n\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\tmarginTop:'15px'\n\t\t\t\t\t\t\t}}></div>\n\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<MetaTags\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tsetTags={setBnTags}\n\t\t\t\t\t\t\ttags={bnTags}\n\t\t\t\t\t\t\t />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Modal>\n\n\t\t\t\t\t\t<MediaLibrary\n\t\t\t\t\t\t\tsetvisible={setvisible}\n\t\t\t\t\t\t\tvisible={visible}\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\n\t\t\t\t\t\t\tmyImages={myImages}\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\n\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</Formik>\n\n\n\n\n\t);\n};\n\nexport default AddNewCategory;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Table,\n  notification,\n  Space,\n  Tag,\n  Button,\n  Input,\n  Tooltip,\n  Popconfirm,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\n\nimport QuickEdit from './QuickEdit';\nimport AddNewPostCategory from './AddNewPostCategory';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../../components/Placeholders';\nimport Empty from '../../../components/Empty';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Post Recipe Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setcategoryList?: any;\n  history?: any;\n}\n\nconst MyTable = ({ data, setcategoryList, history }: myTableProps) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteCategoryState, handleDeleteCategoryFetch] = useHandleFetch(\n    {},\n    'postCategoryDelete'\n  );\n  // console.log('activeCategoryForEdit',activeCategoryForEdit);\n\n  const handleDeleteCategory = async (id) => {\n    const deleteCategoryRes = await handleDeleteCategoryFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteCategoryRes && deleteCategoryRes.status === 'ok') {\n      openSuccessNotification('Deleted Recipe Category');\n      const newCategoryList = data.filter((item) => item.id !== id);\n      setcategoryList(newCategoryList);\n    }\n  };\n\n  const getCover = (record: any) => {\n    if (record.cover) {\n      return record.cover;\n    } else return '';\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title=''\n          dataIndex='cover'\n          key='id'\n          width={'80px'}\n          className='classnameofthecolumn'\n          render={(cover, record: any) => (\n            <>\n              <div\n                className='listCoverImage'\n                onClick={() => {\n                  history.push(`/admin/posts/category/${record.id}`);\n                  setactiveCategoryForEdit(record);\n                }}\n              >\n                <img src={getCover(record)} alt='' />\n              </div>\n            </>\n          )}\n        />\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/posts/category/${record.id}`);\n                  // setcategoryDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        {/* <Column\n           title=\"Description\" \n           dataIndex=\"description\" \n           key=\"id\" \n           className='classnameofthecolumn'\n         \n            /> */}\n\n        {/* <Column\n           title=\"Sub Cateogory\" \n           dataIndex=\"subCount\" \n           key=\"id\" \n           className='classnameofthecolumn'\n         \n            /> */}\n\n        <Column\n          title='Recipes'\n          dataIndex='productCount'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <a href='##'>\n                <Tooltip placement='top' title='Edit Category'>\n                  <span\n                    className='iconSize'\n                    onClick={() => {\n                      setvisible(true);\n                      setactiveCategoryForEdit(record);\n                    }}\n                  >\n                    <EditOutlined />\n                  </span>\n                </Tooltip>\n              </a>\n\n              <Popconfirm\n                onConfirm={() => handleDeleteCategory(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          setcategoryList={setcategoryList}\n          categoryList={data}\n          setAddNewCategoryVisible={setvisible}\n          addNewCategoryVisible={visible}\n          categoryDetailData={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  history: any;\n}\n\nconst CategoryList = ({ history }: Props) => {\n  const [categoryState, handleCategoryListFetch] = useHandleFetch(\n    {},\n    'postCategoryList'\n  );\n  const [categoryList, setcategoryList] = useState([]);\n\n  useEffect(() => {\n    const setCategories = async () => {\n      const categories = await handleCategoryListFetch({\n        urlOptions: {\n          params: {\n            isSubCategory: true,\n            productCountValue: true,\n          },\n        },\n      });\n      // @ts-ignore\n      setcategoryList(categories);\n    };\n    setCategories();\n  }, []);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  // console.log('categoryState',categoryState);\n\n  const handleSearch = (value) => {\n    if (categoryState.data.length > 0) {\n      const newCategoryList = categoryState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setcategoryList(newCategoryList);\n    }\n  };\n\n  console.log('postCategoryList', categoryState);\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>\n              Recipe Categories\n            </h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search recipe categories..'\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n          <Button\n            // type=\"primary\"\n            className='btnPrimaryClassNameoutline'\n            icon={<PlusOutlined />}\n            onClick={() => setAddNewCategoryVisible(true)}\n          >\n            Add New\n          </Button>\n        </div>\n\n        <div className='categoryListContainer__afterHeader'>\n          {/* <Search\n                placeholder=\"search categories..\"\n                size=\"large\"\n                onSearch={value => console.log(value)}\n                style={{ width: 300 }}\n           /> */}\n        </div>\n\n        <div className='categoryListContainer__categoryList'>\n          {categoryState.done && categoryList.length > 0 && (\n            <MyTable\n              history={history}\n              setcategoryList={setcategoryList}\n              data={categoryList}\n            />\n          )}\n          {categoryState.isLoading && <DataTableSkeleton />}\n\n          {categoryState.done && !(categoryList.length > 0) && (\n            <div\n              style={{\n                marginTop: '50px',\n              }}\n            >\n              <Empty title='No Recipe Category found' />\n            </div>\n          )}\n        </div>\n      </div>\n\n      {categoryState.done && (\n        <AddNewPostCategory\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          categoryList={categoryList}\n          setcategoryList={setcategoryList}\n        />\n      )}\n    </>\n  );\n};\n\nexport default withRouter(CategoryList);\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport { useHandleFetch } from '../../../hooks';\n// import third party ui lib\nimport { Select, notification, Modal, Tooltip, Upload, message, Spin } from 'antd';\n\nimport {\n  FileImageFilled,\n  PlusOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  LoadingOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\n\n\n\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport MediaLibrary from \"../../../components/MediaLibrary\";\nimport MetaTags from \"./MetaTags\";\n\n\n\n\nconst validationSchema = Yup.object().shape({\n\t// name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n\tnotification.success({\n\t\tmessage: message || 'Category Updated',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n\t});\n};\n\n\nconst openErrorNotification = (message?: any) => {\n\tnotification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\n\n\n\n\nconst initialValues = {\n\tname: '',\n\tbnName: '',\n\tdescription: '',\n\tbnDescription: '',\n\tmetaTitle: '',\n\tbnMetaTitle: '',\n\tmetaDescription: '',\n\tbnMetaDescription: '',\n\tmetaTags: '',\n\tbnMetaTags: '',\n\timage: [],\n\turl: '',\n\tcover: '',\n\tdisplayOrder: '',\n}\n\nconst { Option } = Select;\n\ninterface Props {\n\taddNewCategoryVisible: any;\n\tsetAddNewCategoryVisible: any;\n\tsetcategoryDetailData?:any; \n    categoryDetailData?:any; \n}\n\nconst AddNewCategory = ({ \n    addNewCategoryVisible, \n    setAddNewCategoryVisible, \n    categoryDetailData, setcategoryDetailData}: Props) => {\n\n\tconst [addCategoryState, handleAddCategoryFetch] = useHandleFetch({}, 'postCategoryUpdate');\n\tconst [updateCategoryIconState, handleUpdateCategoryIconFetch] = useHandleFetch({}, 'categoryUpdateIcon');\n\tconst [attachImageToItemMultipleState, handleAttachImageToItemMultipleFetch] = useHandleFetch({}, 'attachImageToItemMultiple');\n    const [attachImageToItemSingleState, handleAttachImageToItemSingleFetch] = useHandleFetch({}, 'attachImageToItemSingle');\n    const [detachImageFromItemMultipleState, handleDetachImageFromItemMultipleFetch] = useHandleFetch({}, 'detachImageFromItemMultiple');\n    const [detachImageFromItemSingleState, handleDetachImageFromItemSingleFetch] = useHandleFetch({}, 'detachImageFromItemSingle');\n    const [setImageAsThumbnailToItemState, handleSetImageAsThumbnailToItemFetch] = useHandleFetch({}, 'setImageAsThumbnailToItem');\n\n\tconst [visible, setvisible] = useState(false);\n\tconst [myThumbnailImage, setmyThumbnailImage] = useState(false);\n\tconst [isparentCategoryChecked, setisparentcategoryChecked] = useState(true);\n\tconst [isModalOpenForThumbnail, setisModalOpenForThumbnail] = useState(false);\n\tconst [isModalOpenForImages, setisModalOpenForImages] = useState(false);\n\tconst [selectedParentId, setselectedParentId] = useState('');\n\tconst [imageUrl, setImageUrl] = useState('');\n\tconst [loadingThumnail, setLoadingThumbnail] = useState(false);\n\tconst [imageFile, setImagefile] = useState('');\n\tconst [tags,setTags] = useState([]);\n\tconst [bnTags,setBnTags] = useState([]);\n\tconst [myImages, setmyImages] = useState(false);\n    const [coverImageId, setCoverImageId] = useState('');\n\tconst [myGoddamnImages, setMyGoddamnImages] = useState([]);\n\t\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\n\n\n\tuseEffect(() => {\n\n        const getCategoryDetail = async () => {\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: categoryDetailData.id\n                    }\n                }\n            }); \n        };\n\n        getCategoryDetail();\n\n    }, [categoryDetailData]);\n\n\n\tconsole.log('MahPostCategory',categoryDetailState)\n\tconsole.log('MahPostCategorymyImages',myImages)\n\n\tuseEffect(() => {\n\t\tif (categoryDetailState.done && categoryDetailState.data && Object.keys(categoryDetailState.data).length > 0) {\n\t\n\t\t\tconst images = categoryDetailState.data.image;\n\t\t\tlet mahImages = []; \n\n\t\t\tif (images && images.length > 0) {\n\t\t\t\tmahImages = images;\n\t\t\t}\n\t\n\t\t\tif (categoryDetailState.data.cover && categoryDetailState.data.cover['id']) {\n\t\t\t\tconst ixists = images.find(item => item.id === categoryDetailState.data.cover['id']);\n\t\t\t\tif(!ixists){\n\t\t\t\t\tmahImages = [categoryDetailState.data.cover, ...mahImages]\n\t\t\t\t}\n\n\t\t\t\tsetCoverImageId(categoryDetailState.data.cover['id']);\n\t\t\t}\n\t\n\t\t\t\t// @ts-ignore\n\t\t\t\tsetmyImages(mahImages);\n\t\t\t\t\n\t\t}\n\t}, [categoryDetailState.data]); \n\t\n\t\n\tuseEffect(() => {\n\t\t// @ts-ignore\n\t\tif (myImages && myImages[0] && myImages.length < 2) {\n\t\n\t\t\tif (coverImageId !== myImages[0].id) {\n\t\t\t\tsetCoverImageId(myImages[0].id);\n\t\t\t\thandleSetImageAsThumnail(myImages[0]);\n\t\t\t}\n\t\n\t\t}\n\t\n\t}, [myImages])\n\t\n\n\n\n\n\tconst handleSubmit = async (values: any, actions: any) => {\n\t\t// @ts-ignore\n\t\tconst imagesIds = myImages ? myImages.map(image => {\n\t\t\treturn image.id;\n\t\t}) : [];\n\n\t\tconst formData = new FormData();\n\n\t\tformData.append(\"name\", values.name.trim());\n\t\tformData.append(\"description\", values.description);\n\t\tformData.append(\"image\", JSON.stringify(imagesIds));\n\t\tformData.append(\"cover\", coverImageId || imagesIds[0] ? imagesIds[0] : '');\n\t\tformData.append(\"parent\", selectedParentId);\n\t\tformData.append('displayOrder', values.displayOrder)\n\n\n\t\tconsole.log('categoryDetailData',categoryDetailData); \n\t\tconsole.log('imagesIds',imagesIds); \n\t\t\n\t\t\n\t\tif (categoryDetailData && Object.keys(categoryDetailData).length > 0) {\n\t\t\tconst aboutToUpdatedImageIds = []; \n\n\t\t\tif(imagesIds && imagesIds.length > 0){\n\t\t\t\timagesIds.forEach(imageId => {\n\t\t\t\t\tif(categoryDetailData && categoryDetailData['postCategory']){\n\t\t\t\t\t\tif(!categoryDetailData['image'].includes(imageId)){\n\t\t\t\t\t\t\taboutToUpdatedImageIds.push(imageId)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n      \n            if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length > 1) {\n                await handleAttachImageToItemMultipleFetch({\n                    urlOptions: {\n                        placeHolders: {\n                            collection: 'postCategory',\n                            itemId: categoryDetailData.id\n                        }\n                    },\n                    body: {\n                        image: aboutToUpdatedImageIds\n                    }\n                });\n            }\n            else if (aboutToUpdatedImageIds[0] && aboutToUpdatedImageIds.length < 1) {\n                await handleAttachImageToItemSingleFetch({\n                    urlOptions: {\n                        placeHolders: {\n                            imageId: aboutToUpdatedImageIds[0].id,\n                            collection: 'postCategory',\n                            itemId: categoryDetailData.id\n                        }\n                    }\n                });\n            }\n\t\t}\n\t\t\n\n\n\t\tconst addCategoryRes = await handleAddCategoryFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: categoryDetailData.id\n                },\n            },\n            body: {\n                name: values.name && values.name.trim(),\n                description: values.description,\n                image: imagesIds,\n                cover: coverImageId || imagesIds[0] ? imagesIds[0] : '',\n                parent: selectedParentId,\n                icon: imageFile,\n                metaTitle: values.metaTitle,\n\t\t\t\tmetaDescription: values.metaDescription,\n\t\t\t\tdisplayOrder: values.displayOrder,\n                metaTags:  tags && tags.length > 0 ?  tags.join(',') : '',\n                bn: {\n                    metaTitle: values.bnMetaTitle,\n                    metaDescription: values.bnMetaDescription,\n\t\t\t\t\tmetaTags:  bnTags && bnTags.length > 0 ?  bnTags.join(',') : '',\n                    name: values.bnName && values.bnName.trim(),\n                    description: values.bnDescription,\n                }\n            },\n\t\t});\n\n\t\t// @ts-ignore\n\t\tif (addCategoryRes && addCategoryRes.status === 'ok') {\n\t\t\topenSuccessNotification('Category Updated!');\n\t\t\tsetAddNewCategoryVisible(false)\n\n\t\t\tsetcategoryDetailData({\n\t\t\t\t...categoryDetailData,\n\t\t\t\t// @ts-ignore\n\t\t\t\t...addCategoryRes,\n\t\t\t});\n\t  \n\t\t\tactions.resetForm();\n\t\t\t// @ts-ignore\n\t\t\n\t\t}\n\t\telse {\n\t\t\topenErrorNotification();\n\t\t}\n\n\t\tactions.setSubmitting(false);\n\t};\n\n\n\n    const handleDetachSingleImage = async id => {\n        await handleDetachImageFromItemSingleFetch({\n            urlOptions: {\n                placeHolders: {\n                    imageId: id,\n                    collection: 'postCategory',\n                    itemId: categoryDetailData.id\n                }\n            }\n        });\n    }\n\n\n\n    const handleSetImageAsThumnail = async image => {\n\n        const thumbnailRes = await handleSetImageAsThumbnailToItemFetch({\n            urlOptions: {\n                placeHolders: {\n                    imageId: image.id,\n                    collection: 'postCategory',\n                    itemId: categoryDetailData.id\n                }\n            }\n        });\n\n\n        // @ts-ignore\n        if (thumbnailRes && thumbnailRes.status === 'ok') {\n            openSuccessNotification('Set as thumbnail!')\n            // const positionInBrand = () => {\n            //     return brandList.map(item => item.id).indexOf(categoryDetailData.id);\n            // }\n\n            // const index = positionInBrand();\n\n            // const prevItem = brandList.find(item => item.id === productRecord.id);\n\n            // if (prevItem) {\n            //     const updatedItem = Object.assign({}, brandList[index], { ...prevItem, cover: image.cover });\n            //     const updateBrandList = [...brandList.slice(0, index), updatedItem, ...brandList.slice(index + 1)];\n            //     setBrandList(updateBrandList);\n            // }\n        }\n        else {\n            openErrorNotification(\"Couldn't set as thumbnail, Something went wrong\")\n        }\n\n    }\n\n\n\n    \n    const handleImagesDelete = (id) => {\n        // @ts-ignore\n        const newImages = myImages && myImages.filter(image => {\n            return image.id !== id;\n        })\n\n        setmyImages(newImages);\n    }\n\n\n\n\tconst handleCancel = (e: any) => {\n\t\tsetAddNewCategoryVisible(false);\n\t};\n\n\n\n\n\n\n\tfunction getBase64(img, callback) {\n\t\tconst reader = new FileReader();\n\t\treader.addEventListener('load', () => callback(reader.result));\n\t\treader.readAsDataURL(img);\n\t}\n\n\n\tfunction beforeUpload(file) {\n\t\tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\t\tif (!isJpgOrPng) {\n\t\t\tmessage.error('You can only upload JPG/PNG file!');\n\t\t}\n\t\tconst isLt2M = file.size / 1024 / 1024 < 2;\n\t\tif (!isLt2M) {\n\t\t\tmessage.error('Image must smaller than 2MB!');\n\t\t}\n\n\n\t\tgetBase64(file, imageUrl => {\n\t\t\tsetImageUrl(imageUrl)\n\t\t\tsetImagefile(file)\n\t\t\tconst setNewIcon  = async () => {\n\t\t\t\tconst formData = new FormData();\n\t\t\t\tformData.append('icon',file); \n\t\t\t\t// const addCategoryRes = await handleAddCategoryFetch({\n\t\t\t\t// \tbody: formData,\n\t\t\t\t// });\n\t\t\t\tconst res = await handleUpdateCategoryIconFetch({\n\t\t\t\t\turlOptions: {\n\t\t\t\t\t\tplaceHolders: {\n\t\t\t\t\t\t\tid: categoryDetailData.id\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t\tbody: formData\n\t\t\t\t}); \n\n\t\t\t\t// @ts-ignore\n\t\t\t\tif(res && res.status === 'ok'){\n\t\t\t\t\topenSuccessNotification('Category Icon updated!')\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\topenErrorNotification(\"Couldn't update category icon, Something went wrong\")\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t}; \n\t\t\t\n\t\t\tsetNewIcon();\n\t\t\tsetLoadingThumbnail(false)\n\t\t})\n\n\t\treturn false;\n\t}\n\n\n\n\tconst uploadButton = (\n\t\t<div>\n\t\t\t{loadingThumnail ? <LoadingOutlined /> : <PlusOutlined />}\n\t\t\t<div className=\"ant-upload-text\">Upload</div>\n\t\t</div>\n\t);\n\n\n\n\tuseEffect(()=>{\n\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\n            const iconUrl = categoryDetailData.icon && categoryDetailData.icon; \n\n\t\t\tsetImageUrl(iconUrl); \n        }\n\n    },[])\n    \n    useEffect(()=>{\n\n        if(categoryDetailData && Object.keys(categoryDetailData).length > 0){\n            const metaTags = categoryDetailData.metaTags && categoryDetailData.metaTags.split(','); \n\n            console.log('localMetaTags',metaTags);\n           \n            const bnMetaTags = categoryDetailData.bn && categoryDetailData.bn['metaTags'] && categoryDetailData.bn['metaTags'].split(','); \n            setTags(metaTags || [])\n            setBnTags(bnMetaTags || [])\n        }\n\n    },[])\n\n\n\tconsole.log('addnewCategoryTags',tags);\n\tconsole.log('categoryDetailData',categoryDetailData);\n\tconsole.log('myImages',myImages);\n\n\treturn (\n\t\t<Formik\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tvalidateOnBlur={false}\n\t\t\tenableReinitialize={true}\n\t\t\tinitialValues={\n                \n                { ...initialValues,\n                    ...categoryDetailData,\n                    ...( categoryDetailData && Object.keys(categoryDetailData).length > 0 && {\n                        bnMetaTitle: categoryDetailData['bn']\n                        && categoryDetailData['bn'].metaTitle\n                        && categoryDetailData['bn'].metaTitle,\n                        bnMetaDescription: categoryDetailData['bn'] &&  categoryDetailData['bn'].metaDescription && categoryDetailData['bn'].metaDescription,\n                        bnName: categoryDetailData['bn'] && categoryDetailData['bn'].name && categoryDetailData['bn'].name,\n                        bnDescription: categoryDetailData['bn'] && categoryDetailData['bn'].description && categoryDetailData['bn'].description,\n                    })\n                 }\n\t\t\t}\n\t\t>\n\t\t\t{({\n\t\t\t\thandleChange,\n\t\t\t\tvalues,\n\t\t\t\thandleSubmit,\n\t\t\t\terrors,\n\t\t\t\tisValid,\n\t\t\t\tisSubmitting,\n\t\t\t\ttouched,\n\t\t\t\thandleBlur,\n\t\t\t\tsetFieldTouched,\n\t\t\t\thandleReset,\n\t\t\t}) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttop: '40px'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttitle=\"Edit Category\"\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\n\t\t\t\t\t\t\tonCancel={handleCancel}\n\t\t\t\t\t\t\tokText='Update'\n\t\t\t\t\t\t\tokButtonProps={{\n\t\t\t\t\t\t\t\tloading: isSubmitting,\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\tplaceHolder={'grocery,fashion'}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['name'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='BN Name'\n\t\t\t\t\t\t\t\tvalue={values.bnName}\n\t\t\t\t\t\t\t\tplaceHolder={'মুদিখানা,ফ্যাশন'}\n\t\t\t\t\t\t\t\tname='bnName'\n\t\t\t\t\t\t\t\tisError={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnName && errors.bnName) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnName'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnName');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='Description'\n\t\t\t\t\t\t\t\tvalue={values.description}\n\t\t\t\t\t\t\t\tplaceholder={'This category...'}\n\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\tisError={(touched.description && errors.description) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.description && errors.description) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['description'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('description');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='BN Description'\n\t\t\t\t\t\t\t\tvalue={values.bnDescription}\n\t\t\t\t\t\t\t\tplaceholder={'এই ক্যাটাগড়ি...'}\n\t\t\t\t\t\t\t\tname='bnDescription'\n\t\t\t\t\t\t\t\tisError={(touched.bnDescription && errors.bnDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnDescription && errors.bnDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginTop: '20px'\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\n\n\n\t\t\t\t\t<div className='addproductSection-left-header'\n\n                                style={{\n                                    marginBottom: '-5px'\n                                }}\n                            >\n                                <h3 className='inputFieldLabel'>Images</h3>\n\t\t\t\t\t\t\t\t\t\t\t{/* <div  >\n\t\t\t\t\t\t\t\t\t\t<FileOutlined />\n\t\t\t\t\t\t\t\t\t\t<span>Media Center</span>\n\t\t\t\t\t\t\t\t\t\t</div> */}\n                            </div>\n\n\n\t\t\t\t\t\t\t<div\n                                            style={{\n                                                padding: \"10px\"\n                                            }}\n                                            className='aboutToUploadImagesContainer'>\n                                            {categoryDetailState.isLoading && (\n                                                <div style={{\n                                                    padding: '20px 0'\n                                                }}>\n                                                    <Spin />\n                                                </div>\n                                            )}\n                                            {categoryDetailState.done && (\n                                                <>\n                                                    {myImages &&\n                                                        // @ts-ignore\n                                                        myImages.length > 0 && myImages.map((image, index) => {\n                                                            return (\n                                                                <div className='aboutToUploadImagesContainer__item'>\n                                                                    <div\n                                                                        className='aboutToUploadImagesContainer__item-imgContainer'\n                                                                        onClick={() => {\n                                                                            setCoverImageId(image.id);\n                                                                            handleSetImageAsThumnail(image);\n                                                                        }}\n                                                                    >\n                                                                        <img src={image.cover} alt={image.alt} />\n                                                                    </div>\n\n                                                                    <span\n                                                                        onClick={() => {\n                                                                            handleImagesDelete(image.id)\n                                                                            handleDetachSingleImage(image.id)\n                                                                        }\n\n                                                                        }\n                                                                        className='aboutToUploadImagesContainer__item-remove'>\n                                                                        <CloseOutlined />\n                                                                    </span>\n\n\n                                                                    {coverImageId === image.id ? (\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\n                                                                            <CheckOutlined />\n                                                                        </span>\n                                                                    ) : !coverImageId && index === 0 && (\n                                                                        <span className='aboutToUploadImagesContainer__item-cover'>\n                                                                            <CheckOutlined />\n                                                                        </span>\n                                                                    )}\n\n\n                                                                </div>\n                                                            )\n                                                        })}\n\n\n                                                    <Tooltip\n                                                        title={'Attach images'}>\n\n                                                        <div\n                                                            onClick={() => {\n                                                                setvisible(true);\n                                                                setisModalOpenForImages(true);\n                                                                setisModalOpenForThumbnail(false);\n                                                            }}\n                                                            className='aboutToUploadImagesContainer__uploadItem'>\n                                                            {/* <FileAddOutlined />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageTwoTone />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FileImageOutlined /> */}\n                                                            <FileImageFilled />\n                                                            {/* <h5>\n\t\t\t\t\t\t\t\t\t\t\t\t     Select From Library\n\t\t\t\t\t\t\t\t\t\t\t<     /h5> */}\n                                                            <span className='aboutToUploadImagesContainer__uploadItem-plus'>\n                                                                <PlusOutlined />\n                                                            </span>\n                                                        </div>\n                                                    </Tooltip>\n                                                </>\n                                            )}\n\n                                        </div>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Meta title'\n\t\t\t\t\t\t\t\tvalue={values.metaTitle}\n\t\t\t\t\t\t\t\tplaceHolder={'category...'}\n\t\t\t\t\t\t\t\tname='metaTitle'\n\t\t\t\t\t\t\t\tisError={(touched.metaTitle && errors.metaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.metaTitle && errors.metaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaTitle'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaTitle')\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='BN Meta title'\n\t\t\t\t\t\t\t\tvalue={values.bnMetaTitle}\n\t\t\t\t\t\t\t\tplaceHolder={'ক্যাটাগড়ি...'}\n\t\t\t\t\t\t\t\tname='bnMetaTitle'\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaTitle && errors.bnMetaTitle) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaTitle'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaTitle');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='Meta description'\n\t\t\t\t\t\t\t\tvalue={values.metaDescription}\n\t\t\t\t\t\t\t\tplaceholder={'meta...'}\n\t\t\t\t\t\t\t\tname='metaDescription'\n\t\t\t\t\t\t\t\tisError={(touched.metaDescription && errors.metaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.metaDescription && errors.metaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['metaDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('metaDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\tlabel='BN Meta Description'\n\t\t\t\t\t\t\t\tvalue={values.bnMetaDescription}\n\t\t\t\t\t\t\t\tplaceholder={'এইয় মেট...'}\n\t\t\t\t\t\t\t\tname='bnMetaDescription'\n\t\t\t\t\t\t\t\tisError={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.bnMetaDescription && errors.bnMetaDescription) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addCategoryState.error['error']['bnMetaDescription'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('bnMetaDescription');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\tMeta Tags (grocery,fashion)\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<MetaTags\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tsetTags={setTags}\n\t\t\t\t\t\t\ttags={tags}\n\t\t\t\t\t\t\t />\n\n\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\tmarginTop:'15px'\n\t\t\t\t\t\t\t}}></div>\n\n\t\t\t\t\t\t\t<h3 className='inputFieldLabel'>\n\t\t\t\t\t\t\tBN Meta Tags (মুদিখানা,ফ্যাশন)\n\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t<MetaTags\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tsetTags={setBnTags}\n\t\t\t\t\t\t\ttags={bnTags}\n\t\t\t\t\t\t\t />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Modal>\n\n\t\t\t\t\t\t<MediaLibrary\n\t\t\t\t\t\t\tsetvisible={setvisible}\n\t\t\t\t\t\t\tvisible={visible}\n\t\t\t\t\t\t\tsetmyImages={setmyImages}\n\t\t\t\t\t\t\tmyImages={myImages}\n\t\t\t\t\t\t\tsetmyThumbnailImage={setmyThumbnailImage}\n\t\t\t\t\t\t\tisModalOpenForThumbnail={isModalOpenForThumbnail}\n\t\t\t\t\t\t\tisModalOpenForImages={isModalOpenForImages}\n\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</Formik>\n\n\t);\n};\n\nexport default AddNewCategory;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../../hooks\";\n\n// import lib\nimport {\n    EditOutlined,\n} from '@ant-design/icons';\n\nimport { Skeleton, Empty, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\n\n\n\n// import components\nimport { DataTableSkeleton } from \"../../../components/Placeholders\";\nimport CategoryEdit from \"./PostCategoryEdit\";\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\ninterface Props {\n    productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n    const [categoryDetailState, handleCategoryDetailFetch] = useHandleFetch({}, 'postCategoryDetail');\n    const [categoryProductsState, handleCategoryProductsFetch] = useHandleFetch({}, 'categoryPostList');\n\n    const params = useParams();\n    const history = useHistory();\n    const categoryId = params['id'];\n    const [categoryEditVisible, setCategoryEditVisible] = useState(false);\n    const [categoryDetail,setcategoryDetail] = useState({}); \n\n\n\n    useEffect(() => {\n\n        const getCategoryDetail = async () => {\n            const categoryDetailDataRes =  await handleCategoryDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: categoryId\n                    }\n                }\n            }); \n\n            // @ts-ignore\n            if(categoryDetailDataRes){\n                  // @ts-ignore\n                setcategoryDetail(categoryDetailDataRes)\n\n            }\n\n        };\n\n        getCategoryDetail();\n\n    }, [categoryId]);\n\n    useEffect(() => {\n\n        const getCategoryProducts = async () => {\n            await handleCategoryProductsFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: categoryId\n                    }\n                }\n            })\n        };\n\n        getCategoryProducts();\n\n    }, [categoryId]);\n\n\n\n\n    console.log('postcategoryDetail', categoryDetail);\n\n    console.log('brandParams', params);\n\n\n    const getImagesInCollumn = (imgs) => {\n        if (!imgs[0]) return false;\n        imgs = imgs.map(item => item.cover);\n        const columns = {};\n\n        let localIndex = 0;\n        let columnNumber = 0;\n\n\n        imgs.forEach((item, index) => {\n            if (localIndex < 3) {\n                if (columns[columnNumber]) {\n                    columns[columnNumber] = [...columns[columnNumber], item]\n                }\n                else columns[columnNumber] = [item];\n\n                localIndex = localIndex + 1;\n                columnNumber = columnNumber + 1;\n\n            }\n            else {\n                localIndex = 0;\n                columnNumber = 0;\n                console.log('localIndex', localIndex)\n            }\n        });\n\n        return columns;\n    }\n\n\n    const row = categoryDetailState.done && categoryDetail && categoryDetail['image'] ? getImagesInCollumn(categoryDetail['image']) : [];\n\n\n\n    return (\n        <div className='brandDetailContainer'>\n\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                   Recipe Category Detail\n                </h3>\n\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\n                    <>\n                        <CategoryEdit\n                            addNewCategoryVisible={categoryEditVisible}\n                            setAddNewCategoryVisible={setCategoryEditVisible}\n                            categoryDetailData={categoryDetail}\n                            setcategoryDetailData={setcategoryDetail}\n\n                        />\n\n                        <Button\n                            onClick={() => setCategoryEditVisible(true)}\n                            type='link'\n                            icon={<EditOutlined />}\n                        >\n                            Edit\n                      </Button>\n                    </>\n                )}\n\n            </div>\n            <Skeleton\n                avatar paragraph={{ rows: 3 }}\n                loading={categoryDetailState.isLoading}>\n                {categoryDetailState.done && categoryDetail && !(Object.keys(categoryDetail).length > 0) && (\n                    <Empty description='No Recipe category found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                )}\n\n\n\n                {categoryDetailState.done && categoryDetail && (Object.keys(categoryDetail).length > 0) && (\n                    <>\n                        <div className='brandDetailContainer__header'>\n                            <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-category'>\n                                <img src={categoryDetail['cover'] && categoryDetail['cover']['cover']} alt=\"\" />\n                            </div>\n                            <div className='brandDetailContainer__header-info'>\n                                <h2>\n                                    {categoryDetail['name']}\n                                </h2>\n                                <h3>\n                                    {categoryDetail['description']}\n                                </h3>\n                          \n                                {categoryDetail['url'] && (\n                                    <h3>\n                                        URL:\n                                        <span>\n                                            {categoryDetail['url']}\n                                        </span>\n\n                                    </h3>\n                                )}\n\n                            </div>\n                        </div>\n\n\n                        {categoryDetail['icon'] && (\n                            <>\n                                <div className='brandDetailContainer__heading'>\n                                    <h3>\n                                        Icon\n                                    </h3>\n                                </div>\n\n                                <div className='brandDetailContainer__inlineBox'>\n                                    <div className='brandDetailContainer__header-coverContainer brandDetailContainer__header-coverContainer-icon'>\n                                        <img src={categoryDetail['icon'] && categoryDetail['icon']} alt=\"\" />\n                                    </div>\n\n                                </div>\n\n                                <div style={{\n                                    marginBottom: \"25px\"\n                                }}></div>\n                            </>\n                        )}\n\n\n                        {categoryDetail['image'] && categoryDetail['image'].length > 0 && (\n                            <>\n                                <div className='brandDetailContainer__heading'>\n                                    <h3>\n                                        Image Gallary\n                                   </h3>\n                                </div>\n\n                                <div className='brandDetailContainer__imageGallary'>\n                                    <div className='imgGallaryContainer'>\n\n                                        <div className=\"imgGallary-row\">\n                                            {row && Object.keys(row).map(column => {\n                                                return (\n                                                    <div className=\"imgGallary-column\">\n                                                        {row[column] && row[column].map(img => {\n                                                            return <img \n                                                            alt='..'\n                                                            src={img} style={{\n                                                                width: '100%'\n                                                            }} />\n                                                        })}\n\n                                                    </div>\n                                                )\n                                            })}\n\n\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                                <div style={{\n                                    marginBottom: \"25px\"\n                                }}></div>\n                            </>\n                        )}\n\n\n                    </>\n\n                )}\n\n            </Skeleton>\n\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                    Recipes\n                </h3>\n            </div>\n            <div className='brandDetailContainer__body'>\n                {categoryProductsState.isLoading && <DataTableSkeleton />}\n                {categoryProductsState.done && !(categoryProductsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No recipes exists in this category' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {categoryProductsState.done && categoryProductsState.data && categoryProductsState.data.length > 0 && (\n                    <>\n                        <Table\n                            style={{\n                                paddingTop: '10px',\n                                borderRadius: '5px !important',\n                                overflow: 'hidden',\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\n                            }}\n\n                            size='small'\n                            dataSource={categoryProductsState.data}\n                            tableLayout={'auto'}\n                            onHeaderRow={column => {\n                                return {\n                                    style: {\n                                        color: 'red !important'\n                                    }\n\n                                };\n                            }}\n                        >\n                            \n                <Column\n                    title=\"\"\n                    dataIndex=\"cover\"\n                    key=\"id\"\n                    width={'80px'}\n\n                    className='classnameofthecolumn'\n\n                    render={(cover, record: any) => (\n                        <>\n                            <img\n                                onClick={() => {\n                                    history.push(`/admin/posts/${record.id}`)\n                                }}\n                                src={cover} alt='cover img' style={{\n                                    height: '40px',\n                                    width: '40px',\n                                    objectFit: \"contain\",\n                                    borderRadius: '3px',\n                                    cursor: 'pointer'\n                                }} />\n                        </>\n                    )}\n                />\n\n                <Column\n                    title=\"Name\"\n                    dataIndex=\"name\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n                    render={(text, record: any) => (\n                        <>\n\n                            <h4\n                                onClick={() => {\n                                    history.push(`/admin/posts/${record.id}`)\n                                    // setBrandDetailVisible(true);\n                                }}\n                                style={{\n                                    fontWeight: 400,\n                                    color: '#555',\n                                    cursor: 'pointer'\n                                }}>\n                                {text}\n                            </h4>\n\n\n                        </>\n                    )}\n                />\n\n\n\n                <Column\n                    title=\"Preparation Time\"\n                    dataIndex=\"preparationTime\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n\n                />\n\n\n                <Column\n                    title=\"Cooking Time\"\n                    dataIndex=\"cookingTime\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n                />\n\n                \n                <Column\n                    title=\"People\"\n                    dataIndex=\"servingSize\"\n                    key=\"id\"\n                    className='classnameofthecolumn'\n                />\n\n\n            \n                        </Table>\n                    </>\n                )}\n\n            </div>\n        </div>\n    )\n}\n\nexport default NewBrandDetail\n","import React from 'react'\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\n\n\n\ninterface Props {\n    onChange: any;\n    label?: string;\n    withTime?: boolean;\n    placeholder?: string;\n    date?: string;\n    time?: string;\n}\n\n\nconst DatePickerComponent = ({ onChange, label, withTime, placeholder, date, time }: Props) => {\n    function disabledDate(current) {\n        // Can not select days before today and today\n        return current && current < moment(date) && current > moment(date);\n    }\n\n\n    return (\n        <>\n            <h3 className='inputFieldLabel'>{label}</h3>\n\n            {withTime ? <DatePicker\n                format=\"YYYY-MM-DD HH:mm:ss\"\n                className='inputclassName'\n                placeholder={placeholder}\n                style={{\n                    width: \"100%\",\n                    borderColor: \"#eee\"\n                }}\n\n\n                onChange={onChange}\n                {...(time && {\n                    defaultValue: moment(time),\n                })}\n            />\n                : (\n                    <DatePicker\n\n                        placeholder={placeholder}\n                        className='inputclassName'\n                        style={{\n                            width: \"100%\",\n                            borderColor: \"#eee\"\n                        }}\n                        onChange={onChange}\n                        {...(date && {\n                            defaultValue: moment(date),\n                        })}\n                    />\n                )}\n\n\n        </>\n    )\n}\n\nexport default DatePickerComponent\n\n\n\n\nconst { RangePicker } = DatePicker;\n\nfunction range(start, end) {\n    const result = [];\n    for (let i = start; i < end; i++) {\n        result.push(i);\n    }\n    return result;\n}\n\n// function disabledDate(current) {\n//   // Can not select days before today and today\n//   return current && current < moment().endOf('day');\n// }\n\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Empty,\n  Form,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport DatePicker from '../../components/Field/DatePicker';\n\nconst { Option } = Select;\n\nconst validationSchema = Yup.object().shape({\n  //   firstName: Yup.string()\n  //     .label('First name')\n  //     .required()\n  //     .min(2, 'First name must have at least 2 characters '),\n  //   lastName: Yup.string()\n  //     .label('Lastname')\n  //     .required()\n  //     .min(2, 'Last name must have at least 2 characters '),\n  //   phone: Yup.string()\n  //     .required('Please tell us your mobile number.')\n  //     .max(13, 'Please enter a valid mobile number.'),\n  //   password: Yup.string()\n  //     .label('Password')\n  //     .required()\n  //     .min(6, 'Password must have at least 6 characters'),\n  //   address1: Yup.string()\n  //     .label('Address line 1')\n  //     .required()\n  //     .min(3, 'Address line 1 must have at least 3 characters '),\n  //   email: Yup.string().label('Email').email('Please enter a valid email'),\n});\n\nconst initialValues = {\n  firstName: '',\n  lastName: '',\n  address: '',\n  salary: null,\n  designation: '',\n  fatherName: '',\n  motherName: '',\n  NID: '',\n  phone: '',\n  email: '',\n  additionalInfo: '',\n  joiningDate: '',\n};\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Staff Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  customerList?: any;\n  setCustomerList?: any;\n}\n\nconst AddNewCategory = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  customerList,\n  setCustomerList,\n}: Props) => {\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\n    {},\n    'addStaff'\n  );\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n  const [time, setTimeFeild] = useState('');\n\n  const [countryList, setCountryList] = useState([]);\n  const [cityList, setCityList] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addCustomerRes = await handleAddCustomerFetch({\n      body: {\n        phone: values.phone,\n        email: values.email.trim(),\n        password: values.password,\n        address: values.address.trim(),\n        firstName: values.firstName.trim(),\n        lastName: values.lastName.trim(),\n        additionalInfo: values.additionalInfo.trim(),\n        NID: values.NID,\n        fatherName: values.fatherName.trim(),\n        motherName: values.motherName.trim(),\n        salary: values.salary,\n        designation: values.designation.trim(),\n        joiningDate: time,\n      },\n    });\n\n    // @ts-ignore\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\n      openSuccessNotification();\n\n      console.log('addCustomerRes', addCustomerRes);\n      setCustomerList([\n        {\n          id: addCustomerRes['_id'] || '',\n          key: addCustomerRes['_id'] || '',\n          name: addCustomerRes['firstName'] + ' ' + addCustomerRes['lastName'],\n\n          // @ts-ignore\n          ...addCustomerRes,\n        },\n        ...customerList,\n      ]);\n\n      setAddNewCategoryVisible(false);\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addCustomerState['isLoading']) {\n      const error = addCustomerState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !addCustomerState['isLoading'] &&\n      Object.keys(addCustomerState.data).length > 0\n    ) {\n      if (addCustomerState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addCustomerState]);\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.name,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, []);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [selectedCountryValue]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !isValid ||\n      !values.firstName ||\n      !values.lastName ||\n      !values.password ||\n      !values.phone ||\n      !values.address1\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  console.log('cityListState', cityListState);\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n            title='Add New Staff'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='First Name *'\n                  value={values.firstName}\n                  name='firstName'\n                  isError={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['firstName'])\n                  }\n                  errorString={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['firstName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('firstName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Last Name'\n                  value={values.lastName}\n                  name='lastName'\n                  isError={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['lastName'])\n                  }\n                  errorString={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['lastName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('lastName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Designation *'\n                  value={values.designation}\n                  name='designation'\n                  isError={\n                    (touched.designation && errors.designation) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['designation'])\n                  }\n                  errorString={\n                    (touched.designation && errors.designation) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['designation'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('designation');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  min={0}\n                  type={'number'}\n                  label='Salary *'\n                  value={values.salary}\n                  name='salary'\n                  isError={\n                    (touched.salary && errors.salary) ||\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\n                  }\n                  errorString={\n                    (touched.salary && errors.salary) ||\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('salary');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Phone *'\n                  value={values.phone}\n                  name='phone'\n                  isError={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\n                  }\n                  errorString={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('phone');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='NID'\n                  value={values.NID}\n                  name='NID'\n                  isError={\n                    (touched.NID && errors.NID) ||\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\n                  }\n                  errorString={\n                    (touched.NID && errors.NID) ||\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('NID');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Father Name'\n                  value={values.fatherName}\n                  name='fatherName'\n                  isError={\n                    (touched.fatherName && errors.fatherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['fatherName'])\n                  }\n                  errorString={\n                    (touched.fatherName && errors.fatherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['fatherName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('fatherName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Mother Name'\n                  value={values.motherName}\n                  name='motherName'\n                  isError={\n                    (touched.motherName && errors.motherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['motherName'])\n                  }\n                  errorString={\n                    (touched.motherName && errors.motherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['motherName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('motherName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Email'\n                  value={values.email}\n                  name='email'\n                  isError={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting && addCustomerState.error['error']['email'])\n                  }\n                  errorString={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting && addCustomerState.error['error']['email'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('email');\n                  }}\n                />\n              </div>\n\n              <div className='dubbleRowInputs__item'>\n                <DatePicker\n                  date={time}\n                  placeholder='10/20/2020'\n                  label='joining Date'\n                  onChange={handleTimeChange}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Address'\n                  value={values.address}\n                  name='address'\n                  isError={\n                    (touched.address && errors.address) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['address'])\n                  }\n                  errorString={\n                    (touched.address && errors.address) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['address'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('address');\n                  }}\n                />\n              </div>\n\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Additional Info'\n                  value={values.additionalInfo}\n                  name='additionalInfo'\n                  isError={\n                    (touched.additionalInfo && errors.additionalInfo) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['additionalInfo'])\n                  }\n                  errorString={\n                    (touched.additionalInfo && errors.additionalInfo) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['additionalInfo'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('additionalInfo');\n                  }}\n                />\n              </div>\n            </div>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewCategory;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Empty,\n  Form,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport DatePicker from '../../components/Field/DatePicker';\n\nconst { Option } = Select;\n\nconst validationSchema = Yup.object().shape({\n  //   firstName: Yup.string()\n  //     .label('First name')\n  //     .required()\n  //     .min(2, 'First name must have at least 2 characters '),\n  //   lastName: Yup.string()\n  //     .label('Lastname')\n  //     .required()\n  //     .min(2, 'Last name must have at least 2 characters '),\n  //   phone: Yup.string()\n  //     .required('Please tell us your mobile number.')\n  //     .max(13, 'Please enter a valid mobile number.'),\n  //   password: Yup.string()\n  //     .label('Password')\n  //     .required()\n  //     .min(6, 'Password must have at least 6 characters'),\n  //   address1: Yup.string()\n  //     .label('Address line 1')\n  //     .required()\n  //     .min(3, 'Address line 1 must have at least 3 characters '),\n  //   email: Yup.string().label('Email').email('Please enter a valid email'),\n});\n\nconst initialValues = {\n  firstName: '',\n  lastName: '',\n  address: '',\n  salary: null,\n  designation: '',\n  fatherName: '',\n  motherName: '',\n  NID: '',\n  phone: '',\n  email: '',\n  additionalInfo: '',\n  joiningDate: '',\n};\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Staff Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  customerList?: any;\n  setCustomerList?: any;\n  customer?: any;\n}\n\nconst StaffQuickEdit = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  customerList,\n  setCustomerList,\n  customer,\n}: Props) => {\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\n    {},\n    'updateStaff'\n  );\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n  const [time, setTimeFeild] = useState('');\n\n  useEffect(() => {\n    if (customer && Object.keys(customer).length > 0) {\n      setTimeFeild(customer['joiningDate']);\n    }\n  }, [customer]);\n\n  const [countryList, setCountryList] = useState([]);\n  const [cityList, setCityList] = useState([]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addCustomerRes = await handleAddCustomerFetch({\n      urlOptions: {\n        placeHolders: {\n          id: customer.id,\n        },\n      },\n      body: {\n        phone: values.phone,\n        email: values.email.trim(),\n        address: values.address.trim(),\n        firstName: values.firstName.trim(),\n        lastName: values.lastName.trim(),\n        additionalInfo: values.additionalInfo.trim(),\n        NID: values.NID,\n        fatherName: values.fatherName.trim(),\n        motherName: values.motherName.trim(),\n        salary: values.salary,\n        designation: values.designation.trim(),\n        joiningDate: time,\n      },\n    });\n\n    // @ts-ignore\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\n      openSuccessNotification();\n\n      console.log('addCustomerREes', addCustomerRes);\n      const positionInTag = () => {\n        return customerList.map((item) => item.id).indexOf(customer.id);\n      };\n\n      const index = positionInTag();\n\n      // @ts-ignore\n      const updatedItem = Object.assign({}, customerList[index], {\n        ...addCustomerRes,\n        name: addCustomerRes.firstName + ' ' + addCustomerRes.lastName,\n      });\n\n      console.log('updatedItemaddCustomerREes', addCustomerRes);\n\n      const updateTagList = [\n        ...customerList.slice(0, index),\n        updatedItem,\n        ...customerList.slice(index + 1),\n      ];\n\n      console.log('updatedItemadUpdatedList', updateTagList);\n\n      setCustomerList(updateTagList);\n\n      setAddNewCategoryVisible(false);\n      setTimeFeild('');\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addCustomerState['isLoading']) {\n      const error = addCustomerState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !addCustomerState['isLoading'] &&\n      Object.keys(addCustomerState.data).length > 0\n    ) {\n      if (addCustomerState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addCustomerState]);\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.name,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, []);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [selectedCountryValue]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n    setTimeFeild('');\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !isValid ||\n      !values.firstName ||\n      !values.lastName ||\n      !values.password ||\n      !values.phone ||\n      !values.address1\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  console.log('cityListState', cityListState);\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...customer }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n            title='Add New Staff'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='First Name *'\n                  value={values.firstName}\n                  name='firstName'\n                  isError={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['firstName'])\n                  }\n                  errorString={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['firstName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('firstName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Last Name'\n                  value={values.lastName}\n                  name='lastName'\n                  isError={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['lastName'])\n                  }\n                  errorString={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['lastName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('lastName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Designation *'\n                  value={values.designation}\n                  name='designation'\n                  isError={\n                    (touched.designation && errors.designation) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['designation'])\n                  }\n                  errorString={\n                    (touched.designation && errors.designation) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['designation'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('designation');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  min={0}\n                  type={'number'}\n                  label='Salary *'\n                  value={values.salary}\n                  name='salary'\n                  isError={\n                    (touched.salary && errors.salary) ||\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\n                  }\n                  errorString={\n                    (touched.salary && errors.salary) ||\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('salary');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Phone *'\n                  value={values.phone}\n                  name='phone'\n                  isError={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\n                  }\n                  errorString={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('phone');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='NID'\n                  value={values.NID}\n                  name='NID'\n                  isError={\n                    (touched.NID && errors.NID) ||\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\n                  }\n                  errorString={\n                    (touched.NID && errors.NID) ||\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('NID');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Father Name'\n                  value={values.fatherName}\n                  name='fatherName'\n                  isError={\n                    (touched.fatherName && errors.fatherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['fatherName'])\n                  }\n                  errorString={\n                    (touched.fatherName && errors.fatherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['fatherName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('fatherName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Mother Name'\n                  value={values.motherName}\n                  name='motherName'\n                  isError={\n                    (touched.motherName && errors.motherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['motherName'])\n                  }\n                  errorString={\n                    (touched.motherName && errors.motherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['motherName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('motherName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Email'\n                  value={values.email}\n                  name='email'\n                  isError={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting && addCustomerState.error['error']['email'])\n                  }\n                  errorString={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting && addCustomerState.error['error']['email'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('email');\n                  }}\n                />\n              </div>\n\n              <div className='dubbleRowInputs__item'>\n                <DatePicker\n                  date={time}\n                  placeholder='10/20/2020'\n                  label='joining Date'\n                  onChange={handleTimeChange}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Address'\n                  value={values.address}\n                  name='address'\n                  isError={\n                    (touched.address && errors.address) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['address'])\n                  }\n                  errorString={\n                    (touched.address && errors.address) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['address'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('address');\n                  }}\n                />\n              </div>\n\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Additional Info'\n                  value={values.additionalInfo}\n                  name='additionalInfo'\n                  isError={\n                    (touched.additionalInfo && errors.additionalInfo) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['additionalInfo'])\n                  }\n                  errorString={\n                    (touched.additionalInfo && errors.additionalInfo) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['additionalInfo'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('additionalInfo');\n                  }}\n                />\n              </div>\n            </div>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default StaffQuickEdit;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { CSVLink } from 'react-csv';\n\nimport {\n  Table,\n  Badge,\n  Menu,\n  Dropdown,\n  notification,\n  Space,\n  Tag,\n  Button,\n  Input,\n  Tooltip,\n  Modal,\n  Popconfirm,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  CheckCircleOutlined,\n  DownloadOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport Moment from 'react-moment';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\nimport moment from 'moment';\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport AddNewStaff from './AddNewStaff';\nimport QuickEdit from './QuickEdit';\nimport Empty from '../../components/Empty';\nconst { Column, ColumnGroup } = Table;\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Staffs Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setCustomerList?: any;\n}\n\nconst MyTable = ({ data, setCustomerList }: myTableProps) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n\n  const history = useHistory();\n\n  const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch(\n    {},\n    'deleteStaff'\n  );\n  const handleDeleteCustomer = async (id) => {\n    const deleteCustomerRes = await handleDeleteCustomerFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteCustomerRes && deleteCustomerRes.status === 'ok') {\n      openSuccessNotification('Deleted Staff');\n      const newCustomerList = data.filter((item) => item.id !== id);\n      setCustomerList(newCustomerList);\n    }\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/staff/${record.id}`);\n                  // setcategoryDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Phone'\n          dataIndex='phone'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Designation'\n          dataIndex='designation'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Salary'\n          dataIndex='salary'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Joined'\n          dataIndex='joiningDate'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm a')}</h5>\n            </Space>\n          )}\n        />\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <a href='##'>\n                <Tooltip placement='top' title='Edit Staff'>\n                  <span\n                    className='iconSize'\n                    onClick={() => {\n                      setvisible(true);\n                      setactiveCategoryForEdit(record);\n                    }}\n                  >\n                    <EditOutlined />\n                  </span>\n                </Tooltip>\n              </a>\n\n              <Popconfirm\n                onConfirm={() => handleDeleteCustomer(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          customerList={data}\n          setCustomerList={setCustomerList}\n          setAddNewCategoryVisible={setvisible}\n          addNewCategoryVisible={visible}\n          customer={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  history: any;\n}\n\nconst CustomerList = ({ history }: Props) => {\n  const [customerList, setCustomerList] = useState([]);\n\n  const [customerState, handleCustomerListFetch] = useHandleFetch(\n    {},\n    'staffList'\n  );\n\n  console.log('staffList', customerState);\n\n  useEffect(() => {\n    const setCustomers = async () => {\n      const customers = await handleCustomerListFetch({});\n      // @ts-ignore\n      setCustomerList(customers);\n    };\n    setCustomers();\n  }, []);\n\n  const handleSearch = (value) => {\n    if (customerState.data.length > 0) {\n      const newCustomerList = customerState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setCustomerList(newCustomerList);\n    }\n  };\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  // console.log('customerState',customerState)\n\n  const headers = [\n    { label: 'Name', key: 'name' },\n    { label: 'Phone', key: 'phone' },\n    { label: 'Designation', key: 'designation' },\n    { label: 'Salary', key: 'salary' },\n    { label: 'joined', key: 'joiningDate' },\n  ];\n\n  const getData = () => {\n    if (customerList && customerList.length > 0) {\n      const csvData = customerList.map((item) => {\n        return {\n          name: item.name,\n          phone: item.phone,\n          designation: item.designation,\n          salary: item.salary,\n          joiningDate: item.joiningDate\n            ? moment(item.joiningDate).format('MMMM Do YYYY, h:mm a')\n            : '',\n        };\n      });\n\n      return csvData;\n    } else return [];\n  };\n\n  const data = getData();\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Staffs</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search staffs..'\n              onChange={(e) => handleSearch(e.target.value)}\n              // style={{ width: 300 }}\n            />\n          </div>\n\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            {customerList && customerList.length > 0 && (\n              <>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    marginRight: '25px',\n                  }}\n                >\n                  <CSVLink\n                    filename={'staff-list.csv'}\n                    data={data}\n                    headers={headers}\n                  >\n                    Export as csv\n                  </CSVLink>\n                  <span\n                    style={{\n                      color: '#1890ff',\n                      marginLeft: '10px',\n                    }}\n                  >\n                    <DownloadOutlined />\n                  </span>\n                </div>\n              </>\n            )}\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          </div>\n        </div>\n\n        <div className='categoryListContainer__afterHeader'>\n          {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n        </div>\n\n        <div className='categoryListContainer__categoryList'>\n          {customerState.done && customerList.length > 0 && (\n            <MyTable setCustomerList={setCustomerList} data={customerList} />\n          )}\n          {customerState.isLoading && <DataTableSkeleton />}\n          {customerState.done && !(customerList.length > 0) && (\n            <Empty title='No Staff found' />\n          )}\n        </div>\n      </div>\n\n      {customerState.done && (\n        <AddNewStaff\n          setCustomerList={setCustomerList}\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          customerList={customerState.data}\n        />\n      )}\n    </>\n  );\n};\n\nexport default withRouter(CustomerList);\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Empty,\n  Form,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport DatePicker from '../../components/Field/DatePicker';\n\nconst { Option } = Select;\n\nconst validationSchema = Yup.object().shape({});\n\nconst initialValues = {\n  firstName: '',\n  lastName: '',\n  address: '',\n  salary: null,\n  designation: '',\n  fatherName: '',\n  motherName: '',\n  NID: '',\n  phone: '',\n  email: '',\n  additionalInfo: '',\n  joiningDate: '',\n};\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Staff Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface Props {\n  addNewCategoryVisible: any;\n  setAddNewCategoryVisible: any;\n  setCustomer?: any;\n  customer?: any;\n}\n\nconst StaffQuickEdit = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  customer,\n  setCustomer,\n}: Props) => {\n  const [addCustomerState, handleAddCustomerFetch] = useHandleFetch(\n    {},\n    'updateStaff'\n  );\n  const [selectedCountryValue, setselectedCountryValue] = useState('');\n  const [selectedCityValue, setselectedCityValue] = useState('');\n\n  const [countryOptions, setcountryOptions] = useState([]);\n  const [cityOptions, setcityOptions] = useState([]);\n\n  const [countryListState, handleCountryListFetch] = useHandleFetch(\n    [],\n    'countryList'\n  );\n\n  const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n  const [time, setTimeFeild] = useState('');\n\n  useEffect(() => {\n    if (customer && Object.keys(customer).length > 0) {\n      setTimeFeild(customer['joiningDate']);\n    }\n  }, [customer]);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addCustomerRes = await handleAddCustomerFetch({\n      urlOptions: {\n        placeHolders: {\n          id: customer.id,\n        },\n      },\n      body: {\n        phone: values.phone,\n        email: values.email.trim(),\n        address: values.address.trim(),\n        firstName: values.firstName.trim(),\n        lastName: values.lastName.trim(),\n        additionalInfo: values.additionalInfo.trim(),\n        NID: values.NID,\n        fatherName: values.fatherName.trim(),\n        motherName: values.motherName.trim(),\n        salary: values.salary,\n        designation: values.designation.trim(),\n        joiningDate: time,\n      },\n    });\n\n    // @ts-ignore\n    if (addCustomerRes && addCustomerRes.status === 'ok') {\n      openSuccessNotification();\n\n      setCustomer({\n        ...addCustomerRes,\n        name: addCustomerRes.firstName + ' ' + addCustomerRes.lastName,\n      });\n\n      setAddNewCategoryVisible(false);\n      actions.resetForm();\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addCustomerState['isLoading']) {\n      const error = addCustomerState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      !addCustomerState['isLoading'] &&\n      Object.keys(addCustomerState.data).length > 0\n    ) {\n      if (addCustomerState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addCustomerState]);\n\n  const onChangeCity = (value) => {\n    setselectedCityValue(value);\n  };\n\n  const onChangeCountry = (value) => {\n    setselectedCountryValue(value);\n  };\n\n  useEffect(() => {\n    const setCountries = async () => {\n      const CountryListRes = await handleCountryListFetch({});\n\n      // @ts-ignore\n      if (CountryListRes && CountryListRes.length > 0) {\n        // @ts-ignore\n        const countryOptions = CountryListRes.map((country) => {\n          return {\n            value: country.name,\n            name: country.name,\n          };\n        });\n        setcountryOptions(countryOptions);\n      }\n    };\n\n    setCountries();\n  }, []);\n\n  useEffect(() => {\n    const setCities = async () => {\n      const cityListRes = await handleCityListFetch({\n        urlOptions: {\n          placeHolders: {\n            country: selectedCountryValue,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (cityListRes && cityListRes.length > 0) {\n        // @ts-ignore\n        const cityOptions = cityListRes.map((city) => {\n          return {\n            value: city.name,\n            name: city.name,\n          };\n        });\n        setcityOptions(cityOptions);\n      }\n    };\n\n    setCities();\n  }, [selectedCountryValue]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (\n      !isValid ||\n      !values.firstName ||\n      !values.lastName ||\n      !values.password ||\n      !values.phone ||\n      !values.address1\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  console.log('cityListState', cityListState);\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...customer }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            bodyStyle={{\n              margin: '0',\n              padding: '10px',\n            }}\n            title='Add New Staff'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='First Name *'\n                  value={values.firstName}\n                  name='firstName'\n                  isError={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['firstName'])\n                  }\n                  errorString={\n                    (touched.firstName && errors.firstName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['firstName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('firstName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Last Name'\n                  value={values.lastName}\n                  name='lastName'\n                  isError={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['lastName'])\n                  }\n                  errorString={\n                    (touched.lastName && errors.lastName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['lastName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('lastName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Designation *'\n                  value={values.designation}\n                  name='designation'\n                  isError={\n                    (touched.designation && errors.designation) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['designation'])\n                  }\n                  errorString={\n                    (touched.designation && errors.designation) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['designation'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('designation');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  min={0}\n                  type={'number'}\n                  label='Salary *'\n                  value={values.salary}\n                  name='salary'\n                  isError={\n                    (touched.salary && errors.salary) ||\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\n                  }\n                  errorString={\n                    (touched.salary && errors.salary) ||\n                    (!isSubmitting && addCustomerState.error['error']['salary'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('salary');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Phone *'\n                  value={values.phone}\n                  name='phone'\n                  isError={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\n                  }\n                  errorString={\n                    (touched.phone && errors.phone) ||\n                    (!isSubmitting && addCustomerState.error['error']['phone'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('phone');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='NID'\n                  value={values.NID}\n                  name='NID'\n                  isError={\n                    (touched.NID && errors.NID) ||\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\n                  }\n                  errorString={\n                    (touched.NID && errors.NID) ||\n                    (!isSubmitting && addCustomerState.error['error']['NID'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('NID');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Father Name'\n                  value={values.fatherName}\n                  name='fatherName'\n                  isError={\n                    (touched.fatherName && errors.fatherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['fatherName'])\n                  }\n                  errorString={\n                    (touched.fatherName && errors.fatherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['fatherName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('fatherName');\n                  }}\n                />\n              </div>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Mother Name'\n                  value={values.motherName}\n                  name='motherName'\n                  isError={\n                    (touched.motherName && errors.motherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['motherName'])\n                  }\n                  errorString={\n                    (touched.motherName && errors.motherName) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['motherName'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('motherName');\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Email'\n                  value={values.email}\n                  name='email'\n                  isError={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting && addCustomerState.error['error']['email'])\n                  }\n                  errorString={\n                    (touched.email && errors.email) ||\n                    (!isSubmitting && addCustomerState.error['error']['email'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('email');\n                  }}\n                />\n              </div>\n\n              <div className='dubbleRowInputs__item'>\n                <DatePicker\n                  date={time}\n                  placeholder='10/20/2020'\n                  label='joining Date'\n                  onChange={handleTimeChange}\n                />\n              </div>\n            </div>\n\n            <div className='dubbleRowInputs'>\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Address'\n                  value={values.address}\n                  name='address'\n                  isError={\n                    (touched.address && errors.address) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['address'])\n                  }\n                  errorString={\n                    (touched.address && errors.address) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['address'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('address');\n                  }}\n                />\n              </div>\n\n              <div className='dubbleRowInputs__item'>\n                <Input\n                  label='Additional Info'\n                  value={values.additionalInfo}\n                  name='additionalInfo'\n                  isError={\n                    (touched.additionalInfo && errors.additionalInfo) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['additionalInfo'])\n                  }\n                  errorString={\n                    (touched.additionalInfo && errors.additionalInfo) ||\n                    (!isSubmitting &&\n                      addCustomerState.error['error']['additionalInfo'])\n                  }\n                  onChange={(e: any) => {\n                    handleChange(e);\n                    setFieldTouched('additionalInfo');\n                  }}\n                />\n              </div>\n            </div>\n          </Modal>\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default StaffQuickEdit;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport StaffEdit from './StaffEdit';\nimport moment from 'moment';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n  productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\n    {},\n    'staffDetail'\n  );\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\n    {},\n    'tagProducts'\n  );\n  const [tagEditVisible, setTagEditVisible] = useState(false);\n\n  const params = useParams();\n  const tagId = params['id'];\n  const [customerDetail, setCustomerDetail] = useState({});\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const res = await handleTagDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (res) {\n        // @ts-ignore\n        setCustomerDetail(res);\n      }\n    };\n\n    getBrandDetail();\n  }, [tagId]);\n\n  useEffect(() => {\n    const getTagProducts = async () => {\n      await handleTagProductsFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n    };\n\n    getTagProducts();\n  }, [tagId]);\n\n  console.log('tagProductsState', tagProductsState);\n\n  console.log('brandParams', params);\n  console.log('staffDetail', tagDetailState);\n\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Staff Detail</h3>\n\n        {tagDetailState.done &&\n          customerDetail &&\n          Object.keys(customerDetail).length > 0 && (\n            <>\n              <StaffEdit\n                addNewCategoryVisible={tagEditVisible}\n                setAddNewCategoryVisible={setTagEditVisible}\n                customer={customerDetail}\n                setCustomer={setCustomerDetail}\n              />\n              <Button\n                onClick={() => setTagEditVisible(true)}\n                type='link'\n                icon={<EditOutlined />}\n              >\n                Edit\n              </Button>\n            </>\n          )}\n      </div>\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\n        {tagDetailState.done &&\n          customerDetail &&\n          !(Object.keys(customerDetail).length > 0) && (\n            <Empty\n              description='No Staffs found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {tagDetailState.done &&\n          customerDetail &&\n          Object.keys(customerDetail).length > 0 && (\n            <div className='brandDetailContainer__header'>\n              <div className='brandDetailContainer__header-info'>\n                <h2>{customerDetail['name']}</h2>\n                <h3>{customerDetail['description']}</h3>\n                {customerDetail['designation'] && (\n                  <h3>\n                    DESIGNATION:\n                    <span>{customerDetail['designation']}</span>\n                  </h3>\n                )}\n                {customerDetail['salary'] && (\n                  <h3>\n                    SALARY:\n                    <span>{customerDetail['salary']}</span>\n                  </h3>\n                )}\n\n                {customerDetail['NID'] && (\n                  <h3>\n                    NID:\n                    <span>{customerDetail['NID']}</span>\n                  </h3>\n                )}\n\n                {customerDetail['joiningDate'] && (\n                  <h3>\n                    JOINED:\n                    <span>\n                      {customerDetail['joiningDate'] &&\n                        moment(customerDetail['joiningDate']).format(\n                          'MMMM Do YYYY, h:mm a'\n                        )}\n                    </span>\n                  </h3>\n                )}\n\n                {customerDetail['fatherName'] && (\n                  <h3>\n                    FATHER'S NAME:\n                    <span>{customerDetail['fatherName']}</span>\n                  </h3>\n                )}\n                {customerDetail['motherName'] && (\n                  <h3>\n                    MOTHER'S NAME:\n                    <span>{customerDetail['motherName']}</span>\n                  </h3>\n                )}\n\n                {customerDetail['phone'] && (\n                  <h3>\n                    PHONE:\n                    <span>{customerDetail['phone']}</span>\n                  </h3>\n                )}\n                {customerDetail['email'] && (\n                  <h3>\n                    EMAIL:\n                    <span>{customerDetail['email']}</span>\n                  </h3>\n                )}\n              </div>\n            </div>\n          )}\n      </Skeleton>\n\n      {/* <div className='brandDetailContainer__heading'>\n                <h3>\n                    Products\n                </h3>\n            </div>\n            <div className='brandDetailContainer__body'>\n                {tagProductsState.isLoading && <DataTableSkeleton />}\n                {tagProductsState.done && !(tagProductsState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No Orderss exists for this Customer ' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {tagProductsState.done && tagProductsState.data && tagProductsState.data.length > 0 && (\n                    <>\n                        <Table\n                            style={{\n                                paddingTop: '10px',\n                                borderRadius: '5px !important',\n                                overflow: 'hidden',\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\n                            }}\n                            // expandable={{\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\n                            //   }}\n                            // bordered={true}\n                            size='small'\n                            // pagination={false}\n                            dataSource={tagProductsState.data}\n                            tableLayout={'auto'}\n                            onHeaderRow={column => {\n                                return {\n                                    style: {\n                                        color: 'red !important'\n                                    }\n\n                                };\n                            }}\n                        >\n                            <Column\n                                title=\"\"\n                                dataIndex=\"cover\"\n                                key=\"id\"\n                                width={'80px'}\n\n                                className='classnameofthecolumn'\n\n                                render={(cover, record: any) => (\n                                    <>\n                                        <img\n                                            onClick={() => {\n                                                history.push(`/admin/product/${record.id}`)\n                                            }}\n                                            src={cover} alt='cover img' style={{\n                                                height: '40px',\n                                                width: '40px',\n                                                objectFit: \"contain\",\n                                                borderRadius: '3px',\n                                                cursor: 'pointer'\n                                            }} />\n\n\n\n\n                                    </>\n                                )}\n                            />\n\n                            <Column\n                                title=\"Name\"\n                                dataIndex=\"name\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n                                render={(text, record: any) => (\n                                    <>\n                                        <h4\n                                            onClick={() => {\n                                                history.push(`/admin/product/${record.id}`)\n                                            }}\n                                            style={{\n                                                fontWeight: 400,\n                                                color: '#555',\n                                                cursor: 'pointer'\n\n                                            }}>\n                                            {text}\n                                        </h4>\n\n\n                                    </>\n                                )}\n\n                            />\n\n                            <Column\n                                title=\"Offer Price\"\n                                dataIndex=\"offerPrice\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n\n                            <Column\n                                title=\"Price\"\n                                dataIndex=\"price\"\n                                key=\"id\"\n                                className='classnameofthecolumn'\n\n                            />\n\n                        </Table>\n                    </>\n                )}\n\n            </div> */}\n    </div>\n  );\n};\n\nexport default NewBrandDetail;\n","import React, { useState, useEffect } from 'react';\nimport { AutoComplete, Tooltip } from 'antd';\n\nimport InputSmall from '../../../components/Field/InputSmall';\n\n// import comp;onent\nimport Sfaffid from './Sfaffid';\n\nimport { useFetch } from '../../../hooks';\nimport {\n  DeleteOutlined,\n  FileAddOutlined,\n  FileImageFilled,\n  PlusOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  DeleteColumnOutlined,\n} from '@ant-design/icons';\n\nconst Complete = ({\n  setItemsList,\n  itemsList,\n  componentItem,\n  brandState,\n  index,\n}) => {\n  const [brandId, setBrandId] = useState('');\n\n  const handleComponentItemsChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    const updatedValue = {\n      ...componentItem,\n      [name]: value,\n      id: componentItem.id,\n    };\n\n    const positionInAttribute = () => {\n      return itemsList.map((item) => item.id).indexOf(componentItem.id);\n    };\n\n    const index = positionInAttribute();\n\n    const updateAttributeList = [\n      ...itemsList.slice(0, index),\n      updatedValue,\n      ...itemsList.slice(index + 1),\n    ];\n    setItemsList(updateAttributeList);\n  };\n\n  useEffect(() => {\n    const updatedValue = {\n      ...componentItem,\n      _id: brandId,\n      id: componentItem.id,\n    };\n\n    const positionInAttribute = () => {\n      return itemsList.map((item) => item.id).indexOf(componentItem.id);\n    };\n\n    const index = positionInAttribute();\n\n    const updateAttributeList = [\n      ...itemsList.slice(0, index),\n      updatedValue,\n      ...itemsList.slice(index + 1),\n    ];\n    setItemsList(updateAttributeList);\n  }, [brandId]);\n\n  const handleAttributeDelete = () => {\n    const updateComponentList = itemsList.filter(\n      (item) => item.id !== componentItem.id\n    );\n    setItemsList(updateComponentList);\n  };\n\n  console.log('componentItem322',   \n  componentItem);\n  return (\n    <>\n      <div className='staffComponentItemsContainer__item'>\n        <div\n          className='staffComponentItemsContainer__name'\n          style={{\n            marginTop: index === 0 ? '-5px' : '-35px',\n          }}\n        >\n          {!index && (\n            <h3 className='inputFieldLabel-small' style={{}}>\n              Name\n            </h3>\n          )}\n\n          <h4\n            style={{\n              margin: 0,\n              padding: 0,\n              textTransform: 'uppercase',\n              fontSize: '13px',\n              marginTop: '33px',\n            }}\n          >\n            {componentItem.name}\n          </h4>\n        </div>\n\n        <div\n          style={{\n            marginTop: index === 0 ? '-5px' : '-35px',\n          }}\n          className='staffComponentItemsContainer__salary'\n        >\n          {!index && (\n            <h3 className='inputFieldLabel-small' style={{}}>\n              Salary\n            </h3>\n          )}\n\n          <h5\n            style={{\n              margin: 0,\n              padding: 0,\n              fontSize: '12px',\n              marginTop: '33px',\n            }}\n          >\n            {componentItem.salary}\n          </h5>\n        </div>\n\n        <div className='staffComponentItemsContainer__input'>\n          {!index && (\n            <h3\n              className='inputFieldLabel-small'\n              style={{\n                marginBottom: '20px',\n              }}\n            >\n              Bonus\n            </h3>\n          )}\n          <div>\n            <InputSmall\n              type='number'\n              label={''}\n              value={componentItem.title}\n              name='bonus'\n              onChange={handleComponentItemsChange}\n            />\n          </div>\n        </div>\n        <div className='staffComponentItemsContainer__input'>\n          {!index && (\n            <h3\n              className='inputFieldLabel-small'\n              style={{\n                marginBottom: '20px',\n              }}\n            >\n              Convince\n            </h3>\n          )}\n\n          <InputSmall\n            type='number'\n            label={''}\n            value={componentItem.text}\n            name='convince'\n            onChange={handleComponentItemsChange}\n          />\n        </div>\n        <div className='staffComponentItemsContainer__input'>\n          {!index && (\n            <h3\n              className='inputFieldLabel-small'\n              style={{\n                marginBottom: '20px',\n              }}\n            >\n              Extra\n            </h3>\n          )}\n\n          <InputSmall\n            type='number'\n            label={''}\n            value={componentItem.target}\n            name='extra'\n            onChange={handleComponentItemsChange}\n          />\n        </div>\n        <div className='staffComponentItemsContainer__input'>\n          {!index && (\n            <h3\n              className='inputFieldLabel-small'\n              style={{\n                marginBottom: '20px',\n              }}\n            >\n              Negative\n            </h3>\n          )}\n\n          <InputSmall\n            type='number'\n            label={''}\n            value={componentItem.target}\n            name='negative'\n            onChange={handleComponentItemsChange}\n          />\n        </div>\n\n        <div\n          onClick={() => handleAttributeDelete()}\n          className='staffComponentItemsContainer__input'\n          style={{\n            marginTop: index === 0 ? '15px' : '-10px',\n          }}\n        >\n          <span\n            style={{\n              color: 'rgba(255, 166, 0, 0.733)',\n              cursor: 'pointer',\n            }}\n          >\n            <DeleteOutlined />\n          </span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Complete;\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  notification,\n  Modal,\n  Form,\n  Empty,\n  Button,\n  Spin,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  UsergroupAddOutlined,\n  CheckOutlined,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport MediaLibrary from '../../../components/MediaLibrary';\nimport ComponentItem from './ComponentItem';\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\nconst validationSchema = Yup.object().shape({\n  // groupName: Yup.string()\n  //   .label('Name')\n  //   .required('Name is required')\n  //   .min(3, 'Name must have at least 3 characters'),\n});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Salary report Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  groupName: '',\n  items: [],\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  componentList?: any;\n  setComponentList?: any;\n}\n\nconst ModalChildComponent = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  componentList,\n  setComponentList,\n}) => {\n  const [addComponentState, handleAddComponentFetch] = useHandleFetch(\n    {},\n    'generateSalaryReport'\n  );\n\n  const [brandState, handleTagListFetch] = useHandleFetch({}, 'staffList');\n\n  useEffect(() => {\n    const setBrands = async () => {\n      const brandListRes = await handleTagListFetch({});\n    };\n    setBrands();\n  }, []);\n\n  const [myImages, setmyImages] = useState(false);\n  const [itemsList, setItemsList] = useState([]);\n  const [time, setTimeFeild] = useState('');\n  const [month, setMonthFeild] = useState('');\n\n  console.log('salaryReportItemList', itemsList);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const convertedYear = month ? month.split('-')[0] : '';\n    const convertedMonth = month\n      ? month.split('-')[1] &&\n        month.split('-')[1][0] &&\n        month.split('-')[1][0] === '0'\n        ? month.split('-')[1][1]\n        : month.split('-')[1]\n      : '';\n    const convertedStaffs =\n      itemsList && itemsList.length > 0\n        ? itemsList.map((item) => {\n            return {\n              ...item,\n              bonus: item.bonus ? +item.bonus : 0,\n              convince: item.convince ? +item.convince : 0,\n              extra: item.extra ? +item.extra : 0,\n              negative: item.negative ? +item.negative : 0,\n              id: `${itemsList.length}`,\n            };\n          })\n        : [];\n    const data = {\n      month: convertedMonth ? +convertedMonth : '',\n      year: convertedYear ? +convertedYear : '',\n      staff: convertedStaffs,\n    };\n    const addComponentRes = await handleAddComponentFetch({\n      body: data,\n    });\n\n    // @ts-ignore\n    if (addComponentRes && addComponentRes.status === 'ok') {\n      openSuccessNotification();\n      setComponentList([\n        {\n          id: addComponentRes['_id'] || '',\n          key: addComponentRes['_id'] || '',\n          // @ts-ignore\n          ...addComponentRes,\n        },\n        ...componentList,\n      ]);\n      actions.resetForm();\n      setItemsList([]);\n      setMonthFeild('');\n      setAddNewCategoryVisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addComponentState['isLoading']) {\n      const error = addComponentState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n  }, [addComponentState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.groupName) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleAddComponentItem = () => {\n    setItemsList([\n      ...itemsList,\n      {\n        _id: `${Math.floor(100000 + Math.random() * 900000)}`,\n        bonus: null,\n        convince: null,\n        extra: null,\n        negative: null,\n        id: `${itemsList.length}`,\n      },\n    ]);\n  };\n\n  useEffect(() => {\n    if (brandState.done && brandState.data && brandState.data.length > 0) {\n      const items = brandState.data.map((staff) => {\n        return {\n          ...staff,\n          _id: staff._id,\n          bonus: staff.bonus,\n          convince: staff.convince,\n          extra: staff.extra,\n          negative: staff.negative,\n        };\n      });\n      setItemsList(items);\n    }\n  }, [brandState.data]);\n\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  const handleMonthChange = (date, dateString) => {\n    setMonthFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  return (\n    <>\n      <Formik\n        onSubmit={(values, actions) => handleSubmit(values, actions)}\n        validationSchema={validationSchema}\n        validateOnBlur={false}\n        enableReinitialize={true}\n        initialValues={{ ...initialValues }}\n      >\n        {({\n          handleChange,\n          values,\n          handleSubmit,\n          errors,\n          isValid,\n          isSubmitting,\n          touched,\n          handleBlur,\n          setFieldTouched,\n          handleReset,\n        }) => (\n          <>\n            <Form.Item\n              validateStatus={\n                addComponentState.error['error']['year'] ||\n                addComponentState.error['error']['month']\n                  ? 'error'\n                  : ''\n              }\n              help={\n                addComponentState.error['error']['year'] ||\n                addComponentState.error['error']['month']\n              }\n              // noStyle={true}\n            >\n              <h3 className='inputFieldLabel'>Time</h3>\n              <DatePicker\n                picker='month'\n                placeholder={'2020, Jan'}\n                className='inputclassName'\n                style={{\n                  width: '100%',\n                  borderColor: '#eee',\n                }}\n                onChange={handleMonthChange}\n                {...(month && {\n                  defaultValue: moment(month),\n                })}\n              />\n            </Form.Item>\n\n            <div\n              style={{\n                marginTop: '25px',\n              }}\n            ></div>\n\n            {itemsList && itemsList[0] && (\n              <h3 className='addOrderContainer-sectionTitle'>\n                <span>\n                  <UsergroupAddOutlined />\n                </span>\n                Staffs\n              </h3>\n            )}\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <div className='staffComponentItemsContainer'>\n              {itemsList.map((itemComponent, index) => {\n                return (\n                  <ComponentItem\n                    index={index}\n                    brandState={brandState}\n                    componentItem={itemComponent}\n                    itemsList={itemsList}\n                    setItemsList={setItemsList}\n                  />\n                );\n              })}\n\n              {brandState.done && itemsList && !itemsList[0] && (\n                <div\n                  style={{\n                    marginTop: '5px',\n                    width: '100%',\n                    display: 'flex',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Empty\n                    description='No Staff'\n                    image={Empty.PRESENTED_IMAGE_SIMPLE}\n                  />\n                </div>\n              )}\n              {brandState.isLoading && (\n                <div\n                  style={{\n                    padding: '15px 0',\n                    width: '100%',\n                    height: '100%',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Spin />\n                </div>\n              )}\n            </div>\n\n            <div\n              style={{\n                padding: '15px',\n                display: 'flex',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                style={{\n                  color: '#555',\n                  marginRight: '10px',\n                }}\n                className='btnPrimaryClassNameoutline-cancle'\n                onClick={() => setAddNewCategoryVisible(false)}\n                type='default'\n              >\n                Cancel\n              </Button>\n\n              <Button\n                className='btnPrimaryClassNameoutline'\n                onClick={handleSubmit}\n                loading={addComponentState.isLoading}\n                type='link'\n                icon={<CheckOutlined />}\n              >\n                Generate\n              </Button>\n            </div>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  componentList,\n  setComponentList,\n}: Props) => {\n  const handleCancel = () => {\n    setAddNewCategoryVisible(false);\n  };\n\n  return (\n    <Modal\n      style={{\n        top: '40px',\n      }}\n      title='Add Salary Report'\n      visible={addNewCategoryVisible}\n      onCancel={handleCancel}\n      destroyOnClose={true}\n      footer={false}\n      width={'80vw'}\n      bodyStyle={{\n        margin: '0',\n        padding: '10px',\n      }}\n    >\n      <ModalChildComponent\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n        componentList={componentList}\n        setComponentList={setComponentList}\n      />\n    </Modal>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport {\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\nimport moment from 'moment';\nimport { CSVLink } from 'react-csv';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  DownloadOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../../hooks';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport { DataTableSkeleton } from '../../../components/Placeholders';\nimport AddNewExpense from './AddNewSalaryReport';\n\nconst months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Expense Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst MyTable = ({ data, setTagList }) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\n    {},\n    'deleteSalaryReport'\n  );\n\n  const history = useHistory();\n\n  const handleDeleteTag = async (id) => {\n    const deleteTagRes = await handleDeleteTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\n      openSuccessNotification('Deleted Salary report');\n      const newtagList = data.filter((item) => item.id !== id);\n      setTagList(newtagList);\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Year'\n          dataIndex='year'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/salaryReport/${record.id}`);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Month'\n          dataIndex='month'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/salaryReport/${record.id}`);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text && months[text]}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Total Salary'\n          dataIndex='totalSalary'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Total Bonus'\n          dataIndex='totalBonus'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Total Extra'\n          dataIndex='totalExtra'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Total Convince'\n          dataIndex='totalConvince'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <Popconfirm\n                onConfirm={() => handleDeleteTag(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n    </>\n  );\n};\n\ninterface Props {}\n\nconst TagList = ({}: Props) => {\n  const [tagList, setTagList] = useState([]);\n\n  console.log('salaryReport4', tagList);\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'getSalaryReport');\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tags = await handleTagListFetch({});\n      // @ts-ignore\n      setTagList(tags);\n    };\n    setTags();\n  }, []);\n\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: values.description,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n\n      setTagList([\n        ...tagList,\n        {\n          id: addTagRes['id'] || '',\n          key: addTagRes['id'] || '',\n          name: addTagRes['name'] || '',\n          description: addTagRes['description'] || '',\n        },\n      ]);\n      actions.resetForm();\n    }\n    actions.setSubmitting(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleSearch = (value) => {\n    if (tagState.data.length > 0) {\n      const newTagList = tagState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setTagList(newTagList);\n    }\n  };\n\n  const headers = [\n    { label: 'Year', key: 'year' },\n    { label: 'Month', key: 'month' },\n    { label: 'Total Salary', key: 'totalSalary' },\n    { label: 'Total Bonus', key: 'totalBonus' },\n    { label: 'Total Convince', key: 'totalConvince' },\n    { label: 'Total Extra', key: 'totalExtra' },\n    { label: 'Total Negative', key: 'totalNegative' },\n  ];\n\n  const getData = () => {\n    if (tagList && tagList.length > 0) {\n      const csvData = tagList.map((item) => {\n        return {\n          year: item.year,\n          month: item.month ? months[item.month] : '',\n          totalSalary: item.totalSalary,\n          totalBonus: item.totalBonus,\n          totalConvince: item.totalConvince,\n          totalExtra: item.totalExtra,\n          totalNegative: item.totalNegative,\n        };\n      });\n\n      return csvData;\n    } else return [];\n  };\n\n  const data = getData();\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar-tag'>\n            <h2 className='categoryListContainer__header-title'>\n              Salary reports\n            </h2>\n\n            {/* <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search expense..'\n              onSearch={(value) => handleSearch(value)}\n            /> */}\n          </div>\n\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            {tagList && tagList.length > 0 && (\n              <>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    marginRight: '25px',\n                  }}\n                >\n                  <CSVLink\n                    filename={'SalaryReport.csv'}\n                    data={data}\n                    headers={headers}\n                  >\n                    Export as csv\n                  </CSVLink>\n                  <span\n                    style={{\n                      color: '#1890ff',\n                      marginLeft: '10px',\n                    }}\n                  >\n                    <DownloadOutlined />\n                  </span>\n                </div>\n              </>\n            )}\n\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          </div>\n        </div>\n        <div className='categoryListContainer__categoryList'>\n          {tagState.done && tagList.length > 0 && (\n            <MyTable setTagList={setTagList} data={tagList} />\n          )}\n          {tagState.isLoading && <DataTableSkeleton />}\n\n          {tagState.done && !(tagList.length > 0) && (\n            <div\n              style={{\n                marginTop: '150px',\n              }}\n            >\n              <Empty\n                description='No Expense found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewExpense\n        componentList={tagList}\n        setComponentList={setTagList}\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n      />\n    </>\n  );\n};\n\nexport default TagList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../../hooks';\n\n// import lib\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\n\nimport moment from 'moment';\n\n// import components\nimport { DataTableSkeleton } from '../../../components/Placeholders';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\ninterface Props {\n  productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\n    {},\n    'getSalaryReportDetail'\n  );\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\n    {},\n    'tagProducts'\n  );\n\n  const history = useHistory();\n  const [tagEditVisible, setTagEditVisible] = useState(false);\n  const [tagDetailData, setTagDetailData] = useState({});\n\n  console.log('tagDetailDataSalaryreport!', tagDetailData);\n\n  const params = useParams();\n  const tagId = params['id'];\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const res = await handleTagDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (res) {\n        // @ts-ignore\n        setTagDetailData(res);\n      }\n    };\n\n    getBrandDetail();\n  }, [tagId]);\n\n  useEffect(() => {\n    const getTagProducts = async () => {\n      await handleTagProductsFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n    };\n\n    getTagProducts();\n  }, [tagId]);\n\n  console.log('tagProductsState', tagProductsState);\n\n  console.log('brandParams', params);\n\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Salary Report detail</h3>\n      </div>\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\n        {tagDetailState.done &&\n          tagDetailData &&\n          !(Object.keys(tagDetailData).length > 0) && (\n            <Empty\n              description='No Expense found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {tagDetailState.done &&\n          tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && (\n            <div className='brandDetailContainer__header'>\n              <div className='brandDetailContainer__header-info'>\n                {tagDetailData['year'] && (\n                  <h3>\n                    YEAR:\n                    <span>{tagDetailData['year']}</span>\n                  </h3>\n                )}\n                {tagDetailData['month'] && (\n                  <h3>\n                    MONTH:\n                    <span>\n                      {tagDetailData['month'] && months[tagDetailData['month']]}\n                    </span>\n                  </h3>\n                )}\n                {tagDetailData['totalSalary'] && (\n                  <h3>\n                    TOTAL SALARY:\n                    <span>{tagDetailData['totalSalary']}</span>\n                  </h3>\n                )}\n\n                {tagDetailData['totalBonus'] ? (\n                  <h3>\n                    TOTAL BONUS:\n                    <span>{tagDetailData['totalBonus']}</span>\n                  </h3>\n                ) : (\n                  ''\n                )}\n\n                {tagDetailData['totalConvince'] && (\n                  <h3>\n                    TOTAL CONVINCE:\n                    <span>{tagDetailData['totalConvince']}</span>\n                  </h3>\n                )}\n                {tagDetailData['totalExtra'] && (\n                  <h3>\n                    TOTAL EXTRA:\n                    <span>{tagDetailData['totalExtra']}</span>\n                  </h3>\n                )}\n                {tagDetailData['totalNegative'] && (\n                  <h3>\n                    TOTAL NEGATIVE:\n                    <span>{tagDetailData['totalNegative']}</span>\n                  </h3>\n                )}\n              </div>\n            </div>\n          )}\n      </Skeleton>\n\n      {tagDetailState.done &&\n        tagDetailState.data &&\n        Object.keys(tagDetailState.data).length > 0 && (\n          <>\n            <div className='brandDetailContainer__heading'>\n              <h3>Staffs</h3>\n            </div>\n          </>\n        )}\n\n      <div className='brandDetailContainer__body'>\n        {tagDetailState.done &&\n          tagDetailState.data &&\n          Object.keys(tagDetailState.data).length > 0 &&\n          tagDetailState.data['staff'] &&\n          !(tagDetailState.data['staff'].length > 0) && (\n            <div\n              style={{\n                marginTop: '100px',\n              }}\n            >\n              <Empty\n                description='No Staffs exists for this Salary report'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n\n        {tagDetailState.done &&\n          tagDetailState.data &&\n          Object.keys(tagDetailState.data).length > 0 &&\n          tagDetailState.data['staff'] &&\n          tagDetailState.data['staff'].length > 0 && (\n            <>\n              <Table\n                style={{\n                  paddingTop: '10px',\n                  borderRadius: '5px !important',\n                  overflow: 'hidden',\n                  boxShadow:\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\n                }}\n                size='small'\n                dataSource={tagDetailState.data['staff']}\n                tableLayout={'auto'}\n                onHeaderRow={(column) => {\n                  return {\n                    style: {\n                      color: 'red !important',\n                    },\n                  };\n                }}\n              >\n                <Column\n                  title='Name'\n                  dataIndex='name'\n                  key='id'\n                  className='classnameofthecolumn'\n                  render={(text, record: any) => (\n                    <>\n                      <h4\n                        onClick={() => {\n                          history.push(`/admin/staff/${record.id}`);\n                          // setcategoryDetailVisible(true);\n                        }}\n                        style={{\n                          fontWeight: 400,\n                          color: '#555',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        {text}\n                      </h4>\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Total Salary'\n                  dataIndex='totalSalary'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Convince'\n                  dataIndex='convince'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Extra'\n                  dataIndex='extra'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Negative'\n                  dataIndex='negative'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n              </Table>\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default NewBrandDetail;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport DatePicker from '../../components/Field/DatePicker';\nimport StaffIds from './StaffIds';\n\nconst validationSchema = Yup.object().shape({});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Expense Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  topic: '',\n  amount: null,\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagList?: any;\n  setTagList?: any;\n  category?:any; \n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  tagList,\n  setTagList,\n  category\n}: Props) => {\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'updateExpense');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [time, setTimeFeild] = useState('');\n  const [customerId, setCustomerId] = useState([]);\n\n\n  \n  useEffect(() => {\n    if(category && category.date){\n        setTimeFeild(category.date)\n    }\n  },[category]); \n\n  \n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\n    {},\n    'staffList'\n  );\n\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\n\n  useEffect(() => {\n    const setCustomers = async () => {\n      const customerListRes = await handleCustomerListFetch({});\n    };\n    setCustomers();\n  }, []);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n\t\turlOptions: {\n\t\t\tplaceHolders: {\n\t\t\t\tid: category.id || category._id\n\t\t\t}\n\t\t},\n      body: {\n        topic: values.topic.trim(),\n        amount: values.amount,\n        date: time,\n        staff: customerId,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n\n\n\t  const positionInTag = () => {\n\t\treturn tagList.map(item => item.id).indexOf(category.id || category._id);\n\t}\n\n\tconst index = positionInTag();\n\n\t// @ts-ignore\n\tconst updatedItem = Object.assign({}, tagList[index], { ...addTagRes });\n\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\n\tsetTagList(updateTagList);\n\n      actions.resetForm();\n      setAddNewCategoryVisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addTagState['isLoading']) {\n      const error = addTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\n      if (addTagState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addTagState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...category }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Add New Expense'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <Input\n              label='Topic'\n              value={values.topic}\n              name='topic'\n              isError={\n                (touched.topic && errors.topic) ||\n                (!isSubmitting && addTagState.error['error']['topic'])\n              }\n              errorString={\n                (touched.topic && errors.topic) ||\n                (!isSubmitting && addTagState.error['error']['topic'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('topic');\n              }}\n            />\n\n            <Input\n              label='Amount'\n              value={values.amount}\n              name='amount'\n              type={'number'}\n              min={0}\n              isError={\n                (touched.amount && errors.amount) ||\n                (!isSubmitting && addTagState.error['error']['amount'])\n              }\n              errorString={\n                (touched.amount && errors.amount) ||\n                (!isSubmitting && addTagState.error['error']['amount'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('amount');\n              }}\n            />\n\n            <DatePicker\n              date={time}\n              placeholder='10/20/2020'\n              label='Date'\n              onChange={handleTimeChange}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            {/* <h4 className='inputFieldLabel'>Associative staff</h4>\n            <StaffIds\n              customerListState={customerListState}\n              setSelectedCustomerData={setSelectedCustomerData}\n              setCustomerId={setCustomerId}\n            /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport DatePicker from '../../components/Field/DatePicker';\nimport StaffIds from './StaffIds';\n\nconst validationSchema = Yup.object().shape({});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Expense Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  topic: '',\n  amount: null,\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagList?: any;\n  setTagList?: any;\n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  tagList,\n  setTagList,\n}: Props) => {\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addExpense');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [time, setTimeFeild] = useState('');\n  const [customerId, setCustomerId] = useState([]);\n\n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\n    {},\n    'staffList'\n  );\n\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\n\n  useEffect(() => {\n    const setCustomers = async () => {\n      const customerListRes = await handleCustomerListFetch({});\n    };\n    setCustomers();\n  }, []);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n      body: {\n        topic: values.topic.trim(),\n        amount: values.amount,\n        date: time,\n        staff: customerId,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n\n      setTagList([\n        {\n          // @ts-ignore\n          ...addTagRes,\n          id: addTagRes['_id'] || '',\n          key: addTagRes['_id'] || '',\n        },\n        ...tagList,\n      ]);\n      actions.resetForm();\n      setAddNewCategoryVisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addTagState['isLoading']) {\n      const error = addTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\n      if (addTagState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addTagState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Add New Expense'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Create'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <Input\n              label='Topic'\n              value={values.topic}\n              name='topic'\n              isError={\n                (touched.topic && errors.topic) ||\n                (!isSubmitting && addTagState.error['error']['topic'])\n              }\n              errorString={\n                (touched.topic && errors.topic) ||\n                (!isSubmitting && addTagState.error['error']['topic'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('topic');\n              }}\n            />\n\n            <Input\n              label='Amount'\n              value={values.amount}\n              name='amount'\n              type={'number'}\n              min={0}\n              isError={\n                (touched.amount && errors.amount) ||\n                (!isSubmitting && addTagState.error['error']['amount'])\n              }\n              errorString={\n                (touched.amount && errors.amount) ||\n                (!isSubmitting && addTagState.error['error']['amount'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('amount');\n              }}\n            />\n\n            <DatePicker\n              date={time}\n              placeholder='10/20/2020'\n              label='Date'\n              onChange={handleTimeChange}\n            />\n\n            {/* <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            <h4 className='inputFieldLabel'>Associative staff</h4>\n            <StaffIds\n              customerListState={customerListState}\n              setSelectedCustomerData={setSelectedCustomerData}\n              setCustomerId={setCustomerId}\n            /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport {\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\nimport moment from 'moment';\nimport { CSVLink } from \"react-csv\";\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  DownloadOutlined\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport QuickEdit from './QuickEdit';\nimport AddNewExpense from './AddNewExpense';\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Expense Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst MyTable = ({ data, setTagList }) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\n    {},\n    'deleteExpense'\n  );\n\n  const history = useHistory();\n\n  const handleDeleteTag = async (id) => {\n    const deleteTagRes = await handleDeleteTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\n      openSuccessNotification('Deleted Expense');\n      const newtagList = data.filter((item) => item.id !== id);\n      setTagList(newtagList);\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Topic'\n          dataIndex='topic'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/expense/${record.id}`);\n                  // setBrandDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Amount'\n          dataIndex='amount'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Date'\n          dataIndex='date'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm a')}</h5>\n            </Space>\n          )}\n        />\n\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <a href='##'>\n                <Tooltip placement='top' title='Edit Expense'>\n                  <span\n                    className='iconSize'\n                    onClick={() => {\n                      setvisible(true);\n                      setactiveCategoryForEdit(record);\n                    }}\n                  >\n                    <EditOutlined />\n                  </span>\n                </Tooltip>\n              </a>\n\n              <Popconfirm\n                onConfirm={() => handleDeleteTag(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          tagList={data}\n          setTagList={setTagList}\n          setAddNewCategoryVisible={setvisible}\n          addNewCategoryVisible={visible}\n          category={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {}\n\nconst TagList = ({}: Props) => {\n  const [tagList, setTagList] = useState([]);\n\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'expenseList');\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tags = await handleTagListFetch({});\n      // @ts-ignore\n      setTagList(tags);\n    };\n    setTags();\n  }, []);\n\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addTag');\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id: values.id,\n        },\n      },\n      body: {\n        name: values.name.trim(),\n        description: values.description,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n\n      setTagList([\n        ...tagList,\n        {\n          id: addTagRes['id'] || '',\n          key: addTagRes['id'] || '',\n          name: addTagRes['name'] || '',\n          description: addTagRes['description'] || '',\n        },\n      ]);\n      actions.resetForm();\n    }\n    actions.setSubmitting(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleSearch = (value) => {\n    if (tagState.data.length > 0) {\n      const newTagList = tagState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setTagList(newTagList);\n    }\n  };\n\n\n  \n  const headers = [\n    { label: \"Topic\", key: \"topic\" },\n    { label: \"Amount\", key: \"amount\" },\n    { label: \"Date\", key: \"date\" },\n  ];\n   \n\n  const getData = () => {\n    if(tagList && tagList.length > 0){\n      const csvData = tagList.map(item => {\n        return {\n          topic: item.topic,\n          amount: item.amount,\n          date : item.date ? moment(item.date).format('MMMM Do YYYY, h:mm a') : ''\n        }\n      })\n\n      return csvData; \n    }\n    else return []; \n  }; \n\n\n  const data = getData();\n\n\n\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar-tag'>\n            <h2 className='categoryListContainer__header-title'>Expenses</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search expense..'\n              onSearch={(value) => handleSearch(value)}\n            />\n          </div>\n\n          \n        <div style={{\n          display:'flex',\n          alignItems:'center'\n        }}>\n        \n        {tagList && tagList.length > 0 && (\n          <>\n          <div style={{\n          display:'flex',\n          alignItems:'center',\n          marginRight: '25px'\n        }}>\n        <CSVLink\n         filename={\"Expenses.csv\"}\n         data={data} headers={headers}>\n          Export as csv \n        </CSVLink>\n        <span style={{\n          color:'#1890ff',\n          marginLeft: '10px'\n        }}>\n        <DownloadOutlined />\n        </span>\n        </div>\n          </>\n        )}\n          <Button\n            // type=\"primary\"\n            className='btnPrimaryClassNameoutline'\n            icon={<PlusOutlined />}\n            onClick={() => setAddNewCategoryVisible(true)}\n          >\n            Add New\n          </Button>\n        </div>\n\n\n        \n        </div>\n        <div className='categoryListContainer__categoryList'>\n          {tagState.done && tagList.length > 0 && (\n            <MyTable setTagList={setTagList} data={tagList} />\n          )}\n          {tagState.isLoading && <DataTableSkeleton />}\n\n          {tagState.done && !(tagList.length > 0) && (\n            <div\n              style={{\n                marginTop: '150px',\n              }}\n            >\n              <Empty\n                description='No Expense found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewExpense\n        tagList={tagList}\n        setTagList={setTagList}\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n      />\n    </>\n  );\n};\n\nexport default TagList;\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport {\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Modal,\n  Tooltip,\n} from 'antd';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  FileAddOutlined,\n  DeleteOutlined,\n  CheckCircleOutlined,\n  CloseOutlined,\n  CheckOutlined,\n  InfoCircleOutlined,\n  PlusOutlined,\n  FileImageFilled,\n} from '@ant-design/icons';\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\nimport MediaLibrary from '../../components/MediaLibrary';\nimport DatePicker from '../../components/Field/DatePicker';\nimport StaffIds from './StaffIds';\n\nconst validationSchema = Yup.object().shape({});\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Expense Updated',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst initialValues = {\n  topic: '',\n  amount: null,\n};\n\ninterface Props {\n  addNewCategoryVisible?: any;\n  setAddNewCategoryVisible?: any;\n  tagList?: any;\n  setTagList?: any;\n  category?:any; \n  setTagDetailData?:any; \n}\n\nconst AddNewBrand = ({\n  addNewCategoryVisible,\n  setAddNewCategoryVisible,\n  category,\n  setTagDetailData\n}: Props) => {\n  const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'updateExpense');\n  const [myImages, setmyImages] = useState(false);\n  const [visibleMedia, setvisibleMedia] = useState(false);\n  const [time, setTimeFeild] = useState('');\n  const [customerId, setCustomerId] = useState([]);\n\n\n\n  useEffect(() => {\n    if(category && category.date){\n        setTimeFeild(category.date)\n    }\n  },[category]); \n\n  \n  const [customerListState, handleCustomerListFetch] = useHandleFetch(\n    {},\n    'staffList'\n  );\n\n  const [selectedCustomerData, setSelectedCustomerData] = useState({});\n\n  useEffect(() => {\n    const setCustomers = async () => {\n      const customerListRes = await handleCustomerListFetch({});\n    };\n    setCustomers();\n  }, []);\n\n  const handleSubmit = async (values: any, actions: any) => {\n    const addTagRes = await handleAddTagFetch({\n\t\turlOptions: {\n\t\t\tplaceHolders: {\n\t\t\t\tid: category.id || category._id\n\t\t\t}\n\t\t},\n      body: {\n        topic: values.topic.trim(),\n        amount: values.amount,\n        date: time,\n        staff: customerId,\n      },\n    });\n\n    // @ts-ignore\n    if (addTagRes && addTagRes.status === 'ok') {\n      openSuccessNotification();\n\n      setTagDetailData({\n          ...category,\n          // @ts-ignore\n        ...addTagRes,\n      });\n\n      actions.resetForm();\n      setAddNewCategoryVisible(false);\n    } else {\n      openErrorNotification();\n    }\n\n    actions.setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (!addTagState['isLoading']) {\n      const error = addTagState['error'];\n      if (error['isError'] && Object.keys(error['error']).length > 0) {\n        if (error['error']['registerError']) {\n          // setServerErrors(error['error']['registerError']);\n        } else if (error['error']['checkoutError']) {\n          // setServerErrors(error['error']['checkoutError']);\n        } else {\n          // setServerErrors(error['error']);\n        }\n\n        const errors =\n          Object.values(error['error']).length > 0\n            ? Object.values(error['error'])\n            : [];\n        errors.forEach((err, i) => {\n          if (typeof err === 'string') {\n            openErrorNotification(err);\n          } else if (typeof err === 'object') {\n            if (err && Object.keys(err).length > 0) {\n              const errs = Object.values(err);\n              errs.forEach((err) => {\n                openErrorNotification(err);\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (!addTagState['isLoading'] && Object.keys(addTagState.data).length > 0) {\n      if (addTagState['data']['status'] === 'ok') {\n        // openSuccessNotification('Order Created Successfully');\n        // history.push({\n        //   pathname: '/orderDetails',\n        //   state: checkoutState['data']\n        // })\n        // clearCart();\n        // setIsModalShown(true);\n      }\n    }\n  }, [addTagState]);\n\n  const handleCancel = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleTimeChange = (date, dateString) => {\n    setTimeFeild(dateString);\n    // console.log('date', date, dateString);\n  };\n\n  return (\n    <Formik\n      onSubmit={(values, actions) => handleSubmit(values, actions)}\n      validationSchema={validationSchema}\n      validateOnBlur={false}\n      enableReinitialize={true}\n      initialValues={{ ...initialValues, ...category }}\n    >\n      {({\n        handleChange,\n        values,\n        handleSubmit,\n        errors,\n        isValid,\n        isSubmitting,\n        touched,\n        handleBlur,\n        setFieldTouched,\n        handleReset,\n      }) => (\n        <>\n          <Modal\n            style={{\n              top: '40px',\n            }}\n            title='Add New Expense'\n            visible={addNewCategoryVisible}\n            onOk={(e: any) => handleSubmit(e)}\n            onCancel={handleCancel}\n            okText='Update'\n            okButtonProps={{\n              loading: isSubmitting,\n              htmlType: 'submit',\n              //   disabled: getisSubmitButtonDisabled(values, isValid),\n            }}\n          >\n            <Input\n              label='Topic'\n              value={values.topic}\n              name='topic'\n              isError={\n                (touched.topic && errors.topic) ||\n                (!isSubmitting && addTagState.error['error']['topic'])\n              }\n              errorString={\n                (touched.topic && errors.topic) ||\n                (!isSubmitting && addTagState.error['error']['topic'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('topic');\n              }}\n            />\n\n            <Input\n              label='Amount'\n              value={values.amount}\n              name='amount'\n              type={'number'}\n              min={0}\n              isError={\n                (touched.amount && errors.amount) ||\n                (!isSubmitting && addTagState.error['error']['amount'])\n              }\n              errorString={\n                (touched.amount && errors.amount) ||\n                (!isSubmitting && addTagState.error['error']['amount'])\n              }\n              onChange={(e: any) => {\n                handleChange(e);\n                setFieldTouched('amount');\n              }}\n            />\n\n            <DatePicker\n              date={time}\n              placeholder='10/20/2020'\n              label='Date'\n              onChange={handleTimeChange}\n            />\n\n            <div\n              style={{\n                marginTop: '15px',\n              }}\n            ></div>\n\n            {/* <h4 className='inputFieldLabel'>Associative staff</h4>\n            <StaffIds\n              customerListState={customerListState}\n              setSelectedCustomerData={setSelectedCustomerData}\n              setCustomerId={setCustomerId}\n            /> */}\n          </Modal>\n\n          <MediaLibrary\n            setvisible={setvisibleMedia}\n            visible={visibleMedia}\n            setmyImages={setmyImages}\n            myImages={myImages}\n            isModalOpenForImages={true}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddNewBrand;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import lib\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\n\nimport moment from 'moment';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport ExpenseEdit from './ExpenseEdit';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n  productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\n    {},\n    'expenseDetail'\n  );\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\n    {},\n    'tagProducts'\n  );\n  const [tagEditVisible, setTagEditVisible] = useState(false);\n  const [tagDetailData,setTagDetailData] = useState({}); \n\n  const params = useParams();\n  const tagId = params['id'];\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const res = await handleTagDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if(res){\n        // @ts-ignore\n        setTagDetailData(res); \n      }; \n\n\n\n    };\n\n    getBrandDetail();\n  }, [tagId]);\n\n  useEffect(() => {\n    const getTagProducts = async () => {\n      await handleTagProductsFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n    };\n\n    getTagProducts();\n  }, [tagId]);\n\n  console.log('tagProductsState', tagProductsState);\n\n  console.log('brandParams', params);\n\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Expense Detail</h3>\n\n        {tagDetailState.done &&\n          tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && (\n            <>\n              <ExpenseEdit\n                addNewCategoryVisible={tagEditVisible}\n                setAddNewCategoryVisible={setTagEditVisible}\n                category={tagDetailData}\n                setTagDetailData={setTagDetailData}\n              />\n              <Button\n                onClick={() => setTagEditVisible(true)}\n                type='link'\n                icon={<EditOutlined />}\n              >\n                Edit\n              </Button>\n            </>\n          )}\n      </div>\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\n        {tagDetailState.done &&\n          tagDetailData &&\n          !(Object.keys(tagDetailData).length > 0) && (\n            <Empty\n              description='No Expense found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {tagDetailState.done &&\n          tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && (\n            <div className='brandDetailContainer__header'>\n              <div className='brandDetailContainer__header-info'>\n                {tagDetailData['topic'] && (\n                  <h3>\n                    TOPIC:\n                    <span>{tagDetailData['topic']}</span>\n                  </h3>\n                )}\n                {tagDetailData['amount'] && (\n                  <h3>\n                    AMOUNT:\n                    <span>{tagDetailData['amount']}</span>\n                  </h3>\n                )}\n                {tagDetailData['date'] && (\n                  <h3>\n                    DATE:\n                    <span>\n                      {tagDetailState['data']['date'] &&\n                        moment(tagDetailState['data']['date']).format(\n                          'MMMM Do YYYY, h:mm a'\n                        )}\n                    </span>\n                  </h3>\n                )}\n                {tagDetailData[''] && (\n                  <h3>\n                    ASSOCIATIVE STAFF:\n                    <span>{tagDetailData['date']}</span>\n                  </h3>\n                )}\n              </div>\n            </div>\n          )}\n      </Skeleton>\n    </div>\n  );\n};\n\nexport default NewBrandDetail;\n","import React, { useEffect, useState } from 'react';\n\n\n// import hooks\nimport { useHandleFetch } from '../../hooks';\n\n// import components \nimport Empty from \"../../components/Empty\";\n\n\n// import libraries \nimport { Button, Tag, Input, Spin } from 'antd';\nimport {\n  PlusOutlined\n} from '@ant-design/icons';\n\n\n\n\nconst { CheckableTag } = Tag;\nconst { Search } = Input;\n\ninterface Props {\n  setTagIds?: any;\n  selectedTags?: any;\n  setSelectedTags?: any;\n}\n\n\nconst Tags = ({\n  setTagIds,\n  setSelectedTags,\n  selectedTags,\n\n}: Props) => {\n  const [options, setoptions] = useState([]);\n  const [selectedOpions, setselectedOptions] = useState([]);\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'dealerAreaList');\n  const [searchValue, setsearchValue] = useState('');\n\n\n  const handleChange = (tag, checked) => {\n    const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\n    setSelectedTags(nextSelectedTags);\n\n    if (tagState.done && tagState.data.length > 0 && nextSelectedTags.length > 0) {\n      const selectedCategoryIds = nextSelectedTags.map((item) => {\n        const selectedcategory = tagState.data.find(\n          (cat) => cat.name.toLowerCase() === item.toLowerCase()\n        );\n        if (selectedcategory) {\n          return selectedcategory.id;\n        }\n      });\n      setTagIds(selectedCategoryIds);\n    }\n  }\n\n\n  useEffect(() => {\n    console.log('itwhere')\n    if (tagState.data && tagState.data.length > 0 && selectedTags.length > 0) {\n      const selectedCategoryIds = selectedTags.map((item) => {\n        const selectedcategory = tagState.data.find(\n          (cat) => cat.id === item\n        );\n        if (selectedcategory) {\n          return selectedcategory.name;\n        }\n      });\n      setSelectedTags(selectedCategoryIds);\n    }\n  }, [tagState]);\n\n\n  console.log('areaSelectedTaga',selectedTags)\n  useEffect(() => {\n    const setTags = async () => {\n      const tagListRes = await handleTagListFetch({\n        urlOptions: {\n          params: {\n            isSubCategory: false\n          }\n        }\n      });\n\n      // @ts-ignoref\n      if (tagListRes && tagListRes.length > 0) {\n        // @ts-ignore\n        const tagOptions = tagListRes.map((tag) => {\n          return tag.name\n        });\n        setoptions(tagOptions);\n      }\n\n    };\n\n    setTags();\n  }, []);\n\n\n\n  // const handleChange = (selectItems) => {\n  //   setselectedOptions(selectItems)\n\n  //   if (tagState.done && tagState.data.length > 0 && selectItems.length > 0) {\n  //     const selectedCategoryIds = selectItems.map((item) => {\n  //       const selectedcategory = tagState.data.find(\n  //         (cat) => cat.name.toLowerCase() === item.toLowerCase()\n  //       );\n  //       if (selectedcategory) {\n  //         return selectedcategory.id;\n  //       }\n  //     });\n  //     setTagIds(selectedCategoryIds);\n  //   }\n\n\n  // }\n\n\n  const onSearchChange = (e) => {\n    setsearchValue(e.target.value);\n\n    if (e.target.value === '') {\n      if (tagState.data && tagState.data.length > 0) {\n        // @ts-ignore\n        const categoryNames = tagState.data.map((cat) => cat.name);\n        setoptions(categoryNames);\n      }\n    } else {\n      const newOptions =\n        options.length > 0\n          ? options.filter((option) => {\n            return option.toLowerCase().includes(searchValue.toLowerCase());\n          })\n          : [];\n\n      setoptions(newOptions);\n    }\n  };\n\n\n  console.log('dealerAreaList', tagState)\n\n\n\n  return (\n    <>\n\n      {tagState.isLoading && (\n        <div style={{\n          padding: '15px 0',\n          width: '100%',\n          height: \"100%\",\n          display: \"flex\",\n          justifyContent: 'center',\n          alignItems: 'center'\n        }}>\n          <Spin />\n        </div>\n      )}\n\n\n\n      {tagState.done && !(tagState.data.length > 0) && (\n        <div style={{\n          width: '100%',\n          height: \"100%\",\n          display: \"flex\",\n          justifyContent: 'center',\n          alignItems: 'center'\n        }}>\n          <Empty title='No Area found' height={100} />\n        </div>\n      )}\n\n\n\n\n      {tagState.done && tagState.data.length > 0 && options.length > 0 && (\n        <>\n          <div className='addProduct__categoryBoxContainer-searchBox'>\n            <Search\n              width={'90%'}\n              style={{\n                height: '30px',\n                borderRadius: '3px !important',\n                borderColor: '#eee !important'\n              }}\n              size='middle'\n              placeholder='Dhanmondi, mirpur'\n              onSearch={(value) => console.log(value)}\n              onChange={onSearchChange}\n            />\n          </div>\n\n          {options.map(tag => (\n            <>\n              <CheckableTag\n                key={tag}\n                checked={selectedTags.indexOf(tag) > -1}\n                onChange={checked => handleChange(tag, checked)}\n              >\n                {tag}\n              </CheckableTag>\n            </>\n          ))}\n        </>\n      )}\n\n\n      {/* \n      <div style={{\n        marginTop: '15px'\n      }}>\n\n      </div>\n      <Button\n\n        // type=\"primary\"\n        className='btnSecondaryPlusOutline'\n        icon={<PlusOutlined />}\n      >\n        Add New\n      </Button> */}\n    </>\n  )\n}\n\nexport default Tags\n","import React, { useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport { useHandleFetch } from '../../hooks';\n// import third party ui lib\nimport { Upload, message, Switch, Select, Button, notification, Modal, Empty, Form } from 'antd';\n\nimport {\n\tFileOutlined,\n\tInboxOutlined,\n\tRadiusUpleftOutlined,\n\tRadiusUprightOutlined,\n\tRadiusBottomleftOutlined,\n\tRadiusBottomrightOutlined,\n\tDeleteOutlined,\n\tFileAddOutlined,\n\tCheckCircleOutlined,\n\tInfoCircleOutlined\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../components/Field/Input';\nimport TextArea from '../../components/Field/TextArea';\n\nimport Areas from \"./Areas\";\nconst { Option } = Select;\n\n\n\nconst validationSchema = Yup.object().shape({\n\tfirstName: Yup.string()\n\t\t.label('First name')\n\t\t.required()\n\t\t.min(2, 'First name must have at least 2 characters '),\n\tlastName: Yup.string()\n\t\t.label('Lastname')\n\t\t.required()\n\t\t.min(2, 'Last name must have at least 2 characters '),\n\tphone: Yup.string()\n\t\t.required('Please tell us your mobile number.')\n\t\t.max(13, 'Please enter a valid mobile number.'),\n\tpassword: Yup.string()\n\t\t.label('Password')\n\t\t.required()\n\t\t.min(6, 'Password must have at least 6 characters'),\n\n\temail: Yup.string().label('Email').email('Please enter a valid email'),\n});\n\n\n\n\nconst initialValues = {\n\tphone: '',\n\temail: '',\n\tfirstName: '',\n\tlastName: '',\n\taddress: '',\n\tzipCode: '',\n\tpassword: '',\n\tcode: '',\n\tcommission: '',\n\tdepositMoney: ''\n};\n\n\nconst openSuccessNotification = (message?: any) => {\n\tnotification.success({\n\t\tmessage: message || 'Dealer Created!',\n\t\tdescription: '',\n\t\ticon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n\t});\n};\n\n\nconst openErrorNotification = (message?: any) => {\n\tnotification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\n\ninterface Props {\n\taddNewCategoryVisible: any;\n\tsetAddNewCategoryVisible: any;\n\tcustomerList?: any;\n\tsetCustomerList?: any;\n}\n\nconst AddNewCategory = ({ addNewCategoryVisible, setAddNewCategoryVisible, customerList, setCustomerList }: Props) => {\n\n\tconst [addCustomerState, handleAddCustomerFetch] = useHandleFetch({}, 'addDealer');\n\tconst [selectedCountryValue, setselectedCountryValue] = useState('');\n\tconst [selectedCityValue, setselectedCityValue] = useState('');\n\n\tconst [countryOptions, setcountryOptions] = useState([]);\n\tconst [cityOptions, setcityOptions] = useState([]);\n\n\tconst [countryListState, handleCountryListFetch] = useHandleFetch(\n\t\t[],\n\t\t'countryList'\n\t);\n\n\tconst [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n\n\tconst [tagIds, setTagIds] = useState([]);\n\tconst [selectedTags, setSelectedTags] = useState([]);\n\n\n\n\n\tconst handleSubmit = async (values: any, actions: any) => {\n\n\t\tconst addCustomerRes = await handleAddCustomerFetch({\n\n\t\t\tbody: {\n\t\t\t\tphone: values.phone,\n\t\t\t\temail: values.email,\n\t\t\t\tpassword: values.password,\n\t\t\t\taddress: values.address,\n\t\t\t\tfirstName: values.firstName,\n\t\t\t\tlastName: values.lastName,\n\t\t\t\tcode: values.code,\n\t\t\t\tcommission: values.commission,\n\t\t\t\tdepositMoney: values.depositMoney,\n\t\t\t\tdealerArea: tagIds\n\t\t\t},\n\t\t});\n\n\n\t\t// @ts-ignore\n\t\tif (addCustomerRes && addCustomerRes.status === 'ok') {\n\t\t\t// openSuccessNotification();\n\n\t\t\tsetCustomerList([{\n\t\t\t\tid: addCustomerRes['_id'] || '',\n\t\t\t\tkey: addCustomerRes['_id'] || '',\n\t\t\t\tname: addCustomerRes['firstName'] + ' ' + addCustomerRes['lastName'],\n\t\t\t\t// @ts-ignore\n\t\t\t\t...addCustomerRes\n\t\t\t},...customerList])\n\t\t\tsetAddNewCategoryVisible(false);\n\t\t\tactions.resetForm();\n\t\t}\n\t\telse {\n\t\t\topenErrorNotification();\n\t\t}\n\n\n\n\t\tactions.setSubmitting(false);\n\t};\n\n\n\n\tconst onChangeCity = (value) => {\n\t\tsetselectedCityValue(value);\n\t}\n\n\tconst onChangeCountry = (value) => {\n\t\tsetselectedCountryValue(value);\n\t}\n\n\tuseEffect(() => {\n\t\tconst setCountries = async () => {\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\n\n\t\t\t// @ts-ignore\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: country.name,\n\t\t\t\t\t\tname: country.name\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetcountryOptions(countryOptions);\n\t\t\t}\n\t\t};\n\n\t\tsetCountries();\n\t}, []);\n\n\n\tuseEffect(() => {\n\t\tconsole.log('selectedCountryValue1',selectedCountryValue)\n\t\tconst setCities = async () => {\n\t\t\tconst cityListRes = await handleCityListFetch({\n\t\t\t\turlOptions: {\n\t\t\t\t\tplaceHolders: {\n\t\t\t\t\t\tcountry: selectedCountryValue,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// @ts-ignore\n\t\t\tif (cityListRes && cityListRes.length > 0) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: city.name,\n\t\t\t\t\t\tname: city.name\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetcityOptions(cityOptions);\n\t\t\t}\n\t\t};\n\n\t\tsetCities();\n\t}, [selectedCountryValue]);\n\n\n\n\t\n\tuseEffect(() => {\n\t\tif (!addCustomerState['isLoading']) {\n\t\t\tconst error = addCustomerState['error'];\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\t\t\t\tif (error['error']['registerError']) {\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\n\t\t\t\t} else if (error['error']['checkoutError']) {\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\t// setServerErrors(error['error']);\n\t\t\t\t}\n\n\t\t\t\tconst errors =\n\t\t\t\t\tObject.values(error['error']).length > 0\n\t\t\t\t\t\t? Object.values(error['error'])\n\t\t\t\t\t\t: [];\n\t\t\t\terrors.forEach((err, i) => {\n\t\t\t\t\tif (typeof err === 'string') {\n\t\t\t\t\t\topenErrorNotification(err);\n\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof err === 'object') {\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\n\t\t\t\t\t\t\tconst errs = Object.values(err);\n\t\t\t\t\t\t\terrs.forEach(err => {\n\t\t\t\t\t\t\t\topenErrorNotification(err);\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t!addCustomerState['isLoading'] &&\n\t\t\tObject.keys(addCustomerState.data).length > 0\n\t\t) {\n\t\t\tif (addCustomerState['data']['status'] === 'ok') {\n\t\t\t\topenSuccessNotification('Dealer Created Successfully');\n\t\t\t\t// history.push({\n\t\t\t\t//   pathname: '/orderDetails',\n\t\t\t\t//   state: checkoutState['data']\n\t\t\t\t// })\n\n\t\t\t\t// clearCart();\n\t\t\t\t// setIsModalShown(true);\n\t\t\t}\n\t\t}\n\t}, [addCustomerState]);\n\n\n\n\n\tconst handleCancel = (e: any) => {\n\t\tsetAddNewCategoryVisible(false);\n\t};\n\n\n\tconst getisSubmitButtonDisabled = (values, isValid) => {\n\t\tif (!isValid ||\n\t\t\t!values.firstName ||\n\t\t\t!values.lastName ||\n\t\t\t!values.password ||\n\t\t\t!values.phone ||\n\t\t\t!values.code \n\t\t\t) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\n\n\tconsole.log('cityListState', cityListState)\n\n\n\n\n\treturn (\n\t\t<Formik\n\t\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tvalidateOnBlur={false}\n\t\t\tenableReinitialize={true}\n\t\t\tinitialValues={\n\t\t\t\t{ ...initialValues }\n\t\t\t}\n\t\t>\n\t\t\t{({\n\t\t\t\thandleChange,\n\t\t\t\tvalues,\n\t\t\t\thandleSubmit,\n\t\t\t\terrors,\n\t\t\t\tisValid,\n\t\t\t\tisSubmitting,\n\t\t\t\ttouched,\n\t\t\t\thandleBlur,\n\t\t\t\tsetFieldTouched,\n\t\t\t\thandleReset,\n\t\t\t}) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttop: '40px',\n\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tbodyStyle={{\n\t\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\twidth={'70vw'}\n\t\t\t\t\t\t\ttitle=\"Add New Dealer\"\n\t\t\t\t\t\t\tvisible={addNewCategoryVisible}\n\t\t\t\t\t\t\tonOk={(e: any) => handleSubmit(e)}\n\t\t\t\t\t\t\tonCancel={handleCancel}\n\t\t\t\t\t\t\tokText='Create'\n\t\t\t\t\t\t\tokButtonProps={{\n\t\t\t\t\t\t\t\tloading: isSubmitting,\n\t\t\t\t\t\t\t\thtmlType: \"submit\",\n\t\t\t\t\t\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t<section className='addProductGridContainer'>\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\n\t\t\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\n\t\t\t\t\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\n\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\n\t\t\t\t\t\t\t\t\t\tname='firstName'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['firstName'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\n\t\t\t\t\t\t\t\t\t\tname='lastName'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['lastName'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\n\n\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\n\t\t\t\t\t\t\t\t\t\tname='phone'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['phone'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['email'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\n\n\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={values.code}\n\t\t\t\t\t\t\t\t\tname='code'\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['code'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['code'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['password'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\n\t\t\t\t\t\t\t\t\tname='depositMoney'\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['depositMoney'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['depositMoney'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Commission'\n\t\t\t\t\t\t\t\t\ttype='commission'\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\n\t\t\t\t\t\t\t\t\tname='commission'\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['commission'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['commission'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\tmarginTop: '12px'\n\t\t\t\t\t\t\t}}></div>\n\n\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\n\t\t\t\t\t\t\t\t\t\tname='address'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && addCustomerState.error['error']['address'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\n\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</section>\n\n\t\n\n\n\n\n\t\t\t\t\t\t</Modal>\n\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t</Formik>\n\n\n\n\n\t);\n};\n\nexport default AddNewCategory;\n","import React,{useState, useEffect} from 'react';\nimport { Modal, Select,notification , Form, Empty } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\n\n\n\n// import components\nimport Input from '../../components/Field/Input';\nimport {useHandleFetch} from '../../hooks';\nimport Areas from \"./Areas\";\n\n\n\nconst { Option } = Select;\n\n\nconst validationSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .label('Firstname')\n      .required()\n      .min(2, 'First name must have at least 2 characters '),\n    lastName: Yup.string()\n      .label('Lastname')\n      .required()\n      .min(2, 'Lastname must have at least 2 characters '),\n    phone: Yup.string()\n      .required('Please tell us your mobile number.')\n      .max(13, 'Please enter a valid mobile number.'),\n    password: Yup.string()\n      .label('Password')\n      .min(6, 'Password must have at least 6 characters'),\n    email: Yup.string().label('Email').email('Please enter a valid email'),\n  });\n\n\n\n  \nconst openSuccessNotification = (message?: any) => {\n\tnotification.success({\n\t  message: message || 'Dealer Updated',\n\t  description: '',\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n\t});\n  };\n\n\n  const openErrorNotification = (message?: any) => {\n\tnotification.success({\n\t  message: message || 'Something Went Wrong',\n\t  description: '',\n\t  icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n\t});\n  };\n\n\n\n\n\n\ninterface Props {\n\tcustomer: any;\n\tsetvisible: any; \n\tvisible: any;\n\tcustomerList?: any; \n\tsetCustomerList?:any\n\n}\n\nconst QuickEdit = ({ customer, setvisible, visible, customerList, setCustomerList }: Props) => {\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateDealer');\n\n\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \n    const [selectedCityValue,setselectedCityValue] = useState(''); \n\n    const [countryOptions,setcountryOptions] = useState([]); \n    const [cityOptions,setcityOptions] = useState([]); \n\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\n        [],\n        'countryList'\n      );\n    \n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n    \n\n\t  const [tagIds, setTagIds] = useState([]);\n\t  const [selectedTags, setSelectedTags] = useState([]);\n  \n\n\n\t  useEffect(() => {\n\n\t\tconsole.log('customerAreaCheck',customer)\n\t\tif (customer && customer.area && customer.area.length > 0) {\n\t\t\tconst tagIds = customer.area.map(item => item._id);\n\t\t\t\n\t\t\tsetSelectedTags(tagIds);\n\t\t\tsetTagIds(tagIds)\n        }\n        else {\n            setSelectedTags([]);\n\n        }\n\t}, [customer.id]);\n\t\n\n\n\n\tconst handleSubmit = async (values : any, actions : any) => {\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\n\t\turlOptions: {\n\t\t\tplaceHolders: {\n\t\t\t  id: values.id,\n\t\t\t}\n\t\t  },\n\t\tbody: {\n\t\t\tphone: values.phone,\n\t\t\temail: values.email,\n\t\t\tpassword: values.password,\n\t\t\taddress: values.address,\n\t\t\tfirstName: values.firstName,\n\t\t\tlastName: values.lastName,\n\t\t\tcode: values.code,\n\t\t\tcommission: values.commission,\n\t\t\tdepositMoney: values.depositMoney,\n\t\t\tdealerArea: tagIds\n\t\t},\n\t  });\n\t\n\n\t   \t  // @ts-ignore\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\n\t\t\t\t// openSuccessNotification(); \n\t\t\n\t\t\t\tsetvisible(false); \n\n\t\t\t\tconst positionInTag = () => {\n\t\t\t\t\treturn customerList.map(item => item.id).indexOf(customer.id);\n\t\t\t\t  }\n\t\t\n\t\t\t\t  const index = positionInTag();\n\t\t\n\t\t\t\t  // @ts-ignore\n\t\t\t\t  const updatedItem = Object.assign({}, customerList[index], { \n\t\t\t\t\t  // @ts-ignore\n\t\t\t\t\t...updateCustomerRes, \n\t\t\t\t\t\n\t\t\t\t\tid: updateCustomerRes['_id'] || '',\n\t\t\t\t\tkey: updateCustomerRes['_id'] || '',\n\t\t\t\t\tname: updateCustomerRes['firstName'] + ' ' + updateCustomerRes['lastName'],\n\n\t\t\t\t   });\n\t\t\t\t  const updateTagList = [...customerList.slice(0, index), updatedItem, ...customerList.slice(index + 1)];\n\t\t\t\t  setCustomerList(updateTagList); \n\t\t\t\t\n\t\t\t  }\n\t\t\t  else {\n\t\t\t\topenErrorNotification();\n\t\t\t  }\n\t\t\t\n\t\t\t  actions.setSubmitting(false);\n\t};\n\t\n\n\n\tuseEffect(() => {\n\t\tif (!updateCustomerState['isLoading']) {\n\t\t\tconst error = updateCustomerState['error'];\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\t\t\t\tif (error['error']['registerError']) {\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\n\t\t\t\t} else if (error['error']['checkoutError']) {\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\t// setServerErrors(error['error']);\n\t\t\t\t}\n\n\t\t\t\tconst errors =\n\t\t\t\t\tObject.values(error['error']).length > 0\n\t\t\t\t\t\t? Object.values(error['error'])\n\t\t\t\t\t\t: [];\n\t\t\t\terrors.forEach((err, i) => {\n\t\t\t\t\tif (typeof err === 'string') {\n\t\t\t\t\t\topenErrorNotification(err);\n\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof err === 'object') {\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\n\t\t\t\t\t\t\tconst errs = Object.values(err);\n\t\t\t\t\t\t\terrs.forEach(err => {\n\t\t\t\t\t\t\t\topenErrorNotification(err);\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t!updateCustomerState['isLoading'] &&\n\t\t\tObject.keys(updateCustomerState.data).length > 0\n\t\t) {\n\t\t\tif (updateCustomerState['data']['status'] === 'ok') {\n\t\t\t\topenSuccessNotification('Dealer Updated Successfully');\n\t\t\t\t// history.push({\n\t\t\t\t//   pathname: '/orderDetails',\n\t\t\t\t//   state: checkoutState['data']\n\t\t\t\t// })\n\n\t\t\t\t// clearCart();\n\t\t\t\t// setIsModalShown(true);\n\t\t\t}\n\t\t}\n\t}, [updateCustomerState]);\n\n\n\n\n\t\n    const onChangeCity = (value) => {\n        setselectedCityValue(value); \n    }\n\n    const onChangeCountry = (value) => {\n        setselectedCountryValue(value); \n    }\n    \n\tuseEffect(() => {\n\t\tconst setCountries = async () => {\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\n\n\t\t\t// @ts-ignore\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: country.name,\n\t\t\t\t\t\tname: country.name\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetcountryOptions(countryOptions);\n\t\t\t}\n\t\t};\n\n\t\tsetCountries();\n    }, []);\n    \n\n    useEffect(() => {\n\t\tconst setCities = async () => {\n\t\t\tconst cityListRes = await handleCityListFetch({\n                urlOptions: {\n                    placeHolders: {\n                      country: selectedCountryValue,\n                    },\n                  },\n            });\n\n\t\t\t// @ts-ignore\n\t\t\tif (cityListRes && cityListRes.length > 0) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: city.name,\n\t\t\t\t\t\tname: city.name\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetcityOptions(cityOptions);\n\t\t\t}\n\t\t};\n\n\t\tsetCities();\n    }, [selectedCountryValue]);\n\n\n\n\n\n\n\n\tconst handleCancel = (e: any) => {\n        setvisible(false);\n      };\n\n\n\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\n\t\tif(!isValid ||\n\t\t\t!values.firstName ||\n\t\t\t!values.lastName ||\n\t\t\t// !values.password ||\n\t\t\t!values.phone ||\n\t\t\t!values.code ){\n\t\t\treturn true; \n\t\t}\n\t\treturn false; \n\t  }\n\n\treturn (\n\t\t<Formik\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\tvalidationSchema={validationSchema}\n\t\tvalidateOnBlur={false}\n\t\tenableReinitialize={true}\n\t\tinitialValues={\n\t\t  {...customer}\n\t\t}\n\t  >\n\t\t{({\n\t\t  handleChange,\n\t\t  values,\n\t\t  handleSubmit,\n\t\t  errors,\n\t\t  isValid,\n\t\t  isSubmitting,\n\t\t  touched,\n\t\t  handleBlur,\n\t\t  setFieldTouched,\n\t\t  handleReset,\n\t\t}) => (\n\t\t\t<>\n\t\t\t<Modal\n\t\t\ttitle=\"Quick Edit\"\n\t\t\twidth={'70vw'}\n\t\t\tvisible={visible}\n\t\t\tonOk={(e : any) => handleSubmit(e)}\n\t\t\tonCancel={handleCancel}\n\t\t\tokText='Update'\n\t\t\tdestroyOnClose={true}\n\t\t\tokButtonProps={{\n\t\t\tloading: isSubmitting,\n\t\t\thtmlType: \"submit\",\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\n\t\t\t}}\n\t\t\tbodyStyle={{\n                margin: '0',\n                padding: '10px'\n            }}\n  >\n\n\t  {console.log('errorsupdatedealer',errors)}\n\n<section className='addProductGridContainer'>\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\n\t\t\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\n\t\t\t\t\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\n\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\n\t\t\t\t\t\t\t\t\t\tname='firstName'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\n\t\t\t\t\t\t\t\t\t\tname='lastName'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\n\n\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\n\t\t\t\t\t\t\t\t\t\tname='phone'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={values.code}\n\t\t\t\t\t\t\t\t\tname='code'\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\n\t\t\t\t\t\t\t\t\tname='depositMoney'\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Commission'\n\t\t\t\t\t\t\t\t\ttype='commission'\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\n\t\t\t\t\t\t\t\t\tname='commission'\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\n\n\n\n\n\n\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\n\t\t\t\t\t\t\t\t\t\t}}></div>\n\n\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\n\t\t\t\t\t\t\t\t\t\tname='address'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\n\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</section>\n\n\t\n\n\n  </Modal>\n\t\t\t  \n\t\t\t</>\n\t\t  )}\n\t  </Formik>\n\t);\n};\n\n\nexport default QuickEdit;\n","import React, { useState, useEffect } from 'react';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport {\n  Table,\n  Badge,\n  Menu,\n  Dropdown,\n  notification,\n  Space,\n  Tag,\n  Button,\n  Input,\n  Tooltip,\n  Modal,\n  Popconfirm,\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  EditFilled,\n  CheckCircleOutlined,\n  InfoCircleOutlined,\n} from '@ant-design/icons';\nimport Moment from 'react-moment';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../components/Placeholders';\nimport AddNewCustomer from './AddNewDealer';\nimport QuickEdit from './QuickEdit';\nimport Empty from '../../components/Empty';\nimport moment from 'moment';\n\n// import state\nimport { isAccess } from '../../utils';\nimport { connect } from 'react-redux';\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = Input;\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Dealer Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\ninterface myTableProps {\n  data: any;\n  setCustomerList?: any;\n  roles?: any;\n}\n\nconst MyTable = ({ data, setCustomerList, roles }: myTableProps) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n\n  const history = useHistory();\n\n  const [deleteCustomerState, handleDeleteCustomerFetch] = useHandleFetch(\n    {},\n    'deleteDealer'\n  );\n  const handleDeleteCustomer = async (id) => {\n    const deleteCustomerRes = await handleDeleteCustomerFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteCustomerRes && deleteCustomerRes.status === 'ok') {\n      openSuccessNotification('Deleted Dealer');\n      const newCustomerList = data.filter((item) => item.id !== id);\n      setCustomerList(newCustomerList);\n    }\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Code'\n          dataIndex='code'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/dealer/${record.id}`);\n                  // setcategoryDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/dealer/${record.id}`);\n                  // setcategoryDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        {/* <Column\n           title=\"City\" \n           dataIndex=\"city\" \n           key=\"id\" \n           className='classnameofthecolumn'\n            /> */}\n\n        <Column\n          title='Commission'\n          dataIndex='commission'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Deposit Money'\n          dataIndex='depositMoney'\n          key='id'\n          className='classnameofthecolumn'\n        />\n\n        <Column\n          title='Areas'\n          dataIndex='area'\n          key='role'\n          className='classnameofthecolumn'\n          render={(areas, record) => (\n            <>\n              {areas &&\n                areas.length > 0 &&\n                areas.slice(0, 2).map((tag) => (\n                  <Tag\n                    style={{\n                      borderRadius: '5px',\n                    }}\n                    color='blue'\n                    key={tag._id}\n                  >\n                    {tag.name}\n                  </Tag>\n                ))}\n\n              <span\n                style={{\n                  cursor: 'pointer',\n                }}\n                onClick={() => {\n                  history.push(`/admin/dealer/${record['id']}`);\n                }}\n              >\n                {areas && areas.length === 2 && '.......'}\n              </span>\n            </>\n          )}\n        />\n\n        <Column\n          width={150}\n          title='Created'\n          dataIndex='created'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <h5>{text && moment(text).format('MMMM Do YYYY, h:mm:ss a')}</h5>\n            </Space>\n          )}\n        />\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Product\" dataIndex=\"product\" key=\"product\" /> */}\n\n        {/* <Column \n          \n          className='classnameofthecolumn'\n\n          title=\"Sub Category\" dataIndex=\"subCategory\" key=\"subCategory\" /> */}\n\n        {/* <Column\n          title=\"Tags\"\n          dataIndex=\"tags\"\n          key=\"tags\"\n          render={tags => (\n            <>\n              {tags.map((tag : any) => (\n                <Tag color=\"blue\" key={tag}>\n                  {tag}\n                </Tag>\n              ))}\n            </>\n          )}\n        /> */}\n\n        {isAccess('postDealer', roles) && (\n          <Column\n            className='classnameofthecolumn'\n            title=''\n            key='action'\n            align='right'\n            render={(text, record: any) => (\n              <Space size='middle'>\n                <a href='##'>\n                  <Tooltip placement='top' title='Edit Dealer'>\n                    <span\n                      className='iconSize'\n                      onClick={() => {\n                        setvisible(true);\n                        setactiveCategoryForEdit(record);\n                      }}\n                    >\n                      <EditOutlined />\n                    </span>\n                  </Tooltip>\n                </a>\n\n                <Popconfirm\n                  onConfirm={() => handleDeleteCustomer(record.id)}\n                  title='Are you sure？'\n                  okText='Yes'\n                  cancelText='No'\n                >\n                  <span className='iconSize iconSize-danger'>\n                    <DeleteOutlined />\n                  </span>\n                </Popconfirm>\n              </Space>\n            )}\n          />\n        )}\n      </Table>\n\n      {activeCategoryForEdit && (\n        <QuickEdit\n          customerList={data}\n          setCustomerList={setCustomerList}\n          setvisible={setvisible}\n          visible={visible}\n          customer={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {\n  roles: any;\n}\n\nconst CustomerList = ({ roles }: Props) => {\n  const [customerList, setCustomerList] = useState([]);\n\n  const [customerState, handleCustomerListFetch] = useHandleFetch(\n    {},\n    'dealerList'\n  );\n\n  console.log('dealerList', customerList);\n\n  useEffect(() => {\n    const setCustomers = async () => {\n      const customers = await handleCustomerListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n            limitNumber: 5000000,\n          },\n        },\n      });\n      // @ts-ignore\n      setCustomerList(customers);\n    };\n    setCustomers();\n  }, []);\n\n  const handleSearch = (value) => {\n    if (customerState.data.length > 0) {\n      const newCustomerList = customerState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setCustomerList(newCustomerList);\n    }\n  };\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  // console.log('customerState',customerState)\n\n  return (\n    <>\n      {/* <h2 className='containerPageTitle'>\n      Categories\n    </h2> */}\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar'>\n            <h2 className='categoryListContainer__header-title'>Dealers</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search dealers..'\n              onChange={(e) => handleSearch(e.target.value)}\n              // style={{ width: 300 }}\n            />\n          </div>\n\n          {isAccess('postDealer', roles) && (\n            <Button\n              // type=\"primary\"\n              className='btnPrimaryClassNameoutline'\n              icon={<PlusOutlined />}\n              onClick={() => setAddNewCategoryVisible(true)}\n            >\n              Add New\n            </Button>\n          )}\n        </div>\n\n        <div className='categoryListContainer__afterHeader'>\n          {/* <Search\n      placeholder=\"search categories..\"\n      size=\"large\"\n      onSearch={value => console.log(value)}\n      style={{ width: 300 }}\n    /> */}\n        </div>\n\n        <div className='categoryListContainer__categoryList'>\n          {customerState.done && customerList.length > 0 && (\n            <MyTable\n              roles={roles}\n              setCustomerList={setCustomerList}\n              data={customerList}\n            />\n          )}\n          {customerState.isLoading && <DataTableSkeleton />}\n          {customerState.done && !(customerList.length > 0) && (\n            <Empty title='No Dealer found' />\n          )}\n        </div>\n      </div>\n\n      {customerState.done && (\n        <AddNewCustomer\n          setCustomerList={setCustomerList}\n          addNewCategoryVisible={addNewCategoryVisible}\n          setAddNewCategoryVisible={setAddNewCategoryVisible}\n          customerList={customerState.data}\n        />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, null)(CustomerList);\n","import React,{useState, useEffect} from 'react';\nimport { Modal, Select,notification , Form, Empty } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { PlusOutlined, EditOutlined, DeleteOutlined,EditFilled, CheckCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\n\n\n\n// import components\nimport Input from '../../components/Field/Input';\nimport {useHandleFetch} from '../../hooks';\nimport Areas from \"./Areas\";\n\n\n\nconst { Option } = Select;\n\n\nconst validationSchema = Yup.object().shape({\n    firstName: Yup.string()\n      .label('Firstname')\n      .required()\n      .min(2, 'First name must have at least 2 characters '),\n    lastName: Yup.string()\n      .label('Lastname')\n      .required()\n      .min(2, 'Lastname must have at least 2 characters '),\n    phone: Yup.string()\n      .required('Please tell us your mobile number.')\n      .max(13, 'Please enter a valid mobile number.'),\n    password: Yup.string()\n      .label('Password')\n      .min(6, 'Password must have at least 6 characters'),\n    email: Yup.string().label('Email').email('Please enter a valid email'),\n  });\n\n\n\n  \nconst openSuccessNotification = (message?: any) => {\n\tnotification.success({\n\t  message: message || 'Dealer Updated',\n\t  description: '',\n\t  icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n\t});\n  };\n\n\n  const openErrorNotification = (message?: any) => {\n\tnotification.success({\n\t  message: message || 'Something Went Wrong',\n\t  description: '',\n\t  icon: <InfoCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n\t});\n  };\n\n\n\n\n\n\ninterface Props {\n\tcustomer: any;\n\tsetvisible: any; \n    visible: any;\n    setCustomerDetailData?:any; \n\n}\n\nconst QuickEdit = ({ customer, setvisible, visible, setCustomerDetailData }: Props) => {\n\tconst [updateCustomerState, handleUpdateCustomerFetch] = useHandleFetch({}, 'updateDealer');\n\n\n\tconst [selectedCountryValue,setselectedCountryValue] = useState(''); \n    const [selectedCityValue,setselectedCityValue] = useState(''); \n\n    const [countryOptions,setcountryOptions] = useState([]); \n    const [cityOptions,setcityOptions] = useState([]); \n\n    const [countryListState, handleCountryListFetch] = useHandleFetch(\n        [],\n        'countryList'\n      );\n    \n      const [cityListState, handleCityListFetch] = useHandleFetch([], 'cityList');\n    \n\n\t  const [tagIds, setTagIds] = useState([]);\n\t  const [selectedTags, setSelectedTags] = useState([]);\n  \n\n\n\t  useEffect(() => {\n\n\t\tconsole.log('customerAreaCheck',customer)\n\t\tif (customer && customer.area && customer.area.length > 0) {\n\t\t\tconst tagIds = customer.area.map(item => item._id);\n\t\t\t\n\t\t\tsetSelectedTags(tagIds);\n\t\t\tsetTagIds(tagIds)\n        }\n        else {\n            setSelectedTags([]);\n\n        }\n\t}, [customer.id]);\n\t\n\n\n\n\tconst handleSubmit = async (values : any, actions : any) => {\n\t  const updateCustomerRes = await handleUpdateCustomerFetch({\n\t\turlOptions: {\n\t\t\tplaceHolders: {\n\t\t\t  id: values.id,\n\t\t\t}\n\t\t  },\n\t\tbody: {\n\t\t\tphone: values.phone,\n\t\t\temail: values.email,\n\t\t\tpassword: values.password,\n\t\t\taddress: values.address,\n\t\t\tfirstName: values.firstName,\n\t\t\tlastName: values.lastName,\n\t\t\tcode: values.code,\n\t\t\tcommission: values.commission,\n\t\t\tdepositMoney: values.depositMoney,\n\t\t\tdealerArea: tagIds\n\t\t},\n\t  });\n\t\n\n\t   \t  // @ts-ignore\n\t\t\t if(updateCustomerRes && updateCustomerRes.status === 'ok'){\n\t\t\t\t// openSuccessNotification(); \n\t\t\n                setvisible(false); \n                \n                setCustomerDetailData({\n                    // @ts-ignore\n                    ...updateCustomerRes, \n\t\t\t\t\tid: updateCustomerRes['_id'] || '',\n\t\t\t\t\tkey: updateCustomerRes['_id'] || '',\n\t\t\t\t\tname: updateCustomerRes['firstName'] + ' ' + updateCustomerRes['lastName'],\n                })\n\t\t\t\t\n\t\t\t  }\n\t\t\t  else {\n\t\t\t\topenErrorNotification();\n\t\t\t  }\n\t\t\t\n\t\t\t  actions.setSubmitting(false);\n\t};\n\t\n\n\n\tuseEffect(() => {\n\t\tif (!updateCustomerState['isLoading']) {\n\t\t\tconst error = updateCustomerState['error'];\n\t\t\tif (error['isError'] && Object.keys(error['error']).length > 0) {\n\n\t\t\t\tif (error['error']['registerError']) {\n\t\t\t\t\t// setServerErrors(error['error']['registerError']);\n\t\t\t\t} else if (error['error']['checkoutError']) {\n\t\t\t\t\t// setServerErrors(error['error']['checkoutError']);\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\t// setServerErrors(error['error']);\n\t\t\t\t}\n\n\t\t\t\tconst errors =\n\t\t\t\t\tObject.values(error['error']).length > 0\n\t\t\t\t\t\t? Object.values(error['error'])\n\t\t\t\t\t\t: [];\n\t\t\t\terrors.forEach((err, i) => {\n\t\t\t\t\tif (typeof err === 'string') {\n\t\t\t\t\t\topenErrorNotification(err);\n\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof err === 'object') {\n\t\t\t\t\t\tif (err && Object.keys(err).length > 0) {\n\t\t\t\t\t\t\tconst errs = Object.values(err);\n\t\t\t\t\t\t\terrs.forEach(err => {\n\t\t\t\t\t\t\t\topenErrorNotification(err);\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t!updateCustomerState['isLoading'] &&\n\t\t\tObject.keys(updateCustomerState.data).length > 0\n\t\t) {\n\t\t\tif (updateCustomerState['data']['status'] === 'ok') {\n\t\t\t\topenSuccessNotification('Dealer Updated Successfully');\n\t\t\t\t// history.push({\n\t\t\t\t//   pathname: '/orderDetails',\n\t\t\t\t//   state: checkoutState['data']\n\t\t\t\t// })\n\n\t\t\t\t// clearCart();\n\t\t\t\t// setIsModalShown(true);\n\t\t\t}\n\t\t}\n\t}, [updateCustomerState]);\n\n\n\n\n\t\n    const onChangeCity = (value) => {\n        setselectedCityValue(value); \n    }\n\n    const onChangeCountry = (value) => {\n        setselectedCountryValue(value); \n    }\n    \n\tuseEffect(() => {\n\t\tconst setCountries = async () => {\n\t\t\tconst CountryListRes = await handleCountryListFetch({});\n\n\t\t\t// @ts-ignore\n\t\t\tif (CountryListRes && CountryListRes.length > 0) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst countryOptions = CountryListRes.map((country) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: country.name,\n\t\t\t\t\t\tname: country.name\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetcountryOptions(countryOptions);\n\t\t\t}\n\t\t};\n\n\t\tsetCountries();\n    }, []);\n    \n\n    useEffect(() => {\n\t\tconst setCities = async () => {\n\t\t\tconst cityListRes = await handleCityListFetch({\n                urlOptions: {\n                    placeHolders: {\n                      country: selectedCountryValue,\n                    },\n                  },\n            });\n\n\t\t\t// @ts-ignore\n\t\t\tif (cityListRes && cityListRes.length > 0) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tconst cityOptions = cityListRes.map((city) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue: city.name,\n\t\t\t\t\t\tname: city.name\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetcityOptions(cityOptions);\n\t\t\t}\n\t\t};\n\n\t\tsetCities();\n    }, [selectedCountryValue]);\n\n\n\n\n\n\n\n\tconst handleCancel = (e: any) => {\n        setvisible(false);\n      };\n\n\n\n\t  const getisSubmitButtonDisabled = (values,isValid) => {\n\t\tif(!isValid ||\n\t\t\t!values.firstName ||\n\t\t\t!values.lastName ||\n\t\t\t// !values.password ||\n\t\t\t!values.phone ||\n\t\t\t!values.code ){\n\t\t\treturn true; \n\t\t}\n\t\treturn false; \n\t  }\n\n\treturn (\n\t\t<Formik\n\t\tonSubmit={(values, actions) => handleSubmit(values, actions)}\n\t\tvalidationSchema={validationSchema}\n\t\tvalidateOnBlur={false}\n\t\tenableReinitialize={true}\n\t\tinitialValues={\n\t\t  {...customer}\n\t\t}\n\t  >\n\t\t{({\n\t\t  handleChange,\n\t\t  values,\n\t\t  handleSubmit,\n\t\t  errors,\n\t\t  isValid,\n\t\t  isSubmitting,\n\t\t  touched,\n\t\t  handleBlur,\n\t\t  setFieldTouched,\n\t\t  handleReset,\n\t\t}) => (\n\t\t\t<>\n\t\t\t<Modal\n\t\t\ttitle=\"Quick Edit\"\n\t\t\twidth={'70vw'}\n\t\t\tvisible={visible}\n\t\t\tonOk={(e : any) => handleSubmit(e)}\n\t\t\tonCancel={handleCancel}\n\t\t\tokText='Update'\n\t\t\tdestroyOnClose={true}\n\t\t\tokButtonProps={{\n\t\t\tloading: isSubmitting,\n\t\t\thtmlType: \"submit\",\n\t\t\tdisabled: getisSubmitButtonDisabled(values, isValid)\n\t\t\t}}\n\t\t\tbodyStyle={{\n                margin: '0',\n                padding: '10px'\n            }}\n  >\n\n\t  {console.log('errorsupdatedealer',errors)}\n\n<section className='addProductGridContainer'>\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__left'>\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__name'>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-header'>\n\t\t\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t\t\tDealer Information *\n\t\t\t\t\t\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__item-body'>\n\n\t\t\t\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='First Name'\n\t\t\t\t\t\t\t\t\t\tvalue={values.firstName}\n\t\t\t\t\t\t\t\t\t\tname='firstName'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.firstName && errors.firstName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.firstName && errors.firstName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['firstName'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('firstName');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Last Name'\n\t\t\t\t\t\t\t\t\t\tvalue={values.lastName}\n\t\t\t\t\t\t\t\t\t\tname='lastName'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.lastName && errors.lastName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.lastName && errors.lastName) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['lastName'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('lastName');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\n\n\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Phone'\n\t\t\t\t\t\t\t\t\t\tvalue={values.phone}\n\t\t\t\t\t\t\t\t\t\tname='phone'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.phone && errors.phone) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.phone && errors.phone) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['phone'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('phone');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.email && errors.email) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.email && errors.email) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['email'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('email');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Dealer Code'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={values.code}\n\t\t\t\t\t\t\t\t\tname='code'\n\t\t\t\t\t\t\t\t\tisError={(touched.code && errors.code) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.code && errors.code) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['code'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('code');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\tvalue={values.password}\n\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\tisError={(touched.password && errors.password) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.password && errors.password) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['password'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('password');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div className='dubbleRowInputs'>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Deposit Money'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tvalue={values.depositMoney}\n\t\t\t\t\t\t\t\t\tname='depositMoney'\n\t\t\t\t\t\t\t\t\tisError={(touched.depositMoney && errors.depositMoney) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.depositMoney && errors.depositMoney) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['depositMoney'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('depositMoney');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='dubbleRowInputs__item'>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tlabel='Commission'\n\t\t\t\t\t\t\t\t\ttype='commission'\n\t\t\t\t\t\t\t\t\tvalue={values.commission}\n\t\t\t\t\t\t\t\t\tname='commission'\n\t\t\t\t\t\t\t\t\tisError={(touched.commission && errors.commission) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\n\n\t\t\t\t\t\t\t\t\terrorString={(touched.commission && errors.commission) ||\n\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['commission'])}\n\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\tsetFieldTouched('commission');\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n\n\n\n\n\n\n\t\t\t\t\t\t\t\t\t<div style={{\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '12px'\n\t\t\t\t\t\t\t\t\t\t}}></div>\n\n\n\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\tlabel='Address'\n\t\t\t\t\t\t\t\t\t\tvalue={values.address}\n\t\t\t\t\t\t\t\t\t\tname='address'\n\t\t\t\t\t\t\t\t\t\tisError={(touched.address && errors.address) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\n\n\t\t\t\t\t\t\t\t\t\terrorString={(touched.address && errors.address) ||\n\t\t\t\t\t\t\t\t\t\t\t(!isSubmitting && updateCustomerState.error['error']['address'])}\n\t\t\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\t\t\tsetFieldTouched('address');\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='addProductGridContainer__right'>\n\n\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer__tag'>\n\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-header'>\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t\t\t\t\tAreas *\n\t\t\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className='addProductGridContainer-rightItemContainer-body'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Areas\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTags={setSelectedTags}\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedTags={selectedTags}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetTagIds={setTagIds} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</section>\n\n\t\n\n\n  </Modal>\n\t\t\t  \n\t\t\t</>\n\t\t  )}\n\t  </Formik>\n\t);\n};\n\n\nexport default QuickEdit;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router\";\n\n\n// import hooks\nimport { useHandleFetch } from \"../../hooks\";\n\n// import \nimport Moment from \"react-moment\";\n\n// import lib\nimport {\n    FileOutlined,\n    InboxOutlined,\n    RadiusUpleftOutlined,\n    RadiusUprightOutlined,\n    RadiusBottomleftOutlined,\n    RadiusBottomrightOutlined,\n    PlusOutlined,\n    DeleteOutlined,\n    EditOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\n\nimport { Spin, Skeleton, Empty, Popconfirm, Upload, message, Switch, Select, Button, notification, Table, Space, Input as CoolInput, Tooltip, Modal } from 'antd';\n\n\n// import components\nimport { DataTableSkeleton } from \"../../components/Placeholders\";\nimport CustomerEdit from \"./DealerEdit\";\n\n\n// import state\nimport { isAccess } from \"../../utils\";\nimport { connect } from \"react-redux\";\n\n\n\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\n\ninterface Props {\n    roles?: any;\n}\n\nconst NewBrandDetail = ({roles}: Props) => {\n    const [customerDetailState, handleCustomerDetailFetch] = useHandleFetch({}, 'dealerDetail');\n    const [orderListState, handleOrderListFetch] = useHandleFetch({}, 'dealerOrderList');\n    const [registeredCustomerListState, handleRegisteredCustomerListFetch] = useHandleFetch({}, 'dealerRegisteredCustomerList');\n    const [tagEditVisible, setTagEditVisible] = useState(false);\n    const [customerDetailData,setCustomerDetailData] = useState({}); \n\n\n\n    const params = useParams();\n    const history = useHistory();\n    const customerId = params['id'];\n\n    useEffect(() => {\n\n        const getCustomerDetail = async () => {\n            const customerDetailDataRes = await handleCustomerDetailFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: customerId\n                    }\n                }\n            });\n\n            // @ts-ignore\n            if(customerDetailDataRes){\n                // @ts-ignore\n                setCustomerDetailData(customerDetailDataRes); \n            }\n\n            console.log('customerDetailDataRes',customerDetailDataRes)\n        };\n\n        getCustomerDetail();\n\n    }, [customerId]);\n\n\n\n    useEffect(() => {\n        const getOrderList = async () => {\n            await handleOrderListFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: customerId\n                    }\n                }\n            })\n        };\n\n        getOrderList();\n\n        const getRegisteredOrderList = async () => {\n            await handleRegisteredCustomerListFetch({\n                urlOptions: {\n                    placeHolders: {\n                        id: customerId\n                    }\n                }\n            })\n        };\n\n        getRegisteredOrderList();\n\n\n\n\n    }, [customerId]);\n\n\n    console.log('dealerDetailData', customerDetailData);\n\n    \n    return (\n        <div className='brandDetailContainer'>\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                 Dealer Detail\n                </h3>\n\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\n                    <>\n                        <CustomerEdit\n                            visible={tagEditVisible}\n                            setvisible={setTagEditVisible}\n                            customer={customerDetailData}\n                            setCustomerDetailData={setCustomerDetailData}\n                        />\n\n                {isAccess('postDealer',roles) && (\n                                    <Button\n                                    onClick={() => setTagEditVisible(true)}\n                                    type='link'\n                                    icon={<EditOutlined />}\n                                >\n                                    Edit\n                            </Button>\n                                )}\n\n\n                    \n                    </>\n                )}\n            </div>\n            <Skeleton\n                paragraph={{ rows: 2 }}\n                loading={customerDetailState.isLoading}>\n                {customerDetailState.done && customerDetailData && !(Object.keys(customerDetailData).length > 0) && (\n                    <Empty description='No Dealer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                )}\n\n                {customerDetailState.done && customerDetailData && (Object.keys(customerDetailData).length > 0) && (\n                    <div className='brandDetailContainer__header'>\n\n                        <div className='brandDetailContainer__header-info'>\n                            <h2>\n                                {customerDetailData['name']}\n                            </h2>\n                           \n\n                           \n                            {customerDetailData['code'] && (\n                                <h3>\n                                    CODE:\n                                    <span>\n                                        {customerDetailData['code']}\n                                    </span>\n                                </h3>\n                            )}\n\n\n\n\n                            {customerDetailData['commision'] && (\n                                <h3>\n                                    COMMISSION:\n                                    <span>\n                                        {customerDetailData['commision']}\n                                    </span>\n                                </h3>\n                            )}\n\n                            {customerDetailData['depositMoney'] && (\n                                <h3>\n                                    DEPOSIT MONEY:\n                                    <span>\n                                        {customerDetailData['depositMoney']}\n                                    </span>\n                                </h3>\n                            )}\n\n\n                            {customerDetailData['city'] && (\n                                <h3>\n                                    CITY:\n                                    <span>\n                                        {customerDetailData['city']}\n                                    </span>\n                                </h3>\n                            )}\n                        \n\n\n                            {customerDetailData['address1'] && (\n                                <h3>\n                                    ADDRESS:\n                                    <span>\n                                        {customerDetailData['address1']}\n                                    </span>\n                                </h3>\n                            )}\n                         \n\n                            {customerDetailData['phone'] && (\n                                <h3>\n                                    PHONE:\n                                    <span>\n                                        {customerDetailData['phone']}\n                                    </span>\n                                </h3>\n                            )}\n\n                             {customerDetailData['email'] && (\n                                <h3>\n                                    EMAIL:\n                                    <span>\n                                        {customerDetailData['email']}\n                                    </span>\n                                </h3>\n                            )}\n\n\n                              {customerDetailData['area'] && customerDetailData['area'].length > 0 &&\n                                    (<>\n                                        <h3>\n                                        AREAS:\n                                        {customerDetailData['area'].map(cat => {\n                                            return (\n                                                <span\n                                                    // onClick={() => history.push(`/admin/dealer/area/${cat._id}`)}\n\n                                                >\n                                                    {cat.name}\n                                                </span>\n                                            )\n                                        })}\n                                        </h3>\n\n                                    </>)\n                                }\n\n                        </div>\n                    </div>\n                )}\n\n            </Skeleton>\n\n        <div className='dealerDetailBodyContainer'>\n            <div className='dealerDetailBodyContainer__item'>\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                     Orders \n                </h3>\n            </div>\n            <div className='brandDetailContainer__body'>\n                {orderListState.isLoading && (\n                  <>\n                  <div style={{\n                    margin: '100px'\n                  }}>\n                  <Spin size='large' />\n                  </div>\n                  </>\n                )}\n\n                                {orderListState.done && !(orderListState.data.length > 0) && (\n\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No Orders found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {orderListState.done && orderListState.data && orderListState.data.length > 0 && (\n                    <>\n                        <Table\n                            style={{\n                                paddingTop: '10px',\n                                borderRadius: '5px !important',\n                                overflow: 'hidden',\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\n                            }}\n                            // expandable={{\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\n                            //   }}\n                            // bordered={true}\n                            size='small'\n                            // pagination={false}\n                            dataSource={orderListState.data}\n                            tableLayout={'auto'}\n                            onHeaderRow={column => {\n                                return {\n                                    style: {\n                                        color: 'red !important'\n                                    }\n\n                                };\n                            }}\n                        >\n                          \n          \n          \n\n        <Column\n          title=\"Code\"\n          dataIndex=\"shortCode\"\n          key=\"id\"\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n\n              <h4\n                onClick={() => {\n                  // setvisible(true)\n                  history.push(`/admin/order/${record.id}`)\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer'\n\n                }}>\n                #{text}\n              </h4>\n\n\n            </>\n          )}\n\n        />\n\n\n        <Column\n          title=\"Name\"\n          dataIndex=\"name\"\n          key=\"id\"\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n\n              <h4\n                onClick={() => {\n                  // setvisible(true)\n                  history.push(`/admin/order/${record.id}`)\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer'\n\n                }}>\n                {text}\n              </h4>\n\n\n            </>\n          )}\n\n        />\n\n\n              <Column\n                title=\"Total Price\" \n                dataIndex=\"total\" \n                key=\"id\" \n                className='classnameofthecolumn'\n                />\n\n\n\n\n          <Column\n            width={150}\n           title=\"Status\" \n           dataIndex=\"status\" \n           key=\"id\" \n           className='classnameofthecolumn'\n           render={(text, record: any) => (\n            <>\n\n             <a href='##'>\n              <span\n              style={{\n                fontSize:'12px'\n              }}\n                >\n                {text}\n             </span> \n            </a>\n            </>\n          )}\n            />\n\n\n                        </Table>\n                    </>\n                )}\n\n            </div>\n            </div>\n            <div className='dealerDetailBodyContainer__item'>\n            <div className='brandDetailContainer__heading'>\n                <h3>\n                     Customers \n                </h3>\n            </div>\n            <div className='brandDetailContainer__body'>\n                {registeredCustomerListState.isLoading && (\n                  <>\n                  <div style={{\n                    margin: '100px'\n                  }}>\n                  <Spin size='large' />\n                  </div>\n                  </>\n                )}\n                {registeredCustomerListState.done && !(registeredCustomerListState.data.length > 0) && (\n                    <div style={{\n                        marginTop: '100px'\n                    }}>\n                        <Empty description='No Customer found' image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    </div>\n                )}\n\n                {registeredCustomerListState.done && registeredCustomerListState.data && registeredCustomerListState.data.length > 0 && (\n                    <>\n                        <Table\n                            style={{\n                                paddingTop: '10px',\n                                borderRadius: '5px !important',\n                                overflow: 'hidden',\n                                boxShadow: '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)'\n                            }}\n                            // expandable={{\n                            //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                            //     rowExpandable: record => record.name !== 'Not Expandable',\n                            //   }}\n                            // bordered={true}\n                            size='small'\n                            // pagination={false}\n                            dataSource={registeredCustomerListState.data}\n                            tableLayout={'auto'}\n                            onHeaderRow={column => {\n                                return {\n                                    style: {\n                                        color: 'red !important'\n                                    }\n\n                                };\n                            }}\n                        >\n                          \n          \n          \n                          <Column\n                      title=\"Name\" \n                      dataIndex=\"name\" \n                      key=\"id\" \n                      className='classnameofthecolumn'\n                      render={(text, record: any) => (\n                        <>\n                          <h4\n                            onClick={() => {\n                              history.push(`/admin/customer/${record.id}`)\n                              // setcategoryDetailVisible(true);\n                            }}\n                            style={{\n                              fontWeight: 400,\n                              color: '#555',\n                              cursor: 'pointer'\n                            }}>\n                            {text}\n                          </h4>\n                        </>\n                      )}\n                      />\n\n         \n     \n\n         \n\n            \n          <Column\n           title=\"Order\" \n           dataIndex=\"orderCount\" \n           key=\"id\" \n           className='classnameofthecolumn'\n         \n            />\n\n        <Column\n           title=\"Total Price\" \n           dataIndex=\"totalOrderPrice\" \n           key=\"id\" \n           className='classnameofthecolumn'\n         \n            />\n\n                        </Table>\n                    </>\n                )}\n\n            </div>\n            </div>\n        </div>\n        </div>\n    )\n}\n\n\n\n\nconst mapStateToProps = state => ({\n    roles: state.globalState,\n  })\n  \n  // @ts-ignore\n  export default connect(mapStateToProps, null)(NewBrandDetail);\n  \n  \n  \n  \n\n\n\n","import React, { useState,useEffect } from 'react';\nimport { Modal, notification } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport { useHandleFetch } from '../../../hooks';\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\nimport MetaTags from \"../../../pages/category/MetaTags\";\n\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Area Updated',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nconst initialValues = {\n    name: '',\n\tbnName: '',\n\tdescription: '',\n\tbnDescription: '',\n\tmetaTitle: '',\n\tbnMetaTitle: '',\n\tmetaDescription: '',\n\tbnMetaDescription: '',\n\tmetaTags: '',\n\tbnMetaTags: '',\n}\n\n\n\n\n\ninterface Props {\n    tagEditVisible?: any;\n    setTagEditVisible?: any;\n    tagDetailData?: any;\n    setTagList?:any; \n    tagList?:any; \n}\n\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagList,tagList }: Props) => {\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateDealerArea');\n\n\n    const handleSubmit = async (values: any, actions: any) => {\n        const updateTagRes = await handleUpdateCategoryFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: values.id,\n                }\n            },\n            body: {\n                name: values.name,\n            },\n        });\n\n        // @ts-ignore\n        if (updateTagRes && updateTagRes.status === 'ok') {\n\n\n\t\t\tconst positionInTag = () => {\n\t\t\t\treturn tagList.map(item => item.id).indexOf(values.id);\n\t\t\t}\n\n\t\t\tconst index = positionInTag();\n\n\t\t\t// @ts-ignore\n\t\t\tconst updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\n\t\t\tconst updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\n\t\t\tsetTagList(updateTagList);\n\n\n            console.log('categoryupdateTagRes',updateTagRes);\n\t\t\topenSuccessNotification();\n\t\t\tsetTagEditVisible(false)\n\t\t\t\n        }\n        else {\n            openErrorNotification();\n        }\n\n        actions.setSubmitting(false);\n    };\n\n\n    const handleCancel = (e: any) => {\n        setTagEditVisible(false);\n    };\n\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!values.name || !isValid) {\n            return true;\n        }\n        return false;\n    }; \n \n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={{\n                ...initialValues, \n                ...tagDetailData,\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\n                    bnMetaTitle: tagDetailData['bn']\n                    && tagDetailData['bn'].metaTitle\n                    && tagDetailData['bn'].metaTitle,\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\n                  })\n            }}\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                        \tstyle={{\n\t\t\t\t\t\t\t\ttop: '40px',\n\n\t\t\t\t\t\t\t}}\n                            title=\"Area Edit\"\n                            visible={tagEditVisible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Update'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                                disabled: getisSubmitButtonDisabled(values, isValid)\n                            }}\n                        >\n                            <Input\n\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\n\n\n                        </Modal>\n\n                    </>\n                )}\n        </Formik>\n    );\n};\n\n\nexport default QuickEdit;\n","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n\nimport { useHandleFetch } from '../../../hooks';\n// import third party ui lib\nimport { Upload, message, Switch, Select, Button, notification, Modal, Tooltip } from 'antd';\n\nimport {\n    FileOutlined,\n    InboxOutlined,\n    FileAddOutlined,\n    DeleteOutlined,\n    CheckCircleOutlined,\n    CloseOutlined,\n    CheckOutlined,\n    InfoCircleOutlined,\n    PlusOutlined,\n    FileImageFilled\n} from '@ant-design/icons';\n\n\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport MediaLibrary from \"../../../components/MediaLibrary\";\nimport MetaTags from \"../../../pages/category/MetaTags\";\n\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Area Created',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.error({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nconst initialValues = {\n    name: '',\n}\n\n\n\ninterface Props {\n    addNewCategoryVisible?: any;\n    setAddNewCategoryVisible?: any;\n    tagList?: any;\n    setTagList?: any;\n\n}\n\nconst AddNewBrand = ({ addNewCategoryVisible, setAddNewCategoryVisible, tagList, setTagList }: Props) => {\n\n    const [addTagState, handleAddTagFetch] = useHandleFetch({}, 'addDealerArea');\n    const [myImages, setmyImages] = useState(false);\n    const [visibleMedia, setvisibleMedia] = useState(false);\n\n    const handleSubmit = async (values: any, actions: any) => {\n        const addTagRes = await handleAddTagFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: values.id,\n                }\n            },\n            body: {\n                name: values.name.trim(),\n            },\n        });\n\n        // @ts-ignore\n        if (addTagRes && addTagRes.status === 'ok') {\n            openSuccessNotification();\n\n            setTagList([{\n                id: addTagRes['_id'] || '',\n                key: addTagRes['_id'] || '',\n                name: addTagRes['name'] || '',\n            },...tagList])\n            actions.resetForm();\n            setAddNewCategoryVisible(false);\n        }\n        else {\n            openErrorNotification();\n        }\n\n\n        actions.setSubmitting(false);\n\n    };\n\n\n    const handleCancel = (e: any) => {\n        setAddNewCategoryVisible(false);\n    };\n\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!values.name || !isValid) {\n            return true;\n        }\n        return false;\n    }\n\n\n\n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={\n                { ...initialValues }\n            }\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                            style={{\n                                top: '40px'\n                            }}\n                            title=\"Add New Area\"\n                            visible={addNewCategoryVisible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Create'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                                disabled: getisSubmitButtonDisabled(values, isValid)\n                            }}\n                        >\n                  \t\t\t<Input\n\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && addTagState.error['error']['name'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\n                        </Modal>\n\n                        <MediaLibrary\n                            setvisible={setvisibleMedia}\n                            visible={visibleMedia}\n                            setmyImages={setmyImages}\n                            myImages={myImages}\n                            isModalOpenForImages={true}\n\n                        />\n                    </>\n                )}\n        </Formik>\n\n\n\n\n    );\n};\n\nexport default AddNewBrand;\n","import React, { useState, useEffect } from 'react';\n\n// import third party ui lib\nimport {\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router';\n\nimport {\n  FileOutlined,\n  InboxOutlined,\n  RadiusUpleftOutlined,\n  RadiusUprightOutlined,\n  RadiusBottomleftOutlined,\n  RadiusBottomrightOutlined,\n  PlusOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n} from '@ant-design/icons';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\n/// import hooks\nimport { useFetch, useHandleFetch } from '../../../hooks';\n\n// import components\nimport { DataTableSkeleton } from '../../../components/Placeholders';\nimport TagQuickEdit from './AreaQuickEdit';\nimport AddNewTag from './AddNewArea';\n\nconst openSuccessNotification = (message?: any) => {\n  notification.success({\n    message: message || 'Area Created',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n  });\n};\n\nconst openErrorNotification = (message?: any) => {\n  notification.error({\n    message: message || 'Something Went Wrong',\n    description: '',\n    icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n  });\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Name is required')\n    .min(3, 'Name must have at least 3 characters'),\n});\n\nconst initialValues = {\n  name: '',\n  description: '',\n};\n\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\nconst MyTable = ({ data, setTagList }) => {\n  const [visible, setvisible] = useState(false);\n  const [activeCategoryForEdit, setactiveCategoryForEdit] = useState(false);\n  const [deleteTagState, handleDeleteTagFetch] = useHandleFetch(\n    {},\n    'deleteDealerArea'\n  );\n\n  const history = useHistory();\n\n  const handleDeleteTag = async (id) => {\n    const deleteTagRes = await handleDeleteTagFetch({\n      urlOptions: {\n        placeHolders: {\n          id,\n        },\n      },\n    });\n\n    // @ts-ignore\n    if (deleteTagRes && deleteTagRes.status === 'ok') {\n      openSuccessNotification('Deleted Area');\n      const newtagList = data.filter((item) => item.id !== id);\n      setTagList(newtagList);\n    }\n  };\n\n  const handleOk = (e: any) => {\n    setvisible(false);\n  };\n\n  const handleCancel = (e: any) => {\n    setvisible(false);\n  };\n\n  return (\n    <>\n      <Table\n        // expandable={{\n        //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n        //     rowExpandable: record => record.name !== 'Not Expandable',\n        //   }}\n        // bordered={true}\n        size='small'\n        // pagination={false}\n        dataSource={data}\n      >\n        <Column\n          title='Name'\n          dataIndex='name'\n          key='id'\n          className='classnameofthecolumn'\n          render={(text, record: any) => (\n            <>\n              <h4\n                onClick={() => {\n                  history.push(`/admin/dealer/area/${record.id}`);\n                  // setBrandDetailVisible(true);\n                  setactiveCategoryForEdit(record);\n                }}\n                style={{\n                  fontWeight: 400,\n                  color: '#555',\n                  cursor: 'pointer',\n                }}\n              >\n                {text}\n              </h4>\n            </>\n          )}\n        />\n\n        <Column\n          className='classnameofthecolumn'\n          title=''\n          key='action'\n          align='right'\n          render={(text, record: any) => (\n            <Space size='middle'>\n              <a href='##'>\n                <Tooltip placement='top' title='Edit Area'>\n                  <span\n                    className='iconSize'\n                    onClick={() => {\n                      setvisible(true);\n                      setactiveCategoryForEdit(record);\n                    }}\n                  >\n                    <EditOutlined />\n                  </span>\n                </Tooltip>\n              </a>\n\n              <Popconfirm\n                onConfirm={() => handleDeleteTag(record.id)}\n                title='Are you sure？'\n                okText='Yes'\n                cancelText='No'\n              >\n                <span className='iconSize iconSize-danger'>\n                  <DeleteOutlined />\n                </span>\n              </Popconfirm>\n            </Space>\n          )}\n        />\n      </Table>\n\n      {activeCategoryForEdit && (\n        <TagQuickEdit\n          tagList={data}\n          setTagList={setTagList}\n          tagEditVisible={visible}\n          setTagEditVisible={setvisible}\n          tagDetailData={activeCategoryForEdit}\n        />\n      )}\n    </>\n  );\n};\n\ninterface Props {}\n\nconst TagList = ({}: Props) => {\n  const [tagList, setTagList] = useState([]);\n\n  const [tagState, handleTagListFetch] = useHandleFetch({}, 'dealerAreaList');\n\n  useEffect(() => {\n    const setTags = async () => {\n      const tags = await handleTagListFetch({\n        urlOptions: {\n          params: {\n            sortItem: 'added',\n            sortOrderValue: '-1',\n          },\n        },\n      });\n      // @ts-ignore\n      setTagList(tags);\n    };\n    setTags();\n  }, []);\n\n  const [addNewCategoryVisible, setAddNewCategoryVisible] = useState(false);\n\n  const getisSubmitButtonDisabled = (values, isValid) => {\n    if (!values.name || !isValid) {\n      return true;\n    }\n    return false;\n  };\n\n  const handleOkAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleCancelAddNewCategory = (e: any) => {\n    setAddNewCategoryVisible(false);\n  };\n\n  const handleSearch = (value) => {\n    if (tagState.data.length > 0) {\n      const newTagList = tagState.data.filter((item) =>\n        item.name.toLowerCase().includes(value.toLowerCase())\n      );\n      setTagList(newTagList);\n    }\n  };\n\n  return (\n    <>\n      <div className='categoryListContainer'>\n        <div className='categoryListContainer__header'>\n          <div className='categoryListContainer__header-searchBar-tag'>\n            <h2 className='categoryListContainer__header-title'>Areas</h2>\n\n            <Search\n              enterButton={false}\n              className='searchbarClassName'\n              placeholder='search areas..'\n              onChange={(e) => handleSearch(e.target.value)}\n            />\n          </div>\n          <Button\n            // type=\"primary\"\n            className='btnPrimaryClassNameoutline'\n            icon={<PlusOutlined />}\n            onClick={() => setAddNewCategoryVisible(true)}\n          >\n            Add New\n          </Button>\n        </div>\n        <div className='categoryListContainer__categoryList'>\n          {tagState.done && tagList.length > 0 && (\n            <MyTable setTagList={setTagList} data={tagList} />\n          )}\n          {tagState.isLoading && <DataTableSkeleton />}\n\n          {tagState.done && !(tagList.length > 0) && (\n            <div\n              style={{\n                marginTop: '200px',\n              }}\n            >\n              <Empty\n                description='No Area found'\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <AddNewTag\n        tagList={tagList}\n        setTagList={setTagList}\n        addNewCategoryVisible={addNewCategoryVisible}\n        setAddNewCategoryVisible={setAddNewCategoryVisible}\n      />\n    </>\n  );\n};\n\nexport default TagList;\n","import React, { useState,useEffect } from 'react';\nimport { Modal, notification } from 'antd';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\n// import components\nimport Input from '../../../components/Field/Input';\nimport TextArea from '../../../components/Field/TextArea';\nimport { useHandleFetch } from '../../../hooks';\nimport { CheckCircleOutlined, PlusOutlined, EditOutlined, DeleteOutlined, EditFilled } from '@ant-design/icons';\nimport MetaTags from \"../../../pages/category/MetaTags\";\n\n\nconst validationSchema = Yup.object().shape({\n    name: Yup.string().label('Name').required('Name is required').min(3, 'Name must have at least 3 characters'),\n});\n\n\n\nconst openSuccessNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Area Updated',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgba(0, 128, 0, 0.493)' }} />,\n    });\n};\n\n\nconst openErrorNotification = (message?: any) => {\n    notification.success({\n        message: message || 'Something Went Wrong',\n        description: '',\n        icon: <CheckCircleOutlined style={{ color: 'rgb(241, 67, 67)' }} />,\n    });\n};\n\n\nconst initialValues = {\n    name: '',\n}\n\n\ninterface Props {\n    tagEditVisible?: any;\n    setTagEditVisible?: any;\n    tagDetailData?: any;\n    setTagDetailData?:any; \n}\n\nconst QuickEdit = ({ tagEditVisible, setTagEditVisible, tagDetailData,setTagDetailData }: Props) => {\n    const [updateTagState, handleUpdateCategoryFetch] = useHandleFetch({}, 'updateDealerArea');\n \n    \n\n    const handleSubmit = async (values: any, actions: any) => {\n        const updateTagRes = await handleUpdateCategoryFetch({\n            urlOptions: {\n                placeHolders: {\n                    id: values.id,\n                }\n            },\n            body: {\n                name: values.name,\n            \n            },\n        });\n\n        // @ts-ignore\n        if (updateTagRes && updateTagRes.status === 'ok') {\n            setTagDetailData({\n                id:values.id,\n                key:values.id,\n                name: values.name,\n            })\n            console.log('categoryupdateTagRes',updateTagRes);\n            openSuccessNotification();\n\n            // const positionInTag = () => {\n            //     return tagList.map(item => item.id).indexOf(category.id);\n            // }\n\n            // const index = positionInTag();\n\n            // const updatedItem = Object.assign({}, tagList[index], { ...updateTagRes });\n            // const updateTagList = [...tagList.slice(0, index), updatedItem, ...tagList.slice(index + 1)];\n            // setTagList(updateTagList);\n\n        }\n        else {\n            openErrorNotification();\n        }\n\n        actions.setSubmitting(false);\n        setTagEditVisible(false)\n    };\n\n\n    const handleCancel = (e: any) => {\n        setTagEditVisible(false);\n    };\n\n\n    const getisSubmitButtonDisabled = (values, isValid) => {\n        if (!values.name || !isValid) {\n            return true;\n        }\n        return false;\n    }; \n\n\n    // useEffect(()=>{\n\n    //     if(tagDetailData && Object.keys(tagDetailData).length > 0){\n    //         const metaTags = tagDetailData.metaTags.split(','); \n\n    //         console.log('localMetaTags',metaTags);\n           \n    //         const bnMetaTags = tagDetailData.bn['metaTags'].split(','); \n\n    //         setTags(metaTags)\n    //         setBnTags(bnMetaTags)\n    //     }\n\n    // },[]); \n\n\n    console.log('tagDetailData',tagDetailData);\n\n\n \n\n    return (\n        <Formik\n            onSubmit={(values, actions) => handleSubmit(values, actions)}\n            validationSchema={validationSchema}\n            validateOnBlur={false}\n            enableReinitialize={true}\n            initialValues={{\n                ...initialValues, \n                ...tagDetailData,\n                ...( tagDetailData && Object.keys(tagDetailData).length > 0 && {\n                    bnMetaTitle: tagDetailData['bn']\n                    && tagDetailData['bn'].metaTitle\n                    && tagDetailData['bn'].metaTitle,\n                    bnMetaDescription: tagDetailData['bn'] &&  tagDetailData['bn'].metaDescription && tagDetailData['bn'].metaDescription,\n                    bnName: tagDetailData['bn'] && tagDetailData['bn'].name && tagDetailData['bn'].name,\n                    bnDescription: tagDetailData['bn'] && tagDetailData['bn'].description && tagDetailData['bn'].description,\n                  })\n            }}\n        >\n            {({\n                handleChange,\n                values,\n                handleSubmit,\n                errors,\n                isValid,\n                isSubmitting,\n                touched,\n                handleBlur,\n                setFieldTouched,\n                handleReset,\n            }) => (\n                    <>\n                        <Modal\n                        \tstyle={{\n\t\t\t\t\t\t\t\ttop: '40px',\n\n\t\t\t\t\t\t\t}}\n                            title=\"Area Edit\"\n                            visible={tagEditVisible}\n                            onOk={(e: any) => handleSubmit(e)}\n                            onCancel={handleCancel}\n                            okText='Update'\n                            okButtonProps={{\n                                loading: isSubmitting,\n                                htmlType: \"submit\",\n                                disabled: getisSubmitButtonDisabled(values, isValid)\n                            }}\n                        >\n                            <Input\n\t\t\t\t\t\t\t\tlabel='Name'\n\t\t\t\t\t\t\t\tvalue={values.name}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tisError={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\n\n\t\t\t\t\t\t\t\terrorString={(touched.name && errors.name) ||\n\t\t\t\t\t\t\t\t\t(!isSubmitting && updateTagState.error['error']['name'])}\n\t\t\t\t\t\t\t\tonChange={(e: any) => {\n\t\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t\t\tsetFieldTouched('name');\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n                        </Modal>\n\n                    </>\n                )}\n        </Formik>\n    );\n};\n\n\nexport default QuickEdit;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\n\n// import hooks\nimport { useHandleFetch } from '../../../hooks';\n\n// import lib\nimport { EditOutlined } from '@ant-design/icons';\n\nimport {\n  Skeleton,\n  Empty,\n  Popconfirm,\n  Upload,\n  message,\n  Switch,\n  Select,\n  Button,\n  notification,\n  Table,\n  Space,\n  Input as CoolInput,\n  Tooltip,\n  Modal,\n} from 'antd';\n\n// import components\nimport { DataTableSkeleton } from '../../../components/Placeholders';\nimport TagEdit from './AreaEdit';\nimport moment from 'moment';\nconst { Column, ColumnGroup } = Table;\nconst { Search } = CoolInput;\n\ninterface Props {\n  productRecord?: any;\n}\n\nconst NewBrandDetail = (props: Props) => {\n  const [tagDetailState, handleTagDetailFetch] = useHandleFetch(\n    {},\n    'dealerAreaDetail'\n  );\n  const [tagProductsState, handleTagProductsFetch] = useHandleFetch(\n    {},\n    'dealerListByArea'\n  );\n\n  const [tagEditVisible, setTagEditVisible] = useState(false);\n  const [tagDetailData, setTagDetailData] = useState({});\n\n  console.log('dealerListByArea', tagProductsState);\n  const params = useParams();\n  const history = useHistory();\n  const tagId = params['id'];\n\n  useEffect(() => {\n    const getBrandDetail = async () => {\n      const tagDetailRes = await handleTagDetailFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n\n      // @ts-ignore\n      if (tagDetailRes) {\n        console.log('tagDetailRes', tagDetailRes);\n        // @ts-ignore\n        setTagDetailData(tagDetailRes);\n      }\n    };\n\n    getBrandDetail();\n  }, [tagId]);\n\n  useEffect(() => {\n    const getTagProducts = async () => {\n      await handleTagProductsFetch({\n        urlOptions: {\n          placeHolders: {\n            id: tagId,\n          },\n        },\n      });\n    };\n\n    getTagProducts();\n  }, [tagId]);\n\n  console.log('tagProductsState', tagProductsState);\n\n  console.log('brandParams', params);\n\n  return (\n    <div className='brandDetailContainer'>\n      <div className='brandDetailContainer__heading'>\n        <h3>Area Detail</h3>\n\n        {tagDetailState.done &&\n          tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && (\n            <>\n              <TagEdit\n                tagEditVisible={tagEditVisible}\n                setTagEditVisible={setTagEditVisible}\n                tagDetailData={tagDetailData}\n                setTagDetailData={setTagDetailData}\n              />\n              <Button\n                onClick={() => setTagEditVisible(true)}\n                type='link'\n                icon={<EditOutlined />}\n              >\n                Edit\n              </Button>\n            </>\n          )}\n      </div>\n      <Skeleton paragraph={{ rows: 2 }} loading={tagDetailState.isLoading}>\n        {tagDetailState.done &&\n          tagDetailData &&\n          !(Object.keys(tagDetailData).length > 0) && (\n            <Empty\n              description='No Area found'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          )}\n\n        {tagDetailState.done &&\n          tagDetailData &&\n          Object.keys(tagDetailData).length > 0 && (\n            <div className='brandDetailContainer__header'>\n              <div className='brandDetailContainer__header-info'>\n                <h2>{tagDetailData['name']}</h2>\n                {tagDetailData['url'] && (\n                  <h3>\n                    URL:\n                    <span>{tagDetailData['url']}</span>\n                  </h3>\n                )}\n              </div>\n            </div>\n          )}\n      </Skeleton>\n\n      <div className='brandDetailContainer__heading'>\n        <h3>Dealers</h3>\n      </div>\n      <div className='brandDetailContainer__body'>\n        {tagProductsState.isLoading && <DataTableSkeleton />}\n        {tagProductsState.done && !(tagProductsState.data.length > 0) && (\n          <div\n            style={{\n              marginTop: '100px',\n            }}\n          >\n            <Empty\n              description='No Dealer exists for this area'\n              image={Empty.PRESENTED_IMAGE_SIMPLE}\n            />\n          </div>\n        )}\n\n        {tagProductsState.done &&\n          tagProductsState.data &&\n          tagProductsState.data.length > 0 && (\n            <>\n              <Table\n                style={{\n                  paddingTop: '10px',\n                  borderRadius: '5px !important',\n                  overflow: 'hidden',\n                  boxShadow:\n                    '0 0.125rem 0.625rem rgba(227, 231, 250, 0.3), 0 0.0625rem 0.125rem rgba(206, 220, 233, 0.4)',\n                }}\n                // expandable={{\n                //     expandedRowRender: record => <p style={{ margin: 0 }}>{record.name}</p>,\n                //     rowExpandable: record => record.name !== 'Not Expandable',\n                //   }}\n                // bordered={true}\n                size='small'\n                // pagination={false}\n                dataSource={tagProductsState.data}\n                tableLayout={'auto'}\n                onHeaderRow={(column) => {\n                  return {\n                    style: {\n                      color: 'red !important',\n                    },\n                  };\n                }}\n              >\n                <Column\n                  title='Code'\n                  dataIndex='code'\n                  key='id'\n                  className='classnameofthecolumn'\n                  render={(text, record: any) => (\n                    <>\n                      <h4\n                        onClick={() => {\n                          history.push(`/admin/dealer/${record.id}`);\n                          // setcategoryDetailVisible(true);\n                        }}\n                        style={{\n                          fontWeight: 400,\n                          color: '#555',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        {text}\n                      </h4>\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Name'\n                  dataIndex='name'\n                  key='id'\n                  className='classnameofthecolumn'\n                  render={(text, record: any) => (\n                    <>\n                      <h4\n                        onClick={() => {\n                          history.push(`/admin/dealer/${record.id}`);\n                          // setcategoryDetailVisible(true);\n                        }}\n                        style={{\n                          fontWeight: 400,\n                          color: '#555',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        {text}\n                      </h4>\n                    </>\n                  )}\n                />\n\n                <Column\n                  title='Commission'\n                  dataIndex='commission'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  title='Deposit Money'\n                  dataIndex='depositMoney'\n                  key='id'\n                  className='classnameofthecolumn'\n                />\n\n                <Column\n                  width={150}\n                  title='Created'\n                  dataIndex='created'\n                  key='id'\n                  className='classnameofthecolumn'\n                  render={(text, record: any) => (\n                    <Space size='middle'>\n                      <h5>\n                        {text && moment(text).format('MMMM Do YYYY, h:mm:ss a')}\n                      </h5>\n                    </Space>\n                  )}\n                />\n              </Table>\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default NewBrandDetail;\n","import React from 'react';\n\n// import pages\nimport { Overview } from '../../pages/overview';\nimport { CategoryList, NewCategoryDetail } from '../../pages/category';\nimport {\n  ProductBundleDetail,\n  ProductBundleList,\n} from '../../pages/productBundle';\nimport { BrandList, AddNewBrand, NewBrandDetail } from '../../pages/brand';\nimport { ProductList, NewProductDetail } from '../../pages/product';\nimport { TagList, AddNewTag, NewTagDetail } from '../../pages/tag';\nimport { CouponList, CouponDetail } from '../../pages/coupon';\nimport { CustomerList, CustomerDetail } from '../../pages/customer';\nimport { PagesList, AddNewPage, PageDetail, PageEdit } from '../../pages/pages';\nimport { AttributeList } from '../../pages/attribute';\nimport {\n  OrderList,\n  AddNewOrder,\n  OrderDetail,\n  OrderAnalytics,\n  ConfigOrderStatus,\n} from '../../pages/order';\nimport {\n  Component,\n  ManageThemes,\n  Image,\n  Invoice,\n  SiteInfo,\n} from '../../pages/settings';\nimport { Delivery } from '../../pages/delivery';\nimport Sms from '../../pages/sms';\nimport { Email } from '../../pages/email';\nimport { NotificationList } from '../../pages/notification';\nimport { AdminList, AdminDetail } from '../../pages/admins';\nimport { PostList, PostDetail } from '../../pages/post';\nimport { StaffList, StaffDetail } from '../../pages/staff';\nimport {\n  SalaryReportDetail,\n  SalaryReportList,\n} from '../../pages/staff/salaryReport';\nimport { ExpenseList, ExpenseDetail } from '../../pages/expense';\nimport { DealerList, DealerDetail } from '../../pages/dealer';\nimport { AreaDetail, AreaList } from '../../pages/dealer/Area';\nimport {\n  PostTagList,\n  PostCategoryList,\n  NewPostCategoryDetail,\n  NewPostTagDetail,\n} from '../../pages/post';\n\n// import Login from '../../pages/auth/login';\n\n// import libraries\nimport { Layout } from 'antd';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nconst { Content } = Layout;\n\ninterface Props {}\n\nconst ContentComponent = (props: Props) => {\n  return (\n    <Content\n      hasSider={true}\n      style={{\n        backgroundColor: '#fff',\n        paddingTop: '20px',\n      }}\n    >\n      <Switch>\n        <Route\n          exact\n          path='/'\n          render={() => <Redirect to='/admin/overview' />}\n        />\n        <Route\n          exact\n          path='/admin'\n          render={() => <Redirect to='/admin/overview' />}\n        />\n        <Route path='/admin/overview' exact>\n          <Overview />\n        </Route>\n        <Route path='/admin/category' exact>\n          <CategoryList />\n        </Route>\n        <Route path='/admin/category/:id' exact>\n          <NewCategoryDetail />\n        </Route>\n        {/* <Route path='/admin/category/:name' exact>\n                    <CategoryDetail />\n                </Route> */}\n        {/* CategoryDetail */}\n        <Route path='/admin/brand/new' exact>\n          <AddNewBrand />\n        </Route>\n        <Route path='/admin/brand' exact>\n          <BrandList />\n        </Route>\n        <Route path='/admin/brand/:id' exact>\n          <NewBrandDetail />\n        </Route>\n        <Route path='/admin/product' exact>\n          <ProductList />\n        </Route>\n        <Route path='/admin/product/:id' exact>\n          <NewProductDetail />\n        </Route>\n        <Route path='/admin/bundle' exact>\n          <ProductBundleList />\n        </Route>\n        <Route path='/admin/bundle/:id' exact>\n          <ProductBundleDetail />\n        </Route>\n        <Route path='/admin/coupon' exact>\n          <CouponList />\n        </Route>\n        <Route path='/admin/posts' exact>\n          <PostList />\n        </Route>\n        <Route path='/admin/posts/tag' exact>\n          <PostTagList />\n        </Route>\n        <Route path='/admin/posts/category' exact>\n          <PostCategoryList />\n        </Route>\n        <Route path='/admin/posts/:id' exact>\n          <PostDetail />\n        </Route>\n        <Route path='/admin/posts/tag/:id' exact>\n          <NewPostTagDetail />\n        </Route>\n        <Route path='/admin/posts/category/:id' exact>\n          <NewPostCategoryDetail />\n        </Route>\n        <Route path='/admin/coupon/:id' exact>\n          <CouponDetail />\n        </Route>\n        <Route path='/admin/notification' exact>\n          <NotificationList />\n        </Route>\n        {/* <Route path='/product/new' exact>\n                     <AddNewProduct />\n                   </Route> */}\n        <Route path='/admin/tag' exact>\n          <TagList />\n        </Route>\n        <Route path='/admin/tag/new' exact>\n          <AddNewTag />\n        </Route>\n        <Route path='/admin/tag/:id' exact>\n          <NewTagDetail />\n        </Route>\n        <Route path='/admin/attribute' exact>\n          <AttributeList />\n        </Route>\n        <Route path='/admin/order' exact>\n          <OrderList />\n        </Route>\n        <Route path='/admin/order/new' exact>\n          <AddNewOrder />\n        </Route>\n        <Route path='/admin/order/overview' exact>\n          <OrderAnalytics />\n        </Route>\n        <Route path='/admin/order/config' exact>\n          <ConfigOrderStatus />\n        </Route>\n        <Route path='/admin/order/:id' exact>\n          <OrderDetail />\n        </Route>\n        <Route path='/admin/dealer' exact>\n          <DealerList />\n        </Route>\n        <Route path='/admin/dealer/area' exact>\n          <AreaList />\n        </Route>\n        <Route path='/admin/dealer/area/:id' exact>\n          <AreaDetail />\n        </Route>\n        <Route path='/admin/dealer/:id' exact>\n          <DealerDetail />\n        </Route>\n        <Route path='/admin/staff' exact>\n          <StaffList />\n        </Route>\n        <Route path='/admin/salaryReport' exact>\n          <SalaryReportList />\n        </Route>\n        <Route path='/admin/salaryReport/:id' exact>\n          <SalaryReportDetail />\n        </Route>\n        <Route path='/admin/staff/:id' exact>\n          <StaffDetail />\n        </Route>\n        <Route path='/admin/expense' exact>\n          <ExpenseList />\n        </Route>\n        <Route path='/admin/expense/:id' exact>\n          <ExpenseDetail />\n        </Route>\n\n        <Route path='/admin/acccounting/overview' exact>\n          <OrderList />\n        </Route>\n\n        <Route path='/admin/customer' exact>\n          <CustomerList />\n        </Route>\n        <Route path='/admin/customer/:id' exact>\n          <CustomerDetail />\n        </Route>\n        <Route path='/admin/page' exact>\n          <PagesList />\n        </Route>\n        <Route path='/admin/page/new' exact>\n          <AddNewPage />\n        </Route>\n        <Route path='/admin/page/edit/:id' exact>\n          <PageEdit />\n        </Route>\n\n        <Route path='/admin/page/:id' exact>\n          <PageDetail />\n        </Route>\n        <Route path='/admin/delivery' exact>\n          <Delivery />\n        </Route>\n        <Route path='/admin/settings/components' exact>\n          <Component />\n        </Route>\n        <Route path='/admin/settings/image' exact>\n          <Image />\n        </Route>\n        <Route path='/admin/settings/themes' exact>\n          <ManageThemes />\n        </Route>\n        <Route path='/admin/settings/invoice' exact>\n          <Invoice />\n        </Route>\n        <Route path='/admin/settings/siteInfo' exact>\n          <SiteInfo />\n        </Route>\n        <Route path='/admin/settings/admins' exact>\n          <AdminList />\n        </Route>\n        <Route path='/admin/settings/admins/:id' exact>\n          <AdminDetail />\n        </Route>\n        <Route path='/admin/sms' exact>\n          <Sms />\n        </Route>\n        <Route path='/admin/email' exact>\n          <Email />\n        </Route>\n      </Switch>\n    </Content>\n  );\n};\n\nexport default ContentComponent;\n","import Content from \"./Content\";\nexport default Content; ","import React, { useEffect } from 'react';\n\n// import pages\nimport Login from './pages/auth/login';\n\n// import layouts\nimport Sider from './layout/sider';\nimport Header from './layout/header';\nimport Content from './layout/content';\n// import Footer from './layout/footer';\n\n// import state\nimport { glboalOperations } from './state/ducks/globalState';\nimport { credentialsOperations } from './state/ducks/credentials';\nimport { connect } from 'react-redux';\n\n// import libraries\nimport { Layout } from 'antd';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n// import hooks\nimport { useHandleFetch } from './hooks';\n\nconst App = ({ saveRoles, saveCredentials }) => {\n  const [\n    getAdminCredentialState,\n    handleAdminCredentCialsFetch,\n  ] = useHandleFetch({}, 'getAdminCredential');\n\n  useEffect(() => {\n    const getCredenCials = async () => {\n      const res = await handleAdminCredentCialsFetch({});\n      // saveCredentials(res);\n      // @ts-ignore\n      if (res && res['role']) {\n        saveRoles(res['role'] || []);\n      }\n    };\n    getCredenCials();\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/admin/login' exact>\n          <Login />\n        </Route>\n      </Switch>\n      <Switch>\n        <Layout style={{ minHeight: '100vh' }}>\n          <Header />\n\n          <Layout className='site-layout'>\n            <Sider />\n            <Content />\n          </Layout>\n          {/* <Footer /> */}\n        </Layout>\n      </Switch>\n    </Router>\n  );\n};\n\nconst mapDispathToProps = {\n  saveRoles: glboalOperations.saveRoles,\n  saveCredentials: credentialsOperations.saveCredentials,\n};\n\nconst mapStateToProps = (state) => ({\n  globalState: state.globalState,\n});\n\n// @ts-ignore\nexport default connect(mapStateToProps, mapDispathToProps)(App);\n\n/* \n\n#product \n#order\n#category\n#order\n#customer\n#customer\n*/\n\n/*\n\nfix ===>\n\n// # product add -> category name search dile crash kore\n// # add order -> make delivery zone align as horizontal\n// # double notification -> when creating order \n// # customer detail -> customer er order history hobe\n// # customer list => add orderCount and totalOrderPrice field to show\n# customer List =>  user will be able to sort with them (sort=totalOrderPrice&sortOrder=-1) \n// # order analytics -> add metric=deliveryRegion \n# at the footer of analytic charts -> add a show data button -> on clicked show data as table \n# price price field - make input type number \n# delivery region edit\n# email api implementation\n# check if the tag edit works properly \n# on open product quick epit site crashes \n# product bundle detail -> show images in product bundle detail \n# fix the attach image in bundle \n# amount type will be drowpdown\n# add meta tags autofill in all items \n# add porst/add product => categories scrolbar\n# update all the item quick edit to item edit \n# make order edit functionality to quick order edit\n\n\nfeat ===> \n\n# dealer\n# bundle edit\n# coupon edit\n# post edit\n# post category edit\n# post tag edit (maybe)\n# notification\n# admin roles\n# dynamic order status\n# add dealer code at add order. \n# add coupon code at add order. \n*/\n\n/* \n\n*/\n\n/*\n\nissus ====> \n\nerror => product bundle ---> item not defined. \nerror => Cannot read property 'offer' of undefined. \nerror => coupon cover is coming as array in coupon list.\nerror => update post tag => Cannot read property 'name' of undefined. \nerror => add post category => checkMime is not defined probably because of the image.\npage update => {\"image\":\"selected image are not attached to page with given id\"}.\norder list => add delivery filtering drowndown\nrecipe category => fix recipe category edit and others'\nadd site map => at site info add a extra tab, --sitemap-- then in there show, site maps, and\nin below show update button which will update the site map. \nmake components images to update at once.  \n\n*/\n\n/* \n\nOff work left to do: \nFiltering order by deliveryzone\nmaking Post category work perfectly\nupdate component at once. \norder status is not working properly\nadmin roles\ngive resolved images when create a component\ncheck if productlist returns cover\nmake admin list section work properly\n*/\n\n/* \n\nThings that still left to do in mangshobazar: \n\nadd delete button in add new component\ncomplete salary report \nfix the order invoice \n\n\n// on change search in --> customer/recipe/dealer/staff\n\n\n\n\n----------------------------------------------------\nEDIT RECIPIE\t* bn fields not populating (preparationTime, servingSize) --> \nsuggestion --> change servingSize->serving\n   and preparationTime -> prepTime\t* servingSize is not defined error\n    on updateSINGLE RECIPIE PAGE\t* on edit shows \n   \"servingSize is not defined\"EDIT CATEGORY: \t* bn values and meta fields not populating on edit. \n\n\n\n\n\n   Design systems: \n   Lack of adoption is the number one why design system fails.\n*/\n","export function actionShouldBlock( meta ) {\n    return !meta || !meta.async || !meta.blocking;\n}\n\nexport function actionFinished ( type ) {\n    return type.includes( \"_COMPLETED\" ) || type.includes( \"_FAILED\" );\n}\n","import * as utils from \"./utils\";\n\nconst busyReducer = ( state = 0, action ) => {\n    if ( utils.actionShouldBlock( action.meta ) ) {\n        return state;\n    }\n    if ( utils.actionFinished( action.type ) ) {\n        return state - 1;\n    }\n    return state + 1;\n};\n\nexport default busyReducer;\n","import reducer from \"./reducers\";\n\nexport default reducer;\n","export function productPositionInCart(cart, product) {\n  return cart.map(item => item.product.id).indexOf(product.id);\n}\n\nexport function newCartItem(product, quantity, isSelectedForCheckout) {\n  return {\n    product,\n    quantity,\n    isSelectedForCheckout,\n  };\n}\n","export function getCartItemQuantity(cart, id) {\n  return cart.find((item) => item.product.id === id).quantity;\n}\n\nexport const getTotalPriceOfCartItems = (cartItems) => {\n  if (!cartItems.length > 0) {\n    return 0;\n  }\n\n  const prices = cartItems.map((cartItem) => {\n    return cartItem.quantity * parseInt(cartItem.product['price']) || 0;\n  });\n\n  const totalPrice = prices.reduce((a, b) => {\n    return a + b;\n  }, 0);\n  return totalPrice;\n};\n","import reducer from \"./reducers\";\n\nimport * as cartOperations from \"./operations\";\nimport * as cartSelectors from \"./selectors\";\n\nexport {\n    cartOperations,\n    cartSelectors,\n};\n\nexport default reducer;\n","import * as types from './types';\nimport * as utils from './utils';\nimport { createReducer } from '../../utils';\n\n/* State shape\n[\n    {\n        product,\n        quantity,\n    }\n]\n*/\n\nconst initialState = [];\n\nconst cartReducer = createReducer(initialState)({\n  [types.TOGGLE]: (state, action) => {\n    const { product, quantity, isSelectedForCheckout } = action.payload;\n    const index = utils.productPositionInCart(state, product);\n    if (index === -1) {\n      return [\n        utils.newCartItem(product, quantity, isSelectedForCheckout),\n        ...state,\n      ];\n    }\n\n    const tempArrayWithOutOldProduct = state.filter(\n      (item) => item.product.id !== product.id\n    );\n\n    return tempArrayWithOutOldProduct;\n  },\n\n  [types.ADD_PRODUCTS_TO_CART]: (state, action) => {\n    const { cartItems } = action.payload;\n\n    if (cartItems.length > 0) {\n      return cartItems;\n    } else {\n      return [...state];\n    }\n  },\n\n  [types.SELECT_PRODUCT_FOR_CHECKOUT]: (state, action) => {\n    const { product } = action.payload;\n\n    const index = utils.productPositionInCart(state, product.product);\n    if (index === -1) {\n      return [...state, { ...product, isSelectedForCheckout: true }];\n    } else if (index !== -1 && !product.isSelectedForCheckout) {\n      const tempArrayWithOutOldProduct = state.filter(\n        (item) => item.product.id !== product.product.id\n      );\n\n      return [\n        ...tempArrayWithOutOldProduct,\n        { ...product, isSelectedForCheckout: true },\n      ];\n    }\n\n    const tempArrayWithOutOldProduct = state.filter(\n      (item) => item.product.id !== product.product.id\n    );\n\n    return [\n      ...tempArrayWithOutOldProduct,\n      { ...product, isSelectedForCheckout: false },\n    ];\n  },\n\n  [types.CHANGE_QUANTITY]: (state, action) => {\n    const { product, quantity } = action.payload;\n    const index = utils.productPositionInCart(state, product);\n\n    const updatedItem = Object.assign({}, state[index], { quantity });\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\n  },\n  [types.REMOVE]: (state, action) => {\n    const { product } = action.payload;\n    const index = utils.productPositionInCart(state, product);\n    return [...state.slice(0, index), ...state.slice(index + 1)];\n  },\n  [types.CLEAR]: () => [],\n});\n\nexport default cartReducer;\n","export const SET_CART = 'cart/SET';\nexport const TOGGLE = 'cart/TOGGLE';\nexport const ADD_PRODUCTS_TO_CART = 'cart/ADD_PRODUCTS_TO_CART';\nexport const SELECT_PRODUCT_FOR_CHECKOUT = 'wishList/SELECT_PRODUCT_FOR_CHECKOUT';\nexport const CHANGE_QUANTITY = 'cart/CHANGE_QUANTITY';\nexport const REMOVE = 'cart/REMOVE';\nexport const CLEAR = 'cart/CLEAR';\n","export function productPositionInWishList(wishList, productId) {\n  return wishList.map(item => item).indexOf(productId);\n}\n","import reducer from './reducers';\n\nimport * as wishListOperations from './operations';\nimport * as wishListSelectors from './selectors';\n\nexport { wishListOperations, wishListSelectors };\n\nexport default reducer;\n","import * as types from './types';\nimport * as utils from './utils';\nimport { createReducer } from '../../utils';\n\n/* State shape\n[\n    {\n        product\n    }\n]\n*/\n\nconst initialState = [];\n\nconst wishListReducer = createReducer(initialState)({\n  [types.TOGGLE]: (state, action) => {\n    const { productId } = action.payload;\n\n    const index = utils.productPositionInWishList(state, productId);\n    if (index === -1) {\n      return [...state, productId];\n    }\n\n    const tempArrayWithOutOldProduct = state.filter(\n      (item) => item !== productId\n    );\n\n    return tempArrayWithOutOldProduct;\n  },\n  [types.ADD_WISHLIST]: (state, action) => {\n    const wishlist = action.payload;\n    return [...wishlist];\n  },\n\n  [types.REMOVE]: (state, action) => {\n    const { productId } = action.payload;\n    const index = utils.productPositionInWishList(state, productId);\n    return [...state.slice(0, index), ...state.slice(index + 1)];\n  },\n  [types.CLEAR]: () => [],\n});\n\nexport default wishListReducer;\n","export const TOGGLE = 'wishList/TOGGLE';\nexport const ADD_WISHLIST = 'wishList/ADD_WISHLIST';\nexport const REMOVE = 'wishList/REMOVE';\nexport const CLEAR = 'wishList/CLEAR';\n","export function getCartItemQuantity( cart, id ) {\n    return cart.find( item => item.product.id === id ).quantity;\n}\n\n\nexport const getTotalPriceOfCartItems = (cartItems) => {\n    if(!cartItems.length > 0){\n        return 0; \n    }\n\n    return cartItems.reduce((a,b) => {\n        return !(b.quantity > 1) && a + +b.product.price || +b.product.price * b.quantity\n    },0); \n\n}","import reducer from './reducers';\n\nimport * as checkoutOperations from './operations';\nimport * as checkoutSelectors from './selectors';\n\nexport { checkoutOperations, checkoutSelectors };\n\nexport default reducer;\n","import * as types from './types';\nimport * as utils from './utils';\nimport { createReducer } from '../../utils';\n\n/* State shape\n[\n    {\n        product,\n        quantity,\n    }\n]\n*/\n\nconst initialState = [];\n\nconst checkoutReducer = createReducer(initialState)({\n  [types.ADD_PRODUCTS_TO_CHECKOUT]: (state, action) => {\n    const { products } = action.payload;\n\n    if (products.length > 0) {\n      const uniqueProductsOfCheckout = products.filter(function(product) {\n        return state.indexOf(product) == -1;\n      });\n      return uniqueProductsOfCheckout;\n    } else {\n      return [...state];\n    }\n  },\n  [types.REMOVE]: (state, action) => {\n    const { product } = action.payload;\n    const index = utils.productPositionInCart(state, product);\n    return [...state.slice(0, index), ...state.slice(index + 1)];\n  },\n  [types.CLEAR]: () => [],\n});\n\nexport default checkoutReducer;\n","export const SET_CART = 'checkout/SET';\nexport const TOGGLE = 'checkout/TOGGLE';\nexport const ADD_PRODUCTS_TO_CHECKOUT = 'checkout/ADD_PRODUCTS_TO_CHECKOUT';\nexport const CHANGE_QUANTITY = 'checkout/CHANGE_QUANTITY';\nexport const REMOVE = 'checkout/REMOVE';\nexport const CLEAR = 'checkout/CLEAR';\n","export function productPositionInCart( cart, product ) {\n    return cart.map( item => item.product.id ).indexOf( product.id );\n}\n\nexport function newCartItem( product, quantity ) {\n    return {\n        product,\n        quantity,\n    };\n}\n","export const ADD = 'serach/ADD';\nexport const UPDATE = 'serach/UPDATE';\nexport const REMOVE = 'serach/REMOVE';\nexport const CLEAR = 'serach/CLEAR';\n","export function queryPositionInQueryList(queryList, query) {\n  return queryList.map(item => item.key).indexOf(query.key);\n}\n\nexport function newQueryItem(query) {\n  return query;\n}\n","import reducer from './reducers';\n\nimport * as queryOperations from './operations';\nimport * as querySelectors from './selectors';\n\nexport { queryOperations, querySelectors };\n\nexport default reducer;\n","import * as types from './types';\nimport * as utils from './utils';\nimport { createReducer } from '../../utils';\n\n/* State shape\n[\n    {\n       id: uniqueId,\n       key: 'searchQuery',\n       value: string | product => {name,id,image}\n       created: Date,\n       lastUpdated: Date\n    }\n]\n*/\n\nconst initialState = [];\n\nconst searyQueryReducer = createReducer(initialState)({\n  [types.ADD]: (state, action) => {\n    const { query } = action.payload;\n    const index = utils.queryPositionInQueryList(state, query);\n    if (index === -1) {\n      return [utils.newQueryItem(query), ...state];\n    }\n\n    const currentItem = state[index];\n    const updatedItem = Object.assign({}, currentItem);\n    return [...state.slice(0, index), updatedItem, ...state.slice(index + 1)];\n  },\n  [types.UPDATE]: (state, action) => {\n    const { query } = action.payload;\n    const oldQuery = state.find(item => item.key !== query.key);\n    const tempArrayWithOutOldQueries = state.filter(item => item.key !== query.key);\n    return [...tempArrayWithOutOldQueries, { ...oldQuery, ...query }];\n  },\n  [types.REMOVE]: (state, action) => {\n    const { product } = action.payload;\n    const index = utils.queryPositionInQueryList(state, product);\n    return [...state.slice(0, index), ...state.slice(index + 1)];\n  },\n  [types.CLEAR]: () => [],\n});\n\nexport default searyQueryReducer;\n","import { combineReducers } from \"redux\";\nimport * as types from \"./types\";\nimport { createReducer } from \"../../utils\";\n\n/* State shape\n{\n    details: product,\n    list: [ product ],\n}\n*/\n\nconst detailsReducer = createReducer( null )( {\n    [ types.FETCH_DETAILS_COMPLETED ]: ( state, action ) => action.payload.product,\n} );\n\nconst listReducer = createReducer( [ ] )( {\n    [ types.FETCH_LIST_COMPLETED ]: ( state, action ) => action.payload.products,\n} );\n\nexport default combineReducers( {\n    details: detailsReducer,\n    list: listReducer,\n} );\n","export const FETCH_DETAILS = \"product/FETCH_DETAILS\";\nexport const FETCH_DETAILS_COMPLETED = \"product/FETCH_DETAILS_COMPLETED\";\nexport const FETCH_DETAILS_FAILED = \"product/FETCH_DETAILS_FAILED\";\n\nexport const FETCH_LIST = \"product/FETCH_LIST\";\nexport const FETCH_LIST_COMPLETED = \"product/FETCH_LIST_COMPLETED\";\nexport const FETCH_LIST_FAILED = \"product/FETCH_LIST_FAILED\";\n","import reducer from \"./reducers\";\n\nimport * as productOperations from \"./operations\";\n\nexport {\n    productOperations,\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport * as types from './types';\nimport { createReducer } from '../../utils';\n\n/* State shape\n{\n    isAuthenticated: bool,\n    redirectAfterLogin: string\n}\n*/\n\nconst authReducer = createReducer(false)({\n  [types.LOGIN]: () => true,\n  [types.LOGOUT]: () => false,\n});\n\nconst redirectAfterLoginReducer = createReducer(null)({\n  [types.SET_REDIRECT_AFTER_LOGIN]: (state, action) => action.payload.redirectUrl,\n});\n\nexport default combineReducers({\n  isAuthenticated: authReducer,\n  redirectAfterLogin: redirectAfterLoginReducer,\n});\n","export const LOGIN = \"session/LOGIN\";\nexport const LOGIN_COMPLETED = \"session/LOGIN_COMPLETED\";\nexport const LOGIN_FAILED = \"session/LOGIN_FAILED\";\nexport const LOGOUT = \"session/LOGOUT\";\nexport const INITIALIZE = \"session/INITIALIZE_SESSION\";\nexport const SET_REDIRECT_AFTER_LOGIN = \"session/SET_REDIRECT_AFTER_LOGIN\";\nexport const ADD_CUSTOMER_DATA = \"session/ADD_CUSTOMER_DATA\";\n","import reducer from \"./reducers\";\n\nimport * as sessionOperations from \"./operations\";\n\nexport {\n    sessionOperations,\n};\n\nexport default reducer;\n","import * as types from './types';\nimport { createReducer } from '../../utils';\n\nconst initialState = [];\n\nconst cartReducer = createReducer(initialState)({\n  [types.ADD_CATEGORIES]: (state, action) => {\n    const { categories } = action.payload;\n\n    if (categories) {\n      return categories;\n    }\n\n    return [...state];\n  },\n\n  [types.GET_CATEGORIES]: (state, action) => {\n    return [...state];\n  },\n});\n\nexport default cartReducer;\n","export const ADD_CATEGORIES = 'category/ADD_CATEGORIES';\nexport const GET_CATEGORIES = 'category/GET_CATEGORIES';\n","import reducer from './reducers';\n\nimport * as categoryOperations from './operations';\nimport * as categorySelectors from './selectors';\n\nexport { categoryOperations, categorySelectors };\n\nexport default reducer;\n","import * as types from './types';\nimport { createReducer } from '../../utils';\n\nconst initialState = {};\n\nconst cartReducer = createReducer(initialState)({\n  [types.ADD_ITEM_TO_CACHE]: (state, action) => {\n    const { response } = action.payload;\n\n    if (response) {\n      return { ...state, ...response };\n    }\n\n    return { ...state };\n  },\n});\n\nexport default cartReducer;\n","export const ADD_ITEM_TO_CACHE = 'category/ADD_ITEM_TO_CACHE';\n","import reducer from './reducers';\n\nimport * as cacheOperations from './operations';\nimport * as cacheSelectors from './selectors';\n\nexport { cacheOperations, cacheSelectors };\n\nexport default reducer;\n","import * as types from './types';\nimport { createReducer } from '../../utils';\n\nconst initialState = [];\n\nconst cartReducer = createReducer(initialState)({\n  [types.ADD_BRAND]: (state, action) => {\n    const { brands } = action.payload;\n\n    if (brands) {\n      return brands;\n    }\n\n    return [...state];\n  },\n\n  [types.GET_BRAND]: (state, action) => {\n    return [...state];\n  },\n});\n\nexport default cartReducer;\n","export const ADD_BRAND = 'category/ADD_BRAND';\nexport const GET_BRAND = 'category/GET_BRAND';\n","import reducer from './reducers';\n\nimport * as brandOperations from './operations';\nimport * as brandSelectors from './selectors';\n\nexport { brandOperations, brandSelectors };\n\nexport default reducer;\n","import * as types from './types';\nimport { createReducer } from '../../utils';\n\nconst initialState = [];\n\nconst cartReducer = createReducer(initialState)({\n  [types.ADD_TAGS]: (state, action) => {\n    const { tags } = action.payload;\n\n    if (tags) {\n      return tags;\n    }\n\n    return [...state];\n  },\n\n  [types.GET_TAGS]: (state, action) => {\n    return [...state];\n  },\n});\n\nexport default cartReducer;\n","export const ADD_TAGS = 'tag/ADD_TAGS';\nexport const GET_TAGS = 'tag/GET_TAGS';\n","import reducer from './reducers';\n\nimport * as tagOperations from './operations';\nimport * as tagSelectors from './selectors';\n\nexport { tagOperations, tagSelectors };\n\nexport default reducer;\n","import { fetch } from \"../utils\";\n\nconst baseUrl = typeof document === \"undefined\" ? \"http://localhost:7777/api\" : \"/api\";\n\nconst apiService = ( ) => ( next ) => ( action ) => {\n    const result = next( action );\n    if ( !action.meta || !action.meta.async ) {\n        return result;\n    }\n\n    const { path, method = \"GET\", body } = action.meta;\n\n    if ( !path ) {\n        throw new Error( `'path' not specified for async action ${ action.type }` );\n    }\n\n    const url = `${ baseUrl }${ path }`;\n\n    return fetch( url, method, body ).then(\n        res => handleResponse( res, action, next ),\n        err => handleErrors( err, action, next ),\n    );\n};\n\nexport default apiService;\n\nfunction handleErrors( err, action, next ) {\n    next( {\n        type: `${ action.type }_FAILED`,\n        payload: err,\n        meta: action.meta,\n    } );\n\n    return Promise.reject( err );\n}\n\nfunction handleResponse( res, action, next ) {\n    next( {\n        type: `${ action.type }_COMPLETED`,\n        payload: res,\n        meta: action.meta,\n    } );\n\n    return res;\n}\n","const REGULAR = [\n    \"background: blue\",\n    \"color: white\",\n].join( \";\" );\n\nconst SUCCESS = [\n    \"background: green\",\n    \"color: white\",\n].join( \";\" );\n\nconst STARTED = [\n    \"background: darkorange\",\n    \"color: white\",\n].join( \";\" );\n\nconst FAILURE = [\n    \"background: red\",\n    \"color: white\",\n].join( \";\" );\n\nconst createLogger = ( active = true ) => ( store ) => ( next ) => ( action ) => {\n    if ( !active ) {\n        return next( action );\n    }\n\n    const prevState = store.getState( );\n    const result = next( action );\n    const nextState = store.getState( );\n    logGroupCollapsed( `%c ${ action.type } `, determineStyle( action ) );\n    logInfo( \"%cprev state\", \"color: darkorange\", prevState );\n    logInfo( \"%caction payload\", \"color: blue\", action.payload );\n    logInfo( \"%cnext state\", \"color: darkgreen\", nextState );\n    logGroupEnd( );\n    return result;\n};\n\nexport default createLogger;\n\nfunction logGroupCollapsed( ...args ) {\n    const logFunction = typeof console.groupCollapsed === \"function\" ? console.groupCollapsed : console.info;\n    logFunction( ...args );\n}\n\nfunction logGroupEnd( ...args ) {\n    const logFunction = typeof console.groupEnd === \"function\" ? console.groupEnd : console.info;\n    logFunction( ...args );\n}\n\nfunction logInfo( ...args ) {\n    console.info( ...args );\n}\n\nfunction determineStyle( action ) {\n    if ( !action.meta || !action.meta.async ) {\n        return REGULAR;\n    }\n\n    if ( action.type.indexOf( \"_COMPLETED\" ) > -1 ) {\n        return SUCCESS;\n    }\n\n    if ( action.type.indexOf( \"_FAILED\" ) > -1 ) {\n        return FAILURE;\n    }\n\n    return STARTED;\n}\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport * as reducers from './ducks';\nimport { apiService } from './middlewares';\n\nconst rootReducer = combineReducers(reducers);\n\nconst persistConfig = {\n  key: 'shop',\n  storage: storage,\n  // whitelist: ['session'], // which reducer want to store\n};\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nfunction configureStore(initialState) {\n  return createStore(\n    pReducer,\n    initialState,\n    compose(\n      applyMiddleware(apiService),\n      window.__REDUX_DEVTOOLS_EXTENSION__\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\n        : (f) => f\n    )\n  );\n}\n\nconst store = configureStore({});\n\nconst persistor = persistStore(store);\n\nexport { persistor, store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport App from './App';\n\n// import redux store\nimport { store } from './state/store';\n\n// import the main files of styles\nimport './styles/_main.scss';\n\n\n// importing react hot loader for hot loading\nimport { AppContainer } from 'react-hot-loader';\n\n\n// Wrap the rendering in a function:\nconst render = () => {\n\tReactDOM.render(\n\t\t<ReduxProvider store={store}>\n\t\t\t<AppContainer>\n\t\t\t\t<App />\n\t\t\t</AppContainer>\n\t\t</ReduxProvider>,\n\t\tdocument.getElementById('root')\n\t);\n};\n\n\n// Render once\nrender();\n\n\n\n// Webpack Hot Module Replacement API\nif (module['hot']) {\n\tmodule['hot'].accept('./App', () => {\n\t\trender();\n\t});\n}\n\n\n"],"sourceRoot":""}